### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommandBuilder
  id: OleDbCommandBuilder
  children:
  - System.Data.OleDb.OleDbCommandBuilder.#ctor
  - System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  - System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  - System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  - System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  langs:
  - csharp
  name: OleDbCommandBuilder
  nameWithType: OleDbCommandBuilder
  fullName: System.Data.OleDb.OleDbCommandBuilder
  type: Class
  summary: "自动生成用于协调对所做更改的单表命令<xref href=&quot;System.Data.DataSet&quot;></xref>通过关联的数据库。 此类不能被继承。"
  remarks: "<xref:System.Data.OleDb.OleDbDataAdapter>不会自动生成所需进行对帐对所做更改的 SQL 语句<xref:System.Data.DataSet>与关联的数据源。</xref:System.Data.DataSet> </xref:System.Data.OleDb.OleDbDataAdapter> 但是，你可以在其中创建以自动生成单表更新的 SQL 语句，如果设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>属性的<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> OleDbCommandBuilder 对象 然后，由 OleDbCommandBuilder 生成未设置任何其他 SQL 语句。       OleDbCommandBuilder 将自己注册为侦听器<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>事件每当你设置<xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A>属性。</xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 你可以仅将一个相关联<xref:System.Data.OleDb.OleDbDataAdapter>或 OleDbCommandBuilder 对象相互一次。</xref:System.Data.OleDb.OleDbDataAdapter>       若要生成 INSERT、 UPDATE 或 DELETE 语句，OleDbCommandBuilder 使用<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>要自动检索所需的元数据集属性。</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 如果你更改<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>检索的元数据，如第一次更新，应调用后<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法来更新元数据。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>       OleDbCommandBuilder 还使用<xref:System.Data.OleDb.OleDbCommand.Connection%2A>， <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>，和<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>属性引用的<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbCommand.Transaction%2A> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommand.Connection%2A> 用户应调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果修改一个或多个这些属性，或如果<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>本身被替换。</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则为<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>， <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>，和<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>属性保留其以前的值。</xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>       如果调用<xref:System.ComponentModel.Component.Dispose%2A>，与关联被断开 OleDbCommandBuilder <xref:System.Data.OleDb.OleDbDataAdapter>，并且不再使用所生成的命令。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  example:
  - "The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OleDbCommandBuilder.  \n  \n [!code-cs[Classic WebData OleDbCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_6_1.cs)]\n [!code-vb[Classic WebData OleDbCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_6_1.vb)]"
  syntax:
    content: 'public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: OleDbCommandBuilder()
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder()
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbCommandBuilder&quot;></xref>类。"
  syntax:
    content: public OleDbCommandBuilder ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  id: '#ctor(System.Data.OleDb.OleDbDataAdapter)'
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: OleDbCommandBuilder(OleDbDataAdapter)
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbCommandBuilder&quot;></xref>使用关联的类<xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>对象。"
  remarks: "<xref:System.Data.OleDb.OleDbCommandBuilder>将自己注册为侦听器<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>由生成的事件<xref:System.Data.OleDb.OleDbDataAdapter>此属性中指定。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> </xref:System.Data.OleDb.OleDbCommandBuilder>       当你创建的新实例<xref:System.Data.OleDb.OleDbCommandBuilder>，任何现有<xref:System.Data.OleDb.OleDbCommandBuilder>与此关联<xref:System.Data.OleDb.OleDbDataAdapter>发布。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbCommandBuilder>"
  syntax:
    content: public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.OleDb.OleDbDataAdapter
      description: "An <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>."
  overload: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "要添加。"
    - id: datarow
      type: System.Data.DataRow
      description: "要添加。"
    - id: statementType
      type: System.Data.StatementType
      description: "要添加。"
    - id: whereClause
      type: System.Boolean
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
  fullName: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置<xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>对于哪些 SQL 语句会自动生成的对象。"
  remarks: "<xref:System.Data.OleDb.OleDbCommandBuilder>将自己注册为侦听器<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>由生成的事件<xref:System.Data.OleDb.OleDbDataAdapter>此属性中指定。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> </xref:System.Data.OleDb.OleDbCommandBuilder>       当你创建的新实例<xref:System.Data.OleDb.OleDbCommandBuilder>，任何现有<xref:System.Data.OleDb.OleDbCommandBuilder>与此关联<xref:System.Data.OleDb.OleDbDataAdapter>发布。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbCommandBuilder>"
  syntax:
    content: public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.OleDb.OleDbDataAdapter
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>对象。"
  overload: System.Data.OleDb.OleDbCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  id: DeriveParameters(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OleDbCommand)
  nameWithType: OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  fullName: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "从存储过程中指定检索参数信息<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>并填充<xref:System.Data.OleDb.OleDbCommand.Parameters*>的指定集合<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>对象。</xref:System.Data.OleDb.OleDbCommand.Parameters*>"
  remarks: "DeriveParameters 覆盖<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>任何现有参数信息       DeriveParameters 需要额外调用数据源以获取信息。 如果在提前知道参数信息，则更有效地通过显式设置的信息填充的参数集合。       你可以仅 DeriveParameters 使用存储过程。 你无法使用 DeriveParameters 填充<xref:System.Data.OleDb.OleDbParameterCollection>使用任意 Transact SQL 语句，例如参数化的 SELECT 语句。</xref:System.Data.OleDb.OleDbParameterCollection>       有关详细信息，请参阅[配置参数和参数数据类型](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);
    parameters:
    - id: command
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>引用存储的过程是派生参数信息。 派生的参数添加到<xref:System.Data.OleDb.OleDbCommand.Parameters*>集合<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>。</xref:System.Data.OleDb.OleDbCommand.Parameters*>"
  overload: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基础 OLE DB 提供程序不支持返回存储的过程的参数信息、 命令文本不是有效的存储的过程名称，或<xref:System.Data.OleDb.OleDbCommand.CommandType*>指定未<xref uid=&quot;langword_csharp_StoredProcedure&quot; name=&quot;StoredProcedure&quot; href=&quot;&quot;> </xref>。</xref:System.Data.OleDb.OleDbCommand.CommandType*>"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OleDbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行删除操作的数据源所需的对象。"
  remarks: "应用程序可用于 GetDeleteCommand 方法条信息性或故障排除目的因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</xref:System.Data.OleDb.OleDbCommand>       你还可以用作 GetDeleteCommand 修改命令的基础。 例如，你可能会调用 GetDeleteCommand 和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>       当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则，将为 GetDeleteCommand 仍将使用从上一条语句，这可能不是正确的信息。 应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>或 GetDeleteCommand。</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行删除操作所需的对象。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行删除操作的数据源所需的对象。"
  remarks: "应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>       你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 例如，你可能在其中调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>       当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 当应用程序调用其中一种<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>。</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A></xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.OleDb.OleDbCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.OleDb.OleDbCommandBuilder> 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，如果可能，则生成与列名称相匹配的参数名称。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，生成@p1， @p2，依次类推。"
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行删除操作所需的对象。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OleDbCommandBuilder.GetInsertCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行数据源中的插入所需的对象。"
  remarks: "应用程序可用于 GetInsertCommand 方法条信息性或故障排除目的因为它返回的文本<xref:System.Data.OleDb.OleDbCommand>要执行对象。</xref:System.Data.OleDb.OleDbCommand>       你还可以用作 GetInsertCommand 修改命令的基础。 例如，你可能会调用 GetInsertCommand 和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>       当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则，将为 GetInsertCommand 仍将使用从上一条语句，这可能不是正确的信息。 应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>或 GetInsertCommand。</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行插入所需的对象。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行数据源中的插入所需的对象。"
  remarks: "应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>方法为信息性或故障排除目的，因为它返回的文本<xref:System.Data.OleDb.OleDbCommand>要执行对象。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>       你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 例如，你可能在其中调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>       当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 当应用程序调用其中一种<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>。</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A></xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.OleDb.OleDbCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.OleDb.OleDbCommandBuilder> 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，如果可能，则生成与列名称相匹配的参数名称。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，生成@p1， @p2，依次类推。"
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行插入所需的对象。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OleDbCommandBuilder.GetParameterName(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OleDbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行数据源中的更新所需的对象。"
  remarks: "应用程序可用于 GetUpdateCommand 方法条信息性或故障排除目的因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</xref:System.Data.OleDb.OleDbCommand>       你还可以用作 GetUpdateCommand 修改命令的基础。 例如，你可能会调用 GetUpdateCommand 和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>       当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则，将为 GetUpdateCommand 仍将使用从上一条语句，这可能不是正确的信息。 应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>或 GetUpdateCommand。</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行更新所需的对象。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行在数据源，（可选） 使用作为参数名称的列的更新所需的对象。"
  remarks: "应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>       你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 例如，你可能在其中调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后显式设置的时间为<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>       当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 当应用程序调用其中一种<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>。</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A></xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.OleDb.OleDbCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.OleDb.OleDbCommandBuilder> 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，如果可能，则生成与列名称相匹配的参数名称。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，生成@p1， @p2，依次类推。"
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自动生成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行更新所需的对象。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "指定在正确的目录的情况下不带引号的标识符，则会返回正确带引号的该标识符的形式。 这包括正确转义任何在标识符中嵌入的引号。"
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "原始不带引号的标识符。"
    return:
      type: System.String
      description: "带引号的标识符的版本。 正确转义标识符中嵌入的引号。"
  overload: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  id: QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "指定在正确的目录的情况下不带引号的标识符，则会返回正确带引号的该标识符的形式。 这包括正确转义任何在标识符中嵌入的引号。"
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "要返回带引号的格式不带引号的标识符。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "当连接传递时，会导致以从 OLE DB 提供程序获取引号字符的托管的包装。 当没有连接传递时，字符串括在引号中的值使用<> *1> 和<> *1>。"
    return:
      type: System.String
      description: "带引号的标识符的版本。 正确转义标识符中嵌入的引号。"
  overload: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "指定带引号的标识符，则会返回该标识符的正确却未加引号的形式。 这包括正确地取消转义任何嵌入的引号在标识符中。"
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "将已删除其嵌入的引号的标识符。"
    return:
      type: System.String
      description: "不带引号的标识符，使用嵌入的引号正确取消转义。"
  overload: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  id: UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "指定带引号的标识符，则会返回该标识符的正确却未加引号的形式。 这包括正确地取消转义任何嵌入的引号在标识符中。"
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "将已删除其嵌入的引号的标识符。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "The <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>."
    return:
      type: System.String
      description: "不带引号的标识符，使用嵌入的引号正确取消转义。"
  overload: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder()
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder()
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder()
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder(OleDbDataAdapter)
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
- uid: System.Data.OleDb.OleDbDataAdapter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter
  fullName: System.Data.OleDb.OleDbDataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
  fullName: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DeriveParameters(OleDbCommand)
  nameWithType: OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  fullName: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(OleDbCommand)
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OleDbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OleDbCommandBuilder.GetInsertCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OleDbCommandBuilder.GetParameterName(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OleDbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OleDbCommandBuilder.DeriveParameters
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OleDbCommandBuilder.GetDeleteCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OleDbCommandBuilder.GetInsertCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OleDbCommandBuilder.GetParameterName
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OleDbCommandBuilder.GetUpdateCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OleDbCommandBuilder.QuoteIdentifier
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier
