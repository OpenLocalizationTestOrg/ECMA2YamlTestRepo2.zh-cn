### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.HandleExternalEventActivity
  id: HandleExternalEventActivity
  children:
  - System.Workflow.Activities.HandleExternalEventActivity.#ctor
  - System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  - System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  - System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  - System.Workflow.Activities.HandleExternalEventActivity.EventName
  - System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  - System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  - System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Invoked
  - System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  - System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  - System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  - System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Roles
  - System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: HandleExternalEventActivity
  nameWithType: HandleExternalEventActivity
  fullName: System.Workflow.Activities.HandleExternalEventActivity
  type: Class
  summary: "定义用于处理由本地服务引发的事件工作流通信活动。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]本地服务是一个类以实现本地服务接口 (使用标记的接口<xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) 并添加到<xref:System.Workflow.Activities.ExternalDataExchangeService>.</xref:System.Workflow.Activities.ExternalDataExchangeService> </xref:System.Workflow.Activities.ExternalDataExchangeAttribute>       HandleExternalEventActivity 接收数据时的<xref:System.Workflow.Activities.ExternalDataExchangeService>服务引发具有从<xref:System.Workflow.Activities.ExternalDataEventArgs>.</xref:System.Workflow.Activities.ExternalDataEventArgs>派生的事件数据的事件</xref:System.Workflow.Activities.ExternalDataExchangeService>       HandleExternalEventActivity 是阻止活动。       从 HandleExternalEventActivity 派生的类不应实现<xref:System.Workflow.ComponentModel.IActivityEventListener%601>接口，因为派生的类无法正确执行。</xref:System.Workflow.ComponentModel.IActivityEventListener%601>"
  example:
  - "The following code example shows how to create and set values for the HandleExternalEventActivity class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Invoked")]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.HandleExternalEventActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.HandleExternalEventActivityValidator))]

      public class HandleExternalEventActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.Activities.IEventActivity
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleExternalEventActivity()
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class. This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public HandleExternalEventActivity ();
    parameters: []
  overload: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleExternalEventActivity(String)
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity(String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;></xref>类使用活动的名称。"
  syntax:
    content: public HandleExternalEventActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "活动的用户定义名称。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "取消对事件的处理。"
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>表示的执行环境<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>的<xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;></xref>末尾的请求的操作。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  id: CorrelationToken
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取或设置绑定<xref href=&quot;System.Workflow.Runtime.CorrelationToken&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example shows how to access the `CorrelationToken` property of a `HandleExternalEventActivity`. This example is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[Wf_samples#198](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#198)]\n [!code-vb[Wf_samples#198](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#198)]"
  syntax:
    content: public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }
    return:
      type: System.Workflow.Runtime.CorrelationToken
      description: "此属性用于关联到正确的事件<xref href=&quot;System.Workflow.Activities.IEventActivity&quot;> </xref>-继承基于事件的负载的活动。 例如，当单个工作流实例正在侦听同一事件的多个实例在同一时间， <xref uid=&quot;langword_csharp_CorrelationToken&quot; name=&quot;CorrelationToken&quot; href=&quot;&quot;> </xref>属性用于将事件路由到正确的活动在工作流实例中。       不应与关联事件与正确的工作流实例混淆此关联。 正确的工作流实例建立关联，可以将该事件发送到显式工作流实例，使用<xref:System.Workflow.Activities.ExternalDataEventArgs.InstanceId*>属性正确地标识正确的工作流实例。</xref:System.Workflow.Activities.ExternalDataEventArgs.InstanceId*>       [!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)]关联，请参阅[关联本地服务示例](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  id: CorrelationTokenProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: CorrelationTokenProperty
  nameWithType: HandleExternalEventActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*>属性。</xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName
  id: EventName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取引发的事件的名称。 必须设置此属性，本地通信才能发生。"
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public virtual string EventName { get; set; }
    return:
      type: System.String
      description: "引发事件的名称。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.EventName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  id: EventNameProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: EventNameProperty
  nameWithType: HandleExternalEventActivity.EventNameProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "对应于在使用已标记的接口中定义的事件的名称<xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty EventNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "尝试运行<xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;></xref>与关联<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>。"
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>与关联<xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref>。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>的<xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;></xref>末尾的请求的操作。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "在此实例的执行上下文中引发异常时调用。"
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>此实例。"
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>导致此错误。</xref:System.Exception>"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref>中时得到的尝试取消此实例。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.HandleFault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exception</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: HandleExternalEventActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "初始化具有服务提供程序的事件。"
  syntax:
    content: protected override sealed void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供自定义支持添加到类。</xref:System.IServiceProvider>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，服务提供程序的类型为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)，或服务提供程序代理为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: HandleExternalEventActivity.InitializeProperties()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "对依赖项属性执行初始化。"
  remarks: "此方法初始化<xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>属性、 验证<xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>和<xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A>属性设置和验证事件中引用<xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A>可以在中引用的接口中找到属性<xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>属性。</xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>"
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  id: InterfaceType
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取或设置<xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;></xref>属性化处理其事件的本地服务接口类型。 必须设置此属性，本地通信才能发生。"
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public virtual Type InterfaceType { get; set; }
    return:
      type: System.Type
      description: "处理其事件的本地服务接口类型。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  id: InterfaceTypeProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InterfaceTypeProperty
  nameWithType: HandleExternalEventActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "对应于已与标记的接口的名称<xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  id: Invoked
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Invoked
  nameWithType: HandleExternalEventActivity.Invoked
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "当接收到外部事件时发生。"
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.ExternalDataEventArgs> Invoked;
    return:
      type: System.EventHandler{System.Workflow.Activities.ExternalDataEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  id: InvokedEvent
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InvokedEvent
  nameWithType: HandleExternalEventActivity.InvokedEvent
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "定义在活动接收从本地服务的预期的事件之后执行的事件委托。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: HandleExternalEventActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "由工作流运行时为活动的转换到的一部分调用<xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;></xref>状态。"
  remarks: "此方法使活动能够清理其执行期间使用的资源。"
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服务。</xref:System.IServiceProvider>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  id: OnInvoked(System.EventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: OnInvoked(EventArgs)
  nameWithType: HandleExternalEventActivity.OnInvoked(EventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(EventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "接收到外部事件以允许派生的类可以处理入站后立即调用<xref:System.EventArgs>在活动关闭之前。</xref:System.EventArgs>"
  remarks: "在派生类中的 OnInvoked 方法的最常见用途是将成员提取从接收<xref:System.EventArgs>设置派生类活动的公共属性的值。</xref:System.EventArgs>"
  example:
  - "The following example shows an implementation of the `OnInvoked` method. This example is from the Correlated Local Service SDK sample, from the TaskCompleted.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[Wf_samples#223](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#223)]\n [!code-vb[Wf_samples#223](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#223)]"
  syntax:
    content: protected virtual void OnInvoked (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>接收从刚刚接收的外部事件。</xref:System.EventArgs>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取参数绑定的集合。"
  remarks: ''
  example:
  - "The following example shows how to access the `ParameterBindings` property. This example is from the Ordering State Machine SDK sample, from the SampleWorkflow.designer.cs file.  [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \n  \n [!code-cs[wf_samples#125](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#125)]\n [!code-vb[wf_samples#125](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#125)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "参数绑定的集合。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  id: ParameterBindingsProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: ParameterBindingsProperty
  nameWithType: HandleExternalEventActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*>属性。</xref:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles
  id: Roles
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Roles
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取或设置对工作流角色集合的引用。"
  remarks: "<xref:System.Workflow.Activities.WorkflowRoleCollection>限制的用户可以将消息发送到通过工作流实例集<xref:System.Workflow.Activities.HandleExternalEventActivity>活动。</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.WorkflowRoleCollection>"
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }
    return:
      type: System.Workflow.Activities.WorkflowRoleCollection
      description: "工作流角色集合。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.Roles*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  id: RolesProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: RolesProperty
  nameWithType: HandleExternalEventActivity.RolesProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "标识允许将消息发送从宿主到此活动的有效用户角色。 两种类型的受支持的角色是 Active Directory 和 ASP.NET。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  id: System#Workflow#Activities#IEventActivity#QueueName
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取的名称<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>上该活动正在等待数据到达。"
  syntax:
    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }
    return:
      type: System.IComparable
      description: "名称<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>上该活动正在等待数据到达。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "创建的订阅<xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;></xref>活动对事件。"
  syntax:
    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>表示的执行环境<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>父事件。</xref:System.EventHandler>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "取消的订阅<xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;></xref>活动对事件。"
  syntax:
    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>表示的活动的执行环境。"
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>父事件。</xref:System.EventHandler>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "要添加。"
    - id: e
      type: System.Workflow.ComponentModel.QueueEventArgs
      description: "要添加。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "返回指定属性的访问类型。"
  remarks: "在编译时用于验证属性正确绑定到一个其他。 如果没有此接口，则直接从属性的 getter/setter 推断此信息。"
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "实现的对象<xref:System.IServiceProvider>提供访问设计时服务，如有必要。</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "属性的名称。"
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "<xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref>表示属性访问级别的枚举值。"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "返回<xref:System.Type>指定属性。</xref:System.Type>"
  remarks: "在编译时用于验证属性正确绑定到一个其他。"
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "实现的对象<xref:System.IServiceProvider>提供访问设计时服务，如有必要。</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "属性的名称。"
    return:
      type: System.Type
      description: "<xref:System.Type>作为传递其名称的属性<code> propertyName </code>参数。</xref:System.Type>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity()
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity()
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity(String)
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity(String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
- uid: System.Workflow.Runtime.CorrelationToken
  parent: System.Workflow.Runtime
  isExternal: false
  name: CorrelationToken
  nameWithType: CorrelationToken
  fullName: System.Workflow.Runtime.CorrelationToken
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationTokenProperty
  nameWithType: HandleExternalEventActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventName
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventNameProperty
  nameWithType: HandleExternalEventActivity.EventNameProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: HandleExternalEventActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: HandleExternalEventActivity.InitializeProperties()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties()
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceTypeProperty
  nameWithType: HandleExternalEventActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Invoked
  nameWithType: HandleExternalEventActivity.Invoked
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Invoked
- uid: System.EventHandler{System.Workflow.Activities.ExternalDataEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ExternalDataEventArgs>
  nameWithType: EventHandler<ExternalDataEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.ExternalDataEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.ExternalDataEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.ExternalDataEventArgs
    name: ExternalDataEventArgs
    nameWithType: ExternalDataEventArgs
    fullName: ExternalDataEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InvokedEvent
  nameWithType: HandleExternalEventActivity.InvokedEvent
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: HandleExternalEventActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(IServiceProvider)
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnInvoked(EventArgs)
  nameWithType: HandleExternalEventActivity.OnInvoked(EventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindingsProperty
  nameWithType: HandleExternalEventActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Roles
- uid: System.Workflow.Activities.WorkflowRoleCollection
  parent: System.Workflow.Activities
  isExternal: false
  name: WorkflowRoleCollection
  nameWithType: WorkflowRoleCollection
  fullName: System.Workflow.Activities.WorkflowRoleCollection
- uid: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: RolesProperty
  nameWithType: HandleExternalEventActivity.RolesProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.QueueEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: QueueEventArgs
  nameWithType: QueueEventArgs
  fullName: System.Workflow.ComponentModel.QueueEventArgs
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Cancel
  nameWithType: HandleExternalEventActivity.Cancel
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Execute
  nameWithType: HandleExternalEventActivity.Execute
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleFault
  nameWithType: HandleExternalEventActivity.HandleFault
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Initialize
  nameWithType: HandleExternalEventActivity.Initialize
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: HandleExternalEventActivity.InitializeProperties
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnClosed
  nameWithType: HandleExternalEventActivity.OnClosed
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnInvoked
  nameWithType: HandleExternalEventActivity.OnInvoked
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
