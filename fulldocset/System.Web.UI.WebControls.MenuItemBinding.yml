### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemBinding
  id: MenuItemBinding
  children:
  - System.Web.UI.WebControls.MenuItemBinding.#ctor
  - System.Web.UI.WebControls.MenuItemBinding.DataMember
  - System.Web.UI.WebControls.MenuItemBinding.Depth
  - System.Web.UI.WebControls.MenuItemBinding.Enabled
  - System.Web.UI.WebControls.MenuItemBinding.EnabledField
  - System.Web.UI.WebControls.MenuItemBinding.FormatString
  - System.Web.UI.WebControls.MenuItemBinding.ImageUrl
  - System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
  - System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
  - System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
  - System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
  - System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
  - System.Web.UI.WebControls.MenuItemBinding.Selectable
  - System.Web.UI.WebControls.MenuItemBinding.SelectableField
  - System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
  - System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
  - System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.MenuItemBinding.Target
  - System.Web.UI.WebControls.MenuItemBinding.TargetField
  - System.Web.UI.WebControls.MenuItemBinding.Text
  - System.Web.UI.WebControls.MenuItemBinding.TextField
  - System.Web.UI.WebControls.MenuItemBinding.ToolTip
  - System.Web.UI.WebControls.MenuItemBinding.ToolTipField
  - System.Web.UI.WebControls.MenuItemBinding.ToString
  - System.Web.UI.WebControls.MenuItemBinding.Value
  - System.Web.UI.WebControls.MenuItemBinding.ValueField
  langs:
  - csharp
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding
  type: Class
  summary: "定义数据项和它所绑定到中的菜单项之间的关系<xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref>控件。 此类不能被继承。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到其中的每个数据项包含多个字段的数据源 （如具有多个特性的 XML 元素），如果未不定义任何菜单项绑定，菜单项显示返回的值`ToString()`方法默认情况下的数据项。</xref:System.Web.UI.WebControls.Menu> 对于 XML 元素，该菜单项显示的元素名称，但显示的基础结构的菜单上，否则不是非常有用。 通过指定菜单项绑定，可以将菜单项的属性绑定到特定的字段。 MenuItemBinding 对象用于定义每个数据项和它所绑定到的菜单项之间的关系。      1> [!NOTE]&1;> 时<xref:System.Web.UI.WebControls.Menu>控件绑定到<xref:System.Web.UI.WebControls.SiteMapDataSource>控件，菜单项绑定不起任何作用。</xref:System.Web.UI.WebControls.SiteMapDataSource> </xref:System.Web.UI.WebControls.Menu> 使用站点地图提供商提供自动执行绑定。       <xref:System.Web.UI.WebControls.Menu>控制其 MenuItemBinding 将对象存储在<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>属性并将绑定应用于要创建菜单层次结构和数据源层次结构之间的一对一关系的数据源。</xref:System.Web.UI.WebControls.Menu.DataBindings%2A> </xref:System.Web.UI.WebControls.Menu> 为数据源中的每个数据项<xref:System.Web.UI.WebControls.Menu>控件尝试匹配到 MenuItemBinding 对象以创建相应的数据项<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.Menu>       创建 MenuItemBinding 对象时，你必须指定绑定的条件。 该条件指示何时数据项应绑定到的菜单项。 你可以指定<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>、 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>，和/或文件名。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       菜单项深度指定获取绑定的菜单级别。 例如，以下 MenuItemBinding 声明将绑定到数据源的名称和 ID 字段<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性，分别的所有节点的深度为 0:```   <asp:MenuItemBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ```数据成员在基础数据源中，指定的数据项目类型，但可以表示不同的信息，具体取决于数据源。</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 层次结构数据源中的每个数据项 (由表示<xref:System.Web.UI.IHierarchyData>对象) 公开<xref:System.Web.UI.IHierarchyData.Type%2A>属性，用于指定数据项目的类型。</xref:System.Web.UI.IHierarchyData.Type%2A> </xref:System.Web.UI.IHierarchyData> 例如，XML 元素的数据成员指定元素的名称。 数据成员时数据源包含多个数据项目类型，指定的数据项目类型使用。 下面的 MenuItemBinding 声明将绑定`<Book>`元素<xref:System.Web.UI.WebControls.XmlDataSource>的菜单中，而不考虑位置层次结构中的所有菜单项的控件︰```   <asp:MenuItemBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ```有时可能需要创建一个指定的深度和数据成员的菜单项绑定。</xref:System.Web.UI.WebControls.XmlDataSource> 仅当数据源包含在具有相同的数据成员值的不同级别的项目时，经常使用这种。 例如，你可以`<Item>`出现在 XML 文件中的不同级别的元素。 下面的 MenuItemBinding 声明说明了如何指定应用于相同的数据成员位于不同的菜单深度的菜单项绑定︰ `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;1&quot; TextField=&quot;Title&quot;>` `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;2&quot; TextField=&quot;ISBN&quot;>`深度和数据成员未定义菜单项绑定，如果菜单项绑定应用于菜单中的所有菜单项。        这常用当所有数据项目具有相同的属性，并且应相同，显示无论菜单深度。       建立绑定条件后，你可以随后绑定的属性<xref:System.Web.UI.WebControls.MenuItem>可以绑定到一个值的对象。</xref:System.Web.UI.WebControls.MenuItem> 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.MenuItem>MenuItemBinding 对象应用到的对象共享相同的值。</xref:System.Web.UI.WebControls.MenuItem> 绑定到字段的属性包含相应数据源的字段的值。      1> [!NOTE]&1;> 可以选择性地重写中的绑定的属性<xref:System.Web.UI.WebControls.MenuItem>通过直接设置对应的属性的对象。</xref:System.Web.UI.WebControls.MenuItem>       下表列出 MenuItemBinding 类，可用于绑定的属性的属性<xref:System.Web.UI.WebControls.MenuItem>数据项的字段的对象。</xref:System.Web.UI.WebControls.MenuItem>      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性的字段。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性的字段。 |      下表列出 MenuItemBinding 类，可用于绑定的属性的属性<xref:System.Web.UI.WebControls.MenuItem>为静态值的对象。</xref:System.Web.UI.WebControls.MenuItem>  </xref:System.Web.UI.WebControls.MenuItem.Value%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>  </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>  </xref:System.Web.UI.WebControls.MenuItem.Text%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>  </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>  </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.Target%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性的静态值。 |  |<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>|要将绑定到<xref:System.Web.UI.WebControls.MenuItem>对象<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性的静态值。 |      如果冲突 MenuItemBinding 对象定义，<xref:System.Web.UI.WebControls.Menu>控件适用以下优先顺序中的菜单项绑定︰ 1。</xref:System.Web.UI.WebControls.Menu>  </xref:System.Web.UI.WebControls.MenuItem.Value%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>  </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>  </xref:System.Web.UI.WebControls.MenuItem.Text%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>  </xref:System.Web.UI.WebControls.MenuItem.Target%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>  </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>  </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>  定义并匹配深度和数据成员 MenuItemBinding 对象。      2.  定义并匹配数据成员仅 MenuItemBinding 对象。      3.  定义并匹配深度仅 MenuItemBinding 对象。      4.  定义深度和数据成员都不 MenuItemBinding 对象。 （此类型的菜单项绑定适用于菜单中的所有菜单项。）    5.  在数据源中没有匹配项 MenuItemBinding 对象。 在这种情况下，返回的值`ToString()`数据项方法然后绑定到<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>MenuItemBinding 对象应用到项的菜单的属性。</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>       MenuItemBinding 类还可以通过设置显示在菜单项的文本格式<xref:System.Web.UI.WebControls.MenuItemBinding.FormatString%2A>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.FormatString%2A>"
  example:
  - "The following code example demonstrates how to use MenuItemBinding objects to define the relationship between the fields of an <xref:System.Web.UI.WebControls.XmlDataSource> control and the menu items in a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_407_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_407_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("TextField")]

      public sealed class MenuItemBinding : ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IDataSourceViewSchemaAccessor
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: MenuItemBinding()
  nameWithType: MenuItemBinding.MenuItemBinding()
  fullName: System.Web.UI.WebControls.MenuItemBinding.MenuItemBinding()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>类。"
  remarks: "使用此构造函数创建<xref:System.Web.UI.WebControls.MenuItemBinding>类</xref:System.Web.UI.WebControls.MenuItemBinding>的新实例 它通常用于动态填充时<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.DataBindings%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically populate the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named MenuDepth.xml.  \n  \n [!code-vb[MenuItemBindingCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[MenuItemBindingCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_6_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapNode>`"
  syntax:
    content: public MenuItemBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.DataMember
  id: DataMember
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: DataMember
  nameWithType: MenuItemBinding.DataMember
  fullName: System.Web.UI.WebControls.MenuItemBinding.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到的菜单项的数据成员。"
  remarks: "在创建时<xref:System.Web.UI.WebControls.MenuItemBinding>对象，你必须指定用于绑定的条件。</xref:System.Web.UI.WebControls.MenuItemBinding> 该条件指示何时数据项应绑定到的菜单项。 你可以指定<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性和 / 或 DataMember 属性中，。</xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       当数据源包含多个元素或多个表时，DataMember 属性用于指定该表要绑定到的菜单项的元素。 数据成员在基础数据源中，指定的数据项目类型，但可以表示不同的信息，具体取决于数据源。 层次结构数据源中的每个数据项 (由表示<xref:System.Web.UI.IHierarchyData?displayProperty=fullName>对象) 公开<xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>属性，用于指定数据项目的类型。</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName> </xref:System.Web.UI.IHierarchyData?displayProperty=fullName> 例如，XML 元素的数据成员指定元素的名称。 以下<xref:System.Web.UI.WebControls.MenuItemBinding>声明绑定`<Book>`元素<xref:System.Web.UI.WebControls.XmlDataSource>的菜单中，而不考虑位置层次结构中的所有菜单项的控件︰```   <asp:MenuItemBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ```有时可能需要创建一个指定的深度和数据成员的菜单项绑定。</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.MenuItemBinding> 仅当数据源包含在具有相同的数据成员值的不同级别的项目时，经常使用这种。 例如，你可以`<Item>`出现在 XML 文件中的不同级别的元素。 以下<xref:System.Web.UI.WebControls.MenuItemBinding>的声明显示了如何指定应用于相同的数据成员位于不同的菜单深度的菜单项绑定︰ `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;1&quot; TextField=&quot;Title&quot;>` `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;2&quot; TextField=&quot;ISBN&quot;>`深度或数据成员未定义菜单项绑定，如果菜单项绑定应用于菜单中的所有菜单项。       </xref:System.Web.UI.WebControls.MenuItemBinding> 这常用当所有数据项目具有相同的属性，并且应相同，显示无论菜单深度。       建立绑定条件后，你可以随后绑定的属性<xref:System.Web.UI.WebControls.MenuItem>可以绑定到一个值的对象。</xref:System.Web.UI.WebControls.MenuItem> 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.MenuItem>对象向其<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象共享相同的值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem> 绑定到字段的属性包含的数据源的字段的值。       如果冲突<xref:System.Web.UI.WebControls.MenuItemBinding>定义对象，<xref:System.Web.UI.WebControls.Menu>控件适用以下优先顺序中的菜单项绑定︰ 1。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配深度和数据成员的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      2.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配的数据成员的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      3.  <xref:System.Web.UI.WebControls.MenuItemBinding>对象定义并匹配仅的深度。</xref:System.Web.UI.WebControls.MenuItemBinding>      4.  <xref:System.Web.UI.WebControls.MenuItemBinding>对象，用于定义深度和数据成员都不。</xref:System.Web.UI.WebControls.MenuItemBinding> （此类型的菜单项绑定适用于菜单中的所有菜单项。）    5.  <xref:System.Web.UI.WebControls.MenuItemBinding>数据源中没有匹配项的对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 在这种情况下，返回的值`ToString()`数据项方法然后绑定到<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性对其的菜单项<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following code example demonstrates how to use the DataMember property to specify which XML element to bind to the menu items in a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named MenuDataMember.xml.  \n  \n [!code-vb[MenuItemBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_973_1.aspx)]\n [!code-cs[MenuItemBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_973_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapNodeHome ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNodeCategory ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNodeCategory>`  \n  \n `<MapNodeCategory ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNodeCategory>`  \n  \n `</MapNodeHome>`"
  syntax:
    content: public string DataMember { get; set; }
    return:
      type: System.String
      description: "要将绑定到的菜单项的数据成员。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Depth
  id: Depth
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Depth
  nameWithType: MenuItemBinding.Depth
  fullName: System.Web.UI.WebControls.MenuItemBinding.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置到的菜单深度<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。"
  remarks: "在创建时<xref:System.Web.UI.WebControls.MenuItemBinding>对象，你必须指定用于绑定的条件。</xref:System.Web.UI.WebControls.MenuItemBinding> 该条件指示何时数据项应绑定到的菜单项。 你可以指定深度属性中，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>       使用深度属性来指定要应用的菜单深度<xref:System.Web.UI.WebControls.MenuItemBinding>对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 例如，以下<xref:System.Web.UI.WebControls.MenuItemBinding>声明将绑定到数据源的名称和 ID 字段<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性，分别的深度为 0 的所有菜单项︰```   <asp:MenuItemBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ```有时可能需要创建一个指定的深度和数据成员的菜单项绑定。</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> 仅当数据源包含在具有相同的数据成员值的不同级别的项目时，经常使用这种。 例如，你可以`<Item>`出现在 XML 文件中的不同级别的元素。 以下<xref:System.Web.UI.WebControls.MenuItemBinding>的声明显示了如何指定应用于相同的数据成员位于不同的菜单深度的菜单项绑定︰ `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;1&quot; TextField=&quot;Title&quot;>` `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;2&quot; TextField=&quot;ISBN&quot;>`深度和数据成员未定义菜单项绑定，如果菜单项绑定应用于菜单中的所有菜单项。       </xref:System.Web.UI.WebControls.MenuItemBinding> 这常用当所有数据项目具有相同的属性，并且应相同，显示无论菜单深度。       建立绑定条件后，你可以随后绑定的属性<xref:System.Web.UI.WebControls.MenuItem>可以绑定到一个值的对象。</xref:System.Web.UI.WebControls.MenuItem> 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.MenuItem>对象向其<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象共享相同的值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem> 绑定到字段的属性包含的数据源的字段的值。       如果冲突<xref:System.Web.UI.WebControls.MenuItemBinding>定义对象，<xref:System.Web.UI.WebControls.Menu>控件适用以下优先顺序中的菜单项绑定︰ 1。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配深度和数据成员的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      2.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配的数据成员的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      3.  <xref:System.Web.UI.WebControls.MenuItemBinding>对象定义并匹配仅的深度。</xref:System.Web.UI.WebControls.MenuItemBinding>      4.  <xref:System.Web.UI.WebControls.MenuItemBinding>对象，用于定义深度和数据成员都不。</xref:System.Web.UI.WebControls.MenuItemBinding> （此类型的菜单项绑定适用于菜单中的所有菜单项。）    5.  <xref:System.Web.UI.WebControls.MenuItemBinding>数据源中没有匹配项的对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 在这种情况下，返回的值`ToString()`数据项方法然后绑定到<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性对其的菜单项<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following code example demonstrates how to use the Depth property to specify the menu depth at which to apply a <xref:System.Web.UI.WebControls.MenuItemBinding> object. For this example to work correctly, you must copy the sample XML data below to a file named MenuDepth.xml.  \n  \n [!code-cs[MenuItemBindingDepth#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_473_1.aspx)]\n [!code-vb[MenuItemBindingDepth#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_473_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapNode>`"
  syntax:
    content: public int Depth { get; set; }
    return:
      type: System.Int32
      description: "到的菜单深度<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。 默认值为-1，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuItemBinding.Enabled
  fullName: System.Web.UI.WebControls.MenuItemBinding.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否菜单项，则为<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象被启用，允许该项以显示弹出图像和任何子菜单项。"
  remarks: "使用的 Enabled 属性设置<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Enabled%2A?displayProperty=fullName> 此设置会对其的所有菜单项与共享<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 当此属性设置为`false`，菜单项被禁用并且不指示子项目的弹出图像将显示。 此属性设置为`false`的菜单项就是使该菜单项的末尾该节点，其中任何进一步的级别会显示从该节点中移出。"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果菜单项，则为<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用已启用; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItemBinding.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.EnabledField
  id: EnabledField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: EnabledField
  nameWithType: MenuItemBinding.EnabledField
  fullName: System.Web.UI.WebControls.MenuItemBinding.EnabledField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.Enabled*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.Enabled*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 EnabledField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> </xref:System.Web.UI.WebControls.Menu>      1> [!NOTE]&1;> 可以重写各个菜单项启用通过设置其<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.Enabled%2A>和 EnabledField 属性都设置、 EnabledField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.Enabled%2A>"
  syntax:
    content: public string EnabledField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Enabled*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.Enabled*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.EnabledField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.FormatString
  id: FormatString
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: FormatString
  nameWithType: MenuItemBinding.FormatString
  fullName: System.Web.UI.WebControls.MenuItemBinding.FormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定的文本的菜单项的显示格式的字符串<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。"
  remarks: "FormatString 属性用于为菜单项的文本提供自定义格式。 格式字符串可以包含文本字符串、 一个占位符，或两者。 占位符替换为用于绑定到的菜单项文本的值时，将按原义，显示的文本字符串。       占位符拆分为两个部分，在窗体中，以冒号分隔 {`A`:`Bxx`}。 例如，{0: f2} 显示一个带两位小数定点数。      1> [!NOTE]&1;> 占位符字符串必须括在大括号以指示它是一个占位符，而不是文本字符串中。 大括号外的任何文本显示为文字文本。       标准格式字符串语法，冒号前的值将保持 (`A`常规示例中) 从零开始的参数列表中，指定的参数索引。 因为可以在每个菜单项中显示只有一个值，则参数索引可以设置只为 0。       冒号后面的字符 (`B`常规示例中) 指定值的显示格式。 下表列出了常见的格式。      |格式字符 |说明 |  |----------------------|-----------------|  |`C`|以货币格式显示数字值。 |  |`D`|以十进制格式显示数字值。 |  |`E`|以科学记数 （指数） 格式显示数值。 |  |`F`|固定格式显示数字值。 |  |`G`|常规格式显示数字值。 |  |`N`|采用数字格式显示数字值。 |  |`X`|以十六进制格式显示数字值。 |    &1;> [!NOTE]&1;> 的格式字符不区分大小写，除`X`，它会显示在指定的大小写的十六进制字符。       格式字符后的值 (`xx`常规示例中) 指定的有效位数或小数位数显示数量。       设置字符串格式的详细信息，请参阅[格式化类型](~/add/includes/ajax-current-ext-md.md)。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the FormatString property to format the text displayed in the menu items of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_791_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_791_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string FormatString { get; set; }
    return:
      type: System.String
      description: "指定的文本的菜单项的显示格式的格式化字符串<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.FormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ImageUrl
  nameWithType: MenuItemBinding.ImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置文本的菜单项的旁边显示的图像的 URL <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源、 ImageUrl 属性用于指定要绑定到自定义图像的 URL<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 与所有共享此映像<xref:System.Web.UI.WebControls.MenuItem>对象向其<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem> 图像将显示菜单项的文本的旁边，并且可以是任何文件格式 （.jpg、.gif、.bmp、 等），只要客户端的浏览器支持该格式。      1> [!NOTE]&1;> 可以通过设置重写各个菜单项的图像其<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>       而不是使用此属性来显示每个菜单项中的同一个映像，你可以使用<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>属性将绑定<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>到数据源的字段的对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>      1> [!NOTE]&1;> 如果 ImageUrl 和<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>"
  example:
  - "The following code example demonstrates how to use the ImageUrl property to specify the URL to an image to display next to the text of the menu items. This image is displayed in each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_35_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_35_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "对文本的菜单项的旁边显示的图像的 URL <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>应用。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
  id: ImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ImageUrlField
  nameWithType: MenuItemBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.ImageUrl*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.ImageUrl*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 ImageUrlField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> </xref:System.Web.UI.WebControls.Menu> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 图像将显示菜单项的文本的旁边，并且可以是任何文件格式 （.jpg、.gif、.bmp、 等），只要客户端的浏览器支持该格式。      1> [!NOTE]&1;> 可以通过设置重写各个菜单项的图像其<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 这使你可以向其每个菜单项中显示相同映像<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>和 ImageUrlField 属性都设置、 ImageUrlField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>"
  example:
  - "The following code example demonstrates how to use the ImageUrlField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_64_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_64_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ImageUrlField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.ImageUrl*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.ImageUrl*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: MenuItemBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要链接到的菜单项时的 URL <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>应用对象时发生。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源时，请使用 NavigateUrl 属性来指定要绑定到的 URL<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 与对其的所有菜单项共享此 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 当用户单击菜单项时，则用户将转到指定的 URL。      1> [!NOTE]&1;> 可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>       而不是使用此属性来导航到每个菜单项中的同一个 URL，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>      1> [!NOTE]&1;> 如果 NavigateUrl 和<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>"
  example:
  - "The following code example demonstrates how to use the NavigateUrl property to specify the URL to navigate to when a menu item is clicked. This URL is used in each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_350_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_350_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "要将链接到的菜单项时的 URL <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>应用单击。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
  id: NavigateUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: NavigateUrlField
  nameWithType: MenuItemBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.NavigateUrl*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 NavigateUrlField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> </xref:System.Web.UI.WebControls.Menu> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 单击菜单项时，则用户转到相应的 URL。      1> [!NOTE]&1;> 可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 这使您可以从每个菜单项导航到相同的 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>和 NavigateUrlField 属性都设置、 NavigateUrlField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>"
  example:
  - "The following code example demonstrates how to use the NavigateUrlField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1133_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1133_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string NavigateUrlField { get; set; }
    return:
      type: System.String
      description: "从要绑定到数据源字段的名称<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.NavigateUrl*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
  id: PopOutImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: PopOutImageUrl
  nameWithType: MenuItemBinding.PopOutImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指示是否存在动态子菜单的菜单项的图像 URL <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 PopOutImageUrl 属性指定的 URL<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 与对其的所有菜单项共享此 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>       你可以将绑定<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>      1> [!NOTE]&1;> 如果 PopOutImageUrl 和<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>"
  syntax:
    content: public string PopOutImageUrl { get; set; }
    return:
      type: System.String
      description: "指明的状态的动态子菜单的菜单项的图像 URL <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>应用。"
  overload: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
  id: PopOutImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: PopOutImageUrlField
  nameWithType: MenuItemBinding.PopOutImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 PopOutImageUrlField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> 为每个菜单项显示在相应的 URL 的映像。      1> [!NOTE]&1;> 可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> 这使您可以从每个菜单项导航到相同的 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A>和 PopOutImageUrlField 属性都设置、 PopOutImageUrlField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A>"
  syntax:
    content: public string PopOutImageUrlField { get; set; }
    return:
      type: System.String
      description: "从要绑定到数据源字段的名称<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Selectable
  id: Selectable
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Selectable
  nameWithType: MenuItemBinding.Selectable
  fullName: System.Web.UI.WebControls.MenuItemBinding.Selectable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否菜单项，则为<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象可以选择、 或&quot;点&quot;。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源时，请使用可选择的属性设置<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Selectable%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 此设置会对其的所有菜单项与共享<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 当此属性设置为`false`，菜单项不是&quot;可单击&quot;，但会显示任何其子项。"
  syntax:
    content: public bool Selectable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果菜单项，则为<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用可选择; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItemBinding.Selectable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.SelectableField
  id: SelectableField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: SelectableField
  nameWithType: MenuItemBinding.SelectableField
  fullName: System.Web.UI.WebControls.MenuItemBinding.SelectableField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.Selectable*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.Selectable*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 SelectableField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> </xref:System.Web.UI.WebControls.Menu>      1> [!NOTE]&1;> 可以重写各个菜单项启用通过设置其<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.Selectable%2A>和 SelectableField 属性都设置、 SelectableField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.Selectable%2A>"
  syntax:
    content: public string SelectableField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Selectable*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.Selectable*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.SelectableField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
  id: SeparatorImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: SeparatorImageUrl
  nameWithType: MenuItemBinding.SeparatorImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置菜单项的菜单项的文本的下方显示的图像的 URL （以与其他菜单项隔开） <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 SeparatorImageUrl 属性指定的 URL<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 与对其的所有菜单项共享此 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>       而不是使用此属性以指示每个菜单项中的同一个 URL，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>      1> [!NOTE]&1;> 如果 SeparatorImageUrl 和<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>"
  syntax:
    content: public string SeparatorImageUrl { get; set; }
    return:
      type: System.String
      description: "显示的菜单项的菜单项的文本的下方的图像的 URL <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>应用。"
  overload: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
  id: SeparatorImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: SeparatorImageUrlField
  nameWithType: MenuItemBinding.SeparatorImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 SeparatorImageUrlField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> </xref:System.Web.UI.WebControls.Menu> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> 为每个菜单项显示在相应的 URL 的映像。      1> [!NOTE]&1;> 可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> 这使您可以从每个菜单项导航到相同的 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A>和 SeparatorImageUrlField 属性都设置、 SeparatorImageUrlField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A>"
  syntax:
    content: public string SeparatorImageUrlField { get; set; }
    return:
      type: System.String
      description: "从要绑定到数据源字段的名称<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: MenuItemBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建一份<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>对象。"
  remarks: "ICloneable.Clone 方法是一个帮助器函数来创建一份<xref:System.Web.UI.WebControls.MenuItemBinding>对象从其调用此方法。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 主要由控件开发人员使用此方法。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>表示一份<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>。</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  id: System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅<xref:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema*>。</xref:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.MenuItemBinding>实例被强制转换为<xref:System.Web.UI.IDataSourceViewSchemaAccessor>接口。</xref:System.Web.UI.IDataSourceViewSchemaAccessor> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  syntax:
    content: object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }
    return:
      type: System.Object
      description: "要添加。"
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>对象是否保存对其视图状态的更改。"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该控件标记为保存其状态，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载节点的以前保存的视图状态。"
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>包含保存的视图状态值。</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将视图状态更改保存到<xref:System.Object>。</xref:System.Object>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>包含视图状态更改。</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>对象来跟踪其视图状态的更改。"
  remarks: "服务器控件，调用此方法后<xref:System.Web.UI.Control.IsTrackingViewState%2A>属性返回`true`。</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Target
  id: Target
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Target
  nameWithType: MenuItemBinding.Target
  fullName: System.Web.UI.WebControls.MenuItemBinding.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置目标窗口或框架，用于显示与菜单项的关联网页内容<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用目标属性指定的窗口或框架中显示的 Web 内容时，链接到的菜单项单击该菜单项。</xref:System.Web.UI.WebControls.Menu>      1> [!NOTE]&1;> 设置此属性将替代<xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.Menu>对其的菜单项控件<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName> 你可以有选择地通过重写此属性设置<xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>直接每个菜单项的属性。</xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>       目标值必须以字母 a 到 Z （区分大小写），但下表中所示，以下划线开头某些特殊值除外范围的开头。      |目标值 |说明 |  |------------------|-----------------|  |`_blank`|呈现在新窗口中没有框架的内容。 |  |`_parent`|呈现的即时框架集父代中的内容。 |  |`_search`|呈现搜索窗格中的内容。 |  |`_self`|呈现具有焦点的框架中的内容。 |  |`_top`|呈现没有框架的完整窗口中的内容。 |    &1;> [!NOTE]&1;> 检查你的浏览器文档以确定如果`_search`值受到支持。  例如，Microsoft Internet Explorer 5.0 和更高版本支持`_search`目标值。      1> [!NOTE]&1;> Target 属性呈现为`target`属性。 `target`属性`anchor`XHTML 1.1 文档类型定义中不允许的元素。 如果未设置目标属性的呈现的输出<xref:System.Web.UI.WebControls.MenuItemBinding>对象必须是符合 XHTML 1.1。</xref:System.Web.UI.WebControls.MenuItemBinding> 有关详细信息，请参阅主题[在 Visual Studio 和 ASP.NET 的 XHTML 标准](~/add/includes/ajax-current-ext-md.md)。   >> 时创建可访问网页，强烈建议你避免使用的目标属性将另一个窗口作为目标。 有关详细信息，请参阅[NIB: ASP.NET 可访问性](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)。"
  example:
  - "The following code example demonstrates how to use the Target property to specify the window in which to display the Web content associated with a menu item, when that menu item is clicked. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_856_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_856_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "目标窗口或框架，用于显示链接的网页内容。 默认值为空字符串 (&quot;&quot;)，该值刷新具有焦点的框架的窗口。"
  overload: System.Web.UI.WebControls.MenuItemBinding.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.TargetField
  id: TargetField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: TargetField
  nameWithType: MenuItemBinding.TargetField
  fullName: System.Web.UI.WebControls.MenuItemBinding.TargetField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.Target*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.Target*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 TargetField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu>       <xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>属性指定的窗口或框架中显示的 Web 内容时，链接到的菜单项单击该菜单项。</xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName> 值必须以字母 a 到 Z （区分大小写），但下表中所示，以下划线开头某些特殊值除外范围的开头。      |目标值 |说明 |  |------------------|-----------------|  |`_blank`|呈现在新窗口中没有框架的内容。 |  |`_parent`|呈现的即时框架集父代中的内容。 |  |`_self`|呈现具有焦点的框架中的内容。 |  |`_top`|呈现没有框架的完整窗口中的内容。 |    &1;> [!NOTE]&1;><xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性呈现为`target`属性。</xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A> `target`属性`anchor`XHTML 1.1 文档类型定义中不允许的元素。 未设置<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性如果呈现的输出<xref:System.Web.UI.WebControls.MenuItemBinding>必须符合 XHTML 1.1。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A> 有关详细信息，请参阅主题[在 Visual Studio 和 ASP.NET 的 XHTML 标准](~/add/includes/ajax-current-ext-md.md)。   >> 时创建可访问网页，强烈建议你避免使用<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性将作为目标另一个窗口。</xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A> 有关详细信息，请参阅[NIB: ASP.NET 可访问性](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)。       请注意，设置此属性重写<xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.Menu>此菜单项的控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName> 设置<xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>属性以打开新窗口可以变得比较困难的辅助技术设备的用户使用的页面。</xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>      1> [!NOTE]&1;> 可以重写启用各个菜单项，通过设置其<xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>属性直接。</xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>和 TargetField 属性都设置、 TargetField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>"
  syntax:
    content: public string TargetField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Target*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.Target*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.TargetField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Text
  id: Text
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Text
  nameWithType: MenuItemBinding.Text
  fullName: System.Web.UI.WebControls.MenuItemBinding.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置为菜单项显示的文本<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源时，请使用文本属性来指定要绑定到的文本<xref:System.Web.UI.WebControls.MenuItem.Text%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Text%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 此文本显示在菜单项并对其的所有菜单项与共享<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 可以通过设置各个菜单项的文本重写其<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.Text%2A>       而不是使用此属性来显示每个菜单项中的相同的文本，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.Text%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>      1> [!NOTE]&1;> 如果文本和<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>       无法创建在空节点<xref:System.Web.UI.WebControls.Menu>通过设置文本的控件或<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性为空字符串 (&quot;&quot;)。</xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> </xref:System.Web.UI.WebControls.Menu> 将这些属性设置为空字符串作为未设置这些属性的效果相同。 在这种情况下，<xref:System.Web.UI.WebControls.Menu>控件创建默认绑定使用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.Menu> 有关详细信息，请参阅[ASP.NET 数据访问内容映射](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the text to display in a menu item. This text is displayed in each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_286_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_286_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "为菜单项显示的文本<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.TextField
  id: TextField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: TextField
  nameWithType: MenuItemBinding.TextField
  fullName: System.Web.UI.WebControls.MenuItemBinding.TextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.Text*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.Text*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用文本字段属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> </xref:System.Web.UI.WebControls.Menu> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.Text%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 此文本显示在菜单项。      1> [!NOTE]&1;> 可以通过设置各个菜单项的文本重写其<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.Text%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       无法创建在空节点<xref:System.Web.UI.WebControls.Menu>通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>或文本字段属性为空字符串 (&quot;&quot;)。</xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> </xref:System.Web.UI.WebControls.Menu> 将这些属性设置为空字符串作为未设置这些属性的效果相同。 在这种情况下，<xref:System.Web.UI.WebControls.Menu>控件创建默认绑定使用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.Menu> 有关详细信息，请参阅[ASP.NET 数据访问内容映射](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)。       而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 这使你可以向其每个菜单项中显示相同的文本<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>和同时设置文本字段属性、 文本字段属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>"
  example:
  - "The following code example demonstrates how to use the TextField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.Text%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_605_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_605_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string TextField { get; set; }
    return:
      type: System.String
      description: "从要绑定到数据源字段的名称<xref:System.Web.UI.WebControls.MenuItem.Text*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.Text*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.TextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ToolTip
  nameWithType: MenuItemBinding.ToolTip
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置到的菜单项的工具提示文本<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用工具提示属性指定要绑定到的文本<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 与对其的所有菜单项共享此工具提示<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 当用户将鼠标指针定位在菜单项时，将显示指定的文本。      1> [!NOTE]&1;> 可以通过设置重写各个菜单项的工具提示其<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>       而不是使用此属性来指定每个菜单项的相同工具提示，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>      1> [!NOTE]&1;> 如果工具提示和<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ToolTip property to specify the ToolTip to display when the user positions the mouse pointer over a menu item. This ToolTip is displayed for each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_104_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "菜单项的工具提示文本<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTipField
  id: ToolTipField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ToolTipField
  nameWithType: MenuItemBinding.ToolTipField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.ToolTip*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.ToolTip*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 ToolTipField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> </xref:System.Web.UI.WebControls.Menu> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 当用户在鼠标指针置于菜单项上时，将显示指定的文本。      1> [!NOTE]&1;> 可以通过设置各个菜单项的文本重写其<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 这使你可以向其显示每个菜单项的相同工具提示<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>和 ToolTipField 属性都设置、 ToolTipField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>"
  example:
  - "The following code example demonstrates how to use the ToolTipField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1135_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1135_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ToolTipField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.ToolTip*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.ToolTip*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.ToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ToString
  id: ToString
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ToString()
  nameWithType: MenuItemBinding.ToString()
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回表示当前对象的字符串。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示当前对象的字符串。"
  overload: System.Web.UI.WebControls.MenuItemBinding.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Value
  id: Value
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Value
  nameWithType: MenuItemBinding.Value
  fullName: System.Web.UI.WebControls.MenuItemBinding.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于存储有关的菜单项的任何其他数据不可显示的值<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象，如用于处理回发事件数据。"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源时，请使用 Value 属性来指定要绑定到的值<xref:System.Web.UI.WebControls.MenuItem.Value%2A?displayProperty=fullName>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Value%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 此值与对其的所有菜单项共享<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 指定的值不会显示在菜单项和用于存储有关的菜单项的任何其他数据<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象，如用于处理回发事件数据。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 可以通过设置各个菜单项的值重写其<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.Value%2A>       不要使用此属性来指定每个菜单项相同的值，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.Value%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Value%2A>      1> [!NOTE]&1;> 如果值和<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Value property to specify a nondisplayed value associated with a menu item. This value is used in each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_341_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_341_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "补充数据有关菜单项，则为<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用; 不显示此数据。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ValueField
  id: ValueField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ValueField
  nameWithType: MenuItemBinding.ValueField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ValueField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段的名称<xref:System.Web.UI.WebControls.MenuItem.Value*>属性<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用对象。</xref:System.Web.UI.WebControls.MenuItem.Value*>"
  remarks: "当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用 ValueField 属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.Menu> 呈现时，<xref:System.Web.UI.WebControls.MenuItem.Value%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> 指定的值不会显示在菜单项和用于存储有关的菜单项的任何其他数据<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象，如用于处理回发事件数据。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 可以通过设置各个菜单项的值重写其<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性直接。</xref:System.Web.UI.WebControls.MenuItem.Value%2A>       如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，或两者都。</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> 这允许你指定的每个菜单项相同的值<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>和 ValueField 属性都设置、 ValueField 属性优先。</xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>"
  example:
  - "The following code example demonstrates how to use the ValueField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.Value%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1185_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1185_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ValueField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Value*>的<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>应用。</xref:System.Web.UI.WebControls.MenuItem.Value*> 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.MenuItemBinding.ValueField*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.MenuItemBinding.#ctor
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: MenuItemBinding()
  nameWithType: MenuItemBinding.MenuItemBinding()
  fullName: System.Web.UI.WebControls.MenuItemBinding.MenuItemBinding()
- uid: System.Web.UI.WebControls.MenuItemBinding.DataMember
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: DataMember
  nameWithType: MenuItemBinding.DataMember
  fullName: System.Web.UI.WebControls.MenuItemBinding.DataMember
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.MenuItemBinding.Depth
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Depth
  nameWithType: MenuItemBinding.Depth
  fullName: System.Web.UI.WebControls.MenuItemBinding.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemBinding.Enabled
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Enabled
  nameWithType: MenuItemBinding.Enabled
  fullName: System.Web.UI.WebControls.MenuItemBinding.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemBinding.EnabledField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: EnabledField
  nameWithType: MenuItemBinding.EnabledField
  fullName: System.Web.UI.WebControls.MenuItemBinding.EnabledField
- uid: System.Web.UI.WebControls.MenuItemBinding.FormatString
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: FormatString
  nameWithType: MenuItemBinding.FormatString
  fullName: System.Web.UI.WebControls.MenuItemBinding.FormatString
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ImageUrl
  nameWithType: MenuItemBinding.ImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.ImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: MenuItemBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: MenuItemBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: MenuItemBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: PopOutImageUrl
  nameWithType: MenuItemBinding.PopOutImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: PopOutImageUrlField
  nameWithType: MenuItemBinding.PopOutImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.Selectable
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Selectable
  nameWithType: MenuItemBinding.Selectable
  fullName: System.Web.UI.WebControls.MenuItemBinding.Selectable
- uid: System.Web.UI.WebControls.MenuItemBinding.SelectableField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SelectableField
  nameWithType: MenuItemBinding.SelectableField
  fullName: System.Web.UI.WebControls.MenuItemBinding.SelectableField
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SeparatorImageUrl
  nameWithType: MenuItemBinding.SeparatorImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SeparatorImageUrlField
  nameWithType: MenuItemBinding.SeparatorImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: MenuItemBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.MenuItemBinding.Target
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Target
  nameWithType: MenuItemBinding.Target
  fullName: System.Web.UI.WebControls.MenuItemBinding.Target
- uid: System.Web.UI.WebControls.MenuItemBinding.TargetField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: TargetField
  nameWithType: MenuItemBinding.TargetField
  fullName: System.Web.UI.WebControls.MenuItemBinding.TargetField
- uid: System.Web.UI.WebControls.MenuItemBinding.Text
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Text
  nameWithType: MenuItemBinding.Text
  fullName: System.Web.UI.WebControls.MenuItemBinding.Text
- uid: System.Web.UI.WebControls.MenuItemBinding.TextField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: TextField
  nameWithType: MenuItemBinding.TextField
  fullName: System.Web.UI.WebControls.MenuItemBinding.TextField
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTip
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToolTip
  nameWithType: MenuItemBinding.ToolTip
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToolTip
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTipField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToolTipField
  nameWithType: MenuItemBinding.ToolTipField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToolTipField
- uid: System.Web.UI.WebControls.MenuItemBinding.ToString
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToString()
  nameWithType: MenuItemBinding.ToString()
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToString()
- uid: System.Web.UI.WebControls.MenuItemBinding.Value
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Value
  nameWithType: MenuItemBinding.Value
  fullName: System.Web.UI.WebControls.MenuItemBinding.Value
- uid: System.Web.UI.WebControls.MenuItemBinding.ValueField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ValueField
  nameWithType: MenuItemBinding.ValueField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ValueField
- uid: System.Web.UI.WebControls.MenuItemBinding.#ctor*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding.MenuItemBinding
- uid: System.Web.UI.WebControls.MenuItemBinding.DataMember*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: DataMember
  nameWithType: MenuItemBinding.DataMember
- uid: System.Web.UI.WebControls.MenuItemBinding.Depth*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Depth
  nameWithType: MenuItemBinding.Depth
- uid: System.Web.UI.WebControls.MenuItemBinding.Enabled*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Enabled
  nameWithType: MenuItemBinding.Enabled
- uid: System.Web.UI.WebControls.MenuItemBinding.EnabledField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: EnabledField
  nameWithType: MenuItemBinding.EnabledField
- uid: System.Web.UI.WebControls.MenuItemBinding.FormatString*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: FormatString
  nameWithType: MenuItemBinding.FormatString
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrl*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ImageUrl
  nameWithType: MenuItemBinding.ImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: MenuItemBinding.ImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: MenuItemBinding.NavigateUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: MenuItemBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: PopOutImageUrl
  nameWithType: MenuItemBinding.PopOutImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: PopOutImageUrlField
  nameWithType: MenuItemBinding.PopOutImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.Selectable*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Selectable
  nameWithType: MenuItemBinding.Selectable
- uid: System.Web.UI.WebControls.MenuItemBinding.SelectableField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SelectableField
  nameWithType: MenuItemBinding.SelectableField
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SeparatorImageUrl
  nameWithType: MenuItemBinding.SeparatorImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SeparatorImageUrlField
  nameWithType: MenuItemBinding.SeparatorImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: MenuItemBinding.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.Target*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Target
  nameWithType: MenuItemBinding.Target
- uid: System.Web.UI.WebControls.MenuItemBinding.TargetField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: TargetField
  nameWithType: MenuItemBinding.TargetField
- uid: System.Web.UI.WebControls.MenuItemBinding.Text*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Text
  nameWithType: MenuItemBinding.Text
- uid: System.Web.UI.WebControls.MenuItemBinding.TextField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: TextField
  nameWithType: MenuItemBinding.TextField
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTip*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToolTip
  nameWithType: MenuItemBinding.ToolTip
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTipField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToolTipField
  nameWithType: MenuItemBinding.ToolTipField
- uid: System.Web.UI.WebControls.MenuItemBinding.ToString*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToString
  nameWithType: MenuItemBinding.ToString
- uid: System.Web.UI.WebControls.MenuItemBinding.Value*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Value
  nameWithType: MenuItemBinding.Value
- uid: System.Web.UI.WebControls.MenuItemBinding.ValueField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ValueField
  nameWithType: MenuItemBinding.ValueField
