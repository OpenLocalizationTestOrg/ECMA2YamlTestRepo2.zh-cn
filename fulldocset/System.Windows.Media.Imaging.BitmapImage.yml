### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Imaging.BitmapImage
  id: BitmapImage
  children:
  - System.Windows.Media.Imaging.BitmapImage.#ctor
  - System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri)
  - System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri,System.Net.Cache.RequestCachePolicy)
  - System.Windows.Media.Imaging.BitmapImage.BaseUri
  - System.Windows.Media.Imaging.BitmapImage.BeginInit
  - System.Windows.Media.Imaging.BitmapImage.CacheOption
  - System.Windows.Media.Imaging.BitmapImage.CacheOptionProperty
  - System.Windows.Media.Imaging.BitmapImage.Clone
  - System.Windows.Media.Imaging.BitmapImage.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.BitmapImage.CloneCurrentValue
  - System.Windows.Media.Imaging.BitmapImage.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.BitmapImage.CreateInstanceCore
  - System.Windows.Media.Imaging.BitmapImage.CreateOptions
  - System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty
  - System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight
  - System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty
  - System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth
  - System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty
  - System.Windows.Media.Imaging.BitmapImage.EndInit
  - System.Windows.Media.Imaging.BitmapImage.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.BitmapImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.BitmapImage.IsDownloading
  - System.Windows.Media.Imaging.BitmapImage.Metadata
  - System.Windows.Media.Imaging.BitmapImage.Rotation
  - System.Windows.Media.Imaging.BitmapImage.RotationProperty
  - System.Windows.Media.Imaging.BitmapImage.SourceRect
  - System.Windows.Media.Imaging.BitmapImage.SourceRectProperty
  - System.Windows.Media.Imaging.BitmapImage.StreamSource
  - System.Windows.Media.Imaging.BitmapImage.StreamSourceProperty
  - System.Windows.Media.Imaging.BitmapImage.UriCachePolicy
  - System.Windows.Media.Imaging.BitmapImage.UriCachePolicyProperty
  - System.Windows.Media.Imaging.BitmapImage.UriSource
  - System.Windows.Media.Imaging.BitmapImage.UriSourceProperty
  langs:
  - csharp
  name: BitmapImage
  nameWithType: BitmapImage
  fullName: System.Windows.Media.Imaging.BitmapImage
  type: Class
  summary: "提供专用<xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref>经过了优化，用于加载映像使用[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]。"
  remarks: "BitmapImage 主要存在是为了支持[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]语法和位图加载，未定义的<xref:System.Windows.Media.Imaging.BitmapSource>.</xref:System.Windows.Media.Imaging.BitmapSource>引入附加属性       BitmapImage 实现<xref:System.ComponentModel.ISupportInitialize>接口来优化多个属性上的初始化。</xref:System.ComponentModel.ISupportInitialize> 属性更改才会在对象初始化过程。 调用<xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A>发出信号初始化已开始和<xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A>以指示已完成初始化。</xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A> </xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A> 初始化后，将忽略属性更改。       使用创建的 BitmapImage 对象<xref:System.Windows.Media.Imaging.BitmapImage.%23ctor%2A>构造函数将自动初始化和属性更改将被忽略。</xref:System.Windows.Media.Imaging.BitmapImage.%23ctor%2A>"
  example:
  - "The following code examples demonstrate how to use a BitmapImage in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-xml[ImageElementExample#SimpleXAML2](~/add/codesnippet/xaml/ImageElementExample.ImageElementExample/SimpleImageExample.xaml#simplexaml2)]\n [!code-xml[ImageElementExample#SimpleXAML2](~/add/codesnippet/xaml/ImageElementExample.ImageElementExample/SimpleImageExample.xaml#simplexaml2)]  \n  \n [!code-cs[ImageElementExample#SimpleCSharp1](~/add/codesnippet/csharp/ImageElementExample.ImageElementExample/SimpleImageExample.xaml.cs#simplecsharp1)]\n [!code-vb[ImageElementExample#SimpleCSharp1](~/add/codesnippet/visualbasic/ImageElementExample.ImageElementExample/SimpleImageExample.xaml.vb#simplecsharp1)]"
  syntax:
    content: 'public sealed class BitmapImage : System.Windows.Media.Imaging.BitmapSource, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IUriContext'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.ImageSource
  - System.Windows.Media.Imaging.BitmapSource
  implements:
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.IUriContext
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.ImageSource.PixelsToDIPs(System.Double,System.Int32)
  - System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.ImageSource.ToString
  - System.Windows.Media.ImageSource.ToString(System.IFormatProvider)
  - System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.DecodeFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
  - System.Windows.Media.Imaging.BitmapSource.DownloadFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadProgress
  - System.Windows.Media.Imaging.BitmapSource.DpiX
  - System.Windows.Media.Imaging.BitmapSource.DpiY
  - System.Windows.Media.Imaging.BitmapSource.Format
  - System.Windows.Media.Imaging.BitmapSource.FreezeCore(System.Boolean)
  - System.Windows.Media.Imaging.BitmapSource.Height
  - System.Windows.Media.Imaging.BitmapSource.Palette
  - System.Windows.Media.Imaging.BitmapSource.PixelHeight
  - System.Windows.Media.Imaging.BitmapSource.PixelWidth
  - System.Windows.Media.Imaging.BitmapSource.Width
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: BitmapImage()
  nameWithType: BitmapImage.BitmapImage()
  fullName: System.Windows.Media.Imaging.BitmapImage.BitmapImage()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>类。"
  remarks: "<xref:System.Windows.Media.Imaging.BitmapImage>实现<xref:System.ComponentModel.ISupportInitialize>接口来优化多个属性上的初始化。</xref:System.ComponentModel.ISupportInitialize></xref:System.Windows.Media.Imaging.BitmapImage> 若要初始化<xref:System.Windows.Media.Imaging.BitmapImage>使用此构造函数创建的你必须执行之间的属性初始化<xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A>和<xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A>调用。</xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A> </xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A> </xref:System.Windows.Media.Imaging.BitmapImage>"
  syntax:
    content: public BitmapImage ();
    parameters: []
  overload: System.Windows.Media.Imaging.BitmapImage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: BitmapImage(Uri)
  nameWithType: BitmapImage.BitmapImage(Uri)
  fullName: System.Windows.Media.Imaging.BitmapImage.BitmapImage(Uri)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>通过使用提供的<xref:System.Uri>。</xref:System.Uri>类"
  remarks: "<xref:System.Windows.Media.Imaging.BitmapImage>使用此构造函数创建的对象将自动初始化。</xref:System.Windows.Media.Imaging.BitmapImage> 初始化后，将忽略属性更改。"
  syntax:
    content: public BitmapImage (Uri uriSource);
    parameters:
    - id: uriSource
      type: System.Uri
      description: "<xref:System.Uri>要用作源的<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。</xref:System.Uri>"
  overload: System.Windows.Media.Imaging.BitmapImage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriSource</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件<code> uriSource </code>找不到参数。"
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri,System.Net.Cache.RequestCachePolicy)
  id: '#ctor(System.Uri,System.Net.Cache.RequestCachePolicy)'
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: BitmapImage(Uri,RequestCachePolicy)
  nameWithType: BitmapImage.BitmapImage(Uri,RequestCachePolicy)
  fullName: System.Windows.Media.Imaging.BitmapImage.BitmapImage(Uri,RequestCachePolicy)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>类具有其源是的映像<xref:System.Uri>，并且已缓存根据提供<xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref>。</xref:System.Uri>"
  remarks: "<xref:System.Windows.Media.Imaging.BitmapImage>使用此构造函数创建的对象将自动初始化。</xref:System.Windows.Media.Imaging.BitmapImage> 初始化后，将忽略属性更改。       BitmapImage 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public BitmapImage (Uri uriSource, System.Net.Cache.RequestCachePolicy uriCachePolicy);
    parameters:
    - id: uriSource
      type: System.Uri
      description: "<xref:System.Uri>要用作源的<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。</xref:System.Uri>"
    - id: uriCachePolicy
      type: System.Net.Cache.RequestCachePolicy
      description: "<xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> ，它指定使用 HTTP 获得的映像的缓存要求。"
  overload: System.Windows.Media.Imaging.BitmapImage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriSource</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件<code> uriSource </code>找不到参数。"
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.BaseUri
  id: BaseUri
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: BaseUri
  nameWithType: BitmapImage.BaseUri
  fullName: System.Windows.Media.Imaging.BitmapImage.BaseUri
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置一个值，该值表示为底<xref:System.Uri>的当前<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>上下文。</xref:System.Uri>"
  syntax:
    content: public Uri BaseUri { get; set; }
    return:
      type: System.Uri
      description: "基<xref:System.Uri>的当前上下文。</xref:System.Uri>"
  overload: System.Windows.Media.Imaging.BitmapImage.BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.BeginInit
  id: BeginInit
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: BeginInit()
  nameWithType: BitmapImage.BeginInit()
  fullName: System.Windows.Media.Imaging.BitmapImage.BeginInit()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "用信号通知的开始<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>初始化。"
  remarks: "必须 BeginInit 之间执行属性初始化和<xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A>调用。</xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A> 一次<xref:System.Windows.Media.Imaging.BitmapImage>已初始化，属性更改将被忽略。</xref:System.Windows.Media.Imaging.BitmapImage>"
  example:
  - "The following example demonstrates how to initialize a <xref:System.Windows.Media.Imaging.BitmapImage> with a set of properties by using the BeginInit and <xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A> methods.  \n  \n [!code-cs[BitmapImageProps#1](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#1)]\n [!code-vb[BitmapImageProps#1](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#1)]"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.Media.Imaging.BitmapImage.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>当前正在初始化。 已调用 BeginInit。       -或- <xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>已初始化。"
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.CacheOption
  id: CacheOption
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: CacheOption
  nameWithType: BitmapImage.CacheOption
  fullName: System.Windows.Media.Imaging.BitmapImage.CacheOption
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置<xref href=&quot;System.Windows.Media.Imaging.BitmapCacheOption&quot;></xref>要用于此实例的<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。"
  remarks: "设置为<xref:System.Windows.Media.Imaging.BitmapCacheOption?displayProperty=fullName>你想要关闭流用于创建<xref:System.Windows.Media.Imaging.BitmapImage>.</xref:System.Windows.Media.Imaging.BitmapImage> </xref:System.Windows.Media.Imaging.BitmapCacheOption?displayProperty=fullName> CacheOption 默认值<xref:System.Windows.Media.Imaging.BitmapCacheOption>缓存选项保留对流的访问权限，直至需要图像，并且由垃圾回收器处理清理。</xref:System.Windows.Media.Imaging.BitmapCacheOption>      <a name=&quot;dependencyPropertyInfo_CacheOption&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Imaging.BitmapImage.CacheOptionProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Imaging.BitmapImage.CacheOptionProperty>"
  example:
  - "The following code example demonstrates how to set the CacheOption of a <xref:System.Windows.Media.Imaging.BitmapImage> by using code.  \n  \n [!code-cs[BitmapImageProps#1](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#1)]\n [!code-vb[BitmapImageProps#1](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#1)]"
  syntax:
    content: public System.Windows.Media.Imaging.BitmapCacheOption CacheOption { get; set; }
    return:
      type: System.Windows.Media.Imaging.BitmapCacheOption
      description: "<xref href=&quot;System.Windows.Media.Imaging.BitmapCacheOption&quot;> </xref>正用于<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。 默认值是<xref href=&quot;System.Windows.Media.Imaging.BitmapCacheOption&quot;> </xref>。"
  overload: System.Windows.Media.Imaging.BitmapImage.CacheOption*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.CacheOptionProperty
  id: CacheOptionProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: CacheOptionProperty
  nameWithType: BitmapImage.CacheOptionProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.CacheOptionProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.CacheOption*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.CacheOption*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CacheOptionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.Clone
  id: Clone
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapImage.Clone()
  fullName: System.Windows.Media.Imaging.BitmapImage.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>，从而深度复制此对象的值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>       在复制依赖项属性时，此方法会复制资源引用和数据绑定 （可能不再解析），但不是动画或其当前值。"
  syntax:
    content: public System.Windows.Media.Imaging.BitmapImage Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.BitmapImage
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性是<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Imaging.BitmapImage.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: BitmapImage.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapImage.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable source);
    parameters:
    - id: source
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Media.Imaging.BitmapImage.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapImage.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>对象，从而深度复制此对象的当前值。 不复制资源引用、 数据绑定和动画，而其当前值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Imaging.BitmapImage CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.BitmapImage
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: BitmapImage.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);
    parameters:
    - id: source
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BitmapImage.CreateInstanceCore()
  fullName: System.Windows.Media.Imaging.BitmapImage.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Media.Imaging.BitmapImage.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.CreateOptions
  id: CreateOptions
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: CreateOptions
  nameWithType: BitmapImage.CreateOptions
  fullName: System.Windows.Media.Imaging.BitmapImage.CreateOptions
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置<xref href=&quot;System.Windows.Media.Imaging.BitmapCreateOptions&quot;></xref>为<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。"
  remarks: "<a name=&quot;dependencyPropertyInfo_CreateOptions&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty>"
  example:
  - "The following code example demonstrates how to set the CreateOptions of a <xref:System.Windows.Media.Imaging.BitmapImage> by using code.  \n  \n [!code-cs[BitmapImageProps#1](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#1)]\n [!code-vb[BitmapImageProps#1](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#1)]"
  syntax:
    content: public System.Windows.Media.Imaging.BitmapCreateOptions CreateOptions { get; set; }
    return:
      type: System.Windows.Media.Imaging.BitmapCreateOptions
      description: "The <xref href=&quot;System.Windows.Media.Imaging.BitmapCreateOptions&quot;></xref> used for this <xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>. 默认值是<xref href=&quot;System.Windows.Media.Imaging.BitmapCreateOptions&quot;> </xref>。"
  overload: System.Windows.Media.Imaging.BitmapImage.CreateOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty
  id: CreateOptionsProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: CreateOptionsProperty
  nameWithType: BitmapImage.CreateOptionsProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.CreateOptions*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.CreateOptions*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CreateOptionsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight
  id: DecodePixelHeight
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: DecodePixelHeight
  nameWithType: BitmapImage.DecodePixelHeight
  fullName: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置高度，以像素为单位，图像解码为。"
  remarks: "如果<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A>也是设置时，忽略位图纵横比。</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A> 如果<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A>未设置，纵横比保持不变。</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A>       [!INCLUDE[TLA#tla_jpeg](~/add/includes/tlasharptla-jpeg-md.md)]和[!INCLUDE[TLA#tla_png](~/add/includes/tlasharptla-png-md.md)]编解码器本机将图像解码为指定的大小; 其他编解码器在其原始大小将图像解码和缩放为所需大小的图像。      <a name=&quot;dependencyPropertyInfo_DecodePixelHeight&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty>"
  example:
  - "The following code example demonstrates how to set the DecodePixelHeight property by using code.  \n  \n [!code-cs[BitmapImageProps#1](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#1)]\n [!code-vb[BitmapImageProps#1](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#1)]"
  syntax:
    content: public int DecodePixelHeight { get; set; }
    return:
      type: System.Int32
      description: "以像素为单位，图像解码为的高度。 默认值为 0"
  overload: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty
  id: DecodePixelHeightProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: DecodePixelHeightProperty
  nameWithType: BitmapImage.DecodePixelHeightProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DecodePixelHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth
  id: DecodePixelWidth
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: DecodePixelWidth
  nameWithType: BitmapImage.DecodePixelWidth
  fullName: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置的宽度，以像素为单位，图像解码为。"
  remarks: "如果<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A>也是设置时，忽略位图纵横比。</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A> 如果<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A>未设置，纵横比保持不变。</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A>       [!INCLUDE[TLA#tla_jpeg](~/add/includes/tlasharptla-jpeg-md.md)]和[!INCLUDE[TLA#tla_png](~/add/includes/tlasharptla-png-md.md)]编解码器本机将图像解码为指定的大小; 其他编解码器在其原始大小将图像解码和缩放为所需大小的图像。      <a name=&quot;dependencyPropertyInfo_DecodePixelWidth&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty>"
  example:
  - "The following code example demonstrates how to set the DecodePixelWidth property by using code.  \n  \n [!code-cs[BitmapImageProps#1](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#1)]\n [!code-vb[BitmapImageProps#1](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#1)]"
  syntax:
    content: public int DecodePixelWidth { get; set; }
    return:
      type: System.Int32
      description: "以像素为单位，图像解码为宽度。 默认值为 0"
  overload: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty
  id: DecodePixelWidthProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: DecodePixelWidthProperty
  nameWithType: BitmapImage.DecodePixelWidthProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DecodePixelWidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.EndInit
  id: EndInit
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: EndInit()
  nameWithType: BitmapImage.EndInit()
  fullName: System.Windows.Media.Imaging.BitmapImage.EndInit()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "表示结束的<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>初始化。"
  remarks: "必须之间执行属性初始化<xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A>和 EndInit 调用。</xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A> 一次<xref:System.Windows.Media.Imaging.BitmapImage>已初始化，属性更改将被忽略。</xref:System.Windows.Media.Imaging.BitmapImage>"
  example:
  - "The following example demonstrates how to initialize a <xref:System.Windows.Media.Imaging.BitmapImage> with a set of properties by using the <xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A> and EndInit methods.  \n  \n [!code-cs[BitmapImageProps#1](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#1)]\n [!code-vb[BitmapImageProps#1](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#1)]"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.Media.Imaging.BitmapImage.EndInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> or <>*> properties are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或者-未先调用<xref:System.Windows.Media.Imaging.BitmapImage.BeginInit*>.</xref:System.Windows.Media.Imaging.BitmapImage.BeginInit*>调用 EndInit 方法"
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: BitmapImage.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapImage.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);
    parameters:
    - id: source
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Media.Imaging.BitmapImage.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: BitmapImage.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapImage.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);
    parameters:
    - id: source
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Media.Imaging.BitmapImage.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.IsDownloading
  id: IsDownloading
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: IsDownloading
  nameWithType: BitmapImage.IsDownloading
  fullName: System.Windows.Media.Imaging.BitmapImage.IsDownloading
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>是否正在下载内容。"
  remarks: ''
  example:
  - "The following code example demonstrates how to check the value of the IsDownloading property by using code. The value of the property is emitted to a <xref:System.Windows.MessageBox> as a <xref:System.String>.  \n  \n [!code-cs[BitmapImageProps#1](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#1)]\n [!code-vb[BitmapImageProps#1](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#1)]"
  syntax:
    content: public override bool IsDownloading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>是下载内容; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Imaging.BitmapImage.IsDownloading*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.Metadata
  id: Metadata
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: Metadata
  nameWithType: BitmapImage.Metadata
  fullName: System.Windows.Media.Imaging.BitmapImage.Metadata
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "不支持。 <xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>不支持的元数据属性，将引发一种<xref:System.NotSupportedException>。</xref:System.NotSupportedException>"
  syntax:
    content: public override System.Windows.Media.ImageMetadata Metadata { get; }
    return:
      type: System.Windows.Media.ImageMetadata
      description: "不支持。"
  overload: System.Windows.Media.Imaging.BitmapImage.Metadata*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "尝试读取元数据时发生。"
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.Rotation
  id: Rotation
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: Rotation
  nameWithType: BitmapImage.Rotation
  fullName: System.Windows.Media.Imaging.BitmapImage.Rotation
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置的角度这<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;></xref>向旋转。"
  remarks: "缩放后执行旋转。 这意味着，映像具有的旋转<xref:System.Windows.Media.Imaging.Rotation>、<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A>为 10，和<xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A>的 5 将导致映像具有 5 宽度和高度为 10。</xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A> </xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A> </xref:System.Windows.Media.Imaging.Rotation>      <a name=&quot;dependencyPropertyInfo_Rotation&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Imaging.BitmapImage.RotationProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Imaging.BitmapImage.RotationProperty>"
  example:
  - "The following code example demonstrates how to rotate an image by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-xml[ImageElementExample#TransformedXAML2](~/add/codesnippet/xaml/ImageElementExample.ImageElementExample/TransformedImageExample.xaml#transformedxaml2)]  \n  \n [!code-cs[ImageElementExample#TransformedCSharp1](~/add/codesnippet/csharp/ImageElementExample.ImageElementExample/TransformedImageExample.xaml.cs#transformedcsharp1)]\n [!code-vb[ImageElementExample#TransformedCSharp1](~/add/codesnippet/visualbasic/ImageElementExample.ImageElementExample/TransformedImageExample.xaml.vb#transformedcsharp1)]"
  syntax:
    content: public System.Windows.Media.Imaging.Rotation Rotation { get; set; }
    return:
      type: System.Windows.Media.Imaging.Rotation
      description: "适用于旋转<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。 默认值是<xref href=&quot;System.Windows.Media.Imaging.Rotation&quot;> </xref>。"
  overload: System.Windows.Media.Imaging.BitmapImage.Rotation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.RotationProperty
  id: RotationProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: RotationProperty
  nameWithType: BitmapImage.RotationProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.RotationProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.Rotation*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.Rotation*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RotationProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.SourceRect
  id: SourceRect
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: SourceRect
  nameWithType: BitmapImage.SourceRect
  fullName: System.Windows.Media.Imaging.BitmapImage.SourceRect
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置用作的源矩形<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。"
  remarks: "<a name=&quot;dependencyPropertyInfo_SourceRect&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Imaging.BitmapImage.SourceRectProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Imaging.BitmapImage.SourceRectProperty>"
  syntax:
    content: public System.Windows.Int32Rect SourceRect { get; set; }
    return:
      type: System.Windows.Int32Rect
      description: "使用作为的源矩形<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。 默认值为<xref:System.Windows.Int32Rect.Empty*>。</xref:System.Windows.Int32Rect.Empty*>"
  overload: System.Windows.Media.Imaging.BitmapImage.SourceRect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.SourceRectProperty
  id: SourceRectProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: SourceRectProperty
  nameWithType: BitmapImage.SourceRectProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.SourceRectProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.SourceRect*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.SourceRect*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SourceRectProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.StreamSource
  id: StreamSource
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: StreamSource
  nameWithType: BitmapImage.StreamSource
  fullName: System.Windows.Media.Imaging.BitmapImage.StreamSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置流的源<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。"
  remarks: "如果 StreamSource 和<xref:System.Windows.Media.Imaging.BitmapImage.UriSource%2A>都设置，将忽略值 StreamSource。</xref:System.Windows.Media.Imaging.BitmapImage.UriSource%2A>       设置<xref:System.Windows.Media.Imaging.BitmapImage.CacheOption%2A>属性<xref:System.Windows.Media.Imaging.BitmapCacheOption?displayProperty=fullName>如果你想要关闭后的流<xref:System.Windows.Media.Imaging.BitmapImage>创建。</xref:System.Windows.Media.Imaging.BitmapImage> </xref:System.Windows.Media.Imaging.BitmapCacheOption?displayProperty=fullName> </xref:System.Windows.Media.Imaging.BitmapImage.CacheOption%2A> 默认值<xref:System.Windows.Media.Imaging.BitmapCacheOption>缓存选项保留对流的访问权限，直至需要位图，并且由垃圾回收器处理清理。</xref:System.Windows.Media.Imaging.BitmapCacheOption>      <a name=&quot;dependencyPropertyInfo_StreamSource&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Imaging.BitmapImage.StreamSourceProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Imaging.BitmapImage.StreamSourceProperty>"
  syntax:
    content: public System.IO.Stream StreamSource { get; set; }
    return:
      type: System.IO.Stream
      description: "流的源<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Imaging.BitmapImage.StreamSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.StreamSourceProperty
  id: StreamSourceProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: StreamSourceProperty
  nameWithType: BitmapImage.StreamSourceProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.StreamSourceProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.StreamSource*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.StreamSource*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty StreamSourceProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.UriCachePolicy
  id: UriCachePolicy
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: UriCachePolicy
  nameWithType: BitmapImage.UriCachePolicy
  fullName: System.Windows.Media.Imaging.BitmapImage.UriCachePolicy
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置一个值，表示来自 HTTP 的源的图像的缓存策略。"
  remarks: "UriCachePolicy 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Net.Cache.RequestCachePolicy UriCachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "基<xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;></xref>的当前上下文。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Imaging.BitmapImage.UriCachePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.UriCachePolicyProperty
  id: UriCachePolicyProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: UriCachePolicyProperty
  nameWithType: BitmapImage.UriCachePolicyProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.UriCachePolicyProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.UriCachePolicy*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.UriCachePolicy*>"
  remarks: "UriCachePolicyProperty 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty UriCachePolicyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.UriSource
  id: UriSource
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: UriSource
  nameWithType: BitmapImage.UriSource
  fullName: System.Windows.Media.Imaging.BitmapImage.UriSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "获取或设置<xref:System.Uri>源<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。</xref:System.Uri>"
  remarks: "如果<xref:System.Windows.Media.Imaging.BitmapImage.StreamSource%2A>和都设置 UriSource、<xref:System.Windows.Media.Imaging.BitmapImage.StreamSource%2A>值将被忽略。</xref:System.Windows.Media.Imaging.BitmapImage.StreamSource%2A> </xref:System.Windows.Media.Imaging.BitmapImage.StreamSource%2A>      <a name=&quot;dependencyPropertyInfo_IsDownloading&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Imaging.BitmapImage.UriSourceProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Imaging.BitmapImage.UriSourceProperty>"
  example:
  - "The following example demonstrates the use the UriSource property in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-xml[imageelementexample#SimpleXAML2](~/add/codesnippet/xaml/ImageElementExample.ImageElementExample/SimpleImageExample.xaml#simplexaml2)]\n [!code-xml[imageelementexample#SimpleXAML2](~/add/codesnippet/xaml/ImageElementExample.ImageElementExample/SimpleImageExample.xaml#simplexaml2)]  \n  \n [!code-cs[imageelementexample#SimpleCSharp1](~/add/codesnippet/csharp/ImageElementExample.ImageElementExample/SimpleImageExample.xaml.cs#simplecsharp1)]\n [!code-vb[imageelementexample#SimpleCSharp1](~/add/codesnippet/visualbasic/ImageElementExample.ImageElementExample/SimpleImageExample.xaml.vb#simplecsharp1)]"
  syntax:
    content: public Uri UriSource { get; set; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>源<xref href=&quot;System.Windows.Media.Imaging.BitmapImage&quot;> </xref>。</xref:System.Uri> 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Imaging.BitmapImage.UriSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.BitmapImage.UriSourceProperty
  id: UriSourceProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  langs:
  - csharp
  name: UriSourceProperty
  nameWithType: BitmapImage.UriSourceProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.UriSourceProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "标识<xref:System.Windows.Media.Imaging.BitmapImage.UriSource*>依赖项属性。</xref:System.Windows.Media.Imaging.BitmapImage.UriSource*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty UriSourceProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: System.Windows.Media.Imaging.BitmapSource
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Media.Imaging.BitmapImage.#ctor
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: BitmapImage()
  nameWithType: BitmapImage.BitmapImage()
  fullName: System.Windows.Media.Imaging.BitmapImage.BitmapImage()
- uid: System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri)
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: BitmapImage(Uri)
  nameWithType: BitmapImage.BitmapImage(Uri)
  fullName: System.Windows.Media.Imaging.BitmapImage.BitmapImage(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri,System.Net.Cache.RequestCachePolicy)
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: BitmapImage(Uri,RequestCachePolicy)
  nameWithType: BitmapImage.BitmapImage(Uri,RequestCachePolicy)
  fullName: System.Windows.Media.Imaging.BitmapImage.BitmapImage(Uri,RequestCachePolicy)
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Windows.Media.Imaging.BitmapImage.BaseUri
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: BaseUri
  nameWithType: BitmapImage.BaseUri
  fullName: System.Windows.Media.Imaging.BitmapImage.BaseUri
- uid: System.Windows.Media.Imaging.BitmapImage.BeginInit
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: BeginInit()
  nameWithType: BitmapImage.BeginInit()
  fullName: System.Windows.Media.Imaging.BitmapImage.BeginInit()
- uid: System.Windows.Media.Imaging.BitmapImage.CacheOption
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CacheOption
  nameWithType: BitmapImage.CacheOption
  fullName: System.Windows.Media.Imaging.BitmapImage.CacheOption
- uid: System.Windows.Media.Imaging.BitmapCacheOption
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapCacheOption
  nameWithType: BitmapCacheOption
  fullName: System.Windows.Media.Imaging.BitmapCacheOption
- uid: System.Windows.Media.Imaging.BitmapImage.CacheOptionProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CacheOptionProperty
  nameWithType: BitmapImage.CacheOptionProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.CacheOptionProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Imaging.BitmapImage.Clone
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: Clone()
  nameWithType: BitmapImage.Clone()
  fullName: System.Windows.Media.Imaging.BitmapImage.Clone()
- uid: System.Windows.Media.Imaging.BitmapImage
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapImage
  nameWithType: BitmapImage
  fullName: System.Windows.Media.Imaging.BitmapImage
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: BitmapImage.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapImage.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValue
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapImage.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValue()
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: BitmapImage.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.Imaging.BitmapImage.CreateInstanceCore
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BitmapImage.CreateInstanceCore()
  fullName: System.Windows.Media.Imaging.BitmapImage.CreateInstanceCore()
- uid: System.Windows.Media.Imaging.BitmapImage.CreateOptions
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CreateOptions
  nameWithType: BitmapImage.CreateOptions
  fullName: System.Windows.Media.Imaging.BitmapImage.CreateOptions
- uid: System.Windows.Media.Imaging.BitmapCreateOptions
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapCreateOptions
  nameWithType: BitmapCreateOptions
  fullName: System.Windows.Media.Imaging.BitmapCreateOptions
- uid: System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CreateOptionsProperty
  nameWithType: BitmapImage.CreateOptionsProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: DecodePixelHeight
  nameWithType: BitmapImage.DecodePixelHeight
  fullName: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: DecodePixelHeightProperty
  nameWithType: BitmapImage.DecodePixelHeightProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: DecodePixelWidth
  nameWithType: BitmapImage.DecodePixelWidth
  fullName: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: DecodePixelWidthProperty
  nameWithType: BitmapImage.DecodePixelWidthProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty
- uid: System.Windows.Media.Imaging.BitmapImage.EndInit
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: EndInit()
  nameWithType: BitmapImage.EndInit()
  fullName: System.Windows.Media.Imaging.BitmapImage.EndInit()
- uid: System.Windows.Media.Imaging.BitmapImage.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: BitmapImage.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapImage.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.BitmapImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: BitmapImage.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.BitmapImage.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.BitmapImage.IsDownloading
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: IsDownloading
  nameWithType: BitmapImage.IsDownloading
  fullName: System.Windows.Media.Imaging.BitmapImage.IsDownloading
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Imaging.BitmapImage.Metadata
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: Metadata
  nameWithType: BitmapImage.Metadata
  fullName: System.Windows.Media.Imaging.BitmapImage.Metadata
- uid: System.Windows.Media.ImageMetadata
  parent: System.Windows.Media
  isExternal: false
  name: ImageMetadata
  nameWithType: ImageMetadata
  fullName: System.Windows.Media.ImageMetadata
- uid: System.Windows.Media.Imaging.BitmapImage.Rotation
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: Rotation
  nameWithType: BitmapImage.Rotation
  fullName: System.Windows.Media.Imaging.BitmapImage.Rotation
- uid: System.Windows.Media.Imaging.Rotation
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: Rotation
  nameWithType: Rotation
  fullName: System.Windows.Media.Imaging.Rotation
- uid: System.Windows.Media.Imaging.BitmapImage.RotationProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: RotationProperty
  nameWithType: BitmapImage.RotationProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.RotationProperty
- uid: System.Windows.Media.Imaging.BitmapImage.SourceRect
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: SourceRect
  nameWithType: BitmapImage.SourceRect
  fullName: System.Windows.Media.Imaging.BitmapImage.SourceRect
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Media.Imaging.BitmapImage.SourceRectProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: SourceRectProperty
  nameWithType: BitmapImage.SourceRectProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.SourceRectProperty
- uid: System.Windows.Media.Imaging.BitmapImage.StreamSource
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: StreamSource
  nameWithType: BitmapImage.StreamSource
  fullName: System.Windows.Media.Imaging.BitmapImage.StreamSource
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Media.Imaging.BitmapImage.StreamSourceProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: StreamSourceProperty
  nameWithType: BitmapImage.StreamSourceProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.StreamSourceProperty
- uid: System.Windows.Media.Imaging.BitmapImage.UriCachePolicy
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: UriCachePolicy
  nameWithType: BitmapImage.UriCachePolicy
  fullName: System.Windows.Media.Imaging.BitmapImage.UriCachePolicy
- uid: System.Windows.Media.Imaging.BitmapImage.UriCachePolicyProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: UriCachePolicyProperty
  nameWithType: BitmapImage.UriCachePolicyProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.UriCachePolicyProperty
- uid: System.Windows.Media.Imaging.BitmapImage.UriSource
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: UriSource
  nameWithType: BitmapImage.UriSource
  fullName: System.Windows.Media.Imaging.BitmapImage.UriSource
- uid: System.Windows.Media.Imaging.BitmapImage.UriSourceProperty
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: UriSourceProperty
  nameWithType: BitmapImage.UriSourceProperty
  fullName: System.Windows.Media.Imaging.BitmapImage.UriSourceProperty
- uid: System.Windows.Media.Imaging.BitmapImage.#ctor*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: BitmapImage
  nameWithType: BitmapImage.BitmapImage
- uid: System.Windows.Media.Imaging.BitmapImage.BaseUri*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: BaseUri
  nameWithType: BitmapImage.BaseUri
- uid: System.Windows.Media.Imaging.BitmapImage.BeginInit*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: BeginInit
  nameWithType: BitmapImage.BeginInit
- uid: System.Windows.Media.Imaging.BitmapImage.CacheOption*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CacheOption
  nameWithType: BitmapImage.CacheOption
- uid: System.Windows.Media.Imaging.BitmapImage.Clone*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: Clone
  nameWithType: BitmapImage.Clone
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCore*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CloneCore
  nameWithType: BitmapImage.CloneCore
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValue*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapImage.CloneCurrentValue
- uid: System.Windows.Media.Imaging.BitmapImage.CloneCurrentValueCore*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: BitmapImage.CloneCurrentValueCore
- uid: System.Windows.Media.Imaging.BitmapImage.CreateInstanceCore*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CreateInstanceCore
  nameWithType: BitmapImage.CreateInstanceCore
- uid: System.Windows.Media.Imaging.BitmapImage.CreateOptions*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: CreateOptions
  nameWithType: BitmapImage.CreateOptions
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: DecodePixelHeight
  nameWithType: BitmapImage.DecodePixelHeight
- uid: System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: DecodePixelWidth
  nameWithType: BitmapImage.DecodePixelWidth
- uid: System.Windows.Media.Imaging.BitmapImage.EndInit*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: EndInit
  nameWithType: BitmapImage.EndInit
- uid: System.Windows.Media.Imaging.BitmapImage.GetAsFrozenCore*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: BitmapImage.GetAsFrozenCore
- uid: System.Windows.Media.Imaging.BitmapImage.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: BitmapImage.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Imaging.BitmapImage.IsDownloading*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: IsDownloading
  nameWithType: BitmapImage.IsDownloading
- uid: System.Windows.Media.Imaging.BitmapImage.Metadata*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: Metadata
  nameWithType: BitmapImage.Metadata
- uid: System.Windows.Media.Imaging.BitmapImage.Rotation*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: Rotation
  nameWithType: BitmapImage.Rotation
- uid: System.Windows.Media.Imaging.BitmapImage.SourceRect*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: SourceRect
  nameWithType: BitmapImage.SourceRect
- uid: System.Windows.Media.Imaging.BitmapImage.StreamSource*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: StreamSource
  nameWithType: BitmapImage.StreamSource
- uid: System.Windows.Media.Imaging.BitmapImage.UriCachePolicy*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: UriCachePolicy
  nameWithType: BitmapImage.UriCachePolicy
- uid: System.Windows.Media.Imaging.BitmapImage.UriSource*
  parent: System.Windows.Media.Imaging.BitmapImage
  isExternal: false
  name: UriSource
  nameWithType: BitmapImage.UriSource
