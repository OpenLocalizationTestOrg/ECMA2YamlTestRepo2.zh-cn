### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal
  id: GroupPrincipal
  children:
  - System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose
  - System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers
  - System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)
  - System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
  - System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
  - System.DirectoryServices.AccountManagement.GroupPrincipal.Members
  langs:
  - csharp
  name: GroupPrincipal
  nameWithType: GroupPrincipal
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal
  type: Class
  summary: "封装组帐户。 组帐户可以是任意的主体对象或出于管理目的而创建的帐户的集合。"
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GroupPrincipal(PrincipalContext)
  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupPrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "初始化的新实例<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref>通过使用指定的上下文的类。"
  remarks: "创建时不会保存的组主体帐户。 若要保存帐户，请调用<xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>方法。</xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>"
  syntax:
    content: public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定的服务器或对其执行操作的域。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)'
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GroupPrincipal(PrincipalContext,String)
  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupPrincipal(PrincipalContext,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "初始化的新实例<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref>类并将其分配给指定的上下文和 SAM 帐户名。"
  remarks: "创建时不会保存的组主体帐户。 若要保存帐户，请调用<xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>方法。</xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>"
  syntax:
    content: public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定的服务器或对其执行操作的域。"
    - id: samAccountName
      type: System.String
      description: "此主体 SAM 帐户名。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose
  id: Dispose
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: Dispose()
  nameWithType: GroupPrincipal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "释放的当前实例<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref>对象。"
  syntax:
    content: public override void Dispose ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(PrincipalContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "返回与指定的标识值匹配的组主体对象。"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定的服务器或对其执行操作的域。"
    - id: identityValue
      type: System.String
      description: "组主体的标识。 此参数可以为包含在任何格式<xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref>枚举。"
    return:
      type: System.DirectoryServices.AccountManagement.GroupPrincipal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref>对象与匹配的指定的标识值和类型，或如果没有找到匹配的为 null。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*
  exceptions:
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "找到多个匹配当前的组对象的组主体对象。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "返回与指定的标识类型和值匹配的组主体对象。 此版本的<xref:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity>方法确定标识值的格式。</xref:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定的服务器或对其执行操作的域。"
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref>枚举值，指定的格式`identityValue`参数。"
    - id: identityValue
      type: System.String
      description: "组主体的标识。 此参数可以为包含在任何格式<xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref>枚举。"
    return:
      type: System.DirectoryServices.AccountManagement.GroupPrincipal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref>与匹配的指定的标识值和类型，或找到 null 如果没有匹配项。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*
  exceptions:
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "找到多个匹配当前的组对象的组主体对象。"
  - type: System.ComponenetModel.InvalidEnumerationOperatorException
    commentId: T:System.ComponenetModel.InvalidEnumerationOperatorException
    description: "标识值不是有效<xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref>枚举值。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers
  id: GetMembers
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GetMembers()
  nameWithType: GroupPrincipal.GetMembers()
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "返回组中包含的主体对象的集合。"
  remarks: "此方法不会搜索当前的组以递归方式。 因此，可能在主体的对象集合中返回组对象。       上下文不返回成员。 例如，如果 AD DS 上下文基于在&quot;CN = SpecialUsers，DC = Fabrikam，DC = com&quot;，PrincipalFindResult 集将包含位于下的组成员&quot;CN = NormalUsers，DC = Fabrikam，DC = com&quot;此外，即使它们落在不是搜索上下文的一部分的范围内。 返回的主体集合还可能包含位于不同的存储组之外的成员。"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetMembers ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%271&gt;包含是组或空集合的成员，如果组不有任何成员的主体对象的对象。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)
  id: GetMembers(System.Boolean)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GetMembers(Boolean)
  nameWithType: GroupPrincipal.GetMembers(Boolean)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "返回组中包含的主体对象的集合。 当递归标志设置为 true，此方法将当前的组以递归方式搜索，并返回所有嵌套的组成员。"
  remarks: "返回的主体集合不包含组对象时递归标志设置为`true`; 仅返回叶节点。 例如，如果必须包含一个计算机对象和组对象 （与仅用户主体） 的组，以递归方式搜索返回的集合将包含计算机对象和嵌套组中的用户主体对象。 由于组对象不是叶，即使它为空，它不会返回在递归搜索。  当递归标志设置为`false`，返回的集合可能包含组对象。       上下文不返回成员。 例如，如果 AD DS 上下文基于在&quot;CN = SpecialUsers，DC = Fabrikam，DC = com&quot;，PrincipalFindResult 集将包含位于下的组成员&quot;CN = NormalUsers，DC = Fabrikam，DC = com&quot;此外，即使它们落在不是搜索上下文的一部分的范围内。 返回的主体集合还可能包含位于不同的存储组之外的成员。"
  example:
  - "The following code connects to the LDAP domain \"fabrikam.com\" with the username set to \"administrator\" and the password set to \"SecretPwd123\" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed to find the group that has the name \"Domain Admins\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor \"DC=fabrikam,DC=com.\" If the group is found, all the principals that are members of this group, which includes recursive members, are then enumerated  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      \n                                            \"fabrikam.com\",   \n                                            \"DC=fabrikam,DC=com\",   \n                                            \"administrator\",   \n                                            \"SecretPwd123\");  \n  \nGroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   \n                                                   IdentityType.Name,   \n                                                   \"Domain Admins\");  \n  \nif (grp != null)  \n{  \n    foreach (Principal p in grp.GetMembers(true))  \n    {  \n         Console.WriteLine(p.Name);  \n    }  \n    grp.Dispose();  \n}  \n  \nctx.Dispose();   \n```"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetMembers (bool recursive);
    parameters:
    - id: recursive
      type: System.Boolean
      description: "一个布尔值，指定组是否以递归方式搜索。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%271&gt;包含是组或空集合的成员，如果组不有任何成员的主体对象的对象。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
  id: GroupScope
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: GroupScope
  nameWithType: GroupPrincipal.GroupScope
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "获取或设置一个可以为 Null <xref href=&quot;System.DirectoryServices.AccountManagement.GroupScope&quot;> </xref>指定此组主体的作用域的枚举。"
  syntax:
    content: public Nullable<System.DirectoryServices.AccountManagement.GroupScope> GroupScope { get; set; }
    return:
      type: System.Nullable{System.DirectoryServices.AccountManagement.GroupScope}
      description: "可以为 null <xref href=&quot;System.DirectoryServices.AccountManagement.GroupScope&quot;> </xref>枚举值，指定此组或 null 的作用域，如果没有作用域的设置。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "应用程序不可能将此属性设置为 null。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
  id: IsSecurityGroup
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: IsSecurityGroup
  nameWithType: GroupPrincipal.IsSecurityGroup
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "获取或设置一个可以为 Null 的布尔值，该值指示是否已启用安全性的组。"
  remarks: "当此属性返回 false 时，则暂时不对组启用安全。 当[IsSecurityGroup](~/add/includes/ajax-current-ext-md.md)属性重置为 true，更高版本，此组将具有相同的属性，如之前它被设置为 false。       如果不将该主体保持在存储区中，此属性将返回 null。 保持主体后，默认启用安全的设置取决于存储区。 AD DS 和 AD LDS 存储禁用新的主体时将它们永久保存，而 SAM 使新的主体时将它们永久保存。"
  syntax:
    content: public Nullable<bool> IsSecurityGroup { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果组是安全启用，则为 null，如果尚未保留组;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "应用程序不可能将此属性设置为 null。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members
  id: Members
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  langs:
  - csharp
  name: Members
  nameWithType: GroupPrincipal.Members
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.Members
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "获取表示组的成员的主体对象的集合。"
  remarks: "对于 AD DS 组成员属性包括由于其 primaryId 属性是组的成员的用户主体。 当组包含这些类型的成员时，以下限制适用:-<xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A>方法不能用于删除属于由于其 primaryId 属性的组的成员。</xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A>      -<xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A>方法无法用于清除属于由于其 primaryId 属性的组的成员。</xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A>"
  example:
  - "The following code connects to the LDAP domain \"fabrikam.com\" with the username set to \"administrator\" and the password set to \"SecretPwd123\" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed to find the group that has name \"Domain Admins\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, \"DC=fabrikam,DC=com.\" If the group is found, the user who has name \"John Smith\" is removed from the group and the user who has name \"Jim Daly\" is added to the group  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       \n                                            \"fabrikam.com\",                                                                               \n                                            \"DC=fabrikam,DC=com\",                                                                 \n                                            \"administrator\",   \n                                            \"SecretPwd123\");  \n  \nGroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   \n                                                   IdentityType.Name,   \n                                                   \"Domain Admins\");  \n  \nif (grp != null)  \n{  \n    grp.Members.Remove(ctx, IdentityType.Name, \"John Smith\");            \n    grp.Members.Add(ctx, IdentityType.Name, \"Jim Daly\");  \n    grp.Save();  \n    grp.Dispose();  \n}  \nctx.Dispose();  \n```"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalCollection
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalCollection&quot;> </xref>对象，其中包含表示组的成员的主体对象。"
  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.Members*
  exceptions: []
  platform:
  - net462
references:
- uid: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: System.DirectoryServices.AccountManagement.Principal
- uid: System.MultipleMatchesException
  isExternal: true
  name: System.MultipleMatchesException
- uid: System.ComponenetModel.InvalidEnumerationOperatorException
  isExternal: true
  name: System.ComponenetModel.InvalidEnumerationOperatorException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupPrincipal(PrincipalContext)
  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupPrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupPrincipal(PrincipalContext,String)
  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupPrincipal(PrincipalContext,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: Dispose()
  nameWithType: GroupPrincipal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose()
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(PrincipalContext,String)
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: GroupPrincipal
  nameWithType: GroupPrincipal
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.IdentityType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: IdentityType
  nameWithType: IdentityType
  fullName: System.DirectoryServices.AccountManagement.IdentityType
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GetMembers()
  nameWithType: GroupPrincipal.GetMembers()
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GetMembers(Boolean)
  nameWithType: GroupPrincipal.GetMembers(Boolean)
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupScope
  nameWithType: GroupPrincipal.GroupScope
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope
- uid: System.Nullable{System.DirectoryServices.AccountManagement.GroupScope}
  parent: System
  isExternal: true
  name: Nullable<GroupScope>
  nameWithType: Nullable<GroupScope>
  fullName: System.Nullable<System.DirectoryServices.AccountManagement.GroupScope>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DirectoryServices.AccountManagement.GroupScope>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.GroupScope
    name: GroupScope
    nameWithType: GroupScope
    fullName: GroupScope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: IsSecurityGroup
  nameWithType: GroupPrincipal.IsSecurityGroup
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: Members
  nameWithType: GroupPrincipal.Members
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal.Members
- uid: System.DirectoryServices.AccountManagement.PrincipalCollection
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalCollection
  nameWithType: PrincipalCollection
  fullName: System.DirectoryServices.AccountManagement.PrincipalCollection
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupPrincipal
  nameWithType: GroupPrincipal.GroupPrincipal
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: Dispose
  nameWithType: GroupPrincipal.Dispose
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: FindByIdentity
  nameWithType: GroupPrincipal.FindByIdentity
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GetMembers
  nameWithType: GroupPrincipal.GetMembers
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: GroupScope
  nameWithType: GroupPrincipal.GroupScope
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: IsSecurityGroup
  nameWithType: GroupPrincipal.IsSecurityGroup
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members*
  parent: System.DirectoryServices.AccountManagement.GroupPrincipal
  isExternal: false
  name: Members
  nameWithType: GroupPrincipal.Members
