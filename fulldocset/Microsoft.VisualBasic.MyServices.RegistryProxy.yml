### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy
  id: RegistryProxy
  children:
  - Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  - Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  - Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  - Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  - Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  - Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  - Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  langs:
  - csharp
  name: RegistryProxy
  nameWithType: RegistryProxy
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy
  type: Class
  summary: "提供用于操作注册表属性和方法。"
  remarks: "若要使用这些属性，你必须具有读取和写入权限从<xref:System.Security.Permissions.RegistryPermissionAccess>枚举。</xref:System.Security.Permissions.RegistryPermissionAccess> 以完全信任运行的任何代码 （在下的默认安全策略，这是安装在用户的本地硬盘上的任何代码） 具有足够的权限来访问注册表。 有关详细信息，请参阅<xref:System.Security.Permissions.RegistryPermission>类。</xref:System.Security.Permissions.RegistryPermission>       下表列出了所涉及的任务的示例`My.Computer.Registry`对象。      |到 |请参阅 |  |--------|---------|  |创建注册表项并将其值设置 |[如何︰ 创建注册表项并将其值设置](~/add/includes/ajax-current-ext-md.md)|  |删除注册表项 |[如何︰ 删除注册表项](~/add/includes/ajax-current-ext-md.md)|  |从注册表中读取数据 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the value `Name` from `HKEY_CURRENT_USER\\Software\\MyApp` and displays it in a message box.  \n  \n [!code-vb[VbVbalrMyRegistry#8](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._2_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class RegistryProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  id: ClassesRoot
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返回<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>类型提供了访问权<xref uid=&quot;langword_csharp_HKEY_CLASSES_ROOT&quot; name=&quot;HKEY_CLASSES_ROOT&quot; href=&quot;&quot;> </xref>。"
  remarks: "`HKEY_CLASSES_ROOT`主要用于在 Windows 中存储有关文件关联的信息。       <xref:System.Security.Permissions.RegistryPermission>类，该类在<xref:System.Security.Permissions>命名空间，控制对注册表变量的访问。</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 注册表变量不应存储在内存位置其中代码，而不<xref:System.Security.Permissions.RegistryPermission>可以访问它们。</xref:System.Security.Permissions.RegistryPermission> 同样，授予权限时，授予完成工作所需的这些权限。       注册表权限访问值由定义<xref:System.Security.Permissions.RegistryPermissionAccess>枚举。</xref:System.Security.Permissions.RegistryPermissionAccess> 下表详细介绍其成员。      |值 |说明 |  |-----------|-----------------|  |AllAccess |创建、 读取和写入注册表变量的访问。 |  |创建 |创建对注册表变量的访问。 |  |NoAccess |不能访问注册表变量。 |  |读取 |对注册表变量的读取访问。 |  |编写 |对注册表变量的写访问权限。 |      下表列出了所涉及的任务的示例`My.Computer.Registry`对象。      |到 |请参阅 |  |--------|---------|  |创建注册表项并将其值设置 |[如何︰ 创建注册表项并将其值设置](~/add/includes/ajax-current-ext-md.md)|  |删除注册表项 |[如何︰ 删除注册表项](~/add/includes/ajax-current-ext-md.md)|  |从注册表项读取值 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example gets the names of the subkeys for the `ClassesRoot` registry key and adds them to `ListBox1`.  \n  \n [!code-vb[VbVbalrMyRegistry#10](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._0_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` in your project."
  syntax:
    content: public Microsoft.Win32.RegistryKey ClassesRoot { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  id: CurrentConfig
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返回<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>类型提供了访问权<xref uid=&quot;langword_csharp_HKEY_CURRENT_CONFIG&quot; name=&quot;HKEY_CURRENT_CONFIG&quot; href=&quot;&quot;> </xref>。"
  remarks: "`HKEY_CURRENT_CONFIG`主要用于在计算机上存储设备的设置。       <xref:System.Security.Permissions.RegistryPermission>类，该类在<xref:System.Security.Permissions>命名空间，控制对注册表变量的访问。</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 注册表变量不应存储在内存位置其中代码，而不<xref:System.Security.Permissions.RegistryPermission>可以访问它们。</xref:System.Security.Permissions.RegistryPermission> 同样，授予权限时，授予完成工作所需的这些权限。       注册表权限访问值由定义<xref:System.Security.Permissions.RegistryPermissionAccess>枚举。</xref:System.Security.Permissions.RegistryPermissionAccess> 下表详细介绍其成员。      |值 |说明 |  |-----------|-----------------|  |AllAccess |创建、 读取和写入注册表变量的访问。 |  |创建 |创建对注册表变量的访问。 |  |NoAccess |不能访问注册表变量。 |  |读取 |对注册表变量的读取访问。 |  |编写 |对注册表变量的写访问权限。 |      下表列出了所涉及的任务的示例`My.Computer.Registry`对象。      |到 |请参阅 |  |--------|---------|  |创建注册表项并将其值设置 |[如何︰ 创建注册表项并将其值设置](~/add/includes/ajax-current-ext-md.md)|  |删除注册表项 |[如何︰ 删除注册表项](~/add/includes/ajax-current-ext-md.md)|  |从注册表项读取值 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the subkey `MyDeviceSettings`.  \n  \n [!code-vb[VbVbalrMyRegistry#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._48_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CurrentConfig { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  id: CurrentUser
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返回<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>类型提供了访问权<xref uid=&quot;langword_csharp_HKEY_CURRENT_USER&quot; name=&quot;HKEY_CURRENT_USER&quot; href=&quot;&quot;> </xref>。"
  remarks: "`HKEY_CURRENT_USER`主要用于在 Windows 中存储每个用户设置，如颜色和字体。 根据用户与不同的密钥。       <xref:System.Security.Permissions.RegistryPermission>类，该类在<xref:System.Security.Permissions>命名空间，控制对注册表变量的访问。</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 注册表变量不应存储在内存位置其中代码，而不<xref:System.Security.Permissions.RegistryPermission>可以访问它们。</xref:System.Security.Permissions.RegistryPermission> 同样，授予权限时，授予完成工作所需的最少特权。       注册表权限访问值由定义<xref:System.Security.Permissions.RegistryPermissionAccess>枚举。</xref:System.Security.Permissions.RegistryPermissionAccess> 下表详细介绍其成员。      |值 |说明 |  |-----------|-----------------|  |AllAccess |创建、 读取和写入注册表变量的访问。 |  |创建 |创建对注册表变量的访问。 |  |NoAccess |不能访问注册表变量。 |  |读取 |对注册表变量的读取访问。 |  |编写 |对注册表变量的写访问权限。 |      下表列出了所涉及的任务的示例`My.Computer.Registry`对象。      |到 |请参阅 |  |--------|---------|  |创建注册表项并将其值设置 |[如何︰ 创建注册表项并将其值设置](~/add/includes/ajax-current-ext-md.md)|  |删除注册表项 |[如何︰ 删除注册表项](~/add/includes/ajax-current-ext-md.md)|  |从注册表项读取值 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the subkey `Software\\MyCompany\\Preferences\\UserData`.  \n  \n [!code-vb[VbVbalrMyRegistry#2](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._47_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CurrentUser { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  id: DynData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: DynData
  nameWithType: RegistryProxy.DynData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返回<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>类型，它提供对访问<xref uid=&quot;langword_csharp_HKEY_DYNDATA&quot; name=&quot;HKEY_DYNDATA&quot; href=&quot;&quot;> </xref>。"
  remarks: "`HKEY_DYNDATA`可用于存储动态注册表数据，例如虚拟设备驱动程序使用的并支持仅在 Windows 95/98 系统上。 在 Windows 95/98 系统上调用任何方法所返回键的`Registry.DynData`，如`CreateSubKey`， `DeleteSubKey`， `GetSubKeyCount`，`GetValueCount`等，将引发一种<xref:System.IO.IOException>。</xref:System.IO.IOException>       <xref:System.Security.Permissions.RegistryPermission>类，该类在<xref:System.Security.Permissions>命名空间，控制对注册表变量的访问。</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 注册表变量不应存储在内存位置其中代码，而不<xref:System.Security.Permissions.RegistryPermission>可以访问它们。</xref:System.Security.Permissions.RegistryPermission> 同样，授予权限时，授予完成工作所需的最少特权。       注册表权限访问值由定义<xref:System.Security.Permissions.RegistryPermissionAccess>枚举。</xref:System.Security.Permissions.RegistryPermissionAccess> 下表详细介绍其成员。      |值 |说明 |  |-----------|-----------------|  |AllAccess |创建、 读取和写入注册表变量的访问。 |  |创建 |创建对注册表变量的访问。 |  |NoAccess |不能访问注册表变量。 |  |读取 |对注册表变量的读取访问。 |  |编写 |对注册表变量的写访问权限。 |      下表列出了所涉及的任务的示例`My.Computer.Registry`对象。      |到 |请参阅 |  |--------|---------|  |创建注册表项并将其值设置 |[如何︰ 创建注册表项并将其值设置](~/add/includes/ajax-current-ext-md.md)|  |删除注册表项 |[如何︰ 删除注册表项](~/add/includes/ajax-current-ext-md.md)|  |从注册表项读取值 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the subkey tree `Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#1](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey DynData { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  id: GetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: GetValue(String,String,Object)
  nameWithType: RegistryProxy.GetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(String,String,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "从注册表项中获取一个值。"
  remarks: "`valueName`不区分大小写。       注册表项可以包含一个值，与任何名称都不关联。 在注册表编辑器中显示了此未命名的值，而不是名称将显示字符串&quot;（默认值）&quot;。 若要检索此未命名的值，指定 null 或空字符串 (&quot;&quot;) 为`valueName`。       下表列出了所涉及的任务的示例`GetValue`方法。      |到 |请参阅 |  |--------|---------|  |从注册表项读取值 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the value `Name` from `HKEY_CURRENT_USER\\Software\\MyApp` and displays it in a `MessageBox`.  \n  \n [!code-vb[VbVbalrMyRegistry#9](~/add/codesnippet/visualbasic/9a93dcf8-9de6-432f-a595-_1.vb)]"
  syntax:
    content: public object GetValue (string keyName, string valueName, object defaultValue);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 是要检索值的键。 必需。"
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要检索的值。 必需。"
    - id: defaultValue
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 如果值不存在提供的默认值。 必需。"
    return:
      type: System.Object
      description: "从注册表项中获取一个值。"
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户没有读取注册表项所需的权限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，该字符串包含指定值已标记为删除。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>才会开始具有有效的注册表根。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  id: LocalMachine
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返回<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>类型，它提供对访问<xref uid=&quot;langword_csharp_HKEY_LOCAL_MACHINE&quot; name=&quot;HKEY_LOCAL_MACHINE&quot; href=&quot;&quot;> </xref>。"
  remarks: "`HKEY_LOCAL_MACHINE`通常用于存储不发生在用户和用户更改 Windows 中的设置。 计算机的所有用户都共享此密钥。 其五个子项 (`Hardware`， `SAM`， `Security`， `Software`，和`System`) 保存为本地计算机的配置数据。       <xref:System.Security.Permissions.RegistryPermission>类，该类在<xref:System.Security.Permissions>命名空间，控制对注册表变量的访问。</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 注册表变量不应存储在内存位置其中代码，而不<xref:System.Security.Permissions.RegistryPermission>可以访问它们。</xref:System.Security.Permissions.RegistryPermission> 同样，授予权限时，授予完成工作所需的最少特权。       注册表权限访问值由定义<xref:System.Security.Permissions.RegistryPermissionAccess>枚举。</xref:System.Security.Permissions.RegistryPermissionAccess> 下表详细介绍其成员。      |值 |说明 |  |-----------|-----------------|  |AllAccess |创建、 读取和写入注册表变量的访问。 |  |创建 |创建对注册表变量的访问。 |  |NoAccess |不能访问注册表变量。 |  |读取 |对注册表变量的读取访问。 |  |编写 |对注册表变量的写访问权限。 |      下表列出了所涉及的任务的示例`My.Computer.Registry`对象。      |到 |请参阅 |  |--------|---------|  |创建注册表项并将其值设置 |[如何︰ 创建注册表项并将其值设置](~/add/includes/ajax-current-ext-md.md)|  |删除注册表项 |[如何︰ 删除注册表项](~/add/includes/ajax-current-ext-md.md)|  |从注册表项读取值 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the subkey `Software\\MyCompany\\Preferences` and sets the value `FontColor` to `\"red\"`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._97_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey LocalMachine { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  id: PerformanceData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返回<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>类型，它提供对访问<xref uid=&quot;langword_csharp_HKEY_PERFORMANCE_DATA&quot; name=&quot;HKEY_PERFORMANCE_DATA&quot; href=&quot;&quot;> </xref>。"
  remarks: "`HKEY_PERFORMANCE_DATA`用于访问软件组件的性能信息。 当它已安装并且将计数器数据，并在执行时，每个软件组件创建其对象和计数器的密钥。 此数据不存储在注册表中，尽管注册表用来访问它。 相反，调用通过注册表函数`HKEY_PERFORMANCE_DATA`会导致系统从相应的系统对象管理器收集的数据。       在 Windows 98 系统; 上没有此项尝试使用之外调用`Name`方法会引发<xref:System.IO.IOException>.</xref:System.IO.IOException>       此密钥通常无法写入到;尝试在其上创建一个子项将引发<xref:System.IO.IOException>.</xref:System.IO.IOException>       <xref:System.Security.Permissions.RegistryPermission>类，该类在<xref:System.Security.Permissions>命名空间，控制对注册表变量的访问。</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 注册表变量不应存储在内存位置其中代码，而不<xref:System.Security.Permissions.RegistryPermission>可以访问它们。</xref:System.Security.Permissions.RegistryPermission> 同样，授予权限时，授予完成工作所需的最少特权。       注册表权限访问值由定义<xref:System.Security.Permissions.RegistryPermissionAccess>枚举。</xref:System.Security.Permissions.RegistryPermissionAccess> 下表详细介绍其成员。      |值 |说明 |  |-----------|-----------------|  |AllAccess |创建、 读取和写入注册表变量的访问。 |  |创建 |创建对注册表变量的访问。 |  |NoAccess |不能访问注册表变量。 |  |读取 |对注册表变量的读取访问。 |  |编写 |对注册表变量的写访问权限。 |      下表列出了所涉及的任务的示例`My.Computer.Registry`对象。      |到 |请参阅 |  |--------|---------|  |创建注册表项并将其值设置 |[如何︰ 创建注册表项并将其值设置](~/add/includes/ajax-current-ext-md.md)|  |删除注册表项 |[如何︰ 删除注册表项](~/add/includes/ajax-current-ext-md.md)|  |从注册表项读取值 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example gets the value `ThisSoftwar`e from the `MyCompany` subkey.  \n  \n [!code-vb[VbVbalrMyRegistry#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._57_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey PerformanceData { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  id: SetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: SetValue(String,String,Object)
  nameWithType: RegistryProxy.SetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "将值写入注册表项。"
  remarks: "如果指定的键或值不存在，则创建它。       下面是一个示例的任务涉及`My.Computer.Registry.SetValue`方法。      |到 |请参阅 |  |--------|---------|  |在注册表项中设置一个值 |[如何︰ 创建注册表项并设置其值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example sets the value `FontColor` to \"red\" in the key `HKEY_LOCAL_MACHINE\\Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/fde3d5e5-73de-4529-936f-_1.vb)]"
  syntax:
    content: public void SetValue (string keyName, string valueName, object value);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要写入到的密钥的名称。 必需。"
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要写入的值的名称。 必需。"
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 要写入的值。 必需。"
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>才会开始具有有效的注册表根。       -或-<code>valueName</code>长于允许的最大长度 （255 个字符）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>是只读的因此无法写入; 例如，是一个根级别节点，或未打开具有写访问权限..."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户没有创建或修改注册表项所需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: SetValue(String,String,Object,RegistryValueKind)
  nameWithType: RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "将值写入注册表项。"
  remarks: "如果指定的键或值不存在，则创建它。       下面是一个示例的任务涉及`My.Computer.Registry.SetValue`方法。      |到 |请参阅 |  |--------|---------|  |在注册表项中设置一个值 |[如何︰ 创建注册表项并设置其值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example sets the value `FontColor` to \"red\" in the key `HKEY_LOCAL_MACHINE\\Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/a630d4af-e057-4eda-b2b5-_1.vb)]"
  syntax:
    content: public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要写入到的密钥的名称。 必需。"
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要写入的值的名称。 必需。"
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 要写入的值。 必需。"
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: "<xref href=&quot;Microsoft.Win32.RegistryValueKind&quot;></xref>. 必需。"
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>才会开始具有有效的注册表根。       -或-<code>keyName</code>长于允许的最大长度 （255 个字符）。       -的一种<code>value</code>与由指定的注册表数据类型不匹配<code>valueKind</code>，因此无法正确转换该数据。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>是只读的并因此无法写入; 例如，是一个根级别节点，或未打开具有写访问权限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户没有创建或修改注册表项所需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  id: Users
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: Users
  nameWithType: RegistryProxy.Users
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返回<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>类型，它提供对访问<xref uid=&quot;langword_csharp_HKEY_USERS&quot; name=&quot;HKEY_USERS&quot; href=&quot;&quot;> </xref>。"
  remarks: "`HKEY_USERS`主要用于存储首次用户的默认设置。       <xref:System.Security.Permissions.RegistryPermission>类，该类在<xref:System.Security.Permissions>命名空间，控制对注册表变量的访问。</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 注册表变量不应存储在内存位置其中代码，而不<xref:System.Security.Permissions.RegistryPermission>可以访问它们。</xref:System.Security.Permissions.RegistryPermission> 同样，授予权限时，授予完成工作所需的最少特权。       注册表权限访问值由定义<xref:System.Security.Permissions.RegistryPermissionAccess>枚举。</xref:System.Security.Permissions.RegistryPermissionAccess> 下表详细介绍其成员。      |值 |对注册表变量的访问 |  |-----------|----------------------------------|  |AllAccess |创建、 读取、 和写入 |  |创建 |创建 |  |NoAccess |没有访问权限。 |  |读取 |读取 |  |编写 |编写 |      下表列出了所涉及的任务的示例`My.Computer.Registry`对象。      |**To**|**See**|  |------------|-------------|  |创建注册表项并将其值设置 |[如何︰ 创建注册表项并将其值设置](~/add/includes/ajax-current-ext-md.md)|  |删除注册表项 |[如何︰ 删除注册表项](~/add/includes/ajax-current-ext-md.md)|  |从注册表项读取值 |[如何︰ 从注册表项读取值](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example counts and displays the number of values in the registry key.  \n  \n [!code-vb[VbVbalrMyRegistry#4](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._74_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey Users { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.Users*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: DynData
  nameWithType: RegistryProxy.DynData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: GetValue(String,String,Object)
  nameWithType: RegistryProxy.GetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(String,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue(String,String,Object)
  nameWithType: RegistryProxy.SetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object)
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue(String,String,Object,RegistryValueKind)
  nameWithType: RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  nameWithType: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: Users
  nameWithType: RegistryProxy.Users
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: DynData
  nameWithType: RegistryProxy.DynData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: GetValue
  nameWithType: RegistryProxy.GetValue
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue
  nameWithType: RegistryProxy.SetValue
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: Users
  nameWithType: RegistryProxy.Users
