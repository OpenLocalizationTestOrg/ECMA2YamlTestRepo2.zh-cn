### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RoleManagerModule
  id: RoleManagerModule
  children:
  - System.Web.Security.RoleManagerModule.#ctor
  - System.Web.Security.RoleManagerModule.Dispose
  - System.Web.Security.RoleManagerModule.GetRoles
  - System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: RoleManagerModule
  nameWithType: RoleManagerModule
  fullName: System.Web.Security.RoleManagerModule
  type: Class
  summary: "管理<xref href=&quot;System.Web.Security.RolePrincipal&quot;></xref>为当前用户的实例。 此类不能被继承。"
  remarks: "RoleManagerModule 类用于将分配<xref:System.Web.Security.RolePrincipal>到<xref:System.Web.HttpContext.User%2A>的<xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>。</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A>属性</xref:System.Web.HttpContext.User%2A></xref:System.Web.Security.RolePrincipal>       完成请求后，RoleManagerModule 刷新，包含缓存的角色信息的角色 cookie。 如果<xref:System.Web.HttpContext.User%2A>属性属于类型<xref:System.Web.Security.RolePrincipal>，且<xref:System.Web.Security.RolePrincipal>指示其缓存的角色列表已被修改通过设置<xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>属性`true`，RoleManagerModule 将更新，包含缓存的角色信息的角色 cookie。</xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.HttpContext.User%2A>       此类不应在代码中直接使用。"
  syntax:
    content: 'public sealed class RoleManagerModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建的新实例<xref href=&quot;System.Web.Security.RoleManagerModule&quot;></xref>类。"
  remarks: "<xref:System.Web.Security.RoleManagerModule>类用来放置<xref:System.Web.Security.RolePrincipal>中<xref:System.Web.HttpContext.User%2A>属性<xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>，不应在代码中直接使用。</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RoleManagerModule>"
  syntax:
    content: public RoleManagerModule ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Dispose
  id: Dispose
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "调用由 HTTP 运行时，若要释放的角色管理器模块。"
  remarks: "在完成使用<xref:System.Web.Security.RoleManagerModule>.</xref:System.Web.Security.RoleManagerModule>时调用的 Dispose Dispose 方法离开<xref:System.Web.Security.RoleManagerModule>中不可用状态。</xref:System.Web.Security.RoleManagerModule> 调用 Dispose 后，必须释放对所有引用<xref:System.Web.Security.RoleManagerModule>以便可以通过垃圾回收回收其占用的内存。</xref:System.Web.Security.RoleManagerModule>       此方法不应在代码中直接使用。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.GetRoles
  id: GetRoles
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "是一个全局应用程序事件时引发<xref href=&quot;System.Web.Security.RoleManagerModule&quot;></xref>已准备好创建<xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> ，它表示当前用户。"
  remarks: "<xref:System.Web.Security.RoleManagerModule>创建一个<xref:System.Web.Security.RolePrincipal>对象，并将它分配给<xref:System.Web.HttpContext.User%2A>属性的<xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>。</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A></xref:System.Web.HttpContext.User%2A></xref:System.Web.Security.RolePrincipal></xref:System.Web.Security.RoleManagerModule>之前，将引发 GetRoles 事件 你可以使用此事件，审核应用角色信息时，或替换创建<xref:System.Web.Security.RolePrincipal>通过<xref:System.Web.Security.RoleManagerModule>与你自己的代码。</xref:System.Web.Security.RoleManagerModule> </xref:System.Web.Security.RolePrincipal>       你可以取消角色信息的应用程序<xref:System.Web.Security.RoleManagerModule>通过设置<xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>属性<xref:System.Web.Security.RoleManagerEventArgs>到`true`GetRoles 事件中。</xref:System.Web.Security.RoleManagerEventArgs> </xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> </xref:System.Web.Security.RoleManagerModule>       如果你设置<xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>到`true`在 GetRoles 事件处理程序，则<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>不会被设置为<xref:System.Web.Security.RolePrincipal>受支持<xref:System.Web.Security.RoleManagerModule>。</xref:System.Web.Security.RoleManagerModule>对象</xref:System.Web.Security.RolePrincipal></xref:System.Web.HttpContext></xref:System.Web.HttpContext.User%2A></xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>"
  example:
  - "The following example shows the GetRoles event included in the Global.asax file for an ASP.NET application. The GetRoles event adds a trace notification for an application where trace is enabled in the Web.config file.  \n  \n [!code-cs[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/csharp/e-system.web.security.ro_1.asax)]\n [!code-vb[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/visualbasic/e-system.web.security.ro_1.asax)]"
  syntax:
    content: public event System.Web.Security.RoleManagerEventHandler GetRoles;
    return:
      type: System.Web.Security.RoleManagerEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "将角色管理器与指定的应用程序相关联。"
  remarks: "此方法订阅<xref:System.Web.HttpApplication.PostAuthorizeRequest>和<xref:System.Web.HttpApplication.EndRequest>方法指定<xref:System.Web.HttpApplication>出于管理角色信息的目的，不应在代码中直接使用。</xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.PostAuthorizeRequest>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "<xref href=&quot;System.Web.HttpApplication&quot;> </xref>关联<xref href=&quot;System.Web.Security.RoleManagerModule&quot;></xref>使用。"
  overload: System.Web.Security.RoleManagerModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.RoleManagerModule.#ctor
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
- uid: System.Web.Security.RoleManagerModule.Dispose
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
- uid: System.Web.Security.RoleManagerModule.GetRoles
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
- uid: System.Web.Security.RoleManagerEventHandler
  parent: System.Web.Security
  isExternal: false
  name: RoleManagerEventHandler
  nameWithType: RoleManagerEventHandler
  fullName: System.Web.Security.RoleManagerEventHandler
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.RoleManagerModule.#ctor*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule
  nameWithType: RoleManagerModule.RoleManagerModule
- uid: System.Web.Security.RoleManagerModule.Dispose*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose
  nameWithType: RoleManagerModule.Dispose
- uid: System.Web.Security.RoleManagerModule.Init*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init
  nameWithType: RoleManagerModule.Init
