### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingExpression
  id: BindingExpression
  children:
  - System.Windows.Data.BindingExpression.DataItem
  - System.Windows.Data.BindingExpression.ParentBinding
  - System.Windows.Data.BindingExpression.ResolvedSource
  - System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  - System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - System.Windows.Data.BindingExpression.UpdateSource
  - System.Windows.Data.BindingExpression.UpdateTarget
  langs:
  - csharp
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
  type: Class
  summary: "包含有关的单个实例的信息<xref href=&quot;System.Windows.Data.Binding&quot;> </xref>。"
  remarks: "<xref:System.Windows.Data.Binding>类是高级类绑定的声明。</xref:System.Windows.Data.Binding> BindingExpression 类是维护绑定源和绑定目标之间的连接的基础对象。 A<xref:System.Windows.Data.Binding>包含可以在几个 BindingExpression 对象之间共享的所有信息。</xref:System.Windows.Data.Binding> BindingExpression 是一个实例表达式不能共享和包含<xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding>相关的所有实例信息       例如，考虑以下内容，其中`myDataObject`是的一个实例`MyData`类，`myBinding`是源<xref:System.Windows.Data.Binding>对象，和`MyData`类是一个包含名为的字符串属性的定义的类`MyDataProperty`。</xref:System.Windows.Data.Binding> 此示例将绑定的文本内容`mytext`，即实例<xref:System.Windows.Controls.TextBlock>到`MyDataProperty`。</xref:System.Windows.Controls.TextBlock>       [!code-cs[CodeOnlyBinding&#1;](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)][!code-vb[CodeOnlyBinding&#1;](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1) ]可以使用相同`myBinding`对象来创建其他绑定。   例如，你可能使用`myBinding`对象绑定到一个复选框的文本内容`MyDataProperty`。 在这种情况下，将共享的两个实例的 BindingExpression`myBinding`对象。       你可以通过使用获取 BindingExpression 对象<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>方法或<xref:System.Windows.FrameworkElement.GetBindingExpression%2A>上的数据绑定对象的方法。</xref:System.Windows.FrameworkElement.GetBindingExpression%2A> </xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>"
  syntax:
    content: 'public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener'
  inheritance:
  - System.Object
  - System.Windows.Expression
  - System.Windows.Data.BindingExpressionBase
  implements:
  - System.Windows.IWeakEventListener
  inheritedMembers:
  - System.Windows.Data.BindingExpressionBase.BindingGroup
  - System.Windows.Data.BindingExpressionBase.HasError
  - System.Windows.Data.BindingExpressionBase.HasValidationError
  - System.Windows.Data.BindingExpressionBase.IsDirty
  - System.Windows.Data.BindingExpressionBase.ParentBindingBase
  - System.Windows.Data.BindingExpressionBase.Status
  - System.Windows.Data.BindingExpressionBase.Target
  - System.Windows.Data.BindingExpressionBase.TargetProperty
  - System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate
  - System.Windows.Data.BindingExpressionBase.ValidationError
  - System.Windows.Data.BindingExpressionBase.ValidationErrors
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.DataItem
  id: DataItem
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取绑定源对象这<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>使用。"
  remarks: ''
  example:
  - "The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the DataItem property to access the binding source object.  \n  \n The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.  \n  \n [!code-cs[DirectionalBinding#OnRentRaise](~/add/codesnippet/csharp/DirectionalBinding/Page1.xaml.cs#onrentraise)]\n [!code-vb[DirectionalBinding#OnRentRaise](~/add/codesnippet/visualbasic/DirectionalBinding_VB/DirectionalBinding.vb#onrentraise)]"
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "绑定源对象此<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>使用。"
  overload: System.Windows.Data.BindingExpression.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ParentBinding
  id: ParentBinding
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回<xref href=&quot;System.Windows.Data.Binding&quot;></xref>的当前对象<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>。"
  syntax:
    content: public System.Windows.Data.Binding ParentBinding { get; }
    return:
      type: System.Windows.Data.Binding
      description: "<xref href=&quot;System.Windows.Data.Binding&quot;> </xref>当前绑定表达式的对象。"
  overload: System.Windows.Data.BindingExpression.ParentBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  id: ResolvedSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取此绑定源对象<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>。"
  syntax:
    content: public object ResolvedSource { get; }
    return:
      type: System.Object
      description: "此绑定源对象<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>。"
  overload: System.Windows.Data.BindingExpression.ResolvedSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  id: ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取此绑定源属性的名称<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>。"
  syntax:
    content: public string ResolvedSourcePropertyName { get; }
    return:
      type: System.String
      description: "此绑定源属性的名称<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>。"
  overload: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  isEii: true
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。"
  syntax:
    content: bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "一种<xref href=&quot;System.Windows.WeakEventManager&quot;></xref>调用此方法。 这仅识别的类型的管理器对象<xref href=&quot;System.Collections.Specialized.CollectionChangedEventManager&quot;> </xref>。"
    - id: sender
      type: System.Object
      description: "产生事件的对象。"
    - id: e
      type: System.EventArgs
      description: "事件数据。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果侦听器处理路由事件。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateSource
  id: UpdateSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将当前的绑定目标值发送到中的绑定源属性<xref href=&quot;System.Windows.Data.BindingMode&quot;></xref>或<xref href=&quot;System.Windows.Data.BindingMode&quot;></xref>绑定。"
  remarks: "此方法不执行任何操作时<xref:System.Windows.Data.Binding.Mode%2A>绑定是不<xref:System.Windows.Data.BindingMode>或<xref:System.Windows.Data.BindingMode>。</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.Binding.Mode%2A>       如果<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>的绑定的值设置为<xref:System.Windows.Data.UpdateSourceTrigger>，则必须调用 UpdateSource 方法或更改将不会传播回源。</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>"
  syntax:
    content: public override void UpdateSource ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "绑定已从其目标分离。"
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  id: UpdateTarget
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "强制从绑定源属性的数据传输到绑定目标属性。"
  remarks: "此方法使你可以强制从源属性的数据传输，到目标属性。 如果源对象实现一种适当的属性更改通知机制，如<xref:System.ComponentModel.INotifyPropertyChanged>，目标更新自动发生。</xref:System.ComponentModel.INotifyPropertyChanged> 但是，你可以选择使用此方法来更新显式在源对象不提供适当的属性更改通知的情况下的目标属性。 如果你的应用程序需要定期更新目标属性，还可以使用此方法。"
  syntax:
    content: public override void UpdateTarget ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateTarget*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "绑定已从其目标分离。"
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingExpressionBase
  isExternal: false
  name: System.Windows.Data.BindingExpressionBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.BindingExpression.DataItem
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingExpression.ParentBinding
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
- uid: System.Windows.Data.Binding
  parent: System.Windows.Data
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Data.BindingExpression.UpdateSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
- uid: System.Windows.Data.BindingExpression.DataItem*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
- uid: System.Windows.Data.BindingExpression.ParentBinding*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
- uid: System.Windows.Data.BindingExpression.ResolvedSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent
- uid: System.Windows.Data.BindingExpression.UpdateSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource
  nameWithType: BindingExpression.UpdateSource
- uid: System.Windows.Data.BindingExpression.UpdateTarget*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget
  nameWithType: BindingExpression.UpdateTarget
