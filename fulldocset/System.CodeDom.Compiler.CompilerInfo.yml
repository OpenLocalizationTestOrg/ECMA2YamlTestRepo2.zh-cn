### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerInfo
  id: CompilerInfo
  children:
  - System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  - System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  - System.CodeDom.Compiler.CompilerInfo.CreateProvider
  - System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  - System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  - System.CodeDom.Compiler.CompilerInfo.GetExtensions
  - System.CodeDom.Compiler.CompilerInfo.GetHashCode
  - System.CodeDom.Compiler.CompilerInfo.GetLanguages
  - System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  langs:
  - csharp
  name: CompilerInfo
  nameWithType: CompilerInfo
  fullName: System.CodeDom.Compiler.CompilerInfo
  type: Class
  summary: "表示语言提供程序的配置设置。 此类不能被继承。"
  remarks: "Use the CompilerInfo class to determine whether a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation is configured on the computer, or to examine the configuration and compiler settings for a specific language provider.  \n  \n The [\\&lt;system.codedom\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file contains the language provider and compiler configuration settings. Each configured language provider has a corresponding compiler configuration element. Each element defines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation type, supported language names, supported file name extensions, and compiler parameters.  \n  \n The .NET Framework defines the initial compiler settings in the machine configuration file. Developers and compiler vendors can add configuration settings for a new <xref:System.CodeDom.Compiler.CodeDomProvider> implementation.  \n  \n The CompilerInfo class provides read-only access to these settings in the machine configuration file. Use the <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>, <xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>, and <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> members to examine the corresponding configuration attributes for a language provider. Use the <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> method to obtain the compiler options and warning level attribute values for a language provider.  \n  \n For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  This class contains a link demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission. For details about link demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example displays language provider configuration settings. Command-line arguments are used to specify a language, file name extension, or provider type. For the given input, the example determines the corresponding language provider and displays the configured language compiler settings.  \n  \n [!code-cpp[CodeDom_CompilerInfo#1](~/add/codesnippet/cpp/t-system.codedom.compile_6_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_6_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#1](~/add/codesnippet/csharp/t-system.codedom.compile_6_1.cs)]"
  syntax:
    content: public sealed class CompilerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  id: CodeDomProviderType
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
  fullName: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "获取已配置的类型<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>实现。"
  remarks: "计算机配置文件包含每个的完全限定的类型名称<xref:System.CodeDom.Compiler.CodeDomProvider>计算机上的实现。</xref:System.CodeDom.Compiler.CodeDomProvider> CodeDomProviderType 属性值是<xref:System.Type>表示已配置的语言提供程序实现的实例。</xref:System.Type>"
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/p-system.codedom.compile_0_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/p-system.codedom.compile_0_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/p-system.codedom.compile_0_1.cs)]"
  syntax:
    content: public Type CodeDomProviderType { get; }
    return:
      type: System.Type
      description: "只读<xref:System.Type>表示已配置的语言提供程序类型的实例。</xref:System.Type>"
  overload: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "在此计算机上未配置语言提供程序。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "找不到类型，因为它是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串。       -或-找不到类型，因为名称<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>找不到配置文件中。"
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  id: CreateDefaultCompilerParameters
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateDefaultCompilerParameters()
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "获取语言提供程序实现的配置的编译器设置。"
  remarks: "Use the CreateDefaultCompilerParameters method to examine the compiler settings of the <xref:System.CodeDom.Compiler.CompilerInfo> instances returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> and <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> methods.  \n  \n The [\\&lt;system.codedom\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. Each language provider configuration element can contain optional `compilerOptions` and `warningLevel` attributes. These attributes define the default values for the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=fullName> and <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=fullName> properties.  \n  \n If the language provider configuration element does not define the `compilerOptions` attribute, the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=fullName> property value is an empty string (\"\"). If the language provider configuration element does not define the `warningLevel` attribute, the <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=fullName> property value is –1."
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/m-system.codedom.compile_0_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/m-system.codedom.compile_0_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/m-system.codedom.compile_0_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters ();
    parameters: []
    return:
      type: System.CodeDom.Compiler.CompilerParameters
      description: "只读<xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;></xref>实例，其中包含的编译器选项和设置为语言提供程序配置。"
  overload: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider
  id: CreateProvider
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateProvider()
  nameWithType: CompilerInfo.CreateProvider()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "返回<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>当前语言提供程序设置的实例。"
  remarks: "CreateProvider 方法返回<xref:System.CodeDom.Compiler.CodeDomProvider>当前语言提供程序设置的实例。</xref:System.CodeDom.Compiler.CodeDomProvider>       使用 CreateProvider 方法来获取<xref:System.CodeDom.Compiler.CodeDomProvider>实现<xref:System.CodeDom.Compiler.CompilerInfo>返回实例<xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName>或<xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName>方法。</xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo> </xref:System.CodeDom.Compiler.CodeDomProvider>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_3_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_3_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_3_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CreateProvider ();
    parameters: []
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "与语言提供程序配置关联 CodeDOM 提供程序。"
  overload: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  id: CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateProvider(IDictionary<String,String>)
  nameWithType: CompilerInfo.CreateProvider(IDictionary<String,String>)
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider(IDictionary<String,String>)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "返回<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>实例的当前语言提供程序设置和指定的选项。"
  remarks: "CreateProvider 方法返回<xref:System.CodeDom.Compiler.CodeDomProvider>实例有关的当前语言提供程序设置和指定的提供程序选项。</xref:System.CodeDom.Compiler.CodeDomProvider> 有关受支持的提供程序选项的信息，请参阅特定 CodeDOM 提供程序文档。       使用 CreateProvider 方法来获取<xref:System.CodeDom.Compiler.CodeDomProvider>实现<xref:System.CodeDom.Compiler.CompilerInfo>返回实例<xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName>或<xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName>方法。</xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo> </xref:System.CodeDom.Compiler.CodeDomProvider>"
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CreateProvider (System.Collections.Generic.IDictionary<string,string> providerOptions);
    parameters:
    - id: providerOptions
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "从配置文件的提供程序选项的集合。"
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "CodeDOM 提供程序与语言提供程序配置关联，并指定选项。"
  overload: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerOptions </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "提供程序不支持选项。"
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CompilerInfo.Equals(Object)
  fullName: System.CodeDom.Compiler.CompilerInfo.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "确定指定的对象是否表示与当前的相同语言提供程序和编译器设置<xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref>。"
  remarks: "此方法将替代<xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>方法。</xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>       两个实例被视为相等的以下属性值是否相等:-<xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>属性。</xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>      - <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>， <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>，和<xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>属性<xref:System.CodeDom.Compiler.CompilerParameters>返回实例<xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A>方法。</xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> </xref:System.CodeDom.Compiler.CompilerParameters> </xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> </xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> </xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要与当前比较的对象<xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> o </code>是<xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;></xref>对象，其值是与此实例相同; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.CodeDom.Compiler.CompilerInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions
  id: GetExtensions
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetExtensions()
  nameWithType: CompilerInfo.GetExtensions()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetExtensions()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "返回的文件名称扩展支持的语言提供程序。"
  remarks: "[ \\&Lt;system.codedom\\&gt;元素](../Topic/%3Csystem.codedom%3E%20Element.md)计算机配置文件包含每个语言提供程序和编译器配置设置<xref:System.CodeDom.Compiler.CodeDomProvider>计算机上的实现。</xref:System.CodeDom.Compiler.CodeDomProvider> 每个已配置的语言提供程序支持一个或多个文件扩展名。 例如，<xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>可能支持的文件名称扩展&quot;.cs&quot;和&quot;.c #&quot;。</xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_7_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_7_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_7_1.cs)]"
  syntax:
    content: public string[] GetExtensions ();
    parameters: []
    return:
      type: System.String[]
      description: "语言提供程序支持的文件扩展名的数组。"
  overload: System.CodeDom.Compiler.CompilerInfo.GetExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode
  id: GetHashCode
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CompilerInfo.GetHashCode()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "返回当前实例的哈希代码。"
  remarks: "此方法将替代<xref:System.Object.GetHashCode%2A?displayProperty=fullName>方法。</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       此方法将生成两个对象是否相等根据相同的哈希代码<xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A>方法。</xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A>"
  example:
  - "The following code example creates an instance of the <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName> class. The example displays the provider name, hash code, and default file name extension for the new provider instance. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#3](~/add/codesnippet/cpp/m-system.codedom.compile_5_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#3](~/add/codesnippet/visualbasic/m-system.codedom.compile_5_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#3](~/add/codesnippet/csharp/m-system.codedom.compile_5_1.cs)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前的 32 位有符号的整数哈希代码<xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;></xref>实例，适合在哈希算法和数据结构，如哈希表中使用。"
  overload: System.CodeDom.Compiler.CompilerInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages
  id: GetLanguages
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetLanguages()
  nameWithType: CompilerInfo.GetLanguages()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetLanguages()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "获取语言提供程序支持的语言名称。"
  remarks: "[ \\&Lt;system.codedom\\&gt;元素](../Topic/%3Csystem.codedom%3E%20Element.md)计算机配置文件包含每个语言提供程序和编译器配置设置<xref:System.CodeDom.Compiler.CodeDomProvider>计算机上的实现。</xref:System.CodeDom.Compiler.CodeDomProvider> 每个已配置的语言提供程序支持一个或多个语言名称。 例如，<xref:System.CodeDom.Compiler.CompilerInfo>对象<xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>可能会返回与语言名称&quot;c#&quot;、&quot;cs&quot;和&quot;csharp&quot;数组。</xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_9_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_9_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_9_1.cs)]"
  syntax:
    content: public string[] GetLanguages ();
    parameters: []
    return:
      type: System.String[]
      description: "语言提供程序支持的语言名称的数组。"
  overload: System.CodeDom.Compiler.CompilerInfo.GetLanguages*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  id: IsCodeDomProviderTypeValid
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
  fullName: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "返回一个值，该值指示是否在计算机上配置语言提供程序实现。"
  remarks: "使用 IsCodeDomProviderTypeValid 属性来检查<xref:System.CodeDom.Compiler.CodeDomProvider>之前访问的提供程序属性或方法的实现。</xref:System.CodeDom.Compiler.CodeDomProvider> 例如，之后你获取语言提供程序设置从<xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>方法，IsCodeDomProviderTypeValid 属性用于验证之前调用的提供程序类型实现<xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A>方法或使用<xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>属性。</xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> </xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>"
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/p-system.codedom.compile_12_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/p-system.codedom.compile_12_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/p-system.codedom.compile_12_1.cs)]"
  syntax:
    content: public bool IsCodeDomProviderTypeValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在计算机; 上配置语言提供程序实现类型否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
  fullName: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateDefaultCompilerParameters()
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters()
- uid: System.CodeDom.Compiler.CompilerParameters
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider()
  nameWithType: CompilerInfo.CreateProvider()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider()
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider(IDictionary<String,String>)
  nameWithType: CompilerInfo.CreateProvider(IDictionary<String,String>)
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider(IDictionary<String,String>)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: CompilerInfo.Equals(Object)
  fullName: System.CodeDom.Compiler.CompilerInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetExtensions()
  nameWithType: CompilerInfo.GetExtensions()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetExtensions()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: CompilerInfo.GetHashCode()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetLanguages()
  nameWithType: CompilerInfo.GetLanguages()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetLanguages()
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
  fullName: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateDefaultCompilerParameters
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider
  nameWithType: CompilerInfo.CreateProvider
- uid: System.CodeDom.Compiler.CompilerInfo.Equals*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: Equals
  nameWithType: CompilerInfo.Equals
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetExtensions
  nameWithType: CompilerInfo.GetExtensions
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetHashCode
  nameWithType: CompilerInfo.GetHashCode
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetLanguages
  nameWithType: CompilerInfo.GetLanguages
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
