### YamlMime:ManagedReference
items:
- uid: System.Net.Cache.HttpRequestCacheLevel
  id: HttpRequestCacheLevel
  children:
  - System.Net.Cache.HttpRequestCacheLevel.BypassCache
  - System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  - System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  - System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  - System.Net.Cache.HttpRequestCacheLevel.Default
  - System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  - System.Net.Cache.HttpRequestCacheLevel.Refresh
  - System.Net.Cache.HttpRequestCacheLevel.Reload
  - System.Net.Cache.HttpRequestCacheLevel.Revalidate
  langs:
  - csharp
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
  type: Enum
  summary: "指定资源使用超文本传输协议 (HTTP) 获取的缓存行为。"
  remarks: "此枚举用于设置由指定的缓存级别<xref:System.Net.Cache.HttpRequestCachePolicy>对象。</xref:System.Net.Cache.HttpRequestCachePolicy>       BypassCache 该值是在.NET Framework 附带的计算机配置文件中指定的默认缓存行为。 没有项是从缓存中取出、 添加到缓存，或从客户端和服务器之间的缓存中删除。       <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName>属性用于获取或设置的默认缓存策略<xref:System.Net.HttpWebRequest>实例。</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>属性用于获取或设置的默认缓存策略<xref:System.Net.WebRequest>实例。</xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>属性用于获取或设置特定请求的缓存策略。</xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>       如果资源的响应流是检索，并且读取到流末尾，资源的副本是仅添加到缓存。 因此相同的资源的另一个请求可以使用缓存的副本，具体取决于此请求的默认缓存策略级别。"
  example:
  - "The following code example sets the application domain's caching policy to Default.  \n  \n [!code-cpp[NCLSimpleCache#2](~/add/codesnippet/cpp/t-system.net.cache.httpr_1_1.cpp)]\n [!code-cs[NCLSimpleCache#2](~/add/codesnippet/csharp/t-system.net.cache.httpr_1_1.cs)]"
  syntax:
    content: public enum HttpRequestCacheLevel
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  id: BypassCache
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: BypassCache
  nameWithType: HttpRequestCacheLevel.BypassCache
  fullName: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "通过使用服务器来满足请求。 没有项是从缓存中取出、 添加到缓存，或从客户端和服务器之间的缓存中删除。 没有项是从缓存中取出、 添加到缓存，或从客户端和服务器之间的缓存中删除。 这是在.NET Framework 附带的计算机配置文件中指定的默认缓存行为。"
  syntax:
    content: BypassCache
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  id: CacheIfAvailable
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheIfAvailable
  nameWithType: HttpRequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "如果资源是可用;，满足对从缓存资源的请求否则，将对资源的请求发送到服务器。 如果客户端和服务器之间的任何缓存中提供了请求的项，可能由中间缓存来满足请求。"
  syntax:
    content: CacheIfAvailable
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  id: CacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "满足使用本地缓存的资源; 的请求不发送不在缓存中项的请求。 指定此缓存策略级别时，<xref:System.Net.WebException>如果该项不是在客户端缓存中引发异常。</xref:System.Net.WebException>"
  syntax:
    content: CacheOnly
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  id: CacheOrNextCacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheOrNextCacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "满足对从本地计算机的缓存或本地网络上的远程缓存资源的请求。 如果无法满足请求，<xref:System.Net.WebException>引发异常。</xref:System.Net.WebException> 在 HTTP 缓存协议中，这实现使用<xref uid=&quot;langword_csharp_only-if-cached&quot; name=&quot;only-if-cached&quot; href=&quot;&quot;></xref>缓存控制指令。"
  syntax:
    content: CacheOrNextCacheOnly
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Default
  id: Default
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Default
  nameWithType: HttpRequestCacheLevel.Default
  fullName: System.Net.Cache.HttpRequestCacheLevel.Default
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "通过使用资源的缓存的副本或将对资源的请求发送到服务器，则满足对资源的请求。 由当前的缓存策略以及缓存中的内容的年限确定执行的操作。 这是应由大多数应用程序的缓存级别。"
  syntax:
    content: Default
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  id: NoCacheNoStore
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: NoCacheNoStore
  nameWithType: HttpRequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "永远不会通过从缓存中使用资源来满足请求并不会缓存资源。 如果资源是在本地缓存中存在，则会删除。 此策略级别将向指示中间缓存，它们应删除该资源。 在 HTTP 缓存协议中，这被实现使用无缓存缓存控制指令。"
  syntax:
    content: NoCacheNoStore
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh
  id: Refresh
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Refresh
  nameWithType: HttpRequestCacheLevel.Refresh
  fullName: System.Net.Cache.HttpRequestCacheLevel.Refresh
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "通过使用本地缓存以外的服务器或缓存来满足请求。 可以通过任何中间缓存来满足请求之前，该缓存必须重新验证它与服务器的缓存的项。 在 HTTP 缓存协议中，这实现使用最长时间 = 0 的缓存控制指令和无缓存<xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;></xref>标头。"
  syntax:
    content: Refresh
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Reload
  id: Reload
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Reload
  nameWithType: HttpRequestCacheLevel.Reload
  fullName: System.Net.Cache.HttpRequestCacheLevel.Reload
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "通过使用服务器来满足请求。 可以将响应保存在缓存中。 在 HTTP 缓存协议中，这实现使用无缓存缓存控制指令和无缓存<xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;></xref>标头。"
  syntax:
    content: Reload
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  id: Revalidate
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Revalidate
  nameWithType: HttpRequestCacheLevel.Revalidate
  fullName: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "比较在缓存中的资源的副本与服务器上的副本。 如果较新服务器上的副本，它可用于满足请求，并替换在缓存中的副本。 如果缓存中的副本是相同服务器复制，则使用的缓存的副本。 在 HTTP 缓存协议中，这被实现使用条件请求。"
  syntax:
    content: Revalidate
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: BypassCache
  nameWithType: HttpRequestCacheLevel.BypassCache
  fullName: System.Net.Cache.HttpRequestCacheLevel.BypassCache
- uid: System.Net.Cache.HttpRequestCacheLevel
  parent: System.Net.Cache
  isExternal: false
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheIfAvailable
  nameWithType: HttpRequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheOrNextCacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
- uid: System.Net.Cache.HttpRequestCacheLevel.Default
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Default
  nameWithType: HttpRequestCacheLevel.Default
  fullName: System.Net.Cache.HttpRequestCacheLevel.Default
- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: NoCacheNoStore
  nameWithType: HttpRequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Refresh
  nameWithType: HttpRequestCacheLevel.Refresh
  fullName: System.Net.Cache.HttpRequestCacheLevel.Refresh
- uid: System.Net.Cache.HttpRequestCacheLevel.Reload
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Reload
  nameWithType: HttpRequestCacheLevel.Reload
  fullName: System.Net.Cache.HttpRequestCacheLevel.Reload
- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Revalidate
  nameWithType: HttpRequestCacheLevel.Revalidate
  fullName: System.Net.Cache.HttpRequestCacheLevel.Revalidate
