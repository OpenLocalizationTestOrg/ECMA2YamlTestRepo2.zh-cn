### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.WSHttpBindingElement
  id: WSHttpBindingElement
  children:
  - System.ServiceModel.Configuration.WSHttpBindingElement.#ctor
  - System.ServiceModel.Configuration.WSHttpBindingElement.#ctor(System.String)
  - System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies
  - System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType
  - System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.WSHttpBindingElement.Properties
  - System.ServiceModel.Configuration.WSHttpBindingElement.Security
  langs:
  - csharp
  name: WSHttpBindingElement
  nameWithType: WSHttpBindingElement
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement
  type: Class
  summary: "表示支持分布式的事务和安全、 可靠的会话的互操作绑定。"
  remarks: 'WsHttpBinding 是适合于非双工服务协定的安全、 可靠且可互操作绑定。 绑定将实现以下规范︰ Ws-reliablemessaging 实现可靠性和 Ws-security 消息安全性和身份验证。 传输是 HTTP，消息编码是 Text/XML 编码。'
  syntax:
    content: 'public class WSHttpBindingElement : System.ServiceModel.Configuration.WSHttpBindingBaseElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.StandardBindingElement
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.Name
  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.BypassProxyOnLocal
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.HostNameComparisonMode
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.MaxBufferPoolSize
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.MaxReceivedMessageSize
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.MessageEncoding
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.ProxyAddress
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.ReaderQuotas
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.ReliableSession
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.TextEncoding
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.TransactionFlow
  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.UseDefaultWebProxy
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  langs:
  - csharp
  name: WSHttpBindingElement()
  nameWithType: WSHttpBindingElement.WSHttpBindingElement()
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.WSHttpBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Configuration.WSHttpBindingElement&quot;></xref>类。"
  syntax:
    content: public WSHttpBindingElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  langs:
  - csharp
  name: WSHttpBindingElement(String)
  nameWithType: WSHttpBindingElement.WSHttpBindingElement(String)
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.WSHttpBindingElement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Configuration.WSHttpBindingElement&quot;></xref>类。"
  syntax:
    content: public WSHttpBindingElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "绑定的配置名称。 此值应是唯一的因为它用于标识绑定。"
  overload: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  langs:
  - csharp
  name: AllowCookies
  nameWithType: WSHttpBindingElement.AllowCookies
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取或设置一个值，该值指示是否 WCF 客户端将自动存储并重新发送任何单个 web 服务发送的 cookie。"
  remarks: "将 AllowCookies 设置为`true`当客户端与使用 cookie 的一个 web 服务进行交互时非常有用。  如果你正在访问多个服务使用同一个 cookie，若将 AllowCookies 设置为`false`，你将需要手动将 cookie 标头添加到每个传出消息。 下面的代码演示如何执行此操作︰```c#   MyWebServiceClient client = new MyWebServiceClient();              using (new OperationContextScope(client.InnerChannel))           {               client.DoSomething();                  // Extract the cookie embedded in the received web service response               // and stores it locally               HttpResponseMessageProperty response = (HttpResponseMessageProperty)               OperationContext.Current.IncomingMessageProperties[                   HttpResponseMessageProperty.Name];               sharedCookie = response.Headers[&quot;Set-Cookie&quot;];           }              MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();              using (new OperationContextScope(otherClient.InnerChannel))           {               // Embeds the extracted cookie in the next web service request               // Note that we manually have to create the request object since               // since it doesn&quot;t exist yet at this stage                HttpRequestMessageProperty request = new HttpRequestMessageProperty();               request.Headers[&quot;Cookie&quot;] = sharedCookie;               OperationContext.Current.OutgoingMessageProperties[                   HttpRequestMessageProperty.Name] = request;                  otherClient.DoSomethingElse();           }      ```"
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果自动处理的 cookie 是必需的;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: WSHttpBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取此绑定元素的类型。"
  syntax:
    content: protected override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>此绑定元素。</xref:System.Type>"
  overload: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  id: InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  langs:
  - csharp
  name: InitializeFrom(Binding)
  nameWithType: WSHttpBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(Binding)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "初始化指定的绑定元素的内容与此绑定配置元素。"
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "一个绑定元素。"
  overload: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  langs:
  - csharp
  name: OnApplyConfiguration(Binding)
  nameWithType: WSHttpBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(Binding)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "指定的绑定集合的内容应用到此绑定配置元素时调用。"
  syntax:
    content: protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "绑定元素集合。"
  overload: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  langs:
  - csharp
  name: Properties
  nameWithType: WSHttpBindingElement.Properties
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取<xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;></xref>实例，其中包含一套<xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref>可以是属性的对象或<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>此配置元素的对象。"
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref>实例，其中包含一套<xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref>可以是属性的对象或<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>此配置元素的对象。"
  overload: System.ServiceModel.Configuration.WSHttpBindingElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Security
  id: Security
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  langs:
  - csharp
  name: Security
  nameWithType: WSHttpBindingElement.Security
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取要与此绑定一起使用的安全类型。"
  syntax:
    content: public System.ServiceModel.Configuration.WSHttpSecurityElement Security { get; }
    return:
      type: System.ServiceModel.Configuration.WSHttpSecurityElement
      description: "<xref href=&quot;System.ServiceModel.Configuration.WSHttpSecurityElement&quot;> </xref> ，与此绑定一起使用。"
  overload: System.ServiceModel.Configuration.WSHttpBindingElement.Security*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.WSHttpBindingBaseElement
  isExternal: false
  name: System.ServiceModel.Configuration.WSHttpBindingBaseElement
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: WSHttpBindingElement()
  nameWithType: WSHttpBindingElement.WSHttpBindingElement()
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.WSHttpBindingElement()
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor(System.String)
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: WSHttpBindingElement(String)
  nameWithType: WSHttpBindingElement.WSHttpBindingElement(String)
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.WSHttpBindingElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: AllowCookies
  nameWithType: WSHttpBindingElement.AllowCookies
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: BindingElementType
  nameWithType: WSHttpBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: InitializeFrom(Binding)
  nameWithType: WSHttpBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(Binding)
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: OnApplyConfiguration(Binding)
  nameWithType: WSHttpBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(Binding)
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Properties
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: Properties
  nameWithType: WSHttpBindingElement.Properties
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Security
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: Security
  nameWithType: WSHttpBindingElement.Security
  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.Security
- uid: System.ServiceModel.Configuration.WSHttpSecurityElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: WSHttpSecurityElement
  nameWithType: WSHttpSecurityElement
  fullName: System.ServiceModel.Configuration.WSHttpSecurityElement
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor*
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: WSHttpBindingElement
  nameWithType: WSHttpBindingElement.WSHttpBindingElement
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies*
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: AllowCookies
  nameWithType: WSHttpBindingElement.AllowCookies
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType*
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: BindingElementType
  nameWithType: WSHttpBindingElement.BindingElementType
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: InitializeFrom
  nameWithType: WSHttpBindingElement.InitializeFrom
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration*
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: OnApplyConfiguration
  nameWithType: WSHttpBindingElement.OnApplyConfiguration
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Properties*
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: Properties
  nameWithType: WSHttpBindingElement.Properties
- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Security*
  parent: System.ServiceModel.Configuration.WSHttpBindingElement
  isExternal: false
  name: Security
  nameWithType: WSHttpBindingElement.Security
