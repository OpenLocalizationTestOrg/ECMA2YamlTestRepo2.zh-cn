### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataList
  id: DataList
  children:
  - System.Web.UI.WebControls.DataList.#ctor
  - System.Web.UI.WebControls.DataList.AlternatingItemStyle
  - System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  - System.Web.UI.WebControls.DataList.CancelCommand
  - System.Web.UI.WebControls.DataList.CancelCommandName
  - System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  - System.Web.UI.WebControls.DataList.CreateControlStyle
  - System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.DataList.DeleteCommand
  - System.Web.UI.WebControls.DataList.DeleteCommandName
  - System.Web.UI.WebControls.DataList.EditCommand
  - System.Web.UI.WebControls.DataList.EditCommandName
  - System.Web.UI.WebControls.DataList.EditItemIndex
  - System.Web.UI.WebControls.DataList.EditItemStyle
  - System.Web.UI.WebControls.DataList.EditItemTemplate
  - System.Web.UI.WebControls.DataList.ExtractTemplateRows
  - System.Web.UI.WebControls.DataList.FooterStyle
  - System.Web.UI.WebControls.DataList.FooterTemplate
  - System.Web.UI.WebControls.DataList.GridLines
  - System.Web.UI.WebControls.DataList.HeaderStyle
  - System.Web.UI.WebControls.DataList.HeaderTemplate
  - System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  - System.Web.UI.WebControls.DataList.ItemCommand
  - System.Web.UI.WebControls.DataList.ItemCreated
  - System.Web.UI.WebControls.DataList.ItemDataBound
  - System.Web.UI.WebControls.DataList.Items
  - System.Web.UI.WebControls.DataList.ItemStyle
  - System.Web.UI.WebControls.DataList.ItemTemplate
  - System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  - System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  - System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  - System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DataList.RepeatColumns
  - System.Web.UI.WebControls.DataList.RepeatDirection
  - System.Web.UI.WebControls.DataList.RepeatLayout
  - System.Web.UI.WebControls.DataList.SaveViewState
  - System.Web.UI.WebControls.DataList.SelectCommandName
  - System.Web.UI.WebControls.DataList.SelectedIndex
  - System.Web.UI.WebControls.DataList.SelectedItem
  - System.Web.UI.WebControls.DataList.SelectedItemStyle
  - System.Web.UI.WebControls.DataList.SelectedItemTemplate
  - System.Web.UI.WebControls.DataList.SelectedValue
  - System.Web.UI.WebControls.DataList.SeparatorStyle
  - System.Web.UI.WebControls.DataList.SeparatorTemplate
  - System.Web.UI.WebControls.DataList.ShowFooter
  - System.Web.UI.WebControls.DataList.ShowHeader
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  - System.Web.UI.WebControls.DataList.TagKey
  - System.Web.UI.WebControls.DataList.TrackViewState
  - System.Web.UI.WebControls.DataList.UpdateCommand
  - System.Web.UI.WebControls.DataList.UpdateCommandName
  langs:
  - csharp
  name: DataList
  nameWithType: DataList
  fullName: System.Web.UI.WebControls.DataList
  type: Class
  summary: "数据绑定列表控件中显示使用模板的项。"
  remarks: "本主题中:-[简介](#introduction)      -   [模板](#templates)      -   [自定义 DataList 控件的外观](#customizing_the_appearance_of_the_datalist_control)      -   [显示方向和布局](#display_direction_and_layout)      -   [安全](#security)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 介绍使用 DataList 控件来显示模板定义的数据绑定的列表。       DataList 控件支持选择和编辑。      <a name=&quot;templates&quot;></a># # 模板 DataList 控件的内容可以通过使用模板进行操作。 下表列出了支持的模板。      |模板名称 |说明 |  |-------------------|-----------------|  |<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|如果定义，提供的内容和布局中 DataList 交替项。</xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> 如果未定义，`ItemTemplate`使用。 |  |<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|如果定义，内容和布局为项提供当前正在编辑中 DataList。</xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> 如果未定义，`ItemTemplate`使用。 |  |<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|如果定义，提供的内容和布局页脚部分的 DataList。</xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> 如果未定义，页脚部分将不会显示。 |  |<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|如果定义，提供的内容和布局 DataList 的标头部分。</xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> 如果未定义，将不会显示的表头部分。 |  |<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|需 DataList 中的项提供的内容和布局的模板。 |  |<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|如果定义，提供的内容和布局 DataList 中当前选定项。</xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> </xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 如果未定义，则使用<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>。 |  |<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|如果定义，提供的内容和布局 DataList 中项之间的分隔符。</xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> </xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 如果未定义，将不会显示分隔符。 |      至少，<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>需要定义 DataList 控件中显示的项。</xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 其他模板可以用于提供自定义信息，请参阅 DataList 控件。      <a name=&quot;customizing_the_appearance_of_the_datalist_control&quot;></a># # 自定义可以通过设置控件的不同部分的样式属性自定义 DataList 控件的外观 DataList 控件的外观。 下表列出不同的样式属性。      |样式属性 |说明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|指定为交替 DataList 控件中的项的样式。 |  |<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|指定在 DataList 控件中正在编辑的项的样式。 |  |<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|DataList 控件中指定页脚的样式。 |  |<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|DataList 控件中指定的标头的样式。 |  |<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|DataList 控件中指定的项的样式。 |  |<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|DataList 控件中指定的选定项的样式。 |  |<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|指定的样式 DataList 控件中的项之间的分隔符。 |      你还可以显示或隐藏的控件的不同部分。</xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> </xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 下表列出用于控制哪些部分是显示还是隐藏的属性。      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|显示或隐藏 DataList 控件页脚部分。 |  |<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|显示或隐藏 DataList 控件的标头部分。 |     <a name=&quot;display_direction_and_layout&quot;> </a> # # 显示方向和布局 DataList 控件的显示方向可以为垂直或水平。</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> </xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> 设置<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性指定的显示方向。</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>       DataList 控件的布局控制<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>属性。</xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> 此属性设置为`RepeatLayout.Table`将以表格的形式显示 DataList 时`RepeatLayout.Flow`显示 DataList 没有表结构。      <a name=&quot;security&quot;></a># # 安全`DataList`控件可以包含使用户能够输入信息的控件。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。       有关安全性的详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:DataList       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyField=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EditItemIndex=&quot;integer&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ExtractTemplateRows=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnCancelCommand=&quot;CancelCommand event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleteCommand=&quot;DeleteCommand event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnEditCommand=&quot;EditCommand event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDataBound=&quot;ItemDataBound event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;       OnUnload=&quot;Unload event handler&quot;       OnUpdateCommand=&quot;UpdateCommand event handler&quot;       RepeatColumns=&quot;integer&quot;       RepeatDirection=&quot;Horizontal|Vertical&quot;       RepeatLayout=&quot;Table|Flow&quot;       runat=&quot;server&quot;       SelectedIndex=&quot;integer&quot;       ShowFooter=&quot;True|False&quot;       ShowHeader=&quot;True|False&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       UseAccessibleHeader=&quot;True|False&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingItemStyle />           <AlternatingItemTemplate>               <!-- child controls -->           </AlternatingItemTemplate>           <EditItemStyle />           <EditItemTemplate>               <!-- child controls -->           </EditItemTemplate>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <ItemStyle />           <ItemTemplate>               <!-- child controls -->           </ItemTemplate>           <SelectedItemStyle />           <SelectedItemTemplate>               <!-- child controls -->           </SelectedItemTemplate>           <SeparatorStyle />           <SeparatorTemplate>               <!-- child controls -->           </SeparatorTemplate>   </asp:DataList>   ```"
  example:
  - "The following code example demonstrates how to use a DataList control to display a list of items from a data source.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataList#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_141_1.aspx)]\n [!code-vb[DataList#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_141_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataList
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.IRepeatInfoUser
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataList.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.BaseDataList.Caption
  - System.Web.UI.WebControls.BaseDataList.CaptionAlign
  - System.Web.UI.WebControls.BaseDataList.CellPadding
  - System.Web.UI.WebControls.BaseDataList.CellSpacing
  - System.Web.UI.WebControls.BaseDataList.Controls
  - System.Web.UI.WebControls.BaseDataList.CreateChildControls
  - System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.BaseDataList.DataBind
  - System.Web.UI.WebControls.BaseDataList.DataKeyField
  - System.Web.UI.WebControls.BaseDataList.DataKeys
  - System.Web.UI.WebControls.BaseDataList.DataKeysArray
  - System.Web.UI.WebControls.BaseDataList.DataMember
  - System.Web.UI.WebControls.BaseDataList.DataSource
  - System.Web.UI.WebControls.BaseDataList.DataSourceID
  - System.Web.UI.WebControls.BaseDataList.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataList.GetData
  - System.Web.UI.WebControls.BaseDataList.HorizontalAlign
  - System.Web.UI.WebControls.BaseDataList.Initialized
  - System.Web.UI.WebControls.BaseDataList.IsBindableType(System.Type)
  - System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnDataPropertyChanged
  - System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseDataList.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataList.SelectArguments
  - System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged
  - System.Web.UI.WebControls.BaseDataList.SupportsDisabledAttribute
  - System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DataList()
  nameWithType: DataList.DataList()
  fullName: System.Web.UI.WebControls.DataList.DataList()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>类。"
  remarks: "使用此构造函数来创建和初始化<xref:System.Web.UI.WebControls.DataList>类</xref:System.Web.UI.WebControls.DataList>的新实例"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.DataList> class.  \n  \n [!code-cs[Classic DataList.DataList Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_27_1.cs)]\n [!code-vb[Classic DataList.DataList Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_27_1.vb)]"
  syntax:
    content: public DataList ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  id: AlternatingItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的交替项获取的样式属性<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用 AlternatingItemStyle 属性中的交替项提供自定义样式<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       项中的样式属性<xref:System.Web.UI.WebControls.DataList>控件从一个项样式属性继承到另一个层次结构。</xref:System.Web.UI.WebControls.DataList> 由层次结构中较高的项的样式属性继承层次结构中设置得较低的项的样式属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性、 中的所有其他项样式属性<xref:System.Web.UI.WebControls.DataList>控件还具有红色字体。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 这使您可以通过设置单个项的样式属性提供通用控件外观。 你可以重写继承的样式设置是通过设置其样式属性的层次结构中较高级别的项样式属性的。 例如，你可以指定 AlternatingItemStyle 属性蓝色字体中, 重写红色字体指定<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 下表列出了从最高到最低的层次结构顺序。      |优先 |样式属性 |  |----------------|--------------------|  |&1; |<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  |&2; |<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  |&3; |AlternatingItemStyle |  |&4; |<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  |&5; |<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|      若要指定的交替项的自定义样式，将放置`<AlternatingItemStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 然后可以列出内打开的样式特性`<AlternatingItemStyle>`标记。"
  example:
  - "The following code example demonstrates how to use the AlternatingItemStyle property to specify a different background color for alternating items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_512_1.aspx)]\n [!code-cs[DataListItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_512_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>代表交替的样式属性的对象中的项<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值为空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.DataList.AlternatingItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中的交替项模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>。"
  remarks: "使用 AlternatingItemTemplate 属性来控制中交替项的内容<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 由控制交替项的外观<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>       若要指定个交替项的模板，将放置`<AlternatingItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出在开始和结束之间模板的内容`<AlternatingItemTemplate>`标记。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to control the contents of alternating items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1361_1.aspx)]\n [!code-cs[DataListAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1361_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>对象，其中包含为交替模板中的项<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CancelCommand
  id: CancelCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CancelCommand
  nameWithType: DataList.CancelCommand
  fullName: System.Web.UI.WebControls.DataList.CancelCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;></xref>中的项单击按钮<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "将引发 CancelCommand 事件时`Cancel`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       典型处理程序 CancelCommand 事件集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`（以取消选择项），然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>      1> [!CAUTION]&1;> 文本不是 HTML 编码之前它将显示在<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 这使得可能要在文本中嵌入在 HTML 标记中的脚本。 如果该控件的值是来自用户输入，请务必验证这些值以减少安全漏洞。       有关处理事件的详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the CancelCommand event. It cancels any edits made to an item in the <xref:System.Web.UI.WebControls.DataList> control when the `Cancel` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_29_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_29_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_29_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_29_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CancelCommandName
  id: CancelCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CancelCommandName
  nameWithType: DataList.CancelCommandName
  fullName: System.Web.UI.WebControls.DataList.CancelCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示<xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;></xref>命令名称。 此字段为只读的。"
  remarks: "使用 CancelCommandName 字段来表示`Cancel`命令名称。"
  syntax:
    content: public const string CancelCommandName;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  id: CreateControlHierarchy(System.Boolean)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateControlHierarchy(Boolean)
  nameWithType: DataList.CreateControlHierarchy(Boolean)
  fullName: System.Web.UI.WebControls.DataList.CreateControlHierarchy(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建用于呈现数据列表控件，无论指定的数据源的控件层次结构。"
  remarks: "主要由控件开发人员使用 CreateControlHierarchy 方法，派生的自定义实现从时<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       CreateControlHierarchy 方法使用<xref:System.Web.UI.WebControls.DataList.CreateItem%2A>和<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法来创建<xref:System.Web.UI.WebControls.DataListItem>表示标头、 页脚、 分隔符，和数据列表中包含的数据绑定项的控件。</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> </xref:System.Web.UI.WebControls.DataList.CreateItem%2A> 你可以访问通过数据列表的数据绑定项<xref:System.Web.UI.WebControls.DataList.Items%2A>集合。</xref:System.Web.UI.WebControls.DataList.Items%2A> 你可以访问所有项类型，包括页眉、 页脚和分隔符项，通过<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>集合。</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>       重写 CreateControlHierarchy 方法以自定义如何<xref:System.Web.UI.WebControls.DataListItem>创建或添加到控件<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataListItem> 重写<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法以自定义模板<xref:System.Web.UI.WebControls.DataListItem>控件。</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>"
  syntax:
    content: protected override void CreateControlHierarchy (bool useDataSource);
    parameters:
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用控件的数据源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>指明控件正在重新创建从视图状态，并且不应为数据绑定。"
  overload: System.Web.UI.WebControls.DataList.CreateControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: DataList.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DataList.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建内部使用的默认样式对象<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件实现所有样式与相关的属性。"
  remarks: "CreateControlStyle 方法主要由控件开发人员在派生的自定义实现从<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>"
  example:
  - "The following code example demonstrates how to override the CreateControlStyle method in a custom server control so that it always displays horizontal grid lines with no cell spacing in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n [!code-vb[CustomDataListCreateControlStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_243_1.aspx)]\n [!code-cs[CustomDataListCreateControlStyle#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_243_1.aspx)]  \n[!code-vb[CustomDataListCreateControlStyle#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_243_2.vb)]\n[!code-cs[CustomDataListCreateControlStyle#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_243_2.cs)]"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableStyle&quot;> </xref>包含控件的默认样式属性。"
  overload: System.Web.UI.WebControls.DataList.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  id: CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateItem(Int32,ListItemType)
  nameWithType: DataList.CreateItem(Int32,ListItemType)
  fullName: System.Web.UI.WebControls.DataList.CreateItem(Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;></xref>对象。"
  remarks: "CreateItem 方法主要由控件开发人员在创建的自定义实现<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> CreateItem 方法在功能上等效于调用<xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A>一种<xref:System.Web.UI.WebControls.DataListItem>。</xref:System.Web.UI.WebControls.DataListItem>构造函数</xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A>和<xref:System.Web.UI.WebControls.DataListItem.ItemType%2A>属性初始化为<xref:System.Web.UI.WebControls.DataListItem>使用指定的值，但该项未插入到<xref:System.Web.UI.WebControls.DataList>.</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataListItem>新</xref:System.Web.UI.WebControls.DataListItem.ItemType%2A></xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A>       <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>方法使用 CreateItem 和<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法来创建<xref:System.Web.UI.WebControls.DataListItem>表示标头、 页脚、 分隔符，和数据列表中包含的数据绑定项的控件。</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> </xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 你可以访问通过数据列表的数据绑定项<xref:System.Web.UI.WebControls.DataList.Items%2A>集合。</xref:System.Web.UI.WebControls.DataList.Items%2A> 你可以访问所有项类型，包括页眉、 页脚和分隔符项，通过<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>集合。</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "中的指定的位置<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>放置所创建的项。"
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "A <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref>表示要创建的项的指定的类型。"
    return:
      type: System.Web.UI.WebControls.DataListItem
      description: "一个新<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;></xref>创建具有指定的列表项类型。"
  overload: System.Web.UI.WebControls.DataList.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: DataList.DeleteCommand
  fullName: System.Web.UI.WebControls.DataList.DeleteCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;></xref>中的项单击按钮<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "将引发 DeleteCommand 事件时`Delete`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       典型事件的处理程序 DeleteCommand 从数据源中删除选定的项，然后将重新绑定到数据<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       有关处理事件的详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the DeleteCommand event. It deletes the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Delete` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_109_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_109_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_109_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_109_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.DeleteCommandName
  id: DeleteCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DeleteCommandName
  nameWithType: DataList.DeleteCommandName
  fullName: System.Web.UI.WebControls.DataList.DeleteCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示<xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;></xref>命令名称。 此字段为只读的。"
  remarks: "使用 DeleteCommandName 字段来表示`Delete`命令名称。"
  syntax:
    content: public const string DeleteCommandName;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditCommand
  id: EditCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditCommand
  nameWithType: DataList.EditCommand
  fullName: System.Web.UI.WebControls.DataList.EditCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;></xref>中的项单击按钮<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "将引发 EditCommand 事件时`Edit`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       典型处理程序 EditCommand 事件集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>于所选行的属性，然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>      1> [!CAUTION]&1;> 文本不是 HTML 编码之前它将显示在<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 这使得可能要在文本中嵌入在 HTML 标记中的脚本。 如果该控件的值是来自用户输入，请务必验证这些值以减少安全漏洞。       有关处理事件的详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the EditCommand event. It allows you to edit the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Edit` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_64_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_64_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_64_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_64_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditCommandName
  id: EditCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditCommandName
  nameWithType: DataList.EditCommandName
  fullName: System.Web.UI.WebControls.DataList.EditCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示<xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;></xref>命令名称。 此字段为只读的。"
  remarks: "使用 EditCommandName 字段来表示`Edit`命令名称。"
  syntax:
    content: public const string EditCommandName;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemIndex
  id: EditItemIndex
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
  fullName: System.Web.UI.WebControls.DataList.EditItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中的选定项的索引号<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>若要编辑的控件。"
  remarks: "使用 EditItemIndex 属性以编程方式指定要编辑的项。 你还可以使用此属性来确定为编辑选定的项的索引。      1> [!NOTE]&1;> EditItemIndex 属性是从零开始。       要取消选择某个项，请将 EditItemIndex 属性设置为`-1`。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。       EditItemIndex 属性存储在控件状态。"
  example:
  - "The following code example demonstrates how to use the EditItemIndex property to specify the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_620_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_620_1.aspx)]"
  syntax:
    content: public virtual int EditItemIndex { get; set; }
    return:
      type: System.Int32
      description: "中的选定项的索引号<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>若要编辑的控件。"
  overload: System.Web.UI.WebControls.DataList.EditItemIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "所选的值是小于<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemStyle
  id: EditItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
  fullName: System.Web.UI.WebControls.DataList.EditItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取用于编辑在选定的项的样式属性<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用 EditItemStyle 属性以进行编辑在选定的项提供自定义样式<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       项中的样式属性<xref:System.Web.UI.WebControls.DataList>控件从一个项样式属性继承到另一个层次结构。</xref:System.Web.UI.WebControls.DataList> 由层次结构中较高的项的样式属性继承层次结构中设置得较低的项的样式属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性、 中的所有其他项样式属性<xref:System.Web.UI.WebControls.DataList>控件还具有红色字体。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 这使您可以通过设置单个项的样式属性提供通用控件外观。 你可以重写继承的样式设置是通过设置其样式属性的层次结构中较高级别的项样式属性的。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 下表列出了从最高到最低的层次结构顺序。      |优先 |样式属性 |  |----------------|--------------------|  |&1; |EditItemStyle |  |&2; |<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  |&3; |<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  |&4; |<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  |&5; |<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|      若要指定为编辑选定的项的自定义样式，将放置`<EditItemStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> 然后可以列出内打开的样式特性`<EditItemStyle>`标记。"
  example:
  - "The following code example demonstrates how to use the EditItemStyle property to specify a different appearance for the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_214_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_214_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>对象，其中包含有关在中编辑选定的项的样式属性<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值为空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.DataList.EditItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
  fullName: System.Web.UI.WebControls.DataList.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于为在中编辑选定的项的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用 EditItemTemplate 属性来控制为在中编辑选定的项的内容<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 选择用于编辑由控制项的外观<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>       若要指定用于选择要编辑的项目的模板，将放置`<EditItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出在开始和结束之间模板的内容`<EditItemTemplate>`标记。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to control the contents of the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_316_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_316_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>对象，其中包含有关在中编辑选定的项模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  id: ExtractTemplateRows
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
  fullName: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否的行<xref href=&quot;System.Web.UI.WebControls.Table&quot;></xref>控件中的每个模板定义<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控制、 被提取和显示。"
  remarks: "内容<xref:System.Web.UI.WebControls.DataList>使用模板来指定控件时。</xref:System.Web.UI.WebControls.DataList> 通常情况下，你可以列出你想要在模板中显示的控件。 也可以放置<xref:System.Web.UI.WebControls.Table>控件模板中，并显示表的行。</xref:System.Web.UI.WebControls.Table>       ExtractTemplateRows 属性用于指定是否的行<xref:System.Web.UI.WebControls.Table>控件中的每个模板定义<xref:System.Web.UI.WebControls.DataList>控件被提取和显示。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Table> 从模板中提取的所有行<xref:System.Web.UI.WebControls.DataList>控件显示在单个表。</xref:System.Web.UI.WebControls.DataList> 这使您可以从其他较小的表创建一个表并仍然维持的功能<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>      1> [!NOTE]&1;> 当此属性设置为`true`，你必须提供一个格式良好<xref:System.Web.UI.WebControls.Table>想要包括在每个模板的控件<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Table> 将显示仅表的行。 将忽略模板中的所有其他内容。 必须使用<xref:System.Web.UI.WebControls.Table>控制此功能正常工作。</xref:System.Web.UI.WebControls.Table> <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=fullName>控件不是此属性与兼容。</xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=fullName>       当你创建的单元格<xref:System.Web.UI.WebControls.Table>控件在模板中，你可以使用<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>属性<xref:System.Web.UI.WebControls.TableCell>对象以控制的单元格所跨越的列数。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> </xref:System.Web.UI.WebControls.Table> 你还可以使用<xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>属性控制的单元格所跨越的行数。</xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>      1> [!NOTE]&1;> <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>， <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>，和<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>属性不会影响的外观<xref:System.Web.UI.WebControls.DataList>控制当此属性设置为`true`。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> </xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> </xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>"
  example:
  - "The following code example demonstrate how to use the ExtractTemplateRows property to extract and display the rows of <xref:System.Web.UI.WebControls.Table> controls defined in the templates of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic DataList.ExtractTemplateRows Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1162_1.aspx)]\n [!code-cs[Classic DataList.ExtractTemplateRows Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1162_1.aspx)]"
  syntax:
    content: public virtual bool ExtractTemplateRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果行的<xref href=&quot;System.Web.UI.WebControls.Table&quot;></xref>控件中的每个模板定义<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控制、 提取和显示; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.ExtractTemplateRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DataList.FooterStyle
  fullName: System.Web.UI.WebControls.DataList.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "页脚部分的获取的样式属性<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "此属性用于提供页脚部分的自定义样式<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       FooterStyle 属性<xref:System.Web.UI.WebControls.DataList>控件继承的样式设置<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性。</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList> 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性，FooterStyle 属性也将有红色字体。</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 这使您可以通过设置的单个样式属性提供通用控件外观。 你可以通过设置 FooterStyle 属性重写继承的样式设置。 例如，你可以指定 FooterStyle 属性蓝色字体中, 重写红色字体指定<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性。</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>       若要指定页脚部分的自定义样式，将放置`<FooterStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出内打开的样式特性`<FooterStyle>`标记。      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>属性必须设置为`true`，此属性才可见。</xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>"
  example:
  - "The following code example demonstrates how to use the FooterStyle property to specify a custom background color for the footer section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_335_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_335_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>包含页脚部分的样式属性的对象<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值为空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.DataList.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
  fullName: System.Web.UI.WebControls.DataList.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于的页脚部分的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "要属性用于控制页脚部分的内容。 页脚部分的外观由控制<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>属性必须设置为`true`，此属性才可见。</xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>       <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性<xref:System.Web.UI.WebControls.DataList>控件继承的样式设置<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性。</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性，<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性也将有红色字体。</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 这使您可以通过设置的单个样式属性提供通用控件外观。 可以通过设置重写继承的样式设置<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性。</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>       若要指定页脚部分的模板，将放置`<FooterTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出在开始和结束之间模板的内容`<FooterTemplate>`标记。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to control the contents of the footer section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1036_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1036_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>对象，其中包含页脚部分的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: GridLines
  nameWithType: DataList.GridLines
  fullName: System.Web.UI.WebControls.DataList.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置网格线样式<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控制<xref:System.Web.UI.WebControls.DataList.RepeatLayout*>属性设置为<xref uid=&quot;langword_csharp_RepeatLayout.Table&quot; name=&quot;RepeatLayout.Table&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.DataList.RepeatLayout*>"
  remarks: "使用网格线属性指定的网格行样式<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 下表列出可能的样式。      |样式 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridLines>|没有网格线。 |  |<xref:System.Web.UI.WebControls.GridLines>|显示水平网格线。 |  |<xref:System.Web.UI.WebControls.GridLines>|显示垂直网格线。 |  |<xref:System.Web.UI.WebControls.GridLines>|显示这两个水平和垂直网格线。 |    &1;> [!NOTE]&1;> 此属性仅适用于时<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>属性设置为`RepeatLayout.Table`。</xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> </xref:System.Web.UI.WebControls.GridLines> </xref:System.Web.UI.WebControls.GridLines> </xref:System.Web.UI.WebControls.GridLines> </xref:System.Web.UI.WebControls.GridLines>"
  example:
  - "The following code example demonstrates how to use the GridLines property to display the vertical and horizontal grid lines of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1324_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1324_1.aspx)]"
  syntax:
    content: public override System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "之一<xref href=&quot;System.Web.UI.WebControls.GridLines&quot;></xref>枚举值。 默认值是<xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
  fullName: System.Web.UI.WebControls.DataList.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "标题部分的获取的样式属性<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "此属性用于提供自定义样式的标题<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       若要指定标题部分的自定义样式，将放置`<HeaderStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出内打开的样式特性`<HeaderStyle>`标记。      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>属性必须设置为`true`，此属性才可见。</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderStyle property to specify a custom background color for the heading section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1175_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1175_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>包含标题部分的样式属性的对象<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值为空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.DataList.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
  fullName: System.Web.UI.WebControls.DataList.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于的标题部分的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "HeaderTemplate 属性用于控制标题部分的内容。 标头部分的外观由控制<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>属性必须设置为`true`，此属性才可见。</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>       若要指定标题部分的模板，将放置`<HeaderTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出在开始和结束之间模板的内容`<HeaderTemplate>`标记。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to control the contents of the heading section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_905_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_905_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含标题部分的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  id: InitializeItem(System.Web.UI.WebControls.DataListItem)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: InitializeItem(DataListItem)
  nameWithType: DataList.InitializeItem(DataListItem)
  fullName: System.Web.UI.WebControls.DataList.InitializeItem(DataListItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;></xref>根据指定的模板和样式的列表项类型的对象。"
  remarks: "InitializeItem 方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>方法使用<xref:System.Web.UI.WebControls.DataList.CreateItem%2A>和 InitializeItem 方法创建<xref:System.Web.UI.WebControls.DataListItem>表示标头、 页脚、 分隔符，和数据列表中包含的数据绑定项的控件。</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.CreateItem%2A> </xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 你可以访问通过数据列表的数据绑定项<xref:System.Web.UI.WebControls.DataList.Items%2A>集合。</xref:System.Web.UI.WebControls.DataList.Items%2A> 你可以访问所有项类型，包括页眉、 页脚和分隔符项，通过<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>集合。</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>       重写<xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>方法以自定义如何<xref:System.Web.UI.WebControls.DataListItem>创建或添加到控件<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 重写 InitializeItem 方法以自定义模板<xref:System.Web.UI.WebControls.DataListItem>控件。</xref:System.Web.UI.WebControls.DataListItem>"
  syntax:
    content: protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.DataListItem
      description: "<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref>初始化。"
  overload: System.Web.UI.WebControls.DataList.InitializeItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemCommand
  nameWithType: DataList.ItemCommand
  fullName: System.Web.UI.WebControls.DataList.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在中单击任何按钮时发生<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "在中单击任何按钮时引发 ItemCommand 事件<xref:System.Web.UI.WebControls.DataList>控件并通常用时必须具有自定义的按钮控件`CommandName`值。</xref:System.Web.UI.WebControls.DataList>       有关处理事件的详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemCommand event to select an item from the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_0_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_0_1.aspx)]  \n  \n [!code-vb[DataListItemCommand2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_0_2.aspx)]\n [!code-cs[DataListItemCommand2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_0_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemCreated
  nameWithType: DataList.ItemCreated
  fullName: System.Web.UI.WebControls.DataList.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "服务器中的项上发生<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>创建控件。"
  remarks: "中的项时引发 ItemCreated 事件<xref:System.Web.UI.WebControls.DataList>创建控件，在往返过程和时将数据绑定到控件。</xref:System.Web.UI.WebControls.DataList>       ItemCreated 事件通常用于控制的内容和外观中某一行的<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       有关处理事件的详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemCreated event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are created.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[DataListItemCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_106_1.aspx)]  \n  \n [!code-cs[DataListItemCreated2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_106_2.aspx)]\n [!code-vb[DataListItemCreated2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_106_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;
    return:
      type: System.Web.UI.WebControls.DataListItemEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemDataBound
  id: ItemDataBound
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemDataBound
  nameWithType: DataList.ItemDataBound
  fullName: System.Web.UI.WebControls.DataList.ItemDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "数据绑定到某个项时将发生<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "项被绑定到的数据之后，将引发 ItemDataBound 事件<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 此事件可为你提供访问的数据项，客户端上显示之前的最后机会。 将引发此事件后，数据项目不再可用。       有关处理事件的详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemDataBound event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are bound to the control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListItemDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_143_1.aspx)]\n [!code-vb[DataListItemDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_143_1.aspx)]  \n  \n [!code-vb[DataListItemDataBound2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_143_2.aspx)]\n [!code-cs[DataListItemDataBound2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_143_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;
    return:
      type: System.Web.UI.WebControls.DataListItemEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.Items
  id: Items
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: Items
  nameWithType: DataList.Items
  fullName: System.Web.UI.WebControls.DataList.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取的集合<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;></xref>表示在控件内的各个项的对象。"
  remarks: "使用项集合以编程方式控制中的项<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 项集合不提供任何方法来添加或删除到集合的项。 但是，你可以通过提供的处理程序来控制项的内容<xref:System.Web.UI.WebControls.DataList.ItemCreated>事件。</xref:System.Web.UI.WebControls.DataList.ItemCreated>      1> [!NOTE]&1;> 仅绑定到数据源的项包含项目集合中。 集合中不包括页眉、 页脚和分隔符。"
  example:
  - "The following code example demonstrates how to use the Items collection to display the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic DataList.Items Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_231_1.aspx)]\n [!code-cs[Classic DataList.Items Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_231_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }
    return:
      type: System.Web.UI.WebControls.DataListItemCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref> ，其中包含一套<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;></xref>表示内的单个项的对象<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.DataList.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemStyle
  id: ItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemStyle
  nameWithType: DataList.ItemStyle
  fullName: System.Web.UI.WebControls.DataList.ItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取为中的项的样式属性<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用此属性提供的项自定义样式<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       项中的样式属性<xref:System.Web.UI.WebControls.DataList>控件从一个项样式属性继承到另一个层次结构。</xref:System.Web.UI.WebControls.DataList> 由层次结构中较高的项的样式属性继承层次结构中设置得较低的项的样式属性。 例如，如果指定 ItemStyle 属性红色字体，所有其他项将样式中的属性<xref:System.Web.UI.WebControls.DataList>控件还具有红色字体。</xref:System.Web.UI.WebControls.DataList> 这使您可以通过设置单个项的样式属性提供通用控件外观。 你可以重写继承的样式设置是通过设置其样式属性的层次结构中较高级别的项样式属性的。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>重写 ItemStyle 属性中指定的红色字体的属性。</xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 下表列出了从最高到最低的层次结构顺序。      |优先 |样式属性 |  |----------------|--------------------|  |&1; |<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  |&2; |<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  |&3; |<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  |&4; |ItemStyle |  |&5; |<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|      若要指定的项的自定义样式<xref:System.Web.UI.WebControls.DataList>控制，请将放`<ItemStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 然后可以列出内打开的样式特性`<ItemStyle>`标记。       你还可以使用<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>中的属性，以提供不同的外观的交替项<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>"
  example:
  - "The following code example demonstrates how to use the ItemStyle property to specify a different background color for the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_649_1.aspx)]\n [!code-cs[DataListItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_649_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>包含中的项的样式属性的对象<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值为空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.DataList.ItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
  fullName: System.Web.UI.WebControls.DataList.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于中的项的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用 ItemTemplate 属性来控制中的项的内容<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 中的项的外观<xref:System.Web.UI.WebControls.DataList>控制通过<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList>       若要指定的项模板<xref:System.Web.UI.WebControls.DataList>控制，请将放`<ItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList> 然后可以列出在开始和结束之间模板的内容`<ItemTemplate>`标记。       你可以选择使用<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>中的属性，以提供不同的外观的交替项<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to control the contents of the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_848_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_848_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含中的项的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DataList.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataList.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载以前保存的视图状态的<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。  但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。       LoadViewState 方法还原视图状态信息<xref:System.Web.UI.WebControls.DataList>控件从保存的一个页面请求<xref:System.Web.UI.WebControls.DataList.SaveViewState%2A>方法。</xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "一个对象，表示的状态<xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DataList.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定是否沿页的 UI 服务器控件层次结构向上传递服务器控件的事件。"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.EventArgs
      description: "事件数据。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果事件已被取消;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnCancelCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnCancelCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnCancelCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.DataList.CancelCommand&quot;></xref>事件。 这可以为事件提供自定义处理程序。"
  remarks: "使用 OnCancelCommand 方法提供的自定义处理程序<xref:System.Web.UI.WebControls.DataList.CancelCommand>事件。</xref:System.Web.UI.WebControls.DataList.CancelCommand>       <xref:System.Web.UI.WebControls.DataList.CancelCommand>引发事件时`Cancel`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.CancelCommand>       典型处理程序<xref:System.Web.UI.WebControls.DataList.CancelCommand>事件集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`（以取消选择项），然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataList.CancelCommand>      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。       OnCancelCommand 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.CancelCommand> event. It cancels any edits made to an item in the <xref:System.Web.UI.WebControls.DataList> control when the `Cancel` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/f712037e-c950-4136-8daf-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/f712037e-c950-4136-8daf-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/f712037e-c950-4136-8daf-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/f712037e-c950-4136-8daf-_2.aspx)]"
  syntax:
    content: protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.DataList.OnCancelCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnDeleteCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnDeleteCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnDeleteCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.DataList.DeleteCommand&quot;></xref>事件。 这可以为事件提供自定义处理程序。"
  remarks: "使用 OnDeleteCommand 方法提供的自定义处理程序<xref:System.Web.UI.WebControls.DataList.DeleteCommand>事件。</xref:System.Web.UI.WebControls.DataList.DeleteCommand>       <xref:System.Web.UI.WebControls.DataList.DeleteCommand>引发事件时`Delete`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.DeleteCommand>       典型处理程序<xref:System.Web.UI.WebControls.DataList.DeleteCommand>事件从数据源中删除选定的项，然后将重新绑定到数据<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.DeleteCommand>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。       OnDeleteCommand 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.DeleteCommand> event. It deletes the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Delete` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/b69fcef1-7d66-4606-9238-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/b69fcef1-7d66-4606-9238-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/b69fcef1-7d66-4606-9238-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/b69fcef1-7d66-4606-9238-_2.aspx)]"
  syntax:
    content: protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.DataList.OnDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnEditCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnEditCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnEditCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.DataList.EditCommand&quot;></xref>事件。 这可以为事件提供自定义处理程序。"
  remarks: "使用 OnEditCommand 方法提供的自定义处理程序<xref:System.Web.UI.WebControls.DataList.EditCommand>事件。</xref:System.Web.UI.WebControls.DataList.EditCommand>       <xref:System.Web.UI.WebControls.DataList.EditCommand>引发事件时`Edit`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditCommand>       典型处理程序<xref:System.Web.UI.WebControls.DataList.EditCommand>事件集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>于所选行的属性，然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataList.EditCommand>      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。       OnEditCommand 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.EditCommand> event. It allows you to edit the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Edit` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/99a47a87-5972-4aac-87aa-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/99a47a87-5972-4aac-87aa-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/99a47a87-5972-4aac-87aa-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/99a47a87-5972-4aac-87aa-_2.aspx)]"
  syntax:
    content: protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.DataList.OnEditCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DataList.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "OnInit 方法通知<xref:System.Web.UI.WebControls.DataList>控件来执行任何所需创建并设置实例的初始化步骤。</xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DataList.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnItemCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.DataList.ItemCommand&quot;></xref>事件。 这可以为事件提供自定义处理程序。"
  remarks: "使用 OnItemCommand 方法提供的自定义处理程序<xref:System.Web.UI.WebControls.DataList.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataList.ItemCommand>       <xref:System.Web.UI.WebControls.DataList.ItemCommand>在中单击任何按钮时引发事件<xref:System.Web.UI.WebControls.DataList>控件并通常用时必须具有自定义的按钮控件`CommandName`值，如`Add`中<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemCommand>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。       OnItemCommand 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemCommand> event to select an item from the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/346e0b5a-81b1-46ba-abc9-_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/346e0b5a-81b1-46ba-abc9-_1.aspx)]  \n  \n [!code-vb[DataListItemCommand2#1](~/add/codesnippet/visualbasic/346e0b5a-81b1-46ba-abc9-_2.aspx)]\n [!code-cs[DataListItemCommand2#1](~/add/codesnippet/csharp/346e0b5a-81b1-46ba-abc9-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.DataList.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  id: OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemCreated(DataListItemEventArgs)
  nameWithType: DataList.OnItemCreated(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCreated(DataListItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.DataList.ItemCreated&quot;></xref>事件。 这可以为事件提供自定义处理程序。"
  remarks: "使用 OnItemCreated 方法提供的自定义处理程序<xref:System.Web.UI.WebControls.DataList.ItemCreated>事件。</xref:System.Web.UI.WebControls.DataList.ItemCreated>       <xref:System.Web.UI.WebControls.DataList.ItemCreated>中的项时将引发事件<xref:System.Web.UI.WebControls.DataList>创建控件，在往返过程和时将数据绑定到控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemCreated>       <xref:System.Web.UI.WebControls.DataList.ItemCreated>事件通常用于控制的内容和外观中某一行的<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemCreated>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。       OnItemCreated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemCreated> event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are created.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCreated#1](~/add/codesnippet/visualbasic/daa572be-0a5b-4a9b-a0e3-_1.aspx)]\n [!code-cs[DataListItemCreated#1](~/add/codesnippet/csharp/daa572be-0a5b-4a9b-a0e3-_1.aspx)]  \n  \n [!code-cs[DataListItemCreated2#1](~/add/codesnippet/csharp/daa572be-0a5b-4a9b-a0e3-_2.aspx)]\n [!code-vb[DataListItemCreated2#1](~/add/codesnippet/visualbasic/daa572be-0a5b-4a9b-a0e3-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.DataList.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  id: OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemDataBound(DataListItemEventArgs)
  nameWithType: DataList.OnItemDataBound(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemDataBound(DataListItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.DataList.ItemDataBound&quot;></xref>事件。 这可以为事件提供自定义处理程序。"
  remarks: "使用 OnItemDataBound 方法提供的自定义处理程序<xref:System.Web.UI.WebControls.DataList.ItemDataBound>事件。</xref:System.Web.UI.WebControls.DataList.ItemDataBound>       <xref:System.Web.UI.WebControls.DataList.ItemDataBound>项被绑定到的数据之后，将引发事件<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemDataBound> 此事件可为你提供访问的数据项，客户端上显示之前的最后机会。 将引发此事件后，数据项目不再可用。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。       OnItemDataBound 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemDataBound> event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are bound to the control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListItemDataBound#1](~/add/codesnippet/csharp/d0f378ec-24e7-443f-8ae5-_1.aspx)]\n [!code-vb[DataListItemDataBound#1](~/add/codesnippet/visualbasic/d0f378ec-24e7-443f-8ae5-_1.aspx)]  \n  \n [!code-vb[DataListItemDataBound2#1](~/add/codesnippet/visualbasic/d0f378ec-24e7-443f-8ae5-_2.aspx)]\n [!code-cs[DataListItemDataBound2#1](~/add/codesnippet/csharp/d0f378ec-24e7-443f-8ae5-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.DataList.OnItemDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnUpdateCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnUpdateCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnUpdateCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.DataList.UpdateCommand&quot;></xref>事件。 这可以为事件提供自定义处理程序。"
  remarks: "使用 OnUpdateCommand 方法提供的自定义处理程序<xref:System.Web.UI.WebControls.DataList.UpdateCommand>事件。</xref:System.Web.UI.WebControls.DataList.UpdateCommand>       <xref:System.Web.UI.WebControls.DataList.UpdateCommand>引发事件时`Update`按钮的单击某项。</xref:System.Web.UI.WebControls.DataList.UpdateCommand>       典型处理程序<xref:System.Web.UI.WebControls.DataList.UpdateCommand>事件更新的数据，集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`（以取消选择项），然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataList.UpdateCommand>      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。       OnUpdateCommand 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.UpdateCommand> event. It allows you to update the selected item in the <xref:System.Web.UI.WebControls.DataList> control with the new values entered by the user when the `Update` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/0d1a8fde-7046-4f78-b346-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/0d1a8fde-7046-4f78-b346-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/0d1a8fde-7046-4f78-b346-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/0d1a8fde-7046-4f78-b346-_2.aspx)]"
  syntax:
    content: protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.DataList.OnUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: DataList.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DataList.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "准备进行呈现的控件层次结构<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "主要由控件开发人员使用 PrepareControlHierarchy 方法，派生自定义控件从时<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       PrepareControlHierarchy 准备控件层次结构并设置样式为包含<xref:System.Web.UI.WebControls.DataListItem>控制在呈现的子控件之前。</xref:System.Web.UI.WebControls.DataListItem>"
  syntax:
    content: protected override void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: DataList.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在列表项呈现<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "派生的自定义控件时，使用 RenderContents 方法主要由控件开发人员<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       RenderContents 方法呈现内容的内部<xref:System.Web.UI.WebControls.DataList>控件，包括所包含<xref:System.Web.UI.WebControls.DataListItem>控件。</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList>"
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that some text precedes the <xref:System.Web.UI.WebControls.DataList> object.  \n  \n [!code-cs[CustomDataListRenderContents#1](~/add/codesnippet/csharp/723e0bf7-1579-4578-bf9d-_1.aspx)]\n [!code-vb[CustomDataListRenderContents#1](~/add/codesnippet/visualbasic/723e0bf7-1579-4578-bf9d-_1.aspx)]  \n[!code-cs[CustomDataListRenderContents#2](~/add/codesnippet/csharp/723e0bf7-1579-4578-bf9d-_2.cs)]\n[!code-vb[CustomDataListRenderContents#2](~/add/codesnippet/visualbasic/723e0bf7-1579-4578-bf9d-_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ，它表示要在客户端呈现 HTML 内容的输出流。"
  overload: System.Web.UI.WebControls.DataList.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatColumns
  id: RepeatColumns
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
  fullName: System.Web.UI.WebControls.DataList.RepeatColumns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要在中显示的列数<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用此属性指定的显示中的项的列数<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 例如，如果将此属性设置为`5`、<xref:System.Web.UI.WebControls.DataList>控件五个列中显示它的项。</xref:System.Web.UI.WebControls.DataList>      1> [!NOTE]&1;> 如果此属性设置为`0`、<xref:System.Web.UI.WebControls.DataList>控件将显示在单个行或列中，基于值的项<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性。</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> </xref:System.Web.UI.WebControls.DataList> 如果<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性设置为`RepeatDirection.Horizontal`的项显示在单个行。</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> 如果<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性设置为`RepeatDirection.Vertical`的项显示在单个列。</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>"
  example:
  - "The following code example demonstrates how to use the RepeatColumns property to specify the number of columns to display in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_722_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_722_1.aspx)]"
  syntax:
    content: public virtual int RepeatColumns { get; set; }
    return:
      type: System.Int32
      description: "要在中显示的列数<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>，表示中的项<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件显示在单个行或列中，基于值<xref:System.Web.UI.WebControls.DataList.RepeatDirection*>属性。</xref:System.Web.UI.WebControls.DataList.RepeatDirection*>"
  overload: System.Web.UI.WebControls.DataList.RepeatColumns*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的列数是负值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatDirection
  id: RepeatDirection
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
  fullName: System.Web.UI.WebControls.DataList.RepeatDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置是否<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件显示垂直或水平。"
  remarks: "使用 RepeatDirection 属性指定的显示方向<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>      1> [!NOTE]&1;> 显示的列数始终由<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>属性。</xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>       如果此属性设置为`RepeatDirection.Vertical`，列表中的项是从上到下，加载的列中显示，然后从左到右，直到呈现出所有项。 例如，如果<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>属性设置为`3`中的项<xref:System.Web.UI.WebControls.DataList>控件显示三个列，如下所示下表中。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>      ||||  |-|-|-|  |&1; |&4; |&7; |  |&2; |&5; |&8; |  |&3; |&6; |&9; |      如果此属性设置为`RepeatDirection.Horizontal`，列表中的项显示在从左到右加载的行中，自上而下，直到呈现出所有项。 例如，如果<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>属性设置为`3`的项<xref:System.Web.UI.WebControls.DataList>控件中的三个项，每行显示下表中。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>      ||||   |-|-|-|   |1|2|3|   |4|5|6|   |7|8|9|"
  example:
  - "The following code example demonstrates how to use the RepeatDirection property to specify the direction in which the <xref:System.Web.UI.WebControls.DataList> control is displayed.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_42_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_42_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }
    return:
      type: System.Web.UI.WebControls.RepeatDirection
      description: "之一<xref href=&quot;System.Web.UI.WebControls.RepeatDirection&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_Vertical&quot; name=&quot;Vertical&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.RepeatDirection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是之一<xref href=&quot;System.Web.UI.WebControls.RepeatDirection&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatLayout
  id: RepeatLayout
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
  fullName: System.Web.UI.WebControls.DataList.RepeatLayout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置是否在表或数据流布局中显示控件。"
  remarks: "适用属性用于指定是否中的项<xref:System.Web.UI.WebControls.DataList>控件显示表中。</xref:System.Web.UI.WebControls.DataList> 唯一的<xref:System.Web.UI.WebControls.RepeatLayout>，支持的<xref:System.Web.UI.WebControls.DataList>控件是<xref:System.Web.UI.WebControls.RepeatLayout>和<xref:System.Web.UI.WebControls.RepeatLayout>.</xref:System.Web.UI.WebControls.RepeatLayout></xref:System.Web.UI.WebControls.RepeatLayout></xref:System.Web.UI.WebControls.DataList>值</xref:System.Web.UI.WebControls.RepeatLayout>       如果此属性设置为`RepeatLayout.Table`，列表中的项显示在表中。 如果此属性设置为`RepeatLayout.Flow`，列表中的项显示没有的表结构。       当<xref:System.Web.UI.WebControls.DataList>控件显示表中，你可以使用<xref:System.Web.UI.WebControls.DataList.GridLines%2A>属性可指定网格线样式。</xref:System.Web.UI.WebControls.DataList.GridLines%2A> </xref:System.Web.UI.WebControls.DataList>"
  example:
  - "The following code example demonstrates how to use the RepeatLayout property to specify the layout style of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_586_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_586_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }
    return:
      type: System.Web.UI.WebControls.RepeatLayout
      description: "一个值，指定表中或在数据流布局中是否显示控件。"
  overload: System.Web.UI.WebControls.DataList.RepeatLayout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是支持之一<xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DataList.SaveViewState()
  fullName: System.Web.UI.WebControls.DataList.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "保存对控件的更改自页回发到服务器的时间视图状态。"
  remarks: "SaveViewState 方法主要由控件开发人员使用。       视图状态是服务器控件的属性的值的累计。 这些值会自动放在服务器控件的<xref:System.Web.UI.Control.ViewState%2A>属性，它是<xref:System.Web.UI.StateBag>类</xref:System.Web.UI.StateBag>的实例</xref:System.Web.UI.Control.ViewState%2A> <xref:System.Web.UI.Control.ViewState%2A>属性的值随后会保存到一个字符串对象的服务器控件的生命周期的保存状态阶段后。</xref:System.Web.UI.Control.ViewState%2A> 有关详细信息，请参阅[ASP.NET 页面生命周期概述](~/add/includes/ajax-current-ext-md.md)。       保存视图状态，此字符串对象被作为存储在隐藏的 HTML 输入元素 在创作自定义服务器控件时，你可以通过重写 SaveViewState 方法并修改提高效率<xref:System.Web.UI.Control.ViewState%2A>服务器控件的属性。</xref:System.Web.UI.Control.ViewState%2A> 有关详细信息，请参阅[开发自定义 ASP.NET 服务器控件](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "包含的更改的对象<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>视图状态。"
  overload: System.Web.UI.WebControls.DataList.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectCommandName
  id: SelectCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectCommandName
  nameWithType: DataList.SelectCommandName
  fullName: System.Web.UI.WebControls.DataList.SelectCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示<xref uid=&quot;langword_csharp_Select&quot; name=&quot;Select&quot; href=&quot;&quot;></xref>命令名称。 此字段为只读的。"
  remarks: "使用 SelectCommandName 字段来表示`Select`命令名称。"
  syntax:
    content: public const string SelectCommandName;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedIndex
  id: SelectedIndex
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
  fullName: System.Web.UI.WebControls.DataList.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中的选定项的索引<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用 SelectedIndex 属性以编程方式指定中的选定的项<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 你还可以使用此属性来确定所选的项的索引。      1> [!NOTE]&1;> SelectedIndex 属性是从零开始。       若要取消选择某个项目，请将 SelectedIndex 属性设置为`-1`。       SelectedIndex 属性存储在控件状态。"
  example:
  - "The following code example demonstrates how to use the SelectedIndex property to specify the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1039_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1039_1.aspx)]"
  syntax:
    content: public virtual int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "中的选定项的索引<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.DataList.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值是小于<xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItem
  id: SelectedItem
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItem
  nameWithType: DataList.SelectedItem
  fullName: System.Web.UI.WebControls.DataList.SelectedItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取中选定的项<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用 SelectedItem 属性来获取<xref:System.Web.UI.WebControls.DataListItem>表示中的选定的项的对象<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataListItem> 此对象然后用于访问所选的项的属性。"
  example:
  - "The following code example demonstrates how to use the SelectedItem property to display the contents of the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic DataList.SelectedItem Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_681_1.aspx)]\n [!code-vb[Classic DataList.SelectedItem Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_681_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }
    return:
      type: System.Web.UI.WebControls.DataListItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> ，表示在中选择的项<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.DataList.SelectedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle
  id: SelectedItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
  fullName: System.Web.UI.WebControls.DataList.SelectedItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取中的选定项的样式属性<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "此属性用于提供自定义样式中的选定项<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       项中的样式属性<xref:System.Web.UI.WebControls.DataList>控件从一个项样式属性继承到另一个层次结构。</xref:System.Web.UI.WebControls.DataList> 由层次结构中较高的项的样式属性继承层次结构中设置得较低的项的样式属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性、 中的所有其他项样式属性<xref:System.Web.UI.WebControls.DataList>控件还具有红色字体。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 这使您可以通过设置单个项的样式属性提供通用控件外观。 你可以重写继承的样式设置是通过设置其样式属性的层次结构中较高级别的项样式属性的。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 下表列出了从最高到最低的层次结构顺序。      |优先 |样式属性 |  |----------------|--------------------|  |&1; |<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  |&2; |SelectedItemStyle |  |&3; |<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  |&4; |<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  |&5; |<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|      若要指定选定项的自定义样式，将放置`<SelectedItemStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 然后可以列出内打开的样式特性`<SelectedItemStyle>`标记。"
  example:
  - "The following code example demonstrates how to use the SelectedItemStyle property to specify a custom background color for the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_571_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_571_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>包含中的选定项的样式属性的对象<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值为空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.DataList.SelectedItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  id: SelectedItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
  fullName: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于中的选定项的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "SelectedItemTemplate 属性用于控制所选的项的内容。 所选的项的外观由控制<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>       若要指定选定项的模板，将放置`<SelectedItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出在开始和结束之间模板的内容`<SelectedItemTemplate>`标记。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the SelectedItemTemplate property to control the contents of the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_845_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_845_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含中的选定项的模板<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.SelectedItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedValue
  nameWithType: DataList.SelectedValue
  fullName: System.Web.UI.WebControls.DataList.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取所选的数据列表项的键字段的值。"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "所选的数据列表项的键字段值。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示当前选定任何数据列表项。"
  overload: System.Web.UI.WebControls.DataList.SelectedValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.BaseDataList.DataKeyField*>未设置属性。</xref:System.Web.UI.WebControls.BaseDataList.DataKeyField*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle
  id: SeparatorStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
  fullName: System.Web.UI.WebControls.DataList.SeparatorStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取在每个项之间的分隔符的样式属性<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "SeparatorStyle 属性用于提供自定义样式中每个项之间的分隔符<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 分隔符可以放置包含在每个项之间的自定义内容的元素<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       若要指定自定义样式分隔符，`<SeparatorStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出内打开的样式特性`<SeparatorStyle>`标记。"
  example:
  - "The following code example demonstrates how to use the SeparatorStyle property to specify a custom background color for the separator between each item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListSeparatorStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1134_1.aspx)]\n [!code-vb[DataListSeparatorStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1134_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>对象，其中包含的样式属性中的每个项之间的分隔符的<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值为空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象。"
  overload: System.Web.UI.WebControls.DataList.SeparatorStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate
  id: SeparatorTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
  fullName: System.Web.UI.WebControls.DataList.SeparatorTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的模板的项之间的分隔符<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用 SeparatorTemplate 属性来控制内容的项之间的分隔符<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 分隔符可以放置包含在每个项之间的自定义内容的元素<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 项之间的分隔符的外观<xref:System.Web.UI.WebControls.DataList>控制通过<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> </xref:System.Web.UI.WebControls.DataList>       若要指定分隔符的模板，将放置`<SeparatorTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> 然后可以列出在开始和结束之间模板的内容`<SeparatorTemplate>`标记。      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the SeparatorTemplate property to control the contents of the separator between each item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListSeparatorStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1118_1.aspx)]\n [!code-vb[DataListSeparatorStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1118_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含的模板中的项之间的分隔符<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.SeparatorTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ShowFooter
  id: ShowFooter
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ShowFooter
  nameWithType: DataList.ShowFooter
  fullName: System.Web.UI.WebControls.DataList.ShowFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示中是否显示页脚部分<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "ShowFooter 属性用于指定是否在中显示页脚部分<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       你可以通过设置控制页脚部分的外观<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 页脚部分的内容由控制<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>属性。</xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>"
  example:
  - "The following code example demonstrates how to use the ShowFooter property to display the footer section in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_885_1.aspx)]\n [!code-vb[DataListShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_885_1.aspx)]"
  syntax:
    content: public virtual bool ShowFooter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果显示页脚部分;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，但此属性才检查时<xref:System.Web.UI.WebControls.DataList.FooterTemplate*>属性不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.DataList.FooterTemplate*>"
  overload: System.Web.UI.WebControls.DataList.ShowFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ShowHeader
  nameWithType: DataList.ShowHeader
  fullName: System.Web.UI.WebControls.DataList.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否在中显示的标题部分<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "ShowHeader 属性用于指定是否在中显示的标题部分<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList>       你可以通过设置控制标头部分的外观<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性。</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 标头部分的内容由控制<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>属性。</xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>"
  example:
  - "The following code example demonstrates how to use the ShowHeader property to display the header section in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_933_1.aspx)]\n [!code-vb[DataListShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_933_1.aspx)]"
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果标头会显示出来;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，但此属性才检查时<xref:System.Web.UI.WebControls.DataList.HeaderTemplate*>属性不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.DataList.HeaderTemplate*>"
  overload: System.Web.UI.WebControls.DataList.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  id: System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.DataList>实例被强制转换为<xref:System.Web.UI.WebControls.IRepeatInfoUser>接口。</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "之一<xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;></xref>枚举值。"
    - id: repeatIndex
      type: System.Int32
      description: "列表控件中项的索引。"
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>表示列表控件中的指定索引处的指定的项类型的样式。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.DataList>实例被强制转换为<xref:System.Web.UI.WebControls.IRepeatInfoUser>接口。</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.DataList>实例被强制转换<xref:System.Web.UI.WebControls.IRepeatInfoUser>接口。</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.DataList>实例被强制转换为<xref:System.Web.UI.WebControls.IRepeatInfoUser>接口。</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  id: System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.DataList>实例被强制转换为<xref:System.Web.UI.WebControls.IRepeatInfoUser>接口。</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "项的类型。"
    - id: repeatIndex
      type: System.Int32
      description: "项的索引。"
    - id: repeatInfo
      type: System.Web.UI.WebControls.RepeatInfo
      description: "用于呈现项的信息。"
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>对象用于将呈现的项。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  id: System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.DataList>实例被强制转换为<xref:System.Web.UI.WebControls.IRepeatInfoUser>接口。</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }
    return:
      type: System.Int32
      description: "要添加。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: TagKey
  nameWithType: DataList.TagKey
  fullName: System.Web.UI.WebControls.DataList.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取用于呈现的 HTML 标记<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "使用 TagKey 属性来确定<xref:System.Web.UI.HtmlTextWriterTag>与关联的值<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.HtmlTextWriterTag> TagKey 属性主要由控件开发人员使用。"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "返回<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>标记如果<xref:System.Web.UI.WebControls.DataList.RepeatLayout*>设置为<xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;> </xref>; 否则为返回<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>标记。</xref:System.Web.UI.WebControls.DataList.RepeatLayout*> 默认值是<xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DataList.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DataList.TrackViewState()
  fullName: System.Web.UI.WebControls.DataList.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "跟踪视图状态更改为<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控制以便将它们存储在控件的<xref:System.Web.UI.Control.ViewState*>属性。</xref:System.Web.UI.Control.ViewState*>"
  remarks: "重写 TrackViewState 方法以将标记控件的视图状态的一部分开始对控件的跟踪并保存更改的起始点。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: DataList.UpdateCommand
  fullName: System.Web.UI.WebControls.DataList.UpdateCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>中的项单击按钮<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>控件。"
  remarks: "将引发 UpdateCommand 事件时`Update`按钮的单击某项。       典型处理 UpdateCommand 事件更新数据，设置<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`（以取消选择项），然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>      1> [!CAUTION]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](~/add/includes/ajax-current-ext-md.md)，[如何︰ 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](~/add/includes/ajax-current-ext-md.md)，和[验证用户输入中的 ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md)。       有关处理事件的详细信息，请参阅[如何︰ 在 Web 窗体应用程序中使用事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the UpdateCommand event. It allows you to update the selected item in the <xref:System.Web.UI.WebControls.DataList> control with the new values entered by the user when the `Update` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_128_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_128_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_128_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_128_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.UpdateCommandName
  id: UpdateCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: UpdateCommandName
  nameWithType: DataList.UpdateCommandName
  fullName: System.Web.UI.WebControls.DataList.UpdateCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>命令名称。 此字段为只读的。"
  remarks: "使用 UpdateCommandName 字段来表示`Update`命令名称。"
  syntax:
    content: public const string UpdateCommandName;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.BaseDataList
  isExternal: false
  name: System.Web.UI.WebControls.BaseDataList
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.DataList.#ctor
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DataList()
  nameWithType: DataList.DataList()
  fullName: System.Web.UI.WebControls.DataList.DataList()
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.DataList.CancelCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CancelCommand
  nameWithType: DataList.CancelCommand
  fullName: System.Web.UI.WebControls.DataList.CancelCommand
- uid: System.Web.UI.WebControls.DataListCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListCommandEventHandler
  nameWithType: DataListCommandEventHandler
  fullName: System.Web.UI.WebControls.DataListCommandEventHandler
- uid: System.Web.UI.WebControls.DataList.CancelCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CancelCommandName
  nameWithType: DataList.CancelCommandName
  fullName: System.Web.UI.WebControls.DataList.CancelCommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlHierarchy(Boolean)
  nameWithType: DataList.CreateControlHierarchy(Boolean)
  fullName: System.Web.UI.WebControls.DataList.CreateControlHierarchy(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlStyle()
  nameWithType: DataList.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DataList.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateItem(Int32,ListItemType)
  nameWithType: DataList.CreateItem(Int32,ListItemType)
  fullName: System.Web.UI.WebControls.DataList.CreateItem(Int32,ListItemType)
- uid: System.Web.UI.WebControls.DataListItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItem
  nameWithType: DataListItem
  fullName: System.Web.UI.WebControls.DataListItem
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.DataList.DeleteCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DeleteCommand
  nameWithType: DataList.DeleteCommand
  fullName: System.Web.UI.WebControls.DataList.DeleteCommand
- uid: System.Web.UI.WebControls.DataList.DeleteCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DeleteCommandName
  nameWithType: DataList.DeleteCommandName
  fullName: System.Web.UI.WebControls.DataList.DeleteCommandName
- uid: System.Web.UI.WebControls.DataList.EditCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditCommand
  nameWithType: DataList.EditCommand
  fullName: System.Web.UI.WebControls.DataList.EditCommand
- uid: System.Web.UI.WebControls.DataList.EditCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditCommandName
  nameWithType: DataList.EditCommandName
  fullName: System.Web.UI.WebControls.DataList.EditCommandName
- uid: System.Web.UI.WebControls.DataList.EditItemIndex
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
  fullName: System.Web.UI.WebControls.DataList.EditItemIndex
- uid: System.Web.UI.WebControls.DataList.EditItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
  fullName: System.Web.UI.WebControls.DataList.EditItemStyle
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
  fullName: System.Web.UI.WebControls.DataList.EditItemTemplate
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
  fullName: System.Web.UI.WebControls.DataList.ExtractTemplateRows
- uid: System.Web.UI.WebControls.DataList.FooterStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterStyle
  nameWithType: DataList.FooterStyle
  fullName: System.Web.UI.WebControls.DataList.FooterStyle
- uid: System.Web.UI.WebControls.DataList.FooterTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
  fullName: System.Web.UI.WebControls.DataList.FooterTemplate
- uid: System.Web.UI.WebControls.DataList.GridLines
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: GridLines
  nameWithType: DataList.GridLines
  fullName: System.Web.UI.WebControls.DataList.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.DataList.HeaderStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
  fullName: System.Web.UI.WebControls.DataList.HeaderStyle
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
  fullName: System.Web.UI.WebControls.DataList.HeaderTemplate
- uid: System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: InitializeItem(DataListItem)
  nameWithType: DataList.InitializeItem(DataListItem)
  fullName: System.Web.UI.WebControls.DataList.InitializeItem(DataListItem)
- uid: System.Web.UI.WebControls.DataList.ItemCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemCommand
  nameWithType: DataList.ItemCommand
  fullName: System.Web.UI.WebControls.DataList.ItemCommand
- uid: System.Web.UI.WebControls.DataList.ItemCreated
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemCreated
  nameWithType: DataList.ItemCreated
  fullName: System.Web.UI.WebControls.DataList.ItemCreated
- uid: System.Web.UI.WebControls.DataListItemEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemEventHandler
  nameWithType: DataListItemEventHandler
  fullName: System.Web.UI.WebControls.DataListItemEventHandler
- uid: System.Web.UI.WebControls.DataList.ItemDataBound
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemDataBound
  nameWithType: DataList.ItemDataBound
  fullName: System.Web.UI.WebControls.DataList.ItemDataBound
- uid: System.Web.UI.WebControls.DataList.Items
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: Items
  nameWithType: DataList.Items
  fullName: System.Web.UI.WebControls.DataList.Items
- uid: System.Web.UI.WebControls.DataListItemCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemCollection
  nameWithType: DataListItemCollection
  fullName: System.Web.UI.WebControls.DataListItemCollection
- uid: System.Web.UI.WebControls.DataList.ItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemStyle
  nameWithType: DataList.ItemStyle
  fullName: System.Web.UI.WebControls.DataList.ItemStyle
- uid: System.Web.UI.WebControls.DataList.ItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
  fullName: System.Web.UI.WebControls.DataList.ItemTemplate
- uid: System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DataList.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataList.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DataList.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnCancelCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnCancelCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnCancelCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataListCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListCommandEventArgs
  nameWithType: DataListCommandEventArgs
  fullName: System.Web.UI.WebControls.DataListCommandEventArgs
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnDeleteCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnDeleteCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnDeleteCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnEditCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnEditCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnEditCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DataList.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnItemCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCreated(DataListItemEventArgs)
  nameWithType: DataList.OnItemCreated(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCreated(DataListItemEventArgs)
- uid: System.Web.UI.WebControls.DataListItemEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemEventArgs
  nameWithType: DataListItemEventArgs
  fullName: System.Web.UI.WebControls.DataListItemEventArgs
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemDataBound(DataListItemEventArgs)
  nameWithType: DataList.OnItemDataBound(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemDataBound(DataListItemEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnUpdateCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnUpdateCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnUpdateCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: DataList.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DataList.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: DataList.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.DataList.RepeatColumns
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
  fullName: System.Web.UI.WebControls.DataList.RepeatColumns
- uid: System.Web.UI.WebControls.DataList.RepeatDirection
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
  fullName: System.Web.UI.WebControls.DataList.RepeatDirection
- uid: System.Web.UI.WebControls.RepeatDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatDirection
  nameWithType: RepeatDirection
  fullName: System.Web.UI.WebControls.RepeatDirection
- uid: System.Web.UI.WebControls.DataList.RepeatLayout
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
  fullName: System.Web.UI.WebControls.DataList.RepeatLayout
- uid: System.Web.UI.WebControls.RepeatLayout
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatLayout
  nameWithType: RepeatLayout
  fullName: System.Web.UI.WebControls.RepeatLayout
- uid: System.Web.UI.WebControls.DataList.SaveViewState
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SaveViewState()
  nameWithType: DataList.SaveViewState()
  fullName: System.Web.UI.WebControls.DataList.SaveViewState()
- uid: System.Web.UI.WebControls.DataList.SelectCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectCommandName
  nameWithType: DataList.SelectCommandName
  fullName: System.Web.UI.WebControls.DataList.SelectCommandName
- uid: System.Web.UI.WebControls.DataList.SelectedIndex
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
  fullName: System.Web.UI.WebControls.DataList.SelectedIndex
- uid: System.Web.UI.WebControls.DataList.SelectedItem
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItem
  nameWithType: DataList.SelectedItem
  fullName: System.Web.UI.WebControls.DataList.SelectedItem
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
  fullName: System.Web.UI.WebControls.DataList.SelectedItemStyle
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
  fullName: System.Web.UI.WebControls.DataList.SelectedItemTemplate
- uid: System.Web.UI.WebControls.DataList.SelectedValue
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedValue
  nameWithType: DataList.SelectedValue
  fullName: System.Web.UI.WebControls.DataList.SelectedValue
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
  fullName: System.Web.UI.WebControls.DataList.SeparatorStyle
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
  fullName: System.Web.UI.WebControls.DataList.SeparatorTemplate
- uid: System.Web.UI.WebControls.DataList.ShowFooter
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowFooter
  nameWithType: DataList.ShowFooter
  fullName: System.Web.UI.WebControls.DataList.ShowFooter
- uid: System.Web.UI.WebControls.DataList.ShowHeader
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowHeader
  nameWithType: DataList.ShowHeader
  fullName: System.Web.UI.WebControls.DataList.ShowHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
- uid: System.Web.UI.WebControls.RepeatInfo
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatInfo
  nameWithType: RepeatInfo
  fullName: System.Web.UI.WebControls.RepeatInfo
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
- uid: System.Web.UI.WebControls.DataList.TagKey
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TagKey
  nameWithType: DataList.TagKey
  fullName: System.Web.UI.WebControls.DataList.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.DataList.TrackViewState
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TrackViewState()
  nameWithType: DataList.TrackViewState()
  fullName: System.Web.UI.WebControls.DataList.TrackViewState()
- uid: System.Web.UI.WebControls.DataList.UpdateCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: UpdateCommand
  nameWithType: DataList.UpdateCommand
  fullName: System.Web.UI.WebControls.DataList.UpdateCommand
- uid: System.Web.UI.WebControls.DataList.UpdateCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: UpdateCommandName
  nameWithType: DataList.UpdateCommandName
  fullName: System.Web.UI.WebControls.DataList.UpdateCommandName
- uid: System.Web.UI.WebControls.DataList.#ctor*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DataList
  nameWithType: DataList.DataList
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlHierarchy
  nameWithType: DataList.CreateControlHierarchy
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlStyle
  nameWithType: DataList.CreateControlStyle
- uid: System.Web.UI.WebControls.DataList.CreateItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateItem
  nameWithType: DataList.CreateItem
- uid: System.Web.UI.WebControls.DataList.EditItemIndex*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
- uid: System.Web.UI.WebControls.DataList.EditItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
- uid: System.Web.UI.WebControls.DataList.FooterStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterStyle
  nameWithType: DataList.FooterStyle
- uid: System.Web.UI.WebControls.DataList.FooterTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
- uid: System.Web.UI.WebControls.DataList.GridLines*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: GridLines
  nameWithType: DataList.GridLines
- uid: System.Web.UI.WebControls.DataList.HeaderStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
- uid: System.Web.UI.WebControls.DataList.InitializeItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: InitializeItem
  nameWithType: DataList.InitializeItem
- uid: System.Web.UI.WebControls.DataList.Items*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: Items
  nameWithType: DataList.Items
- uid: System.Web.UI.WebControls.DataList.ItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemStyle
  nameWithType: DataList.ItemStyle
- uid: System.Web.UI.WebControls.DataList.ItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
- uid: System.Web.UI.WebControls.DataList.LoadViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: LoadViewState
  nameWithType: DataList.LoadViewState
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnBubbleEvent
  nameWithType: DataList.OnBubbleEvent
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnCancelCommand
  nameWithType: DataList.OnCancelCommand
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnDeleteCommand
  nameWithType: DataList.OnDeleteCommand
- uid: System.Web.UI.WebControls.DataList.OnEditCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnEditCommand
  nameWithType: DataList.OnEditCommand
- uid: System.Web.UI.WebControls.DataList.OnInit*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnInit
  nameWithType: DataList.OnInit
- uid: System.Web.UI.WebControls.DataList.OnItemCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCommand
  nameWithType: DataList.OnItemCommand
- uid: System.Web.UI.WebControls.DataList.OnItemCreated*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCreated
  nameWithType: DataList.OnItemCreated
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemDataBound
  nameWithType: DataList.OnItemDataBound
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnUpdateCommand
  nameWithType: DataList.OnUpdateCommand
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: DataList.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.DataList.RenderContents*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RenderContents
  nameWithType: DataList.RenderContents
- uid: System.Web.UI.WebControls.DataList.RepeatColumns*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
- uid: System.Web.UI.WebControls.DataList.RepeatDirection*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
- uid: System.Web.UI.WebControls.DataList.RepeatLayout*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
- uid: System.Web.UI.WebControls.DataList.SaveViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SaveViewState
  nameWithType: DataList.SaveViewState
- uid: System.Web.UI.WebControls.DataList.SelectedIndex*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
- uid: System.Web.UI.WebControls.DataList.SelectedItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItem
  nameWithType: DataList.SelectedItem
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
- uid: System.Web.UI.WebControls.DataList.SelectedValue*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedValue
  nameWithType: DataList.SelectedValue
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
- uid: System.Web.UI.WebControls.DataList.ShowFooter*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowFooter
  nameWithType: DataList.ShowFooter
- uid: System.Web.UI.WebControls.DataList.ShowHeader*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowHeader
  nameWithType: DataList.ShowHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
- uid: System.Web.UI.WebControls.DataList.TagKey*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TagKey
  nameWithType: DataList.TagKey
- uid: System.Web.UI.WebControls.DataList.TrackViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TrackViewState
  nameWithType: DataList.TrackViewState
