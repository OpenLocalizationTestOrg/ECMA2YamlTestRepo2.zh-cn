### YamlMime:ManagedReference
items:
- uid: System.Drawing.Icon
  id: Icon
  children:
  - System.Drawing.Icon.#ctor(System.IO.Stream)
  - System.Drawing.Icon.#ctor(System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.Type,System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  - System.Drawing.Icon.Clone
  - System.Drawing.Icon.Dispose
  - System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  - System.Drawing.Icon.Finalize
  - System.Drawing.Icon.FromHandle(System.IntPtr)
  - System.Drawing.Icon.Handle
  - System.Drawing.Icon.Height
  - System.Drawing.Icon.Save(System.IO.Stream)
  - System.Drawing.Icon.Size
  - System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Icon.ToBitmap
  - System.Drawing.Icon.ToString
  - System.Drawing.Icon.Width
  langs:
  - csharp
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
  type: Class
  summary: "表示 Windows 图标，这是用于表示对象的小位图图像。 可以将图标看作透明的位图，尽管其大小由系统。"
  remarks: "您可以构造从文件、 流或嵌入的资源的图标对象。 构造函数的列表，请参阅<xref:System.Drawing.Icon.%23ctor%2A>。</xref:System.Drawing.Icon.%23ctor%2A> 你还可以将图标通过转换位图<xref:System.Drawing.Icon.ToBitmap%2A>方法。</xref:System.Drawing.Icon.ToBitmap%2A>       一个图标资源可以包含多个图标图像。 一个图标文件可能包含多个大小和颜色深度的图像。 应用程序中使用的映像取决于操作系统和设置。 以下列表详细说明了一个图标的典型大小:-16 个像素 x 16-32 像素 x 32 像素-48 像素 x 48 像素"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/t-system.drawing.icon_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/t-system.drawing.icon_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/t-system.drawing.icon_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.IconEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.IconConverter))]

      public sealed class Icon : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>类从指定的数据流。"
  remarks: "一个图标资源可以包含多个图标图像。 一个图标文件可能包含多个大小和颜色深度的图像。 应用程序中使用的映像取决于操作系统和设置。 以下列表详细说明了一个图标的典型大小:-16 个像素 x 16-32 像素 x 32 像素-48 像素 x 48 像素此构造函数将返回包含在指定的流的最小图像。"
  syntax:
    content: public Icon (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "要从其中加载数据流<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>类从指定的文件名。"
  remarks: "一个图标资源可以包含多个图标图像。 一个图标文件可能包含多个大小和颜色深度的图像。 应用程序中使用的映像取决于操作系统和设置。 以下列表详细说明了一个图标的典型大小:-16 个像素 x 16-32 像素 x 32 像素-48 像素 x 48 像素此构造函数将返回指定文件中包含的最小图像。"
  syntax:
    content: public Icon (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "要加载的文件<xref href=&quot;System.Drawing.Icon&quot;></xref>从。"
  overload: System.Drawing.Icon.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  id: '#ctor(System.Drawing.Icon,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>类并尝试查找与所请求的大小匹配的图标的版本。"
  remarks: "如果与大小完全匹配，找不到版本，则使用最接近的匹配。 如果`original`参数是<xref:System.Drawing.Icon>具有一个大小，则此方法仅创建一个重复的图标。</xref:System.Drawing.Icon> 使用的拉伸功能<xref:System.Drawing.Graphics.DrawImage%2A>方法调整图标的大小。</xref:System.Drawing.Graphics.DrawImage%2A>"
  syntax:
    content: public Icon (System.Drawing.Icon original, System.Drawing.Size size);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref>要从其中加载新调整大小的图标。"
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>结构，它指定高度和宽度的新<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  id: '#ctor(System.IO.Stream,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>类从指定的流的指定大小。"
  syntax:
    content: public Icon (System.IO.Stream stream, System.Drawing.Size size);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "包含图标数据的流。"
    - id: size
      type: System.Drawing.Size
      description: "所需的图标大小。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> stream </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或不包含映像数据。"
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  id: '#ctor(System.String,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>类从指定的文件的指定大小。"
  remarks: "如果指定的文件不包含匹配所需的大小的图像，则返回具有最接近的大小的图标。       `fileName`应包含的完整路径，如果它不在当前的应用程序目录。"
  syntax:
    content: public Icon (string fileName, System.Drawing.Size size);
    parameters:
    - id: fileName
      type: System.String
      description: "名称和包含图标数据的文件路径。"
    - id: size
      type: System.Drawing.Size
      description: "所需的图标大小。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> string </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或不包含映像数据。"
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>从中指定的程序集的资源的类。"
  remarks: "此构造函数创建<xref:System.Drawing.Icon>从具有指定的名称的资源`resource`中包含由指定的类型的程序集参数`type`参数。</xref:System.Drawing.Icon>       此构造函数组合以及字符串名称的资源的给定类型的命名空间，并查找程序集清单中的匹配项。 例如中传递<xref:System.Windows.Forms.Control>类型和`Error.ico`到此构造函数，它将查找的资源的名为`System.Windows.Forms.Error.ico`。</xref:System.Windows.Forms.Control>"
  example:
  - "The following code example demonstrates how to use the Icon constructor. To run this example, paste the code into a Windows Form and handle the form's <xref:System.Windows.Forms.Control.Paint> event. Call the `ConstructAnIconFromAType` method from the <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.EventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#3](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_0_1.vb)]\n [!code-cs[System.Drawing.Misc3#3](~/add/codesnippet/csharp/m-system.drawing.icon.sh_0_1.cs)]"
  syntax:
    content: public Icon (Type type, string resource);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>，它指定要在其中查找资源的程序集。</xref:System.Type>"
    - id: resource
      type: System.String
      description: "要加载的资源名称。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的一个图标<code> resource </code>不能包含指定的程序集中找到<code> type </code>。"
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Icon,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>类并尝试查找与所请求的大小匹配的图标的版本。"
  remarks: "如果与大小完全匹配，找不到版本，则使用最接近的匹配。 如果`original`参数是<xref:System.Drawing.Icon>具有一个大小，则此方法仅创建一个重复的图标。</xref:System.Drawing.Icon> 使用的拉伸功能<xref:System.Drawing.Graphics.DrawImage%2A>方法调整图标的大小。</xref:System.Drawing.Graphics.DrawImage%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.sh_1_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.sh_1_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_1_1.vb)]"
  syntax:
    content: public Icon (System.Drawing.Icon original, int width, int height);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "要从其中加载不同大小的图标。"
    - id: width
      type: System.Int32
      description: "新图标的宽度。"
    - id: height
      type: System.Int32
      description: "新图标的高度。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>类从指定的数据流，并使用指定的宽度和高度。"
  syntax:
    content: public Icon (System.IO.Stream stream, int width, int height);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "要从其中加载图标的数据流。"
    - id: width
      type: System.Int32
      description: "以像素为单位，图标的宽度。"
    - id: height
      type: System.Int32
      description: "以像素为单位，图标的高度。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Icon&quot;></xref>类的指定的宽度和高度从指定的文件。"
  remarks: "如果指定的文件不包含匹配的所需的高度和宽度的图像，则返回具有最接近的大小的图标。       `fileName`应包含的完整路径，如果它不在当前的应用程序目录。"
  syntax:
    content: public Icon (string fileName, int width, int height);
    parameters:
    - id: fileName
      type: System.String
      description: "名称和包含的文件路径<xref href=&quot;System.Drawing.Icon&quot;></xref>数据。"
    - id: width
      type: System.Int32
      description: "所需的宽度<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
    - id: height
      type: System.Int32
      description: "所需的高度<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> string </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或不包含映像数据。"
  platform:
  - net462
- uid: System.Drawing.Icon.Clone
  id: Clone
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "克隆<xref href=&quot;System.Drawing.Icon&quot;> </xref>，创建重复图像。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "一个对象，可以强制转换为<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Dispose
  id: Dispose
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "释放所有资源由此<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  remarks: "调用`Dispose`允许使用的资源<xref:System.Drawing.Icon>可以重新分配用于其他目的。</xref:System.Drawing.Icon>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Icon.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  id: ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返回指定文件中包含的图像的图标表示。"
  remarks: "假定的相对路径是相对于当前工作目录。       ExtractAssociatedIcon 使用位图，则如果运行应用程序的系统具有导致位图文件显示为缩略图图像的注册表设置，而不是一个图标可能返回缩略图。"
  example:
  - "The following code example demonstrates how to use the ExtractAssociatedIcon method. To run this example, paste the code into a Windows Form and call `ExtractAssociatedIconEx` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.  \n  \n [!code-vb[System.Drawing.Misc3#2](~/add/codesnippet/visualbasic/m-system.drawing.icon.ex_1.vb)]\n [!code-cs[System.Drawing.Misc3#2](~/add/codesnippet/csharp/m-system.drawing.icon.ex_1.cs)]"
  syntax:
    content: public static System.Drawing.Icon ExtractAssociatedIcon (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "包含图像文件的路径。"
    return:
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref>表示形式包含在指定的文件的映像。"
  overload: System.Drawing.Icon.ExtractAssociatedIcon*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> filePath </code>并不表示有效的文件。       -或- <code> filePath </code>指示通用命名约定 (UNC) 路径。"
  platform:
  - net462
- uid: System.Drawing.Icon.Finalize
  id: Finalize
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "允许该对象尝试释放资源并在被垃圾回收回收之前执行其他清理操作。"
  syntax:
    content: ~Icon ();
    parameters: []
  overload: System.Drawing.Icon.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建一个 GDI + <xref href=&quot;System.Drawing.Icon&quot;> </xref>从图标的指定 Windows 句柄 (<xref uid=&quot;langword_csharp_HICON&quot; name=&quot;HICON&quot; href=&quot;&quot;></xref>)。"
  remarks: "使用此方法时，您必须通过使用释放的原始图标`DestroyIcon`Win32 API，以确保释放资源中的方法。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Draws that object to the screen.  \n  \n-   Gets an icon handle for the <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=fullName> attribute of the form to an icon created from the handle.  \n  \n-   Calls the Win32 API function `DestroyIcon` to release resources.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/cpp/m-system.drawing.icon.fr_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/csharp/m-system.drawing.icon.fr_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.icon.fr_1.vb)]"
  syntax:
    content: public static System.Drawing.Icon FromHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "图标 Windows 句柄。"
    return:
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref>此方法创建。"
  overload: System.Drawing.Icon.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Handle
  id: Handle
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取此 Windows 句柄<xref href=&quot;System.Drawing.Icon&quot;> </xref>。 这不是一份句柄;不要释放它。"
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle using the <xref:System.Drawing.GraphicsUnit> enumeration and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/p-system.drawing.icon.ha_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/p-system.drawing.icon.ha_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/p-system.drawing.icon.ha_1.cpp)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "图标的 Windows 句柄。"
  overload: System.Drawing.Icon.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Height
  id: Height
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取此高度<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "此高度<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "这将保存<xref href=&quot;System.Drawing.Icon&quot;></xref>到指定的输出<xref:System.IO.Stream>.</xref:System.IO.Stream>"
  syntax:
    content: public void Save (System.IO.Stream outputStream);
    parameters:
    - id: outputStream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>将保存到。</xref:System.IO.Stream>"
  overload: System.Drawing.Icon.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Size
  id: Size
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取此大小<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>结构，它指定的宽度和高度这<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填充<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>序列化目标对象所需的数据。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>要填充数据。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "目标 (请参阅<xref:System.Runtime.Serialization.StreamingContext>) 此序列化。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToBitmap
  id: ToBitmap
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "将此转换<xref href=&quot;System.Drawing.Icon&quot;> </xref> GDI + <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>。"
  remarks: "当转换为位图，并且生成的位图的透明颜色设置为透明区域的图标都将丢失`RGB(13,11,12)`。 返回的位图将具有与原始图标相同的高度和宽度。      1> [!NOTE] 1> 开头的 framework 版本 4.6 支持已添加的.ico 文件中的 PNG 帧。 面向早期版本的 framework 但在 4.6 bits 上运行的应用程序可以选择加入新的行为将添加以下行将对`<runtime>`app.config 文件的部分︰`<AppContextSwitchOverrides value=&quot;Switch.System.Drawing.DontSupportPngFramesInIcons=false&quot; />`"
  example:
  - "The following code example demonstrates how to use the ToBitmap method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's .<xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.to_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.to_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.to_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap ToBitmap ();
    parameters: []
    return:
      type: System.Drawing.Bitmap
      description: "A <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> ，它表示转换后<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.ToBitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToString
  id: ToString
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取描述的用户可读字符串<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个字符串，描述<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Width
  id: Width
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取此宽度<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "此宽度<xref href=&quot;System.Drawing.Icon&quot;> </xref>。"
  overload: System.Drawing.Icon.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Icon.#ctor(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
- uid: System.Drawing.Icon.Clone
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Icon.Dispose
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
- uid: System.Drawing.Icon.Finalize
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Icon.Handle
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
- uid: System.Drawing.Icon.Height
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
- uid: System.Drawing.Icon.Size
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Icon.ToBitmap
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Drawing.Icon.ToString
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
- uid: System.Drawing.Icon.Width
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
- uid: System.Drawing.Icon.#ctor*
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon
  nameWithType: Icon.Icon
- uid: System.Drawing.Icon.Clone*
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone
  nameWithType: Icon.Clone
- uid: System.Drawing.Icon.Dispose*
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose
  nameWithType: Icon.Dispose
- uid: System.Drawing.Icon.ExtractAssociatedIcon*
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon
  nameWithType: Icon.ExtractAssociatedIcon
- uid: System.Drawing.Icon.Finalize*
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize
  nameWithType: Icon.Finalize
- uid: System.Drawing.Icon.FromHandle*
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle
  nameWithType: Icon.FromHandle
- uid: System.Drawing.Icon.Handle*
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
- uid: System.Drawing.Icon.Height*
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
- uid: System.Drawing.Icon.Save*
  parent: System.Drawing.Icon
  isExternal: false
  name: Save
  nameWithType: Icon.Save
- uid: System.Drawing.Icon.Size*
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Icon.ToBitmap*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap
  nameWithType: Icon.ToBitmap
- uid: System.Drawing.Icon.ToString*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString
  nameWithType: Icon.ToString
- uid: System.Drawing.Icon.Width*
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
