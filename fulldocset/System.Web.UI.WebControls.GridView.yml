### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.GridView
  id: GridView
  children:
  - System.Web.UI.WebControls.GridView.#ctor
  - System.Web.UI.WebControls.GridView.AllowCustomPaging
  - System.Web.UI.WebControls.GridView.AllowPaging
  - System.Web.UI.WebControls.GridView.AllowSorting
  - System.Web.UI.WebControls.GridView.AlternatingRowStyle
  - System.Web.UI.WebControls.GridView.AutoGenerateColumns
  - System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  - System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  - System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  - System.Web.UI.WebControls.GridView.BackImageUrl
  - System.Web.UI.WebControls.GridView.BottomPagerRow
  - System.Web.UI.WebControls.GridView.Caption
  - System.Web.UI.WebControls.GridView.CaptionAlign
  - System.Web.UI.WebControls.GridView.CellPadding
  - System.Web.UI.WebControls.GridView.CellSpacing
  - System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  - System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  - System.Web.UI.WebControls.GridView.Columns
  - System.Web.UI.WebControls.GridView.ColumnsGenerator
  - System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  - System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.GridView.CreateChildTable
  - System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  - System.Web.UI.WebControls.GridView.CreateControlStyle
  - System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.GridView.DataBind
  - System.Web.UI.WebControls.GridView.DataKeyNames
  - System.Web.UI.WebControls.GridView.DataKeys
  - System.Web.UI.WebControls.GridView.DeleteMethod
  - System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  - System.Web.UI.WebControls.GridView.EditIndex
  - System.Web.UI.WebControls.GridView.EditRowStyle
  - System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  - System.Web.UI.WebControls.GridView.EmptyDataTemplate
  - System.Web.UI.WebControls.GridView.EmptyDataText
  - System.Web.UI.WebControls.GridView.EnableModelValidation
  - System.Web.UI.WebControls.GridView.EnablePersistedSelection
  - System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  - System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  - System.Web.UI.WebControls.GridView.FooterRow
  - System.Web.UI.WebControls.GridView.FooterStyle
  - System.Web.UI.WebControls.GridView.GetCallbackResult
  - System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.GridView.GridLines
  - System.Web.UI.WebControls.GridView.HeaderRow
  - System.Web.UI.WebControls.GridView.HeaderStyle
  - System.Web.UI.WebControls.GridView.HorizontalAlign
  - System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  - System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  - System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  - System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  - System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  - System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  - System.Web.UI.WebControls.GridView.PageCount
  - System.Web.UI.WebControls.GridView.PageIndex
  - System.Web.UI.WebControls.GridView.PageIndexChanged
  - System.Web.UI.WebControls.GridView.PageIndexChanging
  - System.Web.UI.WebControls.GridView.PagerSettings
  - System.Web.UI.WebControls.GridView.PagerStyle
  - System.Web.UI.WebControls.GridView.PagerTemplate
  - System.Web.UI.WebControls.GridView.PageSize
  - System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  - System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.GridView.RowCancelingEdit
  - System.Web.UI.WebControls.GridView.RowCommand
  - System.Web.UI.WebControls.GridView.RowCreated
  - System.Web.UI.WebControls.GridView.RowDataBound
  - System.Web.UI.WebControls.GridView.RowDeleted
  - System.Web.UI.WebControls.GridView.RowDeleting
  - System.Web.UI.WebControls.GridView.RowEditing
  - System.Web.UI.WebControls.GridView.RowHeaderColumn
  - System.Web.UI.WebControls.GridView.Rows
  - System.Web.UI.WebControls.GridView.RowStyle
  - System.Web.UI.WebControls.GridView.RowUpdated
  - System.Web.UI.WebControls.GridView.RowUpdating
  - System.Web.UI.WebControls.GridView.SaveControlState
  - System.Web.UI.WebControls.GridView.SaveViewState
  - System.Web.UI.WebControls.GridView.SelectedDataKey
  - System.Web.UI.WebControls.GridView.SelectedIndex
  - System.Web.UI.WebControls.GridView.SelectedIndexChanged
  - System.Web.UI.WebControls.GridView.SelectedIndexChanging
  - System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  - System.Web.UI.WebControls.GridView.SelectedRow
  - System.Web.UI.WebControls.GridView.SelectedRowStyle
  - System.Web.UI.WebControls.GridView.SelectedValue
  - System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  - System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  - System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.GridView.ShowFooter
  - System.Web.UI.WebControls.GridView.ShowHeader
  - System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  - System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  - System.Web.UI.WebControls.GridView.SortDirection
  - System.Web.UI.WebControls.GridView.Sorted
  - System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  - System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  - System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  - System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  - System.Web.UI.WebControls.GridView.SortExpression
  - System.Web.UI.WebControls.GridView.Sorting
  - System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  - System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.GridView.TagKey
  - System.Web.UI.WebControls.GridView.TopPagerRow
  - System.Web.UI.WebControls.GridView.TrackViewState
  - System.Web.UI.WebControls.GridView.UpdateMethod
  - System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  - System.Web.UI.WebControls.GridView.UseAccessibleHeader
  - System.Web.UI.WebControls.GridView.VirtualItemCount
  langs:
  - csharp
  name: GridView
  nameWithType: GridView
  fullName: System.Web.UI.WebControls.GridView
  type: Class
  summary: "在一个表，其中每个列表示的字段，每一行代表一条记录中显示的数据源的值。 GridView 控制，你可以选择、 排序和编辑这些项。"
  remarks: "本主题中:-[简介](#introduction)      -   [列字段](#column_fields)      -   [绑定到数据](#binding_to_data)      -   [数据操作](#data_operations)      -   [自定义用户界面](#customizing_the_user_interface)      -   [事件](#events)      -   [可访问性](#accessibility)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介 GridView 控件用于显示在一个表的数据源的值。       每个列表示字段，而每一行代表一条记录。 GridView 控件支持以下功能:-绑定到数据源控件，如<xref:System.Web.UI.WebControls.SqlDataSource>.</xref:System.Web.UI.WebControls.SqlDataSource>      的内置排序功能。      的内置更新和删除功能。      -内置分页功能。      -内置行选择功能。      -以编程方式访问 GridView 对象模型，以便动态设置属性，处理事件，等等。      -多个键字段。      的超链接列多个数据字段。      通过主题和样式的自定义外观。      -若要了解有关 ASP.NET 中提供的其他数据绑定控件，请参阅[数据绑定 Web 服务器控件](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE] 1> 如果你熟悉<xref:System.Web.UI.WebControls.DataGrid>从.NET Framework 版本 1.0，控件的本质的后继 GridView 控件<xref:System.Web.UI.WebControls.DataGrid>控件。</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid>      <a name=&quot;column_fields&quot;></a># # 列字段的 GridView 控件由每一列<xref:System.Web.UI.WebControls.DataControlField>对象。</xref:System.Web.UI.WebControls.DataControlField> 默认情况下，<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`true`，这将创建<xref:System.Web.UI.WebControls.AutoGeneratedField>为数据源中的每个字段的对象。</xref:System.Web.UI.WebControls.AutoGeneratedField> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 每个字段然后呈现为在每个字段在数据源中显示的顺序的 GridView 控件中的列。       你也可以手动控制字段通过设置 GridView 控件中显示哪些列<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性`false`，然后定义你自己的列字段集合。</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 不同的列字段类型确定在控件中的列的行为。 下表列出可用的不同列字段类型。      |列字段类型 |说明 |  |-----------------------|-----------------|  |<xref:System.Web.UI.WebControls.BoundField>|数据源中显示的字段的值。</xref:System.Web.UI.WebControls.BoundField> 这是 GridView 控件的默认列类型。 |  |<xref:System.Web.UI.WebControls.ButtonField>|GridView 控件中显示的每个项的命令按钮。</xref:System.Web.UI.WebControls.ButtonField> 这使你可以创建自定义按钮控件，如添加或删除按钮的列。 |  |<xref:System.Web.UI.WebControls.CheckBoxField>|在 GridView 控件中显示每个项的复选框。</xref:System.Web.UI.WebControls.CheckBoxField> 此列字段类型通常用于显示具有一个布尔值的字段。 |  |<xref:System.Web.UI.WebControls.CommandField>|显示预定义的命令按钮来执行选择、 编辑或删除操作。 |  |<xref:System.Web.UI.WebControls.HyperLinkField>|显示为超链接数据源中的字段的值。</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 此列字段类型可让你将第二个字段绑定到超链接的 URL。 |  |<xref:System.Web.UI.WebControls.ImageField>|在 GridView 控件中显示的每个项图像。 |  |<xref:System.Web.UI.WebControls.TemplateField>|根据指定的模板 GridView 控件中显示用户定义的每个项的内容。</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ImageField> 此列字段类型可让你创建自定义列字段。 |      若要以声明方式定义列字段集合，应首先添加开始标记与结束`<Columns>`开始和结束标记的 GridView 控件之间的标记。 接下来，列出你想要包括到开始和结束之间的列字段`<Columns>`标记。 指定的列添加到<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合的顺序列出。</xref:System.Web.UI.WebControls.GridView.Columns%2A> <xref:System.Web.UI.WebControls.GridView.Columns%2A>集合存储所有列字段控件中，并使你能够以编程方式管理 GridView 控件中的列字段。</xref:System.Web.UI.WebControls.GridView.Columns%2A>       显式声明的列字段可以显示在与自动生成的列字段结合使用。 同时使用时，显式声明的列字段自动生成的列字段后跟第一次，呈现。      1> [!NOTE]&1;> 自动生成的列字段不会添加到<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A>      <a name=&quot;binding_to_data&quot;></a># # 绑定到数据 GridView 控件可以绑定到数据源控件 (如<xref:System.Web.UI.WebControls.SqlDataSource>控件或<xref:System.Web.UI.WebControls.ObjectDataSource>控件) 或任何数据源集合可实现<xref:System.Collections.IEnumerable?displayProperty=fullName>接口，如<xref:System.Data.DataView?displayProperty=fullName>， <xref:System.Collections.ArrayList?displayProperty=fullName>， <xref:System.Collections.Generic.List%601?displayProperty=fullName>，或其他集合类型。</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 使用以下方法之一来将 GridView 控件绑定到相应的数据源类型:-如果要将绑定到数据源控件，设置<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>到的 GridView 控件属性<xref:System.Web.UI.Control.ID%2A>数据源控件的值。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> GridView 控件自动绑定到指定的数据源控件，并可以利用数据源控件的功能，以执行排序、 更新、 删除和分页。 这是将绑定到数据的首选的方法。      -若要将绑定到数据源实现<xref:System.Collections.IEnumerable?displayProperty=fullName>接口，以编程方式设置<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性的 GridView 控件拖到数据源，然后调用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName> 使用此方法时，GridView 控件不提供内置的排序、 更新、 删除和分页功能。 你需要通过使用相应的事件来提供此功能。       有关数据绑定的详细信息，请参阅[ASP.NET 数据访问内容映射](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)。      1> [!NOTE]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 只要有可能，强烈建议确保值之前都是 HTML 编码中此控件所显示 (<xref:System.Web.UI.WebControls.BoundField>类进行 HTML 编码值，默认情况下)。</xref:System.Web.UI.WebControls.BoundField> ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 验证服务器控件还提供用于评估用户输入。 有关详细信息，请参阅[验证控件简介](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)。      <a name=&quot;data_operations&quot;></a># # 数据操作 GridView 控件提供许多内置功能，允许用户排序、 更新、 删除、 选择和分页控件中的项。 当 GridView 控件绑定到数据源控件时，GridView 控件可利用数据源控件的功能并提供自动排序、 更新和删除功能。      1> [!NOTE]&1;> GridView 控件可以提供对排序、 更新和删除与其他类型的数据源的支持。 但是，你将需要使用这些操作的实现提供相应的事件处理程序。       排序允许用户通过单击列标题的 GridView 控件某个特定列中的项进行排序。 若要启用排序，将设置<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>属性`true`。</xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>       中的按钮时启用自动更新、 删除和选择功能<xref:System.Web.UI.WebControls.ButtonField>或<xref:System.Web.UI.WebControls.TemplateField>列字段，命令名称为&quot;编辑&quot;、&quot;删除&quot;和&quot;Select&quot;，分别单击。</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ButtonField> 可以将自动添加 GridView 控件<xref:System.Web.UI.WebControls.CommandField>列字段具有编辑、 删除或选择按钮如果<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>， <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>，或<xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>属性设置为`true`分别。</xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> </xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> </xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> </xref:System.Web.UI.WebControls.CommandField>      1> [!NOTE]&1;> 将记录插入到数据源不直接支持 GridView 控件。 但是，很可能要结合使用 GridView 控件插入记录`DetailsView`或`FormView`控件。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.DetailsView>或<xref:System.Web.UI.WebControls.FormView>分别。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView>       而不是在同一时间，数据源中显示的所有记录，GridView 控件可以自动分解记录为页。 若要启用分页，设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>      1> [!NOTE]&1;> GridView 控件是在基于存储在<xref:System.Web.UI.PageStatePersister.ViewState%2A>。</xref:System.Web.UI.PageStatePersister.ViewState%2A>的信息的回发上重新创建 如果 GridView 控件包括<xref:System.Web.UI.WebControls.TemplateField>或<xref:System.Web.UI.WebControls.CommandField>与<xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A>属性设置为`true`，则<xref:System.Web.UI.Page.EnableViewState%2A>属性还必须设置为`true`若要确保并发数据操作，例如更新和删除，应用于适当的行。</xref:System.Web.UI.Page.EnableViewState%2A> </xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.TemplateField>      <a name=&quot;customizing_the_user_interface&quot;></a># # 自定义用户界面你可以自定义设置的不同部分的控件的样式属性的 GridView 控件的外观。 下表列出不同的样式属性。      |样式属性 |说明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|GridView 控件中的交替数据行的样式设置。</xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 当设置此属性时，交替<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>设置和<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>设置显示的数据行。 |  |<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|GridView 控件中正在编辑的行的样式设置。 |  |<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|如果数据源不包含任何记录 GridView 控件中显示的空数据行的样式设置。 |  |<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|GridView 控件的页脚行的样式设置。 |  |<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|GridView 控件的标题行的样式设置。 |  |<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|GridView 控件的页导航行的样式设置。 |  |<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|GridView 控件中的数据行的样式设置。</xref:System.Web.UI.WebControls.GridView.RowStyle%2A> </xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> </xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> </xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 将数据行时还设置<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>属性，<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>设置和<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>设置之间交替显示。 |  |<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|GridView 控件中所选行的样式设置。 |  |<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|样式设置，为 GridView 控件中按数据列数据。</xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A> </xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.RowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 如果设置了此样式，样式 （例如，突出显示的列） 时将应用到单元格数据按升序排序。 |  |<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|样式设置，为 GridView 控件中按数据列数据。</xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A> 如果设置了此样式，显示箭头以表明对数据进行升序排序所在的标头的 GridView 控件对数据排序以升序时。 |  |<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|样式设置，为 GridView 控件中按数据列数据。</xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A> 如果设置了此样式，样式 （例如，突出显示的列） 时将应用到单元格数据按降序排列。 |  |<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|样式设置，为 GridView 控件中按数据列数据。</xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A> 如果设置了此样式，箭头向下的标头的 GridView 数据按降序进行排序时。 |      你还可以显示或隐藏的控件的不同部分。 下表列出用于控制哪些部分是显示还是隐藏的属性。      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|显示或隐藏的 GridView 控件页脚部分。 |  |<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|显示或隐藏 GridView 控件的标头部分。 |     <a name=&quot;events&quot;> </a> # # 事件 GridView 控件提供可以编程的多个事件。</xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> 这使您可以运行的自定义的例程，每当发生的事件。 下表列出了支持的 GridView 控件的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|在单击某一页导航按钮时，但 GridView 控件处理的分页操作后发生。</xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 当你需要在用户定位到其他页面控件中之后执行的任务时，通常使用此事件。 |  |<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|单击某一页导航按钮时，但之前 GridView 控件处理的分页操作时发生。</xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 此事件通常用于取消的分页操作。 |  |<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|单击某一行的取消按钮时，但在 GridView 控件之前退出编辑模式时发生。</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 此事件通常用于停止取消操作。 |  |<xref:System.Web.UI.WebControls.GridView.RowCommand>|在 GridView 控件中单击一个按钮时发生。</xref:System.Web.UI.WebControls.GridView.RowCommand> 此事件通常用于在控件中单击一个按钮时执行的任务。 |  |<xref:System.Web.UI.WebControls.GridView.RowCreated>|中的 GridView 控件创建一个新行时出现。</xref:System.Web.UI.WebControls.GridView.RowCreated> 此事件通常用于修改行的内容创建行时。 |  |<xref:System.Web.UI.WebControls.GridView.RowDataBound>|当数据行绑定到 GridView 控件中的数据时发生。</xref:System.Web.UI.WebControls.GridView.RowDataBound> 此事件通常用于行绑定到数据时修改行的内容。 |  |<xref:System.Web.UI.WebControls.GridView.RowDeleted>|在某一行的删除按钮后，但 GridView 控件从数据源中删除记录后发生。</xref:System.Web.UI.WebControls.GridView.RowDeleted> 此事件通常用于检查删除操作的结果。 |  |<xref:System.Web.UI.WebControls.GridView.RowDeleting>|当行的删除按钮后，但之前 GridView 控件中删除记录从数据源时出现。</xref:System.Web.UI.WebControls.GridView.RowDeleting> 此事件通常用于取消删除操作。 |  |<xref:System.Web.UI.WebControls.GridView.RowEditing>|当行的编辑按钮后，但之前 GridView 控件进入编辑模式时发生。</xref:System.Web.UI.WebControls.GridView.RowEditing> 此事件通常用于取消编辑操作。 |  |<xref:System.Web.UI.WebControls.GridView.RowUpdated>|在单击某一行的更新按钮时，但对该行进行 GridView 控件更新后发生。</xref:System.Web.UI.WebControls.GridView.RowUpdated> 此事件通常用于检查更新操作的结果。 |  |<xref:System.Web.UI.WebControls.GridView.RowUpdating>|当行的更新按钮后，但之前 GridView 控件更新行时发生。</xref:System.Web.UI.WebControls.GridView.RowUpdating> 此事件通常用于取消更新操作。 |  |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|在单击某一行的选择按钮时，但 GridView 控件处理选择操作后发生。</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 此事件通常用于执行某项任务后在控件中选择行时。 |  |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|单击某一行的选择按钮时，但之前 GridView 控件处理选择操作时发生。</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 此事件通常用于取消了选择操作。 |  |<xref:System.Web.UI.WebControls.GridView.Sorted>|在单击超链接列进行排序后，但在 GridView 控件处理排序操作。</xref:System.Web.UI.WebControls.GridView.Sorted> 此事件通常用于在用户单击超链接以便对列进行排序之后执行的任务。 |  |<xref:System.Web.UI.WebControls.GridView.Sorting>|单击超链接列进行排序后，但之前 GridView 控件处理排序操作时发生。</xref:System.Web.UI.WebControls.GridView.Sorting> 此事件通常用于取消排序操作或执行自定义排序例程。 |     <a name=&quot;accessibility&quot;> </a> # # 有关如何配置此控件，以使其生成符合辅助功能标准的标记可访问性的信息，请参阅[Visual Studio 和 ASP.NET 中的辅助功能](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 控件和可访问性](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:GridView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       AllowSorting=&quot;True|False&quot;       AutoGenerateColumns=&quot;True|False&quot;       AutoGenerateDeleteButton=&quot;True|False&quot;       AutoGenerateEditButton=&quot;True|False&quot;       AutoGenerateSelectButton=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EditIndex=&quot;integer&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableSortingAndPagingCallbacks=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnRowCancelingEdit=&quot;RowCancelingEdit event handler&quot;       OnRowCommand=&quot;RowCommand event handler&quot;       OnRowCreated=&quot;RowCreated event handler&quot;       OnRowDataBound=&quot;RowDataBound event handler&quot;       OnRowDeleted=&quot;RowDeleted event handler&quot;       OnRowDeleting=&quot;RowDeleting event handler&quot;       OnRowEditing=&quot;RowEditing event handler&quot;       OnRowUpdated=&quot;RowUpdated event handler&quot;       OnRowUpdating=&quot;RowUpdating event handler&quot;       OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;       OnSelectedIndexChanging=&quot;SelectedIndexChanging event handler&quot;       OnSorted=&quot;Sorted event handler&quot;       OnSorting=&quot;Sorting event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       PageSize=&quot;integer&quot;       RowHeaderColumn=&quot;string&quot;       runat=&quot;server&quot;       SelectedIndex=&quot;integer&quot;       ShowFooter=&quot;True|False&quot;       ShowHeader=&quot;True|False&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       UseAccessibleHeader=&quot;True|False&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingRowStyle />           <Columns>                   <asp:BoundField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundField>                   <asp:ButtonField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CausesValidation=&quot;True|False&quot;                       CommandName=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonField>                   <asp:CheckBoxField                       AccessibleHeaderText=&quot;string&quot;                       DataField=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CheckBoxField>                   <asp:CommandField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CancelImageUrl=&quot;uri&quot;                       CancelText=&quot;string&quot;                       CausesValidation=&quot;True|False&quot;                       DeleteImageUrl=&quot;uri&quot;                       DeleteText=&quot;string&quot;                       EditImageUrl=&quot;uri&quot;                       EditText=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertImageUrl=&quot;uri&quot;                       InsertText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NewImageUrl=&quot;uri&quot;                       NewText=&quot;string&quot;                       SelectImageUrl=&quot;uri&quot;                       SelectText=&quot;string&quot;                       ShowCancelButton=&quot;True|False&quot;                       ShowDeleteButton=&quot;True|False&quot;                       ShowEditButton=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       ShowInsertButton=&quot;True|False&quot;                       ShowSelectButton=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       UpdateImageUrl=&quot;uri&quot;                       UpdateText=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CommandField>                   <asp:DynamicField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ShowHeader=&quot;True|False&quot;                       UIHint=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:DynamicField>                   <asp:HyperLinkField                       AccessibleHeaderText=&quot;string&quot;                       DataNavigateUrlFields=&quot;string&quot;                       DataNavigateUrlFormatString=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NavigateUrl=&quot;uri&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkField>                   <asp:ImageField                       AccessibleHeaderText=&quot;string&quot;                       AlternateText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataAlternateTextField=&quot;string&quot;                       DataAlternateTextFormatString=&quot;string&quot;                       DataImageUrlField=&quot;string&quot;                       DataImageUrlFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       NullImageUrl=&quot;uri&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ImageField>                   <asp:TemplateField                       AccessibleHeaderText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                               <ControlStyle />                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <AlternatingItemTemplate>                               <!-- child controls -->                           </AlternatingItemTemplate>                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <InsertItemTemplate>                               <!-- child controls -->                           </InsertItemTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateField>           </Columns>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <HeaderStyle />           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />           <SelectedRowStyle />   </asp:GridView>   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how use the GridView control to display the values from the Customers table of the AdventureWorksLT sample database in Microsoft SQL Server. The values are retrieved using a <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-vb[GridViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_194_1.aspx)]\n [!code-cs[GridViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_194_1.aspx)]  \n  \n The following example demonstrates how to use the GridView control and a <xref:System.Web.UI.WebControls.LinqDataSource> control so that you can edit records.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_194_2.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_194_2.aspx)]  \n  \n For an example demonstrating how to access values in cells, see <xref:System.Web.UI.WebControls.GridViewRow>."
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("SelectedIndexChanged")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")]

      [System.Web.UI.SupportsEventValidation]

      public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IDataKeysControl
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.ICallbackContainer
  - System.Web.UI.WebControls.IDataBoundListControl
  - System.Web.UI.WebControls.IFieldControl
  - System.Web.UI.WebControls.IPersistedSelector
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.InsertMethod
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GridView()
  nameWithType: GridView.GridView()
  fullName: System.Web.UI.WebControls.GridView.GridView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>类。"
  remarks: "使用此构造函数初始化<xref:System.Web.UI.WebControls.GridView>类</xref:System.Web.UI.WebControls.GridView>的新实例 若要动态添加<xref:System.Web.UI.WebControls.GridView>控件到页中，创建新的<xref:System.Web.UI.WebControls.GridView>对象、 设置其属性，并将其添加到<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>集合的容器控件，如<xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.GridView> control to a page.  \n  \n [!code-cs[GridViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_33_1.aspx)]\n [!code-vb[GridViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_33_1.aspx)]"
  syntax:
    content: public GridView ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
  fullName: System.Web.UI.WebControls.GridView.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否启用自定义分页。"
  remarks: "分页，你可以显示的内容<xref:System.Web.UI.WebControls.GridView>小区块中的控件。</xref:System.Web.UI.WebControls.GridView> 在页面上的项的数目由<xref:System.Web.UI.WebControls.GridView.PageSize%2A>属性。</xref:System.Web.UI.WebControls.GridView.PageSize%2A> 通常情况下，每次读取数据源中的每一行<xref:System.Web.UI.WebControls.GridView>控件移至其他页。</xref:System.Web.UI.WebControls.GridView> 非常大的数据源中的项的总数时，这可能会耗费大量资源。 自定义分页，可以读取只需要为数据源的单页项目。       若要启用自定义分页，可以同时设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>和 AllowCustomPaging 属性添加到`true`。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 中的处理程序<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>事件中，设置<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性设置为新的页索引值，设<xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>属性设置为数据源中的项的总数目设要返回仅为当前页，并调用所需的行的数据源<xref:System.Web.UI.WebControls.GridView.DataBind%2A>方法。</xref:System.Web.UI.WebControls.GridView.DataBind%2A> </xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> </xref:System.Web.UI.WebControls.GridView.PageIndex%2A> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>属性使该控件可以确定页的总数; 此值通常由读取的所有项自动确定。</xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>"
  syntax:
    content: public virtual bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了自定义分页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: GridView.AllowPaging
  fullName: System.Web.UI.WebControls.GridView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否启用分页功能。"
  remarks: "而不是在同一时间，数据源中显示的所有记录<xref:System.Web.UI.WebControls.GridView>控件可以自动分解记录为页。</xref:System.Web.UI.WebControls.GridView> 如果数据源支持分页功能，<xref:System.Web.UI.WebControls.GridView>控件可以充分利用，并提供内置的分页功能。</xref:System.Web.UI.WebControls.GridView> 可与任何支持的数据源对象使用分页功能<xref:System.Collections.ICollection?displayProperty=fullName>接口或支持分页功能的数据源。</xref:System.Collections.ICollection?displayProperty=fullName>       若要启用分页功能，请将 AllowPaging 属性设置为`true`。 默认情况下，<xref:System.Web.UI.WebControls.GridView>控件在上一次显示 10 个记录。</xref:System.Web.UI.WebControls.GridView> 你可以更改通过设置页上显示的记录数<xref:System.Web.UI.WebControls.GridView.PageSize%2A>属性。</xref:System.Web.UI.WebControls.GridView.PageSize%2A> 若要确定显示数据源内容所需的页的总数，请使用<xref:System.Web.UI.WebControls.GridView.PageCount%2A>属性。</xref:System.Web.UI.WebControls.GridView.PageCount%2A> 你可以使用来确定的当前显示页的索引<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性。</xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       启用分页后，调用的页导航行的其他行自动显示在<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 页导航行包含允许用户导航至其他页面的控件。 你可以通过使用来控制的设置 （如页导航显示模式，在时间和页导航控件的文本标签显示的页链接数） 的页导航行<xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>属性。</xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> 页导航行可以通过设置显示在顶部、 底部，或同时的顶部和底部的控件<xref:System.Web.UI.WebControls.PagerSettings.Position%2A>属性。</xref:System.Web.UI.WebControls.PagerSettings.Position%2A> 此外可以通过设置选择从一个四个内置页导航显示模式<xref:System.Web.UI.WebControls.PagerSettings.Mode%2A>属性。</xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> 下表描述了内置的显示模式。      |模式 |说明 |  |----------|-----------------|  |`PagerButton.NextPrevious`|一组分页控件包含以前和下一步按钮。 |  |`PagerButton.NextPreviousFirstLast`|一组的分页控件组成以前，接下来，第一个和最后一个按钮。 |  |`PagerButton.Numeric`|一组组成的分页控件直接带编号访问页的链接按钮。 这是默认模式。 |  |`PagerButton.NumericFirstLast`|一组编号和第一个和最后一个链接按钮组成的分页控件。 |      若要控制 （包括其背景色、 字体颜色和位置） 的页导航行的外观，使用<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.GridView>时数据源仅包含一页的记录后，控件将自动隐藏的页导航行。</xref:System.Web.UI.WebControls.GridView>       <xref:System.Web.UI.WebControls.GridView>控件还可以定义自定义模板的页导航行。</xref:System.Web.UI.WebControls.GridView> 有关创建自定义页导航行模板的详细信息，请参阅<xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>。</xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>       <xref:System.Web.UI.WebControls.GridView>控件提供可用于在发生分页时执行自定义操作的多个事件。</xref:System.Web.UI.WebControls.GridView> 下表列出了可用的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|单击某一页导航按钮时，但之后时发生<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 当你需要在用户定位到其他页面控件中之后执行的任务时，通常使用此事件。 |  |<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|单击某一页导航按钮时，之前时发生<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 此事件通常用于取消的分页操作。 |"
  example:
  - "The following example demonstrates how to use the AllowPaging property to declaratively enable the paging feature in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_198_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_198_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了分页功能;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowSorting
  id: AllowSorting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowSorting
  nameWithType: GridView.AllowSorting
  fullName: System.Web.UI.WebControls.GridView.AllowSorting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否启用排序功能。"
  remarks: "当支持排序的数据源控件绑定到<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.GridView>控件可以充分利用数据源控件的功能并提供自动排序功能。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> 当<xref:System.Web.UI.WebControls.GridView>控件绑定到数据源的设置<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性以编程方式，你必须提供排序功能使用<xref:System.Web.UI.WebControls.GridView.Sorting>事件。</xref:System.Web.UI.WebControls.GridView.Sorting> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 不同的数据源具有不同的启用其排序功能要求。 若要确定的要求，请参阅特定数据源的文档。       若要启用对进行排序，请将 AllowSorting 属性设置为`true`。 启用进行排序时，与每个列字段的标题文本其<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>属性集都显示为链接按钮。</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>自动生成的列字段的属性自动填充。</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> 如果你定义自己的列通过<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合，你必须设置<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>属性为每个列; 否则，列将不会显示链接按钮的标头中。</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> </xref:System.Web.UI.WebControls.GridView.Columns%2A>       单击某一列将导致中的项的链接按钮<xref:System.Web.UI.WebControls.GridView>要排序的控件基于排序表达式。</xref:System.Web.UI.WebControls.GridView> 通常，排序表达式是只需在列中，这会导致显示的字段的名称<xref:System.Web.UI.WebControls.GridView>控件按照该列排序。</xref:System.Web.UI.WebControls.GridView> 若要按多个字段排序，请使用包含以逗号分隔的字段名称列表的排序表达式。 你可以确定排序表达式，<xref:System.Web.UI.WebControls.GridView>控件应用通过使用<xref:System.Web.UI.WebControls.GridView.SortExpression%2A>属性。</xref:System.Web.UI.WebControls.GridView.SortExpression%2A> </xref:System.Web.UI.WebControls.GridView> 重复单击某个列的链接按钮切换升序和降序之间的排序方向。 若要确定当前的排序方向，使用<xref:System.Web.UI.WebControls.GridView.SortDirection%2A>属性。</xref:System.Web.UI.WebControls.GridView.SortDirection%2A>       <xref:System.Web.UI.WebControls.GridView>控件提供可用于进行排序时执行自定义操作的多个事件。</xref:System.Web.UI.WebControls.GridView> 下表列出了可用的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.Sorted>|单击超链接列进行排序，但之后时发生<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorted> 此事件通常用于在用户单击超链接以便对列进行排序之后执行的任务。 |  |<xref:System.Web.UI.WebControls.GridView.Sorting>|单击超链接列进行排序，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorting> 此事件通常用于取消排序操作或执行自定义排序例程。 |"
  example:
  - "The following example demonstrates how to use the AllowSorting property to enable sorting in a <xref:System.Web.UI.WebControls.GridView> control when automatically generated columns are used.  \n  \n [!code-cs[GridViewAllowSorting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1089_1.aspx)]\n [!code-vb[GridViewAllowSorting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1089_1.aspx)]  \n  \n The following example demonstrates how to use the AllowSorting property to enable sorting in a <xref:System.Web.UI.WebControls.GridView> control when a <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection is defined. An image is also programmatically added to the header of the column being sorted to indicate the sort direction. You must provide your own images for this sample to work.  \n  \n [!code-cs[GridViewAllowSortingColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1089_2.aspx)]\n [!code-vb[GridViewAllowSortingColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1089_2.aspx)]"
  syntax:
    content: public virtual bool AllowSorting { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了排序的功能;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AllowSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  id: AlternatingRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，它使你能够设置交替中的数据行的外观<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 AlternatingRowStyle 属性来控制数据中交替行的外观<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 将数据行时设置此属性，之间交替显示<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>设置和 AlternatingRowStyle 设置。</xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `AlternatingRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<AlternatingRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `AlternatingRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the AlternatingRowStyle property to declaratively define the style for alternating data rows in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1004_1.aspx)]\n [!code-cs[GridViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1004_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>该对象表示的数据中交替行样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.AlternatingRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  id: AutoGenerateColumns
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否为数据源中的每个字段自动创建绑定的字段。"
  remarks: "当 AutoGenerateColumns 属性设置为`true`、<xref:System.Web.UI.WebControls.AutoGeneratedField>对象将自动创建为数据源中的每个字段。</xref:System.Web.UI.WebControls.AutoGeneratedField> 每个字段则显示为中的列<xref:System.Web.UI.WebControls.GridView>字段在数据源中出现的顺序控制。</xref:System.Web.UI.WebControls.GridView> 此选项可以方便地在数据源; 中显示每个字段但是，你具有有限的自动生成的列字段如何显示或行为的控制。       而不是让<xref:System.Web.UI.WebControls.GridView>控件自动生成列字段，您可以手动定义 AutoGenerateColumns 属性设置为的列字段`false`，然后创建一个自定义`Columns`集合。</xref:System.Web.UI.WebControls.GridView> 除了绑定的列字段，你还可以显示按钮列字段、 复选框列字段、 命令字段、 超链接列字段、 某一图像字段，或基于你自己的自定义模板列字段。       你也可以组合使用自动生成的列字段的显式声明的列字段。 同时使用时，显式声明的列字段自动生成的列字段后跟第一次，呈现。 不会自动生成的绑定的列字段添加到<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.GridView.Columns%2A>。</xref:System.Web.UI.WebControls.GridView.Columns%2A>       如果将此属性设置为`true`并设置<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>为模型类型，属性<xref:System.Web.DynamicData.DynamicField>控件生成。</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 如果你未设置<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>属性，<xref:System.Web.UI.WebControls.BoundField>控件生成。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 如果不希望<xref:System.Web.DynamicData.DynamicField>控件，可以使用以下选项:-设置<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>属性`null`中`Page_Load`事件处理程序。</xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> </xref:System.Web.DynamicData.DynamicField> 在这种情况下，<xref:System.Web.UI.WebControls.BoundField>控件生成。</xref:System.Web.UI.WebControls.BoundField>      -编写自定义代码来自动创建和分配你自己生成字段<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>类并将它的实例分配给该控件。</xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>      -设置为 AutoGenerateColumns `false`。 在这种情况下，将生成没有字段，且必须手动指定字段使用如<xref:System.Web.UI.WebControls.BoundField>或<xref:System.Web.UI.WebControls.ImageField>.</xref:System.Web.UI.WebControls.ImageField></xref:System.Web.UI.WebControls.BoundField>控件      -不要设置<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>属性。</xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 在这种情况下，<xref:System.Web.UI.WebControls.BoundField>控件生成。</xref:System.Web.UI.WebControls.BoundField>"
  example:
  - "The following example demonstrates how to use the AutoGenerateColumns property to automatically create bound field columns in a <xref:System.Web.UI.WebControls.GridView> control for each field in the data source.  \n  \n [!code-vb[GridViewSimple#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1153_1.aspx)]\n [!code-cs[GridViewSimple#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1153_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateColumns { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要在数据源; 中自动创建的每个字段的绑定的字段否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AutoGenerateColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  id: AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>字段列包含每个数据行的删除按钮自动添加到<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "当支持删除一个数据源控件绑定到<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.GridView>控件可以充分利用数据源控件的功能并提供自动删除功能。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 用于数据源控件删除数据，必须将它配置为删除数据。 若要配置数据源控件删除记录，请参阅特定数据源控件的文档。       当 AutoGenerateDeleteButton 属性设置为`true`，某一列 (由表示<xref:System.Web.UI.WebControls.CommandField>对象) 与删除按钮为每个数据行自动添加到<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 永久单击删除按钮的行从数据源中删除该记录。      1> [!NOTE]&1;> 还必须设置<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性来标识的键字段或字段的数据源的自动删除功能工作。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>       <xref:System.Web.UI.WebControls.GridView>控件提供可用于在删除某一行时执行自定义操作的多个事件。</xref:System.Web.UI.WebControls.GridView> 下表列出了可用的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.RowDeleted>|单击某一行的删除按钮，但之后时发生<xref:System.Web.UI.WebControls.GridView>控件从数据源中删除记录。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleted> 此事件通常用于检查删除操作的结果。 |  |<xref:System.Web.UI.WebControls.GridView.RowDeleting>|单击某一行的删除按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件从数据源中删除记录。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleting> 此事件通常用于取消删除操作。 |"
  example:
  - "The following example demonstrates how to use the AutoGenerateDeleteButton property to enable the automatic deleting feature of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1343_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1343_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateDeleteButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要自动添加<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>字段列带有删除按钮为每个数据行; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  id: AutoGenerateEditButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>带有编辑按钮为每个数据行的字段列自动添加到<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "当支持更新的数据源控件绑定到<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.GridView>控件可以充分利用数据源控件的功能并提供自动更新功能。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 用于数据源控件更新数据，必须将它配置为更新数据。 若要配置一个数据源控件，以更新记录，请参阅特定数据源控件的文档。       当 AutoGenerateEditButton 属性设置为`true`，某一列 (由表示<xref:System.Web.UI.WebControls.CommandField>对象) 有一个编辑按钮，为每个数据行自动添加到<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 单击某行编辑按钮使该行进入编辑模式。 当行处于编辑模式，每个列字段不是只读的行中显示相应的输入的控件，如<xref:System.Web.UI.WebControls.TextBox>字段的数据类型的控件，。</xref:System.Web.UI.WebControls.TextBox> 这允许用户修改字段的值。       单击时，编辑按钮是也替换为更新按钮和取消按钮。 单击更新按钮使用任何值更改来更新数据源中的行，并返回要显示模式的行。 单击取消按钮放弃任何值更改，并返回要显示模式的行。      1> [!NOTE]&1;> 你可以以编程方式将某行处于编辑模式通过设置<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>与行的索引的属性。</xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 若要以编程方式退出编辑模式，请设置<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>为-1 的属性。</xref:System.Web.UI.WebControls.GridView.EditIndex%2A>       使用内置的更新功能时，必须设置<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>使用逗号分隔的字段列表的属性名称以标识主键字段或字段的数据源; 否则，内置的更新功能将不能更新正确的记录。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 在使用自动生成字段列 (通过设置<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性`true`)，则<xref:System.Web.UI.WebControls.GridView>控件会自动确保对应的字段或字段中指定的自动生成的字段列<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性是只读的。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>       你可以控制使用处于编辑模式的行的外观<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> 常用设置通常包括自定义的背景色、 前景颜色和字体属性。       <xref:System.Web.UI.WebControls.GridView>控件提供可用于更新行时执行自定义操作的多个事件。</xref:System.Web.UI.WebControls.GridView> 下表列出了可用的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|单击某一行的取消按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件取消退出编辑模式。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 此事件通常用于停止取消操作。 |  |<xref:System.Web.UI.WebControls.GridView.RowEditing>|单击某一行的编辑按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowEditing> 此事件通常用于取消编辑操作。 |  |<xref:System.Web.UI.WebControls.GridView.RowUpdated>|单击某一行的更新按钮，但之后时发生<xref:System.Web.UI.WebControls.GridView>控件更新行。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdated> 此事件通常用于检查更新操作的结果。 |  |<xref:System.Web.UI.WebControls.GridView.RowUpdating>|单击某一行的更新按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件更新行。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdating> 此事件通常用于取消更新操作。 |"
  example:
  - "The following example demonstrates how to use the AutoGenerateEditButton property to enable the automatic editing feature of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1016_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1016_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateEditButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要自动添加<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>字段列有一个编辑按钮，为每个数据行; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AutoGenerateEditButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  id: AutoGenerateSelectButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>字段列与每个数据行选择按钮自动添加到<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "当 AutoGenerateSelectButton 属性设置为`true`，某一列 (由表示<xref:System.Web.UI.WebControls.CommandField>对象) 与选择按钮为每个数据行自动添加到<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 为行控件中选择该行，请单击选择按钮，这会设置<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>的行的索引的属性。</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 若要检索<xref:System.Web.UI.WebControls.GridViewRow>对象，表示所选的行，使用<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> </xref:System.Web.UI.WebControls.GridViewRow> 你还可以的主键值为所选记录使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性包含的值中指定的键字段<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>      1> [!NOTE]&1;> 可以以编程方式通过设置选择一行<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 若要取消行的选择，<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>为-1 的属性。</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>       你可以通过使用来控制所选行的外观<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 常用设置通常包括自定义的背景色、 前景颜色和字体属性。       <xref:System.Web.UI.WebControls.GridView>控件提供可用于选择行时执行自定义操作的多个事件。</xref:System.Web.UI.WebControls.GridView> 下表列出了可用的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|单击某一行的选择按钮，但之后时发生<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 此事件通常用于执行某项任务后在控件中选择行时。 |  |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|单击某一行的选择按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 此事件通常用于取消选择操作。 |"
  example:
  - "The following example demonstrates how to use the AutoGenerateSelectButton property to enable the automatic selection feature of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1205_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1205_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateSelectButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要自动添加<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>字段列与选择按钮为每个数据行; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
  fullName: System.Web.UI.WebControls.GridView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置背景中显示的图像的 URL <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控件。"
  remarks: "使用 BackImageUrl 属性指定的背景中显示的图像 URL<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 如果指定的映像小于<xref:System.Web.UI.WebControls.GridView>控件，该图像平铺来填充的背景。</xref:System.Web.UI.WebControls.GridView> 如果图像大于控件，裁剪图像。"
  example:
  - "The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1003_1.aspx)]\n [!code-vb[GridViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1003_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "图像的 URL 的背景中显示<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.GridView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
  fullName: System.Web.UI.WebControls.GridView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>对象，表示中的底部页导航行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "启用分页后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，一个称为的页导航行附加行会自动显示在<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 页导航行包含允许用户导航至其他页面，并可以显示在顶部、 底部，或同时的顶部和底部的控件的控件。 使用 BottomPagerRow 属性以编程方式访问<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的底部页导航行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      1> [!NOTE]&1;> BottomPagerRow 属性是之后才可用<xref:System.Web.UI.WebControls.GridView>控件创建中的底部页导航行<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       当你需要以编程方式操作底部页导航行，例如在添加自定义内容时，通常使用此属性。 之后，必须执行对 BottomPagerRow 属性进行任何修改<xref:System.Web.UI.WebControls.GridView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.GridView>控件将覆盖所有更改。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the BottomPagerRow property to access the bottom pager row in a <xref:System.Web.UI.WebControls.GridView> control. The BottomPagerRow property is used to retrieve a <xref:System.Web.UI.WebControls.DropDownList> control from the pager row.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_54_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_54_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> ，表示控件中的底部页导航行。"
  overload: System.Web.UI.WebControls.GridView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Caption
  nameWithType: GridView.Caption
  fullName: System.Web.UI.WebControls.GridView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要呈现在一个 HTML 标题元素中的文本<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 提供此属性是以使控件的辅助技术设备用户更易于访问。"
  remarks: "标题属性用于指定要呈现在一个 HTML 标题元素中的文本<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 你指定的文本提供了辅助技术设备可以用于以使控件更易于访问的表的说明。 你还可以指定通过使用呈现的 HTML 标题元素的位置<xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>属性。</xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Caption property to specify the caption for a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_177_1.aspx)]\n [!code-vb[GridViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_177_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示要呈现在一个 HTML 标题元素中的文本<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.GridView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
  fullName: System.Web.UI.WebControls.GridView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中的 HTML 标题元素的水平或垂直位置<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 提供此属性是以使控件的辅助技术设备用户更易于访问。"
  remarks: "使用 CaptionAlign 属性来指定 HTML caption 元素中的水平或垂直位置<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 提供此属性是以使控件的辅助技术设备用户更易于访问。       此属性使用其中一个设置<xref:System.Web.UI.WebControls.TableCaptionAlign>枚举值。</xref:System.Web.UI.WebControls.TableCaptionAlign> 下表列出可能的值。      |值 |说明 |  |-----------|-----------------|  |`TableCaptionAlign.Bottom`|与表的底部对齐的标题元素。 |  |`TableCaptionAlign.Left`|标题元素和表的左侧对齐。 |  |`TableCaptionAlign.NotSet`|未设置标题元素的对齐方式。 |  |`TableCaptionAlign.Right`|与表的右侧对齐的标题元素。 |  |`TableCaptionAlign.Top`|与表的顶部对齐的标题元素。 |    &1;> [!NOTE]&1;> 当此属性设置为`TableCaptionAlign.NotSet`，则使用的浏览器的默认值。       若要指定 HTML 标题元素的文本，请使用<xref:System.Web.UI.WebControls.GridView.Caption%2A>属性。</xref:System.Web.UI.WebControls.GridView.Caption%2A>"
  example:
  - "The following example demonstrates how to use the CaptionAlign property to specify that the caption element for a <xref:System.Web.UI.WebControls.GridView> control is aligned with the top of the control.  \n  \n [!code-cs[GridViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_600_1.aspx)]\n [!code-vb[GridViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_600_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "之一<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>，它使用浏览器的默认设置。"
  overload: System.Web.UI.WebControls.GridView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是之一<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>枚举值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CellPadding
  nameWithType: GridView.CellPadding
  fullName: System.Web.UI.WebControls.GridView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置单元格的内容和单元格的边框之间的空间量。"
  remarks: "CellPadding 属性用于控制单元格的内容和单元格的边框之间的间距。 指定的填充量添加到单元格的所有四个边。       同一列中的所有单元格<xref:System.Web.UI.WebControls.GridView>控件具有相同的宽度。</xref:System.Web.UI.WebControls.GridView> 填充量应用于宽的单元格和列中的所有其他单元格有此单元格的宽度。 同样，在同一行中的所有单元格具有高度相同。 填充量应用于行中最高的单元格和行中的所有其他单元格具有此单元格的高度。 不能指定单个单元格的大小。"
  example:
  - "The following example demonstrates how to use the CellPadding property to declaratively set the amount of space between the contents of a cell and the cell's border.  \n  \n [!code-cs[GridViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_836_1.aspx)]\n [!code-vb[GridViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_836_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "以像素为单位的单元格的内容和单元格的边框之间的空间量。 默认值为-1，指示未设置此属性。"
  overload: System.Web.UI.WebControls.GridView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: GridView.CellSpacing
  fullName: System.Web.UI.WebControls.GridView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置单元格之间的空间量。"
  remarks: "使用 CellSpacing 属性来控制中的相邻单元格之间的间距<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 在垂直方向和水平应用此间距。 该单元格间距是为整个控件统一。 不能指定行或列之间的单个单元格间距。      1> [!NOTE] 1> 如果将此属性设置为一个值大于 0 的虚拟机和模板，然后设置<xref:System.Web.UI.WebControls.GridView.GridLines%2A>属性为一个值，显示单元格边框，相邻的单元格边框之间显示间距。</xref:System.Web.UI.WebControls.GridView.GridLines%2A> 在此情况下，<xref:System.Web.UI.WebControls.Table.CellSpacing%2A>属性控制的差异大小。</xref:System.Web.UI.WebControls.Table.CellSpacing%2A>"
  example:
  - "The following example demonstrates how to use the CellSpacing property to declaratively set the amount of space between the cells of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_898_1.aspx)]\n [!code-vb[GridViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_898_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "以像素为单位的单元格之间的空间量。 默认值为 0"
  overload: System.Web.UI.WebControls.GridView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  id: ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置其值将追加到的数据字段的名称<xref:System.Web.UI.Control.ClientID*>要唯一地标识每个实例的数据绑定控件的属性值。</xref:System.Web.UI.Control.ClientID*>"
  remarks: "若要防止命名冲突的多行中呈现的控件的多个实例时<xref:System.Web.UI.WebControls.GridView>控件，ASP.NET 生成唯一<xref:System.Web.UI.Control.ClientID%2A>每个实例的值。</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.WebControls.GridView> 你指定如何<xref:System.Web.UI.Control.ClientID%2A>通过设置生成值<xref:System.Web.UI.Control.ClientIDMode%2A>属性。</xref:System.Web.UI.Control.ClientIDMode%2A> </xref:System.Web.UI.Control.ClientID%2A> 如果你设置<xref:System.Web.UI.Control.ClientIDMode%2A>属性<xref:System.Web.UI.ClientIDMode>，ASP.NET 将生成<xref:System.Web.UI.Control.ClientID%2A>由派生自或多个数据字段在 ClientIDRowSuffix 中指定的后缀。</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> 如果未设置 ClientIDRowSuffix，后缀是序列号。"
  syntax:
    content: public virtual string[] ClientIDRowSuffix { get; set; }
    return:
      type: System.String[]
      description: "其值用于唯一标识的数据绑定控件的每个实例，当 ASP.NET 生成的数据字段的名称<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.ClientIDRowSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  id: ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取用于唯一标识每个实例的数据绑定控件，当 ASP.NET 生成的数据值<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  syntax:
    content: public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "用于唯一标识每个实例的数据绑定控件，当 ASP.NET 生成的数据值<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Columns
  id: Columns
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Columns
  nameWithType: GridView.Columns
  fullName: System.Web.UI.WebControls.GridView.Columns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取的集合<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>表示中的列字段的对象<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "列字段表示中的列<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 列属性 （集合） 用于存储获取呈现中的所有显式声明的列字段<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 列集合还可用于以编程方式管理列字段的集合。      1> [!NOTE]&1;> 显式声明列字段可以与自动生成的列字段结合使用。 同时使用时，显式声明的列字段自动生成的列字段后跟第一次，呈现。 自动生成的列字段不会添加到列集合。       列字段显示在<xref:System.Web.UI.WebControls.GridView>中所列字段显示在列集合的顺序控制。</xref:System.Web.UI.WebControls.GridView> 下表显示不同的列字段类派生自<xref:System.Web.UI.WebControls.DataControlField>类，以便用于 Columns 集合中。</xref:System.Web.UI.WebControls.DataControlField>      |列字段类型 |说明 |  |-----------------------|-----------------|  |<xref:System.Web.UI.WebControls.BoundField>|数据源中显示的字段的值。</xref:System.Web.UI.WebControls.BoundField> 这是<xref:System.Web.UI.WebControls.GridView>控件的默认列类型。 |  |<xref:System.Web.UI.WebControls.ButtonField>|显示在每个项的命令按钮<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.GridView> 这使你可以创建自定义按钮控件，如添加或删除按钮的列。 |  |<xref:System.Web.UI.WebControls.CheckBoxField>|显示一个复选框中每个项<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CheckBoxField> 此列字段类型通常用于显示具有一个布尔值的字段。 |  |<xref:System.Web.UI.WebControls.CommandField>|显示预定义的命令按钮来执行选择、 编辑或删除操作。 |  |<xref:System.Web.UI.WebControls.HyperLinkField>|显示为超链接数据源中的字段的值。</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 此列字段类型可让你将第二个字段绑定到超链接的 URL。 |  |<xref:System.Web.UI.WebControls.ImageField>|<xref:System.Web.UI.WebControls.GridView>控件中显示的每个项图像。 |  |<xref:System.Web.UI.WebControls.TemplateField>|显示用户定义的内容中每个项<xref:System.Web.UI.WebControls.GridView>控件，根据指定的模板。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ImageField> 此列字段类型可让你创建自定义列字段。 |      尽管你可以以编程方式将列字段添加到列集合中，很容易地列出列字段中以声明方式<xref:System.Web.UI.WebControls.GridView>控制，然后使用<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>的每个列字段以显示或隐藏列的每个字段的属性。</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.GridView>       如果<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>列字段的属性设置为`false`，列才会显示在<xref:System.Web.UI.WebControls.GridView>控件和列的数据不会进行一次往返过程向客户端。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 如果您希望为不可见，以进行往返行程的列的数据，将添加到的字段名称<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>"
  example:
  - "The following example demonstrates how to populate the Columns collection declaratively.  \n  \n [!code-vb[GridViewColumnFields#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_420_1.aspx)]\n [!code-cs[GridViewColumnFields#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_420_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>包含中的所有列字段<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator
  id: ColumnsGenerator
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
  fullName: System.Web.UI.WebControls.GridView.ColumnsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置将自动生成的列的控件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>使用 ASP.NET 动态数据功能的控件。"
  remarks: "为了在页中使用 ASP.NET 动态数据功能，您必须添加<xref:System.Web.DynamicData.DynamicDataManager>到页面的控件。</xref:System.Web.DynamicData.DynamicDataManager> 这使 ASP.NET 动态数据功能的数据绑定控件在页中，如<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 若要启用个人<xref:System.Web.UI.WebControls.GridView>控件使用动态数据功能，你必须将其与相关联<xref:System.Web.DynamicData.DynamicDataManager>通过调用控件<xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName>方法期间`Page_Init`事件。</xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName> </xref:System.Web.DynamicData.DynamicDataManager> </xref:System.Web.UI.WebControls.GridView> 此方法会自动将 ColumnsGenerator 属性设置为<xref:System.Web.DynamicData.DynamicDataManager>对象。</xref:System.Web.DynamicData.DynamicDataManager>"
  syntax:
    content: public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "将自动生成的列的控件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>使用 ASP.NET 动态数据功能的控件。"
  overload: System.Web.UI.WebControls.GridView.ColumnsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  id: CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  nameWithType: GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建一个自动生成的列字段。"
  remarks: "方法用于创建自动生成的列 CreateAutoGeneratedColumn 字段时<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`true`。</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 自动生成的列字段的属性通过指定<xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties>对象中包含`fieldProperties`参数。</xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);
    parameters:
    - id: fieldProperties
      type: System.Web.UI.WebControls.AutoGeneratedFieldProperties
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedFieldProperties&quot;> </xref> ，表示要创建的自动生成的列字段的属性。"
    return:
      type: System.Web.UI.WebControls.AutoGeneratedField
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref> ，它表示由指定的自动生成的列字段<code> fieldProperties </code>参数。"
  overload: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: GridView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建用于呈现的控件层次结构<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制是通过使用指定的数据源。"
  remarks: "CreateChildControls 方法用于创建的控件层次结构<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "&lt;Xref:System.Collections.IEnumerable?displayProperty=fullName&gt; ，其中包含的数据源<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示子控件都绑定到数据;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "创建的行数。"
  overload: System.Web.UI.WebControls.GridView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>dataSource</code>将返回 null <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>。       -<code>dataSource</code>不实现<xref:System.Collections.ICollection>接口，并不能返回<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount*>。       -<xref:System.Web.UI.WebControls.GridView.AllowPaging*>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<code>dataSource</code>不实现<xref:System.Collections.ICollection>接口，因此无法执行数据源分页。       -<code>dataSource</code>不实现<xref:System.Collections.ICollection>接口和<code>dataBinding</code>设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateChildTable
  id: CreateChildTable
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateChildTable()
  nameWithType: GridView.CreateChildTable()
  fullName: System.Web.UI.WebControls.GridView.CreateChildTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建一个新的子表。"
  remarks: "CreateChildTable 方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建子表。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateChildTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "始终返回一个新<xref href=&quot;System.Web.UI.WebControls.Table&quot;></xref>表示子表。"
  overload: System.Web.UI.WebControls.GridView.CreateChildTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  id: CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateColumns(PagedDataSource,Boolean)
  nameWithType: GridView.CreateColumns(PagedDataSource,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateColumns(PagedDataSource,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建列字段用于生成控件层次结构的集。"
  remarks: "当<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`true`，绑定的列字段将自动创建为数据源中的每个字段。</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 每个绑定的列字段则显示为中的行<xref:System.Web.UI.WebControls.GridView>字段在数据源中出现的顺序控制。</xref:System.Web.UI.WebControls.GridView> CreateColumns 方法用于创建自动生成的列字段。      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref>表示数据源。"
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用指定的数据源`dataSource`参数; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Collections.ICollection
      description: "A &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; ，其中包含用于生成控件层次结构的字段。"
  overload: System.Web.UI.WebControls.GridView.CreateColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: GridView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.GridView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建控件的默认样式。"
  remarks: "CreateControlStyle 方法用于创建控件的默认样式。      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> ，表示控件的样式。"
  overload: System.Web.UI.WebControls.GridView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: GridView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建<xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;></xref>包含进行处理，获取将它们传递给数据源的自变量的对象。"
  remarks: "CreateDataSourceSelectArguments 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建<xref:System.Web.UI.DataSourceSelectArguments>对象，其中包含自变量传递到数据源。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.GridView> 在此实现中，<xref:System.Web.UI.DataSourceSelectArguments>对象包含分页操作的自变量。</xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>包含获取传递到数据源的自变量。"
  overload: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  nameWithType: GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建中的行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "CreateRow 方法用于创建中的行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 数据绑定<xref:System.Web.UI.WebControls.GridView>控件自动生成的显示目标数据所需的行。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "要创建的行索引。"
    - id: dataSourceIndex
      type: System.Int32
      description: "要绑定到行项源数据的索引。"
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "之一<xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;></xref>值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "之一<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>创建使用指定的参数。"
  overload: System.Web.UI.WebControls.GridView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataBind()
  nameWithType: GridView.DataBind()
  fullName: System.Web.UI.WebControls.GridView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将绑定到数据源<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 此方法不能被继承。"
  remarks: "数据绑定方法用于将数据绑定到数据源从<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 此方法会解析所有活动模板中的控件的数据绑定表达式。       如果自动调用 DataBind 方法<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>属性<xref:System.Web.UI.WebControls.GridView>控件是指一个有效的数据源控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>       而不是手动调用数据绑定方法，你可以使用模型绑定与数据绑定控件通过设置<xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A>属性的返回数据<xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView>方法的名称</xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A> <xref:System.Web.UI.WebControls.GridView>然后从选择的方法返回的数据自动填充。</xref:System.Web.UI.WebControls.GridView> 模型绑定可以简化你的代码用于使用数据。 有关详细信息，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  example:
  - "The following example demonstrates how to use the DataBind method to bind a data source to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDataBind#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[GridViewDataBind#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数组，其中包含有关中显示的项<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用将字段名以指定字段或表示数据源的主键字段。 你应仅将此属性设置为或多个唯一地标识每个行; 所需的字段例如，如果唯一的整数值的 ID 列标识的每一行。 必须设置将字段名属性，才能自动更新和删除的功能<xref:System.Web.UI.WebControls.GridView>控制工作。</xref:System.Web.UI.WebControls.GridView> 若要指定要更新或删除的行情况下，这些键字段的值传递到数据源控件。       如果你需要检索密钥值更新时数据，也可以删除行，使用`Keys`属性<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>或<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>类。</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 例如，`e.Keys[0]`保留的值中的第一个数据密钥<xref:System.Web.UI.WebControls.GridView.RowUpdating>或<xref:System.Web.UI.WebControls.GridView.RowDeleting>事件处理程序。</xref:System.Web.UI.WebControls.GridView.RowDeleting> </xref:System.Web.UI.WebControls.GridView.RowUpdating>       如果你需要选择行时检索数据的密钥值，请使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>       当将字段名属性设置时，<xref:System.Web.UI.WebControls.GridView>控件自动填充其<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合的值从指定的字段或字段，它提供一种简便方式访问的每个行的主键。</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.GridView>控件将这些键字段值存储中的控件状态。</xref:System.Web.UI.WebControls.GridView> 如果这些值包含敏感信息，强烈建议你通过设置启用视图状态加密<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>属性`ViewStateEncryptionMode.Always`。</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>       当你使用自动生成字段列 (通过设置<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性`true`)，则<xref:System.Web.UI.WebControls.GridView>控件可确保在将字段名属性中指定的字段相对应的列是只读的。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>       如果<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>列字段的属性设置为`false`，列才会显示在<xref:System.Web.UI.WebControls.GridView>控件和列的数据不会进行一次往返过程向客户端。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 如果您希望为不可见要向客户端提供的列的数据，将添加到将字段名属性的字段名称。"
  example:
  - "The following example demonstrates how to use the DataKeyNames property to specify the key field of the data source. In the example, the `DataKeyNames` attribute of the `GridView` element in markup specifies two key fields by using a comma to separate the names. To run this example, create a Web site that has the following:  \n  \n-   A connection to the AdventureWorksLT sample database and a connection string that is named `AdventureWorksLTConnectionString`. For information about how to set up the AdventureWorksLT sample database, see [How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development](~/add/includes/ajax-current-ext-md.md).  \n  \n-   A LINQ-to-SQL data context class that is named `AdventureWorksLTDataClassesDataContext`. The data context must have a class for the SalesOrderDetails table. For information about how to create LINQ-to-SQL classes, see [LINQ to SQL](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1002_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1002_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "一个数组，包含主键的名称字段中显示的项<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataKeys
  id: DataKeys
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataKeys
  nameWithType: GridView.DataKeys
  fullName: System.Web.UI.WebControls.GridView.DataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取的集合<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref>表示数据的对象中的每一行的键值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "当<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>设置属性，<xref:System.Web.UI.WebControls.GridView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>控件中的每一行的对象。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>对象包含的字段或字段中指定的值<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> <xref:System.Web.UI.WebControls.DataKey>随后会将对象添加到控件的 DataKeys 集合。</xref:System.Web.UI.WebControls.DataKey> 使用 DataKeys 属性来检索<xref:System.Web.UI.WebControls.DataKey>对象中的特定数据行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey>      1> [!NOTE]&1;> 可以使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>属性，以检索<xref:System.Web.UI.WebControls.DataKey>对象当前所选的行。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 你还可以使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性直接检索当前所选行的数据密钥值。</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>"
  example:
  - "The following example demonstrates how to use the DataKeys property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDataKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_962_1.aspx)]\n [!code-vb[GridViewDataKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_962_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;> </xref>包含中的每一行数据密钥<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.DataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
  fullName: System.Web.UI.WebControls.GridView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要调用以便删除数据的方法的名称。"
  remarks: "设置此属性会导致模型绑定要用作数据绑定方法。       在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "方法的名称。"
  overload: System.Web.UI.WebControls.GridView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  id: DeleteRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DeleteRow(Int32)
  nameWithType: GridView.DeleteRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.DeleteRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "从数据源中删除指定索引处的记录。"
  remarks: "使用 DeleteRow 方法以编程方式从数据源中删除指定索引处的记录。 当您需要删除来自外部的记录通常使用此方法<xref:System.Web.UI.WebControls.GridView>控制，例如页上的其他控件。</xref:System.Web.UI.WebControls.GridView> 调用此方法也会引发<xref:System.Web.UI.WebControls.GridView.RowDeleted>和<xref:System.Web.UI.WebControls.GridView.RowDeleting>事件。</xref:System.Web.UI.WebControls.GridView.RowDeleting> </xref:System.Web.UI.WebControls.GridView.RowDeleted>"
  example:
  - "The following example demonstrates how to use the DeleteRow method to programmatically delete a record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDeleteRow#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_184_1.aspx)]\n [!code-vb[GridViewDeleteRow#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_184_1.aspx)]"
  syntax:
    content: public virtual void DeleteRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "要删除的行索引。"
  overload: System.Web.UI.WebControls.GridView.DeleteRow*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控件未绑定到数据源控件。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "数据源控件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件绑定到不支持删除操作，或没有为数据源定义 delete 命令。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EditIndex
  id: EditIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EditIndex
  nameWithType: GridView.EditIndex
  fullName: System.Web.UI.WebControls.GridView.EditIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要编辑的行的索引。"
  remarks: "是从零开始的行索引 （第一行是零）。       仅在以下情况下，这涉及到特定事件的处理程序中通常使用此属性:-你想<xref:System.Web.UI.WebControls.GridView>控制在特定行的编辑模式下打开显示的页面的第一个时间。</xref:System.Web.UI.WebControls.GridView> 若要执行此操作，可以设置 EditIndex 属性中的处理程序<xref:System.Web.UI.Control.Load>事件<xref:System.Web.UI.Page>类或<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page> </xref:System.Web.UI.Control.Load>      -你想要知道哪些行已编辑后更新了该行。 若要执行此操作，可以检索的行索引中的 EditIndex 属性<xref:System.Web.UI.WebControls.GridView.RowUpdated>事件处理程序。</xref:System.Web.UI.WebControls.GridView.RowUpdated>      -你正在绑定<xref:System.Web.UI.WebControls.GridView>到通过设置数据源的控件<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性以编程方式。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.GridView> 在这种情况下必须在中设置 EditIndex 属性<xref:System.Web.UI.WebControls.GridView.RowEditing>和<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>事件处理程序。</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> </xref:System.Web.UI.WebControls.GridView.RowEditing>       如果回发后或处理程序引发的事件中设置 EditIndex 属性晚于<xref:System.Web.UI.Control.Load>事件，<xref:System.Web.UI.WebControls.GridView>控件可能不进入编辑模式，为指定的行。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Control.Load> 如果你读取的其他事件处理程序中的该属性的值，则不保证索引以反映正在编辑的行。       若要确定用户在哪一行已单击**编辑**按钮或中的超链接之前<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式，您可以检索的行索引从<xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A>属性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>对象在<xref:System.Web.UI.WebControls.GridView.RowEditing>事件处理程序。</xref:System.Web.UI.WebControls.GridView.RowEditing> </xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A> </xref:System.Web.UI.WebControls.GridView>       若要防止<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式，用户单击后**编辑**按钮或超链接、 集<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>对象传递给`true`中<xref:System.Web.UI.WebControls.GridView.RowEditing>事件处理程序。</xref:System.Web.UI.WebControls.GridView.RowEditing> </xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the EditIndex property to determine which row was updated after it was edited in a <xref:System.Web.UI.WebControls.GridView> control. A message is displayed to indicate that the update was successful.  \n  \n [!code-cs[GridViewRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1013_1.aspx)]\n [!code-vb[GridViewRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1013_1.aspx)]"
  syntax:
    content: public virtual int EditIndex { get; set; }
    return:
      type: System.Int32
      description: "要编辑的行的从零开始的索引。 默认值为-1，指示正在编辑任何行。"
  overload: System.Web.UI.WebControls.GridView.EditIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的索引是小于-1。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
  fullName: System.Web.UI.WebControls.GridView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，它使你能够设置中选择进行编辑的行的外观<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 EditRowStyle 属性来控制正在编辑中的行的外观<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `EditRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<EditRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `EditRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the EditRowStyle property to define a custom style for the row being edited in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewEditRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_980_1.aspx)]\n [!code-vb[GridViewEditRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_980_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中正在编辑的行的样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>使你能够设置空数据行的外观的对象呈现时<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件绑定到数据源不包含任何记录。"
  remarks: "使用 EmptyDataRowStyle 属性来控制中的 null 行的外观<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 当绑定到控件的数据源不包含任何记录，将显示为 null 的行。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `EmptyDataRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<EmptyDataRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `EmptyDataRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to set the EmptyDataRowStyle property declaratively to specify a light blue background and a red font for the null row.  \n  \n [!code-cs[GridViewNullRowTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1110_1.aspx)]\n [!code-vb[GridViewNullRowTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1110_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，可用于设置为 null 的行的外观。"
  overload: System.Web.UI.WebControls.GridView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的用户定义的内容，空的数据行中呈现时<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件绑定到数据源不包含任何记录。"
  remarks: "空数据行显示在<xref:System.Web.UI.WebControls.GridView>控制当绑定到控件的数据源不包含任何记录。</xref:System.Web.UI.WebControls.GridView> 可以通过使用要属性定义为空的数据行自己自定义用户界面 (UI)。       若要指定自定义模板为空的数据行，第一次将`<EmptyDataTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 然后可以列出在开始和结束之间模板的内容`<EmptyDataTemplate>`标记。 若要控制空数据行的样式，使用<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 或者，你可以使用内置用户界面为空的数据行通过设置<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>而不是此属性的属性。</xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>       有关如何以编程方式访问控件的空数据模板中声明的信息，请参阅[如何︰ 按 ID 访问服务器控件](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 如果这两个<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>和要设置、 要属性优先。</xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>"
  example:
  - "The following example demonstrates how to define a custom template for the empty data row displayed when a <xref:System.Web.UI.WebControls.GridView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[GridViewNullRowTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_206_1.aspx)]\n [!code-vb[GridViewNullRowTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_206_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含空的数据行的自定义内容。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示未设置此属性。"
  overload: System.Web.UI.WebControls.GridView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
  fullName: System.Web.UI.WebControls.GridView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要在空的数据行中显示的文本呈现时<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件绑定到数据源不包含任何记录。"
  remarks: "空数据行显示在<xref:System.Web.UI.WebControls.GridView>控制当绑定到控件的数据源不包含任何记录。</xref:System.Web.UI.WebControls.GridView> EmptyDataText 属性用于指定要在空的数据行中显示的文本。 若要控制空数据行的样式，使用<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 或者，可以通过设置定义为空的数据行自己自定义用户界面 (UI)<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>而不是此属性的属性。</xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>      1> [!NOTE]&1;> 如果这两个 EmptyDataText 和<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>设置属性，<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>属性优先。</xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-vb[GridViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_935_1.aspx)]\n [!code-cs[GridViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_935_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "要在空数据行中显示的文本。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.GridView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
  fullName: System.Web.UI.WebControls.GridView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否验证程序控件将处理在 insert 过程中发生或更新操作的异常。"
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果验证程序控件将处理异常，在 insert 过程中发生或更新操作;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  id: EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，指示行的选择基于索引或数据密钥值。"
  remarks: "如果此属性为`false`和选择行时，会显示一个新页面，即使新页中有不同的数据时选择同一行。 如果将此属性设置为`true`时显示中，有不同的数据的页，不选择任何行。 如果你然后返回到所选行的网页，该行仍处于选中状态。"
  syntax:
    content: public virtual bool EnablePersistedSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果行选择基于数据密钥值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.EnablePersistedSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  id: EnableSortingAndPagingCallbacks
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
  fullName: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否将客户端回调用于排序和分页操作。"
  remarks: "默认情况下，当执行排序或分页操作，则<xref:System.Web.UI.WebControls.GridView>控件回发到服务器以执行该操作。</xref:System.Web.UI.WebControls.GridView> 当 EnableSortingAndPagingCallbacks 属性设置为`true`、 服务客户端上调用来执行排序和分页操作，而不需要将发布回服务器。      1> [!NOTE]&1;> 并非所有浏览器都支持此功能。 若要确定浏览器是否支持此功能，请使用<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>属性。</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       中的所有列<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合必须支持此功能正常工作的回调。</xref:System.Web.UI.WebControls.GridView.Columns%2A> 如果<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合包含的列，不支持回调，如<xref:System.Web.UI.WebControls.TemplateField>、<xref:System.NotSupportedException>引发异常。</xref:System.NotSupportedException> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView.Columns%2A>"
  example:
  - "The following example demonstrates how to use the EnableSortingAndPagingCallbacks property to enable client-side callbacks for sorting and paging operations.  \n  \n [!code-vb[GridViewEnableSortingAndPagingCallbacks#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_960_1.aspx)]\n [!code-cs[GridViewEnableSortingAndPagingCallbacks#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_960_1.aspx)]"
  syntax:
    content: public virtual bool EnableSortingAndPagingCallbacks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要用于排序和分页操作，则为客户端回调否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.GridView.Columns*>集合包含的列，不支持回调，如<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。</xref:System.Web.UI.WebControls.GridView.Columns*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  nameWithType: GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "检索在指定行内声明每个字段的值，并将其存储在指定<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>对象。"
  remarks: "ExtractRowValues 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>要检索的声明中指定的行的每个字段的值控件`row`参数。</xref:System.Web.UI.WebControls.GridView> 你可以指定提取的值使用是否包含只读字段和键字段`includeReadOnlyFields`和`includePrimaryKey`参数，分别。"
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>用于存储字段值。"
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>要从中检索字段值。"
    - id: includeReadOnlyFields
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含只读字段;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includePrimaryKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括的主键字段或字段;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: FooterRow
  nameWithType: GridView.FooterRow
  fullName: System.Web.UI.WebControls.GridView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>对象，表示中的页脚行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 FooterRow 属性以编程方式访问<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的页脚行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      1> [!NOTE]&1;> FooterRow 属性是之后才可用<xref:System.Web.UI.WebControls.GridView>控件创建中的页脚行<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       当你需要以编程方式操作页脚行中的，例如在添加自定义内容时，通常使用此属性。 之后，必须执行对 FooterRow 属性进行任何修改<xref:System.Web.UI.WebControls.GridView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.GridView>控件将覆盖所有更改。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the FooterRow property to display the sort direction in the footer row.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_775_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_775_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>表示中的页脚行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: GridView.FooterStyle
  fullName: System.Web.UI.WebControls.GridView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，可用于设置中的页脚行的外观<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 FooterStyle 属性来控制中的页脚行的外观<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `FooterStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<FooterStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `FooterStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the FooterStyle property to define a custom style for the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_100_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>该对象表示中的页脚行样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: GridView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回的结果以控件为目标的回调事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView>控件实现<xref:System.Web.UI.ICallbackEventHandler>接口并使用<xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>以异步方式检索数据和 GetCallbackResult 方法检索到的数据返回到控件。</xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "回调的结果。"
  overload: System.Web.UI.WebControls.GridView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建执行排序操作的按钮的回调脚本。"
  remarks: "GetCallbackScript 方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建执行排序操作的按钮的回调脚本。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "要为其创建回调脚本按钮控件中。"
    - id: argument
      type: System.String
      description: "要传递到回调脚本的参数。"
    return:
      type: System.String
      description: "执行排序操作的按钮回调脚本。"
  overload: System.Web.UI.WebControls.GridView.GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GridLines
  nameWithType: GridView.GridLines
  fullName: System.Web.UI.WebControls.GridView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置网格线样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用网格线属性指定的网格线样式<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 下表列出可用的样式。      |样式 |说明 |  |-----------|-----------------|  |`GridLines.None`|显示没有网格线。 |  |`GridLines.Horizontal`|显示水平网格线。 |  |`GridLines.Vertical`|显示垂直网格线。 |  |`GridLines.Both`|显示水平和垂直网格。 |"
  example:
  - "The following example demonstrates how to use the GridLines property to hide the gridlines in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewGridLines#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1102_1.aspx)]\n [!code-cs[GridViewGridLines#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1102_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "之一<xref href=&quot;System.Web.UI.WebControls.GridLines&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_GridLines.Both&quot; name=&quot;GridLines.Both&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: GridView.HeaderRow
  fullName: System.Web.UI.WebControls.GridView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>对象，表示中的标题行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 HeaderRow 属性以编程方式访问<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的标题行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      1> [!NOTE]&1;> HeaderRow 属性是之后才可用<xref:System.Web.UI.WebControls.GridView>控件创建中的标题行<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       当你需要以编程方式操作标头行，例如，添加自定义的内容时，通常使用此属性。 之后，必须执行对 HeaderRow 属性进行任何修改<xref:System.Web.UI.WebControls.GridView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.GridView>控件将覆盖所有更改。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the HeaderRow property to programmatically change the font color of the header row based on the sort direction.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1107_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1107_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>表示中的标题行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
  fullName: System.Web.UI.WebControls.GridView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，可用于设置中的标题行的外观<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 HeaderStyle 属性来控制中的标题行的外观<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `HeaderStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<HeaderStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `HeaderStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the HeaderStyle property to define a custom style for the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1352_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1352_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的标题行的样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
  fullName: System.Web.UI.WebControls.GridView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的水平对齐方式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>页上的控件。"
  remarks: "使用 HorizontalAlign 属性指定的水平对齐方式<xref:System.Web.UI.WebControls.GridView>页内的控件。</xref:System.Web.UI.WebControls.GridView> 下表列出了不同的水平对齐样式。      |对齐值 |说明 |  |---------------------|-----------------|  |`HorizontalAlign.NotSet`|尚未设置<xref:System.Web.UI.WebControls.GridView>控件的水平对齐方式。 |  |`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.GridView>控件是左对齐页面上。 |  |`HorizontalAlign.Center`|在页面上居中<xref:System.Web.UI.WebControls.GridView>控件。 |  |`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.GridView>控件是右对齐的页上的对齐。 |  |`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.GridView>控件对齐与页面的左侧和右侧页边距。 |</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the HorizontalAlign property to align a <xref:System.Web.UI.WebControls.GridView> control on the right side of a page.  \n  \n [!code-vb[GridViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_660_1.aspx)]\n [!code-cs[GridViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_660_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "之一<xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: InitializePager(GridViewRow,Int32,PagedDataSource)
  nameWithType: GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  fullName: System.Web.UI.WebControls.GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化时启用分页功能时显示的页导航行。"
  remarks: "InitializePager 方法用于初始化时启用分页功能时显示的页导航行。      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> ，表示要初始化的页导航行。"
    - id: columnSpan
      type: System.Int32
      description: "页导航行应跨越的列数。"
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref>表示数据源。"
  overload: System.Web.UI.WebControls.GridView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  id: InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: InitializeRow(GridViewRow,DataControlField[])
  nameWithType: GridView.InitializeRow(GridViewRow,DataControlField[])
  fullName: System.Web.UI.WebControls.GridView.InitializeRow(GridViewRow,DataControlField[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化中的行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "InitializeRow 方法用于初始化中的行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> ，表示要初始化的行。"
    - id: fields
      type: System.Web.UI.WebControls.DataControlField[]
      description: "数组<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>表示中的列字段的对象<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: GridView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.GridView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定指定的数据类型是否可以绑定到中的列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "IsBindableType 方法是通常由控件开发人员用来以编程方式确定指定的数据类型是否可以绑定到列中的帮助器方法<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> The following data types can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control:      -   <xref:System.Boolean?displayProperty=fullName>      -   <xref:System.Byte?displayProperty=fullName>      -   <xref:System.Char?displayProperty=fullName>      -   <xref:System.DateTime?displayProperty=fullName>      -   <xref:System.Decimal?displayProperty=fullName>      -   <xref:System.Double?displayProperty=fullName>      -   <xref:System.Guid?displayProperty=fullName>      -   <xref:System.Int16?displayProperty=fullName>      -   <xref:System.Int32?displayProperty=fullName>      -   <xref:System.Int64?displayProperty=fullName>      -   <xref:System.SByte?displayProperty=fullName>      -   <xref:System.Single?displayProperty=fullName>      -   <xref:System.String?displayProperty=fullName>      -   <xref:System.UInt16?displayProperty=fullName>      -   <xref:System.UInt32?displayProperty=fullName>      -   <xref:System.UInt64?displayProperty=fullName></xref:System.UInt64?displayProperty=fullName></xref:System.UInt32?displayProperty=fullName></xref:System.UInt16?displayProperty=fullName></xref:System.String?displayProperty=fullName></xref:System.Single?displayProperty=fullName></xref:System.SByte?displayProperty=fullName></xref:System.Int64?displayProperty=fullName></xref:System.Int32?displayProperty=fullName></xref:System.Int16?displayProperty=fullName></xref:System.Guid?displayProperty=fullName></xref:System.Double?displayProperty=fullName></xref:System.Decimal?displayProperty=fullName></xref:System.DateTime?displayProperty=fullName></xref:System.Char?displayProperty=fullName></xref:System.Byte?displayProperty=fullName></xref:System.Boolean?displayProperty=fullName></xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A &lt;xref:System.Type?displayProperty=fullName&gt; ，它表示要测试的数据类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的数据类型可以绑定到中的列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件的指针; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: GridView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载中的属性的状态<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件中需要保留，即使&lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "此方法用于加载中的属性的状态<xref:System.Web.UI.WebControls.GridView>控件中需要保留，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>属性设置为`false`。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "&lt;Xref:System.Object?displayProperty=fullName&gt;包含控件保存的控件状态的值。"
  overload: System.Web.UI.WebControls.GridView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: GridView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载以前保存的视图状态的<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。 但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "&lt;Xref:System.Object?displayProperty=fullName&gt;包含控件保存的视图状态值。"
  overload: System.Web.UI.WebControls.GridView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: GridView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定是否沿页的用户界面 (UI) 服务器控件层次结构向上传递 Web 服务器控件的事件。"
  remarks: "OnBubbleEvent 方法实现<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>方法将从子控件的事件传递到页层次结构。</xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;包含事件数据。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果事件已被取消;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  id: OnDataPropertyChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnDataPropertyChanged()
  nameWithType: GridView.OnDataPropertyChanged()
  fullName: System.Web.UI.WebControls.GridView.OnDataPropertyChanged()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重新绑定次数<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件之后，其数据与<> *1>， <> </> *1>，或<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*>属性更改。</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*>"
  remarks: "OnDataPropertyChanged 方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件重新绑定之后，其数据的控件<xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>， <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>，或<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>属性更改。</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void OnDataPropertyChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.OnDataPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  id: OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: GridView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;></xref>事件。"
  remarks: "OnDataSourceViewChanged 方法通知<xref:System.Web.UI.WebControls.GridView>基础数据源已更改，该控件应重新绑定的控件。</xref:System.Web.UI.WebControls.GridView> 通常情况下，OnDataSourceViewChanged 方法称为数据源视图的属性已更改时。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnDataSourceViewChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnDataSourceViewChanged (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: GridView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件。"
  remarks: "当此方法通知，Web 服务器控件必须执行任何所需创建并设置实例的初始化步骤。 在此阶段的服务器控件的生命周期中，控件的视图状态尚未填充。 此外，当调用此方法时，无论是否的子级或父级到该控件不能访问其他服务器控件。 不保证其他服务器控件都可创建并准备好进行访问。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnInit 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: GridView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanged&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>时单击某一页导航按钮时，之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 这使你能够执行自定义的例程，自定义的分页操作，例如，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPageIndexChanging(GridViewPageEventArgs)
  nameWithType: GridView.OnPageIndexChanging(GridViewPageEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanging(GridViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanging&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>时单击某一页导航按钮时，之前将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 这使你能够执行自定义的例程，每次此事件发生时取消的分页操作，如事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanging 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewPageEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "没有没有处理程序<xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanging&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  id: OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: GridView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPagePreLoad(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载控件之前，请设置数据绑定控件的初始化的状态。"
  syntax:
    content: protected override void OnPagePreLoad (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnPagePreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: GridView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref>事件。"
  remarks: "此方法通知服务器控件执行任何必要的预呈现步骤之前保存的视图状态和呈现内容。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPreRender 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  id: OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCancelingEdit(GridViewCancelEditEventArgs)
  nameWithType: GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowCancelingEdit&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>时单击编辑模式中某一行的取消按钮后，将引发事件，但在该行退出之前编辑模式。</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 这使你能够执行自定义的例程，例如停止取消操作，如果它会将行放入某种意外状态，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowCancelingEdit 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewCancelEditEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewCancelEditEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowCancelingEdit*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "没有没有处理程序<xref href=&quot;System.Web.UI.WebControls.GridView.RowCancelingEdit&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  id: OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCommand(GridViewCommandEventArgs)
  nameWithType: GridView.OnRowCommand(GridViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCommand(GridViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowCommand&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowCommand>中单击的按钮时将引发事件<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCommand> 这使你能够在每次此事件发生时执行的自定义的例程的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowCommand 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how provide an event-handling method for the <xref:System.Web.UI.WebControls.GridView.RowCommand> event. When the Add button is clicked for a given row of the <xref:System.Web.UI.WebControls.GridView> control, the name of the selected customer is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[GridViewRowCommmand#1](~/add/codesnippet/csharp/10c8d2a8-eb40-462e-a63f-_1.aspx)]\n [!code-vb[GridViewRowCommmand#1](~/add/codesnippet/visualbasic/10c8d2a8-eb40-462e-a63f-_1.aspx)]"
  syntax:
    content: protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewCommandEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  id: OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCreated(GridViewRowEventArgs)
  nameWithType: GridView.OnRowCreated(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCreated(GridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowCreated&quot;></xref>事件。"
  remarks: "之前<xref:System.Web.UI.WebControls.GridView>可以呈现控件，<xref:System.Web.UI.WebControls.GridViewRow>必须为该控件中的每一行创建对象。</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView.RowCreated>引发事件中的每一行时<xref:System.Web.UI.WebControls.GridView>创建控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCreated> 这使你能够执行自定义的例程，例如将自定义内容添加到行，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowCreated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following example demonstrates how provide an event-handling method for the <xref:System.Web.UI.WebControls.GridView.RowCreated> event. When a row is being created, its index is stored in the <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> property of a <xref:System.Web.UI.WebControls.LinkButton> control that is contained in the new row. This enables you to determine the index of the row when the user clicks the command button.  \n  \n [!code-vb[GridViewRowCreated#1](~/add/codesnippet/visualbasic/a62170ef-53b8-4054-ad66-_1.aspx)]\n [!code-cs[GridViewRowCreated#1](~/add/codesnippet/csharp/a62170ef-53b8-4054-ad66-_1.aspx)]"
  syntax:
    content: protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewRowEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  id: OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDataBound(GridViewRowEventArgs)
  nameWithType: GridView.OnRowDataBound(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowDataBound&quot;></xref>事件。"
  remarks: "之前<xref:System.Web.UI.WebControls.GridView>可以呈现控件，该控件中的每一行必须绑定到数据源中的记录。</xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView.RowDataBound>数据行时引发事件 (由表示<xref:System.Web.UI.WebControls.GridViewRow>对象) 中的数据绑定<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView.RowDataBound> 这使你能够执行自定义的例程，例如修改绑定到行，每次此事件发生时的数据的值的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowDataBound 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。       Visual Studio Web 站点项目与源代码是可用本主题可以附带︰[下载](http://go.microsoft.com/fwlink/?LinkId=191882)。"
  syntax:
    content: protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewRowEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  id: OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDeleted(GridViewDeletedEventArgs)
  nameWithType: GridView.OnRowDeleted(GridViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleted(GridViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleted&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowDeleted>单击某一行的删除按钮，但之后时引发事件<xref:System.Web.UI.WebControls.GridView>控件删除该行。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleted> 这使你能够执行自定义的例程，例如检查删除操作的结果，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowDeleted 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewDeletedEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  id: OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDeleting(GridViewDeleteEventArgs)
  nameWithType: GridView.OnRowDeleting(GridViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleting&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowDeleting>单击某一行的删除按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件删除该行。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleting> 这使你能够执行自定义的例程，如取消删除操作中，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowDeleting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewDeleteEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "没有没有处理程序<xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleting&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  id: OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowEditing(GridViewEditEventArgs)
  nameWithType: GridView.OnRowEditing(GridViewEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowEditing(GridViewEditEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowEditing&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowEditing>单击某一行的编辑按钮，但之前引发事件<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowEditing> 这使你能够执行自定义的例程，如取消编辑的操作，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowEditing 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewEditEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewEditEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowEditing*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "没有没有处理程序<xref href=&quot;System.Web.UI.WebControls.GridView.RowEditing&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  id: OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowUpdated(GridViewUpdatedEventArgs)
  nameWithType: GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdated&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowUpdated>时单击某一行的更新按钮，但之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件更新行。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdated> 这使你能够执行自定义的例程，例如检查更新操作的结果，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowUpdated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewUpdatedEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  id: OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowUpdating(GridViewUpdateEventArgs)
  nameWithType: GridView.OnRowUpdating(GridViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdating(GridViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdating&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowUpdating>单击某一行的更新按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件更新行。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdating> 这使你能够执行自定义的例程，如取消更新操作中，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowUpdating 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewUpdateEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnRowUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "没有没有处理程序<xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdating&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  id: OnSelectedIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: GridView.OnSelectedIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.SelectedIndexChanged&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>时单击某一行的选择按钮，但之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 这使你能够执行自定义的例程，例如使用当前选定的行中，更新状态标签，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSelectedIndexChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following example shows how create an event handler for the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event. In this example, the selected row is persisted in the view state. So even after a sorting or a paging operation, only that row will be selected.  \n  \n [!code-vb[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_77_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_77_1.aspx)]"
  syntax:
    content: protected virtual void OnSelectedIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  id: OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSelectedIndexChanging(GridViewSelectEventArgs)
  nameWithType: GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.SelectedIndexChanging&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>单击某一行的选择按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 这使你能够执行自定义的例程，如取消所选内容的操作，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSelectedIndexChanging 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewSelectEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewSelectEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  id: OnSorted(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSorted(EventArgs)
  nameWithType: GridView.OnSorted(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorted(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.Sorted&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.Sorted>单击超链接列进行排序，但之后时引发事件<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorted> 这使你能够在每次此事件发生时执行的自定义的例程，如自定义排序的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSorted 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSorted (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnSorted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  id: OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSorting(GridViewSortEventArgs)
  nameWithType: GridView.OnSorting(GridViewSortEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorting(GridViewSortEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.GridView.Sorting&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.Sorting>单击超链接列进行排序后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorting> 这使你能够执行自定义的例程，如取消排序操作，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSorting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewSortEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewSortEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.GridView.OnSorting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "没有没有处理程序<xref href=&quot;System.Web.UI.WebControls.GridView.Sorting&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageCount
  nameWithType: GridView.PageCount
  fullName: System.Web.UI.WebControls.GridView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取显示的记录中的数据源所需的页面数<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "启用分页功能后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，使用 PageCount 属性来确定数据源中显示的记录所需的页的总数。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 此值计算的数据源中的页中显示的记录数的记录的总数目除以 (所指定的<xref:System.Web.UI.WebControls.GridView.PageSize%2A>属性) 和舍入相符。</xref:System.Web.UI.WebControls.GridView.PageSize%2A>"
  example:
  - "The following example demonstrates how to use the PageCount property to determine the total number of pages displayed in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_202_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_202_1.aspx)]"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "中的页面数<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndex
  nameWithType: GridView.PageIndex
  fullName: System.Web.UI.WebControls.GridView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置当前显示页的索引。"
  remarks: "启用分页功能后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，使用 PageIndex 属性来确定的当前显示页的索引。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 你还可以使用此属性以编程方式更改所显示的页面。"
  example:
  - "The following example demonstrates how to use the PageIndex property to determine the index of the currently displayed page in the <xref:System.Web.UI.WebControls.GridView> control. The example also shows how the PageIndex property can be used to specify which page is displayed after the user selects a value from the pager row.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_849_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_849_1.aspx)]"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "在当前显示的页面的从零开始的索引。"
  overload: System.Web.UI.WebControls.GridView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PageIndex 属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: GridView.PageIndexChanged
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一页导航按钮时，但之后时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件处理的分页操作。"
  remarks: "单击某一页导航按钮时，但之后引发 PageIndexChanged 事件<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，自定义的分页操作，例如，每次此事件发生时的事件处理方法。       若要确定用户选择的页的索引，请使用<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the PageIndexChanged event to display the page number selected by the user from the pager row.  \n  \n [!code-vb[GridViewPageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_26_1.aspx)]\n [!code-cs[GridViewPageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_26_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: GridView.PageIndexChanging
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一页导航按钮时，之前时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件处理的分页操作。"
  remarks: "单击某一页导航按钮时，之前引发 PageIndexChanging 事件<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，每次此事件发生时取消的分页操作，如事件处理方法。      1> [!NOTE]&1;> 以编程方式设置时，将不会引发此事件<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性。</xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       A<xref:System.Web.UI.WebControls.GridViewPageEventArgs>对象传递给事件处理方法，使您可以确定用户选择的页的索引，并可以指示是否应取消的分页操作。</xref:System.Web.UI.WebControls.GridViewPageEventArgs> 若要取消的分页操作，<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewPageEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.GridViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the PageIndexChanging event to cancel the paging operation if the user attempts to navigate to another page when a <xref:System.Web.UI.WebControls.GridView> control is in edit mode.  \n  \n [!code-cs[GridViewPageIndexChanging#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_115_1.aspx)]\n [!code-vb[GridViewPageIndexChanging#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_115_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.GridViewPageEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: GridView.PagerSettings
  fullName: System.Web.UI.WebControls.GridView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;></xref>使你能够设置中的页导航按钮的属性的对象<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "通常情况下用于控制的设置中的页导航行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 启用分页功能时，将显示的页导航行 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`) 和包含允许用户导航到不同的页面控件中的控件。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.PagerSettings>对象返回。</xref:System.Web.UI.WebControls.PagerSettings> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.PagerSettings>对象 (例如， `PagerSettings-Mode`)。</xref:System.Web.UI.WebControls.PagerSettings> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<PagerSettings>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `PagerStyle.Mode`)。 常用设置通常包括的页导航行显示模式和自定义文本或导航控件的图像。"
  example:
  - "The following example demonstrates how to set the PagerSettings property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1275_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1275_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> ，可用于设置的属性中的页导航按钮<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: GridView.PagerStyle
  fullName: System.Web.UI.WebControls.GridView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，可用于设置中的页导航行的外观<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 PagerStyle 属性来控制中的页导航行的外观<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 启用分页功能时，将显示的页导航行 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`) 和包含允许用户导航到不同的页面控件中的控件。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `PagerStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<PagerStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `PagerStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to set the PagerStyle property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_389_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_389_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>该对象表示中的页导航行样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
  fullName: System.Web.UI.WebControls.GridView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的页导航行中的自定义内容<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "页导航行显示在<xref:System.Web.UI.WebControls.GridView>控制当启用分页功能 (时<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性设置为 true)。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> </xref:System.Web.UI.WebControls.GridView> 页导航行包含允许用户导航到不同的页面控件中的控件。 而不是使用内置的页导航行用户界面 (UI)，你可以使用要属性来定义自己的 UI。      1> [!NOTE]&1;> 时要属性设置，则它将重写内置页导航行 UI。       若要指定自定义模板的页导航行，第一次将`<PagerTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 然后可以列出在开始和结束之间模板的内容`<PagerTemplate>`标记。 若要控制的页导航行的外观，使用<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>       通常情况下，将按钮控件添加到页导航模板来执行分页操作。 <xref:System.Web.UI.WebControls.GridView>控件将执行的分页操作使用的按钮控件时其`CommandName`单击属性设置为&quot;Page&quot;。</xref:System.Web.UI.WebControls.GridView> 按钮的`CommandArgument`属性确定要执行的分页操作的类型。 下表列出了支持的命令参数值<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>      |`CommandArgument`值 |说明 |  |-----------------------------|-----------------|  |&quot;下一步&quot;|导航到下一步的页面。 |  |&quot;上一步&quot;|导航到以前的页面。 |  |&quot;第一个&quot;|导航到第一个页面。 |  |&quot;最后一个&quot;|导航到最后一个页面。 |  |整数值 |导航到指定的页码。 |"
  example:
  - "The following example demonstrates how to create a custom pager template that allows the user to navigate through a <xref:System.Web.UI.WebControls.GridView> control using a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1266_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1266_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含的页导航行的自定义内容。 默认值为 null，表示未设置此属性。"
  overload: System.Web.UI.WebControls.GridView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageSize
  nameWithType: GridView.PageSize
  fullName: System.Web.UI.WebControls.GridView.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要在页面上显示的记录数<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "启用分页功能后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`) 的 PageSize 属性用于指定要在单个页面上显示的记录数。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>"
  example:
  - "The following example demonstrates how to use the PageSize property to display 15 records at a time in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewPageSize#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1100_1.aspx)]\n [!code-cs[GridViewPageSize#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1100_1.aspx)]"
  syntax:
    content: public virtual int PageSize { get; set; }
    return:
      type: System.Int32
      description: "要在单个页面上显示的记录数。 默认值为 10。"
  overload: System.Web.UI.WebControls.GridView.PageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PageSize 属性设置为小于 1 的值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: GridView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将绑定到指定的数据源<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "PerformDataBinding 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件绑定到控件的指定的数据源。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>包含数据源。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.GridView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: GridView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.GridView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立控制层次结构。"
  remarks: "此方法用于建立的控制层次结构<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: GridView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建中的回调处理程序的自变量<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>"
  remarks: "RaiseCallbackEvent 方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建的自变量中的回调处理程序<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "要传递给事件处理程序的参数。"
  overload: System.Web.UI.WebControls.GridView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: GridView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发相应事件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制当回发到服务器。"
  remarks: "页面调用<xref:System.Web.UI.Page.RaisePostBackEvent%2A>方法回发事件发生时将引发相应事件<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page.RaisePostBackEvent%2A> 加载和更改通知都完成时之后, 但尚未预呈现发生之前，此调用是在页的生命周期中。 实现此方法创建<xref:System.Web.UI.WebControls.CommandEventArgs>引发的事件的对象。</xref:System.Web.UI.WebControls.CommandEventArgs>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "从其创建的事件自变量<xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref>事件或引发的事件。"
  overload: System.Web.UI.WebControls.GridView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: GridView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.GridView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "使用指定的客户端的浏览器到 Web 服务器控件内容呈现<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象。"
  remarks: "Render 方法用于呈现客户端的浏览器使用指定的服务器控件内容<xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>对象。</xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>用于呈现服务器控件内容在客户端的浏览器上。"
  overload: System.Web.UI.WebControls.GridView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCancelingEdit
  id: RowCancelingEdit
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCancelingEdit
  nameWithType: GridView.RowCancelingEdit
  fullName: System.Web.UI.WebControls.GridView.RowCancelingEdit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在单击取消按钮的编辑模式中某一行，但在行退出编辑模式之前发生。"
  remarks: "单击取消按钮的编辑模式中某一行时，引发 RowCancelingEdit 事件但行退出编辑模式之前。 这使你能够执行自定义的例程，例如停止取消操作，如果它会将行放入某种意外状态，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>对象传递给事件处理方法，使你可以确定当前行的索引，还可以指示应停止取消操作。</xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> 若要停止取消操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowCancelingEdit event to display a cancellation message when the user cancels the update operation of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewRowCancellingEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_3_1.aspx)]\n [!code-vb[GridViewRowCancellingEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_3_1.aspx)]  \n  \n The following example demonstrates how to use the RowCancelingEdit event to cancel the update operation when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_3_2.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_3_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;
    return:
      type: System.Web.UI.WebControls.GridViewCancelEditEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCommand
  id: RowCommand
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCommand
  nameWithType: GridView.RowCommand
  fullName: System.Web.UI.WebControls.GridView.RowCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在单击一个按钮时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "在单击按钮时将引发 RowCommand 事件<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 这使你能够在每次此事件发生时执行的自定义的例程的事件处理方法。       中的按钮<xref:System.Web.UI.WebControls.GridView>控件也可以调用某些控件的内置功能。</xref:System.Web.UI.WebControls.GridView> 若要执行这些操作之一，设置`CommandName`为下表中的值之一的按钮的属性。      |`CommandName`值 |说明 |  |-------------------------|-----------------|  |&quot;取消&quot;|取消编辑操作并返回<xref:System.Web.UI.WebControls.GridView>控件添加到只读模式。</xref:System.Web.UI.WebControls.GridView> 引发<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>事件。 |  |&quot;删除&quot;|删除当前记录。</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 引发<xref:System.Web.UI.WebControls.GridView.RowDeleting>和<xref:System.Web.UI.WebControls.GridView.RowDeleted>事件。 |  |&quot;编辑&quot;|将当前记录置于处于编辑模式。</xref:System.Web.UI.WebControls.GridView.RowDeleted> </xref:System.Web.UI.WebControls.GridView.RowDeleting> 引发<xref:System.Web.UI.WebControls.GridView.RowEditing>事件。 |  |&quot;页&quot;|执行分页操作。</xref:System.Web.UI.WebControls.GridView.RowEditing> 集`CommandArgument`的按钮为&quot;First&quot;，&quot;最后&quot;、&quot;下一步&quot;、&quot;上一步&quot;或执行页编号，以指定的分页操作类型的属性。 引发<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>和<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>事件。 |  |&quot;选择&quot;|选择当前记录。</xref:System.Web.UI.WebControls.GridView.PageIndexChanged> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 引发<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>和<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>事件。 |  |&quot;排序&quot;|排序<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 引发<xref:System.Web.UI.WebControls.GridView.Sorting>和<xref:System.Web.UI.WebControls.GridView.Sorted>事件。 |  |&quot;更新&quot;|更新数据源中的当前记录。</xref:System.Web.UI.WebControls.GridView.Sorted> </xref:System.Web.UI.WebControls.GridView.Sorting> 引发<xref:System.Web.UI.WebControls.GridView.RowUpdating>和<xref:System.Web.UI.WebControls.GridView.RowUpdated>事件。 |      尽管时单击上表中列出的按钮，将引发 RowCommand 事件，建议你使用该操作的表中列出的事件。</xref:System.Web.UI.WebControls.GridView.RowUpdated> </xref:System.Web.UI.WebControls.GridView.RowUpdating>       A<xref:System.Web.UI.WebControls.GridViewCommandEventArgs>对象传递给事件处理方法，使您能够确定的命令名称和被单击按钮的命令参数。</xref:System.Web.UI.WebControls.GridViewCommandEventArgs>      1> [!NOTE]&1;> 若要确定引发事件的行索引，请使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>传递给事件的事件自变量的属性。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> <xref:System.Web.UI.WebControls.ButtonField>类自动填充<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>具有适当的索引值的属性。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.ButtonField> 对于其他命令按钮，你必须手动设置<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>的命令按钮的属性。</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 例如，你可以设置<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>到`<%# Container.DataItemIndex %>`时<xref:System.Web.UI.WebControls.GridView>控件具有未启用分页功能。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how to use the RowCommand event to add the name of a customer from a <xref:System.Web.UI.WebControls.GridView> control to a <xref:System.Web.UI.WebControls.ListBox> control when a row's Add button is clicked.  \n  \n [!code-cs[GridViewRowCommmand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[GridViewRowCommmand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_121_1.aspx)]  \n  \n The following example demonstrates how to use the RowCommand event to update the price of a product when a row's button is clicked. This example has the paging functionality enabled for the <xref:System.Web.UI.WebControls.GridView> control and sets the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property of the <xref:System.Web.UI.WebControls.Button> control to the appropriate row index.  \n  \n [!code-cs[GridViewRowCommmand#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_121_2.aspx)]\n [!code-vb[GridViewRowCommmand#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_121_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;
    return:
      type: System.Web.UI.WebControls.GridViewCommandEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCreated
  id: RowCreated
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCreated
  nameWithType: GridView.RowCreated
  fullName: System.Web.UI.WebControls.GridView.RowCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中创建行时出现<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "之前<xref:System.Web.UI.WebControls.GridView>可以呈现控件，<xref:System.Web.UI.WebControls.GridViewRow>必须为该控件中的每一行创建对象。</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> 将引发 RowCreated 事件中的每一行时<xref:System.Web.UI.WebControls.GridView>创建控件。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，例如将自定义内容添加到行，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewRowEventArgs>对象传递给事件处理方法，使你能够访问正在创建的行的属性。</xref:System.Web.UI.WebControls.GridViewRowEventArgs> 若要访问特定行的单元格中，使用<xref:System.Web.UI.WebControls.TableRow.Cells%2A>属性<xref:System.Web.UI.WebControls.GridViewRowEventArgs>对象。</xref:System.Web.UI.WebControls.GridViewRowEventArgs> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> 你可以确定哪种行类型 （标头行和数据行等） 正在创建使用<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>属性。</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowCreated event to store the index of the row being created in the <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> property of a <xref:System.Web.UI.WebControls.LinkButton> control contained in the row. This enables you to determine the index of the row that contains the <xref:System.Web.UI.WebControls.LinkButton> control when the user clicked the button.  \n  \n [!code-vb[GridViewRowCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_98_1.aspx)]\n [!code-cs[GridViewRowCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_98_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;
    return:
      type: System.Web.UI.WebControls.GridViewRowEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDataBound
  id: RowDataBound
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDataBound
  nameWithType: GridView.RowDataBound
  fullName: System.Web.UI.WebControls.GridView.RowDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "当数据行绑定到中的数据时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "之前<xref:System.Web.UI.WebControls.GridView>可以呈现控件，该控件中的每一行必须绑定到数据源中的记录。</xref:System.Web.UI.WebControls.GridView> 数据行时引发 RowDataBound 事件 (由表示<xref:System.Web.UI.WebControls.GridViewRow>对象) 中的数据绑定<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow> 这使你能够执行自定义的例程，例如修改绑定到行，每次此事件发生时的数据的值的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewRowEventArgs>对象传递给事件处理方法，使你可以访问要绑定的行的属性。</xref:System.Web.UI.WebControls.GridViewRowEventArgs> 若要访问特定行的单元格中，使用<xref:System.Web.UI.WebControls.TableRow.Cells%2A>属性<xref:System.Web.UI.WebControls.GridViewRow>对象中包含<xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A>属性<xref:System.Web.UI.WebControls.GridViewRowEventArgs>对象。</xref:System.Web.UI.WebControls.GridViewRowEventArgs> </xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A> </xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> 你可以确定正在绑定使用的是哪种行类型 （标头行和数据行等）<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>属性。</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how to use the RowDataBound event to modify the value of a field in the data source before it is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewRowDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_141_1.aspx)]\n [!code-vb[GridViewRowDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_141_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;
    return:
      type: System.Web.UI.WebControls.GridViewRowEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDeleted
  id: RowDeleted
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDeleted
  nameWithType: GridView.RowDeleted
  fullName: System.Web.UI.WebControls.GridView.RowDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一行的删除按钮，但之后时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件中删除的行。"
  remarks: "单击某一行的删除按钮，但之后时会引发 RowDeleted 事件<xref:System.Web.UI.WebControls.GridView>控件删除该行。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，例如检查删除操作的结果，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>对象传递给事件处理方法，使您能够确定受影响的行和可能发生的任何异常的数量。</xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A>属性<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>对象。</xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> </xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowDeleted event to check the result of the delete operation. A message is displayed to indicate to the user whether the operation succeeded.  \n  \n [!code-cs[GridViewRowDeleted#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_152_1.aspx)]\n [!code-vb[GridViewRowDeleted#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_152_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;
    return:
      type: System.Web.UI.WebControls.GridViewDeletedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDeleting
  id: RowDeleting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDeleting
  nameWithType: GridView.RowDeleting
  fullName: System.Web.UI.WebControls.GridView.RowDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一行的删除按钮，但之前时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件中删除的行。"
  remarks: "单击某一行的删除按钮后，之前引发 RowDeleting 事件<xref:System.Web.UI.WebControls.GridView>控件删除该行。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，如取消删除操作中，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>对象传递给事件处理方法，使您可以确定当前行的索引，并可以指示是否应取消删除操作。</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> 若要取消删除操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您还可以操作<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A>集合，如有必要之前的值传递到数据源,。</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowDeleting event to cancel the delete operation. The page contains a <xref:System.Web.UI.WebControls.GridView> control that displays a list of customer names and addresses from the AdventureWorksLT database. When the user clicks the **Delete** link for a row, the handler for the RowDeleting event checks the last name of the person displayed in the row that the user is trying to delete. If the last name is \"Beaver\", the delete operation is canceled, and an error message is displayed. For any other name, the delete operation proceeds and the row is deleted.  \n  \n The event handler uses the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.RowIndex%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object to find the row that the user is trying to delete. The example examines the contents of the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection. If the value you want to compare to is a key value, you could examine the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection instead.  \n  \n Rows are deleted from the CustomerAddress table instead of the Customer table in order to keep the example simple. The <xref:System.Web.UI.WebControls.GridView> control shows the result of joining three tables: Customer, Address, and CustomerAddress. When a CustomerAddress row is deleted, the corresponding <xref:System.Web.UI.WebControls.GridView> row disappears. Referential integrity constraints would make the code for an example that actually deletes rows from the Customer table more complex.  \n  \n For information about how to set up the AdventureWorksLT database, see [How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[GridViewRowDeleting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_24_1.aspx)]\n [!code-cs[GridViewRowDeleting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_24_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;
    return:
      type: System.Web.UI.WebControls.GridViewDeleteEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowEditing
  id: RowEditing
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowEditing
  nameWithType: GridView.RowEditing
  fullName: System.Web.UI.WebControls.GridView.RowEditing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一行的编辑按钮，但之前时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件进入编辑模式。"
  remarks: "单击某一行的编辑按钮，但之前引发 RowEditing 事件<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，如取消编辑的操作，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewEditEventArgs>对象传递给事件处理方法，使您可以确定当前行的索引，并可以指示是否应取消编辑操作。</xref:System.Web.UI.WebControls.GridViewEditEventArgs> 若要取消编辑操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowEditing event to put a row in edit mode when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_133_1.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_133_1.aspx)]  \n  \n The following example demonstrates how to use the RowEditing event to cancel the editing operation if the user attempts to edit the record for a company in the United States.  \n  \n [!code-vb[GridViewRowEditing#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_133_2.aspx)]\n [!code-cs[GridViewRowEditing#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_133_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;
    return:
      type: System.Web.UI.WebControls.GridViewEditEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn
  id: RowHeaderColumn
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
  fullName: System.Web.UI.WebControls.GridView.RowHeaderColumn
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要用作的列标题的列名称<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 提供此属性是以使控件的辅助技术设备用户更易于访问。"
  remarks: "在 HTML 中，可以与行或列关联的标头的表。 通过设置指定的方向`scope`属性`<th>`元素。 <xref:System.Web.UI.WebControls.GridView>控件有内置的标题行，可以通过设置显示<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>属性`true`。</xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView> 你还可以选择指定一个标题列 (通常是第一个或最后一列中的<xref:System.Web.UI.WebControls.GridView>控件) 通过设置此属性。</xref:System.Web.UI.WebControls.GridView> 当设置此属性时，对应于指定的字段名称的列中的所有单元格都呈现为`<th scope=&quot;row&quot;>`元素。      1> [!NOTE]&1;> 指定的列都被视为标头，尽管<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>， <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>，和<xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>属性不适用于标题列。</xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> </xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>       默认呈现`<th>`保留了元素，从而文本水平呈现为加粗和居中。 开发人员可以重写的行为`<th>`元素使用级联样式表。      1> [!NOTE]&1;> 此属性仅适用于绑定的字段。 它并不适用于模板字段。"
  example:
  - "The following example demonstrates how to use the RowHeaderColumn property to display a header column in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowHeaderColumn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_213_1.aspx)]\n [!code-cs[GridViewRowHeaderColumn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_213_1.aspx)]"
  syntax:
    content: public virtual string RowHeaderColumn { get; set; }
    return:
      type: System.String
      description: "要用作列标题的列的名称。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.GridView.RowHeaderColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Rows
  id: Rows
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Rows
  nameWithType: GridView.Rows
  fullName: System.Web.UI.WebControls.GridView.Rows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取的集合<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>代表中的数据行的对象<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "行属性 （集合） 用于存储中的数据行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView>控件自动填充行集合通过创建<xref:System.Web.UI.WebControls.GridViewRow>对象数据源中的每个记录，然后将每个对象添加到集合。</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> 若要访问控件中的特定行，或者用于循环访问的行的整个集合，通常使用此属性。      1> [!NOTE]&1;> 仅行与其<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>属性设置为`DataControlRowType.DataRow`行集合中存储。</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> <xref:System.Web.UI.WebControls.GridViewRow>集合中未包含这些对象表示的页眉、 页脚和页导航行。</xref:System.Web.UI.WebControls.GridViewRow>"
  example:
  - "The following example demonstrates how to use the Rows collection to access the row being edited in a <xref:System.Web.UI.WebControls.GridView> control. After a row is updated, a message is displayed to indicate that the update was successful.  \n  \n [!code-cs[GridViewRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_233_1.aspx)]\n [!code-vb[GridViewRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_233_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRowCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowCollection&quot;> </xref>包含中的所有数据行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.Rows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowStyle
  nameWithType: GridView.RowStyle
  fullName: System.Web.UI.WebControls.GridView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，可用于设置中的数据行的外观<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 RowStyle 属性来控制中的数据行的外观<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 当<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>也设置属性，RowStyle 设置之间交替显示的数据行和<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>设置。</xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `RowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<RowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `RowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the RowStyle property to declaratively define the style for the item rows in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_996_1.aspx)]\n [!code-cs[GridViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_996_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的数据行的样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowUpdated
  id: RowUpdated
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowUpdated
  nameWithType: GridView.RowUpdated
  fullName: System.Web.UI.WebControls.GridView.RowUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一行的更新按钮，但之后时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件更新行。"
  remarks: "单击某一行的更新按钮，但之后引发 RowUpdated 事件<xref:System.Web.UI.WebControls.GridView>控件更新行。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，例如检查更新操作的结果，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>对象传递给事件处理方法，使您能够确定受影响的行和可能发生的任何异常的数量。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>属性<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>对象。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> </xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowUpdated event to check the result of the update operation. A message is displayed to indicate to the user whether the operation succeeded.  \n  \n [!code-vb[GridViewRowUpdated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_146_1.aspx)]\n [!code-cs[GridViewRowUpdated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;
    return:
      type: System.Web.UI.WebControls.GridViewUpdatedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowUpdating
  id: RowUpdating
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowUpdating
  nameWithType: GridView.RowUpdating
  fullName: System.Web.UI.WebControls.GridView.RowUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一行的更新按钮，但之前时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件更新行。"
  remarks: "单击某一行的更新按钮后，之前引发 RowUpdating 事件<xref:System.Web.UI.WebControls.GridView>控件更新行。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，如取消更新操作中，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>对象传递给事件处理方法，使您可以确定当前行的索引，并可以指示是否应取消更新操作。</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 若要取消更新操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您还可以操作<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>， <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>，和<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>集合，如有必要之前的值传递到数据源,。</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A> 使用这些集合的常用方法是要进行 HTML 编码的用户提供的才能在数据源中存储的值。 这有助于防止脚本注入式攻击。      1> [!NOTE]&1;> <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>，<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>和<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>自动填充集合时，才<xref:System.Web.UI.WebControls.GridView>通过使用将控件绑定到数据<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>属性。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowUpdating event to update the values in the data source object when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_52_1.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_52_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;
    return:
      type: System.Web.UI.WebControls.GridViewUpdateEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: GridView.SaveControlState()
  fullName: System.Web.UI.WebControls.GridView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "保存的状态中的属性<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件中需要保留，即使&lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "此方法用于保存中的属性的状态<xref:System.Web.UI.WebControls.GridView>控件中需要保留，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>属性设置为`false`。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "返回服务器控件的当前视图状态。 如果没有与控件关联的视图状态，则此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: GridView.SaveViewState()
  fullName: System.Web.UI.WebControls.GridView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载以前保存的视图状态的<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;包含控件保存的视图状态值。"
  overload: System.Web.UI.WebControls.GridView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey
  id: SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref>对象，其中包含中的选定行的数据键值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "当<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>设置属性，<xref:System.Web.UI.WebControls.GridView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>对象使用的指定的字段或字段的值的控件中的每一行。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>随后会将对象添加到控件的<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.DataKey> 通常情况下，<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>属性用于检索<xref:System.Web.UI.WebControls.DataKey>对象中的特定数据行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 但是，如果您只需要检索<xref:System.Web.UI.WebControls.DataKey>对象的当前选定的行中，你只可以使用 SelectedDataKey 属性作为快捷方式。</xref:System.Web.UI.WebControls.DataKey>      1> [!NOTE]&1;> 这是与检索相同<xref:System.Web.UI.WebControls.DataKey>由指定索引处对象<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性从<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> </xref:System.Web.UI.WebControls.DataKey> 你还可以使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性直接检索当前所选行的数据密钥值。</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>       如果要创建<xref:System.Web.UI.WebControls.ControlParameter>对象，并想要访问的第一个字段以外的键字段，请使用中的索引的 SelectedDataKey 属性<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>属性<xref:System.Web.UI.WebControls.ControlParameter>对象。</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter> 一个示例所示。"
  example:
  - "The following example demonstrates how to use the SelectedDataKey property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelectedDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[GridViewSelectedDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_93_1.aspx)]  \n  \n The following example demonstrates how to use the second key field as a parameter in a master/detail scenario. A <xref:System.Web.UI.WebControls.GridView> control is used to display records from the Order Details table of the Northwind database. When a record is selected in the <xref:System.Web.UI.WebControls.GridView> control, the details of the product from the Products table are displayed in a <xref:System.Web.UI.WebControls.DetailsView> control. ProductID is the second key name in the <xref:System.Web.UI.WebControls.GridView> control. To access the second key, the value of GridView1.SelectedDataKey[1] is used as the <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> for the <xref:System.Web.UI.WebControls.ControlParameter> object of the <xref:System.Web.UI.WebControls.SqlDataSource> control of the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[GridViewSelectedDataKeyIndex#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_93_2.aspx)]\n [!code-vb[GridViewSelectedDataKeyIndex#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_93_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref>中所选行的<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示当前选择任何行。"
  overload: System.Web.UI.WebControls.GridView.SelectedDataKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "中指定任何数据密钥<xref:System.Web.UI.WebControls.GridView.DataKeyNames*>属性。</xref:System.Web.UI.WebControls.GridView.DataKeyNames*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndex
  id: SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置在所选行的索引<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 SelectedIndex 属性来确定在当前所选行的索引<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 你还可以使用此属性以编程方式选择控件中的行。 若要清除行的选择，请将此属性设置为-1。 可以通过使用自定义当前所选行的外观<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 若要访问当前选定的行，请使用<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>"
  example:
  - "The following example demonstrates how to use the SelectedIndex property to select the second row in a <xref:System.Web.UI.WebControls.GridView> control when the control is initially displayed.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_806_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_806_1.aspx)]"
  syntax:
    content: public virtual int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "在所选行的从零开始的索引<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 默认值为-1，指示当前选择任何行。"
  overload: System.Web.UI.WebControls.GridView.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "SelectedIndex 属性设置为小于-1 的值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  id: SelectedIndexChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndexChanged
  nameWithType: GridView.SelectedIndexChanged
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一行的选择按钮，但之后时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件处理选择操作。"
  remarks: "单击某一行的选择按钮，但之后引发 SelectedIndexChanged 事件<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，例如使用当前选定的行中，更新状态标签，每次此事件发生时的事件处理方法。       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the SelectedIndexChanged event to display the name of the customer in the selected row of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public event EventHandler SelectedIndexChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  id: SelectedIndexChanging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndexChanging
  nameWithType: GridView.SelectedIndexChanging
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击某一行的选择按钮，但之前时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件处理选择操作。"
  remarks: "单击某一行的选择按钮后，之前引发 SelectedIndexChanging 事件<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，如取消所选内容的操作，每次此事件发生时的事件处理方法。      1> [!NOTE]&1;> 以编程方式设置时，将不会引发此事件<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>       A<xref:System.Web.UI.WebControls.GridViewSelectEventArgs>对象传递给事件处理方法，使您可以确定用户选择的行的索引，并可以指示是否应取消了选择操作。</xref:System.Web.UI.WebControls.GridViewSelectEventArgs> 若要取消选择操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewSelectEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.GridViewSelectEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the SelectedIndexChanging event to cancel a select operation.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_37_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;
    return:
      type: System.Web.UI.WebControls.GridViewSelectEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  id: SelectedPersistedDataKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中的持久化选定项的数据密钥值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "中的持久化选定项的数据键值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示当前未选定任何项。"
  overload: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedRow
  id: SelectedRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedRow
  nameWithType: GridView.SelectedRow
  fullName: System.Web.UI.WebControls.GridView.SelectedRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>表示控件中的所选的行的对象。"
  remarks: "在选择行时<xref:System.Web.UI.WebControls.GridView>控制，请使用 SelectedRow 属性来检索<xref:System.Web.UI.WebControls.GridViewRow>表示该行的对象。</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 这是与检索相同<xref:System.Web.UI.WebControls.GridViewRow>由指定索引处对象<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性从<xref:System.Web.UI.WebControls.GridView.Rows%2A>集合。</xref:System.Web.UI.WebControls.GridView.Rows%2A> </xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> </xref:System.Web.UI.WebControls.GridViewRow>       然后可以使用此对象访问所选行的属性。"
  example:
  - "The following example demonstrates how to use the SelectedRow property to access the properties of the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the selected row in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_482_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_482_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> ，表示控件中的所选的行。"
  overload: System.Web.UI.WebControls.GridView.SelectedRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle
  id: SelectedRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
  fullName: System.Web.UI.WebControls.GridView.SelectedRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，可用于设置中所选行的外观<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "使用 SelectedRowStyle 属性来控制在所选行的外观<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `SelectedRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -嵌套`<SelectedRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `SelectedRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the SelectedRowStyle property to define a custom style for the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_603_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_603_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，表示在所选行的样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.SelectedRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: GridView.SelectedValue
  fullName: System.Web.UI.WebControls.GridView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取中所选行的数据键值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "当<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性设置以逗号分隔的表示数据源的主键值的字段名称列表<xref:System.Web.UI.WebControls.GridView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>对象使用的指定的字段或字段的值的控件中的每一行。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>随后会将对象添加到控件的<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.DataKey> 通常情况下，<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>属性用于检索<xref:System.Web.UI.WebControls.DataKey>对象中的特定数据行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 但是，如果您只需要检索<xref:System.Web.UI.WebControls.DataKey>对象的当前选定的行中，你可以只使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>作为快捷方式的属性。</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> </xref:System.Web.UI.WebControls.DataKey> 为更快捷的方式，可以直接使用 SelectedValue 属性来确定所选行的第一个键字段的数据键值。       如果要创建<xref:System.Web.UI.WebControls.ControlParameter>对象并且想要访问的键字段以外的第一个字段，使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>属性。</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> </xref:System.Web.UI.WebControls.ControlParameter> 有关示例，请参阅<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>。</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>"
  example:
  - "The following example demonstrates how to use the SelectedValue property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_553_1.aspx)]\n [!code-vb[GridViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_553_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "数据中所选行的键值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  id: SelectRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectRow(Int32)
  nameWithType: GridView.SelectRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SelectRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "选择要编辑中的行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "此方法将引发<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>事件。</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>"
  syntax:
    content: public void SelectRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "要编辑的行索引。"
  overload: System.Web.UI.WebControls.GridView.SelectRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  id: SetEditRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SetEditRow(Int32)
  nameWithType: GridView.SetEditRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetEditRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将行处于编辑模式中<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件通过使用指定的行索引。"
  remarks: "此方法将引发<xref:System.Web.UI.WebControls.GridView.RowEditing>事件。</xref:System.Web.UI.WebControls.GridView.RowEditing>"
  syntax:
    content: public void SetEditRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "要编辑的行索引。"
  overload: System.Web.UI.WebControls.GridView.SetEditRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: GridView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "设置的页索引<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件使用的行索引。"
  remarks: "此方法将引发<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.GridView.PageIndexChanged>"
  syntax:
    content: public void SetPageIndex (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "要编辑的页的行索引。"
  overload: System.Web.UI.WebControls.GridView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowFooter
  id: ShowFooter
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowFooter
  nameWithType: GridView.ShowFooter
  fullName: System.Web.UI.WebControls.GridView.ShowFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示在显示页脚行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "ShowFooter 属性用于指定是否<xref:System.Web.UI.WebControls.GridView>控件显示页脚行。</xref:System.Web.UI.WebControls.GridView> 若要控制页脚行的外观，使用<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>"
  example:
  - "The following example demonstrates how to use the ShowFooter property to display the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1216_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1216_1.aspx)]"
  syntax:
    content: public virtual bool ShowFooter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要显示页脚行中;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.ShowFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowHeader
  nameWithType: GridView.ShowHeader
  fullName: System.Web.UI.WebControls.GridView.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示在显示标头行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "ShowHeader 属性用于指定是否<xref:System.Web.UI.WebControls.GridView>控件显示的标题行。</xref:System.Web.UI.WebControls.GridView> 若要控制标头行的外观，使用<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>属性。</xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>"
  example:
  - "The following example demonstrates how to use the ShowHeader property to display the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_292_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_292_1.aspx)]"
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要显示标头行中;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  id: ShowHeaderWhenEmpty
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
  fullName: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否中的列标题<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>列不包含数据时，控件是否可见。"
  syntax:
    content: public virtual bool ShowHeaderWhenEmpty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果标题是否可见;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  id: Sort(System.String,System.Web.UI.WebControls.SortDirection)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sort(String,SortDirection)
  nameWithType: GridView.Sort(String,SortDirection)
  fullName: System.Web.UI.WebControls.GridView.Sort(String,SortDirection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "排序<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件基于指定的排序表达式和方向。"
  remarks: "排序方法用于以编程方式排序<xref:System.Web.UI.WebControls.GridView>控制是通过使用指定的排序表达式和方向。</xref:System.Web.UI.WebControls.GridView> 排序表达式指定的列或包含要排序的列。 若要对多个列进行排序，创建包含以逗号分隔的字段名称列表的排序表达式。 排序方向指示是否在升序或降序执行排序。 此方法通常用时需要进行排序，<xref:System.Web.UI.WebControls.GridView>控件从受控制，如从一个不同的控件在页上。</xref:System.Web.UI.WebControls.GridView> 此方法通常还用于以编程方式设置的默认排序顺序<xref:System.Web.UI.WebControls.GridView>控制首次呈现时。</xref:System.Web.UI.WebControls.GridView> 调用此方法也会引发<xref:System.Web.UI.WebControls.GridView.Sorted>和<xref:System.Web.UI.WebControls.GridView.Sorting>事件。</xref:System.Web.UI.WebControls.GridView.Sorting> </xref:System.Web.UI.WebControls.GridView.Sorted>"
  example:
  - "The following example demonstrates how to use the Sort method to programmatically sort the <xref:System.Web.UI.WebControls.GridView> control by multiple columns.  \n  \n [!code-cs[GridViewSort#1](~/add/codesnippet/csharp/73688195-5df0-44a7-842d-_1.aspx)]\n [!code-vb[GridViewSort#1](~/add/codesnippet/visualbasic/73688195-5df0-44a7-842d-_1.aspx)]"
  syntax:
    content: public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);
    parameters:
    - id: sortExpression
      type: System.String
      description: "与要排序的排序表达式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
    - id: sortDirection
      type: System.Web.UI.WebControls.SortDirection
      description: "之一<xref href=&quot;System.Web.UI.WebControls.SortDirection&quot;></xref>值。"
  overload: System.Web.UI.WebControls.GridView.Sort*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控件绑定到数据源控件，但<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>该键相关联的数据源是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortDirection
  id: SortDirection
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortDirection
  nameWithType: GridView.SortDirection
  fullName: System.Web.UI.WebControls.GridView.SortDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取正在排序的列的排序方向。"
  remarks: "SortDirection 属性用于确定是否按升序或降序排序正在排序的列。      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.GridView>控件有内置的排序功能自动设置此属性。</xref:System.Web.UI.WebControls.GridView> 仅在需要以编程方式确定排序方向，或当你要添加到你自己自定义排序功能时，此属性一般用于<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the SortDirection property to programmatically determine the sort direction of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_871_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_871_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "之一<xref href=&quot;System.Web.UI.WebControls.SortDirection&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_SortDirection.Ascending&quot; name=&quot;SortDirection.Ascending&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sorted
  id: Sorted
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sorted
  nameWithType: GridView.Sorted
  fullName: System.Web.UI.WebControls.GridView.Sorted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击超链接列进行排序，但之后时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件处理排序操作。"
  remarks: "单击超链接列进行排序，但之后时会引发 Sorted 事件<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。</xref:System.Web.UI.WebControls.GridView> 这使你能够在每次此事件发生时执行的自定义的例程，如自定义排序的事件处理方法。       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the Sorted event to display the name of the column being sorted.  \n  \n [!code-vb[GridViewSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_149_1.aspx)]\n [!code-cs[GridViewSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_149_1.aspx)]"
  syntax:
    content: public event EventHandler Sorted;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  id: SortedAscendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的 CSS 样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>列时对列进行排序以升序。"
  remarks: "当此属性设置为`true`，样式应用于列中的单元格上时数据按升序排序。 例如，当升序排序类型时用特定的颜色突出显示列。"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应用了样式为<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制当数据列进行排序以升序; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  id: SortedAscendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要应用到的 CSS 样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>列标题对列排序以升序时。"
  remarks: "当此属性设置为`true`，指示排序方向箭头将显示在列标题。"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应用了样式为<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>标题时的列是以升序排序; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  id: SortedDescendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>时对列进行排序以降序顺序的列。"
  remarks: "当此属性设置为`true`，样式应用于列中的单元格上时数据按降序排列。 例如，当降序排序类型时使用特定的颜色突出显示列。"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应用了样式为<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>列为按降序排序; 否则为时<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  id: SortedDescendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要应用到的样式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>列标题对列排序以降序顺序时。"
  remarks: "当此属性设置为`true`，指示排序方向箭头将显示在列标题。"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应用了样式为<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>标题列时按降序排序; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortExpression
  id: SortExpression
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortExpression
  nameWithType: GridView.SortExpression
  fullName: System.Web.UI.WebControls.GridView.SortExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取关联与待排序的列的排序表达式。"
  remarks: "SortExpression 属性用于确定与待排序的列关联的排序表达式。      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.GridView>控件有内置的排序功能自动设置此属性。</xref:System.Web.UI.WebControls.GridView> 此属性一般用于仅在需要以编程方式确定的列或列进行排序时或当你要添加到你自己自定义排序功能<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>       当多个列进行排序时，则此属性包含逗号分隔的作为排序依据的字段列表。"
  example:
  - "The following example demonstrates how to use the SortExpression property to determine the name of the column being sorted.  \n  \n [!code-cs[GridViewAllowSortingColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_14_1.aspx)]\n [!code-vb[GridViewAllowSortingColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_14_1.aspx)]"
  syntax:
    content: public virtual string SortExpression { get; }
    return:
      type: System.String
      description: "与要排序的列关联的排序表达式。"
  overload: System.Web.UI.WebControls.GridView.SortExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sorting
  id: Sorting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sorting
  nameWithType: GridView.Sorting
  fullName: System.Web.UI.WebControls.GridView.Sorting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "单击超链接列进行排序，但之前时发生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件处理排序操作。"
  remarks: "单击超链接列进行排序，但之前时会引发 Sorting 事件<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。</xref:System.Web.UI.WebControls.GridView> 这使你能够执行自定义的例程，如取消排序操作，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.GridViewSortEventArgs>对象传递给事件处理方法，使您可以确定列的排序表达式，并可以指示是否应取消了选择操作。</xref:System.Web.UI.WebControls.GridViewSortEventArgs> 若要取消选择操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewSortEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.GridViewSortEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关如何以编程方式启动排序操作的信息，请参阅<xref:System.Web.UI.WebControls.GridView.Sort%2A>方法。</xref:System.Web.UI.WebControls.GridView.Sort%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the Sorting event to perform the sorting functionality when the <xref:System.Web.UI.WebControls.GridView> control is bound to a <xref:System.Data.DataTable> object by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically.  \n  \n [!code-cs[GridViewSorting#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_126_1.aspx)]\n [!code-vb[GridViewSorting#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_126_1.aspx)]  \n  \n The following example demonstrates how to use the Sorting event to cancel a sorting operation.  \n  \n [!code-vb[GridViewSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_126_2.aspx)]\n [!code-cs[GridViewSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_126_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;
    return:
      type: System.Web.UI.WebControls.GridViewSortEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回的结果以控件为目标的回调事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView>控件实现<xref:System.Web.UI.ICallbackEventHandler>接口并使用<xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>以异步方式检索数据和<xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A>方法来检索到的数据返回到控件。</xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> </xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "回调的结果。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建中的回调处理程序的自变量<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>"
  remarks: "ICallbackEventHandler.RaiseCallbackEvent 是由一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建的自变量中的回调处理程序<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "要传递给事件处理程序的参数。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  id: System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取用于唯一标识每个实例的数据绑定控件，当 ASP.NET 生成的数据值<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.IDataKeysControl>接口。</xref:System.Web.UI.IDataKeysControl> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "用于唯一标识每个实例的数据绑定控件，当 ASP.NET 生成的数据值<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发相应事件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制当回发到服务器。"
  remarks: "页面调用<xref:System.Web.UI.Page.RaisePostBackEvent%2A>方法来引发相应事件的回发事件发生<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page.RaisePostBackEvent%2A> 加载和更改通知都完成时之后, 但尚未预呈现发生之前，此调用是在页的生命周期中。 实现此方法创建<xref:System.Web.UI.WebControls.CommandEventArgs>事件或引发的事件的对象。</xref:System.Web.UI.WebControls.CommandEventArgs>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "从其创建的事件自变量<xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref>事件或引发的事件。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建执行排序操作的按钮的回调脚本。"
  remarks: "ICallbackContainer.GetCallbackScript 是由一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建执行排序操作的按钮的回调脚本。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "要为其创建回调脚本按钮控件中。"
    - id: argument
      type: System.String
      description: "要传递到回调脚本的参数。"
    return:
      type: System.String
      description: "执行排序操作的按钮回调脚本。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数据绑定控件中显示的项的主键字段的名称。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       此属性提供访问权限<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 通过公开<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "包含的主键字段中显示的项的名称的数组<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到该数据绑定控件的数据源控件公开的表。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       如果数据源包含多个数据源，使用此属性设置的特定数据表、 集合或控件绑定到其他数据。 例如，如果数据源是<xref:System.Data.DataSet>实例，其中包含多个表，你可以指定要使用此属性绑定到控件的表。</xref:System.Data.DataSet>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "要将绑定到数据绑定控件的数据源控件公开的表。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数据源对象从其数据绑定控件中检索的数据的项的列表。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "数据绑定控件使用数据源对象。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数据绑定控件从其检索的数据的项的列表的数据源的 ID。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "数据绑定控件从中检索数据项目的数据源的 ID。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数据源对象从其数据绑定控件中检索的数据的项的列表。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "数据源对象从其数据绑定控件中检索的数据的项的列表"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  id: System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置其值将追加到的数据字段的名称<xref:System.Web.UI.Control.ClientID*>要唯一地标识每个实例的数据绑定控件的属性值。</xref:System.Web.UI.Control.ClientID*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundListControl>接口。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }
    return:
      type: System.String[]
      description: "其值用于唯一标识的数据绑定控件的每个实例，当 ASP.NET 生成的数据字段的名称<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  id: System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取表示的对象的集合<xref:System.Web.UI.WebControls.GridView.DataKeys*>数据绑定控件中的值。</xref:System.Web.UI.WebControls.GridView.DataKeys*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundListControl>接口。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "包含的数据绑定控件中的每一行的数据键的数组。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  id: System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，指示行的选择基于索引或数据密钥值。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundListControl>接口。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果行选择基于数据密钥值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  id: System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取包含的数据绑定控件中所选行的数据密钥值的对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundListControl>接口。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "所选行的数据密钥值。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  id: System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数据绑定控件中的所选行的索引。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundListControl>接口。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "数据绑定控件中所选行的索引。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  id: System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置自动生成的数据绑定控件以供 ASP.NET 动态数据列的控件。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.GridView>实例被强制转换为<xref:System.Web.UI.WebControls.IFieldControl>接口。</xref:System.Web.UI.WebControls.IFieldControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 动态数据支持此属性。"
  syntax:
    content: System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "控件自动生成的数据绑定控件的列。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  id: System#Web#UI#WebControls#IPersistedSelector#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.WebControls.IPersistedSelector.DataKey%2A?displayProperty=fullName&gt;。"
  remarks: "你可以指定如何选的行时保持<xref:System.Web.UI.WebControls.GridView>控件是否处于分页模式。</xref:System.Web.UI.WebControls.GridView> 默认情况下，行选择基于行索引。 每一页上选择同一行 （例如，第三行）。 或者，你可以启用基于所选行的数据键的持久性。 在这种情况下，如果你选择第 3 行第 1 页上的，并且你将移动到第 2 页，第 2 页上不选择任何行。 如果你将移回第 1 页，第 3 行仍处于选中状态。 若要启用此功能，请将此属性设置为`true`。      1> [!NOTE] 1> 在版本 2.0、 3.0 和 3.5 的 ASP.NET 中，行选择基于仅行索引。 默认情况下，ASP.NET 4 中的行选择基于为了向后兼容的索引。"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "数据绑定控件中持久化选定的记录数据密钥值。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建<xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref>表示指定的按钮控件的回发行为的对象。"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "要为其创建回调脚本按钮控件中。"
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> ，它表示指定的按钮控件的回发行为。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> buttonControl </code>参数包含<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>buttonControl</code>将导致验证，并正尝试进行回发到同一个容器，它会验证。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TagKey
  nameWithType: GridView.TagKey
  fullName: System.Web.UI.WebControls.GridView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "TagKey 属性允许要写入的相应 HTML 标记的输出流<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 当<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>属性设置为`true`，此属性返回`HtmlTextWriterTag.Div`; 否则为此属性返回`HtmlTextWriterTag.Table`。</xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.GridView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
  fullName: System.Web.UI.WebControls.GridView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>对象，表示中的顶部页导航行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件。"
  remarks: "启用分页后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，一个称为的页导航行附加行会自动显示在<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 页导航行包含允许用户导航至其他页面，可以显示在顶部、 底部，或同时的顶部和底部的控件的控件。 使用 TopPagerRow 属性以编程方式访问<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的顶部页导航行<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      1> [!NOTE]&1;> TopPagerRow 属性是之后才可用<xref:System.Web.UI.WebControls.GridView>控件创建中的顶部页导航行<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       当你需要以编程方式操作顶部页导航行，例如在添加自定义内容时，通常使用此属性。 之后，必须执行对 TopPagerRow 属性进行任何修改<xref:System.Web.UI.WebControls.GridView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.GridView>控件将覆盖所有更改。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the TopPagerRow property to access the top pager row in a <xref:System.Web.UI.WebControls.GridView> control. The TopPagerRow property is used to retrieve a <xref:System.Web.UI.WebControls.DropDownList> control from the pager row.  \n  \n [!code-vb[GridViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_315_1.aspx)]\n [!code-cs[GridViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_315_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> ，表示控件中的顶部页导航行。"
  overload: System.Web.UI.WebControls.GridView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: GridView.TrackViewState()
  fullName: System.Web.UI.WebControls.GridView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "跟踪视图状态更改为<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制以便将它们存储在控件的<xref href=&quot;System.Web.UI.StateBag&quot;></xref>对象。 此对象是可通过访问&lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt;属性。"
  remarks: "重写此方法以将标记控件的视图状态的一部分开始对控件的跟踪并保存更改的起始点。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
  fullName: System.Web.UI.WebControls.GridView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要调用才能更新数据的方法的名称。"
  remarks: "设置此属性会导致模型绑定要用作数据绑定方法。       在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "方法的名称。"
  overload: System.Web.UI.WebControls.GridView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  id: UpdateRow(System.Int32,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UpdateRow(Int32,Boolean)
  nameWithType: GridView.UpdateRow(Int32,Boolean)
  fullName: System.Web.UI.WebControls.GridView.UpdateRow(Int32,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新使用的行的字段值的指定的行索引处的记录。"
  remarks: "使用 UpdateRow 方法以编程方式更新数据源中的指定索引处的记录。 当你需要更新来自外部的记录通常使用此方法<xref:System.Web.UI.WebControls.GridView>控制，例如页上的其他控件。</xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 可以调用此方法仅对当前处于编辑模式的行或行包含双向数据绑定输入的控件。 双向绑定表达式的详细信息，请参阅[绑定到数据库](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。       若要指定是否在执行更新操作之前执行页验证，使用`causesValidation`参数。 调用此方法也会引发<xref:System.Web.UI.WebControls.GridView.RowUpdated>和<xref:System.Web.UI.WebControls.GridView.RowUpdating>事件。</xref:System.Web.UI.WebControls.GridView.RowUpdating> </xref:System.Web.UI.WebControls.GridView.RowUpdated>"
  example:
  - "The following example demonstrates how to use the UpdateRow method to programmatically update a record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewUpdateRow#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_0_1.aspx)]\n [!code-cs[GridViewUpdateRow#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_0_1.aspx)]"
  syntax:
    content: public virtual void UpdateRow (int rowIndex, bool causesValidation);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "要更新的行索引。"
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>当调用此方法时; 执行页验证否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.UpdateRow*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控件绑定到数据源控件，但<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>关联的数据源是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  id: UseAccessibleHeader
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
  fullName: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件呈现其标头中可访问的格式。 提供此属性是以使控件的辅助技术设备用户更易于访问。"
  remarks: "UseAccessibleHeader 属性用于指定是否<xref:System.Web.UI.WebControls.GridView>控件呈现格式可访问其标题行。</xref:System.Web.UI.WebControls.GridView> 提供此属性是以使控件的辅助技术设备用户更易于访问。 默认情况下，此属性的值是`true`和使用呈现该控件的标题`<th>`表头单元格标记。 此外，`scope=&quot;col&quot;`属性添加到表头以指定标头适用于列中的所有单元格。 默认呈现`<th>`保留了元素，从而文本水平呈现为加粗和居中。 开发人员可以重写的样式`<th>`元素使用级联样式表。       如果此属性的值是`false`，使用呈现该控件的标题`<td>`表单元格标记。"
  example:
  - "The following example demonstrates how to use the UseAccessibleHeader property to disable the accessible header.  \n  \n [!code-vb[GridViewUseAccessibleHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1058_1.aspx)]\n [!code-cs[GridViewUseAccessibleHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1058_1.aspx)]"
  syntax:
    content: public virtual bool UseAccessibleHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件呈现其标头中可访问的格式; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.UseAccessibleHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount
  id: VirtualItemCount
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
  fullName: System.Web.UI.WebControls.GridView.VirtualItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或数据源中设置的虚拟项数<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>使用自定义分页时，将控件绑定到。"
  remarks: "使用此属性仅当的值<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>属性是`true`。</xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>属性。</xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>"
  syntax:
    content: public virtual int VirtualItemCount { get; set; }
    return:
      type: System.Int32
      description: "数据中的虚拟项数源<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>使用自定义分页时，将控件绑定到。"
  overload: System.Web.UI.WebControls.GridView.VirtualItemCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.GridView.#ctor
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridView()
  nameWithType: GridView.GridView()
  fullName: System.Web.UI.WebControls.GridView.GridView()
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
  fullName: System.Web.UI.WebControls.GridView.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.GridView.AllowPaging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowPaging
  nameWithType: GridView.AllowPaging
  fullName: System.Web.UI.WebControls.GridView.AllowPaging
- uid: System.Web.UI.WebControls.GridView.AllowSorting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowSorting
  nameWithType: GridView.AllowSorting
  fullName: System.Web.UI.WebControls.GridView.AllowSorting
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.GridView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateColumns
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
- uid: System.Web.UI.WebControls.GridView.BackImageUrl
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
  fullName: System.Web.UI.WebControls.GridView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
  fullName: System.Web.UI.WebControls.GridView.BottomPagerRow
- uid: System.Web.UI.WebControls.GridViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRow
  nameWithType: GridViewRow
  fullName: System.Web.UI.WebControls.GridViewRow
- uid: System.Web.UI.WebControls.GridView.Caption
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Caption
  nameWithType: GridView.Caption
  fullName: System.Web.UI.WebControls.GridView.Caption
- uid: System.Web.UI.WebControls.GridView.CaptionAlign
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
  fullName: System.Web.UI.WebControls.GridView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.GridView.CellPadding
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellPadding
  nameWithType: GridView.CellPadding
  fullName: System.Web.UI.WebControls.GridView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.GridView.CellSpacing
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellSpacing
  nameWithType: GridView.CellSpacing
  fullName: System.Web.UI.WebControls.GridView.CellSpacing
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.DataKeyArray
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKeyArray
  nameWithType: DataKeyArray
  fullName: System.Web.UI.WebControls.DataKeyArray
- uid: System.Web.UI.WebControls.GridView.Columns
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Columns
  nameWithType: GridView.Columns
  fullName: System.Web.UI.WebControls.GridView.Columns
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
  fullName: System.Web.UI.WebControls.GridView.ColumnsGenerator
- uid: System.Web.UI.IAutoFieldGenerator
  parent: System.Web.UI
  isExternal: false
  name: IAutoFieldGenerator
  nameWithType: IAutoFieldGenerator
  fullName: System.Web.UI.IAutoFieldGenerator
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  nameWithType: GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
- uid: System.Web.UI.WebControls.AutoGeneratedField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedField
  nameWithType: AutoGeneratedField
  fullName: System.Web.UI.WebControls.AutoGeneratedField
- uid: System.Web.UI.WebControls.AutoGeneratedFieldProperties
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedFieldProperties
  nameWithType: AutoGeneratedFieldProperties
  fullName: System.Web.UI.WebControls.AutoGeneratedFieldProperties
- uid: System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: GridView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.GridView.CreateChildTable
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildTable()
  nameWithType: GridView.CreateChildTable()
  fullName: System.Web.UI.WebControls.GridView.CreateChildTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateColumns(PagedDataSource,Boolean)
  nameWithType: GridView.CreateColumns(PagedDataSource,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateColumns(PagedDataSource,Boolean)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: GridView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.GridView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: GridView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  nameWithType: GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.GridView.DataBind
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataBind()
  nameWithType: GridView.DataBind()
  fullName: System.Web.UI.WebControls.GridView.DataBind()
- uid: System.Web.UI.WebControls.GridView.DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.DataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeys
  nameWithType: GridView.DataKeys
  fullName: System.Web.UI.WebControls.GridView.DataKeys
- uid: System.Web.UI.WebControls.GridView.DeleteMethod
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
  fullName: System.Web.UI.WebControls.GridView.DeleteMethod
- uid: System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteRow(Int32)
  nameWithType: GridView.DeleteRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.DeleteRow(Int32)
- uid: System.Web.UI.WebControls.GridView.EditIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditIndex
  nameWithType: GridView.EditIndex
  fullName: System.Web.UI.WebControls.GridView.EditIndex
- uid: System.Web.UI.WebControls.GridView.EditRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
  fullName: System.Web.UI.WebControls.GridView.EditRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.GridView.EmptyDataTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.GridView.EmptyDataText
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
  fullName: System.Web.UI.WebControls.GridView.EmptyDataText
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
  fullName: System.Web.UI.WebControls.GridView.EnableModelValidation
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
  fullName: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  nameWithType: GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.GridView.FooterRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterRow
  nameWithType: GridView.FooterRow
  fullName: System.Web.UI.WebControls.GridView.FooterRow
- uid: System.Web.UI.WebControls.GridView.FooterStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterStyle
  nameWithType: GridView.FooterStyle
  fullName: System.Web.UI.WebControls.GridView.FooterStyle
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: GridView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.GetCallbackResult()
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.GridView.GridLines
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridLines
  nameWithType: GridView.GridLines
  fullName: System.Web.UI.WebControls.GridView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.GridView.HeaderRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderRow
  nameWithType: GridView.HeaderRow
  fullName: System.Web.UI.WebControls.GridView.HeaderRow
- uid: System.Web.UI.WebControls.GridView.HeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
  fullName: System.Web.UI.WebControls.GridView.HeaderStyle
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
  fullName: System.Web.UI.WebControls.GridView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializePager(GridViewRow,Int32,PagedDataSource)
  nameWithType: GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  fullName: System.Web.UI.WebControls.GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
- uid: System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializeRow(GridViewRow,DataControlField[])
  nameWithType: GridView.InitializeRow(GridViewRow,DataControlField[])
  fullName: System.Web.UI.WebControls.GridView.InitializeRow(GridViewRow,DataControlField[])
- uid: System.Web.UI.WebControls.DataControlField[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DataControlField
    name: DataControlField
    nameWithType: DataControlField
    fullName: DataControlField[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: GridView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.GridView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: GridView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: GridView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: GridView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataPropertyChanged()
  nameWithType: GridView.OnDataPropertyChanged()
  fullName: System.Web.UI.WebControls.GridView.OnDataPropertyChanged()
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: GridView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(Object,EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: GridView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: GridView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanging(GridViewPageEventArgs)
  nameWithType: GridView.OnPageIndexChanging(GridViewPageEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanging(GridViewPageEventArgs)
- uid: System.Web.UI.WebControls.GridViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewPageEventArgs
  nameWithType: GridViewPageEventArgs
  fullName: System.Web.UI.WebControls.GridViewPageEventArgs
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: GridView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPagePreLoad(Object,EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: GridView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCancelingEdit(GridViewCancelEditEventArgs)
  nameWithType: GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
- uid: System.Web.UI.WebControls.GridViewCancelEditEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCancelEditEventArgs
  nameWithType: GridViewCancelEditEventArgs
  fullName: System.Web.UI.WebControls.GridViewCancelEditEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCommand(GridViewCommandEventArgs)
  nameWithType: GridView.OnRowCommand(GridViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCommand(GridViewCommandEventArgs)
- uid: System.Web.UI.WebControls.GridViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCommandEventArgs
  nameWithType: GridViewCommandEventArgs
  fullName: System.Web.UI.WebControls.GridViewCommandEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCreated(GridViewRowEventArgs)
  nameWithType: GridView.OnRowCreated(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCreated(GridViewRowEventArgs)
- uid: System.Web.UI.WebControls.GridViewRowEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowEventArgs
  nameWithType: GridViewRowEventArgs
  fullName: System.Web.UI.WebControls.GridViewRowEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDataBound(GridViewRowEventArgs)
  nameWithType: GridView.OnRowDataBound(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs)
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleted(GridViewDeletedEventArgs)
  nameWithType: GridView.OnRowDeleted(GridViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleted(GridViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.GridViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeletedEventArgs
  nameWithType: GridViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.GridViewDeletedEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleting(GridViewDeleteEventArgs)
  nameWithType: GridView.OnRowDeleting(GridViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.GridViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeleteEventArgs
  nameWithType: GridViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.GridViewDeleteEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowEditing(GridViewEditEventArgs)
  nameWithType: GridView.OnRowEditing(GridViewEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowEditing(GridViewEditEventArgs)
- uid: System.Web.UI.WebControls.GridViewEditEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewEditEventArgs
  nameWithType: GridViewEditEventArgs
  fullName: System.Web.UI.WebControls.GridViewEditEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdated(GridViewUpdatedEventArgs)
  nameWithType: GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdated(GridViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdatedEventArgs
  nameWithType: GridViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdating(GridViewUpdateEventArgs)
  nameWithType: GridView.OnRowUpdating(GridViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdating(GridViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.GridViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdateEventArgs
  nameWithType: GridViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.GridViewUpdateEventArgs
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: GridView.OnSelectedIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanging(GridViewSelectEventArgs)
  nameWithType: GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
- uid: System.Web.UI.WebControls.GridViewSelectEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSelectEventArgs
  nameWithType: GridViewSelectEventArgs
  fullName: System.Web.UI.WebControls.GridViewSelectEventArgs
- uid: System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorted(EventArgs)
  nameWithType: GridView.OnSorted(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorted(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorting(GridViewSortEventArgs)
  nameWithType: GridView.OnSorting(GridViewSortEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorting(GridViewSortEventArgs)
- uid: System.Web.UI.WebControls.GridViewSortEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSortEventArgs
  nameWithType: GridViewSortEventArgs
  fullName: System.Web.UI.WebControls.GridViewSortEventArgs
- uid: System.Web.UI.WebControls.GridView.PageCount
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageCount
  nameWithType: GridView.PageCount
  fullName: System.Web.UI.WebControls.GridView.PageCount
- uid: System.Web.UI.WebControls.GridView.PageIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndex
  nameWithType: GridView.PageIndex
  fullName: System.Web.UI.WebControls.GridView.PageIndex
- uid: System.Web.UI.WebControls.GridView.PageIndexChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndexChanged
  nameWithType: GridView.PageIndexChanged
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.GridView.PageIndexChanging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndexChanging
  nameWithType: GridView.PageIndexChanging
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanging
- uid: System.Web.UI.WebControls.GridViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewPageEventHandler
  nameWithType: GridViewPageEventHandler
  fullName: System.Web.UI.WebControls.GridViewPageEventHandler
- uid: System.Web.UI.WebControls.GridView.PagerSettings
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerSettings
  nameWithType: GridView.PagerSettings
  fullName: System.Web.UI.WebControls.GridView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.GridView.PagerStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerStyle
  nameWithType: GridView.PagerStyle
  fullName: System.Web.UI.WebControls.GridView.PagerStyle
- uid: System.Web.UI.WebControls.GridView.PagerTemplate
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
  fullName: System.Web.UI.WebControls.GridView.PagerTemplate
- uid: System.Web.UI.WebControls.GridView.PageSize
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageSize
  nameWithType: GridView.PageSize
  fullName: System.Web.UI.WebControls.GridView.PageSize
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: GridView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: GridView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.GridView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: GridView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: GridView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: GridView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.GridView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.GridView.RowCancelingEdit
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCancelingEdit
  nameWithType: GridView.RowCancelingEdit
  fullName: System.Web.UI.WebControls.GridView.RowCancelingEdit
- uid: System.Web.UI.WebControls.GridViewCancelEditEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCancelEditEventHandler
  nameWithType: GridViewCancelEditEventHandler
  fullName: System.Web.UI.WebControls.GridViewCancelEditEventHandler
- uid: System.Web.UI.WebControls.GridView.RowCommand
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCommand
  nameWithType: GridView.RowCommand
  fullName: System.Web.UI.WebControls.GridView.RowCommand
- uid: System.Web.UI.WebControls.GridViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCommandEventHandler
  nameWithType: GridViewCommandEventHandler
  fullName: System.Web.UI.WebControls.GridViewCommandEventHandler
- uid: System.Web.UI.WebControls.GridView.RowCreated
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCreated
  nameWithType: GridView.RowCreated
  fullName: System.Web.UI.WebControls.GridView.RowCreated
- uid: System.Web.UI.WebControls.GridViewRowEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowEventHandler
  nameWithType: GridViewRowEventHandler
  fullName: System.Web.UI.WebControls.GridViewRowEventHandler
- uid: System.Web.UI.WebControls.GridView.RowDataBound
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDataBound
  nameWithType: GridView.RowDataBound
  fullName: System.Web.UI.WebControls.GridView.RowDataBound
- uid: System.Web.UI.WebControls.GridView.RowDeleted
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDeleted
  nameWithType: GridView.RowDeleted
  fullName: System.Web.UI.WebControls.GridView.RowDeleted
- uid: System.Web.UI.WebControls.GridViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeletedEventHandler
  nameWithType: GridViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.GridViewDeletedEventHandler
- uid: System.Web.UI.WebControls.GridView.RowDeleting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDeleting
  nameWithType: GridView.RowDeleting
  fullName: System.Web.UI.WebControls.GridView.RowDeleting
- uid: System.Web.UI.WebControls.GridViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeleteEventHandler
  nameWithType: GridViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.GridViewDeleteEventHandler
- uid: System.Web.UI.WebControls.GridView.RowEditing
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowEditing
  nameWithType: GridView.RowEditing
  fullName: System.Web.UI.WebControls.GridView.RowEditing
- uid: System.Web.UI.WebControls.GridViewEditEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewEditEventHandler
  nameWithType: GridViewEditEventHandler
  fullName: System.Web.UI.WebControls.GridViewEditEventHandler
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
  fullName: System.Web.UI.WebControls.GridView.RowHeaderColumn
- uid: System.Web.UI.WebControls.GridView.Rows
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Rows
  nameWithType: GridView.Rows
  fullName: System.Web.UI.WebControls.GridView.Rows
- uid: System.Web.UI.WebControls.GridViewRowCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowCollection
  nameWithType: GridViewRowCollection
  fullName: System.Web.UI.WebControls.GridViewRowCollection
- uid: System.Web.UI.WebControls.GridView.RowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowStyle
  nameWithType: GridView.RowStyle
  fullName: System.Web.UI.WebControls.GridView.RowStyle
- uid: System.Web.UI.WebControls.GridView.RowUpdated
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowUpdated
  nameWithType: GridView.RowUpdated
  fullName: System.Web.UI.WebControls.GridView.RowUpdated
- uid: System.Web.UI.WebControls.GridViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdatedEventHandler
  nameWithType: GridViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.GridView.RowUpdating
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowUpdating
  nameWithType: GridView.RowUpdating
  fullName: System.Web.UI.WebControls.GridView.RowUpdating
- uid: System.Web.UI.WebControls.GridViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdateEventHandler
  nameWithType: GridViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.GridViewUpdateEventHandler
- uid: System.Web.UI.WebControls.GridView.SaveControlState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveControlState()
  nameWithType: GridView.SaveControlState()
  fullName: System.Web.UI.WebControls.GridView.SaveControlState()
- uid: System.Web.UI.WebControls.GridView.SaveViewState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveViewState()
  nameWithType: GridView.SaveViewState()
  fullName: System.Web.UI.WebControls.GridView.SaveViewState()
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedDataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.GridView.SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndexChanged
  nameWithType: GridView.SelectedIndexChanged
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanged
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndexChanging
  nameWithType: GridView.SelectedIndexChanging
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanging
- uid: System.Web.UI.WebControls.GridViewSelectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSelectEventHandler
  nameWithType: GridViewSelectEventHandler
  fullName: System.Web.UI.WebControls.GridViewSelectEventHandler
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRow
  nameWithType: GridView.SelectedRow
  fullName: System.Web.UI.WebControls.GridView.SelectedRow
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
  fullName: System.Web.UI.WebControls.GridView.SelectedRowStyle
- uid: System.Web.UI.WebControls.GridView.SelectedValue
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedValue
  nameWithType: GridView.SelectedValue
  fullName: System.Web.UI.WebControls.GridView.SelectedValue
- uid: System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectRow(Int32)
  nameWithType: GridView.SelectRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SelectRow(Int32)
- uid: System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetEditRow(Int32)
  nameWithType: GridView.SetEditRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetEditRow(Int32)
- uid: System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: GridView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.GridView.ShowFooter
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowFooter
  nameWithType: GridView.ShowFooter
  fullName: System.Web.UI.WebControls.GridView.ShowFooter
- uid: System.Web.UI.WebControls.GridView.ShowHeader
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeader
  nameWithType: GridView.ShowHeader
  fullName: System.Web.UI.WebControls.GridView.ShowHeader
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
  fullName: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
- uid: System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sort(String,SortDirection)
  nameWithType: GridView.Sort(String,SortDirection)
  fullName: System.Web.UI.WebControls.GridView.Sort(String,SortDirection)
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.GridView.SortDirection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortDirection
  nameWithType: GridView.SortDirection
  fullName: System.Web.UI.WebControls.GridView.SortDirection
- uid: System.Web.UI.WebControls.GridView.Sorted
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sorted
  nameWithType: GridView.Sorted
  fullName: System.Web.UI.WebControls.GridView.Sorted
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortExpression
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortExpression
  nameWithType: GridView.SortExpression
  fullName: System.Web.UI.WebControls.GridView.SortExpression
- uid: System.Web.UI.WebControls.GridView.Sorting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sorting
  nameWithType: GridView.Sorting
  fullName: System.Web.UI.WebControls.GridView.Sorting
- uid: System.Web.UI.WebControls.GridViewSortEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSortEventHandler
  nameWithType: GridViewSortEventHandler
  fullName: System.Web.UI.WebControls.GridViewSortEventHandler
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.GridView.TagKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TagKey
  nameWithType: GridView.TagKey
  fullName: System.Web.UI.WebControls.GridView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.GridView.TopPagerRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
  fullName: System.Web.UI.WebControls.GridView.TopPagerRow
- uid: System.Web.UI.WebControls.GridView.TrackViewState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TrackViewState()
  nameWithType: GridView.TrackViewState()
  fullName: System.Web.UI.WebControls.GridView.TrackViewState()
- uid: System.Web.UI.WebControls.GridView.UpdateMethod
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
  fullName: System.Web.UI.WebControls.GridView.UpdateMethod
- uid: System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateRow(Int32,Boolean)
  nameWithType: GridView.UpdateRow(Int32,Boolean)
  fullName: System.Web.UI.WebControls.GridView.UpdateRow(Int32,Boolean)
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
  fullName: System.Web.UI.WebControls.GridView.UseAccessibleHeader
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
  fullName: System.Web.UI.WebControls.GridView.VirtualItemCount
- uid: System.Web.UI.WebControls.GridView.#ctor*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridView
  nameWithType: GridView.GridView
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
- uid: System.Web.UI.WebControls.GridView.AllowPaging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowPaging
  nameWithType: GridView.AllowPaging
- uid: System.Web.UI.WebControls.GridView.AllowSorting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowSorting
  nameWithType: GridView.AllowSorting
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
- uid: System.Web.UI.WebControls.GridView.BackImageUrl*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
- uid: System.Web.UI.WebControls.GridView.Caption*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Caption
  nameWithType: GridView.Caption
- uid: System.Web.UI.WebControls.GridView.CaptionAlign*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
- uid: System.Web.UI.WebControls.GridView.CellPadding*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellPadding
  nameWithType: GridView.CellPadding
- uid: System.Web.UI.WebControls.GridView.CellSpacing*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellSpacing
  nameWithType: GridView.CellSpacing
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.Columns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Columns
  nameWithType: GridView.Columns
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateAutoGeneratedColumn
  nameWithType: GridView.CreateAutoGeneratedColumn
- uid: System.Web.UI.WebControls.GridView.CreateChildControls*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildControls
  nameWithType: GridView.CreateChildControls
- uid: System.Web.UI.WebControls.GridView.CreateChildTable*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildTable
  nameWithType: GridView.CreateChildTable
- uid: System.Web.UI.WebControls.GridView.CreateColumns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateColumns
  nameWithType: GridView.CreateColumns
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateControlStyle
  nameWithType: GridView.CreateControlStyle
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: GridView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.GridView.CreateRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateRow
  nameWithType: GridView.CreateRow
- uid: System.Web.UI.WebControls.GridView.DataBind*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataBind
  nameWithType: GridView.DataBind
- uid: System.Web.UI.WebControls.GridView.DataKeyNames*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.DataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeys
  nameWithType: GridView.DataKeys
- uid: System.Web.UI.WebControls.GridView.DeleteMethod*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
- uid: System.Web.UI.WebControls.GridView.DeleteRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteRow
  nameWithType: GridView.DeleteRow
- uid: System.Web.UI.WebControls.GridView.EditIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditIndex
  nameWithType: GridView.EditIndex
- uid: System.Web.UI.WebControls.GridView.EditRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.GridView.EmptyDataText*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ExtractRowValues
  nameWithType: GridView.ExtractRowValues
- uid: System.Web.UI.WebControls.GridView.FooterRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterRow
  nameWithType: GridView.FooterRow
- uid: System.Web.UI.WebControls.GridView.FooterStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterStyle
  nameWithType: GridView.FooterStyle
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackResult
  nameWithType: GridView.GetCallbackResult
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackScript
  nameWithType: GridView.GetCallbackScript
- uid: System.Web.UI.WebControls.GridView.GridLines*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridLines
  nameWithType: GridView.GridLines
- uid: System.Web.UI.WebControls.GridView.HeaderRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderRow
  nameWithType: GridView.HeaderRow
- uid: System.Web.UI.WebControls.GridView.HeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
- uid: System.Web.UI.WebControls.GridView.InitializePager*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializePager
  nameWithType: GridView.InitializePager
- uid: System.Web.UI.WebControls.GridView.InitializeRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializeRow
  nameWithType: GridView.InitializeRow
- uid: System.Web.UI.WebControls.GridView.IsBindableType*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: IsBindableType
  nameWithType: GridView.IsBindableType
- uid: System.Web.UI.WebControls.GridView.LoadControlState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadControlState
  nameWithType: GridView.LoadControlState
- uid: System.Web.UI.WebControls.GridView.LoadViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadViewState
  nameWithType: GridView.LoadViewState
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: GridView.OnBubbleEvent
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataPropertyChanged
  nameWithType: GridView.OnDataPropertyChanged
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: GridView.OnDataSourceViewChanged
- uid: System.Web.UI.WebControls.GridView.OnInit*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnInit
  nameWithType: GridView.OnInit
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: GridView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: GridView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPagePreLoad
  nameWithType: GridView.OnPagePreLoad
- uid: System.Web.UI.WebControls.GridView.OnPreRender*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPreRender
  nameWithType: GridView.OnPreRender
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCancelingEdit
  nameWithType: GridView.OnRowCancelingEdit
- uid: System.Web.UI.WebControls.GridView.OnRowCommand*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCommand
  nameWithType: GridView.OnRowCommand
- uid: System.Web.UI.WebControls.GridView.OnRowCreated*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCreated
  nameWithType: GridView.OnRowCreated
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDataBound
  nameWithType: GridView.OnRowDataBound
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleted
  nameWithType: GridView.OnRowDeleted
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleting
  nameWithType: GridView.OnRowDeleting
- uid: System.Web.UI.WebControls.GridView.OnRowEditing*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowEditing
  nameWithType: GridView.OnRowEditing
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdated
  nameWithType: GridView.OnRowUpdated
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdating
  nameWithType: GridView.OnRowUpdating
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanged
  nameWithType: GridView.OnSelectedIndexChanged
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanging
  nameWithType: GridView.OnSelectedIndexChanging
- uid: System.Web.UI.WebControls.GridView.OnSorted*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorted
  nameWithType: GridView.OnSorted
- uid: System.Web.UI.WebControls.GridView.OnSorting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorting
  nameWithType: GridView.OnSorting
- uid: System.Web.UI.WebControls.GridView.PageCount*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageCount
  nameWithType: GridView.PageCount
- uid: System.Web.UI.WebControls.GridView.PageIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndex
  nameWithType: GridView.PageIndex
- uid: System.Web.UI.WebControls.GridView.PagerSettings*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerSettings
  nameWithType: GridView.PagerSettings
- uid: System.Web.UI.WebControls.GridView.PagerStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerStyle
  nameWithType: GridView.PagerStyle
- uid: System.Web.UI.WebControls.GridView.PagerTemplate*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
- uid: System.Web.UI.WebControls.GridView.PageSize*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageSize
  nameWithType: GridView.PageSize
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PerformDataBinding
  nameWithType: GridView.PerformDataBinding
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: GridView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: GridView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: GridView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.GridView.Render*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Render
  nameWithType: GridView.Render
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
- uid: System.Web.UI.WebControls.GridView.Rows*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Rows
  nameWithType: GridView.Rows
- uid: System.Web.UI.WebControls.GridView.RowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowStyle
  nameWithType: GridView.RowStyle
- uid: System.Web.UI.WebControls.GridView.SaveControlState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveControlState
  nameWithType: GridView.SaveControlState
- uid: System.Web.UI.WebControls.GridView.SaveViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveViewState
  nameWithType: GridView.SaveViewState
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRow
  nameWithType: GridView.SelectedRow
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
- uid: System.Web.UI.WebControls.GridView.SelectedValue*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedValue
  nameWithType: GridView.SelectedValue
- uid: System.Web.UI.WebControls.GridView.SelectRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectRow
  nameWithType: GridView.SelectRow
- uid: System.Web.UI.WebControls.GridView.SetEditRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetEditRow
  nameWithType: GridView.SetEditRow
- uid: System.Web.UI.WebControls.GridView.SetPageIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetPageIndex
  nameWithType: GridView.SetPageIndex
- uid: System.Web.UI.WebControls.GridView.ShowFooter*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowFooter
  nameWithType: GridView.ShowFooter
- uid: System.Web.UI.WebControls.GridView.ShowHeader*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeader
  nameWithType: GridView.ShowHeader
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
- uid: System.Web.UI.WebControls.GridView.Sort*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sort
  nameWithType: GridView.Sort
- uid: System.Web.UI.WebControls.GridView.SortDirection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortDirection
  nameWithType: GridView.SortDirection
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortExpression*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortExpression
  nameWithType: GridView.SortExpression
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.GridView.TagKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TagKey
  nameWithType: GridView.TagKey
- uid: System.Web.UI.WebControls.GridView.TopPagerRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
- uid: System.Web.UI.WebControls.GridView.TrackViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TrackViewState
  nameWithType: GridView.TrackViewState
- uid: System.Web.UI.WebControls.GridView.UpdateMethod*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
- uid: System.Web.UI.WebControls.GridView.UpdateRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateRow
  nameWithType: GridView.UpdateRow
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
