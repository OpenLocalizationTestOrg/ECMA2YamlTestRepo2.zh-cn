### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.IObjectHandle
  id: IObjectHandle
  children:
  - System.Runtime.Remoting.IObjectHandle.Unwrap
  langs:
  - csharp
  name: IObjectHandle
  nameWithType: IObjectHandle
  fullName: System.Runtime.Remoting.IObjectHandle
  type: Interface
  summary: "定义用于从间接寻址的寻址封送按值对象的接口。"
  remarks: "可以通过间接寻址，允许调用方控制何时将对象加载到其域返回封送按值对象。 调用方可以解除中通过此接口间接寻址的对象的包装。       实现 IObjectHandle 接口的类可将对象传递 （处于已包装的状态） 而不加载在每个包装的对象的元数据的多个应用程序域之间<xref:System.AppDomain>通过 IObjectHandle 传输时。</xref:System.AppDomain> 因此，IObjectHandle 类使调用方可以控制何时<xref:System.Type>远程对象会加载到其域。</xref:System.Type>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("C460E2B4-E199-412a-8456-84DC3E4838C3")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IObjectHandle
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.IObjectHandle.Unwrap
  id: Unwrap
  parent: System.Runtime.Remoting.IObjectHandle
  langs:
  - csharp
  name: Unwrap()
  nameWithType: IObjectHandle.Unwrap()
  fullName: System.Runtime.Remoting.IObjectHandle.Unwrap()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "解包对象。"
  syntax:
    content: public object Unwrap ();
    parameters: []
    return:
      type: System.Object
      description: "未包装的对象。"
  overload: System.Runtime.Remoting.IObjectHandle.Unwrap*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.IObjectHandle.Unwrap
  parent: System.Runtime.Remoting.IObjectHandle
  isExternal: false
  name: Unwrap()
  nameWithType: IObjectHandle.Unwrap()
  fullName: System.Runtime.Remoting.IObjectHandle.Unwrap()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.IObjectHandle.Unwrap*
  parent: System.Runtime.Remoting.IObjectHandle
  isExternal: false
  name: Unwrap
  nameWithType: IObjectHandle.Unwrap
