### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider
  id: TripleDESCryptoServiceProvider
  children:
  - System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor
  - System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV
  - System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey
  langs:
  - csharp
  name: TripleDESCryptoServiceProvider
  nameWithType: TripleDESCryptoServiceProvider
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider
  type: Class
  summary: "定义用于访问的加密服务提供程序 (CSP) 版本的包装的对象<xref href=&quot;System.Security.Cryptography.TripleDES&quot;></xref>算法。 此类不能被继承。"
  remarks: "此算法支持密钥长度为 128 位至 192 位增量为 64 位。      1> [!NOTE]&1;> 较新的对称加密算法，高级加密标准 (AES)，是可用。 请考虑使用<xref:System.Security.Cryptography.AesCryptoServiceProvider>类而不是 TripleDESCryptoServiceProvider 类。</xref:System.Security.Cryptography.AesCryptoServiceProvider> TripleDESCryptoServiceProvider 仅用于与旧的应用程序和数据的兼容性。"
  example:
  - "The following code example creates a TripleDESCryptoServiceProvider object and uses it to encrypt and decrypt data in a file.  \n  \n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/t-system.security.crypto_100_1.cs)]\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/t-system.security.crypto_100_1.cpp)]\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/t-system.security.crypto_100_1.vb)]  \n  \n The following code example creates a TripleDESCryptoServiceProvider object and uses it to encrypt and decrypt data in memory.  \n  \n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/t-system.security.crypto_100_2.vb)]\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/t-system.security.crypto_100_2.cs)]\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/t-system.security.crypto_100_2.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class TripleDESCryptoServiceProvider : System.Security.Cryptography.TripleDES
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.TripleDES
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  - System.Security.Cryptography.TripleDES.Create
  - System.Security.Cryptography.TripleDES.Create(System.String)
  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  - System.Security.Cryptography.TripleDES.Key
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  langs:
  - csharp
  name: TripleDESCryptoServiceProvider()
  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.TripleDESCryptoServiceProvider&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \n  \n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/m-system.security.crypto_24_1.cs)]\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/m-system.security.crypto_24_1.cpp)]\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_24_1.vb)]  \n  \n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \n  \n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_24_2.vb)]\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_24_2.cs)]\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_24_2.cpp)]"
  syntax:
    content: public TripleDESCryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref>加密服务提供程序不可用。"
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "创建对称<xref href=&quot;System.Security.Cryptography.TripleDES&quot;></xref>解密器对象与指定的键 (<>*1>) 和初始化向量 (<>*1>)。"
  remarks: "此方法来创建使用的加密的消息解密<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>重载具有相同参数。</xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>"
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \n  \n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/de676a27-d971-4ef6-8051-_1.cs)]\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/de676a27-d971-4ef6-8051-_1.cpp)]\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/de676a27-d971-4ef6-8051-_1.vb)]  \n  \n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \n  \n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/de676a27-d971-4ef6-8051-_2.vb)]\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/de676a27-d971-4ef6-8051-_2.cs)]\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/de676a27-d971-4ef6-8051-_2.cpp)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "要用于对称算法的密钥。"
    - id: rgbIV
      type: System.Byte[]
      description: "要用于对称算法的初始化向量。"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "对称<xref href=&quot;System.Security.Cryptography.TripleDES&quot;></xref>解密器对象。"
  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "值<> *1> 属性是<xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>。      -的值<> *1> 属性是<xref href=&quot;System.Security.Cryptography.CipherMode&quot;></xref>和的值<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>属性不是 8。</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>       -或者-使用无效的密钥大小。       -或者-算法的密钥大小不可用。"
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "创建对称<xref href=&quot;System.Security.Cryptography.TripleDES&quot;></xref>加密器对象与指定的键 (<>*1>) 和初始化向量 (<>*1>)。"
  remarks: "使用<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A>重载具有相同的参数来解密此方法的结果。</xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A>"
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \n  \n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/558647a8-1e1a-4ecf-9345-_1.cs)]\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/558647a8-1e1a-4ecf-9345-_1.cpp)]\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/558647a8-1e1a-4ecf-9345-_1.vb)]  \n  \n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \n  \n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/558647a8-1e1a-4ecf-9345-_2.vb)]\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/558647a8-1e1a-4ecf-9345-_2.cs)]\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/558647a8-1e1a-4ecf-9345-_2.cpp)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "要用于对称算法的密钥。"
    - id: rgbIV
      type: System.Byte[]
      description: "要用于对称算法的初始化向量。       <div class=&quot;alert NOTE&quot;>    初始化向量必须是 8 个字节长。 如果它的长度超过 8 个字节，则将被截断，并且不引发异常。 在调用 CreateEncryptor 之前，检查的初始化向量的长度，并引发异常，如果太长。      </div>"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "对称<xref href=&quot;System.Security.Cryptography.TripleDES&quot;></xref>加密器对象。"
  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "值<> *1> 属性是<xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>。      -的值<> *1> 属性是<xref href=&quot;System.Security.Cryptography.CipherMode&quot;></xref>和的值<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>属性不是 8。</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>       -或者-使用无效的密钥大小。       -或者-算法的密钥大小不可用。"
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: TripleDESCryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "生成的随机初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) 要用于该算法。</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "使用此方法时未指定生成的随机初始化向量。"
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: TripleDESCryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "生成一个随机<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>要用于该算法。</xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>"
  remarks: "使用此方法时未指定生成一个随机密钥。 此方法将永远不会返回弱密钥 (请参阅<xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>)。</xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>       此算法支持密钥长度为 128 位至 192 位增量为 64 位。"
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.TripleDES
  isExternal: false
  name: System.Security.Cryptography.TripleDES
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: TripleDESCryptoServiceProvider()
  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: GenerateIV()
  nameWithType: TripleDESCryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV()
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: GenerateKey()
  nameWithType: TripleDESCryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey()
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: TripleDESCryptoServiceProvider
  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor*
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: CreateDecryptor
  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor*
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: CreateEncryptor
  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV*
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: GenerateIV
  nameWithType: TripleDESCryptoServiceProvider.GenerateIV
- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey*
  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider
  isExternal: false
  name: GenerateKey
  nameWithType: TripleDESCryptoServiceProvider.GenerateKey
