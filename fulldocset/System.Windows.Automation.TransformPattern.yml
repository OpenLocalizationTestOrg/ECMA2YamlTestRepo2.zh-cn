### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.TransformPattern
  id: TransformPattern
  children:
  - System.Windows.Automation.TransformPattern.Cached
  - System.Windows.Automation.TransformPattern.CanMoveProperty
  - System.Windows.Automation.TransformPattern.CanResizeProperty
  - System.Windows.Automation.TransformPattern.CanRotateProperty
  - System.Windows.Automation.TransformPattern.Current
  - System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)
  - System.Windows.Automation.TransformPattern.Pattern
  - System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)
  - System.Windows.Automation.TransformPattern.Rotate(System.Double)
  langs:
  - csharp
  name: TransformPattern
  nameWithType: TransformPattern
  fullName: System.Windows.Automation.TransformPattern
  type: Class
  summary: "表示可以移动、 调整大小，或在二维空间中旋转的控件。"
  remarks: "对此控件模式的支持并不局限于桌面上的对象。 只要子级可以移动、 调整大小或容器的边界内自由地旋转，则还必须受到容器对象的子级支持此控件模式。"
  syntax:
    content: 'public class TransformPattern : System.Windows.Automation.BasePattern'
  inheritance:
  - System.Object
  - System.Windows.Automation.BasePattern
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.Cached
  id: Cached
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: Cached
  nameWithType: TransformPattern.Cached
  fullName: System.Windows.Automation.TransformPattern.Cached
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "获取已缓存[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]参数的属性值<xref href=&quot;System.Windows.Automation.TransformPattern&quot;> </xref>。"
  remarks: "缓存的属性值必须已以前请求过使用一种<xref:System.Windows.Automation.CacheRequest>。</xref:System.Windows.Automation.CacheRequest> 使用<xref:System.Windows.Automation.TransformPattern.Current%2A>来获取属性的当前值。</xref:System.Windows.Automation.TransformPattern.Current%2A>       有关可用的属性和其使用的信息，请参阅<xref:System.Windows.Automation.TransformPattern.TransformPatternInformation>。</xref:System.Windows.Automation.TransformPattern.TransformPatternInformation>"
  syntax:
    content: public System.Windows.Automation.TransformPattern.TransformPatternInformation Cached { get; }
    return:
      type: System.Windows.Automation.TransformPattern.TransformPatternInformation
      description: "一个包含已缓存的结构[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]的控件模式的属性值。"
  overload: System.Windows.Automation.TransformPattern.Cached*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "请求的属性不在缓存中。"
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.CanMoveProperty
  id: CanMoveProperty
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: CanMoveProperty
  nameWithType: TransformPattern.CanMoveProperty
  fullName: System.Windows.Automation.TransformPattern.CanMoveProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove*>属性。</xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应使用<xref:System.Windows.Automation.TransformPatternIdentifiers>.</xref:System.Windows.Automation.TransformPatternIdentifiers>中的等效字段"
  example:
  - "In the following example, a root element is passed to a function that returns a collection of [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-cs[UIATransformPattern_snip#100](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#100)]\n [!code-vb[UIATransformPattern_snip#100](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CanMoveProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.CanResizeProperty
  id: CanResizeProperty
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: CanResizeProperty
  nameWithType: TransformPattern.CanResizeProperty
  fullName: System.Windows.Automation.TransformPattern.CanResizeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize*>属性。</xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应使用<xref:System.Windows.Automation.TransformPatternIdentifiers>.</xref:System.Windows.Automation.TransformPatternIdentifiers>中的等效字段"
  example:
  - "In the following example, a root element is passed to a function that returns a collection of [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-cs[UIATransformPattern_snip#100](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#100)]\n [!code-vb[UIATransformPattern_snip#100](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CanResizeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.CanRotateProperty
  id: CanRotateProperty
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: CanRotateProperty
  nameWithType: TransformPattern.CanRotateProperty
  fullName: System.Windows.Automation.TransformPattern.CanRotateProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate*>属性。</xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate*>"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应使用<xref:System.Windows.Automation.TransformPatternIdentifiers>.</xref:System.Windows.Automation.TransformPatternIdentifiers>中的等效字段"
  example:
  - "In the following example, a root element is passed to a function that returns a collection of [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] elements that are descendants of the root and satisfy a set of property conditions.  \n  \n [!code-cs[UIATransformPattern_snip#100](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#100)]\n [!code-vb[UIATransformPattern_snip#100](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#100)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CanRotateProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.Current
  id: Current
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: Current
  nameWithType: TransformPattern.Current
  fullName: System.Windows.Automation.TransformPattern.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "获取当前[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]参数的属性值<xref href=&quot;System.Windows.Automation.TransformPattern&quot;> </xref>。"
  remarks: "此模式必须从<xref:System.Windows.Automation.AutomationElement>与<xref:System.Windows.Automation.AutomationElementMode>以获取当前值的引用。</xref:System.Windows.Automation.AutomationElementMode> </xref:System.Windows.Automation.AutomationElement> 如果<xref:System.Windows.Automation.AutomationElement>获得使用<xref:System.Windows.Automation.AutomationElementMode>，它只包含已缓存数据，并尝试获取的任何属性的当前值引发异常。</xref:System.Windows.Automation.AutomationElementMode> </xref:System.Windows.Automation.AutomationElement> 使用<xref:System.Windows.Automation.TransformPattern.Cached%2A>若要获取的缓存的值指定的属性，这是以前使用一种<xref:System.Windows.Automation.CacheRequest>。</xref:System.Windows.Automation.CacheRequest> </xref:System.Windows.Automation.TransformPattern.Cached%2A>       有关可用的属性和其使用的信息，请参阅<xref:System.Windows.Automation.TransformPattern.TransformPatternInformation>。</xref:System.Windows.Automation.TransformPattern.TransformPatternInformation>"
  syntax:
    content: public System.Windows.Automation.TransformPattern.TransformPatternInformation Current { get; }
    return:
      type: System.Windows.Automation.TransformPattern.TransformPatternInformation
      description: "结构，它包含当前[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]的控件模式的属性值。"
  overload: System.Windows.Automation.TransformPattern.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)
  id: Move(System.Double,System.Double)
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: Move(Double,Double)
  nameWithType: TransformPattern.Move(Double,Double)
  fullName: System.Windows.Automation.TransformPattern.Move(Double,Double)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "移动此控件。"
  remarks: "不能移动、 调整大小或旋转以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。 例如，当顶层窗口移动完全屏幕或子对象移动容器的视区边界之外。 在这些情况下该对象被放置靠近尽可能使用顶部或左侧坐标被覆盖以位于容器边界内所请求的屏幕坐标。"
  example:
  - "In the following example, a <xref:System.Windows.Automation.TransformPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and subsequently used to move the <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIATransformPattern_snip#101](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#101)]\n [!code-vb[UIATransformPattern_snip#101](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#101)]  \n[!code-cs[UIATransformPattern_snip#103](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#103)]\n[!code-vb[UIATransformPattern_snip#103](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#103)]"
  syntax:
    content: public void Move (double x, double y);
    parameters:
    - id: x
      type: System.Double
      description: "控件左侧的绝对屏幕坐标。"
    - id: y
      type: System.Double
      description: "控件顶部的绝对屏幕坐标。"
  overload: System.Windows.Automation.TransformPattern.Move*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove*>属性为 false。</xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove*>"
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.Pattern
  id: Pattern
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: Pattern
  nameWithType: TransformPattern.Pattern
  fullName: System.Windows.Automation.TransformPattern.Pattern
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "标识<xref href=&quot;System.Windows.Automation.TransformPattern&quot;></xref>控件模式。"
  remarks: "UI 自动化客户端应用程序使用此标识符。 UI 自动化提供程序应使用<xref:System.Windows.Automation.TransformPatternIdentifiers>.</xref:System.Windows.Automation.TransformPatternIdentifiers>中的等效字段       模式标识符传递给方法，例如，<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>若要检索从指定的<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement>感兴趣的控件模式</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>"
  example:
  - "In the following example, a <xref:System.Windows.Automation.TransformPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIATransformPattern_snip#101](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#101)]\n [!code-vb[UIATransformPattern_snip#101](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;
    return:
      type: System.Windows.Automation.AutomationPattern
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)
  id: Resize(System.Double,System.Double)
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: Resize(Double,Double)
  nameWithType: TransformPattern.Resize(Double,Double)
  fullName: System.Windows.Automation.TransformPattern.Resize(Double,Double)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "调整控件的大小。"
  remarks: "调用控件上时，支持拆分窗格，此方法可以产生副作用的大小调整其他相邻窗格。       不能移动、 调整大小或旋转以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。 例如，当顶层窗口移动完全屏幕或子对象移动容器的视区边界之外。 在这些情况下该对象被放置靠近尽可能使用顶部或左侧坐标被覆盖以位于容器边界内所请求的屏幕坐标。"
  example:
  - "In the following example, a <xref:System.Windows.Automation.TransformPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and subsequently used to resize the <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIATransformPattern_snip#101](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#101)]\n [!code-vb[UIATransformPattern_snip#101](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#101)]  \n[!code-cs[UIATransformPattern_snip#104](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#104)]\n[!code-vb[UIATransformPattern_snip#104](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#104)]"
  syntax:
    content: public void Resize (double width, double height);
    parameters:
    - id: width
      type: System.Double
      description: "新窗口，以像素为单位的宽度。"
    - id: height
      type: System.Double
      description: "新窗口，以像素为单位的高度。"
  overload: System.Windows.Automation.TransformPattern.Resize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize*>属性为 false。</xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize*>"
  platform:
  - net462
- uid: System.Windows.Automation.TransformPattern.Rotate(System.Double)
  id: Rotate(System.Double)
  parent: System.Windows.Automation.TransformPattern
  langs:
  - csharp
  name: Rotate(Double)
  nameWithType: TransformPattern.Rotate(Double)
  fullName: System.Windows.Automation.TransformPattern.Rotate(Double)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "旋转控件。"
  remarks: "不能移动、 调整大小或旋转以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。 例如，当顶层窗口移动完全屏幕或子对象移动容器的视区边界之外。 在这些情况下该对象被放置靠近尽可能使用顶部或左侧坐标被覆盖以位于容器边界内所请求的屏幕坐标。"
  example:
  - "In the following example, a <xref:System.Windows.Automation.TransformPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and subsequently used to rotate the <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIATransformPattern_snip#101](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#101)]\n [!code-vb[UIATransformPattern_snip#101](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#101)]  \n[!code-cs[UIATransformPattern_snip#102](~/add/codesnippet/csharp/UIATransformPattern_snip/UIATransformPattern_snippets.cs#102)]\n[!code-vb[UIATransformPattern_snip#102](~/add/codesnippet/visualbasic/UIATransformPattern_snip/UIATransformPattern_snippets.vb#102)]"
  syntax:
    content: public void Rotate (double degrees);
    parameters:
    - id: degrees
      type: System.Double
      description: "要将元素旋转角度的数。 正数会顺时针旋转;为负数会逆时针旋转。"
  overload: System.Windows.Automation.TransformPattern.Rotate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate*>属性为 false。</xref:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate*>"
  platform:
  - net462
references:
- uid: System.Windows.Automation.BasePattern
  isExternal: false
  name: System.Windows.Automation.BasePattern
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.TransformPattern.Cached
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Cached
  nameWithType: TransformPattern.Cached
  fullName: System.Windows.Automation.TransformPattern.Cached
- uid: System.Windows.Automation.TransformPattern.TransformPatternInformation
  parent: System.Windows.Automation
  isExternal: false
  name: TransformPattern+TransformPatternInformation
  nameWithType: TransformPattern+TransformPatternInformation
  fullName: System.Windows.Automation.TransformPattern+TransformPatternInformation
- uid: System.Windows.Automation.TransformPattern.CanMoveProperty
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: CanMoveProperty
  nameWithType: TransformPattern.CanMoveProperty
  fullName: System.Windows.Automation.TransformPattern.CanMoveProperty
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.TransformPattern.CanResizeProperty
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: CanResizeProperty
  nameWithType: TransformPattern.CanResizeProperty
  fullName: System.Windows.Automation.TransformPattern.CanResizeProperty
- uid: System.Windows.Automation.TransformPattern.CanRotateProperty
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: CanRotateProperty
  nameWithType: TransformPattern.CanRotateProperty
  fullName: System.Windows.Automation.TransformPattern.CanRotateProperty
- uid: System.Windows.Automation.TransformPattern.Current
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Current
  nameWithType: TransformPattern.Current
  fullName: System.Windows.Automation.TransformPattern.Current
- uid: System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Move(Double,Double)
  nameWithType: TransformPattern.Move(Double,Double)
  fullName: System.Windows.Automation.TransformPattern.Move(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Automation.TransformPattern.Pattern
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Pattern
  nameWithType: TransformPattern.Pattern
  fullName: System.Windows.Automation.TransformPattern.Pattern
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Resize(Double,Double)
  nameWithType: TransformPattern.Resize(Double,Double)
  fullName: System.Windows.Automation.TransformPattern.Resize(Double,Double)
- uid: System.Windows.Automation.TransformPattern.Rotate(System.Double)
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Rotate(Double)
  nameWithType: TransformPattern.Rotate(Double)
  fullName: System.Windows.Automation.TransformPattern.Rotate(Double)
- uid: System.Windows.Automation.TransformPattern.Cached*
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Cached
  nameWithType: TransformPattern.Cached
- uid: System.Windows.Automation.TransformPattern.Current*
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Current
  nameWithType: TransformPattern.Current
- uid: System.Windows.Automation.TransformPattern.Move*
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Move
  nameWithType: TransformPattern.Move
- uid: System.Windows.Automation.TransformPattern.Resize*
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Resize
  nameWithType: TransformPattern.Resize
- uid: System.Windows.Automation.TransformPattern.Rotate*
  parent: System.Windows.Automation.TransformPattern
  isExternal: false
  name: Rotate
  nameWithType: TransformPattern.Rotate
