### YamlMime:ManagedReference
items:
- uid: System.Web.Management.TraceWebEventProvider
  id: TraceWebEventProvider
  children:
  - System.Web.Management.TraceWebEventProvider.Flush
  - System.Web.Management.TraceWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.TraceWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.TraceWebEventProvider.Shutdown
  langs:
  - csharp
  name: TraceWebEventProvider
  nameWithType: TraceWebEventProvider
  fullName: System.Web.Management.TraceWebEventProvider
  type: Class
  summary: "实现的事件提供程序将 ASP.NET 运行状况监视事件作为跟踪消息发送。"
  remarks: "ASP.NET 运行状况监视，用于管理已部署的 Web 应用程序的生产和操作人员。 <xref:System.Web.Management?displayProperty=fullName>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</xref:System.Web.Management?displayProperty=fullName> 它还包含在管理运行状况事件期间帮助的支持类型。       此提供程序将传递到事件<xref:System.Diagnostics.Trace>对象。</xref:System.Diagnostics.Trace> 它将派生自的事件传递<xref:System.Web.Management.WebBaseErrorEvent>类作为跟踪错误，并将所有其他事件传递作为跟踪信息。</xref:System.Web.Management.WebBaseErrorEvent>      1> [!NOTE] 1> TraceWebEventProvider 对象不提供事件缓冲。      1> [!NOTE] 1> 在大多数情况下，你将是一种能够使用 ASP.NET 运行状况监视类型，因为实现，并且将通过指定中的值控制运行状况监视系统`healthMonitoring`配置节。 你还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。 有关创建自定义提供程序的示例，请参阅[如何︰ 实现运行状况监视自定义提供程序示例](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following configuration file excerpt shows how to specify a provider of type TraceWebEventProvider in the `healthMonitoring` section. The `add` element in the `rules` section specifies that the provider will handle request-processing events.  \n  \n```  \n<healthMonitoring  \n    enabled=\"true\"  \n    heartBeatInterval=\"0\">  \n    <providers>  \n        <add name=\"TraceEventProvider\"  \n            type=\"System.Web.Management.TraceWebEventProvider,   \n              System.Web\"  \n            buffer=\"false\"  \n            bufferMode=\"\"  \n            maxEventLength=\"4096\"  \n            maxSize=\"4096\"  \n            maxMessagesPerNotification=\"1\"  \n        />  \n    </providers>  \n    <eventMappings>  \n        <add name=\"Request Processing Events\"  \n            type=\"System.Web.Management.WebRequestEvent, System.Web\"   \n        />  \n    </eventMappings>  \n    <profiles>  \n        <add name=\"Trace\"  \n            minInstances=\"1\"  \n            maxLimit=\"Infinite\"  \n            minInterval=\"00:00:00\"  \n        />  \n    </profiles>  \n    <rules>  \n        <add name=\"Trace Request Processing\"  \n            eventName=\"Request Processing Events\"  \n            provider=\"TraceEventProvider\"  \n            profile=\"Trace\"  \n        />  \n   </rules>  \n</healthMonitoring>   \n```"
  syntax:
    content: 'public sealed class TraceWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.TraceWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.TraceWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: TraceWebEventProvider.Flush()
  fullName: System.Web.Management.TraceWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "从提供程序的缓冲区中删除所有事件。"
  remarks: "此方法不应在代码中直接使用。 它是由 ASP.NET 运行状况监视系统调用的。      1> [!NOTE] 1><xref:System.Web.Management.WebEventProvider>对象不提供事件缓冲。</xref:System.Web.Management.WebEventProvider>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.TraceWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.TraceWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.TraceWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: TraceWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.TraceWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "设置此对象的初始值。"
  remarks: "ASP.NET 调用初始化方法以初始化<xref:System.Web.Management.TraceWebEventProvider>的配置设置和配置文件中指定的名称。</xref:System.Web.Management.TraceWebEventProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "在配置文件中用于标识此提供程序的名称。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> ，它指定为此提供程序配置文件中分配的特性。"
  overload: System.Web.Management.TraceWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.TraceWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.TraceWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: TraceWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.TraceWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "处理传递给提供的事件。"
  remarks: "此方法不应在代码中直接使用。 它是由 ASP.NET 运行状况监视系统调用的。      1> [!NOTE] 1><xref:System.Web.Management.WebEventProvider>对象时，不事件缓冲。</xref:System.Web.Management.WebEventProvider>"
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "<xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref>对象传递给过程。"
  overload: System.Web.Management.TraceWebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.TraceWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.TraceWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: TraceWebEventProvider.Shutdown()
  fullName: System.Web.Management.TraceWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "执行与关闭提供程序关联的任务。"
  remarks: "当托管 Web 应用程序的应用程序域终止时，ASP.NET 将调用 Shutdown 方法。 该方法调用以执行将允许应用程序正常结束的任务。"
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.TraceWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.Management.TraceWebEventProvider.Flush
  parent: System.Web.Management.TraceWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: TraceWebEventProvider.Flush()
  fullName: System.Web.Management.TraceWebEventProvider.Flush()
- uid: System.Web.Management.TraceWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.TraceWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: TraceWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.TraceWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.TraceWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.TraceWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: TraceWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.TraceWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.TraceWebEventProvider.Shutdown
  parent: System.Web.Management.TraceWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: TraceWebEventProvider.Shutdown()
  fullName: System.Web.Management.TraceWebEventProvider.Shutdown()
- uid: System.Web.Management.TraceWebEventProvider.Flush*
  parent: System.Web.Management.TraceWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: TraceWebEventProvider.Flush
- uid: System.Web.Management.TraceWebEventProvider.Initialize*
  parent: System.Web.Management.TraceWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: TraceWebEventProvider.Initialize
- uid: System.Web.Management.TraceWebEventProvider.ProcessEvent*
  parent: System.Web.Management.TraceWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: TraceWebEventProvider.ProcessEvent
- uid: System.Web.Management.TraceWebEventProvider.Shutdown*
  parent: System.Web.Management.TraceWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: TraceWebEventProvider.Shutdown
