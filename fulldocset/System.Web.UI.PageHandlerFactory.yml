### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageHandlerFactory
  id: PageHandlerFactory
  children:
  - System.Web.UI.PageHandlerFactory.#ctor
  - System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  - System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  langs:
  - csharp
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory
  fullName: System.Web.UI.PageHandlerFactory
  type: Class
  summary: "创建继承自的类的实例<xref href=&quot;System.Web.UI.Page&quot;></xref>类，实现<xref href=&quot;System.Web.IHttpHandler&quot;></xref>接口。 动态创建实例，以处理针对 ASP.NET 文件的请求。 PageHandlerFactory 类是用于 ASP.NET 页的默认处理程序工厂实现。"
  remarks: "PageHandlerFactory 类实现<xref:System.Web.IHttpHandlerFactory>接口以便为 ASP.NET 文件中提供的默认 HTTP 处理程序。</xref:System.Web.IHttpHandlerFactory> PageHandlerFactory 调用 ASP.NET 编译系统，若要编译，如有必要，并返回到的 URL 对应的确切类型，然后创建该类型的实例。 页类型继承自<xref:System.Web.UI.Page>类并实现<xref:System.Web.IHttpHandler>接口。</xref:System.Web.IHttpHandler> </xref:System.Web.UI.Page>       若要生成自定义的页处理程序工厂，实现<xref:System.Web.IHttpHandlerFactory>并在中的应用程序的 Web.config 文件中注册自定义的 PageHandlerFactory 类[httpHandlers 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2)配置节。</xref:System.Web.IHttpHandlerFactory>"
  syntax:
    content: public class PageHandlerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.#ctor
  id: '#ctor'
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.PageHandlerFactory&quot;></xref>类。"
  remarks: "PageHandlerFactory 构造函数是默认构造函数和所有字段都初始化为其默认值。"
  syntax:
    content: protected PageHandlerFactory ();
    parameters: []
  overload: System.Web.UI.PageHandlerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  id: GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回的实例<xref href=&quot;System.Web.IHttpHandler&quot;></xref>接口来处理请求的资源。"
  remarks: "GetHandler 方法由 ASP.NET 运行时调用，并且返回的有效实例<xref:System.Web.IHttpHandler>接口或`null`。</xref:System.Web.IHttpHandler>"
  syntax:
    content: public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "实例<xref href=&quot;System.Web.HttpContext&quot;></xref>类，它提供对 HTTP 请求提供服务所使用的内部服务器对象 （例如，请求、 响应、 会话和服务器） 的引用。"
    - id: requestType
      type: System.String
      description: "HTTP 数据传输客户端使用的方法 （GET 或 POST）。"
    - id: virtualPath
      type: System.String
      description: "请求的资源的虚拟路径。"
    - id: path
      type: System.String
      description: "<xref:System.Web.HttpRequest.PhysicalApplicationPath*>所请求资源的属性。</xref:System.Web.HttpRequest.PhysicalApplicationPath*>"
    return:
      type: System.Web.IHttpHandler
      description: "一个新<xref href=&quot;System.Web.IHttpHandler&quot;></xref>处理该请求; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.PageHandlerFactory.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  id: ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "使工厂可以重复使用现有实例的处理程序。"
  syntax:
    content: public virtual void ReleaseHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref>重用。"
  overload: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.PageHandlerFactory.#ctor
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
- uid: System.Web.UI.PageHandlerFactory.#ctor*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory.PageHandlerFactory
- uid: System.Web.UI.PageHandlerFactory.GetHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler
  nameWithType: PageHandlerFactory.GetHandler
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler
  nameWithType: PageHandlerFactory.ReleaseHandler
