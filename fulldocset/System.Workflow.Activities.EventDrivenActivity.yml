### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.EventDrivenActivity
  id: EventDrivenActivity
  children:
  - System.Workflow.Activities.EventDrivenActivity.#ctor
  - System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  - System.Workflow.Activities.EventDrivenActivity.EventActivity
  langs:
  - csharp
  name: EventDrivenActivity
  nameWithType: EventDrivenActivity
  fullName: System.Workflow.Activities.EventDrivenActivity
  type: Class
  summary: "包装<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>其执行由某一事件初始化。 此类不能被继承。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]它是<xref:System.Workflow.ComponentModel.CompositeActivity>用于处理的事件; 通常它可以引发从主机或运行时在响应延迟计时器过期。</xref:System.Workflow.ComponentModel.CompositeActivity> EventDrivenActivity 继承自<xref:System.Workflow.Activities.SequenceActivity>; 因此，它具有附加限制的第一个活动应<xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity>序列</xref:System.Workflow.Activities.SequenceActivity>       EventDrivenActivity 是<xref:System.Workflow.ComponentModel.CompositeActivity>，这意味着 EventDrivenActivity 可以包含其他活动。</xref:System.Workflow.ComponentModel.CompositeActivity> EventDrivenActivity 是类似于<xref:System.Workflow.Activities.SequenceActivity>活动，但具有一些其他特性。</xref:System.Workflow.Activities.SequenceActivity>       EventDrivenActivity 必须具有的父项为<xref:System.Workflow.Activities.ListenActivity>， <xref:System.Workflow.Activities.StateActivity>，或<xref:System.Workflow.Activities.StateMachineWorkflowActivity>。</xref:System.Workflow.Activities.StateMachineWorkflowActivity> </xref:System.Workflow.Activities.StateActivity> </xref:System.Workflow.Activities.ListenActivity>       必须继承自<xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity>活动 EventDrivenActivity 活动的第一个子级。 所有后续子级可以是任何类型的活动。 <xref:System.Workflow.Activities.IEventActivity>阻止和等待某些事件，如启动一个计时器或一条消息的到达的挂起匹配项。</xref:System.Workflow.Activities.IEventActivity> 发生事件时，<xref:System.Workflow.Activities.IEventActivity>正在运行，然后所有后续活动将执行的完成。</xref:System.Workflow.Activities.IEventActivity>       当<xref:System.Workflow.Activities.StateMachineWorkflowActivity>包含 EventDrivenActivity EventDrivenActivity 有一些限制:-EventDrivenActivity 可能包含类型<xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity>的且仅一个活动</xref:System.Workflow.Activities.StateMachineWorkflowActivity>      -<xref:System.Workflow.Activities.HandleExternalEventActivity>必须是第一个子活动。</xref:System.Workflow.Activities.HandleExternalEventActivity> <xref:System.Workflow.Activities.HandleExternalEventActivity>不能为在事件处理程序的子活动和不能为 EventDrivenActivity 的子级，如果<xref:System.Workflow.Activities.HandleExternalEventActivity>不是第一个子级。</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.HandleExternalEventActivity>      -只要第一个活动是<xref:System.Workflow.Activities.HandleExternalEventActivity>，事件处理程序可以包含任何活动。</xref:System.Workflow.Activities.HandleExternalEventActivity> 如果某个活动以外的其他<xref:System.Workflow.Activities.HandleExternalEventActivity>包含在 EventDrivenActivity，活动不能具有事件处理程序。</xref:System.Workflow.Activities.HandleExternalEventActivity>       例如，可以在 EventDrivenActivity 内使用支持事件处理的活动，但活动不能具有事件处理程序附加到其自身。       另一个示例是可以包含 EventDrivenActivity <xref:System.Workflow.Activities.ConditionedActivityGroup>，但<xref:System.Workflow.Activities.ConditionedActivityGroup>本身不能包含任何<xref:System.Workflow.Activities.HandleExternalEventActivity>类。</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.ConditionedActivityGroup> </xref:System.Workflow.Activities.ConditionedActivityGroup>"
  example:
  - "The following code example shows how to use the EventDrivenActivity to perform state machine transitions. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#185](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#185)]\n [!code-vb[wf_samples#185](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#185)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.EventDrivenDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventDrivenActivity), "Resources.EventDriven.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventDrivenValidator))]

      public sealed class EventDrivenActivity : System.Workflow.Activities.SequenceActivity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements: []
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventDrivenActivity()
  nameWithType: EventDrivenActivity.EventDrivenActivity()
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.EventDrivenActivity> class.  This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#187](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#187)]\n [!code-vb[wf_samples#187](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#187)]"
  syntax:
    content: public EventDrivenActivity ();
    parameters: []
  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventDrivenActivity(String)
  nameWithType: EventDrivenActivity.EventDrivenActivity(String)
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;></xref>类使用活动的名称。"
  syntax:
    content: public EventDrivenActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "活动的用户标识名称。"
  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity
  id: EventActivity
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
  fullName: System.Workflow.Activities.EventDrivenActivity.EventActivity
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "获取驱动更改的事件活动。"
  syntax:
    content: public System.Workflow.Activities.IEventActivity EventActivity { get; }
    return:
      type: System.Workflow.Activities.IEventActivity
      description: "驱动更改的事件活动。"
  overload: System.Workflow.Activities.EventDrivenActivity.EventActivity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity()
  nameWithType: EventDrivenActivity.EventDrivenActivity()
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity()
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity(String)
  nameWithType: EventDrivenActivity.EventDrivenActivity(String)
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
  fullName: System.Workflow.Activities.EventDrivenActivity.EventActivity
- uid: System.Workflow.Activities.IEventActivity
  parent: System.Workflow.Activities
  isExternal: false
  name: IEventActivity
  nameWithType: IEventActivity
  fullName: System.Workflow.Activities.IEventActivity
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor*
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity
  nameWithType: EventDrivenActivity.EventDrivenActivity
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity*
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
