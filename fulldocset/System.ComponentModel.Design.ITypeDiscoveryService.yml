### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ITypeDiscoveryService
  id: ITypeDiscoveryService
  children:
  - System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)
  langs:
  - csharp
  name: ITypeDiscoveryService
  nameWithType: ITypeDiscoveryService
  fullName: System.ComponentModel.Design.ITypeDiscoveryService
  type: Interface
  summary: "在设计时发现可用的类型。"
  remarks: "ITypeDiscoveryService 用于在设计时，服务的客户端不知道现有类型或引用的程序集的名称中发现可用的类型。"
  syntax:
    content: public interface ITypeDiscoveryService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)
  id: GetTypes(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ITypeDiscoveryService
  langs:
  - csharp
  name: GetTypes(Type,Boolean)
  nameWithType: ITypeDiscoveryService.GetTypes(Type,Boolean)
  fullName: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "检索可用类型的列表。"
  remarks: "如果`baseType`是`null`，返回所有类型。 否则，返回仅从指定的基类型派生的类型。 如果`excludeGlobalTypes`是`false`，检查所有被引用程序集中的类型。 否则，检查非-全局程序集缓存 (GAC) 引用程序集中的唯一类型。 有关详细信息，请参阅[使用程序集和全局程序集缓存](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Collections.ICollection GetTypes (Type baseType, bool excludeGlobalTypes);
    parameters:
    - id: baseType
      type: System.Type
      description: "要匹配的基类型。 Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: excludeGlobalTypes
      type: System.Boolean
      description: "指示是否应检查所有被引用程序集中的类型。"
    return:
      type: System.Collections.ICollection
      description: "与指定的条件相匹配的类型的集合<code> baseType </code>和<code> excludeGlobalTypes </code>。"
  overload: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ITypeDiscoveryService
  isExternal: false
  name: GetTypes(Type,Boolean)
  nameWithType: ITypeDiscoveryService.GetTypes(Type,Boolean)
  fullName: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(Type,Boolean)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes*
  parent: System.ComponentModel.Design.ITypeDiscoveryService
  isExternal: false
  name: GetTypes
  nameWithType: ITypeDiscoveryService.GetTypes
