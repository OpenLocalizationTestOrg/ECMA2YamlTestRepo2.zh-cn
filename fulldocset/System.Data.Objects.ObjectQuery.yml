### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectQuery
  id: ObjectQuery
  children:
  - System.Data.Objects.ObjectQuery.CommandText
  - System.Data.Objects.ObjectQuery.Context
  - System.Data.Objects.ObjectQuery.EnablePlanCaching
  - System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  - System.Data.Objects.ObjectQuery.GetResultType
  - System.Data.Objects.ObjectQuery.MergeOption
  - System.Data.Objects.ObjectQuery.Parameters
  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  - System.Data.Objects.ObjectQuery.ToTraceString
  langs:
  - csharp
  name: ObjectQuery
  nameWithType: ObjectQuery
  fullName: System.Data.Objects.ObjectQuery
  type: Class
  summary: "实现针对概念模型中使用这两个 LINQ to Entities 查询的常见功能和&lt;xref:System.Data.Objects.ObjectQuery%601&gt;。"
  remarks: "ObjectQuery 是针对概念模型的查询的基类。 提供 ObjectQuery 是为了确保 LINQ to Entities 查询具有作为查询执行使用<xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601>相同的功能 必须使用<xref:System.Data.Objects.ObjectQuery%601>使用查询概念模型的指定类型。</xref:System.Data.Objects.ObjectQuery%601> 有关详细信息，请参阅[对象查询](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)。"
  syntax:
    content: 'public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.ComponentModel.IListSource
  - System.Linq.IOrderedQueryable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.CommandText
  id: CommandText
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: CommandText
  nameWithType: ObjectQuery.CommandText
  fullName: System.Data.Objects.ObjectQuery.CommandText
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回查询的命令文本。"
  syntax:
    content: public string CommandText { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value."
  overload: System.Data.Objects.ObjectQuery.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Context
  id: Context
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Context
  nameWithType: ObjectQuery.Context
  fullName: System.Data.Objects.ObjectQuery.Context
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取与此对象查询关联的对象上下文。"
  remarks: "查询的上下文包括连接、 缓存和元数据。 有关详细信息，请参阅[对象服务概述 （实体框架）](http://msdn.microsoft.com/en-us/43014cf9-c9cb-4538-bfbb-197820b60038)。       连接属性是可变的可以执行查询之前必须先设置。 有关详细信息，请参阅[对象服务 （实体框架） 中管理连接](http://msdn.microsoft.com/en-us/a1df87ef-6441-417d-b264-bb58360e5d67)。"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_context)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Context](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_context)]"
  syntax:
    content: public System.Data.Objects.ObjectContext Context { get; }
    return:
      type: System.Data.Objects.ObjectContext
      description: "<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>与此关联&lt;xref:System.Data.Objects.ObjectQuery%601&gt;实例。"
  overload: System.Data.Objects.ObjectQuery.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching
  id: EnablePlanCaching
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
  fullName: System.Data.Objects.ObjectQuery.EnablePlanCaching
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取或设置一个值，该值指示是否应缓存查询计划。"
  remarks: "有关详细信息，请参阅[查询计划缓存](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool EnablePlanCaching { get; set; }
    return:
      type: System.Boolean
      description: "一个值，该值指示是否应缓存查询计划。"
  overload: System.Data.Objects.ObjectQuery.EnablePlanCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  id: Execute(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Execute(MergeOption)
  nameWithType: ObjectQuery.Execute(MergeOption)
  fullName: System.Data.Objects.ObjectQuery.Execute(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "执行非类型化的对象查询中使用指定的合并选项。"
  remarks: "对象查询的默认合并选项为<xref:System.Data.Objects.MergeOption>。</xref:System.Data.Objects.MergeOption> 有关详细信息，请参阅[标识解析、 状态管理和更改跟踪](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)。       调用<xref:System.Data.Objects.ObjectQuery%601.Execute%2A>方法<xref:System.Data.Objects.ObjectQuery%601>类型化的对象查询。</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Execute%2A>"
  syntax:
    content: public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>要在执行查询时使用。 默认值是<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>。"
    return:
      type: System.Data.Objects.ObjectResult
      description: "&lt;Xref:System.Data.Objects.ObjectResult%601&gt; ，包含查询返回的实体对象集合。"
  overload: System.Data.Objects.ObjectQuery.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.GetResultType
  id: GetResultType
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: GetResultType()
  nameWithType: ObjectQuery.GetResultType()
  fullName: System.Data.Objects.ObjectQuery.GetResultType()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回有关查询的结果类型的信息。"
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses GetResultType to determine whether the type returned represents a row.  \n  \n [!code-vb[DP ObjectServices Concepts#GetResultType](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#getresulttype)]\n [!code-cs[DP ObjectServices Concepts#GetResultType](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#getresulttype)]"
  syntax:
    content: public System.Data.Metadata.Edm.TypeUsage GetResultType ();
    parameters: []
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "A <xref href=&quot;System.Data.Metadata.Edm.TypeUsage&quot;> </xref>值，该值包含有关查询的结果类型的信息。"
  overload: System.Data.Objects.ObjectQuery.GetResultType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.MergeOption
  id: MergeOption
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
  fullName: System.Data.Objects.ObjectQuery.MergeOption
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取或设置从查询返回的对象添加到对象上下文的方式。"
  remarks: "如果没有<xref:System.Data.Objects.MergeOption>指定，默认值为<xref:System.Data.Objects.MergeOption>。</xref:System.Data.Objects.MergeOption> </xref:System.Data.Objects.MergeOption> 有关详细信息，请参阅[标识解析、 状态管理和更改跟踪](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)。"
  syntax:
    content: public System.Data.Objects.MergeOption MergeOption { get; set; }
    return:
      type: System.Data.Objects.MergeOption
      description: "查询<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>。"
  overload: System.Data.Objects.ObjectQuery.MergeOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Parameters
  id: Parameters
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Parameters
  nameWithType: ObjectQuery.Parameters
  fullName: System.Data.Objects.ObjectQuery.Parameters
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取此对象查询的参数集合。"
  remarks: "使用返回<xref:System.Data.Objects.ObjectParameterCollection>指定传递给查询的参数。</xref:System.Data.Objects.ObjectParameterCollection> 有关详细信息，请参阅[查询生成器方法](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)。"
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>. Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_parameters)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_parameters)]"
  syntax:
    content: public System.Data.Objects.ObjectParameterCollection Parameters { get; }
    return:
      type: System.Data.Objects.ObjectParameterCollection
      description: "此参数集合&lt;xref:System.Data.Objects.ObjectQuery%601&gt;。"
  overload: System.Data.Objects.ObjectQuery.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回循环访问集合的枚举。"
  remarks: "调用 IEnumerable.GetEnumerator 执行查询中使用由指定的合并选项<xref:System.Data.Objects.ObjectQuery.MergeOption%2A>属性。</xref:System.Data.Objects.ObjectQuery.MergeOption%2A>       `foreach` C# 语言的语句 (`For Each`在 Visual Basic 中) 隐藏了枚举数的复杂性。 因此，使用`foreach`建议，而不是直接操作枚举数。       枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>可用于循环访问集合。</xref:System.Collections.IEnumerator>"
  overload: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取一个值，该值指示查询返回的集合是否包含集合对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.ObjectQuery%601>实例被强制转换为<xref:System.ComponentModel.IListSource>接口。</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>       此属性始终返回`false`因为由查询返回该集合包含对象而不是集合。"
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "一个布尔值。"
  overload: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回集合作为<xref:System.Collections.IList>用于数据绑定。</xref:System.Collections.IList>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.ObjectQuery%601>实例被强制转换为<xref:System.ComponentModel.IListSource>接口。</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>       此方法可实现数据绑定到查询的结果。 它是由绑定到集合的控件进行调用。 有关详细信息，请参阅[对象绑定到控件](http://msdn.microsoft.com/en-us/2fd34855-929b-4303-a91e-4bb69d958f2b)。"
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>的实体对象。</xref:System.Collections.IList>"
  overload: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  id: System#Linq#IQueryable#ElementType
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.ElementType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取此查询实例的结果元素类型。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.ObjectQuery%601>实例被强制转换为<xref:System.ComponentModel.IListSource>接口。</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>"
  syntax:
    content: Type System.Linq.IQueryable.ElementType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>此查询实例的结果元素类型。</xref:System.Type>"
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  id: System#Linq#IQueryable#Expression
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Expression
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取描述此查询的表达式。"
  remarks: "对于使用 LINQ 生成器模式生成的查询，这将返回完全 LINQ 表达式树;否则，返回包装此查询的常量表达式。 请注意，默认表达式不进行缓存。 这样，框架可以区分 LINQ 与 Entity SQL 查询。       此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.ObjectQuery%601>实例被强制转换为<xref:System.ComponentModel.IListSource>接口。</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>"
  syntax:
    content: System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: "LINQ<xref:System.Linq.Expressions.Expression>描述此查询。</xref:System.Linq.Expressions.Expression>"
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  id: System#Linq#IQueryable#Provider
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Provider
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取 LINQ<xref:System.Linq.IQueryProvider>与此查询实例关联。</xref:System.Linq.IQueryProvider>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.Objects.ObjectQuery%601>实例被强制转换为<xref:System.ComponentModel.IListSource>接口。</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>"
  syntax:
    content: System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }
    return:
      type: System.Linq.IQueryProvider
      description: "<xref:System.Linq.IQueryProvider>与此查询实例关联。</xref:System.Linq.IQueryProvider>"
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.ToTraceString
  id: ToTraceString
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: ToTraceString()
  nameWithType: ObjectQuery.ToTraceString()
  fullName: System.Data.Objects.ObjectQuery.ToTraceString()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回要对数据源执行的命令。"
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_totracestring)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_totracestring)]"
  syntax:
    content: public string ToTraceString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> ，它表示对数据源执行查询的命令。"
  overload: System.Data.Objects.ObjectQuery.ToTraceString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Objects.ObjectQuery.CommandText
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: CommandText
  nameWithType: ObjectQuery.CommandText
  fullName: System.Data.Objects.ObjectQuery.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery.Context
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Context
  nameWithType: ObjectQuery.Context
  fullName: System.Data.Objects.ObjectQuery.Context
- uid: System.Data.Objects.ObjectContext
  parent: System.Data.Objects
  isExternal: false
  name: ObjectContext
  nameWithType: ObjectContext
  fullName: System.Data.Objects.ObjectContext
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
  fullName: System.Data.Objects.ObjectQuery.EnablePlanCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Execute(MergeOption)
  nameWithType: ObjectQuery.Execute(MergeOption)
  fullName: System.Data.Objects.ObjectQuery.Execute(MergeOption)
- uid: System.Data.Objects.ObjectResult
  parent: System.Data.Objects
  isExternal: false
  name: ObjectResult
  nameWithType: ObjectResult
  fullName: System.Data.Objects.ObjectResult
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.ObjectQuery.GetResultType
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: GetResultType()
  nameWithType: ObjectQuery.GetResultType()
  fullName: System.Data.Objects.ObjectQuery.GetResultType()
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Objects.ObjectQuery.MergeOption
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
  fullName: System.Data.Objects.ObjectQuery.MergeOption
- uid: System.Data.Objects.ObjectQuery.Parameters
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Parameters
  nameWithType: ObjectQuery.Parameters
  fullName: System.Data.Objects.ObjectQuery.Parameters
- uid: System.Data.Objects.ObjectParameterCollection
  parent: System.Data.Objects
  isExternal: false
  name: ObjectParameterCollection
  nameWithType: ObjectParameterCollection
  fullName: System.Data.Objects.ObjectParameterCollection
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.ElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Provider
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: System.Data.Objects.ObjectQuery.ToTraceString
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: ToTraceString()
  nameWithType: ObjectQuery.ToTraceString()
  fullName: System.Data.Objects.ObjectQuery.ToTraceString()
- uid: System.Data.Objects.ObjectQuery.CommandText*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: CommandText
  nameWithType: ObjectQuery.CommandText
- uid: System.Data.Objects.ObjectQuery.Context*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Context
  nameWithType: ObjectQuery.Context
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
- uid: System.Data.Objects.ObjectQuery.Execute*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Execute
  nameWithType: ObjectQuery.Execute
- uid: System.Data.Objects.ObjectQuery.GetResultType*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: GetResultType
  nameWithType: ObjectQuery.GetResultType
- uid: System.Data.Objects.ObjectQuery.MergeOption*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
- uid: System.Data.Objects.ObjectQuery.Parameters*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Parameters
  nameWithType: ObjectQuery.Parameters
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
- uid: System.Data.Objects.ObjectQuery.ToTraceString*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: ToTraceString
  nameWithType: ObjectQuery.ToTraceString
