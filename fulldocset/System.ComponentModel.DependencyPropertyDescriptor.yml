### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DependencyPropertyDescriptor
  id: DependencyPropertyDescriptor
  children:
  - System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.Attributes
  - System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.Category
  - System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  - System.ComponentModel.DependencyPropertyDescriptor.Converter
  - System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  - System.ComponentModel.DependencyPropertyDescriptor.Description
  - System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  - System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  - System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  - System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  - System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  - System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  - System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  - System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  - System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  - System.ComponentModel.DependencyPropertyDescriptor.Metadata
  - System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  - System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  - System.ComponentModel.DependencyPropertyDescriptor.ToString
  langs:
  - csharp
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
  type: Class
  summary: "提供的扩展<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>依赖项属性的其他属性特征的帐户。"
  remarks: "此类主要由设计器的应用程序使用。 这些应用程序可能需要报告通过属性窗口或其他工具，用于编辑属性值的依赖项属性特征。       若要检查特定的属性，以确定它是否有可用作 DependencyPropertyDescriptor <xref:System.ComponentModel.PropertyDescriptor>，调用<xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName>，或<xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName>。</xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName> </xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName> </xref:System.ComponentModel.PropertyDescriptor> 如果上述任一方法返回`null`，则此属性不是依赖项属性。 如果该方法返回有效 DependencyPropertyDescriptor，则属性为依赖项属性。"
  syntax:
    content: 'public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor'
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  - System.ComponentModel.PropertyDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  - System.ComponentModel.PropertyDescriptor.SerializationVisibility
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  id: AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "支持此属性更改时通知其他对象。"
  syntax:
    content: public override void AddValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "要添加的处理程序的组件。"
    - id: handler
      type: System.EventHandler
      description: "要作为侦听器添加的委托。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取此成员的特性的集合。"
  syntax:
    content: public override System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref>的属性集合。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  id: CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回是否重置对象更改其值。"
  remarks: "此方法依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool CanResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "要测试重置功能的组件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果重置组件，更改其值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  id: Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取该成员所属的类别的名称中指定<xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>。"
  remarks: "此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Category { get; }
    return:
      type: System.String
      description: "该成员所属的类别的名称。 如果没有任何<xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>，类别名称设置为默认类别<xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取此属性绑定到的组件的类型。"
  remarks: "此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override Type ComponentType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>表示此属性绑定到的组件的类型。</xref:System.Type> 当<> *1> 或<> *1> 是调用，指定的对象可能是此类型的实例。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  id: Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取此属性的类型转换器。"
  remarks: "此属性可以是`null`在情况下，特性化<xref:System.ComponentModel.TypeConverter>不公共类。</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public override System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref>用于将转换<xref:System.Type>此属性。</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  id: DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回依赖属性标识符。"
  remarks: "此属性可以是`null`如果<xref:System.ComponentModel.DependencyPropertyDescriptor>实例已创建用于不是依赖项属性的属性。</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public System.Windows.DependencyProperty DependencyProperty { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "依赖项属性标识符。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  id: Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取在指定将成员的说明<xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>。"
  remarks: "此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Description { get; }
    return:
      type: System.String
      description: "成员的说明。 如果没有任何<xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>，属性值设置为默认情况下，为一个空字符串 (&quot;&quot;)。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  id: DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取或设置设计器使用的依赖项属性值存储到依赖项属性引擎中之前修改的依赖项属性的有效值的回调。"
  syntax:
    content: public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }
    return:
      type: System.Windows.CoerceValueCallback
      description: "设计器用于修改依赖项属性的有效值，然后将依赖项属性值存储在依赖项属性引擎回调。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取是否应仅在指定在设计时设置此成员<xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>。"
  remarks: "此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此成员应仅在设计时; 设置<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果成员可以在运行时设置。 如果没有任何<xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>，则返回值是默认设置，即<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取可在一个窗口，如属性窗口中显示的名称。"
  remarks: "此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string DisplayName { get; }
    return:
      type: System.String
      description: "要显示的属性的名称。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "比较两个<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>实例是否相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>与当前实例进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果这些值是等效的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  id: FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>提供的属性名称。"
  remarks: "`name`可能是指依赖项属性或附加的属性，而是`name`参数传递给<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>定义问题的属性的调用。</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`传递给<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>。</xref:System.Windows.DependencyProperty.RegisterAttached%2A></xref:System.Windows.DependencyProperty.Register%2A>作为再次拥有，将该属性的对象的类型 `targetType`是你想要设置的属性的类型。 依赖项属性`ownerType`和`targetType`具有相同的类型。 对于附加的属性，它们通常不同。"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);
    parameters:
    - id: name
      type: System.String
      description: "已注册的依赖项属性或附加的属性名称。"
    - id: ownerType
      type: System.Type
      description: "<xref:System.Type>拥有该属性定义的对象。</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>你想要设置属性为的对象</xref:System.Type>"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "请求<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  id: FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>提供的属性名称。"
  remarks: "`name`可能是指依赖项属性或附加的属性，而是`name`参数传递给<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>定义问题的属性的调用。</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`传递给<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>。</xref:System.Windows.DependencyProperty.RegisterAttached%2A></xref:System.Windows.DependencyProperty.Register%2A>作为再次拥有，将该属性的对象的类型 `targetType`是你想要设置的属性的类型。 依赖项属性`ownerType`和`targetType`具有相同的类型。 对于附加的属性，它们通常不同。"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);
    parameters:
    - id: name
      type: System.String
      description: "已注册的依赖项属性或附加的属性名称。"
    - id: ownerType
      type: System.Type
      description: "<xref:System.Type>拥有该属性定义的对象。</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>你想要设置属性为的对象</xref:System.Type>"
    - id: ignorePropertyType
      type: System.Boolean
      description: "指定以忽略属性类型。"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "请求<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  id: FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>提供<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>。"
  remarks: "此方法是由设计器的应用程序用于获取<xref:System.ComponentModel.DependencyPropertyDescriptor>在检查有一种<xref:System.ComponentModel.PropertyDescriptor>。</xref:System.ComponentModel.PropertyDescriptor>的所有属性的基础上</xref:System.ComponentModel.DependencyPropertyDescriptor>的主要方法"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>检查。"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "如果该属性所描述<code> property </code>是依赖项属性，则返回有效<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。 否则，返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  id: FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>提供的依赖属性和目标类型。"
  remarks: "`dependencyProperty`可能引用依赖项属性或附加的属性。 `targetType`是你想要设置的属性的类型。 依赖项属性，类型等效于<xref:System.Windows.DependencyProperty.OwnerType%2A>为`dependencyProperty`。</xref:System.Windows.DependencyProperty.OwnerType%2A> 附加属性`targetType`通常是其他某种<xref:System.Windows.DependencyObject>类型。</xref:System.Windows.DependencyObject>"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);
    parameters:
    - id: dependencyProperty
      type: System.Windows.DependencyProperty
      description: "依赖项属性的标识符。"
    - id: targetType
      type: System.Type
      description: "其中设置属性的对象类型。"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>提供的依赖属性。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  id: GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>。"
  remarks: "此方法依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);
    parameters:
    - id: instance
      type: System.Object
      description: "要获取其属性的组件。"
    - id: filter
      type: System.Attribute[]
      description: "类型的数组<xref:System.Attribute>要用作筛选器。</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>与相匹配的指定组件的指定的属性的属性。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取指定类型的编辑器。"
  remarks: "此方法依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "编辑器，用于区分多个属性支持的编辑器基类型。"
    return:
      type: System.Object
      description: "请求的编辑器类型的实例或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到编辑器。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回此哈希代码<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。"
  remarks: "哈希代码<xref:System.ComponentModel.DependencyPropertyDescriptor>基于依赖项属性的标识符并在其设置的类型。</xref:System.ComponentModel.DependencyPropertyDescriptor> 此实现确保<xref:System.ComponentModel.DependencyPropertyDescriptor>不正确返回相同的哈希代码的属性，继承由许多可能派生类，或通过属性系统否则重新分配的属性。</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "返回在组件上的属性的当前值。"
  remarks: "此方法依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override object GetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "组件实例中。"
    return:
      type: System.Object
      description: "请求的值。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  id: IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示是否属性注册为附加属性，并通过附加用法进行使用。"
  syntax:
    content: public bool IsAttached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性是附加的属性。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示的值<xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;></xref>的属性上。"
  remarks: "此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;></xref>指定的属性上; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示是否应本地化此属性，根据中的指定<xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref>。"
  remarks: "此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsLocalizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该成员标记有<xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;></xref>构造函数的值的 true; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示此属性只读的。"
  remarks: "此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>       依赖项属性注册为只读使用特定方法调用，并且按照约定[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]是通过反射和描述符查看的属性的包装属性还必须是只读的。 但是，由于这是约定，而不是编译要求，你可能想要再次检查依赖项属性标识符的只读状态。 若要执行此操作，获取标识符 (<xref:System.Windows.DependencyProperty>) 为此<xref:System.ComponentModel.DependencyPropertyDescriptor>，然后检查<xref:System.Windows.DependencyProperty.ReadOnly%2A>.</xref:System.Windows.DependencyProperty.ReadOnly%2A>的值</xref:System.ComponentModel.DependencyPropertyDescriptor>的值</xref:System.Windows.DependencyProperty> 请注意，<xref:System.Windows.DependencyProperty.ReadOnly%2A>位于标识符本身，而不在元数据。</xref:System.Windows.DependencyProperty.ReadOnly%2A>"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果属性是只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  id: Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取与依赖属性关联的元数据。"
  remarks: "该值可以为`null`如果没有任何元数据或属性不是依赖项属性。       具有匹配中的概念的元数据[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]属性被重新公开为中的特性<xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>集合。</xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>"
  syntax:
    content: public System.Windows.PropertyMetadata Metadata { get; }
    return:
      type: System.Windows.PropertyMetadata
      description: "依赖项属性的元数据。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  id: PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "获取表示<xref:System.Type>的依赖项属性。</xref:System.Type>"
  remarks: "此属性返回<xref:System.Type>与注册的依赖属性。</xref:System.Type>"
  syntax:
    content: public override Type PropertyType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>的依赖项属性。</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  id: RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "支持此属性更改时通知其他对象。"
  remarks: "此方法依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void RemoveValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "要添加的处理程序的组件。"
    - id: handler
      type: System.EventHandler
      description: "要作为侦听器添加的委托。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  id: ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "将组件的此属性的值重置为默认值。"
  remarks: "此方法依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void ResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "具有要重置为默认值的属性值的组件。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "将个分量的值设置为不同的值。"
  remarks: "此方法依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void SetValue (object component, object value);
    parameters:
    - id: component
      type: System.Object
      description: "具有要设置的属性值的组件。"
    - id: value
      type: System.Object
      description: "新值。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "该值指示是否需要通过序列化过程中保留此属性的值。"
  syntax:
    content: public override bool ShouldSerializeValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "具有要检查其持久性的属性的组件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应保持属性;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  id: SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "指示是否为此属性的值更改通知可能来自以外的属性描述符，如从组件本身，或是否通知将仅由的<xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>对所做的直接调用"
  remarks: "例如，对于`true`情况下，该组件可能实现<xref:System.ComponentModel.INotifyPropertyChanged>接口，或可能具有显式`propertyName``Changed`此属性的事件。</xref:System.ComponentModel.INotifyPropertyChanged>       此属性依赖于基础<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool SupportsChangeEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此属性的通知可能来自以外的属性描述符，例如从组件本身。 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果通知将仅由的<xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>对所做的直接调用"
  overload: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  id: ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "将此实例的值转换为其等效的字符串表示形式。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "返回<xref:System.ComponentModel.MemberDescriptor.Name*>值。</xref:System.ComponentModel.MemberDescriptor.Name*>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.Windows.CoerceValueCallback
  parent: System.Windows
  isExternal: false
  name: CoerceValueCallback
  nameWithType: CoerceValueCallback
  fullName: System.Windows.CoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged
  nameWithType: DependencyPropertyDescriptor.AddValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue
  nameWithType: DependencyPropertyDescriptor.CanResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals
  nameWithType: DependencyPropertyDescriptor.Equals
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName
  nameWithType: DependencyPropertyDescriptor.FromName
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty
  nameWithType: DependencyPropertyDescriptor.FromProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties
  nameWithType: DependencyPropertyDescriptor.GetChildProperties
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: DependencyPropertyDescriptor.GetEditor
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyPropertyDescriptor.GetHashCode
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue
  nameWithType: DependencyPropertyDescriptor.GetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue
  nameWithType: DependencyPropertyDescriptor.ResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue
  nameWithType: DependencyPropertyDescriptor.SetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString
  nameWithType: DependencyPropertyDescriptor.ToString
