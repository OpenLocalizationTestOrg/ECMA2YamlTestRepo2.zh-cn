### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Scope
  id: Scope
  children:
  - System.IdentityModel.Scope.#ctor
  - System.IdentityModel.Scope.#ctor(System.String)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Scope.AppliesToAddress
  - System.IdentityModel.Scope.EncryptingCredentials
  - System.IdentityModel.Scope.Properties
  - System.IdentityModel.Scope.ReplyToAddress
  - System.IdentityModel.Scope.SigningCredentials
  - System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  - System.IdentityModel.Scope.TokenEncryptionRequired
  langs:
  - csharp
  name: Scope
  nameWithType: Scope
  fullName: System.IdentityModel.Scope
  type: Class
  summary: "表示令牌颁发请求的配置。"
  remarks: "作用域类封装有关与安全令牌请求 (RST) 关联的信赖方 (RP) 的信息。 此信息由的实现<xref:System.IdentityModel.SecurityTokenService>令牌颁发管道返回响应 (RSTR) 对安全令牌请求 (RST) 中的类 (STS)。</xref:System.IdentityModel.SecurityTokenService>       对象的范围包含地址的相关信息的 RP、 加密和签名凭据要用于颁发的安全令牌中，并且是否与颁发的令牌本身或对称密钥应加密令牌。 默认情况下，令牌和对称密钥进行加密。 你可以扩展作用域类来执行请求，如令牌类型由 RP，接受默认令牌生存期、 最大令牌生存期、 算法套件使用 RP，等等。 有关其他信息但是，此类中封装的信息不应有所不同的各个请求。       在中实现令牌颁发管道<xref:System.IdentityModel.SecurityTokenService.Issue%2A>时，因此该方法将调用<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法以获取 RST 的配置。</xref:System.IdentityModel.SecurityTokenService.GetScope%2A> </xref:System.IdentityModel.SecurityTokenService.Issue%2A> 必须实现<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>在自定义 STS 和返回范围的对象适用于 RP 和 STS 实现的方法。</xref:System.IdentityModel.SecurityTokenService.GetScope%2A>"
  syntax:
    content: public class Scope
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope()
  nameWithType: Scope.Scope()
  fullName: System.IdentityModel.Scope.Scope()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Scope&quot;></xref>类。"
  remarks: "下表显示的初始属性值的新<xref:System.IdentityModel.Scope>实例。</xref:System.IdentityModel.Scope>      |属性 |值。 |  |--------------|------------|  |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`null` .|  |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  |<xref:System.IdentityModel.Scope.Properties%2A>|返回空字典。 |  |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|  |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope ();
    parameters: []
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String)
  nameWithType: Scope.Scope(String)
  fullName: System.IdentityModel.Scope.Scope(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Scope&quot;></xref>类指定的 appliesTo 地址。"
  remarks: "下表显示的初始属性值的新<xref:System.IdentityModel.Scope>实例。</xref:System.IdentityModel.Scope>      |属性 |值。 |  |--------------|------------|  |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|值`appliesToAddress`参数。 |  |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  |<xref:System.IdentityModel.Scope.Properties%2A>|返回空字典。 |  |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|  |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "信赖方 appliesTo 地址。 通常为 URI。"
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,EncryptingCredentials)
  nameWithType: Scope.Scope(String,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Scope&quot;></xref>类，该类具有指定的 appliesTo 地址和加密凭据。"
  remarks: "下表显示的初始属性值的新<xref:System.IdentityModel.Scope>实例。</xref:System.IdentityModel.Scope>      |属性 |值。 |  |--------------|------------|  |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|值`appliesToAddress`参数。 |  |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  |<xref:System.IdentityModel.Scope.Properties%2A>|返回空字典。 |  |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|值`signingCredentials`参数。 |  |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "信赖方 appliesTo 地址。 通常为 URI。"
    - id: encryptingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "信赖方的加密凭据。"
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,SigningCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Scope&quot;></xref>类，该类具有指定的 appliesTo 地址和签名凭据。"
  remarks: "下表显示的初始属性值的新<xref:System.IdentityModel.Scope>实例。</xref:System.IdentityModel.Scope>      |属性 |值。 |  |--------------|------------|  |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|值`appliesToAddress`参数。 |  |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  |<xref:System.IdentityModel.Scope.Properties%2A>|返回空字典。 |  |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|值`signingCredentials`参数。 |  |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "信赖方 appliesTo 地址。 通常为 URI。"
    - id: signingCredentials
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "信赖方签名凭据。"
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,SigningCredentials,EncryptingCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Scope&quot;></xref>类指定的 appliesTo 地址，签名凭据，并对凭据进行加密。"
  remarks: "下表显示的初始属性值的新<xref:System.IdentityModel.Scope>实例。</xref:System.IdentityModel.Scope>      |属性 |值 |  |--------------|-----------|  |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|值`appliesToAddress`参数。 |  |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|值`encryptingCredentials`参数。 |  |<xref:System.IdentityModel.Scope.Properties%2A>|返回空字典。 |  |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|值`signingCredentials`参数。 |  |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "信赖方 appliesTo 地址。 通常为 URI。"
    - id: signingCredentials
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "信赖方签名凭据。"
    - id: encryptingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "信赖方的加密凭据。"
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.AppliesToAddress
  id: AppliesToAddress
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
  fullName: System.IdentityModel.Scope.AppliesToAddress
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "获取或设置信赖方的 appliesTo 地址。"
  syntax:
    content: public virtual string AppliesToAddress { get; set; }
    return:
      type: System.String
      description: "信赖方 appliesTo 地址。 通常为 URI。"
  overload: System.IdentityModel.Scope.AppliesToAddress*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.EncryptingCredentials
  id: EncryptingCredentials
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
  fullName: System.IdentityModel.Scope.EncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "获取或设置为信赖方的加密凭据。"
  remarks: "如果<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>属性是`true`，凭据用于加密颁发的安全令牌。</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> 如果<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>属性是`true`，凭据用于加密颁发与安全令牌的对称密钥。</xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "用于为信赖方的加密凭据。"
  overload: System.IdentityModel.Scope.EncryptingCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.Properties
  id: Properties
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Properties
  nameWithType: Scope.Properties
  fullName: System.IdentityModel.Scope.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "获取属性包可以扩展对象。"
  syntax:
    content: public virtual System.Collections.Generic.Dictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "属性包中。"
  overload: System.IdentityModel.Scope.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.ReplyToAddress
  id: ReplyToAddress
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
  fullName: System.IdentityModel.Scope.ReplyToAddress
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "获取或设置信赖方的 replyTo 地址。"
  syntax:
    content: public virtual string ReplyToAddress { get; set; }
    return:
      type: System.String
      description: "信赖方 replyTo 地址。 通常为 URI。"
  overload: System.IdentityModel.Scope.ReplyToAddress*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.SigningCredentials
  id: SigningCredentials
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
  fullName: System.IdentityModel.Scope.SigningCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "获取或设置为信赖方的签名凭据。"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "用于为信赖方的签名凭据。"
  overload: System.IdentityModel.Scope.SigningCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  id: SymmetricKeyEncryptionRequired
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
  fullName: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "获取或设置一个值，该值指示是否必须加密颁发的对称密钥。"
  remarks: "如果 SymmetricKeyEncryptionRequired 属性为`true`，对称密钥加密的使用中的凭据<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>属性。</xref:System.IdentityModel.Scope.EncryptingCredentials%2A>"
  syntax:
    content: public virtual bool SymmetricKeyEncryptionRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果必须加密对称密钥;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.TokenEncryptionRequired
  id: TokenEncryptionRequired
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
  fullName: System.IdentityModel.Scope.TokenEncryptionRequired
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "获取或设置一个值，该值指示是否必须加密颁发的安全令牌。"
  remarks: "如果 TokenEncryptionRequired 属性为`true`，安全令牌使用中的凭据进行加密<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>属性。</xref:System.IdentityModel.Scope.EncryptingCredentials%2A>"
  syntax:
    content: public virtual bool TokenEncryptionRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果安全令牌必须加密;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Scope.TokenEncryptionRequired*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Scope.#ctor
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope()
  nameWithType: Scope.Scope()
  fullName: System.IdentityModel.Scope.Scope()
- uid: System.IdentityModel.Scope.#ctor(System.String)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String)
  nameWithType: Scope.Scope(String)
  fullName: System.IdentityModel.Scope.Scope(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,EncryptingCredentials)
  nameWithType: Scope.Scope(String,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,SigningCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials)
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,SigningCredentials,EncryptingCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials,EncryptingCredentials)
- uid: System.IdentityModel.Scope.AppliesToAddress
  parent: System.IdentityModel.Scope
  isExternal: false
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
  fullName: System.IdentityModel.Scope.AppliesToAddress
- uid: System.IdentityModel.Scope.EncryptingCredentials
  parent: System.IdentityModel.Scope
  isExternal: false
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
  fullName: System.IdentityModel.Scope.EncryptingCredentials
- uid: System.IdentityModel.Scope.Properties
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Properties
  nameWithType: Scope.Properties
  fullName: System.IdentityModel.Scope.Properties
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Scope.ReplyToAddress
  parent: System.IdentityModel.Scope
  isExternal: false
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
  fullName: System.IdentityModel.Scope.ReplyToAddress
- uid: System.IdentityModel.Scope.SigningCredentials
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
  fullName: System.IdentityModel.Scope.SigningCredentials
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
  fullName: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Scope.TokenEncryptionRequired
  parent: System.IdentityModel.Scope
  isExternal: false
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
  fullName: System.IdentityModel.Scope.TokenEncryptionRequired
- uid: System.IdentityModel.Scope.#ctor*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope
  nameWithType: Scope.Scope
- uid: System.IdentityModel.Scope.AppliesToAddress*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
- uid: System.IdentityModel.Scope.EncryptingCredentials*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
- uid: System.IdentityModel.Scope.Properties*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Properties
  nameWithType: Scope.Properties
- uid: System.IdentityModel.Scope.ReplyToAddress*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
- uid: System.IdentityModel.Scope.SigningCredentials*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
- uid: System.IdentityModel.Scope.TokenEncryptionRequired*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
