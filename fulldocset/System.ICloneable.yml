### YamlMime:ManagedReference
items:
- uid: System.ICloneable
  id: ICloneable
  children:
  - System.ICloneable.Clone
  langs:
  - csharp
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
  type: Interface
  summary: "克隆的支持，这将类的新实例创建与现有实例相同的值。"
  remarks: "ICloneable 接口使你能够创建现有对象的副本的自定义的实现。 ICloneable 接口包含一个成员，该<xref:System.ICloneable.Clone%2A>方法，这是想以提供超出<xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>.</xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>由提供的克隆支持</xref:System.ICloneable.Clone%2A>  有关克隆、 深与浅表副本和示例的详细信息，请参阅<xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>方法。</xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ICloneable
  implements: []
  platform:
  - net462
- uid: System.ICloneable.Clone
  id: Clone
  parent: System.ICloneable
  langs:
  - csharp
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "创建当前实例副本的新对象。"
  remarks: "生成的克隆必须为相同类型，或与原始实例兼容。       深层副本或浅表复制，可以执行克隆的实现。 中的深层副本会复制所有对象;在浅表副本中，仅了顶级对象都进行了复制和较低级别包含的引用。 因为克隆的调用方不能依赖于执行可预测的克隆操作的方法，我们建议，<xref:System.ICloneable>未实现公共 api。</xref:System.ICloneable>       请参阅<xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>上克隆、 深与浅表副本和示例的详细信息。</xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "此实例副本的新对象。"
  overload: System.ICloneable.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: false
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable.Clone*
  parent: System.ICloneable
  isExternal: false
  name: Clone
  nameWithType: ICloneable.Clone
