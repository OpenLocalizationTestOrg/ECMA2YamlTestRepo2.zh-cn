### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonColumn
  id: ButtonColumn
  children:
  - System.Web.UI.WebControls.ButtonColumn.#ctor
  - System.Web.UI.WebControls.ButtonColumn.ButtonType
  - System.Web.UI.WebControls.ButtonColumn.CausesValidation
  - System.Web.UI.WebControls.ButtonColumn.CommandName
  - System.Web.UI.WebControls.ButtonColumn.DataTextField
  - System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  - System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonColumn.Initialize
  - System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.ButtonColumn.Text
  - System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  langs:
  - csharp
  name: ButtonColumn
  nameWithType: ButtonColumn
  fullName: System.Web.UI.WebControls.ButtonColumn
  type: Class
  summary: "列类型<xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;></xref>包含用户定义的按钮控件。"
  remarks: "使用中的 ButtonColumn 类<xref:System.Web.UI.WebControls.DataGrid>控件中的每一行创建对应的按钮<xref:System.Web.UI.WebControls.DataGrid>控件。</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid> 指定通过设置显示在按钮中的标题<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性。</xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 如果你设置<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性、 ButtonColumn 对象共享相同的标题中的所有按钮。</xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 或者，你可以将 ButtonColumn 按钮绑定到数据源中的字段。 这使你可以显示不同的每个按钮的标题。 指定字段中的值用于文本标题。 设置<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>属性将 ButtonColumn 绑定到数据源中的字段。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       您可以设置格式通过设置显示在按钮中的标题<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>使用格式设置字符串的属性。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       单击按钮在 ButtonColumn 引发<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 你可以以编程方式控制时通过提供的事件处理程序中单击该按钮时执行的操作<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       默认情况下，在单击按钮在 ButtonColumn 时不执行页验证。 页验证确定与验证关联的输入的控件是否控件在页上通过了所有验证控件指定的验证规则。 若要执行页验证在单击按钮时，设置<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>属性`true`。</xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>"
  example:
  - "The following code example demonstrates how to use ButtonColumn class in a <xref:System.Web.UI.WebControls.DataGrid> control to create **Add** buttons.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_178_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_178_1.vb)]"
  syntax:
    content: 'public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataGridColumn
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataGridColumn.DesignMode
  - System.Web.UI.WebControls.DataGridColumn.FooterStyle
  - System.Web.UI.WebControls.DataGridColumn.FooterText
  - System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl
  - System.Web.UI.WebControls.DataGridColumn.HeaderStyle
  - System.Web.UI.WebControls.DataGridColumn.HeaderText
  - System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.ItemStyle
  - System.Web.UI.WebControls.DataGridColumn.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.OnColumnChanged
  - System.Web.UI.WebControls.DataGridColumn.Owner
  - System.Web.UI.WebControls.DataGridColumn.SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.SortExpression
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ToString
  - System.Web.UI.WebControls.DataGridColumn.TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ViewState
  - System.Web.UI.WebControls.DataGridColumn.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ButtonColumn()
  nameWithType: ButtonColumn.ButtonColumn()
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonColumn()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>类。"
  remarks: "ButtonColumn 构造函数用于创建和初始化<xref:System.Web.UI.WebControls.ButtonColumn>类</xref:System.Web.UI.WebControls.ButtonColumn>的新实例"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.ButtonColumn> class and add it to the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_167_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_167_1.vb)]"
  syntax:
    content: public ButtonColumn ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType
  id: ButtonType
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要在中显示的按钮类型<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>对象。"
  remarks: "ButtonType 属性用于指定是否在按钮<xref:System.Web.UI.WebControls.ButtonColumn>对象显示为链接或下压按钮。</xref:System.Web.UI.WebControls.ButtonColumn> 下表列出可能的设置。      |按钮类型 |显示 |  |-----------------|-------------|  |<xref:System.Web.UI.WebControls.ButtonColumnType>|一个链接。 |  |<xref:System.Web.UI.WebControls.ButtonColumnType>|按钮控件。 |      单击中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>引发<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand> </xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumnType> </xref:System.Web.UI.WebControls.ButtonColumnType> 你可以以编程方式控制时通过提供的事件处理程序中单击该按钮时执行的操作<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how use the ButtonType property to specify that the buttons in the <xref:System.Web.UI.WebControls.ButtonColumn> object are displayed as push buttons.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_119_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_119_1.vb)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }
    return:
      type: System.Web.UI.WebControls.ButtonColumnType
      description: "之一<xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_LinkButton&quot; name=&quot;LinkButton&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ButtonColumn.ButtonType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的列类型不是之一<xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
  fullName: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值中的按钮时是否执行验证<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>单击对象。"
  remarks: "默认情况下，页不验证中的按钮时<xref:System.Web.UI.WebControls.ButtonColumn>单击对象。</xref:System.Web.UI.WebControls.ButtonColumn> 页验证确定与验证关联的输入的控件是否控件在页上通过了所有验证控件指定的验证规则。 若要执行页验证中的按钮时<xref:System.Web.UI.WebControls.ButtonColumn>是单击，将这属性设置为`true`。</xref:System.Web.UI.WebControls.ButtonColumn>       这属性的值时`true`，你还可以使用<xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>属性来为其指定验证组的名称<xref:System.Web.UI.WebControls.ButtonColumn>将导致验证。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>       此属性的值存储在视图状态。"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果中的按钮时执行验证<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>单击; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ButtonColumn.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonColumn.CommandName
  fullName: System.Web.UI.WebControls.ButtonColumn.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个字符串，表示要执行中的按钮时的命令<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>单击对象。"
  remarks: "CommandName 属性用于将相关联的命令名称，如`Add`或`Remove`，与按钮。 你可以将 CommandName 属性设置为任何字符串，标识要执行中的按钮时的操作<xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=fullName>单击对象。</xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=fullName> 然后，你可以以编程方式确定的事件处理程序中的命令名称<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件并执行相应的操作。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to use the CommandName property to associate a command name with a button. Then, the command name of the clicked button is determined programmatically in the event handler for the <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> event and the appropriate action is performed.  \n  \n [!code-cs[ButtonColumnCommandName#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_753_1.aspx)]\n [!code-vb[ButtonColumnCommandName#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_753_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示要执行中的按钮时的命令<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>单击。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到数据源中的字段名称<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>对象。"
  remarks: "DataTextField 属性用于指定要绑定到数据源的字段名称<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>对象。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>       将列绑定到的字段而不是直接设置<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性使你可以显示不同的标题中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>通过指定字段中使用的值。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to use the DataTextField property to bind the <xref:System.Web.UI.WebControls.ButtonColumn> object to a field in a data source.  \n  \n [!code-vb[ButtonColumnDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_814_1.aspx)]\n [!code-cs[ButtonColumnDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_814_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的字段名称<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定在每个按钮的标题的显示格式的字符串。"
  remarks: "使用 DataTextFormatString 属性中的按钮的标题提供的自定义显示格式<xref:System.Web.UI.WebControls.ButtonColumn>对象。</xref:System.Web.UI.WebControls.ButtonColumn>       数据格式字符串包含的形式，以冒号分隔的两个部分`{A:Bxx}`。 例如，在格式设置字符串`{0:F2}`设置要显示的定点数与两位小数的单元格的格式。      1> [!NOTE]&1;> 整个字符串必须括在大括号以指示它是一个格式字符串而不是文本字符串。 大括号外的任何文本显示为文字文本。       冒号前的值 (`A`常规示例中) 从零开始的参数列表中，指定的参数索引。      1> [!NOTE] 1> 此值可以设置只为 0，因为在每个单元格只有一个值。       冒号后面的字符 (`B`常规示例中) 指定要显示中的值的格式。 下表列出了常见的格式。      |格式字符 |显示数字值在 |  |----------------------|--------------------------------|  |`C`|货币格式。 |  |`D`|十进制格式。 |  |`E`|科学记数 （指数） 格式。 |  |`F`|固定的格式。 |  |`G`|常规格式。 |  |`N`|数字格式。 |  |`X`|十六进制格式。 |    &1;> [!NOTE]&1;> 格式字符不区分大小写，除`X`，它会显示在指定的大小写的十六进制字符。       格式字符后的值 (`xx`常规示例中) 指定的有效位数或小数位数显示数量。       此属性的值存储在视图状态。       设置字符串格式的详细信息，请参阅[格式化类型](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to display the caption of each button in the <xref:System.Web.UI.WebControls.ButtonColumn> object in currency format.  \n  \n [!code-vb[ButtonColumnDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1201_1.aspx)]\n [!code-cs[ButtonColumnDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1201_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "在每个按钮指定标题的显示格式字符串。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonColumn.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将指定的值转换为将由格式<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>属性。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>"
  remarks: "使用 FormatDataTextValue 方法将指定的值转换为格式所指示的<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>属性。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>      1> [!NOTE]&1;> FormatDataTextValue 方法返回的字符串等效的值，如果<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>未设置属性。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "要设置格式的值。"
    return:
      type: System.String
      description: "<code> dataTextValue </code>转换为格式受支持<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>指示"
  overload: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize
  id: Initialize
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: ButtonColumn.Initialize()
  fullName: System.Web.UI.WebControls.ButtonColumn.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重置<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>为其初始状态的对象。"
  remarks: "Initialize 方法用于重置<xref:System.Web.UI.WebControls.ButtonColumn>为其初始状态的对象。</xref:System.Web.UI.WebControls.ButtonColumn>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重置中的单元格<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>为其初始状态的对象。"
  remarks: "InitializeCell 方法重置中的指定单元格<xref:System.Web.UI.WebControls.ButtonColumn>为其初始状态的对象。</xref:System.Web.UI.WebControls.ButtonColumn>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> ，表示要重置的单元格。"
    - id: columnIndex
      type: System.Int32
      description: "列号单元格所在的位置。"
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "之一<xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;></xref>值。"
  overload: System.Web.UI.WebControls.ButtonColumn.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: Text
  nameWithType: ButtonColumn.Text
  fullName: System.Web.UI.WebControls.ButtonColumn.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置显示的按钮中的标题<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>对象。"
  remarks: "使用文本属性来指定或确定显示在按钮中的标题<xref:System.Web.UI.WebControls.ButtonColumn>对象。</xref:System.Web.UI.WebControls.ButtonColumn>      1> [!NOTE]&1;> 设置文本属性，所有按钮在<xref:System.Web.UI.WebControls.ButtonColumn>共享相同的标题。</xref:System.Web.UI.WebControls.ButtonColumn>       或者，你可以将绑定<xref:System.Web.UI.WebControls.ButtonColumn>给数据源中的字段。</xref:System.Web.UI.WebControls.ButtonColumn> 这使你可以在使用中的指定字段的值的列中显示不同的按钮的标题。 设置<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>属性将绑定<xref:System.Web.UI.WebControls.ButtonColumn>给数据源中的字段。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       此属性的值存储在视图状态。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption for the buttons in the <xref:System.Web.UI.WebControls.ButtonColumn> object.  \n  \n [!code-vb[Classic ButtonColumn.ButtonType Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_349_1.aspx)]\n [!code-cs[Classic ButtonColumn.ButtonType Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_349_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "中的按钮显示的标题<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置验证控件的组，其中<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>对象回发到服务器时要进行验证。"
  remarks: "验证组允许您将在页面上的验证控件分配给特定类别。 每个验证组都可以独立于其他页上的验证组进行验证。 使用 ValidationGroup 属性来为其指定的验证组名称<xref:System.Web.UI.WebControls.ButtonColumn>对象回发到服务器时要进行验证。</xref:System.Web.UI.WebControls.ButtonColumn>       ValidationGroup 属性才起作用时，才的值<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>属性设置为`true`。</xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 当指定 ValidationGroup 属性的值，只有的验证控件才是指定组的一部分时验证<xref:System.Web.UI.WebControls.ButtonColumn>回发到服务器。</xref:System.Web.UI.WebControls.ButtonColumn> 如果未指定 ValidationGroup 属性的值与<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>属性设置为`true`，在页上未分配给验证组的所有验证控件进行都验证时<xref:System.Web.UI.WebControls.ButtonColumn>回发到服务器。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>       此属性的值存储在视图状态。"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "为其控制的验证组<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>对象回发到服务器时要进行验证。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataGridColumn
  isExternal: false
  name: System.Web.UI.WebControls.DataGridColumn
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonColumn()
  nameWithType: ButtonColumn.ButtonColumn()
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonColumn()
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumnType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ButtonColumnType
  nameWithType: ButtonColumnType
  fullName: System.Web.UI.WebControls.ButtonColumnType
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
  fullName: System.Web.UI.WebControls.ButtonColumn.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CommandName
  nameWithType: ButtonColumn.CommandName
  fullName: System.Web.UI.WebControls.ButtonColumn.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextField
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonColumn.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Initialize()
  nameWithType: ButtonColumn.Initialize()
  fullName: System.Web.UI.WebControls.ButtonColumn.Initialize()
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.ButtonColumn.Text
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Text
  nameWithType: ButtonColumn.Text
  fullName: System.Web.UI.WebControls.ButtonColumn.Text
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonColumn
  nameWithType: ButtonColumn.ButtonColumn
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CommandName
  nameWithType: ButtonColumn.CommandName
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonColumn.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Initialize
  nameWithType: ButtonColumn.Initialize
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonColumn.InitializeCell
- uid: System.Web.UI.WebControls.ButtonColumn.Text*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Text
  nameWithType: ButtonColumn.Text
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
