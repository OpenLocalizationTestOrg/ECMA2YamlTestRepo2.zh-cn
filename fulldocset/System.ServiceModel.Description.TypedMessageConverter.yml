### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.TypedMessageConverter
  id: TypedMessageConverter
  children:
  - System.ServiceModel.Description.TypedMessageConverter.#ctor
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  - System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  langs:
  - csharp
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter
  fullName: System.ServiceModel.Description.TypedMessageConverter
  type: Class
  summary: "将类型化的消息转换为非类型化的消息或发送给类型化的消息的非类型化的消息。"
  remarks: "此类提供一些功能，用于将类型化的消息转换为非类型化的消息或发送给类型化的消息的非类型化的消息。 类型化的消息是具有的类型的一个实例<xref:System.ServiceModel.MessageContractAttribute>批注的属性。</xref:System.ServiceModel.MessageContractAttribute> 非类型化的消息是类的指位于实例<xref:System.ServiceModel.Channels.Message>类。</xref:System.ServiceModel.Channels.Message>  还可以批注的类型<xref:System.ServiceModel.MessageContractAttribute>若要创建一个自定义消息类型，以及如何将此类提供的方法以将其转换到非类型化<xref:System.ServiceModel.Channels.Message>实例。</xref:System.ServiceModel.Channels.Message> </xref:System.ServiceModel.MessageContractAttribute>"
  syntax:
    content: public abstract class TypedMessageConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: TypedMessageConverter()
  nameWithType: TypedMessageConverter.TypedMessageConverter()
  fullName: System.ServiceModel.Description.TypedMessageConverter.TypedMessageConverter()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;></xref>类。"
  syntax:
    content: protected TypedMessageConverter ();
    parameters: []
  overload: System.ServiceModel.Description.TypedMessageConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  id: Create(System.Type,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String)
  nameWithType: TypedMessageConverter.Create(Type,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "表示返回的静态方法<xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;></xref>实例。"
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action);
    parameters:
    - id: messageContract
      type: System.Type
      description: "是<xref:System.Type>一种<xref:System.ServiceModel.MessageContractAttribute>。</xref:System.ServiceModel.MessageContractAttribute>批注过</xref:System.Type>消息协定类型"
    - id: action
      type: System.String
      description: "一个操作字符串。"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref>实例。"
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的消息协定类型没有应用 MessageContractAttribute"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  id: Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "表示返回的静态方法<xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;></xref>实例。"
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.DataContractFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "是<xref:System.Type>一种<xref:System.ServiceModel.MessageContractAttribute>。</xref:System.ServiceModel.MessageContractAttribute>批注过</xref:System.Type>消息协定类型"
    - id: action
      type: System.String
      description: "一个操作字符串。"
    - id: formatterAttribute
      type: System.ServiceModel.DataContractFormatAttribute
      description: "A <xref:System.ServiceModel.DataContractFormatAttribute>，它指定要使用的格式化程序。</xref:System.ServiceModel.DataContractFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref>实例。"
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的消息协定类型没有应用 MessageContractAttribute"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  id: Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "表示返回的静态方法<xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;></xref>实例。"
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "是<xref:System.Type>一种<xref:System.ServiceModel.MessageContractAttribute>。</xref:System.ServiceModel.MessageContractAttribute>批注过</xref:System.Type>消息协定类型"
    - id: action
      type: System.String
      description: "一个操作字符串。"
    - id: formatterAttribute
      type: System.ServiceModel.XmlSerializerFormatAttribute
      description: "A <xref:System.ServiceModel.XmlSerializerFormatAttribute>，它指定要使用的格式化程序。</xref:System.ServiceModel.XmlSerializerFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref>实例。"
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的消息协定类型没有应用 MessageContractAttribute"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  id: Create(System.Type,System.String,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String)
  nameWithType: TypedMessageConverter.Create(Type,String,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "表示返回的静态方法<xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;></xref>实例。"
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace);
    parameters:
    - id: messageContract
      type: System.Type
      description: "是<xref:System.Type>一种<xref:System.ServiceModel.MessageContractAttribute>。</xref:System.ServiceModel.MessageContractAttribute>批注过</xref:System.Type>消息协定类型"
    - id: action
      type: System.String
      description: "一个操作字符串。"
    - id: defaultNamespace
      type: System.String
      description: "命名空间。"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref>实例。"
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的消息协定类型没有应用 MessageContractAttribute"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  id: Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "表示返回的静态方法<xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;></xref>实例。"
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.DataContractFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "是<xref:System.Type>一种<xref:System.ServiceModel.MessageContractAttribute>。</xref:System.ServiceModel.MessageContractAttribute>批注过</xref:System.Type>消息协定类型"
    - id: action
      type: System.String
      description: "一个操作字符串。"
    - id: defaultNamespace
      type: System.String
      description: "命名空间。"
    - id: formatterAttribute
      type: System.ServiceModel.DataContractFormatAttribute
      description: "A <xref:System.ServiceModel.DataContractFormatAttribute>，它指定要使用的格式化程序。</xref:System.ServiceModel.DataContractFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref>实例。"
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的消息协定类型没有应用 MessageContractAttribute"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  id: Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "表示返回的静态方法<xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;></xref>实例。"
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "是<xref:System.Type>一种<xref:System.ServiceModel.MessageContractAttribute>。</xref:System.ServiceModel.MessageContractAttribute>批注过</xref:System.Type>消息协定类型"
    - id: action
      type: System.String
      description: "一个操作字符串。"
    - id: defaultNamespace
      type: System.String
      description: "命名空间。"
    - id: formatterAttribute
      type: System.ServiceModel.XmlSerializerFormatAttribute
      description: "A <xref:System.ServiceModel.XmlSerializerFormatAttribute>，它指定要使用的格式化程序。</xref:System.ServiceModel.XmlSerializerFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref>实例。"
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的消息协定类型没有应用 MessageContractAttribute"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  id: FromMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: FromMessage(Message)
  nameWithType: TypedMessageConverter.FromMessage(Message)
  fullName: System.ServiceModel.Description.TypedMessageConverter.FromMessage(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "从指定创建类型化的消息<xref:System.ServiceModel.Channels.Message>实例。</xref:System.ServiceModel.Channels.Message>"
  remarks: "此方法采用非类型化[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]消息，即实例<xref:System.ServiceModel.Channels.Message>，并将其转换为类型化的消息，即<xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute>批注类型的实例</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract object FromMessage (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "非类型化的消息。"
    return:
      type: System.Object
      description: "一个对象，它类型化的消息。"
  overload: System.ServiceModel.Description.TypedMessageConverter.FromMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  id: ToMessage(System.Object)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: ToMessage(Object)
  nameWithType: TypedMessageConverter.ToMessage(Object)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "创建<xref:System.ServiceModel.Channels.Message>从指定的类型化消息的实例。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage);
    parameters:
    - id: typedMessage
      type: System.Object
      description: "类型化的消息。"
    return:
      type: System.ServiceModel.Channels.Message
      description: "A<xref:System.ServiceModel.Channels.Message>实例。</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  id: ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: ToMessage(Object,MessageVersion)
  nameWithType: TypedMessageConverter.ToMessage(Object,MessageVersion)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object,MessageVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "创建<xref:System.ServiceModel.Channels.Message>从指定的类型化消息使用的指定的版本的实例。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage, System.ServiceModel.Channels.MessageVersion version);
    parameters:
    - id: typedMessage
      type: System.Object
      description: "类型化的消息。"
    - id: version
      type: System.ServiceModel.Channels.MessageVersion
      description: "A <xref:System.ServiceModel.Channels.MessageVersion>，它指定版本的 SOAP 和 Ws-addressing 与消息关联。</xref:System.ServiceModel.Channels.MessageVersion>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "A<xref:System.ServiceModel.Channels.Message>实例。</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: TypedMessageConverter()
  nameWithType: TypedMessageConverter.TypedMessageConverter()
  fullName: System.ServiceModel.Description.TypedMessageConverter.TypedMessageConverter()
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String)
  nameWithType: TypedMessageConverter.Create(Type,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String)
- uid: System.ServiceModel.Description.TypedMessageConverter
  parent: System.ServiceModel.Description
  isExternal: false
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter
  fullName: System.ServiceModel.Description.TypedMessageConverter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
- uid: System.ServiceModel.DataContractFormatAttribute
  parent: System.ServiceModel
  isExternal: true
  name: DataContractFormatAttribute
  nameWithType: DataContractFormatAttribute
  fullName: System.ServiceModel.DataContractFormatAttribute
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
- uid: System.ServiceModel.XmlSerializerFormatAttribute
  parent: System.ServiceModel
  isExternal: true
  name: XmlSerializerFormatAttribute
  nameWithType: XmlSerializerFormatAttribute
  fullName: System.ServiceModel.XmlSerializerFormatAttribute
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String)
  nameWithType: TypedMessageConverter.Create(Type,String,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String)
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: FromMessage(Message)
  nameWithType: TypedMessageConverter.FromMessage(Message)
  fullName: System.ServiceModel.Description.TypedMessageConverter.FromMessage(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage(Object)
  nameWithType: TypedMessageConverter.ToMessage(Object)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object)
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage(Object,MessageVersion)
  nameWithType: TypedMessageConverter.ToMessage(Object,MessageVersion)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object,MessageVersion)
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter.TypedMessageConverter
- uid: System.ServiceModel.Description.TypedMessageConverter.Create*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create
  nameWithType: TypedMessageConverter.Create
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: FromMessage
  nameWithType: TypedMessageConverter.FromMessage
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage
  nameWithType: TypedMessageConverter.ToMessage
