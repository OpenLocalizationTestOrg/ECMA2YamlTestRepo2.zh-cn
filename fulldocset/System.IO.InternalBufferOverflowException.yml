### YamlMime:ManagedReference
items:
- uid: System.IO.InternalBufferOverflowException
  id: InternalBufferOverflowException
  children:
  - System.IO.InternalBufferOverflowException.#ctor
  - System.IO.InternalBufferOverflowException.#ctor(System.String)
  - System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: InternalBufferOverflowException
  nameWithType: InternalBufferOverflowException
  fullName: System.IO.InternalBufferOverflowException
  type: Class
  summary: "内部缓冲区溢出时引发的异常。"
  remarks: "在<xref:System.IO.FileSystemWatcher>，当被通知文件更改时，这些更改缓冲区组件中的创建并传递给应用程序编程接口 (Api) 的系统存储。</xref:System.IO.FileSystemWatcher> 如果在短时间内有很多更改，则缓冲区可以轻松地溢出，从而引发，则引发异常，从而实质上是丢失全部更改。 若要阻止缓冲区溢出，使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName>和<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName>属性筛选掉不需要的更改通知。</xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> </xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> 您还可以增加通过内部缓冲区的大小<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName>属性。</xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> 但是，增加缓冲区的大小将占用大量资源，因此保持缓冲区尽可能小。"
  example:
  - "The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive. The example also shows how to properly receive error notifications.  \n  \n [!code-cs[FileSystemWatcher#1](~/add/codesnippet/csharp/t-system.io.internalbuff_1.cs)]\n [!code-vb[FileSystemWatcher#1](~/add/codesnippet/visualbasic/t-system.io.internalbuff_1.vb)]"
  syntax:
    content: 'public class InternalBufferOverflowException : SystemException'
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.InternalBufferOverflowException.#ctor
  id: '#ctor'
  parent: System.IO.InternalBufferOverflowException
  langs:
  - csharp
  name: InternalBufferOverflowException()
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException()
  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException()
  type: Constructor
  assemblies:
  - System
  namespace: System.IO
  summary: "初始化的新默认实例<xref href=&quot;System.IO.InternalBufferOverflowException&quot;></xref>类。"
  remarks: "该组件使用这些构造函数来表示有错误。 如果只能使用它们扩展的类或.NET Framework。 此异常指示已溢出内部缓冲区，用户应在自己的代码以确保它正确恢复采取适当的措施。 溢出的原因，通常更改过多在短时间内，会导致内部通知缓冲区溢出。 若要解决此问题，请使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName>和<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName>属性筛选掉不需要的更改通知。</xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> </xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> 您还可以增加通过内部缓冲区的大小<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName>属性。</xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> 但是，增加缓冲区的大小将占用大量资源，因此保持缓冲区尽可能小。"
  syntax:
    content: public InternalBufferOverflowException ();
    parameters: []
  overload: System.IO.InternalBufferOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.InternalBufferOverflowException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.InternalBufferOverflowException
  langs:
  - csharp
  name: InternalBufferOverflowException(String)
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(String)
  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO
  summary: "初始化的新实例<xref href=&quot;System.IO.InternalBufferOverflowException&quot;></xref>指定与要显示错误消息的类。"
  remarks: "该组件使用这些构造函数来表示有错误。 如果只能使用它们扩展的类或.NET Framework。 此异常指示已溢出内部缓冲区，用户应在自己的代码以确保它正确恢复采取适当的措施。 溢出的原因，通常更改过多在短时间内，会导致内部通知缓冲区溢出。 若要解决此问题，请使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName>和<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName>属性筛选掉不需要的更改通知。</xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> </xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> 您还可以增加通过内部缓冲区的大小<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName>属性。</xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> 但是，增加缓冲区的大小将占用大量资源，因此保持缓冲区尽可能小。"
  syntax:
    content: public InternalBufferOverflowException (string message);
    parameters:
    - id: message
      type: System.String
      description: "要为异常提供的消息。"
  overload: System.IO.InternalBufferOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IO.InternalBufferOverflowException
  langs:
  - csharp
  name: InternalBufferOverflowException(SerializationInfo,StreamingContext)
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(SerializationInfo,StreamingContext)
  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO
  summary: "初始化一个新的空实例<xref href=&quot;System.IO.InternalBufferOverflowException&quot;></xref>是可序列化使用指定的类<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>和<xref:System.Runtime.Serialization.StreamingContext>对象。</xref:System.Runtime.Serialization.StreamingContext>"
  syntax:
    content: protected InternalBufferOverflowException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "序列化 T:System.IO.InternalBufferOverflowException 对象所需的信息。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "源和目标与 T:System.IO.InternalBufferOverflowException 对象相关联的序列化流。"
  overload: System.IO.InternalBufferOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.IO.InternalBufferOverflowException
  langs:
  - csharp
  name: InternalBufferOverflowException(String,Exception)
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(String,Exception)
  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(String,Exception)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO
  summary: "初始化的新实例<xref href=&quot;System.IO.InternalBufferOverflowException&quot;></xref>使用要显示的消息和指定生成的内部异常的类。"
  remarks: "该组件使用这些构造函数来表示有错误。 如果只能使用它们扩展的类或.NET Framework。 此异常指示已溢出内部缓冲区，用户应在自己的代码以确保它正确恢复采取适当的措施。 溢出的原因，通常更改过多在短时间内，会导致内部通知缓冲区溢出。 若要解决此问题，请使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName>和<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName>属性筛选掉不需要的更改通知。</xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> </xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> 您还可以增加通过内部缓冲区的大小<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName>属性。</xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> 但是，增加缓冲区的大小将占用大量资源，因此保持缓冲区尽可能小。"
  syntax:
    content: public InternalBufferOverflowException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "要为异常提供的消息。"
    - id: inner
      type: System.Exception
      description: "内部异常。"
  overload: System.IO.InternalBufferOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.IO.InternalBufferOverflowException.#ctor
  parent: System.IO.InternalBufferOverflowException
  isExternal: false
  name: InternalBufferOverflowException()
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException()
  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException()
- uid: System.IO.InternalBufferOverflowException.#ctor(System.String)
  parent: System.IO.InternalBufferOverflowException
  isExternal: false
  name: InternalBufferOverflowException(String)
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(String)
  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.InternalBufferOverflowException
  isExternal: false
  name: InternalBufferOverflowException(SerializationInfo,StreamingContext)
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(SerializationInfo,StreamingContext)
  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)
  parent: System.IO.InternalBufferOverflowException
  isExternal: false
  name: InternalBufferOverflowException(String,Exception)
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(String,Exception)
  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IO.InternalBufferOverflowException.#ctor*
  parent: System.IO.InternalBufferOverflowException
  isExternal: false
  name: InternalBufferOverflowException
  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException
