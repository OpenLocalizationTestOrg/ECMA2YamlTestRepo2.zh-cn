### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  id: IServerChannelSink
  children:
  - System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  - System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  - System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink
  - System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  langs:
  - csharp
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
  type: Interface
  summary: "提供用于为安全和传输接收器的方法。"
  remarks: "信道接收器提供插件的点，它允许访问基础消息流经通道，以及传输机制用于将消息发送到的远程对象的流。 信道接收器链中的通道接收器提供程序，链接在一起，并且所有通道消息在序列化和传输消息之前都流过此接收器链。"
  example:
  - "The following code example illustrates an implementation of the IServerChannelSink interface.  \n  \n [!code-cs[Remoting_Sinks#60](~/add/codesnippet/csharp/t-system.runtime.remotin_17_1.cs)]\n [!code-cpp[Remoting_Sinks#60](~/add/codesnippet/cpp/t-system.runtime.remotin_17_1.cpp)]  \n  \n See the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface documentation for an example of the corresponding server sink provider implementation."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IServerChannelSink : System.Runtime.Remoting.Channels.IChannelSinkBase
  implements:
  - System.Runtime.Remoting.Channels.IChannelSinkBase
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  langs:
  - csharp
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: IServerChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "从当前接收器的方法调用异步发送的响应进行处理的请求。"
  remarks: "`state`参数包含已推送到通道接收器堆栈并与当前接收器关联的信息。"
  example:
  - >-
    [!code-cpp[CommonTransportKeys#1](~/add/codesnippet/cpp/c6d0c233-95cd-4d1f-b4f8-_1.cpp)]
     [!code-cs[CommonTransportKeys#1](~/add/codesnippet/csharp/c6d0c233-95cd-4d1f-b4f8-_1.cs)]
     [!code-vb[CommonTransportKeys#1](~/add/codesnippet/visualbasic/c6d0c233-95cd-4d1f-b4f8-_1.vb)]
  syntax:
    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "回服务器传输接收器接收器堆栈。"
    - id: state
      type: System.Object
      description: "与此接收器相关联的请求端上生成的信息。"
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "响应消息中。"
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "要将添加到发往客户端返回消息的标头。"
    - id: stream
      type: System.IO.Stream
      description: "流标题回传输接收器。"
  overload: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接调用方没有基础结构权限。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  id: GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  langs:
  - csharp
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: IServerChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "返回<xref:System.IO.Stream>提供的响应消息进行序列化到其上。</xref:System.IO.Stream>"
  remarks: "当需要创建响应流时，调用此方法。"
  syntax:
    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "回服务器传输接收器接收器堆栈。"
    - id: state
      type: System.Object
      description: "已推送到堆栈被该接收器状态。"
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "要序列化的响应消息。"
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "要放在客户端的响应流中的标头。"
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>提供的响应消息进行序列化到其上。</xref:System.IO.Stream>"
  overload: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接调用方没有基础结构权限。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink
  id: NextChannelSink
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  langs:
  - csharp
  name: NextChannelSink
  nameWithType: IServerChannelSink.NextChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "获取下一个服务器 server 接收器链中的通道接收器。"
  remarks: "信道接收器链中的接收器提供程序，链接在一起，并且所有通道消息在序列化和传输消息之前都流过链。"
  syntax:
    content: public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "下一步的服务器信道接收器服务器接收器链中。"
  overload: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接调用方没有所需<xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;></xref>权限。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  id: ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  langs:
  - csharp
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: IServerChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "从当前接收器处理的请求消息。"
  remarks: "代理作业是将转换为消息对象调用的方法调用。 此消息对象，该实现对象<xref:System.Runtime.Remoting.Messaging.IMessage>接口，从客户端到服务器端通过传递消息的接收器对象上调用 ProcessMessage。</xref:System.Runtime.Remoting.Messaging.IMessage> 也就是说，每个消息接收器负责在下一个消息接收器上调用 ProcessMessage，它具有执行其工作后，消息接收器链接在一起。 例如，与同步相关的消息接收器可能会导致锁获取或发布，并进一步下游消息接收器然后委派。"
  syntax:
    content: public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack
      description: "接收器调用了当前接收器的通道堆栈。"
    - id: requestMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "包含请求的消息。"
    - id: requestHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "标头检索从来自客户端的传入消息。"
    - id: requestStream
      type: System.IO.Stream
      description: "需要进行处理并传递给反序列化接收器流。"
    - id: responseMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "此方法返回时，包含<xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;> </xref> ，包含响应消息。 此参数传递时未经初始化。"
    - id: responseHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "此方法返回时，包含<xref href=&quot;System.Runtime.Remoting.Channels.ITransportHeaders&quot;></xref>容纳要添加到客户端返回消息标题的标头。 此参数传递时未经初始化。"
    - id: responseStream
      type: System.IO.Stream
      description: "此方法返回时，包含<xref:System.IO.Stream>即回传输接收器的标题。</xref:System.IO.Stream> 此参数传递时未经初始化。"
    return:
      type: System.Runtime.Remoting.Channels.ServerProcessing
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ServerProcessing&quot;> </xref>状态值，提供有关如何处理消息的信息。"
  overload: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接调用方没有基础结构权限。"
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  isExternal: false
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: IServerChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerResponseChannelSinkStack
  nameWithType: IServerResponseChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Channels.ITransportHeaders
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ITransportHeaders
  nameWithType: ITransportHeaders
  fullName: System.Runtime.Remoting.Channels.ITransportHeaders
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  isExternal: false
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: IServerChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  isExternal: false
  name: NextChannelSink
  nameWithType: IServerChannelSink.NextChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  isExternal: false
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: IServerChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.ServerProcessing
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ServerProcessing
  nameWithType: ServerProcessing
  fullName: System.Runtime.Remoting.Channels.ServerProcessing
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkStack
  nameWithType: IServerChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse*
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  isExternal: false
  name: AsyncProcessResponse
  nameWithType: IServerChannelSink.AsyncProcessResponse
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream*
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  isExternal: false
  name: GetResponseStream
  nameWithType: IServerChannelSink.GetResponseStream
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink*
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  isExternal: false
  name: NextChannelSink
  nameWithType: IServerChannelSink.NextChannelSink
- uid: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage*
  parent: System.Runtime.Remoting.Channels.IServerChannelSink
  isExternal: false
  name: ProcessMessage
  nameWithType: IServerChannelSink.ProcessMessage
