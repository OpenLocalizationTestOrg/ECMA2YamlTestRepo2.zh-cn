### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecurityMessageProperty
  id: SecurityMessageProperty
  children:
  - System.ServiceModel.Security.SecurityMessageProperty.#ctor
  - System.ServiceModel.Security.SecurityMessageProperty.CreateCopy
  - System.ServiceModel.Security.SecurityMessageProperty.Dispose
  - System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
  - System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
  - System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
  - System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
  - System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
  - System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
  - System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
  - System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
  - System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
  - System.ServiceModel.Security.SecurityMessageProperty.TransportToken
  langs:
  - csharp
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty
  fullName: System.ServiceModel.Security.SecurityMessageProperty
  type: Class
  summary: "包含与安全相关的属性且附加到消息。"
  remarks: "客户端身份验证结果被转换为的实例<xref:System.ServiceModel.ServiceSecurityContext>，连接到使用 SecurityMessageProperty 的消息。</xref:System.ServiceModel.ServiceSecurityContext> 此属性可以由更高版本的层，用于实现自定义授权逻辑。"
  syntax:
    content: 'public class SecurityMessageProperty : IDisposable, System.ServiceModel.Channels.IMessageProperty'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.ServiceModel.Channels.IMessageProperty
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: SecurityMessageProperty()
  nameWithType: SecurityMessageProperty.SecurityMessageProperty()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.SecurityMessageProperty()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Security.SecurityMessageProperty&quot;></xref>类。"
  syntax:
    content: public SecurityMessageProperty ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy
  id: CreateCopy
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: SecurityMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "克隆此类的当前实例。"
  remarks: "若要访问中的任何对象<xref:System.ServiceModel.Security.SecurityMessageProperty>，如<xref:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext%2A>， <xref:System.ServiceModel.Security.SecurityMessageProperty.TransportToken%2A>，或<xref:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens%2A>)，必须创建副本，因为消息已释放的后，这些属性是未定义。</xref:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens%2A> </xref:System.ServiceModel.Security.SecurityMessageProperty.TransportToken%2A> </xref:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext%2A> </xref:System.ServiceModel.Security.SecurityMessageProperty>"
  syntax:
    content: public System.ServiceModel.Channels.IMessageProperty CreateCopy ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.IMessageProperty
      description: "<xref:System.ServiceModel.Channels.IMessageProperty>克隆从当前实例的此类。</xref:System.ServiceModel.Channels.IMessageProperty>"
  overload: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.Dispose
  id: Dispose
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityMessageProperty.Dispose()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "释放此类的当前实例。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityMessageProperty.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
  id: ExternalAuthorizationPolicies
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: ExternalAuthorizationPolicies
  nameWithType: SecurityMessageProperty.ExternalAuthorizationPolicies
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置外部授权策略的集合。"
  remarks: "默认情况下，<xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>创建<xref:System.ServiceModel.ServiceSecurityContext>.</xref:System.ServiceModel.ServiceSecurityContext>过程的一部分这些授权策略调用</xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ExternalAuthorizationPolicies { get; set; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;类型的<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref>。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)
  id: GetOrCreate(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: GetOrCreate(Message)
  nameWithType: SecurityMessageProperty.GetOrCreate(Message)
  fullName: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或从指定的消息创建此类的实例。"
  syntax:
    content: public static System.ServiceModel.Security.SecurityMessageProperty GetOrCreate (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>.</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.ServiceModel.Security.SecurityMessageProperty
      description: "实例<xref href=&quot;System.ServiceModel.Security.SecurityMessageProperty&quot;> </xref>。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
  id: HasIncomingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: HasIncomingSupportingTokens
  nameWithType: SecurityMessageProperty.HasIncomingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "指示传入消息是否包含至少一个支持安全令牌。"
  remarks: "支持令牌除了提供提供包含在绑定的主体令牌中的之外的其他声明。 支持令牌可以在不同于绑定的范围的范围。"
  syntax:
    content: public bool HasIncomingSupportingTokens { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens*>包含至少一个条目; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens*>"
  overload: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
  id: IncomingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: IncomingSupportingTokens
  nameWithType: SecurityMessageProperty.IncomingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置传入支持令牌的集合。"
  remarks: "支持令牌除了提供提供包含在绑定的主体令牌中的之外的其他声明。 支持令牌可以在不同于绑定的范围的范围。"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.SupportingTokenSpecification> IncomingSupportingTokens { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.SupportingTokenSpecification}
      description: "A &lt;xref:System.Collections.ObjectModel.Collection%601&gt;类型的<xref href=&quot;System.ServiceModel.Security.SupportingTokenSpecification&quot;> </xref>。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
  id: InitiatorToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: InitiatorToken
  nameWithType: SecurityMessageProperty.InitiatorToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置<xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref>此消息的发起方令牌。"
  remarks: "如果消息模式要求多条消息，则发起方令牌用于从发起方到接收方的消息签名和从接收方到发起方的加密。"
  syntax:
    content: public System.ServiceModel.Security.SecurityTokenSpecification InitiatorToken { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityTokenSpecification
      description: "<xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;> </xref>此消息的发起方令牌。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
  id: OutgoingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: OutgoingSupportingTokens
  nameWithType: SecurityMessageProperty.OutgoingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取集合的传出<xref href=&quot;System.ServiceModel.Security.SupportingTokenSpecification&quot;></xref>对象。"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.SupportingTokenSpecification> OutgoingSupportingTokens { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.SupportingTokenSpecification}
      description: "传出支持令牌的集合。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
  id: ProtectionToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: ProtectionToken
  nameWithType: SecurityMessageProperty.ProtectionToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置<xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref>保护令牌，此消息。"
  remarks: "保护令牌用于签名和加密的对称安全绑定使用。"
  syntax:
    content: public System.ServiceModel.Security.SecurityTokenSpecification ProtectionToken { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityTokenSpecification
      description: "<xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;> </xref>保护令牌，此消息。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
  id: RecipientToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: RecipientToken
  nameWithType: SecurityMessageProperty.RecipientToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置<xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref>此消息的接收方令牌。"
  remarks: "如果消息模式要求多条消息，则接收方令牌用于从发起方到接收方的加密和从接收方到发起方的消息签名。"
  syntax:
    content: public System.ServiceModel.Security.SecurityTokenSpecification RecipientToken { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityTokenSpecification
      description: "<xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;> </xref>此消息的接收方令牌。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
  id: SenderIdPrefix
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: SenderIdPrefix
  nameWithType: SecurityMessageProperty.SenderIdPrefix
  fullName: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置此消息的 ID 前缀的发件人。"
  syntax:
    content: public string SenderIdPrefix { get; set; }
    return:
      type: System.String
      description: "此消息发送方 ID 前缀。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "该属性值将<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "属性值的任何字符是字母、 数字或等于&quot;_&quot;、&quot;。&quot;，或&quot;-&quot;。"
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
  id: ServiceSecurityContext
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: ServiceSecurityContext
  nameWithType: SecurityMessageProperty.ServiceSecurityContext
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置<xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;></xref>此消息。"
  remarks: "此类用于获取有关运行时安全上下文的信息。 客户端成功进行身份验证时，会创建安全上下文。 可以从该类的实例获取从客户端和当前服务实例的安全信息。       类的一个常见用途是检索当前为了向客户端授权访问方法时的声明集。"
  syntax:
    content: public System.ServiceModel.ServiceSecurityContext ServiceSecurityContext { get; set; }
    return:
      type: System.ServiceModel.ServiceSecurityContext
      description: "<xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;> </xref>此消息的对象。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.TransportToken
  id: TransportToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: TransportToken
  nameWithType: SecurityMessageProperty.TransportToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.TransportToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置<xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref>此消息的传输令牌。"
  remarks: "传输令牌提供传输级别安全。 通过 HTTPS 使用的令牌是传输令牌的一个示例。"
  syntax:
    content: public System.ServiceModel.Security.SecurityTokenSpecification TransportToken { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityTokenSpecification
      description: "<xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;> </xref>此消息的传输令牌。"
  overload: System.ServiceModel.Security.SecurityMessageProperty.TransportToken*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Security.SecurityMessageProperty.#ctor
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: SecurityMessageProperty()
  nameWithType: SecurityMessageProperty.SecurityMessageProperty()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.SecurityMessageProperty()
- uid: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: CreateCopy()
  nameWithType: SecurityMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy()
- uid: System.ServiceModel.Channels.IMessageProperty
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IMessageProperty
  nameWithType: IMessageProperty
  fullName: System.ServiceModel.Channels.IMessageProperty
- uid: System.ServiceModel.Security.SecurityMessageProperty.Dispose
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: Dispose()
  nameWithType: SecurityMessageProperty.Dispose()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.Dispose()
- uid: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ExternalAuthorizationPolicies
  nameWithType: SecurityMessageProperty.ExternalAuthorizationPolicies
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: GetOrCreate(Message)
  nameWithType: SecurityMessageProperty.GetOrCreate(Message)
  fullName: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(Message)
- uid: System.ServiceModel.Security.SecurityMessageProperty
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty
  fullName: System.ServiceModel.Security.SecurityMessageProperty
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: HasIncomingSupportingTokens
  nameWithType: SecurityMessageProperty.HasIncomingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: IncomingSupportingTokens
  nameWithType: SecurityMessageProperty.IncomingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.SupportingTokenSpecification}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<SupportingTokenSpecification>
  nameWithType: Collection<SupportingTokenSpecification>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.SupportingTokenSpecification>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Security.SupportingTokenSpecification>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Security.SupportingTokenSpecification
    name: SupportingTokenSpecification
    nameWithType: SupportingTokenSpecification
    fullName: SupportingTokenSpecification
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: InitiatorToken
  nameWithType: SecurityMessageProperty.InitiatorToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
- uid: System.ServiceModel.Security.SecurityTokenSpecification
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityTokenSpecification
  nameWithType: SecurityTokenSpecification
  fullName: System.ServiceModel.Security.SecurityTokenSpecification
- uid: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: OutgoingSupportingTokens
  nameWithType: SecurityMessageProperty.OutgoingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
- uid: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ProtectionToken
  nameWithType: SecurityMessageProperty.ProtectionToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: RecipientToken
  nameWithType: SecurityMessageProperty.RecipientToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: SenderIdPrefix
  nameWithType: SecurityMessageProperty.SenderIdPrefix
  fullName: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: SecurityMessageProperty.ServiceSecurityContext
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
- uid: System.ServiceModel.ServiceSecurityContext
  parent: System.ServiceModel
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: ServiceSecurityContext
  fullName: System.ServiceModel.ServiceSecurityContext
- uid: System.ServiceModel.Security.SecurityMessageProperty.TransportToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: TransportToken
  nameWithType: SecurityMessageProperty.TransportToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.TransportToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.#ctor*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty.SecurityMessageProperty
- uid: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: CreateCopy
  nameWithType: SecurityMessageProperty.CreateCopy
- uid: System.ServiceModel.Security.SecurityMessageProperty.Dispose*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: Dispose
  nameWithType: SecurityMessageProperty.Dispose
- uid: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ExternalAuthorizationPolicies
  nameWithType: SecurityMessageProperty.ExternalAuthorizationPolicies
- uid: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: GetOrCreate
  nameWithType: SecurityMessageProperty.GetOrCreate
- uid: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: HasIncomingSupportingTokens
  nameWithType: SecurityMessageProperty.HasIncomingSupportingTokens
- uid: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: IncomingSupportingTokens
  nameWithType: SecurityMessageProperty.IncomingSupportingTokens
- uid: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: InitiatorToken
  nameWithType: SecurityMessageProperty.InitiatorToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: OutgoingSupportingTokens
  nameWithType: SecurityMessageProperty.OutgoingSupportingTokens
- uid: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ProtectionToken
  nameWithType: SecurityMessageProperty.ProtectionToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: RecipientToken
  nameWithType: SecurityMessageProperty.RecipientToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: SenderIdPrefix
  nameWithType: SecurityMessageProperty.SenderIdPrefix
- uid: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: SecurityMessageProperty.ServiceSecurityContext
- uid: System.ServiceModel.Security.SecurityMessageProperty.TransportToken*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: TransportToken
  nameWithType: SecurityMessageProperty.TransportToken
