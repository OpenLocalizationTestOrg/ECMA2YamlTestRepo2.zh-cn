### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.OneWayBindingElement
  id: OneWayBindingElement
  children:
  - System.ServiceModel.Channels.OneWayBindingElement.#ctor
  - System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings
  - System.ServiceModel.Channels.OneWayBindingElement.Clone
  - System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels
  - System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable
  - System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings
  - System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: OneWayBindingElement
  nameWithType: OneWayBindingElement
  fullName: System.ServiceModel.Channels.OneWayBindingElement
  type: Class
  summary: "启用数据包路由并使用单向方法。"
  remarks: "若要启用数据包路由*单向转换*层是必需的此类提供。 此类是执行调用的消息级形状更改的绑定堆栈中的一个绑定`OneWayBindingElement`。 此形状更改可采用<xref:System.ServiceModel.Channels.IDuplexSessionChannel>或<xref:System.ServiceModel.Channels.IRequestChannel>并公开其作为<xref:System.ServiceModel.Channels.IInputChannel>，或反之可能需要的<xref:System.ServiceModel.Channels.IDuplexSessionChannel>或<xref:System.ServiceModel.Channels.IRequestChannel>并公开其作为一种<xref:System.ServiceModel.Channels.IOutputChannel>。</xref:System.ServiceModel.Channels.IOutputChannel> </xref:System.ServiceModel.Channels.IRequestChannel> </xref:System.ServiceModel.Channels.IDuplexSessionChannel> </xref:System.ServiceModel.Channels.IInputChannel> </xref:System.ServiceModel.Channels.IRequestChannel> </xref:System.ServiceModel.Channels.IDuplexSessionChannel> 用户可以创建自定义绑定的上层此绑定置于具有会话功能或请求 / 答复传输使其数据包路由。       此类也是有用的当你想要公开单向方法更自然的方式。 可以在这一层，如复合双工和可靠消息传递应用更多的转换。"
  syntax:
    content: 'public sealed class OneWayBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.BindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: OneWayBindingElement()
  nameWithType: OneWayBindingElement.OneWayBindingElement()
  fullName: System.ServiceModel.Channels.OneWayBindingElement.OneWayBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Channels.OneWayBindingElement&quot;></xref>类。"
  syntax:
    content: public OneWayBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.OneWayBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: BuildChannelFactory(BindingContext)
  nameWithType: OneWayBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "要添加。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: BuildChannelListener(BindingContext)
  nameWithType: OneWayBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "要添加。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: OneWayBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener(BindingContext)
  nameWithType: OneWayBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings
  id: ChannelPoolSettings
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: ChannelPoolSettings
  nameWithType: OneWayBindingElement.ChannelPoolSettings
  fullName: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取通道池设置。"
  syntax:
    content: public System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings { get; set; }
    return:
      type: System.ServiceModel.Channels.ChannelPoolSettings
      description: "A <xref href=&quot;System.ServiceModel.Channels.ChannelPoolSettings&quot;> </xref>对象，包含的通道池的属性与此绑定元素关联。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: OneWayBindingElement.Clone()
  fullName: System.ServiceModel.Channels.OneWayBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "克隆此类的实例。"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "此类的此实例的克隆的副本。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: OneWayBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "要添加。"
    return:
      type: T
      description: "要添加。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels
  id: MaxAcceptedChannels
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: MaxAcceptedChannels
  nameWithType: OneWayBindingElement.MaxAcceptedChannels
  fullName: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置的最大可以接受的通道数。"
  syntax:
    content: public int MaxAcceptedChannels { get; set; }
    return:
      type: System.Int32
      description: "最大可以接受的通道数目。 默认值为 10。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable
  id: PacketRoutable
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: PacketRoutable
  nameWithType: OneWayBindingElement.PacketRoutable
  fullName: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取或设置一个值，该值指示是否启用数据包路由。"
  remarks: "此类可以选择使用转换的消息级协议`DuplexSessionChannel` / `RequestChannel` / `ReplyChannel`成单向通道，并允许对已转换通道的消息进行路由。 由 PacketRoutable 属性控制此协议的使用。       当此属性是`true`后,`DuplexSessionChannel`启动 （例如缓冲 TCP 和命名管道），此类添加的消息标头 (MustUnderstand = `false`，签名启用了安全设置)，在语义上意味着&quot;可以数据包路由此通道&quot;。 在接受程序端，当此属性为`true`，此类查找第一个通道上接收的消息中的该标头。 如果此标头不存在，[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]使通道出错。 如果标头存在，然后[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]到共享的输入通道都新通道。       要转换的请求-答复通道 （例如，TCP 流式处理或 HTTP） 当此属性是`true`，此标头添加到每个请求，以指示请求可以路由数据包。 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]此外验证`SendRequest`返回`null`和使用回复`null`服务器上。"
  syntax:
    content: public bool PacketRoutable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用数据包路由，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings
  id: ShouldSerializeChannelPoolSettings
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: ShouldSerializeChannelPoolSettings()
  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings()
  fullName: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "返回是否应序列化与此绑定元素关联的通道池的属性。"
  syntax:
    content: public bool ShouldSerializeChannelPoolSettings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应序列化的通道池设置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.OneWayBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "导出表示单向绑定元素的自定义策略断言。"
  remarks: "此方法与绑定相关的语句写入特定协定公开的 WSDL 信息，并由[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]以通知客户端绑定堆栈中此自定义绑定元素是否存在。       此方法采用两个参数︰<xref:System.ServiceModel.Description.MetadataExporter>和<xref:System.ServiceModel.Description.PolicyConversionContext>对象。</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataExporter> 使用<xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>， <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>，和<xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>方法以获取已经从不同范围导出的策略断言的集合。</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A> 然后使用此方法将你自己的策略断言添加到适当的集合。       <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A>属性可公开<xref:System.ServiceModel.Description.ContractDescription>正在导出的终结点。</xref:System.ServiceModel.Description.ContractDescription> </xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> 这样，此方法以正确限定它们的导出的策略断言的范围。 例如，代码中的安全属性可以添加到行为<xref:System.ServiceModel.Description.ContractDescription>指示安全策略断言应该添加其中。</xref:System.ServiceModel.Description.ContractDescription>       一旦将自定义策略断言附加到 WSDL 信息，客户端可以检测和导入通过实现的自定义绑定断言<xref:System.ServiceModel.Description.IPolicyImportExtension>接口。</xref:System.ServiceModel.Description.IPolicyImportExtension>"
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;> </xref>可用来修改导出过程。"
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref>可用来插入自定义策略断言。"
  overload: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: System.ServiceModel.Channels.BindingElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: OneWayBindingElement()
  nameWithType: OneWayBindingElement.OneWayBindingElement()
  fullName: System.ServiceModel.Channels.OneWayBindingElement.OneWayBindingElement()
- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: BuildChannelFactory(BindingContext)
  nameWithType: OneWayBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: BuildChannelListener(BindingContext)
  nameWithType: OneWayBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: OneWayBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory(BindingContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: CanBuildChannelListener(BindingContext)
  nameWithType: OneWayBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: ChannelPoolSettings
  nameWithType: OneWayBindingElement.ChannelPoolSettings
  fullName: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings
- uid: System.ServiceModel.Channels.ChannelPoolSettings
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ChannelPoolSettings
  nameWithType: ChannelPoolSettings
  fullName: System.ServiceModel.Channels.ChannelPoolSettings
- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: Clone()
  nameWithType: OneWayBindingElement.Clone()
  fullName: System.ServiceModel.Channels.OneWayBindingElement.Clone()
- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: OneWayBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: MaxAcceptedChannels
  nameWithType: OneWayBindingElement.MaxAcceptedChannels
  fullName: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: PacketRoutable
  nameWithType: OneWayBindingElement.PacketRoutable
  fullName: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable
- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: ShouldSerializeChannelPoolSettings()
  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings()
  fullName: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings()
- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: OneWayBindingElement
  nameWithType: OneWayBindingElement.OneWayBindingElement
- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: OneWayBindingElement.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: OneWayBindingElement.BuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: OneWayBindingElement.CanBuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: OneWayBindingElement.CanBuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: ChannelPoolSettings
  nameWithType: OneWayBindingElement.ChannelPoolSettings
- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: Clone
  nameWithType: OneWayBindingElement.Clone
- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: OneWayBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: MaxAcceptedChannels
  nameWithType: OneWayBindingElement.MaxAcceptedChannels
- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: PacketRoutable
  nameWithType: OneWayBindingElement.PacketRoutable
- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: ShouldSerializeChannelPoolSettings
  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings
- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.OneWayBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
