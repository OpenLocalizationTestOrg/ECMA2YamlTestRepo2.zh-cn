### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.MethodExpression
  id: MethodExpression
  children:
  - System.Web.UI.WebControls.Expressions.MethodExpression.#ctor
  - System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
  - System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
  - System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
  langs:
  - csharp
  name: MethodExpression
  nameWithType: MethodExpression
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression
  type: Class
  summary: "使您能够指定某个方法中定义的自定义 LINQ 查询。"
  remarks: "<xref:System.Web.UI.WebControls.QueryExtender>控件支持自定义 LINQ 查询。</xref:System.Web.UI.WebControls.QueryExtender> 可以在方法中定义自定义 LINQ 查询，还可以使用方法表达式筛选器选项来调用中的查询<xref:System.Web.UI.WebControls.QueryExtender>控件。</xref:System.Web.UI.WebControls.QueryExtender>       包含自定义 LINQ 查询的方法必须满足以下条件:-该方法必须是静态 (`Shared`在 Visual Basic 中)。 第一个参数必须是<xref:System.Linq.IQueryable%601>或<xref:System.Collections.Generic.IEnumerable%601>对象。</xref:System.Collections.Generic.IEnumerable%601> </xref:System.Linq.IQueryable%601> 方法可以具有多个参数。      -返回的值不能更改<xref:System.Linq.IQueryable%601>或<xref:System.Collections.Generic.IEnumerable%601>查询的类型。</xref:System.Collections.Generic.IEnumerable%601> </xref:System.Linq.IQueryable%601>       包含按以下顺序查询的方法的方法表达式，用于搜索︰ 1。  如果<xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A>中指定属性<xref:System.Web.UI.WebControls.QueryExtender>控件，方法表达式，用于对象中寻找中指定类型的方法。</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A>      2.  如果数据源实现<xref:System.Web.DynamicData.IDynamicDataSource>，该方法查找上下文类型上的方法 (<xref:System.Data.Linq.DataContext>或<xref:System.Data.Objects.ObjectContext>对象。)</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Linq.DataContext> </xref:System.Web.DynamicData.IDynamicDataSource>    3.  该方法查找模板控件中、 在页上，类的基类或用户控件中的方法。       与相似方法表达式类进行<xref:System.Web.UI.WebControls.Expressions.CustomExpression>类相似，只不过方法表达式执行以响应方法调用，以及在响应某个事件中执行自定义表达式。</xref:System.Web.UI.WebControls.Expressions.CustomExpression>"
  example:
  - "The following example shows how to search the ListPrice field of the Products table in the AdventureWorks database for products that have a list price of 400 or more. This example shows how to create a custom LINQ query in a method in page code and how to invoke the method in the <xref:System.Web.UI.WebControls.QueryExtender> control.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function FilterStandardPrice(ByVal query As _  \n        IQueryable(Of Product)) As IQueryable(Of Product)  \n        Return From p In query _  \n            Where p.ListPrice >= 400 _  \n            Select p  \n    End Function  \n```  \n  \n [C#]  \n  \n```  \npublic static IQueryable<Product>   \n        FilterStandardPrice(IQueryable<Product> query)  \n{  \n        return from p in query  \n                  where p.ListPrice >= 400  \n                  select p;  \n  \n    }  \n```  \n  \n The following example shows how to call the method in the page.  \n  \n```  \n<html>  \n<head runat=\"server\">  \n  <title>Custom Filter</title>  \n</head>  \n<body>  \n  <form id=\"form1\" runat=\"server\">  \n    <asp:LinqDataSource ID=\"LinqDataSource1\" runat=\"server\"   \n        ContextTypeName=\"AdventureworksDataContext\" EntityTypeName=\"\"   \n        TableName=\"Products\">  \n    </asp:LinqDataSource>  \n  \n    <asp:QueryExtender ID=\"QueryExtender1\" runat=\"server\"   \n        TargetControlID=\"LinqDataSource1\">  \n      <asp:MethodExpression MethodName=\"FilterStandardPrice\" >  \n      </asp:MethodExpression>  \n    </asp:QueryExtender>  \n  \n    <asp:GridView ID=\"GridView1\" runat=\"server\"   \n        DataSourceID=\"LinqDataSource1\"   \n        DataKeyNames=\"ProductID\"   \n    </asp:GridView>  \n  </form>  \n</body>  \n</html>  \n```"
  syntax:
    content: 'public class MethodExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: MethodExpression()
  nameWithType: MethodExpression.MethodExpression()
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.MethodExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.Expressions.MethodExpression&quot;></xref>类。"
  syntax:
    content: public MethodExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: MethodExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "使用指定解析表达式<xref:System.Linq.IQueryable>对象。</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "要使用的数据源控件。"
    return:
      type: System.Linq.IQueryable
      description: "实例<xref:System.Linq.IQueryable>对象，用于解析表达式。</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "数据源控件是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "找不到该方法。       -或者-此方法不是静态。       -传递的类型<xref uid=&quot;langword_csharp_IQuerable&lt;T&gt;&quot; name=&quot;IQuerable&lt;T&gt;&quot; href=&quot;&quot;></xref>对象已更改。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
  id: IgnoreIfNotFound
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: IgnoreIfNotFound
  nameWithType: MethodExpression.IgnoreIfNotFound
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "获取或设置一个值，该值指示是否应忽略该表达式。"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.MethodExpression>对象搜索查找特定位置并以特定顺序搜索包含查询的方法。</xref:System.Web.UI.WebControls.Expressions.MethodExpression> 你可以将此属性设置为`false`引发异常，如果<xref:System.Web.UI.WebControls.Expressions.CustomExpression>对象未找到包含 LINQ 的方法。</xref:System.Web.UI.WebControls.Expressions.CustomExpression>"
  syntax:
    content: public bool IgnoreIfNotFound { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果表达式将被忽略;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
  id: MethodName
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: MethodName
  nameWithType: MethodExpression.MethodName
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "获取或设置包含自定义 LINQ 查询的方法的名称。"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.MethodExpression>对象可用于调用某个方法中定义的自定义 LINQ 查询。</xref:System.Web.UI.WebControls.Expressions.MethodExpression> 指定的方法中<xref:System.Web.UI.WebControls.QueryExtender>页中的控件。</xref:System.Web.UI.WebControls.QueryExtender>"
  example:
  - "The following example shows how to specify the `FilterStandardPrice` method in the <xref:System.Web.UI.WebControls.QueryExtender> control. The custom LINQ query is defined in a `FilterStandardPrice` method.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtender1\" runat=\"server\"   \n    TargetControlID=\"LinqDataSource1\">  \n  <asp:MethodExpression MethodName=\"FilterStandardPrice\">  \n  </asp:MethodExpression>  \n  </asp:QueryExtender>  \n```"
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "包含自定义 LINQ 查询的方法的名称。"
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: TypeName
  nameWithType: MethodExpression.TypeName
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "获取或设置的方法包含自定义查询的类。"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.MethodExpression>类，可指定一个自定义表达式中的数据源。<xref:System.Web.UI.WebControls.QueryExtender>控件。</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.MethodExpression> 此 TypeName 属性可用于指定该方法所属的类。"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "类的方法的成员。"
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: MethodExpression()
  nameWithType: MethodExpression.MethodExpression()
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.MethodExpression()
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: MethodExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: IgnoreIfNotFound
  nameWithType: MethodExpression.IgnoreIfNotFound
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: MethodName
  nameWithType: MethodExpression.MethodName
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: TypeName
  nameWithType: MethodExpression.TypeName
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: MethodExpression
  nameWithType: MethodExpression.MethodExpression
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: GetQueryable
  nameWithType: MethodExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: IgnoreIfNotFound
  nameWithType: MethodExpression.IgnoreIfNotFound
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: MethodName
  nameWithType: MethodExpression.MethodName
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: TypeName
  nameWithType: MethodExpression.TypeName
