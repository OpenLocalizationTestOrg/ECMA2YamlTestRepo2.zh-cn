### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebApplicationInformation
  id: WebApplicationInformation
  children:
  - System.Web.Management.WebApplicationInformation.ApplicationDomain
  - System.Web.Management.WebApplicationInformation.ApplicationPath
  - System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  - System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebApplicationInformation.MachineName
  - System.Web.Management.WebApplicationInformation.ToString
  - System.Web.Management.WebApplicationInformation.TrustLevel
  langs:
  - csharp
  name: WebApplicationInformation
  nameWithType: WebApplicationInformation
  fullName: System.Web.Management.WebApplicationInformation
  type: Class
  summary: "提供与运行状况事件关联的信息。"
  remarks: "ASP.NET 运行状况监视，用于管理已部署的 Web 应用程序的生产和操作人员。 <xref:System.Web.Management?displayProperty=fullName>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</xref:System.Web.Management?displayProperty=fullName> 它还包含在管理运行状况事件期间帮助的支持类型。       WebApplicationInformation 类的实例包含通过任何派生自的类型获取信息<xref:System.Web.Management.WebManagementEvent>类型。</xref:System.Web.Management.WebManagementEvent>       你的应用程序需要访问受保护的信息，此类型提供的适当权限。       下面是使用它可以包含应用程序信息的日志错误事件中使 ASP.NET 配置文件的摘录。      ```   <healthMonitoring      enabled=&quot;true&quot; heartBeatInterval=&quot;0&quot;>          <rules>        <add           name=&quot;All Errors Default&quot;          eventName=&quot;All Errors&quot;          provider=&quot;EventLogProvider&quot;          profile=&quot;Default&quot;          minInterval=&quot;00:01:00&quot; />       </rules>      </healthMonitoring>   ```      > [!NOTE]1> 在大多数情况下，你将是一种能够使用 ASP.NET 运行状况监视类型，因为实现，并且将通过指定中的值控制运行状况监视系统`healthMonitoring`配置节。 你还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。 有关创建自定义的事件类的示例，请参阅本主题中提供的示例。"
  example:
  - "The following code example has two parts. The first part is an excerpt of the configuration file that enables ASP.NET to use a custom event. The second shows how to create that custom event by using the WebApplicationInformation class.  \n  \n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartBeatInterval=\"0\">  \n  \n  <eventMappings>   \n    <add name=\"SampleApplicationInformation\"   \n        type=\"SamplesAspNet.SampleWebApplicationInformation, webapplicationinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL\"/>   \n  </eventMappings>  \n  \n  <rules>   \n    <add name=\"Custom Application Information\"  \n      eventName=\"SampleApplicationInformation\"   \n      provider=\"EventLogProvider\"    \n      profile=\"Default\"/>   \n</rules>  \n  \n</healthMonitoring>  \n```  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._26_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#1](~/add/codesnippet/csharp/t-system.web.management._26_1.cs)]"
  syntax:
    content: public sealed class WebApplicationInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain
  id: ApplicationDomain
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
  fullName: System.Web.Management.WebApplicationInformation.ApplicationDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "获取当前应用程序域的名称。"
  remarks: ''
  example:
  - "The following code example shows how to obtain the application domain name.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#4](~/add/codesnippet/visualbasic/p-system.web.management._46_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#4](~/add/codesnippet/csharp/p-system.web.management._46_1.cs)]"
  syntax:
    content: public string ApplicationDomain { get; }
    return:
      type: System.String
      description: "获取应用程序域的名称。"
  overload: System.Web.Management.WebApplicationInformation.ApplicationDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath
  id: ApplicationPath
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "获取应用程序物理路径。"
  remarks: "此属性需要相应权限才能访问。 请参阅权限部分。"
  example:
  - "The following code example shows how to obtain the application physical path.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._44_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#5](~/add/codesnippet/csharp/p-system.web.management._44_1.cs)]"
  syntax:
    content: public string ApplicationPath { get; }
    return:
      type: System.String
      description: "应用程序物理路径。"
  overload: System.Web.Management.WebApplicationInformation.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  id: ApplicationVirtualPath
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "获取应用程序逻辑路径。"
  remarks: ''
  example:
  - "The following code example shows how to obtain the application logical path.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._36_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#6](~/add/codesnippet/csharp/p-system.web.management._36_1.cs)]"
  syntax:
    content: public string ApplicationVirtualPath { get; }
    return:
      type: System.String
      description: "应用程序逻辑路径。"
  overload: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  id: FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: FormatToString(WebEventFormatter)
  nameWithType: WebApplicationInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebApplicationInformation.FormatToString(WebEventFormatter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "设置应用程序信息的格式。"
  remarks: "FormatToString 方法为事件信息，这很有用，如果必须记录事件数据，并将其更高版本提供给用户提供统一的格式。 当提供程序调用之一时内部调用<xref:System.Web.Management.WebBaseEvent.ToString%2A>方法。</xref:System.Web.Management.WebBaseEvent.ToString%2A>      1> [!NOTE]&1;> 时格式设置为显示你自定义事件的信息，重写 FormatToString 方法而不是<xref:System.Web.Management.WebApplicationInformation.ToString%2A>方法。</xref:System.Web.Management.WebApplicationInformation.ToString%2A> 这将避免覆盖或篡改敏感的系统信息。"
  example:
  - "The following code example shows how to format custom information.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#9](~/add/codesnippet/visualbasic/e7244ae1-98b8-46f8-b4c6-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#9](~/add/codesnippet/csharp/e7244ae1-98b8-46f8-b4c6-_1.cs)]"
  syntax:
    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);
    parameters:
    - id: formatter
      type: System.Web.Management.WebEventFormatter
      description: "<xref href=&quot;System.Web.Management.WebEventFormatter&quot;> </xref>包含制表符和缩进设置用于格式化 Web 运行状况事件信息。"
  overload: System.Web.Management.WebApplicationInformation.FormatToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.MachineName
  id: MachineName
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
  fullName: System.Web.Management.WebApplicationInformation.MachineName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "获取应用程序的计算机名称。"
  remarks: ''
  example:
  - "The following code example shows how to obtain the machine name.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#7](~/add/codesnippet/visualbasic/p-system.web.management._25_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#7](~/add/codesnippet/csharp/p-system.web.management._25_1.cs)]"
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "运行应用程序的计算机的名称。"
  overload: System.Web.Management.WebApplicationInformation.MachineName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ToString
  id: ToString
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ToString()
  nameWithType: WebApplicationInformation.ToString()
  fullName: System.Web.Management.WebApplicationInformation.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "设置用于显示目的的事件信息的格式。"
  remarks: "<xref:System.Web.Management.WebBaseEvent.ToString%2A>方法通过调用设置格式事件信息<xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>方法。</xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> </xref:System.Web.Management.WebBaseEvent.ToString%2A>      1> [!NOTE]&1;> 时格式设置为显示你自定义事件的信息，重写<xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>方法，而不是此 ToString 方法。</xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> 这将避免覆盖或篡改敏感的系统信息。"
  example:
  - For an example of using the ToString method, see <xref:System.Web.Management.WebEventProvider>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "事件信息。"
  overload: System.Web.Management.WebApplicationInformation.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.TrustLevel
  id: TrustLevel
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
  fullName: System.Web.Management.WebApplicationInformation.TrustLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "获取应用程序信任级别。"
  remarks: "此属性需要相应权限才能访问。 请参阅权限部分。"
  example:
  - "The following example shows how to obtain the application-trust-level information.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#8](~/add/codesnippet/visualbasic/p-system.web.management._2_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#8](~/add/codesnippet/csharp/p-system.web.management._2_1.cs)]"
  syntax:
    content: public string TrustLevel { get; }
    return:
      type: System.String
      description: "应用程序信任级别。"
  overload: System.Web.Management.WebApplicationInformation.TrustLevel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
  fullName: System.Web.Management.WebApplicationInformation.ApplicationDomain
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationPath
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
- uid: System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: FormatToString(WebEventFormatter)
  nameWithType: WebApplicationInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebApplicationInformation.FormatToString(WebEventFormatter)
- uid: System.Web.Management.WebEventFormatter
  parent: System.Web.Management
  isExternal: false
  name: WebEventFormatter
  nameWithType: WebEventFormatter
  fullName: System.Web.Management.WebEventFormatter
- uid: System.Web.Management.WebApplicationInformation.MachineName
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
  fullName: System.Web.Management.WebApplicationInformation.MachineName
- uid: System.Web.Management.WebApplicationInformation.ToString
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ToString()
  nameWithType: WebApplicationInformation.ToString()
  fullName: System.Web.Management.WebApplicationInformation.ToString()
- uid: System.Web.Management.WebApplicationInformation.TrustLevel
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
  fullName: System.Web.Management.WebApplicationInformation.TrustLevel
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
- uid: System.Web.Management.WebApplicationInformation.FormatToString*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: FormatToString
  nameWithType: WebApplicationInformation.FormatToString
- uid: System.Web.Management.WebApplicationInformation.MachineName*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
- uid: System.Web.Management.WebApplicationInformation.ToString*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ToString
  nameWithType: WebApplicationInformation.ToString
- uid: System.Web.Management.WebApplicationInformation.TrustLevel*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
