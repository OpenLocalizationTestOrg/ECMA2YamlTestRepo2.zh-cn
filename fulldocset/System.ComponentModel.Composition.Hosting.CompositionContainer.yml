### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer
  id: CompositionContainer
  children:
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  langs:
  - csharp
  name: CompositionContainer
  nameWithType: CompositionContainer
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer
  type: Class
  summary: "管理部件的组合。"
  remarks: "A CompositionContainer object serves two major purposes in an application. First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes. Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n Parts can be made available to the container either directly or through the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A> property. All the parts discoverable in this <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> are available to the container to fulfill imports, along with any parts added directly.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method allows instantiated parts to be added to an existing container. Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts. Imports marked as recomposable will be registered for recomposition.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A> method allows a part to have its imports filled without being added to the container. If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.  \n  \n CompositionContainer objects should always be disposed. When the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A> method is called, the CompositionContainer object also disposes all the parts that it has created.  \n  \n A CompositionContainer object that can be accessed from multiple threads must be constructed with the `isThreadSafe` parameter set to `true`, using the [CompositionContainer(ComposablePartCatalog, Boolean, ExportProvider\\[\\])](assetId:///M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])?qualifyHint=False&autoUpgrade=False) constructor. Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios. The default is `false`.  \n  \n> [!WARNING]\n>  A CompositionContainer should never import itself, or a part that has a reference to it. Such a reference could allow an untrusted part to gain access all the parts in the container."
  example:
  - "In the following example, a CompositionContainer object is initialized with a catalog and is used to fill the imports of a part. This example uses the Attributed Programming Model.  \n  \n [!code-cs[Composition.CompositionContainer#1](~/add/codesnippet/csharp/composition.compositioncontainer.consoleapplication1/program.cs#1)]\n [!code-vb[Composition.CompositionContainer#1](~/add/codesnippet/visualbasic/compositioncontainerexample/module1.vb#1)]"
  syntax:
    content: 'public class CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable, System.ComponentModel.Composition.ICompositionService'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Hosting.ExportProvider
  implements:
  - System.ComponentModel.Composition.ICompositionService
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer()
  nameWithType: CompositionContainer.CompositionContainer()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>类。"
  syntax:
    content: public CompositionContainer ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>与指定的导出提供程序的类。"
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "数组<xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;></xref>对象，它提供<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>访问<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>设置<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>对空&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>包含的元素将是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>使用指定的导出提供程序和选项的类。"
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: compositionOptions
      type: System.ComponentModel.Composition.Hosting.CompositionOptions
      description: "一个指定此容器的行为的对象。"
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "数组<xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;></xref>对象，它提供<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>访问<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>设置<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>对空&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>包含的元素将是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>类，该类具有指定的目录和导出提供程序。"
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "一个目录，其中提供<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象添加到<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>。"
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "数组<xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;></xref>对象，它提供<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>访问<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>设置<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>对空&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>包含的元素将是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>类，该类具有指定的目录中，线程安全模式和导出提供程序。"
  remarks: "A<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>可以从多个线程访问的对象必须设置`isThreadSafe`参数`true`。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 性能将会稍微降低在`isThreadSafe`是`true`，因此我们建议将此参数设置为`false`在单线程方案中。 默认值是`false`。"
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "一个目录，其中提供<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象添加到<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>。"
    - id: isThreadSafe
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>对象必须是线程安全的; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "数组<xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;></xref>对象，它提供<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>访问<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>设置<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>属性设置为一个空&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "一个或多个元素<code> providers </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>类，该类具有指定的目录中，选项，并导出提供程序。"
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "一个目录，其中提供<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象添加到<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>。"
    - id: compositionOptions
      type: System.ComponentModel.Composition.Hosting.CompositionOptions
      description: "一个指定影响容器的行为的选项的对象。"
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "数组<xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;></xref>对象，它提供<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>访问<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>设置<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>对空&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>包含的元素将是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  id: Catalog
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Catalog
  nameWithType: CompositionContainer.Catalog
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;></xref>提供对容器的访问<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象。"
  syntax:
    content: public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "提供的目录<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>到导出时生成的访问<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;></xref>对象。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>已释放的对象。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  id: Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Compose(CompositionBatch)
  nameWithType: CompositionContainer.Compose(CompositionBatch)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "在添加或移除部分指定<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionBatch&quot;></xref>从容器并执行撰写。"
  remarks: "此方法是直接添加或删除从容器部分的主要方法。 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>将始终保持稳定、 组成的状态。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 因此，调用具有一个空的 Compose <xref:System.ComponentModel.Composition.Hosting.CompositionBatch>，根本没有必要开始撰写。</xref:System.ComponentModel.Composition.Hosting.CompositionBatch> 相反，当需要对部件供<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>进行更改时调用 Compose 方法       <xref:System.ComponentModel.Composition.Hosting.CompositionBatch>可以包含要添加部分和要移除的部分。</xref:System.ComponentModel.Composition.Hosting.CompositionBatch>  重新组合会进行一次，按撰写每次调用。"
  example:
  - "In this simple example, three parts are created and added to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, and one part is retrieved to show that all imports have been filled. This example uses the Attributed Programming Model.  \n  \n [!code-vb[Composition.CompositionContainer.Compose#1](~/add/codesnippet/visualbasic/consoleapplication6/module1.vb#1)]\n [!code-cs[Composition.CompositionContainer.Compose#1](~/add/codesnippet/csharp/consoleapplication5/program.cs#1)]"
  syntax:
    content: public void Compose (System.ComponentModel.Composition.Hosting.CompositionBatch batch);
    parameters:
    - id: batch
      type: System.ComponentModel.Composition.Hosting.CompositionBatch
      description: "更改为<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>以包含组合的过程中。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  id: Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Dispose()
  nameWithType: CompositionContainer.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "释放当前实例所使用的所有资源<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>类。"
  remarks: "调用`Dispose`在完成使用<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>时 `Dispose`方法使<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>中不可用状态。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 在调用`Dispose`，必须释放对所有引用<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>以便垃圾回收器才能回收的内存，<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>占用。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> </xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 始终调用`Dispose`在发布到<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>最后一个引用之前 否则，它所使用的资源之前，不会释放垃圾回收器调用<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>对象的`Finalize`方法。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CompositionContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "释放由非托管的资源<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> ，还可以释放托管的资源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  id: GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "返回与在指定的条件匹配的所有导出集合<xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;></xref>对象。"
  remarks: "实现不应将视为错误基数相关的不匹配，不应引发异常的基数相关的不匹配。 例如，如果导入请求恰好一个导出，并且该提供程序没有匹配的导出或多个，GetExportsCore 方法应返回一个空<xref:System.Collections.Generic.IEnumerable%601>集合<xref:System.ComponentModel.Composition.Primitives.Export>对象。</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: protected override System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "定义的条件的对象<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>要获取的对象。"
    - id: atomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: "若要使用的组合事务或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>以禁用事务性组合。"
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "所有的集合<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>函数使用此<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>与由指定的条件匹配的对象<code> definition </code>。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  id: Providers
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Providers
  nameWithType: CompositionContainer.Providers
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取提供的容器访问权限的导出提供程序其他<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;></xref>对象。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider> Providers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
      description: "集合<xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;></xref>对象，它提供<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>访问其他<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象。 默认值为空&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>已经被释放。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  id: ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExport(Export)
  nameWithType: CompositionContainer.ReleaseExport(Export)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Export)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "释放指定<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>。"
  remarks: "此方法的行为可能会有所不同，具体取决于实现的<xref:System.ComponentModel.Composition.Hosting.ExportProvider>生成<xref:System.ComponentModel.Composition.Primitives.Export>实例。</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.ExportProvider> 一般来说，应该从容器中分离非共享导出。       例如，<xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>只会释放<xref:System.ComponentModel.Composition.Primitives.Export>如果它是来自<xref:System.ComponentModel.Composition.Primitives.ComposablePart>下构造<xref:System.ComponentModel.Composition.CreationPolicy>上下文。</xref:System.ComponentModel.Composition.CreationPolicy> </xref:System.ComponentModel.Composition.Primitives.ComposablePart> </xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> 在此上下文中的版本意味着遍历的依赖关系链<xref:System.ComponentModel.Composition.Primitives.Export>分离容器和调用的引用的对象`Dispose`上<xref:System.ComponentModel.Composition.Primitives.ComposablePart>对象根据需要。</xref:System.ComponentModel.Composition.Primitives.ComposablePart> </xref:System.ComponentModel.Composition.Primitives.Export> 如果<xref:System.ComponentModel.Composition.Primitives.Export>下构造<xref:System.ComponentModel.Composition.CreationPolicy>上下文<xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>将不执行任何操作，指定<xref:System.ComponentModel.Composition.Primitives.Export>可能正由其他请求者。</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> </xref:System.ComponentModel.Composition.CreationPolicy> </xref:System.ComponentModel.Composition.Primitives.Export> 这些值仅将当容器为本身释放分离。"
  syntax:
    content: public void ReleaseExport (System.ComponentModel.Composition.Primitives.Export export);
    parameters:
    - id: export
      type: System.ComponentModel.Composition.Primitives.Export
      description: "<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref>需要释放。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>export</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  id: ReleaseExport``1(System.Lazy{``0})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExport(Lazy<T>)
  nameWithType: CompositionContainer.ReleaseExport(Lazy<T>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Lazy<T>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExport<T> (Lazy<T> export);
    parameters:
    - id: export
      type: System.Lazy{T}
      description: "要添加。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  id: ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Export>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Export>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "释放一组<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>对象从<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>。"
  remarks: "此方法的行为可能会有所不同，具体取决于在其中的上下文<xref:System.ComponentModel.Composition.Primitives.Export>构造的。</xref:System.ComponentModel.Composition.Primitives.Export> 有关详细信息，请参阅<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A>方法。</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A>"
  syntax:
    content: public void ReleaseExports (System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "集合<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>要释放的对象。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exports</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>exports</code>包含的元素将是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  id: ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Lazy<T>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExports<T> (System.Collections.Generic.IEnumerable<Lazy<T>> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.Lazy{T}}
      description: "要添加。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  id: ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExports<T,TMetadataView> (System.Collections.Generic.IEnumerable<Lazy<T,TMetadataView>> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
      description: "要添加。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T,TMetadataView>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  id: SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionContainer.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(ComposablePart)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "满足指定的导入<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;></xref>而无需注册以进行重新组合的对象。"
  syntax:
    content: public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "要满足的导入的部件。"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>已释放的对象。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>part</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Composition.CompositionException
    commentId: T:System.ComponentModel.Composition.CompositionException
    description: "组合期间出错。 <xref:System.ComponentModel.Composition.CompositionException.Errors*>将包含发生的错误的集合。</xref:System.ComponentModel.Composition.CompositionException.Errors*>"
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: System.ComponentModel.Composition.Hosting.ExportProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Composition.CompositionException
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CompositionException
  nameWithType: CompositionException
  fullName: System.ComponentModel.Composition.CompositionException
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer()
  nameWithType: CompositionContainer.CompositionContainer()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer()
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.ExportProvider[]
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
  spec.csharp:
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.CompositionOptions
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionOptions
  nameWithType: CompositionOptions
  fullName: System.ComponentModel.Composition.Hosting.CompositionOptions
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Catalog
  nameWithType: CompositionContainer.Catalog
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Compose(CompositionBatch)
  nameWithType: CompositionContainer.Compose(CompositionBatch)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch)
- uid: System.ComponentModel.Composition.Hosting.CompositionBatch
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionBatch
  nameWithType: CompositionBatch
  fullName: System.ComponentModel.Composition.Hosting.CompositionBatch
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose()
  nameWithType: CompositionContainer.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose()
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CompositionContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(Boolean)
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Export>
  nameWithType: IEnumerable<Export>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.Export
    name: Export
    nameWithType: Export
    fullName: Export
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: AtomicComposition
  nameWithType: AtomicComposition
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Providers
  nameWithType: CompositionContainer.Providers
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ExportProvider>
  nameWithType: ReadOnlyCollection<ExportProvider>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport(Export)
  nameWithType: CompositionContainer.ReleaseExport(Export)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Export)
- uid: System.ComponentModel.Composition.Primitives.Export
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: Export
  nameWithType: Export
  fullName: System.ComponentModel.Composition.Primitives.Export
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport(Lazy<T>)
  nameWithType: CompositionContainer.ReleaseExport(Lazy<T>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Lazy<T>)
- uid: System.Lazy{T}
  parent: System
  isExternal: true
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Export>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Export>)
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Lazy<T>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<T>>
  nameWithType: IEnumerable<Lazy<T>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<T,TMetadataView>>
  nameWithType: IEnumerable<Lazy<T,TMetadataView>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T,TMetadataView>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<T,TMetadataView>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`2
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T,TMetadataView>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TMetadataView
    name: TMetadataView
    nameWithType: TMetadataView
    fullName: TMetadataView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionContainer.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(ComposablePart)
- uid: System.ComponentModel.Composition.Primitives.ComposablePart
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePart
  nameWithType: ComposablePart
  fullName: System.ComponentModel.Composition.Primitives.ComposablePart
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer
  nameWithType: CompositionContainer.CompositionContainer
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Catalog
  nameWithType: CompositionContainer.Catalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Compose
  nameWithType: CompositionContainer.Compose
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose
  nameWithType: CompositionContainer.Dispose
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: GetExportsCore
  nameWithType: CompositionContainer.GetExportsCore
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Providers
  nameWithType: CompositionContainer.Providers
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport
  nameWithType: CompositionContainer.ReleaseExport
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport<T>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport<T>
  nameWithType: CompositionContainer.ReleaseExport<T>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports
  nameWithType: CompositionContainer.ReleaseExports
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports<T>
  nameWithType: CompositionContainer.ReleaseExports<T>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T,TMetadataView>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports<T,TMetadataView>
  nameWithType: CompositionContainer.ReleaseExports<T,TMetadataView>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: SatisfyImportsOnce
  nameWithType: CompositionContainer.SatisfyImportsOnce
