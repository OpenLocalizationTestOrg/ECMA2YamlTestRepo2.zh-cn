### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebApplicationLifetimeEvent
  id: WebApplicationLifetimeEvent
  children:
  - System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  langs:
  - csharp
  name: WebApplicationLifetimeEvent
  nameWithType: WebApplicationLifetimeEvent
  fullName: System.Web.Management.WebApplicationLifetimeEvent
  type: Class
  summary: "表示重大事件的生存期内的应用程序。"
  remarks: "ASP.NET 运行状况监视，用于管理已部署的 Web 应用程序的生产和操作人员。 <xref:System.Web.Management>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</xref:System.Web.Management> 它还包含在管理运行状况事件期间帮助的支持类型。       应用程序生命周期事件包括事件，例如应用程序启动和关闭事件。 如果应用程序将被终止，则可以通过查看相关的事件消息字段来确定原因。       WebApplicationLifetimeEvent 实例时，ASP.NET 运行状况监视更新应用程序生存期 Events 性能计数器。 你可以通过将到 WebApplicationLifetimeEvent 对象添加记录这些事件`rules`的小节`healthMonitoring`配置文件，如下面的示例中所示的部分。      ```   <rules>     <add name=&quot;Application Events&quot;       eventName=&quot;Application Lifetime Events&quot;       provider=&quot;EventLogProvider&quot;       profile=&quot;Default&quot;       minInterval=&quot;00:01:00&quot; />   </rules>      ```应用程序生命周期事件性能计数器均包含所有 ASP.NET 生命周期事件的总计。 若要查看在系统监视器 (PerfMon)，此性能计数器中**添加计数器**窗口中选择**ASP.NET**从**性能对象**下拉列表。 选择**应用程序生命周期事件**性能计数器，并单击**添加**按钮。 有关详细信息，请参阅上的&quot;使用系统监视器 (PerfMon) 与 ASP.NET 应用程序&quot; [MSDN](http://go.microsoft.com/fwlink/?linkid=37118)。 如果你允许事件记录由标准<xref:System.Web.Management.EventLogWebEventProvider>，你可以查看它们在事件查看器通过选择**应用程序**日志</xref:System.Web.Management.EventLogWebEventProvider> 有关详细信息，请参阅[事件查看器](http://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409)TechNet 上的 Windows Server 2003 文档中。      1> [!CAUTION]&1;> 由于 WebApplicationLifetimeEvent 对象是大量事件，记录它是资源密集型且可能会减慢你的系统。 它还可能会导致其他事件的情况下覆盖<xref:System.Web.Management.EventLogWebEventProvider>类因为数量过多事件和方法的事件日志记录的工作原理。</xref:System.Web.Management.EventLogWebEventProvider>      1> [!NOTE]&1;> 在大多数情况下，你将是一种能够使用 ASP.NET 运行状况监视类型，因为实现，并且将通过指定中的值控制运行状况监视系统`healthMonitoring`配置节。 你还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。 有关从 WebApplicationLifetimeEvent 类派生的示例，请参阅本主题中提供的示例。"
  example:
  - "The following code example shows how to derive from the WebApplicationLifetimeEvent class to create a custom event.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._24_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#1](~/add/codesnippet/csharp/t-system.web.management._24_1.cs)]  \n  \n The following configuration-file excerpt shows how to configure the `healthMonitoring` section of a configuration file to add the `SampleWebApplicationLifetimeEvent` code defined above to the ASP.NET health-monitoring system. To add the event to the system, you must define the event by adding a new entry to the `eventMappings` section and map the event to a provider by adding a new entry to the `rules` section.  \n  \n```  \n<healthMonitoring  \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">  \n  \n    <eventMappings>  \n       <clear />  \n       <!-- Configure the application lifetime event -->  \n       <!-- object to handle the Web application events. -->  \n       <add name=\"SampleApplicationLifetimeEvents\"  \n         type=\"System.Web.Management.SampleWebApplicationLifetimeEvent,  \n         System.Web,Version=2.0.3600.0,  \n         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a\" />  \n     </eventMappings>  \n  \n    <rules>  \n      <clear/>  \n       // Configure the connection between the   \n       // application lifetime event object   \n       // and the provider that must process it.  \n       <add name=\"Custom Application Events\"  \n         eventName=\"SampleApplicationLifetimeEvents\"  \n         provider=\"EventLogProvider\"  \n         profile=\"Default\"  \n         minInterval=\"00:01:00\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: WebApplicationLifetimeEvent(String,Object,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化<xref href=&quot;System.Web.Management.WebApplicationLifetimeEvent&quot;></xref>类使用提供的参数。"
  remarks: "ASP.NET 运行状况监视系统在内部使用此构造函数。 你不应使用它来创建实例的<xref:System.Web.Management.WebApplicationLifetimeEvent>类，但你可以调用此构造函数时实现你自己的事件类型继承此类。</xref:System.Web.Management.WebApplicationLifetimeEvent>      1> [!NOTE]&1;> WebApplicationLifetimeEvent 构造函数不应在代码中直接使用。 它由 ASP.NET 进行调用。 从<xref:System.Web.Management.WebApplicationLifetimeEvent>类</xref:System.Web.Management.WebApplicationLifetimeEvent>派生时，可以调用 WebApplicationLifetimeEvent 构造函数"
  example:
  - "The following code example shows how to use the WebApplicationLifetimeEvent in an ASP.NET custom health event. This code example is mainly intended to show the correct syntax to use.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/add/codesnippet/visualbasic/f6897152-ffc5-4ce1-a4ea-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#2](~/add/codesnippet/csharp/f6897152-ffc5-4ce1-a4ea-_1.cs)]"
  syntax:
    content: protected WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "与事件关联的消息。"
    - id: eventSource
      type: System.Object
      description: "事件源对象。"
    - id: eventCode
      type: System.Int32
      description: "与事件关联的代码。 当实现自定义事件时，事件代码必须要大于<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>。"
  overload: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化<xref href=&quot;System.Web.Management.WebApplicationLifetimeEvent&quot;></xref>类使用提供的参数。"
  remarks: "ASP.NET 运行状况监视系统在内部使用此构造函数。 你不应使用它来创建实例的<xref:System.Web.Management.WebApplicationLifetimeEvent>类，但你可以调用此构造函数时实现你自己的事件类型继承此类。</xref:System.Web.Management.WebApplicationLifetimeEvent>      1> [!NOTE]&1;> WebApplicationLifetimeEvent 构造函数不应在代码中直接使用。 它由 ASP.NET 进行调用。 从<xref:System.Web.Management.WebApplicationLifetimeEvent>类</xref:System.Web.Management.WebApplicationLifetimeEvent>派生时，可以调用 WebApplicationLifetimeEvent 构造函数"
  example:
  - "The following code example shows how to use the WebApplicationLifetimeEvent in an ASP.NET custom health event. This code example is mainly intended to show the correct syntax to use.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/add/codesnippet/visualbasic/d658829b-c5f1-4bb1-9080-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#3](~/add/codesnippet/csharp/d658829b-c5f1-4bb1-9080-_1.cs)]"
  syntax:
    content: protected WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "与事件关联的消息。"
    - id: eventSource
      type: System.Object
      description: "事件源对象。"
    - id: eventCode
      type: System.Int32
      description: "与事件关联的代码。 当实现自定义事件时，事件代码必须要大于<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>。"
    - id: eventDetailCode
      type: System.Int32
      description: "<xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref>值，该值指定事件的详细的标识符。"
  overload: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  id: IncrementPerfCounters
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: IncrementPerfCounters()
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "在内部用于递增性能计数器。"
  syntax:
    content: protected override void IncrementPerfCounters ();
    parameters: []
  overload: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent(String,Object,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: IncrementPerfCounters()
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters()
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters*
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: IncrementPerfCounters
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters
