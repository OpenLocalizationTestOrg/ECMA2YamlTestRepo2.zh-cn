### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WizardStepCollection
  id: WizardStepCollection
  children:
  - System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.Clear
  - System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.Count
  - System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  - System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  - System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  - System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: WizardStepCollection
  nameWithType: WizardStepCollection
  fullName: System.Web.UI.WebControls.WizardStepCollection
  type: Class
  summary: "表示一套<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生中用作向导的控件的对象。 此类不能被继承。"
  remarks: "WizardStepCollection 类用于存储和管理集合的<xref:System.Web.UI.WebControls.WizardStepBase>-派生的控件中用作向导，如对象<xref:System.Web.UI.WebControls.CreateUserWizard>控件或<xref:System.Web.UI.WebControls.Wizard>控件。</xref:System.Web.UI.WebControls.Wizard> </xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.WizardStepBase> 例如，<xref:System.Web.UI.WebControls.Wizard>控件使用的 WizardStepCollection 类其<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>属性。</xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> </xref:System.Web.UI.WebControls.Wizard>       有多种方法可以访问<xref:System.Web.UI.WebControls.WizardStepBase>-派生 WizardStepCollection 中的对象:-使用<xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A>属性来直接访问<xref:System.Web.UI.WebControls.WizardStepBase>-派生特定的从零开始索引处的对象。</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> </xref:System.Web.UI.WebControls.WizardStepBase>      -使用<xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>方法来创建可用于循环访问集合的枚举。</xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>      -使用<xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>方法把 WizardStepCollection 集合内容复制<xref:System.Array>对象。</xref:System.Array> </xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>"
  example:
  - "The following example demonstrates how to populate the WizardStepCollection collection using declarative syntax.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_1.aspx)]  \n  \n The following example demonstrates how to programmatically populate a WizardStepCollection collection.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_2.aspx)]  \n  \n The following is the code-behind file for the Web page in the preceding example.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepCollection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_3.cs)]\n [!code-vb[System.Web.UI.WebControls.WizardStepCollection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_3.vb)]"
  syntax:
    content: 'public sealed class WizardStepCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  id: Add(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Add(WizardStepBase)
  nameWithType: WizardStepCollection.Add(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Add(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "追加指定<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-导出到集合末尾的对象。"
  remarks: "Add 方法将添加<xref:System.Web.UI.WebControls.WizardStepBase>的左边缘派生对象<xref:System.Web.UI.WebControls.WizardStepCollection>集合。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> 若要添加<xref:System.Web.UI.WebControls.WizardStepBase>-派生的对象添加到在特定索引位置，请使用收藏<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>方法。</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  example:
  - "The following code example demonstrates programmatically creating a <xref:System.Web.UI.WebControls.Wizard> control and using the Add method to add <xref:System.Web.UI.WebControls.WizardStepBase>-derived <xref:System.Web.UI.WebControls.WizardStep> objects to the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardSteps#1](~/add/codesnippet/visualbasic/dbb341bd-e6ba-460d-b742-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardSteps#1](~/add/codesnippet/csharp/dbb341bd-e6ba-460d-b742-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象要追加到<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-传入的派生的对象是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  id: AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: AddAt(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.AddAt(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.AddAt(Int32,WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将指定的<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生集合中的指定的索引位置处的对象。"
  remarks: "AddAt 方法将添加<xref:System.Web.UI.WebControls.WizardStepBase>-派生集合中的指定的索引位置处的对象。</xref:System.Web.UI.WebControls.WizardStepBase>       若要添加<xref:System.Web.UI.WebControls.WizardStepBase>的左边缘派生对象<xref:System.Web.UI.WebControls.WizardStepCollection>集合，使用<xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>方法。</xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> </xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入的索引位置<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象。"
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象要追加到<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
  overload: System.Web.UI.WebControls.WizardStepCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-传入的派生的对象是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: WizardStepCollection.Clear()
  fullName: System.Web.UI.WebControls.WizardStepCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中删除所有<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-从集合中派生对象。"
  remarks: "Clear 方法用于删除所有<xref:System.Web.UI.WebControls.WizardStepBase>-派生对象从<xref:System.Web.UI.WebControls.WizardStepCollection>集合。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>      1> [!NOTE]&1;> 后清除方法可以删除<xref:System.Web.UI.WebControls.WizardStepBase>-派生对象从集合中，<xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A>属性<xref:System.Web.UI.WebControls.WizardStepCollection>集合具有零值。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.WizardStepCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  id: Contains(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Contains(WizardStepBase)
  nameWithType: WizardStepCollection.Contains(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Contains(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定是否<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合包含特定<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象。"
  remarks: "使用 Contains 方法来确定是否<xref:System.Web.UI.WebControls.WizardStepBase>-集合中包含派生的对象。</xref:System.Web.UI.WebControls.WizardStepBase> 此方法通常用于测试是否存在<xref:System.Web.UI.WebControls.WizardStepBase>-派生的对象之前执行任务，如删除<xref:System.Web.UI.WebControls.WizardStepBase>-从集合中派生对象。</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象中查找<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生的对象位于<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>wizardStep</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: CopyTo(WizardStepBase[],Int32)
  nameWithType: WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将复制中的所有项<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>到兼容的一维数组的集合<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>对象，从目标数组中指定索引处开始。"
  remarks: "CopyTo 方法用于将集合的内容复制到指定的从零开始的数组。 目标数组的指定索引处开始复制项目。 将项放入数组后，你可以使用数组语法访问中的项<xref:System.Web.UI.WebControls.WizardStepCollection>集合。</xref:System.Web.UI.WebControls.WizardStepCollection>       作为替代方法，你可以使用<xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>方法来创建用于访问集合中的项的枚举。</xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.WizardStepBase> objects from the collection to an array. The array is then iterated through to display the <xref:System.Web.UI.Control.ID%2A> property of each <xref:System.Web.UI.WebControls.WizardStepBase>-derived object. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/add/codesnippet/csharp/069e4b03-58e3-4a5a-8594-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/add/codesnippet/visualbasic/069e4b03-58e3-4a5a-8594-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WizardStepBase[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WizardStepBase[]
      description: "一个从零开始的数组<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>收到的项的对象从集合中复制。"
    - id: index
      type: System.Int32
      description: "数组开始接收复制的项目的目标数组中的位置。"
  overload: System.Web.UI.WebControls.WizardStepCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Count
  nameWithType: WizardStepCollection.Count
  fullName: System.Web.UI.WebControls.WizardStepCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取数<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生的对象中的<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控件的<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
  remarks: "使用 Count 属性来确定的数目<xref:System.Web.UI.WebControls.WizardStepBase>-派生的对象中的<xref:System.Web.UI.WebControls.WizardStepCollection>集合。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Count 属性常用当循环访问集合以确定其上限。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "数<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生的对象中的<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: WizardStepCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回<xref:System.Collections.IEnumerator>-实现可用于循环访问的对象<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生的集合中的对象。</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>-实现对象，其中包含所有<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生的对象中的<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  id: IndexOf(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IndexOf(WizardStepBase)
  nameWithType: WizardStepCollection.IndexOf(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.IndexOf(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定表示的指定位置的索引值<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生的集合中的对象。"
  remarks: "IndexOf 方法用于确定指定的索引<xref:System.Web.UI.WebControls.WizardStepBase>-派生对象在当前<xref:System.Web.UI.WebControls.WizardStepCollection>集合。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> 如果<xref:System.Web.UI.WebControls.WizardStepBase>-派生的对象不是集合中，该方法返回-1。</xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象在中搜索<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
    return:
      type: System.Int32
      description: "如果找到，第一个匹配项的从零开始索引<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-传入的派生的对象在当前<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合; 否则为-1。"
  overload: System.Web.UI.WebControls.WizardStepCollection.IndexOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-传入的派生的对象是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  id: Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Insert(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.Insert(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Insert(Int32,WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将指定<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生的对象插入集合中的指定的索引位置处。"
  remarks: "Insert 方法将添加<xref:System.Web.UI.WebControls.WizardStepBase>-派生集合中的指定的索引位置处的对象。</xref:System.Web.UI.WebControls.WizardStepBase>       或者，可以使用<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>方法将添加<xref:System.Web.UI.WebControls.WizardStepBase>-派生集合的对象。</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> 若要添加<xref:System.Web.UI.WebControls.WizardStepBase>的左边缘派生对象<xref:System.Web.UI.WebControls.WizardStepCollection>集合，使用<xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>方法。</xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> </xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>      1> [!NOTE]&1;> 插入方法和<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>方法执行实质上是相同的功能。</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> 当调用 Insert 方法时，它只是将传递`wizardStep`和`index`参数<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>方法。</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>"
  example:
  - "The following code example demonstrates programmatically creating a <xref:System.Web.UI.WebControls.Wizard> control and using the Insert method to add <xref:System.Web.UI.WebControls.WizardStepBase>-derived objects to the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/add/codesnippet/visualbasic/a6945f59-a965-41a5-8e08-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/add/codesnippet/csharp/a6945f59-a965-41a5-8e08-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入的索引位置<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象。"
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象将插入<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-可以修改集合中的派生的对象。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合可以是已修改; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否同步对集合的访问 （线程安全）。"
  remarks: "此属性派生自<xref:System.Collections.ICollection>接口，并在重写以始终返回`false`。</xref:System.Collections.ICollection>       IsSynchronized 属性的详细信息，请参阅<xref:System.Collections.ICollection.IsSynchronized%2A><xref:System.Collections.ICollection>接口</xref:System.Collections.ICollection>属性</xref:System.Collections.ICollection.IsSynchronized%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: WizardStepCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象从集合中指定索引处。"
  remarks: "使用项目属性来检索<xref:System.Web.UI.WebControls.WizardStepBase>-派生对象中指定的索引位置<xref:System.Web.UI.WebControls.WizardStepCollection>使用数组表示法的集合。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public System.Web.UI.WebControls.WizardStepBase this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref href=&quot;System.Web.UI.WebControls.WizardStep&quot;></xref>要检索对象。"
    return:
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象中的<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合中的指定的索引位置。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  id: Remove(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Remove(WizardStepBase)
  nameWithType: WizardStepCollection.Remove(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Remove(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中移除指定<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-从集合中派生对象。"
  remarks: "Remove 方法用于删除<xref:System.Web.UI.WebControls.WizardStepBase>-派生对象从<xref:System.Web.UI.WebControls.WizardStepCollection>集合。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> 或者，可以使用<xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>方法移除<xref:System.Web.UI.WebControls.WizardStepBase>-派生对象从中的指定位置<xref:System.Web.UI.WebControls.WizardStepCollection>集合。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>"
  example:
  - "The following example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.WizardStepBase>-derived object from the <xref:System.Web.UI.WebControls.WizardStepCollection> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/add/codesnippet/visualbasic/f9ffdaaf-8580-49a0-8194-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/add/codesnippet/csharp/f9ffdaaf-8580-49a0-8194-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象从集合中移除。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-传入的派生的对象是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: WizardStepCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "删除<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生对象从集合中指定的位置。"
  remarks: "RemoveAt 方法用于删除<xref:System.Web.UI.WebControls.WizardStepBase>-派生对象从<xref:System.Web.UI.WebControls.WizardStepCollection>集合中的指定的索引位置处。</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> 或者，可以删除特定<xref:System.Web.UI.WebControls.WizardStepBase>-派生对象从集合使用<xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>方法。</xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生要移除对象。"
  overload: System.Web.UI.WebControls.WizardStepCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取可用于同步对集合的访问的对象。"
  remarks: "在此实现中返回的对象是<xref:System.Web.UI.WebControls.WizardStepCollection>对象本身。</xref:System.Web.UI.WebControls.WizardStepCollection>       SyncRoot 属性的详细信息，请参阅<xref:System.Collections.ICollection.SyncRoot%2A>属性<xref:System.Collections.ICollection>接口。</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "可以用于对访问进行同步的对象<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
  overload: System.Web.UI.WebControls.WizardStepCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将复制中的所有项<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>到一维数组，从目标数组中指定索引处开始的集合。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "从零开始<xref:System.Array>接收从复制的项<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "若要开始接收复制的内容的目标数组中的位置。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将指定的对象追加到集合的末尾。"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>要追加到集合的末尾。</xref:System.Object>"
    return:
      type: System.Int32
      description: "新元素的插入位置。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定集合是否包含指定的对象。"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>要在集合中查找。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Object>中找到<xref:System.Collections.IList>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定表示指定的对象的集合中的位置的索引值。"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在集合中搜索的对象。"
    return:
      type: System.Int32
      description: "集合中指定对象的索引值。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在集合中指定位置处插入指定的对象。"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入到集合的对象位置的索引。"
    - id: value
      type: System.Object
      description: "要插入到集合的对象。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示集合是否具有固定的大小。"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合具有固定的大小，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: WizardStepCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取集合中的指定索引处的对象。"
  remarks: '此属性提供了通过使用以下语法访问集合中的特定元素的能力︰ myCollection [index]。'
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "要从集合中获取的对象的索引。"
    return:
      type: System.Object
      description: "要检索的对象。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "从集合中移除指定的对象。"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要从集合中移除的对象。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Add(WizardStepBase)
  nameWithType: WizardStepCollection.Add(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Add(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepBase
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: AddAt(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.AddAt(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.AddAt(Int32,WizardStepBase)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Clear()
  nameWithType: WizardStepCollection.Clear()
  fullName: System.Web.UI.WebControls.WizardStepCollection.Clear()
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Contains(WizardStepBase)
  nameWithType: WizardStepCollection.Contains(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Contains(WizardStepBase)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: CopyTo(WizardStepBase[],Int32)
  nameWithType: WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.CopyTo(WizardStepBase[],Int32)
- uid: System.Web.UI.WebControls.WizardStepBase[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WizardStepBase
    name: WizardStepBase
    nameWithType: WizardStepBase
    fullName: WizardStepBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.WizardStepCollection.Count
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Count
  nameWithType: WizardStepCollection.Count
  fullName: System.Web.UI.WebControls.WizardStepCollection.Count
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: WizardStepCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IndexOf(WizardStepBase)
  nameWithType: WizardStepCollection.IndexOf(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.IndexOf(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Insert(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.Insert(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Insert(Int32,WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: WizardStepCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Remove(WizardStepBase)
  nameWithType: WizardStepCollection.Remove(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Remove(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: WizardStepCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: WizardStepCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.Add*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Add
  nameWithType: WizardStepCollection.Add
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: AddAt
  nameWithType: WizardStepCollection.AddAt
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Clear
  nameWithType: WizardStepCollection.Clear
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Contains
  nameWithType: WizardStepCollection.Contains
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: CopyTo
  nameWithType: WizardStepCollection.CopyTo
- uid: System.Web.UI.WebControls.WizardStepCollection.Count*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Count
  nameWithType: WizardStepCollection.Count
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: WizardStepCollection.GetEnumerator
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IndexOf
  nameWithType: WizardStepCollection.IndexOf
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Insert
  nameWithType: WizardStepCollection.Insert
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WizardStepCollection.Item*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Item
  nameWithType: WizardStepCollection.Item
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Remove
  nameWithType: WizardStepCollection.Remove
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: RemoveAt
  nameWithType: WizardStepCollection.RemoveAt
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: WizardStepCollection.System.Collections.IList.Add
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: WizardStepCollection.System.Collections.IList.Contains
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: WizardStepCollection.System.Collections.IList.Insert
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: WizardStepCollection.System.Collections.IList.Item
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: WizardStepCollection.System.Collections.IList.Remove
