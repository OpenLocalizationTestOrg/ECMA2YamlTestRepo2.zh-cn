### YamlMime:ManagedReference
items:
- uid: System.Configuration.ApplicationSettingsBase
  id: ApplicationSettingsBase
  children:
  - System.Configuration.ApplicationSettingsBase.#ctor
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  - System.Configuration.ApplicationSettingsBase.Context
  - System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  - System.Configuration.ApplicationSettingsBase.Item(System.String)
  - System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  - System.Configuration.ApplicationSettingsBase.Properties
  - System.Configuration.ApplicationSettingsBase.PropertyChanged
  - System.Configuration.ApplicationSettingsBase.PropertyValues
  - System.Configuration.ApplicationSettingsBase.Providers
  - System.Configuration.ApplicationSettingsBase.Reload
  - System.Configuration.ApplicationSettingsBase.Reset
  - System.Configuration.ApplicationSettingsBase.Save
  - System.Configuration.ApplicationSettingsBase.SettingChanging
  - System.Configuration.ApplicationSettingsBase.SettingsKey
  - System.Configuration.ApplicationSettingsBase.SettingsLoaded
  - System.Configuration.ApplicationSettingsBase.SettingsSaving
  - System.Configuration.ApplicationSettingsBase.Upgrade
  langs:
  - csharp
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase
  fullName: System.Configuration.ApplicationSettingsBase
  type: Class
  summary: "充当基类派生具体的包装类，在窗口窗体应用程序中实现的应用程序设置功能。"
  remarks: "ApplicationSettingsBase 添加了以下功能<xref:System.Configuration.SettingsBase>类，该类由基于 Web 的应用程序:-检测派生的设置包装器类的属性的能力</xref:System.Configuration.SettingsBase> ApplicationSettingsBase 支持用于包装类属性的声明性模型，如下文所述。      -更高级别的<xref:System.Configuration.ApplicationSettingsBase.Save%2A>和<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法。</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Save%2A>      的你可以处理以确保各个设置的正确性其他验证事件。       在应用程序设置体系结构中，若要访问设置属性的一组你需要从 ApplicationSettingsBase 派生一个具体的包装类。 包装类进行自定义 ApplicationSettingsBase，可通过以下方式:-对于每个设置属性，要进行访问，相应强类型化公共属性添加到包装类。 此属性具有`get`和`set`读/写应用程序设置，但仅的访问器`get`只读设置的访问器。      -相应的特性必须应用于包装器类的公共属性，以指示特征的设置属性设置的作用域 （应用程序或用户），如是否设置应支持漫游设置，要使用，等的设置提供程序的默认值。 每个属性都需要指定其作用域，使用其中一种<xref:System.Configuration.ApplicationScopedSettingAttribute>或<xref:System.Configuration.UserScopedSettingAttribute>。</xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> 应用程序范围设置是只读的如果默认值<xref:System.Configuration.LocalFileSettingsProvider>使用。</xref:System.Configuration.LocalFileSettingsProvider>       ApplicationSettingsBase 类使用反射在运行时检测这些属性。 大部分此信息传递到设置提供程序层，它负责存储和持久性格式等。       当应用程序有多个设置包装类时，每个类定义*设置组*。 每个组具有以下特征:-一个组可以包含任意数量或类型的属性设置。      -如果组名称的修饰具有的包装类未显式设置<xref:System.Configuration.SettingsGroupNameAttribute>，则会自动生成名称。</xref:System.Configuration.SettingsGroupNameAttribute>       默认情况下，所有基于客户端的应用程序使用<xref:System.Configuration.LocalFileSettingsProvider>提供存储。</xref:System.Configuration.LocalFileSettingsProvider> 如果需要备用的设置提供程序，则包装器类或属性必须修饰以相应<xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       有关使用应用程序设置的详细信息，请参阅[应用程序设置 Windows 窗体](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text. All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively. All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.  \n  \n The form contains four child controls that have the following names and functions:  \n  \n-   A button named `btnBackColor` used to display the **Color** common dialog box.  \n  \n-   A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.  \n  \n-   A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.  \n  \n-   A textbox named `tbStatus` used to display status information about the program.  \n  \n Notice that after every execution of the application, an additional period character is appended to the title text of the form.  \n  \n This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`. Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.  \n  \n [!code-cpp[AppSettingsSample#1](~/add/codesnippet/cpp/t-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#1](~/add/codesnippet/csharp/t-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#1](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#1)]"
  syntax:
    content: 'public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的实例<xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;></xref>为其默认状态的类。"
  remarks: "默认构造函数旨在假定没有与当前的设置包装类，该类派生自<xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase>关联的组件不工作       继承的代码时创建的包装类的实例，将自动执行下列操作︰ 1。  通过类进行反射。      2.  对于在包装上的每个属性标记使用`[UserScopedSettingAttribute]`或`[ApplicationScopedSettingAttribute]`，相应<xref:System.Configuration.SettingsProperty>创建。</xref:System.Configuration.SettingsProperty>      3.  每个<xref:System.Configuration.SettingsProperty>具有某些组件 （可选） 位于包装器的属性，例如默认值或设置提供程序的其他属性对基于其属性集。</xref:System.Configuration.SettingsProperty>      4.  所有其他特性只被放置到一个属性包，<xref:System.Configuration.SettingsProperty.Attributes%2A>属性的<xref:System.Configuration.SettingsProperty>类。</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsProperty.Attributes%2A>      5.  所有<xref:System.Configuration.SettingsProperty>对象添加到<xref:System.Configuration.SettingsPropertyCollection>由<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>属性的<xref:System.Configuration.ApplicationSettingsBase>类。</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.SettingsPropertyCollection> </xref:System.Configuration.SettingsProperty> 然后将此集合传递给<xref:System.Configuration.SettingsBase.Initialize%2A>方法。</xref:System.Configuration.SettingsBase.Initialize%2A>       步骤 3 前面提到，通过为隐含<xref:System.Configuration.ApplicationSettingsBase>本机适用于多个属性特性，即︰ <xref:System.Configuration.SettingsProviderAttribute>， <xref:System.Configuration.DefaultSettingValueAttribute>，和<xref:System.Configuration.SettingsSerializeAsAttribute>。</xref:System.Configuration.SettingsSerializeAsAttribute> </xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.SettingsProviderAttribute> </xref:System.Configuration.ApplicationSettingsBase> 所有其他设置特性直接传递到相应的基础提供程序。"
  syntax:
    content: protected ApplicationSettingsBase ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的实例<xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;></xref>类使用提供的所有者组件。"
  remarks: "此构造函数在完全等同于<xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>使用调用的构造函数︰`ApplicationSettingsBase(owner, String.Empty)`包装器类的实例化过程中如何使用反射有关的信息，请参阅默认<xref:System.Configuration.ApplicationSettingsBase.%23ctor>构造函数。</xref:System.Configuration.ApplicationSettingsBase.%23ctor> </xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "该组件将充当应用程序设置对象的所有者。"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的实例<xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;></xref>类使用提供的设置密钥。"
  remarks: "此构造函数初始化<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>属性的值`settingsKey`参数。</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 此属性可消除歧义相同的应用程序域中的设置包装器类的不同实例中。       有关如何在一个包装类的实例化期间使用反射的信息，请参阅默认<xref:System.Configuration.ApplicationSettingsBase.%23ctor>构造函数。</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (string settingsKey);
    parameters:
    - id: settingsKey
      type: System.String
      description: "<xref:System.String>唯一标识单独实例的包装类。</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  id: '#ctor(System.ComponentModel.IComponent,System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的实例<xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;></xref>类使用提供的所有者组件和设置密钥。"
  remarks: "<xref:System.ComponentModel.IComponent>指定对象`owner`参数充当应用程序设置类的当前实例的所有者</xref:System.ComponentModel.IComponent> 设置包装器类初始化期间派生从<xref:System.Configuration.ApplicationSettingsBase>、 <xref:System.Configuration.ISettingsProviderService>。</xref:System.Configuration.ISettingsProviderService>查询所有者的站点</xref:System.Configuration.ApplicationSettingsBase> 如果存在，它是优先使用本机设置提供程序的所有属性的包装器类，作为指定受支持<xref:System.Configuration.SettingsProviderAttribute>。</xref:System.Configuration.SettingsProviderAttribute>       此构造函数初始化<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>属性的值`settingsKey`参数。</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 此属性可消除歧义的包装类相同的应用程序域中的不同实例中。       有关如何在一个包装类的实例化期间使用反射的信息，请参阅默认<xref:System.Configuration.ApplicationSettingsBase.%23ctor>构造函数。</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "该组件将充当应用程序设置对象的所有者。"
    - id: settingsKey
      type: System.String
      description: "<xref:System.String>唯一标识单独实例的包装类。</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Context
  id: Context
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取与此设置组关联的应用程序设置上下文。"
  remarks: "每个设置包装类派生自<xref:System.Configuration.ApplicationSettingsBase>具有与其关联的上下文</xref:System.Configuration.ApplicationSettingsBase> 该上下文传递到设置提供程序的每个属性，来确定如何使用属性中。 上下文因此充当提示来帮助确定如何最大程度地保留关联的应用程序的设置值的设置提供程序。       相反，<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>属性启用要消除歧义的同一个包装类。 多个实例的设置提供程序</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>"
  syntax:
    content: public override System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>与设置组关联。"
  overload: System.Configuration.ApplicationSettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  id: GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "返回同一个应用程序的以前版本的命名的设置属性的值。"
  remarks: "GetPreviousVersion 方法通常与结合使用<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>方法在应用程序的新版本的安装过程中迁移应用程序设置时。</xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>"
  syntax:
    content: public object GetPreviousVersion (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "A<xref:System.String>包含其值是要返回的设置属性的名称。</xref:System.String>"
    return:
      type: System.Object
      description: "<xref:System.Object>包含的值的指定<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>找到; 否则为如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Object>"
  overload: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "属性不存在。 属性计数为零，或在数据存储区中找不到属性。"
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取或设置指定的应用程序设置属性的值。"
  remarks: "Item 属性，也称为的索引器，用于定期从<xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase>派生的设置包装类 项将绑定到相应的设置属性的包装器类的公共属性。       项引发多个事件，具体取决于所执行的操作:-检索属性时，第一次<xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>引发事件。</xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>      -如果设置了一个属性，<xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>引发事件。</xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> 如果处理程序不会取消该事件，则设置的属性值和<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>引发事件。</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "A<xref:System.String>包含要访问的属性的名称。</xref:System.String>"
    return:
      type: System.Object
      description: "如果找到，命名的设置属性中; 的值否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ApplicationSettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "没有与当前包装关联的属性或找不到指定的属性。"
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "尝试设置只读属性。"
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "提供的值与设置属性不兼容的类型是设置操作期间。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "无法分析配置文件。"
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "引发<xref href=&quot;System.Configuration.ApplicationSettingsBase.PropertyChanged&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPropertyChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "A<xref:System.ComponentModel.PropertyChangedEventArgs>包含事件数据。</xref:System.ComponentModel.PropertyChangedEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  id: OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "引发<xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingChanging&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSettingChanging 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.Configuration.SettingChangingEventArgs
      description: "A <xref href=&quot;System.Configuration.SettingChangingEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  id: OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "引发<xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSettingsLoaded 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.Configuration.SettingsLoadedEventArgs
      description: "A <xref href=&quot;System.Configuration.SettingsLoadedEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  id: OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "引发<xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsSaving&quot;></xref>事件。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSettingsSaving 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A<xref:System.ComponentModel.CancelEventArgs>包含事件数据。</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Properties
  id: Properties
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取包装中的设置属性的集合。"
  remarks: "`get`设置包装器类，该类派生自的元数据反映的 Properties 属性访问器<xref:System.Configuration.ApplicationSettingsBase>，可以动态确定的一组可用的应用程序设置属性。</xref:System.Configuration.ApplicationSettingsBase>       <xref:System.Configuration.ApplicationSettingsBase>类本身可以识别的一个应用程序设置，例如其名称、 属性类型、 设置提供程序、 默认值，某些特征读取仅有状态和序列化首选项。</xref:System.Configuration.ApplicationSettingsBase> 这些特征镜像为<xref:System.Configuration.SettingsProperty>类</xref:System.Configuration.SettingsProperty>中的属性 设置属性的所有其他特性只需将传递到其关联的设置提供程序所造成。"
  syntax:
    content: public override System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>包含所有<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>当前包装中使用的对象。"
  overload: System.Configuration.ApplicationSettingsBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "找不到关联的设置提供程序或其实例化失败。"
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  id: PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "应用程序设置属性的值更改后发生。"
  remarks: "设置属性更改通过时引发的 PropertyChanged 事件`set`的访问器<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法，或到进行调用时，将还原每个属性<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>或<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>方法。</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Item%2A>       没有对应的`PropertyChanging`事件此类; 相反，请参阅<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>事件。</xref:System.Configuration.ApplicationSettingsBase.SettingChanging>"
  syntax:
    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取属性值的集合。"
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref>的属性值。"
  overload: System.Configuration.ApplicationSettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Providers
  id: Providers
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取包装所使用的应用程序设置提供程序的集合。"
  remarks: "<xref:System.Configuration.SettingsProviderAttribute>确定哪些设置使用提供程序设置包装类或单个设置的属性。</xref:System.Configuration.SettingsProviderAttribute> 如果未指定此属性，客户端应用程序将使用<xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public override System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "A <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref>包含所有<xref href=&quot;System.Configuration.SettingsProvider&quot;></xref>使用当前设置包装的设置属性的对象。"
  overload: System.Configuration.ApplicationSettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reload
  id: Reload
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "刷新从持久性存储区的应用程序设置属性值。"
  remarks: "重新加载方法清除当前已缓存的属性值，用户随后访问时，从持久性存储区导致重新加载这些值。 此方法执行下列操作:-它通过清除表示该集合将清除当前已缓存的属性<xref:System.Configuration.SettingsBase.PropertyValues%2A>属性。</xref:System.Configuration.SettingsBase.PropertyValues%2A>      -它会发出<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>事件的每个成员<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>集合。</xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>       重新加载与之相对的<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>在于前者将加载最后一组已保存应用程序设置值，而后者将加载保存的默认值。</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  example:
  - "The following code example shows the Reload method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`. As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#6](~/add/codesnippet/cpp/m-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#6](~/add/codesnippet/csharp/m-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#6](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#6)]"
  syntax:
    content: public void Reload ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reset
  id: Reset
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "将保持的应用程序设置值还原到其相应的默认属性。"
  remarks: "重置方法通过还原每个应用程序设置的当前保留的值将覆盖用户范围的设置属性。 此方法执行下列操作:-它将调用<xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>上支持此可选方法每个设置提供程序的方法。</xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>      -它将调用<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法来强制进行刷新的设置属性值。</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>       <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>形成了鲜明对比与重置，因为前者将加载最后一组已保存应用程序设置值，而后者将加载保存的默认值。</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>"
  example:
  - "The following code example shows the Reset method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`. As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#5](~/add/codesnippet/cpp/m-system.configuration.a_3_1.cpp)]\n [!code-cs[AppSettingsSample#5](~/add/codesnippet/csharp/m-system.configuration.a_3_1.cs)]\n [!code-vb[AppSettingsSample#5](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#5)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "无法分析配置文件。"
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Save
  id: Save
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "存储应用程序设置属性的当前值。"
  remarks: "Save 方法在其关联的数据存储区中写入每个设置属性的当前值。 对于每个属性，此方法调用<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>方法关联的设置提供程序。</xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       此方法与不同的基类实现的它会发出<xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>事件之前写入值。</xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>       如果定义的唯一设置应用程序范围设置，保存将不产生任何影响，并且不返回任何错误，如果使用默认<xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider>调用 <xref:System.Configuration.LocalFileSettingsProvider>仅保存用户范围的设置。</xref:System.Configuration.LocalFileSettingsProvider>      1> [!IMPORTANT]&1;> 没有相应负载方法因为包装器类初始化过程中自动加载的应用程序设置的值。 与此相反，这些值将不自动保存应用程序结束时。 因此，你必须显式调用 Save 方法来保持应用程序设置的当前值。 这通常执行<xref:System.Windows.Forms.Form.Closing>的主事件处理程序或包含<xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form></xref:System.Windows.Forms.Form.Closing>中"
  example:
  - "The following code example shows the Save method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form. This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#3](~/add/codesnippet/cpp/m-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#3](~/add/codesnippet/csharp/m-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#3](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#3)]"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  id: SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "更改应用程序设置属性的值之前发生。"
  remarks: "SettingChanging 事件发生之前通过更改应用程序设置值属性<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法。</xref:System.Configuration.ApplicationSettingsBase.Item%2A> 此事件不时引发<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>或<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>调用方法。</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> SettingChanging 可以取消通过<xref:System.Configuration.SettingChangingEventArgs>事件数据类。</xref:System.Configuration.SettingChangingEventArgs>       你通常使用 SettingChanging 事件处理程序各个设置属性的即时验证。 有关验证的详细信息，请参阅[如何︰ 验证应用程序设置](~/add/includes/ajax-current-ext-md.md)。       没有对应的`SettingChanged`事件此类; 相反，请参阅<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>事件。</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  example:
  - "The following code example shows the SettingChanging event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler displays the event information in a textbox named `tbStatus`. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#7](~/add/codesnippet/cpp/e-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#7](~/add/codesnippet/csharp/e-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#7](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#7)]"
  syntax:
    content: public event System.Configuration.SettingChangingEventHandler SettingChanging;
    return:
      type: System.Configuration.SettingChangingEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  id: SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取或设置键设置为应用程序设置组。"
  remarks: "SettingsKey 属性用于启用客户端代码，特别设置提供程序，以消除同一个应用程序设置类的多个实例之间的歧义。       设置包装类旨在使用单独模式，除非可以有多个单个应用程序中的相同应用程序设置类的实例。 SettingsKey 的值应根据属性值如何用于共享设置。      -如果包装的设置属性用于在包装的所有实例之间共享同一应用程序，然后 SettingsKey 应具有相同的值中的所有实例。 这是类的默认行为<xref:System.Configuration.ApplicationSettingsBase>类。</xref:System.Configuration.ApplicationSettingsBase>      -如果包装的设置属性旨在成为每个实例，然后 SettingsKey 应具有每个实例的唯一值。 <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>的构造函数版本，可为唯一的字符串初始化 SettingsKey。</xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>       与此相反，<xref:System.Configuration.ApplicationSettingsBase.Context%2A>属性提供了对设置提供程序，以使其能够高效且有序方式保留的值的提示。</xref:System.Configuration.ApplicationSettingsBase.Context%2A>       <xref:System.Configuration.SettingChangingEventArgs>类包含类似<xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>属性，可帮助标识的源<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>事件。</xref:System.Configuration.ApplicationSettingsBase.SettingChanging> </xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> </xref:System.Configuration.SettingChangingEventArgs>"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含当前的设置组的设置键。</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.SettingsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  id: SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "从存储中检索应用程序设置后发生。"
  remarks: "SettingsLoaded 事件发生在初始后才`get`访问第一个配置属性使用，通常通过<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法。</xref:System.Configuration.ApplicationSettingsBase.Item%2A> 后续访问使用本地缓存的设置属性的值。 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>和<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法将清除所有缓存的值，因此将在后续访问属性时再次引发此事件。</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;
    return:
      type: System.Configuration.SettingsLoadedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  id: SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "值保存到数据存储区之前发生。"
  remarks: "SettingsSaving 事件由引发<xref:System.Configuration.ApplicationSettingsBase.Save%2A>之前它将存储到其关联的数据存储区的应用程序设置属性的方法。</xref:System.Configuration.ApplicationSettingsBase.Save%2A> 关联的事件处理程序可以取消此事件。"
  example:
  - "The following code example shows the SettingsSaving event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler queries the user to save the current application settings property values. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#8](~/add/codesnippet/cpp/e-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#8](~/add/codesnippet/csharp/e-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#8](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#8)]"
  syntax:
    content: public event System.Configuration.SettingsSavingEventHandler SettingsSaving;
    return:
      type: System.Configuration.SettingsSavingEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  id: Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "更新以反映应用程序的较新安装的应用程序设置。"
  remarks: "升级方法将执行两个操作来确保平稳过渡到新版本的应用程序:-它将通过调用升级的应用程序是否存在相应的设置提供程序的所有通知其<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName>方法，假定它们实现<xref:System.Configuration.IApplicationSettingsProvider>接口。</xref:System.Configuration.IApplicationSettingsProvider> </xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName> 如果使用<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>标记设置包装类，则不会执行此操作      -它将重新加载的所有应用程序设置的值。       你可以重写升级以实现自定义升级或合并行为的默认行为。 使用<xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>方法来检索有关以前版本的应用程序的设置的单个值。</xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> 自定义升级行为的示例包括:-使用重写一个或多个以前的用户指定值的新策略默认值或以前的默认值。      -特殊转换后的旧值才能兼容较新范围、 与不同的设置属性组，等等。"
  syntax:
    content: public virtual void Upgrade ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "无法分析配置文件。"
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
- uid: System.Configuration.ApplicationSettingsBase.Context
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
- uid: System.Configuration.SettingChangingEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventArgs
  nameWithType: SettingChangingEventArgs
  fullName: System.Configuration.SettingChangingEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
- uid: System.Configuration.SettingsLoadedEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventArgs
  nameWithType: SettingsLoadedEventArgs
  fullName: System.Configuration.SettingsLoadedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Configuration.ApplicationSettingsBase.Properties
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.ApplicationSettingsBase.Providers
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.ApplicationSettingsBase.Reload
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
- uid: System.Configuration.ApplicationSettingsBase.Reset
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
- uid: System.Configuration.ApplicationSettingsBase.Save
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
- uid: System.Configuration.SettingChangingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventHandler
  nameWithType: SettingChangingEventHandler
  fullName: System.Configuration.SettingChangingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
- uid: System.Configuration.SettingsLoadedEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventHandler
  nameWithType: SettingsLoadedEventHandler
  fullName: System.Configuration.SettingsLoadedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
- uid: System.Configuration.SettingsSavingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsSavingEventHandler
  nameWithType: SettingsSavingEventHandler
  fullName: System.Configuration.SettingsSavingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
- uid: System.Configuration.ApplicationSettingsBase.#ctor*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase
- uid: System.Configuration.ApplicationSettingsBase.Context*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion
  nameWithType: ApplicationSettingsBase.GetPreviousVersion
- uid: System.Configuration.ApplicationSettingsBase.Item*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item
  nameWithType: ApplicationSettingsBase.Item
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ApplicationSettingsBase.OnPropertyChanged
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging
  nameWithType: ApplicationSettingsBase.OnSettingChanging
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving
  nameWithType: ApplicationSettingsBase.OnSettingsSaving
- uid: System.Configuration.ApplicationSettingsBase.Properties*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.ApplicationSettingsBase.Providers*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
- uid: System.Configuration.ApplicationSettingsBase.Reload*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload
  nameWithType: ApplicationSettingsBase.Reload
- uid: System.Configuration.ApplicationSettingsBase.Reset*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset
  nameWithType: ApplicationSettingsBase.Reset
- uid: System.Configuration.ApplicationSettingsBase.Save*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save
  nameWithType: ApplicationSettingsBase.Save
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.Upgrade*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade
  nameWithType: ApplicationSettingsBase.Upgrade
