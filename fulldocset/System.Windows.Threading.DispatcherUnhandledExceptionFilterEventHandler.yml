### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler
  id: DispatcherUnhandledExceptionFilterEventHandler
  langs:
  - csharp
  name: DispatcherUnhandledExceptionFilterEventHandler
  nameWithType: DispatcherUnhandledExceptionFilterEventHandler
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler
  type: Delegate
  summary: "表示将处理的方法<xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot;></xref>事件。"
  remarks: "<xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>发生事件时通过执行代码时<xref:System.Windows.Threading.Dispatcher>引发未处理的异常。</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>       <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>事件提供了一种方法不会引发<xref:System.Windows.Threading.Dispatcher.UnhandledException>事件。</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>首先，将引发事件; 如果<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A>上<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs>设置为`false`、<xref:System.Windows.Threading.Dispatcher.UnhandledException>不会引发事件。</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>"
  syntax:
    content: public delegate void DispatcherUnhandledExceptionFilterEventHandler(object sender, DispatcherUnhandledExceptionFilterEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
