### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Services.ScriptMethodAttribute
  id: ScriptMethodAttribute
  children:
  - System.Web.Script.Services.ScriptMethodAttribute.#ctor
  - System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  - System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  - System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  langs:
  - csharp
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute
  fullName: System.Web.Script.Services.ScriptMethodAttribute
  type: Class
  summary: "指定的 HTTP 谓词用于调用方法和响应的格式。 此类不能被继承。"
  remarks: "此属性用于指定可以从客户端脚本调用的方法的信息。 该属性允许您指定的 HTTP 谓词 （GET 或 POST） 可用于调用方法。 它还允许你指定的响应是否通过使用 JavaScript 对象表示法 (JSON) 或 XML 格式。       ScriptMethodAttribute 属性是可选的。 (但是，可以从客户端脚本调用的方法必须具有<xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName>应用的属性。)。</xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName> 如果未使用 ScriptMethodAttribute 标记方法，该方法将调用通过使用 HTTP POST 命令和响应将序列化为 JSON。 不能重写此设置从脚本。       只 ScriptMethodAttribute 采用命名参数。 以下是可以用作命名参数 ScriptMethodAttribute 类的属性:-<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>指定是否将使用 HTTP GET 命令调用该方法。</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> 默认值是`false`。          1> [!IMPORTANT]&1;> 设置<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>属性`true`可能会带来安全风险，你的应用程序，如果你正在使用敏感数据或事务。</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> 在 GET 请求中，消息为 URL 编码由浏览器，因此更容易遭到篡改。 对于 GET 和 POST 请求，应遵循安全指导原则来保护敏感数据。      -<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>指定响应将为 JSON 或 XML 进行序列化。</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> 默认值是`Json`。 <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>属性可用于将 XML 指定为返回类型，该方法返回时<xref:System.Xml.XmlDocument>或<xref:System.Xml.XmlElement>对象。</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument> </xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>      -<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>指定是否所有的返回类型，包括字符串类型扩展会序列化为 XML。</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> 值<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>响应序列化为 JSON 时，将忽略属性。</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>       有关如何使用属性的详细信息，请参阅[属性](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to apply ScriptMethodAttribute to the `GetXmlDocument` and `EchoStringAndDate` methods to specify which HTTP verb to use and to specify the response format.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class ScriptMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "初始化的新实例<xref href=&quot;System.Web.Script.Services.ScriptMethodAttribute&quot;></xref>类。"
  syntax:
    content: public ScriptMethodAttribute ();
    parameters: []
  overload: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  id: ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "获取或设置方法响应的格式。"
  remarks: "当你想要指定为返回类型的格式的 XML，请使用 ResponseFormat 属性。 这是有用的该方法返回时<xref:System.Xml.XmlDocument>或<xref:System.Xml.XmlElement>对象。</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument>       当 ResponseFormat 属性设置为`Xml`，公共字段和属性的返回类型具有<xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>应用属性不会被忽略。</xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> 这是因为它们将使用序列化<xref:System.Xml.Serialization.XmlSerializer>对象而不是<xref:System.Web.Script.Serialization.JavaScriptSerializer>对象。</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Xml.Serialization.XmlSerializer> 您必须首先应用<xref:System.Xml.Serialization.XmlIgnoreAttribute>特性使<xref:System.Xml.Serialization.XmlSerializer>忽略，或跳过，这些公共字段和属性的返回类型。</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlIgnoreAttribute>"
  example:
  - "The following example shows how to apply the <xref:System.Web.Script.Services.ScriptMethodAttribute> attribute to a Web method with the ResponseFormat property set to `Xml`. The return value of the method will be serialized as XML and sent to the succeeded callback function as an object of type <xref:System.Xml.XmlDocument>. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }
    return:
      type: System.Web.Script.Services.ResponseFormat
      description: "之一<xref href=&quot;System.Web.Script.Services.ResponseFormat&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_Json&quot; name=&quot;Json&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  id: UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "获取或设置一个值，该值指示是否通过使用 HTTP GET 调用该方法。"
  remarks: "不能重写从 ECMAScript (JavaScript) 客户端上的此属性。 如果此属性设置为`true`，调用方法中的，从脚本将始终需要使用 HTTP GET。       当此属性设置为`true`，客户端代理代码使用 HTTP GET 调用 Web 服务。 方法中的每个输入的参数将显示为用于调用 Web 方法的 URL 中的查询参数。 通过 JavaScript 对象表示法 (JSON) 序列化和 URL 编码的参数值获取参数值。       用于的 HTTP GET 调用 Web 服务方法遵循用于任何其他 Web 交互相同的准则。 应仅用于操作使用 HTTP GET，未公开任何敏感的数据和服务器操作没有副作用时。      1> [!IMPORTANT]&1;> UseHttpGet 属性设置为`true`可能会带来安全风险，你的应用程序，如果你正在使用敏感数据或事务。 在 GET 请求中，消息为 URL 编码由浏览器，因此更容易遭到篡改。"
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the UseHttpGet property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseHttpGet { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用 HTTP GET 命令; 调用方法<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果通过使用 HTTP POST 命令调用的方法。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  id: XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "获取或设置一个值，该值指示是否将所有返回类型扩展会序列化为 XML，其中包括字符串类型。"
  remarks: "当此属性设置为`false`，所有返回类型扩展会序列化为 XML，字符串，将被解释为 XML 标记除外。 如果值为`false`，并且如果返回类型是一个字符串，并且如果字符串不包含对应于格式正确的 XML 文档的 XML 标记，成功的回调函数将调用但是所生成序列化的字符串将`null`。       忽略 XmlSerializeString 的值时<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>属性设置为`Json`。</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>"
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the XmlSerializeString property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool XmlSerializeString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所有的返回类型扩展会序列化为 XML;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ResponseFormat
  parent: System.Web.Script.Services
  isExternal: false
  name: ResponseFormat
  nameWithType: ResponseFormat
  fullName: System.Web.Script.Services.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
