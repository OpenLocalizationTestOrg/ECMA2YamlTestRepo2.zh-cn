### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.WindowChrome
  id: WindowChrome
  children:
  - System.Windows.Shell.WindowChrome.#ctor
  - System.Windows.Shell.WindowChrome.CaptionHeight
  - System.Windows.Shell.WindowChrome.CaptionHeightProperty
  - System.Windows.Shell.WindowChrome.CornerRadius
  - System.Windows.Shell.WindowChrome.CornerRadiusProperty
  - System.Windows.Shell.WindowChrome.CreateInstanceCore
  - System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)
  - System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)
  - System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)
  - System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
  - System.Windows.Shell.WindowChrome.GlassFrameThickness
  - System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
  - System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
  - System.Windows.Shell.WindowChrome.NonClientFrameEdges
  - System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
  - System.Windows.Shell.WindowChrome.ResizeBorderThickness
  - System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
  - System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
  - System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)
  - System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)
  - System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)
  - System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
  - System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
  - System.Windows.Shell.WindowChrome.WindowChromeProperty
  langs:
  - csharp
  name: WindowChrome
  nameWithType: WindowChrome
  fullName: System.Windows.Shell.WindowChrome
  type: Class
  summary: "表示一个对象，描述为窗口的非工作区的自定义项。"
  remarks: "WindowChrome 类，可将 Windows Presentation Foundation (WPF) 内容扩展到通常为操作系统的窗口管理器保留窗口的非工作区。      ## 标准 Windows 标准的 windows 组成两个重叠的矩形。 外部矩形是*非工作区*，这通常称为*chrome*。 进行绘制和由操作系统的窗口管理器管理。 其尺寸取决于标准操作系统设置。 非客户端框架提供标准窗口功能和行为。 其中包括 （最小化、 最大化和关闭） 的标题按钮的窗口边框，调整和移动行为、 应用程序图标和标题和系统菜单。 内部矩形*客户端区域*。 它包含内容的应用程序，并且会绘制和在应用程序管理。 有关 WPF 应用程序中的时段的详细信息，请参阅[WPF Windows 概述](~/add/includes/ajax-current-ext-md.md)。       下图显示标准窗口的部分。       ![窗口元素](~/add/media/windowoverviewfigure1.PNG &quot;窗口元素&quot;)# # 自定义 Windows 你可以通过设置<xref:System.Windows.Window.WindowStyle%2A?displayProperty=fullName>属性<xref:System.Windows.WindowStyle>或通过使用 WindowChrome 类</xref:System.Windows.WindowStyle></xref:System.Windows.Window.WindowStyle%2A?displayProperty=fullName>自定义窗口边框      ### WindowStyle.None 一个 WPF 应用程序窗口的外观进行自定义的方法是将设置<xref:System.Windows.Window.WindowStyle%2A?displayProperty=fullName>到<xref:System.Windows.WindowStyle>。</xref:System.Windows.WindowStyle>属性</xref:System.Windows.Window.WindowStyle%2A?displayProperty=fullName> 这从窗口中删除非客户端框架并离开仅客户端区域中，可以向其应用自定义样式。 但是，在删除非客户端框架后，你也会失去系统功能和提供，如标题按钮和重设窗口大小的行为。 另一个副作用是它最大化时，窗口将介绍 Windows 任务栏。 设置<xref:System.Windows.WindowStyle?displayProperty=fullName>使您能够创建完全自定义应用程序，但也需要应用程序模拟标准窗口行为中实现自定义逻辑。</xref:System.Windows.WindowStyle?displayProperty=fullName>      ### WindowChrome 到自定义窗口在保留其标准功能的同时，你可以使用 WindowChrome 类。 WindowChrome 类窗口框架的功能分离开来视觉对象，并允许您控制的客户端和应用程序窗口的非工作区之间的边界。 WindowChrome 类可由扩展以涵盖的非工作区的客户端区域放在窗口框架的 WPF 内容。 同时，它将保留通过两个不可见区域; 的系统行为the                                          *resize border* and                                          *caption* areas                                         .       有两个主要部分︰ 创建使用 WindowChrome 类的自定义窗口。 首先，您通过设置 WindowChrome 对象公开的属性需要自定义窗口的非客户端部分。 然后，你为定义的应用程序扩展到非工作区一部分的窗口提供模板。The properties exposed on the                                          WindowChrome object are                                          <xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A>,                                          <xref:System.Windows.Shell.WindowChrome.CaptionHeight%2A>,                                          <xref:System.Windows.Shell.WindowChrome.CornerRadius%2A>, and                                          <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>.</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A></xref:System.Windows.Shell.WindowChrome.CornerRadius%2A></xref:System.Windows.Shell.WindowChrome.CaptionHeight%2A></xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A>       <xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A>属性指定应用程序窗口，以便用户可以单击并拖动以调整大小窗口周围不可见边框。</xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A>       <xref:System.Windows.Shell.WindowChrome.CaptionHeight%2A>属性指定不可见区域，在这样的通常与标题栏。 关联的系统行为窗口的顶部</xref:System.Windows.Shell.WindowChrome.CaptionHeight%2A> 这些行为包括︰ 单击并拖动以移动该窗口中，双击以最大化窗口，然后右键单击即可显示系统菜单。       大小调整边框和标题区域没有任何视觉元素，则它们仅定义响应输入并启用标准系统提供的窗口行为的区域。       <xref:System.Windows.Shell.WindowChrome.CornerRadius%2A>属性指定窗口的角变圆的金额。</xref:System.Windows.Shell.WindowChrome.CornerRadius%2A> 此属性没有任何影响，如果玻璃框架窗口启用了。       <xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性指定的窗口周围的玻璃框的宽度。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> 默认情况下，它使用指定的系统值<xref:System.Windows.SystemParameters.WindowNonClientFrameThickness%2A>属性来模拟的标准窗口的外观。</xref:System.Windows.SystemParameters.WindowNonClientFrameThickness%2A> 当使用玻璃框时，最小化、 最大化和关闭的标题按钮可见且交互式。 应用程序负责显示应用程序图标和标题文本。 你可以设置<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性以使更宽或窄而不是默认的玻璃框。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>      1> [!CAUTION]&1;> 标题按钮的大小不会更改时<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性更改。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> 如果顶部的玻璃框的高度小于标题按钮的高度，标题按钮将不完全可见。       若要使不具有玻璃框架自定义窗口，请设置<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性为统一值 0。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> 这将禁用并隐藏的标准标题按钮。       若要扩展以涵盖整个窗口的玻璃框，设置<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>为负值在任意一侧的属性。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> 当<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性设置为任何一侧为负值，其强制转换后的值将等于<xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A>.</xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A> </xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>      1> [!NOTE]&1;> Aero 是一组对外观 visual 增强功能和 Windows Vista 中引入的 Windows 桌面的功能。 Aero 的更直观功能之一是透明的玻璃窗口边框。 桌面合成功能的桌面窗口管理器 (DWM) 通过启用 Windows Aero。       Windows Aero 玻璃效果不支持在所有操作系统上，可支持的操作系统上禁用。 如果 Windows Aero 不可用，将不会玻璃框显示而不考虑<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性值。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> 此属性指定的边框区域将显示为黑色。检查<xref:System.Windows.SystemParameters.IsGlassEnabled%2A>属性以验证 Windows Aero 玻璃效果是否可用。</xref:System.Windows.SystemParameters.IsGlassEnabled%2A> 如果玻璃效果不可用，则应提供一种不使用玻璃框或使用标准的窗口的窗口样式设置为 null 的备用的窗口样式。       通过指定定义的外观和行为的帧内容 ControlTemplate 可将你的 WPF 内容扩展到窗口框架中。 设置的 ControlTemplate TargetType 为您要自定义窗口的类型。      ```   <ControlTemplate TargetType=&quot;{x:Type local:MainWindow}&quot;>   ```默认情况下，任何窗口的非客户端区域内的可视元素的部分都不是交互式的。 若要启用交互元素的非工作区中，将附加的 WindowsChrome.IsHitTestVisibleInChrome 属性附加到元素，并将其设置为 true。       下面的 XAML 标记显示自定义使用 WindowChrome 类窗口所需的主要元素。      ```   <Style x:Key=&quot;StandardStyle&quot; TargetType=&quot;{x:Type local:MainWindow}&quot;>       <Setter Property=&quot;shell:WindowChrome.WindowChrome&quot;>           <Setter.Value>               <shell:WindowChrome />           </Setter.Value>       </Setter>       <Setter Property=&quot;Template&quot;>           <Setter.Value>               <ControlTemplate TargetType=&quot;{x:Type local:MainWindow}&quot;>                   <Grid>                       <Border Background=&quot;White&quot;                               Margin=&quot;{Binding Source={x:Static shell:SystemParameters2.Current}, Path=WindowNonClientFrameThickness}&quot;>                           <ContentPresenter Content=&quot;{TemplateBinding Content}&quot; />                       </Border>                       <TextBlock Text=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}&quot;                                   VerticalAlignment=&quot;Top&quot; HorizontalAlignment=&quot;Left&quot;                                   Margin=&quot;36,8,0,0&quot;/>                       <Image Source=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}&quot;                              VerticalAlignment=&quot;Top&quot; HorizontalAlignment=&quot;Left&quot;                              Margin=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}&quot;                               Width=&quot;{Binding Source={x:Static shell:SystemParameters2.Current}, Path=SmallIconSize.Width}&quot;                              shell:WindowChrome.IsHitTestVisibleInChrome=&quot;True&quot;/>                   </Grid>               </ControlTemplate>           </Setter.Value>       </Setter>   </Style>   ```第一个 setter 将 WindowChrome 附加到窗口。 它使用所有默认值对于 WindowChrome 属性中，这使得如下所示的标准窗口的窗口。      ```   <Setter Property=&quot;shell:WindowChrome.WindowChrome&quot;>       <Setter.Value>           <shell:WindowChrome />       </Setter.Value>   </Setter>   ```窗口模板必须指定内容的显示器，用以显示你的应用程序中指定的窗口的内容。 默认情况下 WindowChrome 类扩展的工作区以涵盖非客户端边框。 为了发现玻璃框架，你需要指定边距 ContentPresenter。 此标记指定具有白色背景内容显示器来模拟的外观的标准窗口周围的边框。 它还指定绑定到 WindowNonClientFrameThickness 属性，用于获取帧的默认系统宽度的边距。      ```   <Border Background=&quot;White&quot;       Margin=&quot;{Binding Source={x:Static shell:SystemParameters2.Current}, Path=WindowNonClientFrameThickness}&quot;>       <ContentPresenter Content=&quot;{TemplateBinding Content}&quot; />   </Border>   ```由 WindowChrome 类; 不显示的应用程序图标和标题它们具有要添加到作为自定义内容的边框。 下面的 XAML 将添加的映像和 textblock 要显示的图标和标题。 这两个元素窗口上绑定到相应的属性。 图像宽度绑定到 SmallIconSize 宽度，后者将获取图标的默认系统大小。 IsHitTestVisibleInChrome 附加属性设置在图像上，以便它可以接收鼠标事件。      ```   <Image Source=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}&quot;          VerticalAlignment=&quot;Top&quot; HorizontalAlignment=&quot;Left&quot;          Margin=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}&quot;           Width=&quot;{Binding Source={x:Static shell:SystemParameters2.Current}, Path=SmallIconSize.Width}&quot;          shell:WindowChrome.IsHitTestVisibleInChrome=&quot;True&quot;/>      <TextBlock Text=&quot;{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}&quot;               VerticalAlignment=&quot;Top&quot; HorizontalAlignment=&quot;Left&quot;               Margin=&quot;36,8,0,0&quot;/>   ```"
  syntax:
    content: 'public class WindowChrome : System.Windows.Freezable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: WindowChrome()
  nameWithType: WindowChrome.WindowChrome()
  fullName: System.Windows.Shell.WindowChrome.WindowChrome()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "初始化的新实例<xref href=&quot;System.Windows.Shell.WindowChrome&quot;></xref>类。"
  syntax:
    content: public WindowChrome ();
    parameters: []
  overload: System.Windows.Shell.WindowChrome.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CaptionHeight
  id: CaptionHeight
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CaptionHeight
  nameWithType: WindowChrome.CaptionHeight
  fullName: System.Windows.Shell.WindowChrome.CaptionHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置在窗口顶部的标题区域的高度。"
  remarks: "将 CaptionHeight 属性以指定使通常与标题栏关联的系统行为的窗口顶部的区域设置。 这些行为包括双击以最大化窗口中，右键单击要打开系统菜单并单击和拖动来移动该窗口。 此属性可以设置为任何非负的双精度值。       由 CaptionHeight 属性定义的区域开始前的大小调整边框的下边缘，并向下扩展指定的量。 该视图所跨越内部向右窗口的宽度和左侧重设大小的边框。 此区域没有任何与其; 关联的可视元素它仅用于定义响应的标题栏行为的区域。 默认情况下，任何窗口的标题区域内的可视元素的部分都不是交互式的。 若要启用标题区域中的交互式元素，将附加<xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome%2A>附加到的元素的属性并将其设置为`true`。</xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome%2A>      <a name=&quot;dependencyPropertyInfo_CaptionHeight&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Shell.WindowChrome.CaptionHeightProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Shell.WindowChrome.CaptionHeightProperty>"
  syntax:
    content: public double CaptionHeight { get; set; }
    return:
      type: System.Double
      description: "标题区域的高度。"
  overload: System.Windows.Shell.WindowChrome.CaptionHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CaptionHeightProperty
  id: CaptionHeightProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CaptionHeightProperty
  nameWithType: WindowChrome.CaptionHeightProperty
  fullName: System.Windows.Shell.WindowChrome.CaptionHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.CaptionHeight*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.CaptionHeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CaptionHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CornerRadius
  id: CornerRadius
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CornerRadius
  nameWithType: WindowChrome.CornerRadius
  fullName: System.Windows.Shell.WindowChrome.CornerRadius
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置一个值，该值指示窗口的角变圆的量。"
  remarks: "CornerRadius 将属性设置为指定的量处窗口拐角的舍入。 此属性可以设置为任何非负的双精度值。 值可以是非一致性。       最大化的 windows 或 windows 具有 Windows Aero 的玻璃框，则此属性将不会影响。 它才会起作用时未启用 Windows Aero （也称为桌面窗口管理器） 或<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性设置为 0。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> 在非工作区中的命中测试不会不考虑 CornerRadius 确定鼠标是否位于大小调整边框时。 如果 radius 相对于太大<xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A>，那么很可能该用户不能执行使用鼠标对角线的大小调整。</xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness%2A>      <a name=&quot;dependencyPropertyInfo_CornerRadius&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Shell.WindowChrome.CornerRadiusProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Shell.WindowChrome.CornerRadiusProperty>"
  syntax:
    content: public System.Windows.CornerRadius CornerRadius { get; set; }
    return:
      type: System.Windows.CornerRadius
      description: "一个值，描述圆角的量。"
  overload: System.Windows.Shell.WindowChrome.CornerRadius*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CornerRadiusProperty
  id: CornerRadiusProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CornerRadiusProperty
  nameWithType: WindowChrome.CornerRadiusProperty
  fullName: System.Windows.Shell.WindowChrome.CornerRadiusProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.CornerRadius*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.CornerRadius*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CornerRadiusProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: WindowChrome.CreateInstanceCore()
  fullName: System.Windows.Shell.WindowChrome.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "创建的新实例<xref href=&quot;System.Windows.Shell.WindowChrome&quot;></xref>类。"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "此类的新实例。"
  overload: System.Windows.Shell.WindowChrome.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)
  id: GetIsHitTestVisibleInChrome(System.Windows.IInputElement)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GetIsHitTestVisibleInChrome(IInputElement)
  nameWithType: WindowChrome.GetIsHitTestVisibleInChrome(IInputElement)
  fullName: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(IInputElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取的值<xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>附加从指定的输入元素的属性。</xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>"
  syntax:
    content: public static bool GetIsHitTestVisibleInChrome (System.Windows.IInputElement inputElement);
    parameters:
    - id: inputElement
      type: System.Windows.IInputElement
      description: "从中读取属性值的输入的元素。"
    return:
      type: System.Boolean
      description: "值<xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>附加属性。</xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>"
  overload: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputElement</code>is not a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)
  id: GetResizeGripDirection(System.Windows.IInputElement)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GetResizeGripDirection(IInputElement)
  nameWithType: WindowChrome.GetResizeGripDirection(IInputElement)
  fullName: System.Windows.Shell.WindowChrome.GetResizeGripDirection(IInputElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取的值<xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>附加从指定的输入元素的属性。</xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>"
  syntax:
    content: public static System.Windows.Shell.ResizeGripDirection GetResizeGripDirection (System.Windows.IInputElement inputElement);
    parameters:
    - id: inputElement
      type: System.Windows.IInputElement
      description: "从中读取属性值的输入的元素。"
    return:
      type: System.Windows.Shell.ResizeGripDirection
      description: "值<xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>附加属性。</xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>"
  overload: System.Windows.Shell.WindowChrome.GetResizeGripDirection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputElement</code>is not a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)
  id: GetWindowChrome(System.Windows.Window)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GetWindowChrome(Window)
  nameWithType: WindowChrome.GetWindowChrome(Window)
  fullName: System.Windows.Shell.WindowChrome.GetWindowChrome(Window)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取的值<xref:System.Windows.Shell.WindowChrome.WindowChrome*>从指定附加属性<xref href=&quot;System.Windows.Window&quot;> </xref>。</xref:System.Windows.Shell.WindowChrome.WindowChrome*>"
  syntax:
    content: public static System.Windows.Shell.WindowChrome GetWindowChrome (System.Windows.Window window);
    parameters:
    - id: window
      type: System.Windows.Window
      description: "<xref href=&quot;System.Windows.Window&quot;> </xref>从中读取属性值。"
    return:
      type: System.Windows.Shell.WindowChrome
      description: "实例<xref href=&quot;System.Windows.Shell.WindowChrome&quot;> </xref> ，它是附加到指定<xref href=&quot;System.Windows.Window&quot;> </xref>。"
  overload: System.Windows.Shell.WindowChrome.GetWindowChrome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>window</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
  id: GlassFrameCompleteThickness
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GlassFrameCompleteThickness
  nameWithType: WindowChrome.GlassFrameCompleteThickness
  fullName: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取的统一粗细设为-1。"
  remarks: "提供 GlassFrameCompleteThickness 属性是一个实用工具来使您能够设置为指定的属性的玻璃框的粗细。 你设置<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性等于 GlassFrameCompleteThickness 以将玻璃框扩展整个窗口上方。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A> 如果<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>属性设置为任何一侧为负值，其强制转换后的值将等于 GlassFrameCompleteThickness。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness%2A>"
  syntax:
    content: public static System.Windows.Thickness GlassFrameCompleteThickness { get; }
    return:
      type: System.Windows.Thickness
      description: "统一粗细，即在所有情况下为-1。"
  overload: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GlassFrameThickness
  id: GlassFrameThickness
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GlassFrameThickness
  nameWithType: WindowChrome.GlassFrameThickness
  fullName: System.Windows.Shell.WindowChrome.GlassFrameThickness
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置一个值，该值指示窗口的玻璃边框的宽度。"
  remarks: "设置 GlassFrameThickness 属性来指定 Windows Aero 的玻璃框扩展到窗口的工作区的量。 默认情况下，玻璃框架将使用系统值来模拟标准窗口的外观。 如果 Windows Aero 启用状态，则 （最大化，最小化，关闭） 的标准标题按钮处于启用状态且交互式。 若要使不具有玻璃框的自定义窗口，请将此粗细设置为统一值为 0。 这将禁用的标准标题按钮。       若要扩展的玻璃框，以涵盖整个窗口，请在任何端 GlassFrameThickness 属性设置为负值。 如果 GlassFrameThickness 属性设置为任何一侧为负值，其强制转换后的值将等于<xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A>.</xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A> <xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A>属性提供作为实用程序，使您能够设置为玻璃延展整个窗口的已命名属性的玻璃框的粗细。</xref:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness%2A>       Windows Aero 玻璃效果不支持在所有操作系统上，可支持的操作系统上禁用。 如果 Windows Aero 不可用，则玻璃框不会显示无论 GlassFrameThickness 属性值中。 应检查<xref:System.Windows.SystemParameters.IsGlassEnabled%2A>属性以验证 Windows Aero 玻璃效果是否可用。</xref:System.Windows.SystemParameters.IsGlassEnabled%2A> 如果玻璃效果不可用，则应提供不使用玻璃框备用的窗口样式。      <a name=&quot;dependencyPropertyInfo_GlassFrameThickness&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty>"
  syntax:
    content: public System.Windows.Thickness GlassFrameThickness { get; set; }
    return:
      type: System.Windows.Thickness
      description: "窗口四周玻璃边框的宽度。"
  overload: System.Windows.Shell.WindowChrome.GlassFrameThickness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
  id: GlassFrameThicknessProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: GlassFrameThicknessProperty
  nameWithType: WindowChrome.GlassFrameThicknessProperty
  fullName: System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.GlassFrameThickness*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.GlassFrameThickness*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty GlassFrameThicknessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
  id: IsHitTestVisibleInChromeProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: IsHitTestVisibleInChromeProperty
  nameWithType: WindowChrome.IsHitTestVisibleInChromeProperty
  fullName: System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHitTestVisibleInChromeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdges
  id: NonClientFrameEdges
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: NonClientFrameEdges
  nameWithType: WindowChrome.NonClientFrameEdges
  fullName: System.Windows.Shell.WindowChrome.NonClientFrameEdges
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置一个值，该值指示窗口框架的哪些边不归客户端。"
  remarks: "<a name=&quot;dependencyPropertyInfo_NonClientFrameEdges&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty>"
  syntax:
    content: public System.Windows.Shell.NonClientFrameEdges NonClientFrameEdges { get; set; }
    return:
      type: System.Windows.Shell.NonClientFrameEdges
      description: "指定框架的哪些边缘不归客户端的枚举值的按位组合。       注册的默认值是<xref href=&quot;System.Windows.Shell.NonClientFrameEdges&quot;> </xref>。 有关什么可以影响值的详细信息，请参阅[依赖项属性值优先级](~/add/includes/ajax-current-ext-md.md)。"
  overload: System.Windows.Shell.WindowChrome.NonClientFrameEdges*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "左侧、 右侧、 顶部、 底部不是有效的值。 至少一个边必须属于客户端。"
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
  id: NonClientFrameEdgesProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: NonClientFrameEdgesProperty
  nameWithType: WindowChrome.NonClientFrameEdgesProperty
  fullName: System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.NonClientFrameEdges*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.NonClientFrameEdges*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty NonClientFrameEdgesProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThickness
  id: ResizeBorderThickness
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: ResizeBorderThickness
  nameWithType: WindowChrome.ResizeBorderThickness
  fullName: System.Windows.Shell.WindowChrome.ResizeBorderThickness
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置一个值，该值指示用于调整窗口大小的边框的宽度。"
  remarks: "将 ResizeBorderThickness 属性以指定的宽度，用户可在其中单击和拖动来重设窗口大小的区域设置。 鼠标指针将改为调整大小的箭头，当它移到的大小调整边框。       此属性可以设置为任何非负的双精度值。 值可以是非一致性。 默认情况下，调整大小边框将使用系统值来模拟标准窗口的行为。       此区域仅用于定义用于调整窗口; 的大小的区域它不具有任何与之关联的可视元素。 但是，它影响大小调整边框内的元素的布局。      <a name=&quot;dependencyPropertyInfo_ResizeBorderThickness&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty>"
  syntax:
    content: public System.Windows.Thickness ResizeBorderThickness { get; set; }
    return:
      type: System.Windows.Thickness
      description: "用于调整窗口大小的边框宽度。"
  overload: System.Windows.Shell.WindowChrome.ResizeBorderThickness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
  id: ResizeBorderThicknessProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: ResizeBorderThicknessProperty
  nameWithType: WindowChrome.ResizeBorderThicknessProperty
  fullName: System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.ResizeBorderThickness*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ResizeBorderThicknessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
  id: ResizeGripDirectionProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: ResizeGripDirectionProperty
  nameWithType: WindowChrome.ResizeGripDirectionProperty
  fullName: System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ResizeGripDirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)
  id: SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  nameWithType: WindowChrome.SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  fullName: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "设置的值<xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>附加在指定的输入元素的属性。</xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>"
  syntax:
    content: public static void SetIsHitTestVisibleInChrome (System.Windows.IInputElement inputElement, bool hitTestVisible);
    parameters:
    - id: inputElement
      type: System.Windows.IInputElement
      description: "在其上设置的元素<xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>附加属性。</xref:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome*>"
    - id: hitTestVisible
      type: System.Boolean
      description: "要设置的属性值。"
  overload: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputElement</code>is not a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)
  id: SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: SetResizeGripDirection(IInputElement,ResizeGripDirection)
  nameWithType: WindowChrome.SetResizeGripDirection(IInputElement,ResizeGripDirection)
  fullName: System.Windows.Shell.WindowChrome.SetResizeGripDirection(IInputElement,ResizeGripDirection)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "设置的值<xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>附加在指定的输入元素的属性。</xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>"
  syntax:
    content: public static void SetResizeGripDirection (System.Windows.IInputElement inputElement, System.Windows.Shell.ResizeGripDirection direction);
    parameters:
    - id: inputElement
      type: System.Windows.IInputElement
      description: "在其上设置的元素<xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>附加属性。</xref:System.Windows.Shell.WindowChrome.ResizeGripDirection*>"
    - id: direction
      type: System.Windows.Shell.ResizeGripDirection
      description: "要设置的属性值。"
  overload: System.Windows.Shell.WindowChrome.SetResizeGripDirection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputElement</code>is not a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)
  id: SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: SetWindowChrome(Window,WindowChrome)
  nameWithType: WindowChrome.SetWindowChrome(Window,WindowChrome)
  fullName: System.Windows.Shell.WindowChrome.SetWindowChrome(Window,WindowChrome)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "设置的值<xref:System.Windows.Shell.WindowChrome.WindowChrome*>附加属性上指定<xref href=&quot;System.Windows.Window&quot;> </xref>。</xref:System.Windows.Shell.WindowChrome.WindowChrome*>"
  syntax:
    content: public static void SetWindowChrome (System.Windows.Window window, System.Windows.Shell.WindowChrome chrome);
    parameters:
    - id: window
      type: System.Windows.Window
      description: "<xref href=&quot;System.Windows.Window&quot;> </xref>在其上设置<xref:System.Windows.Shell.WindowChrome.WindowChrome*>附加属性。</xref:System.Windows.Shell.WindowChrome.WindowChrome*>"
    - id: chrome
      type: System.Windows.Shell.WindowChrome
      description: "实例<xref href=&quot;System.Windows.Shell.WindowChrome&quot;></xref>设置。"
  overload: System.Windows.Shell.WindowChrome.SetWindowChrome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>window</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
  id: UseAeroCaptionButtons
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: UseAeroCaptionButtons
  nameWithType: WindowChrome.UseAeroCaptionButtons
  fullName: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "获取或设置一个值，该值指示是否在 Windows Aero 标题按钮上启用命中测试。"
  remarks: "默认 Windows Aero 标题按钮都关闭、 最大化/还原和最小化。 如果不使用 Windows Aero 标题按钮，则应提供有关用户来完成这些任务的替代方法。      <a name=&quot;dependencyPropertyInfo_UseAeroCaptionButtons&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty>"
  syntax:
    content: public bool UseAeroCaptionButtons { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果标题按钮; 上启用了命中测试否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 注册的默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。 有关什么可以影响值的详细信息，请参阅[依赖项属性值优先级](~/add/includes/ajax-current-ext-md.md)。"
  overload: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
  id: UseAeroCaptionButtonsProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: UseAeroCaptionButtonsProperty
  nameWithType: WindowChrome.UseAeroCaptionButtonsProperty
  fullName: System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty UseAeroCaptionButtonsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.WindowChrome.WindowChromeProperty
  id: WindowChromeProperty
  parent: System.Windows.Shell.WindowChrome
  langs:
  - csharp
  name: WindowChromeProperty
  nameWithType: WindowChrome.WindowChromeProperty
  fullName: System.Windows.Shell.WindowChrome.WindowChromeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "标识<xref:System.Windows.Shell.WindowChrome.WindowChrome*>依赖项属性。</xref:System.Windows.Shell.WindowChrome.WindowChrome*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty WindowChromeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Freezable
  isExternal: false
  name: System.Windows.Freezable
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Shell.WindowChrome.#ctor
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: WindowChrome()
  nameWithType: WindowChrome.WindowChrome()
  fullName: System.Windows.Shell.WindowChrome.WindowChrome()
- uid: System.Windows.Shell.WindowChrome.CaptionHeight
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CaptionHeight
  nameWithType: WindowChrome.CaptionHeight
  fullName: System.Windows.Shell.WindowChrome.CaptionHeight
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Shell.WindowChrome.CaptionHeightProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CaptionHeightProperty
  nameWithType: WindowChrome.CaptionHeightProperty
  fullName: System.Windows.Shell.WindowChrome.CaptionHeightProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Shell.WindowChrome.CornerRadius
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CornerRadius
  nameWithType: WindowChrome.CornerRadius
  fullName: System.Windows.Shell.WindowChrome.CornerRadius
- uid: System.Windows.CornerRadius
  parent: System.Windows
  isExternal: false
  name: CornerRadius
  nameWithType: CornerRadius
  fullName: System.Windows.CornerRadius
- uid: System.Windows.Shell.WindowChrome.CornerRadiusProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CornerRadiusProperty
  nameWithType: WindowChrome.CornerRadiusProperty
  fullName: System.Windows.Shell.WindowChrome.CornerRadiusProperty
- uid: System.Windows.Shell.WindowChrome.CreateInstanceCore
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: WindowChrome.CreateInstanceCore()
  fullName: System.Windows.Shell.WindowChrome.CreateInstanceCore()
- uid: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetIsHitTestVisibleInChrome(IInputElement)
  nameWithType: WindowChrome.GetIsHitTestVisibleInChrome(IInputElement)
  fullName: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(IInputElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetResizeGripDirection(IInputElement)
  nameWithType: WindowChrome.GetResizeGripDirection(IInputElement)
  fullName: System.Windows.Shell.WindowChrome.GetResizeGripDirection(IInputElement)
- uid: System.Windows.Shell.ResizeGripDirection
  parent: System.Windows.Shell
  isExternal: false
  name: ResizeGripDirection
  nameWithType: ResizeGripDirection
  fullName: System.Windows.Shell.ResizeGripDirection
- uid: System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetWindowChrome(Window)
  nameWithType: WindowChrome.GetWindowChrome(Window)
  fullName: System.Windows.Shell.WindowChrome.GetWindowChrome(Window)
- uid: System.Windows.Shell.WindowChrome
  parent: System.Windows.Shell
  isExternal: false
  name: WindowChrome
  nameWithType: WindowChrome
  fullName: System.Windows.Shell.WindowChrome
- uid: System.Windows.Window
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameCompleteThickness
  nameWithType: WindowChrome.GlassFrameCompleteThickness
  fullName: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Shell.WindowChrome.GlassFrameThickness
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameThickness
  nameWithType: WindowChrome.GlassFrameThickness
  fullName: System.Windows.Shell.WindowChrome.GlassFrameThickness
- uid: System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameThicknessProperty
  nameWithType: WindowChrome.GlassFrameThicknessProperty
  fullName: System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty
- uid: System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: IsHitTestVisibleInChromeProperty
  nameWithType: WindowChrome.IsHitTestVisibleInChromeProperty
  fullName: System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdges
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: NonClientFrameEdges
  nameWithType: WindowChrome.NonClientFrameEdges
  fullName: System.Windows.Shell.WindowChrome.NonClientFrameEdges
- uid: System.Windows.Shell.NonClientFrameEdges
  parent: System.Windows.Shell
  isExternal: false
  name: NonClientFrameEdges
  nameWithType: NonClientFrameEdges
  fullName: System.Windows.Shell.NonClientFrameEdges
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: NonClientFrameEdgesProperty
  nameWithType: WindowChrome.NonClientFrameEdgesProperty
  fullName: System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThickness
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: ResizeBorderThickness
  nameWithType: WindowChrome.ResizeBorderThickness
  fullName: System.Windows.Shell.WindowChrome.ResizeBorderThickness
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: ResizeBorderThicknessProperty
  nameWithType: WindowChrome.ResizeBorderThicknessProperty
  fullName: System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty
- uid: System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: ResizeGripDirectionProperty
  nameWithType: WindowChrome.ResizeGripDirectionProperty
  fullName: System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty
- uid: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  nameWithType: WindowChrome.SetIsHitTestVisibleInChrome(IInputElement,Boolean)
  fullName: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(IInputElement,Boolean)
- uid: System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetResizeGripDirection(IInputElement,ResizeGripDirection)
  nameWithType: WindowChrome.SetResizeGripDirection(IInputElement,ResizeGripDirection)
  fullName: System.Windows.Shell.WindowChrome.SetResizeGripDirection(IInputElement,ResizeGripDirection)
- uid: System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetWindowChrome(Window,WindowChrome)
  nameWithType: WindowChrome.SetWindowChrome(Window,WindowChrome)
  fullName: System.Windows.Shell.WindowChrome.SetWindowChrome(Window,WindowChrome)
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: UseAeroCaptionButtons
  nameWithType: WindowChrome.UseAeroCaptionButtons
  fullName: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: UseAeroCaptionButtonsProperty
  nameWithType: WindowChrome.UseAeroCaptionButtonsProperty
  fullName: System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty
- uid: System.Windows.Shell.WindowChrome.WindowChromeProperty
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: WindowChromeProperty
  nameWithType: WindowChrome.WindowChromeProperty
  fullName: System.Windows.Shell.WindowChrome.WindowChromeProperty
- uid: System.Windows.Shell.WindowChrome.#ctor*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: WindowChrome
  nameWithType: WindowChrome.WindowChrome
- uid: System.Windows.Shell.WindowChrome.CaptionHeight*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CaptionHeight
  nameWithType: WindowChrome.CaptionHeight
- uid: System.Windows.Shell.WindowChrome.CornerRadius*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CornerRadius
  nameWithType: WindowChrome.CornerRadius
- uid: System.Windows.Shell.WindowChrome.CreateInstanceCore*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: CreateInstanceCore
  nameWithType: WindowChrome.CreateInstanceCore
- uid: System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetIsHitTestVisibleInChrome
  nameWithType: WindowChrome.GetIsHitTestVisibleInChrome
- uid: System.Windows.Shell.WindowChrome.GetResizeGripDirection*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetResizeGripDirection
  nameWithType: WindowChrome.GetResizeGripDirection
- uid: System.Windows.Shell.WindowChrome.GetWindowChrome*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GetWindowChrome
  nameWithType: WindowChrome.GetWindowChrome
- uid: System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameCompleteThickness
  nameWithType: WindowChrome.GlassFrameCompleteThickness
- uid: System.Windows.Shell.WindowChrome.GlassFrameThickness*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: GlassFrameThickness
  nameWithType: WindowChrome.GlassFrameThickness
- uid: System.Windows.Shell.WindowChrome.NonClientFrameEdges*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: NonClientFrameEdges
  nameWithType: WindowChrome.NonClientFrameEdges
- uid: System.Windows.Shell.WindowChrome.ResizeBorderThickness*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: ResizeBorderThickness
  nameWithType: WindowChrome.ResizeBorderThickness
- uid: System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetIsHitTestVisibleInChrome
  nameWithType: WindowChrome.SetIsHitTestVisibleInChrome
- uid: System.Windows.Shell.WindowChrome.SetResizeGripDirection*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetResizeGripDirection
  nameWithType: WindowChrome.SetResizeGripDirection
- uid: System.Windows.Shell.WindowChrome.SetWindowChrome*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: SetWindowChrome
  nameWithType: WindowChrome.SetWindowChrome
- uid: System.Windows.Shell.WindowChrome.UseAeroCaptionButtons*
  parent: System.Windows.Shell.WindowChrome
  isExternal: false
  name: UseAeroCaptionButtons
  nameWithType: WindowChrome.UseAeroCaptionButtons
