### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.ServiceProviders
  id: ServiceProviders
  children:
  - System.Windows.Markup.ServiceProviders.#ctor
  - System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  - System.Windows.Markup.ServiceProviders.GetService(System.Type)
  langs:
  - csharp
  name: ServiceProviders
  nameWithType: ServiceProviders
  fullName: System.Windows.Markup.ServiceProviders
  type: Class
  summary: "提供的实现<xref:System.IServiceProvider>接口使用的方法来添加服务。</xref:System.IServiceProvider>"
  remarks: "在序列化内容时，这是使用一个实用工具类。 此类基本上是可输入用于存储服务键控由其服务类型，它实现的字典<xref:System.IServiceProvider>以供将来检索从相同的字典。</xref:System.IServiceProvider> 使用字典可避免重复查询相同的服务。 此类是类的基类<xref:System.Windows.Markup.XamlDesignerSerializationManager>，该服务用于`ShouldSerialize`WPF 的其他部分中的方法实现。</xref:System.Windows.Markup.XamlDesignerSerializationManager>       使用此类需要引用 WPF 程序集，它不适用于常规.NET Framework XAML 服务方案。 下面的方案是用于 WPF 内部实现的需要进行大量服务的功能在序列化，如处理时`ShouldSerialize`某些类型的实现。 在此方案中所涉及的实际类是派生的类<xref:System.Windows.Markup.XamlDesignerSerializationManager>.</xref:System.Windows.Markup.XamlDesignerSerializationManager>      <a name=&quot;xamlTextUsage_ServiceProviders&quot;></a># # XAML 文本用法"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class ServiceProviders : IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: ServiceProviders()
  nameWithType: ServiceProviders.ServiceProviders()
  fullName: System.Windows.Markup.ServiceProviders.ServiceProviders()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "初始化的新实例<xref href=&quot;System.Windows.Markup.ServiceProviders&quot;></xref>类。"
  syntax:
    content: public ServiceProviders ();
    parameters: []
  overload: System.Windows.Markup.ServiceProviders.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: ServiceProviders.AddService(Type,Object)
  fullName: System.Windows.Markup.ServiceProviders.AddService(Type,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "将服务添加到列表。"
  syntax:
    content: public void AddService (Type serviceType, object service);
    parameters:
    - id: serviceType
      type: System.Type
      description: "新的服务的服务类型。"
    - id: service
      type: System.Object
      description: "服务实现类。"
  overload: System.Windows.Markup.ServiceProviders.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>service</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "尝试在字典中添加已存在的服务。"
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: ServiceProviders.GetService(Type)
  fullName: System.Windows.Markup.ServiceProviders.GetService(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "获取指定类型的服务对象。"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要获取的服务对象的类型。"
    return:
      type: System.Object
      description: "类型的服务实现<code> serviceType </code>。 可能是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果没有为类型存储任何服务<code> serviceType </code>。"
  overload: System.Windows.Markup.ServiceProviders.GetService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Markup.ServiceProviders.#ctor
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: ServiceProviders()
  nameWithType: ServiceProviders.ServiceProviders()
  fullName: System.Windows.Markup.ServiceProviders.ServiceProviders()
- uid: System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: ServiceProviders.AddService(Type,Object)
  fullName: System.Windows.Markup.ServiceProviders.AddService(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.ServiceProviders.GetService(System.Type)
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: GetService(Type)
  nameWithType: ServiceProviders.GetService(Type)
  fullName: System.Windows.Markup.ServiceProviders.GetService(Type)
- uid: System.Windows.Markup.ServiceProviders.#ctor*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: ServiceProviders
  nameWithType: ServiceProviders.ServiceProviders
- uid: System.Windows.Markup.ServiceProviders.AddService*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: AddService
  nameWithType: ServiceProviders.AddService
- uid: System.Windows.Markup.ServiceProviders.GetService*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: GetService
  nameWithType: ServiceProviders.GetService
