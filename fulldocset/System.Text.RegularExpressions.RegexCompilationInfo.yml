### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.RegexCompilationInfo
  id: RegexCompilationInfo
  children:
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  - System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  - System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  - System.Text.RegularExpressions.RegexCompilationInfo.Name
  - System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  - System.Text.RegularExpressions.RegexCompilationInfo.Options
  - System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  langs:
  - csharp
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo
  fullName: System.Text.RegularExpressions.RegexCompilationInfo
  type: Class
  summary: "提供有关用于将独立的程序集的正则表达式编译的正则表达式的信息。"
  remarks: "RegexCompilationInfo 对象的数组传递给<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法以提供有关要包括在程序集中的每个正则表达式的信息。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 包含在程序集中每个编译正则表达式表示为从<xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>派生一个类 RegexCompilationInfo 类型的属性定义正则表达式的类名、 其完全限定的名称 （即，其命名空间和类型名称）、 其正则表达式模式，任何其他选项 （如正则表达式是否不区分大小写） 和指定的正则表达式引擎搜索匹配项的多长时间的超时间隔。       可以通过调用其重载的类构造函数来实例化 RegexCompilationInfo 对象。"
  syntax:
    content: public class RegexCompilationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "初始化的新实例<xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;></xref>包含有关要包含在程序集中的正则表达式的信息的类。"
  remarks: "RegexCompilationInfo 构造函数的每个参数直接与属性相对应的<xref:System.Text.RegularExpressions.RegexCompilationInfo>类。</xref:System.Text.RegularExpressions.RegexCompilationInfo> 因为所有的属性是读/写，也可以直接分配它们的值。       <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法将生成该程序集包含已编译的正则表达式。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 因此，不应指定<xref:System.Text.RegularExpressions.RegexOptions>为的值之一`options`。</xref:System.Text.RegularExpressions.RegexOptions>       如果`ispublic`是`true`，已编译的正则表达式类提供公共可访问性。 也就是说，它可以执行的任何程序集中的代码中实例化。 如果`ispublic`是`false`，给定的已编译的正则表达式类`internal`（在 C# 中) 或`Friend`（在 Visual Basic) 可访问性。 也就是说，它可以只能从与正则表达式类相同的程序集中执行的代码实例化。"
  example:
  - "The following example creates and uses a compiled regular expression in two steps.  \n  \n In the first step, compile and execute the following code example. The RegexCompilationInfo constructor in the code example defines a compiled regular expression. The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.  \n  \n [!code-cs[sys.txt.rgxCompInfo#1](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_1.cs)]\n [!code-vb[sys.txt.rgxCompInfo#1](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_1.vb)]  \n  \n In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file. The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.  \n  \n [!code-vb[sys.txt.rgxCompInfo#2](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_2.vb)]\n [!code-cs[sys.txt.rgxCompInfo#2](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_2.cs)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);
    parameters:
    - id: pattern
      type: System.String
      description: "要编译的正则表达式。"
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "要编译的正则表达式时使用的正则表达式选项。"
    - id: name
      type: System.String
      description: "表示已编译的正则表达式的类型的名称。"
    - id: fullnamespace
      type: System.String
      description: "为新类型所属的命名空间。"
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使已编译的正则表达式公开可见的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>是&lt;xref:System.String?displayProperty=fullName&gt;。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "初始化的新实例<xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;></xref>包含有关要包含在程序集中指定的超时值的正则表达式的信息的类。"
  remarks: "每个参数的<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>构造函数直接对应于一个属性<xref:System.Text.RegularExpressions.RegexCompilationInfo>类。</xref:System.Text.RegularExpressions.RegexCompilationInfo> </xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 因为所有的属性是读/写，也可以直接分配它们的值。       <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法将生成该程序集包含已编译的正则表达式。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 因此，不应指定<xref:System.Text.RegularExpressions.RegexOptions>为的值之一`options`。</xref:System.Text.RegularExpressions.RegexOptions>       如果`ispublic`是`true`，已编译的正则表达式类提供公共可访问性。 也就是说，它可以执行的任何程序集中的代码中实例化。 如果`ispublic`是`false`，给定的已编译的正则表达式类`internal`（在 C# 中) 或`Friend`（在 Visual Basic) 可访问性。 也就是说，它可以只能从与正则表达式类相同的程序集中执行的代码实例化。       `matchTimeout`参数定义已编译的正则表达式的默认超时间隔。 此值表示的近似之前在操作超时时并且正则表达式引擎将引发，已编译的正则表达式对象将执行单个匹配操作的时间量<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>在其下一步的计时检查过程中的异常。</xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 超时值有关的其他信息，请参阅<xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>属性。</xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>      1> [!IMPORTANT]&1;> 建议你始终将已编译的正则表达式的默认超时值。 正则表达式库的使用者可以在通过传递的情况下重写该超时值<xref:System.TimeSpan>值，该值表示此构造函数重载的新的超时间隔。</xref:System.TimeSpan>"
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_2.vb)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);
    parameters:
    - id: pattern
      type: System.String
      description: "要编译的正则表达式。"
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "要编译的正则表达式时使用的正则表达式选项。"
    - id: name
      type: System.String
      description: "表示已编译的正则表达式的类型的名称。"
    - id: fullnamespace
      type: System.String
      description: "为新类型所属的命名空间。"
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使已编译的正则表达式公开可见的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: matchTimeout
      type: System.TimeSpan
      description: "正则表达式的默认超时间隔。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>是&lt;xref:System.String?displayProperty=fullName&gt;。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>matchTimeout</code>为负、 零或大于 24 天左右。"
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  id: IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "获取或设置一个值，该值指示是否已编译的正则表达式具有公共可见性。"
  remarks: "如果 IsPublic 属性为`false`，由当前实例定义的正则表达式类可以仅通过中包含的类的程序集执行的代码实例化。 但是，因为<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>方法生成包含仅已编译的正则表达式，并且不允许其他代码要添加的程序集时，通常没有理由将此属性的值分配`false`。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果正则表达式具有公共可见性;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  id: MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "获取或设置正则表达式的默认超时间隔。"
  remarks: "MatchTimeout 属性定义已编译的正则表达式的默认超时间隔。 此值表示的近似之前在操作超时时并且正则表达式引擎将引发，已编译的正则表达式将执行单个匹配操作的时间量<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>在其下一步的计时检查过程中的异常。</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>      1> [!IMPORTANT]&1;> 建议你始终将已编译的正则表达式的默认超时值。 正则表达式库的使用者可以在通过传递的情况下重写该超时值<xref:System.TimeSpan>值，该值表示已编译的正则表达式的类构造函数的新的超时间隔。</xref:System.TimeSpan>       你可以分配到一个默认超时值<xref:System.Text.RegularExpressions.RegexCompilationInfo>处于以下任一对象:-通过调用<xref:System.AppDomain.SetData%2A?displayProperty=fullName>方法并提供的字符串表示形式<xref:System.TimeSpan>&quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot;属性值。</xref:System.TimeSpan> </xref:System.AppDomain.SetData%2A?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexCompilationInfo>      -通过调用<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>构造函数和提供的值`matchTimeout`参数。</xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>      -通过设置此属性的值。       若要设置的合理的超时间隔，请考虑以下因素:-长度和复杂性的正则表达式模式。 长而复杂的正则表达式需要比更简短和简单的更多时间。      -预期的机负载。 处理在具有高的 CPU 和内存利用率系统上花费更多时间。"
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/p-system.text.regularexp_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/p-system.text.regularexp_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/p-system.text.regularexp_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/p-system.text.regularexp_2.vb)]"
  syntax:
    content: public TimeSpan MatchTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "在一个模式匹配操作之前中可以经过的默认最大时间间隔<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>引发，或&lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt;如果禁用了超时。</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  id: Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "获取或设置表示已编译的正则表达式的类型的名称。"
  remarks: "<xref:System.Text.RegularExpressions.RegexCompilationInfo>类用于定义已编译的正则表达式，其表示为从<xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>派生的类</xref:System.Text.RegularExpressions.RegexCompilationInfo> Name 属性定义的正则表达式类型的类名称和<xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>和名称属性共同定义其完全限定的名称。</xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "新类型的名称。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "此属性的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "此属性的值为一个空字符串。"
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  id: Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "获取或设置与新类型所属的命名空间。"
  remarks: "<xref:System.Text.RegularExpressions.RegexCompilationInfo>类用于定义已编译的正则表达式，其表示为从<xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>派生的类</xref:System.Text.RegularExpressions.RegexCompilationInfo> Namespace 属性定义包含已编译的正则表达式类型和 Namespace 的命名空间和<xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>属性共同定义其完全限定的名称。</xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "新类型的命名空间。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "此属性的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  id: Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "获取或设置要编译的正则表达式时使用的选项。"
  remarks: "<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法将生成该程序集包含已编译的正则表达式。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 因此，你不必指定<xref:System.Text.RegularExpressions.RegexOptions>作为此属性的值之一。</xref:System.Text.RegularExpressions.RegexOptions> 如果不存在，<xref:System.Text.RegularExpressions.RegexOptions>选项将被忽略。</xref:System.Text.RegularExpressions.RegexOptions>"
  syntax:
    content: public System.Text.RegularExpressions.RegexOptions Options { get; set; }
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: "枚举值的按位组合。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  id: Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "获取或设置要编译的正则表达式。"
  remarks: "Pattern 属性可以包含任何有效的正则表达式。 如果模式属性的值不是语法正确的正则表达式模式中，调用<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法将引发<xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>"
  syntax:
    content: public string Pattern { get; set; }
    return:
      type: System.String
      description: "要编译的正则表达式。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "此属性的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo.RegexCompilationInfo
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
