### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IPolicyImportExtension
  id: IPolicyImportExtension
  children:
  - System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: IPolicyImportExtension
  nameWithType: IPolicyImportExtension
  fullName: System.ServiceModel.Description.IPolicyImportExtension
  type: Interface
  summary: "定义用于导入有关绑定的自定义策略断言的对象的方法。"
  remarks: "实现 IPolicyImportExtension 接口可以搜索有关终结点功能或要求的自定义策略断言特定终结点公开的 WSDL 信息。 通常，策略导入特定断言并插入绑定元素中搜索、 配置绑定元素，或者修改协定以支持该断言的需求。       与其对应的方法不同<xref:System.ServiceModel.Description.IPolicyExportExtension>，IPolicyImportExtension 不需要实现通过<xref:System.ServiceModel.Channels.BindingElement>对象; 可以使用客户端配置节所示的示例部分中或以编程方式通过将其添加到加载<xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>构造函数。</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Description.IPolicyExportExtension>       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]将两个对象传递给<xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>方法时，<xref:System.ServiceModel.Description.MetadataImporter>和<xref:System.ServiceModel.Description.PolicyConversionContext>。</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> </xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> 通常<xref:System.ServiceModel.Description.PolicyConversionContext>对象包含每个绑定范围的策略断言。</xref:System.ServiceModel.Description.PolicyConversionContext>       IPolicyImportExtension 实现将执行以下步骤︰ 1。  查找它所负责的通过调用自定义策略断言<xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>， <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>，或<xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>方法，这取决于作用域。</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  从断言集合中移除策略断言。 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>方法查找、 返回，并在一个步骤中移除断言。</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  通过添加所需的自定义来修改绑定堆栈或协定<xref:System.ServiceModel.Channels.BindingElement>到<xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>属性或通过修改<xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>属性。</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       步骤 2 非常重要。 在调用所有策略导入程序后，[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]检查是否存在的任何策略断言的保留。 如果存在，[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]认为策略导入不成功，将不导入相关的绑定。      1> [!IMPORTANT]&1;> 恶意的元数据供应商可以尝试以尝试利用策略导入元数据的一部分发送 XML 格式不正确。 强烈建议导入程序能够正常所有形式的 XML 可以传递给它的自定义策略。       自定义<xref:System.ServiceModel.Description.MetadataImporter>实现必须实现自己<xref:System.ServiceModel.Description.PolicyConversionContext>对象，以提取策略断言附加到自定义元数据格式。</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter>       如果你想要导出和导入不是策略断言的自定义 WSDL 元素，请参阅<xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>和<xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>。</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>      1> [!NOTE]&1;> 你可以使用自定义策略导入和导出程序与[ServiceModel 元数据实用工具 (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md)通过在配置文件中使用的相同的配置元素和`/svcutilConfig:<configFile>`选项。"
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public interface IPolicyImportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  id: ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  langs:
  - csharp
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "定义的方法，可以导入自定义策略断言和添加实现绑定元素。"
  remarks: "实现`ImportPolicy`方法以获取策略断言，并修改某些导入的协定或绑定以支持该断言。 通常，策略导入对通过配置或将一个绑定元素插入到正在导入的绑定来查找自定义策略断言作出响应。       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]将两个对象传递给 ImportPolicy 的方法，<xref:System.ServiceModel.Description.MetadataImporter>和<xref:System.ServiceModel.Description.PolicyConversionContext>。</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> 通常<xref:System.ServiceModel.Description.PolicyConversionContext>对象包含每个绑定范围的策略断言。</xref:System.ServiceModel.Description.PolicyConversionContext>       <xref:System.ServiceModel.Description.IPolicyImportExtension>实现将执行以下步骤︰ 1。</xref:System.ServiceModel.Description.IPolicyImportExtension>  查找它所负责的通过调用自定义策略断言<xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>， <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>，或<xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>方法，这取决于作用域。</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  从断言集合中移除策略断言。 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>方法查找、 返回，并在一个步骤中移除断言。</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  通过添加所需的自定义修改绑定堆栈或协定<xref:System.ServiceModel.Channels.BindingElement>到<xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>属性或通过修改<xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>属性。</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       步骤 2 非常重要。 在调用所有策略导入程序后，[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]检查是否存在的任何策略断言的保留。 如果存在，[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]认为策略导入不成功，将不导入相关的绑定。"
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: importer
      type: System.ServiceModel.Description.MetadataImporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref>中使用的对象。"
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> ，包含可以导入的策略断言和的绑定的元素可向其添加实现绑定元素集合。"
  overload: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataImporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy
  nameWithType: IPolicyImportExtension.ImportPolicy
