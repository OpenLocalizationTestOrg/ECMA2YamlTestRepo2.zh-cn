### YamlMime:ManagedReference
items:
- uid: System.Windows.Trigger
  id: Trigger
  children:
  - System.Windows.Trigger.#ctor
  - System.Windows.Trigger.Property
  - System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  - System.Windows.Trigger.Setters
  - System.Windows.Trigger.SourceName
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Trigger.Value
  langs:
  - csharp
  name: Trigger
  nameWithType: Trigger
  fullName: System.Windows.Trigger
  type: Class
  summary: "表示一个触发器，它应用属性值或有条件地执行操作。"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]定义属性对应于最终用户操作，如<xref:System.Windows.UIElement.IsMouseOver%2A>属性设置为`true`当用户将光标悬停上<xref:System.Windows.UIElement>或对应的<xref:System.Windows.ContentElement.IsMouseOver%2A>属性的一种<xref:System.Windows.ContentElement>。</xref:System.Windows.ContentElement> </xref:System.Windows.ContentElement.IsMouseOver%2A> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.IsMouseOver%2A> 表示属性值，以及触发器元素中，最终用户操作允许[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]样式来更改属性值基于这些最终用户操作，一切都是通过标记内。       更改的触发器的属性会自动重置其旧值不再满足触发的条件时。 针对这需要更改并返回到原始状态，例如<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>和<xref:System.Windows.Controls.Button><xref:System.Windows.Controls.ListBoxItem.IsSelected%2A><xref:System.Windows.Controls.ListBoxItem>。</xref:System.Windows.Controls.ListBoxItem></xref:System.Windows.Controls.ListBoxItem.IsSelected%2A></xref:System.Windows.Controls.Button></xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>瞬态触发器进行了优化 <xref:System.Windows.Trigger.Property%2A>感兴趣的必须是依赖项属性。</xref:System.Windows.Trigger.Property%2A>       请注意，你必须指定同时<xref:System.Windows.Trigger.Property%2A>和<xref:System.Windows.Trigger.Value%2A>触发器的触发器为有意义的属性。</xref:System.Windows.Trigger.Value%2A> </xref:System.Windows.Trigger.Property%2A> 如果未设置一个或两个属性，将引发异常。       <xref:System.Windows.Trigger.Setters%2A>触发器对象的属性只能包含<xref:System.Windows.Setter>对象。</xref:System.Windows.Setter> </xref:System.Windows.Trigger.Setters%2A> 添加<xref:System.Windows.Setter>触发器对象子级隐式将其添加到<xref:System.Windows.SetterBaseCollection>触发器对象。</xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>不支持对象;仅<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>支持<xref:System.Windows.EventSetter>对象。</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>       有其他类型的触发器。 <xref:System.Windows.MultiTrigger>允许你应用基于多个属性的状态的更改。</xref:System.Windows.MultiTrigger> <xref:System.Windows.EventTrigger>可以在事件发生时应用更改。</xref:System.Windows.EventTrigger> <xref:System.Windows.DataTrigger>和<xref:System.Windows.MultiDataTrigger>用于数据绑定属性。</xref:System.Windows.MultiDataTrigger></xref:System.Windows.DataTrigger>"
  example:
  - "The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a Trigger element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Setters")]

      [System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")]

      public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.Trigger.#ctor
  id: '#ctor'
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.Trigger&quot;></xref>类。"
  syntax:
    content: public Trigger ();
    parameters: []
  overload: System.Windows.Trigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Property
  id: Property
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置返回与进行比较的值的属性的<xref:System.Windows.Trigger.Value*>的触发器的属性。</xref:System.Windows.Trigger.Value*> 比较是引用相等性检查。"
  remarks: "返回此属性的值与指定的值进行比较<xref:System.Windows.Trigger.Value%2A>属性。</xref:System.Windows.Trigger.Value%2A> 执行比较是引用相等性检查。 如果两个值匹配，则关联<xref:System.Windows.Setter>s 应用指定的属性值。</xref:System.Windows.Setter>       使用`ClassName.PropertyName`语法来限定的属性指定是否样式或模板，其中包含此触发器不具有`TargetType`属性集。       请注意，你必须指定这两个属性和<xref:System.Windows.Trigger.Value%2A>属性<xref:System.Windows.Trigger>触发器为有意义的。</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Value%2A> 如果未设置一个或两个属性，将引发异常。"
  example:
  - "The following example contains two triggers. The first changes the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Button> when the <xref:System.Windows.UIElement.IsMouseOver%2A> property is **true**. The second changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**. The <xref:System.Windows.Style.TargetType%2A> of the <xref:System.Windows.Style> is set to <xref:System.Windows.Controls.Button> and therefore there is no need to qualify the `Property` properties with the class name.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public System.Windows.DependencyProperty Property { get; set; }
    return:
      type: System.Windows.DependencyProperty
      description: "A <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>返回元素的属性值。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Trigger.Property*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Windows.Style&quot;> </xref>不能包含<xref href=&quot;System.Windows.Trigger&quot;> </xref> ，是指<xref href=&quot;System.Windows.Style&quot;></xref>属性。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "后<xref href=&quot;System.Windows.Trigger&quot;></xref>是在使用中，不能修改它。"
  platform:
  - net462
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  id: ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "处理的类型转换器提供一个值的属性的情况<xref href=&quot;System.Windows.Trigger&quot;></xref>对象。"
  remarks: "这是应用所引用的方法<xref:System.Windows.Markup.XamlSetTypeConverterAttribute>在类级别，这意味着此方法将处理所有尝试将值设置的属性<xref:System.Windows.Trigger>与类型转换器。</xref:System.Windows.Trigger> </xref:System.Windows.Markup.XamlSetTypeConverterAttribute> 不通常调用此方法直接。"
  syntax:
    content: public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: "类型转换器在其中设置值的对象。"
    - id: eventArgs
      type: System.Windows.Markup.XamlSetTypeConverterEventArgs
      description: "适用于类型转换器处理的数据。"
  overload: System.Windows.Trigger.ReceiveTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Setters
  id: Setters
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取的集合<xref href=&quot;System.Windows.Setter&quot;></xref>对象，描述要应用当满足指定的条件的属性值。"
  remarks: "<a name=&quot;xamlPropertyElementUsage_Setters&quot;></a># # XAML 属性元素用法```   <object>     <object.Setters>       ZeroOrMoreSetters     </object.Setters>   </object>   ``` <a name=&quot;xamlValues_Setters&quot;> </a> # # XAML 值*ZeroOrMoreSetters*零个或多<xref:System.Windows.Setter>对象。</xref:System.Windows.Setter>       这不支持<xref:System.Windows.EventSetter>对象。</xref:System.Windows.EventSetter>       A<xref:System.Windows.Trigger>允许你使用<xref:System.Windows.Setter>来应用属性值在该元素满足指定的条件时。</xref:System.Windows.Setter> </xref:System.Windows.Trigger> 例如，你可能想要更改元素的背景色，当它处于焦点时。       如果不止一次设置同一属性，将应用的最后一个属性值。       Setter 属性<xref:System.Windows.Trigger>对象只能包含<xref:System.Windows.Setter>对象。</xref:System.Windows.Setter> </xref:System.Windows.Trigger> 添加<xref:System.Windows.Setter>子级到<xref:System.Windows.Trigger>对象隐式将其添加到<xref:System.Windows.SetterBaseCollection>为<xref:System.Windows.Trigger>对象。</xref:System.Windows.Trigger> </xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Trigger> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>不支持对象;仅<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>支持<xref:System.Windows.EventSetter>对象。</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>"
  example:
  - "As mentioned above, adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object. In the following example, `<Trigger.Setters>` is implicit.  \n  \n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/photostore/window1.xaml#triggersettersref)]\n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/p-system.windows.trigger_3_1.xaml)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: "默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Trigger.Setters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.SourceName
  id: SourceName
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置与导致关联的 setter 要应用的属性对象的名称。"
  remarks: "你可以将此属性设置为范围内的任何元素的名称触发器集合 (集合此<xref:System.Windows.Trigger>是的一部分) 应用。</xref:System.Windows.Trigger> 这通常是在包含此<xref:System.Windows.Trigger>。</xref:System.Windows.Trigger>的模板内的已命名的元素       您可以命名对象使用[X:name 指令](~/add/includes/ajax-current-ext-md.md)语法。"
  example:
  - "One scenario when you would use the SourceName property is when the property of interest is not a property of the templated parent, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#TriggerSourceName](~/add/codesnippet/xaml/controltemplateexamples/resources/menu.xaml#triggersourcename)]"
  syntax:
    content: public string SourceName { get; set; }
    return:
      type: System.String
      description: "默认属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 如果此属性为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，则<xref:System.Windows.Trigger.Property*>属性计算相对于此样式或模板被应用于 （样式化的父级或模板化父级） 的元素。</xref:System.Windows.Trigger.Property*>"
  overload: System.Windows.Trigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "后<xref href=&quot;System.Windows.Trigger&quot;></xref>是在使用中，不能修改它。"
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "用信号通知对象初始化即将开始。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.Setter>实例被强制转换为<xref:System.ComponentModel.ISupportInitialize>接口。</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "用信号通知对象初始化已完成。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.Setter>实例被强制转换为<xref:System.ComponentModel.ISupportInitialize>接口。</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "添加子对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.Trigger>实例被强制转换为<xref:System.Windows.Markup.IAddChild>接口。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Trigger>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加的子对象。"
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "将节点的文本内容添加到对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.Trigger>实例被强制转换为<xref:System.Windows.Markup.IAddChild>接口。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Trigger>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要添加到对象的文本。"
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Value
  id: Value
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置要与元素的属性值进行比较的值。 比较是引用相等性检查。"
  remarks: "此值与<xref:System.Windows.Trigger.Property%2A><xref:System.Windows.Trigger>.</xref:System.Windows.Trigger>属性</xref:System.Windows.Trigger.Property%2A>返回的属性值进行比较 执行比较是一项引用质量检查。 如果两个值相等，则关联<xref:System.Windows.Setter>s 应用指定的属性值。</xref:System.Windows.Setter>       请注意，你必须指定同时<xref:System.Windows.Trigger.Property%2A>和值属性上<xref:System.Windows.Trigger>触发器为有意义的。</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Property%2A> 因此，如果未指定一个或两个属性，然后是引发异常。      <a name=&quot;xamlPropertyElementUsage_Value&quot;></a># # XAML 属性元素用法```   <object>     <object.Value>       Value     </object.Value>   </object>   ```"
  example:
  - "The following example changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 另请参阅异常部分。"
  overload: System.Windows.Trigger.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "不支持表达式 （如绑定）。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "后<xref href=&quot;System.Windows.Trigger&quot;></xref>是在使用中，不能修改它。"
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Trigger.#ctor
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
- uid: System.Windows.Trigger.Property
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetTypeConverterEventArgs
  nameWithType: XamlSetTypeConverterEventArgs
  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
- uid: System.Windows.Trigger.Setters
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.Trigger.SourceName
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.Trigger.Value
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
- uid: System.Windows.Trigger.#ctor*
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger
  nameWithType: Trigger.Trigger
- uid: System.Windows.Trigger.Property*
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
- uid: System.Windows.Trigger.ReceiveTypeConverter*
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter
  nameWithType: Trigger.ReceiveTypeConverter
- uid: System.Windows.Trigger.Setters*
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
- uid: System.Windows.Trigger.SourceName*
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Trigger.Value*
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
