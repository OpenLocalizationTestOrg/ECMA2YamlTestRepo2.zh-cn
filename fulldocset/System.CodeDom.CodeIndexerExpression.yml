### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeIndexerExpression
  id: CodeIndexerExpression
  children:
  - System.CodeDom.CodeIndexerExpression.#ctor
  - System.CodeDom.CodeIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])
  - System.CodeDom.CodeIndexerExpression.Indices
  - System.CodeDom.CodeIndexerExpression.TargetObject
  langs:
  - csharp
  name: CodeIndexerExpression
  nameWithType: CodeIndexerExpression
  fullName: System.CodeDom.CodeIndexerExpression
  type: Class
  summary: "表示对象的索引器属性的引用。"
  remarks: "CodeIndexerExpression 可以用于表示对代码索引器或非数组索引器的引用。 使用<xref:System.CodeDom.CodeArrayIndexerExpression>来表示对数组索引器的引用。</xref:System.CodeDom.CodeArrayIndexerExpression>"
  example:
  - "The following example demonstrates use of a CodeIndexerExpression to reference a type indexer for the current object.  \n  \n [!code-vb[CodeMultiExample#3](~/add/codesnippet/visualbasic/t-system.codedom.codeind_1.vb)]\n [!code-cpp[CodeMultiExample#3](~/add/codesnippet/cpp/t-system.codedom.codeind_1.cpp)]\n [!code-cs[CodeMultiExample#3](~/add/codesnippet/csharp/t-system.codedom.codeind_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeIndexerExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeIndexerExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeIndexerExpression
  langs:
  - csharp
  name: CodeIndexerExpression()
  nameWithType: CodeIndexerExpression.CodeIndexerExpression()
  fullName: System.CodeDom.CodeIndexerExpression.CodeIndexerExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeIndexerExpression&quot;></xref>类。"
  syntax:
    content: public CodeIndexerExpression ();
    parameters: []
  overload: System.CodeDom.CodeIndexerExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])
  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])'
  parent: System.CodeDom.CodeIndexerExpression
  langs:
  - csharp
  name: CodeIndexerExpression(CodeExpression,CodeExpression[])
  nameWithType: CodeIndexerExpression.CodeIndexerExpression(CodeExpression,CodeExpression[])
  fullName: System.CodeDom.CodeIndexerExpression.CodeIndexerExpression(CodeExpression,CodeExpression[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeIndexerExpression&quot;></xref>类使用指定的目标对象和索引。"
  syntax:
    content: public CodeIndexerExpression (System.CodeDom.CodeExpression targetObject, System.CodeDom.CodeExpression[] indices);
    parameters:
    - id: targetObject
      type: System.CodeDom.CodeExpression
      description: "目标对象中。"
    - id: indices
      type: System.CodeDom.CodeExpression[]
      description: "或多个索引的索引器表达式。"
  overload: System.CodeDom.CodeIndexerExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIndexerExpression.Indices
  id: Indices
  parent: System.CodeDom.CodeIndexerExpression
  langs:
  - csharp
  name: Indices
  nameWithType: CodeIndexerExpression.Indices
  fullName: System.CodeDom.CodeIndexerExpression.Indices
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取的索引器表达式的索引的集合。"
  remarks: "A<xref:System.CodeDom.CodeExpressionCollection>可以包含<xref:System.CodeDom.CodeExpression>，它指定在目标为索引器或多个单个索引<xref:System.CodeDom.CodeExpression>共同通过索引器的维度中指定索引的特定交集的对象。</xref:System.CodeDom.CodeExpression> </xref:System.CodeDom.CodeExpression> </xref:System.CodeDom.CodeExpressionCollection>"
  syntax:
    content: public System.CodeDom.CodeExpressionCollection Indices { get; }
    return:
      type: System.CodeDom.CodeExpressionCollection
      description: "A <xref href=&quot;System.CodeDom.CodeExpressionCollection&quot;> </xref> ，该值指示索引器表达式的索引。"
  overload: System.CodeDom.CodeIndexerExpression.Indices*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIndexerExpression.TargetObject
  id: TargetObject
  parent: System.CodeDom.CodeIndexerExpression
  langs:
  - csharp
  name: TargetObject
  nameWithType: CodeIndexerExpression.TargetObject
  fullName: System.CodeDom.CodeIndexerExpression.TargetObject
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取或设置可编制索引的目标对象。"
  remarks: "此表达式应表示具有一个索引器属性的对象。"
  syntax:
    content: public System.CodeDom.CodeExpression TargetObject { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> ，该值指示索引器对象。"
  overload: System.CodeDom.CodeIndexerExpression.TargetObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeIndexerExpression.#ctor
  parent: System.CodeDom.CodeIndexerExpression
  isExternal: false
  name: CodeIndexerExpression()
  nameWithType: CodeIndexerExpression.CodeIndexerExpression()
  fullName: System.CodeDom.CodeIndexerExpression.CodeIndexerExpression()
- uid: System.CodeDom.CodeIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])
  parent: System.CodeDom.CodeIndexerExpression
  isExternal: false
  name: CodeIndexerExpression(CodeExpression,CodeExpression[])
  nameWithType: CodeIndexerExpression.CodeIndexerExpression(CodeExpression,CodeExpression[])
  fullName: System.CodeDom.CodeIndexerExpression.CodeIndexerExpression(CodeExpression,CodeExpression[])
- uid: System.CodeDom.CodeExpression[]
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression[]
  spec.csharp:
  - uid: System.CodeDom.CodeExpression
    name: CodeExpression
    nameWithType: CodeExpression
    fullName: CodeExpression[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeIndexerExpression.Indices
  parent: System.CodeDom.CodeIndexerExpression
  isExternal: false
  name: Indices
  nameWithType: CodeIndexerExpression.Indices
  fullName: System.CodeDom.CodeIndexerExpression.Indices
- uid: System.CodeDom.CodeExpressionCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeExpressionCollection
  nameWithType: CodeExpressionCollection
  fullName: System.CodeDom.CodeExpressionCollection
- uid: System.CodeDom.CodeIndexerExpression.TargetObject
  parent: System.CodeDom.CodeIndexerExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeIndexerExpression.TargetObject
  fullName: System.CodeDom.CodeIndexerExpression.TargetObject
- uid: System.CodeDom.CodeIndexerExpression.#ctor*
  parent: System.CodeDom.CodeIndexerExpression
  isExternal: false
  name: CodeIndexerExpression
  nameWithType: CodeIndexerExpression.CodeIndexerExpression
- uid: System.CodeDom.CodeIndexerExpression.Indices*
  parent: System.CodeDom.CodeIndexerExpression
  isExternal: false
  name: Indices
  nameWithType: CodeIndexerExpression.Indices
- uid: System.CodeDom.CodeIndexerExpression.TargetObject*
  parent: System.CodeDom.CodeIndexerExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeIndexerExpression.TargetObject
