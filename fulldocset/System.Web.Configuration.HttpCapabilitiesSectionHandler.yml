### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler
  id: HttpCapabilitiesSectionHandler
  children:
  - System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor
  - System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  langs:
  - csharp
  name: HttpCapabilitiesSectionHandler
  nameWithType: HttpCapabilitiesSectionHandler
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler
  type: Class
  summary: "帮助中的读取<xref uid=&quot;langword_csharp_&lt;browserCaps&gt;&quot; name=&quot;&lt;browserCaps&gt;&quot; href=&quot;&quot;></xref>的配置文件，并创建的实例部分<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;></xref>包含客户端浏览器的功能信息的类。"
  remarks: "HttpCapabilitiesSectionHandler 类和相应`<browserCaps>`.NET Framework 2.0 版中已弃用配置节。 用于管理浏览器功能的首选的方法是通过以供<xref:System.Web.Configuration.BrowserCapabilitiesFactory>类</xref:System.Web.Configuration.BrowserCapabilitiesFactory>进行编译的浏览器定义文件 这两个配置方法的目标是类的用于生成<xref:System.Web.HttpBrowserCapabilities>可从<xref:System.Web.HttpRequest.Browser%2A>属性<xref:System.Web.HttpRequest>类</xref:System.Web.HttpRequest></xref:System.Web.HttpRequest.Browser%2A>访问的类</xref:System.Web.HttpBrowserCapabilities>的实例       使用浏览器定义文件来存储浏览器功能提供了超过替代项的优势。 它提供改进的性能，因为从 XML 配置文件分析和编译为提前类浏览器定义信息。 浏览器定义文件也是易于维护:-的定义是分层的且因此依赖于较少上的正则表达式来确定的浏览器功能。      -定义可以组织在多个文件，使它们更易于管理。      的可以在任何级别，在 Machine.config 级别或特定应用程序级别定义定义。 这消除了需要复制整个组用于重写特定浏览器的功能的定义。"
  syntax:
    content: 'public class HttpCapabilitiesSectionHandler : System.Configuration.IConfigurationSectionHandler'
  inheritance:
  - System.Object
  implements:
  - System.Configuration.IConfigurationSectionHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  langs:
  - csharp
  name: HttpCapabilitiesSectionHandler()
  nameWithType: HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler()
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Web.Configuration.HttpCapabilitiesSectionHandler&quot;></xref>类。"
  syntax:
    content: public HttpCapabilitiesSectionHandler ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  id: Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  langs:
  - csharp
  name: Create(Object,Object,XmlNode)
  nameWithType: HttpCapabilitiesSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(Object,Object,XmlNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "创建的实例<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;></xref>包含客户端浏览器的功能信息的类。"
  remarks: "此类派生自从其浏览器定义数据`<browserCaps>`配置节。 本部分.NET Framework 2.0 版中已弃用。"
  syntax:
    content: public object Create (object parent, object configurationContext, System.Xml.XmlNode section);
    parameters:
    - id: parent
      type: System.Object
      description: "父配置节点中。"
    - id: configurationContext
      type: System.Object
      description: "当前的配置文件配置上下文。"
    - id: section
      type: System.Xml.XmlNode
      description: "包含的信息配置文件的部分。"
    return:
      type: System.Object
      description: "实例<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;></xref>包含客户端浏览器的功能信息。"
  overload: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  isExternal: false
  name: HttpCapabilitiesSectionHandler()
  nameWithType: HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler()
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler()
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  isExternal: false
  name: Create(Object,Object,XmlNode)
  nameWithType: HttpCapabilitiesSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(Object,Object,XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor*
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  isExternal: false
  name: HttpCapabilitiesSectionHandler
  nameWithType: HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create*
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  isExternal: false
  name: Create
  nameWithType: HttpCapabilitiesSectionHandler.Create
