### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  id: ActiveDirectorySchema
  children:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  langs:
  - csharp
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  type: Class
  summary: "ActiveDirectorySchema 类表示特定域的架构分区。"
  syntax:
    content: 'public class ActiveDirectorySchema : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySchema.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "释放托管的资源，由<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;></xref>对象，并且 （可选） 释放非托管资源。"
  remarks: "`disposing`参数影响仅托管资源的释放。 此方法始终释放非托管的资源。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false &quot; name=&quot;false &quot; href=&quot;&quot;></xref>若要仅释放非托管的资源。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  id: FindAllClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllClasses()
  nameWithType: ActiveDirectorySchema.FindAllClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索架构中的所有 Active Directory 域服务类。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref>对象，其中包含一套<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;></xref>中检索到的类的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  id: FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllClasses(SchemaClassType)
  nameWithType: ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索架构中的指定类型的所有 Active Directory 域服务类。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses (System.DirectoryServices.ActiveDirectory.SchemaClassType type);
    parameters:
    - id: type
      type: System.DirectoryServices.ActiveDirectory.SchemaClassType
      description: "之一<xref href=&quot;System.DirectoryServices.ActiveDirectory.SchemaClassType&quot;></xref>标识哪种类型的类，以检索的成员。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref>对象，其中包含一套<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;></xref>中检索到的类的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  id: FindAllDefunctClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllDefunctClasses()
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索所有架构中已失效的 Active Directory 域服务类。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllDefunctClasses ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref>对象，其中包含一套<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;></xref>中检索到的类的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  id: FindAllDefunctProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllDefunctProperties()
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索的所有架构中不起作用的 Active Directory 域服务属性。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllDefunctProperties ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref>对象，其中包含一套<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;></xref>已检索的属性的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  id: FindAllProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllProperties()
  nameWithType: ActiveDirectorySchema.FindAllProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索所有架构中的 Active Directory 域服务属性。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref>对象，其中包含一套<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;></xref>已检索的属性的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  id: FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllProperties(PropertyTypes)
  nameWithType: ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索所有的指定类型的架构中的 Active Directory 域服务属性。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties (System.DirectoryServices.ActiveDirectory.PropertyTypes type);
    parameters:
    - id: type
      type: System.DirectoryServices.ActiveDirectory.PropertyTypes
      description: "之一<xref href=&quot;System.DirectoryServices.ActiveDirectory.PropertyTypes&quot;></xref>标识要检索的属性的类型的成员。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref>对象，其中包含一套<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;></xref>已检索的属性的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  id: FindClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindClass(String)
  nameWithType: ActiveDirectorySchema.FindClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索具有指定名称的类。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindClass (string ldapDisplayName);
    parameters:
    - id: ldapDisplayName
      type: System.String
      description: "要查找的类的 LDAP 显示名称。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref>表示具有指定名称的类的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "找不到具有指定名称的类。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ldapDisplayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ldapDisplayName</code>长度为零。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  id: FindDefunctClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindDefunctClass(String)
  nameWithType: ActiveDirectorySchema.FindDefunctClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索具有指定的公用名的失效类。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindDefunctClass (string commonName);
    parameters:
    - id: commonName
      type: System.String
      description: "要查找的失效类公用名。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref>表示具有指定的公用名的类的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "找不到具有指定名称的类。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>commonName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>commonName</code>长度为零。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  id: FindDefunctProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindDefunctProperty(String)
  nameWithType: ActiveDirectorySchema.FindDefunctProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索具有指定的公用名的失效属性。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindDefunctProperty (string commonName);
    parameters:
    - id: commonName
      type: System.String
      description: "要查找的失效属性公用名。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref>表示的属性的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "找不到具有指定名称的属性。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>commonName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>commonName</code>长度为零。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  id: FindProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindProperty(String)
  nameWithType: ActiveDirectorySchema.FindProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索具有指定名称的属性。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindProperty (string ldapDisplayName);
    parameters:
    - id: ldapDisplayName
      type: System.String
      description: "要查找的属性的 LDAP 显示名称。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref>表示具有指定名称的属性的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "找不到具有指定名称的属性。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>propertyName</code>长度为零。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  id: GetCurrentSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetCurrentSchema()
  nameWithType: ActiveDirectorySchema.GetCurrentSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取当前登录的用户所在的林的架构对象。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetCurrentSchema ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref>表示本地计算机为属于域的架构的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "无法连接到本地域。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>表示目录分区的对象。"
  syntax:
    content: public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>表示目录分区的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetSchema(DirectoryContext)
  nameWithType: ActiveDirectorySchema.GetSchema(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索指定的上下文的架构对象。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetSchema (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>包含目标和凭据以用来检索对象的对象。 此上下文的目标必须是林、 目录服务器上或配置集。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref>对象，表示指定的上下文的架构。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "中指定的目标的连接<code> context </code>无法进行。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>是无效的。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  id: RefreshSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: RefreshSchema()
  nameWithType: ActiveDirectorySchema.RefreshSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "刷新架构缓存客户端计算机上。"
  syntax:
    content: public void RefreshSchema ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  id: SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取架构主机角色所有者。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DirectoryServer SchemaRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DirectoryServer
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryServer&quot;> </xref>表示的服务器的架构主机的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
references:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  isExternal: false
  name: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySchema.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses()
  nameWithType: ActiveDirectorySchema.FindAllClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses()
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlyActiveDirectorySchemaClassCollection
  nameWithType: ReadOnlyActiveDirectorySchemaClassCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses(SchemaClassType)
  nameWithType: ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(SchemaClassType)
- uid: System.DirectoryServices.ActiveDirectory.SchemaClassType
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SchemaClassType
  nameWithType: SchemaClassType
  fullName: System.DirectoryServices.ActiveDirectory.SchemaClassType
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctClasses()
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctProperties()
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties()
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlyActiveDirectorySchemaPropertyCollection
  nameWithType: ReadOnlyActiveDirectorySchemaPropertyCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties()
  nameWithType: ActiveDirectorySchema.FindAllProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties(PropertyTypes)
  nameWithType: ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(PropertyTypes)
- uid: System.DirectoryServices.ActiveDirectory.PropertyTypes
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: PropertyTypes
  nameWithType: PropertyTypes
  fullName: System.DirectoryServices.ActiveDirectory.PropertyTypes
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindClass(String)
  nameWithType: ActiveDirectorySchema.FindClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchemaClass
  nameWithType: ActiveDirectorySchemaClass
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctClass(String)
  nameWithType: ActiveDirectorySchema.FindDefunctClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctProperty(String)
  nameWithType: ActiveDirectorySchema.FindDefunctProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchemaProperty
  nameWithType: ActiveDirectorySchemaProperty
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindProperty(String)
  nameWithType: ActiveDirectorySchema.FindProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetCurrentSchema()
  nameWithType: ActiveDirectorySchema.GetCurrentSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetSchema(DirectoryContext)
  nameWithType: ActiveDirectorySchema.GetSchema(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: RefreshSchema()
  nameWithType: ActiveDirectorySchema.RefreshSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryServer
  nameWithType: DirectoryServer
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: Dispose
  nameWithType: ActiveDirectorySchema.Dispose
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses
  nameWithType: ActiveDirectorySchema.FindAllClasses
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctClasses
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctProperties
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties
  nameWithType: ActiveDirectorySchema.FindAllProperties
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindClass
  nameWithType: ActiveDirectorySchema.FindClass
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctClass
  nameWithType: ActiveDirectorySchema.FindDefunctClass
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctProperty
  nameWithType: ActiveDirectorySchema.FindDefunctProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindProperty
  nameWithType: ActiveDirectorySchema.FindProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetCurrentSchema
  nameWithType: ActiveDirectorySchema.GetCurrentSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetSchema
  nameWithType: ActiveDirectorySchema.GetSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: RefreshSchema
  nameWithType: ActiveDirectorySchema.RefreshSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
