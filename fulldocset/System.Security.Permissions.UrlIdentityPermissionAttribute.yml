### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute
  id: UrlIdentityPermissionAttribute
  children:
  - System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission
  - System.Security.Permissions.UrlIdentityPermissionAttribute.Url
  langs:
  - csharp
  name: UrlIdentityPermissionAttribute
  nameWithType: UrlIdentityPermissionAttribute
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute
  type: Class
  summary: "允许的操作安全<xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;></xref>要应用于使用声明性安全的代码。 此类不能被继承。"
  remarks: "被视为完整的 URL，包括协议 （HTTP、 HTTPS、 FTP） 和文件。 例如，http://www.fourthcoffee.com/process/grind.htm 是一个完整的 URL。       允许声明的范围取决于<xref:System.Security.Permissions.SecurityAction>使用。</xref:System.Security.Permissions.SecurityAction>      1> [!IMPORTANT]&1;> 开头[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]，不使用标识权限。   >> 在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效的这是调用程序集是完全受信任时如此。 即，尽管调用程序集具有完全信任，则将失败标识权限的要求，如果程序集不符合要求的条件。 在.NET Framework 2.0 版中，标识权限的需求较为低效如果调用程序集具有完全信任权限。 这可确保对所有其他权限，消除标识权限的处理方式的一致性。       通过安全特性声明的安全信息的属性目标的元数据中存储和在运行时访问系统。 安全属性仅用于声明性安全。 对于命令性安全，使用相应的权限类。"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UrlIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  langs:
  - csharp
  name: UrlIdentityPermissionAttribute(SecurityAction)
  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.UrlIdentityPermissionAttribute&quot;></xref>使用指定的类<xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>。"
  syntax:
    content: public UrlIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "之一<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>值。"
  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: UrlIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回一个新<xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref>。"
  remarks: "此方法仅应由安全系统中，永远不会由应用程序代码调用。       在编译时，属性将安全声明转换为元数据中序列化形式。 从权限，此方法返回对应于此属性创建元数据中的声明性安全数据。"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref>相对应的此属性。"
  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url
  id: Url
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  langs:
  - csharp
  name: Url
  nameWithType: UrlIdentityPermissionAttribute.Url
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.Url
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置调用代码的完整 URL。"
  remarks: "都视为完整的 URL，包括协议 (HTTP、 HTTPS、 FTP) 和该文件，例如︰ http://www.fourthcoffee.com/process/grind.htm/。       Url 可以匹配严格或使用通配符在最后一个位置，例如︰ http://www.fourthcoffee.com/process/ *。"
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "要与主机指定的 URL 匹配的 URL。"
  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.Url*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: UrlIdentityPermissionAttribute(SecurityAction)
  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: UrlIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermissionAttribute.Url
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.Url
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor*
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: UrlIdentityPermissionAttribute
  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: UrlIdentityPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url*
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermissionAttribute.Url
