### YamlMime:ManagedReference
items:
- uid: System.Configuration.IriParsingElement
  id: IriParsingElement
  children:
  - System.Configuration.IriParsingElement.#ctor
  - System.Configuration.IriParsingElement.Enabled
  - System.Configuration.IriParsingElement.Properties
  langs:
  - csharp
  name: IriParsingElement
  nameWithType: IriParsingElement
  fullName: System.Configuration.IriParsingElement
  type: Class
  summary: "提供配置设置的国际资源标识符 (IRI) 中处理&lt;xref:System.Uri?displayProperty=fullName&gt;类。"
  remarks: "现有<xref:System.Uri?displayProperty=fullName>类已进行了扩展，以提供支持国际资源标识符 (IRI) 根据 RFC 3987。</xref:System.Uri?displayProperty=fullName> 除非它们具体地说就是启用 IRI，当前用户看不到从.NET Framework 2.0 行为进行任何更改。 这可确保与以前版本的.NET Framework 的应用程序兼容性。       配置设置，为 IriParsingElement 将能读取一次当第一个<xref:System.Uri?displayProperty=fullName>类构造。</xref:System.Uri?displayProperty=fullName> 将忽略在此时间之后的配置设置的更改。       IRI 支持的详细信息，请参阅备注部分的<xref:System.Uri?displayProperty=fullName>类。</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: 'public sealed class IriParsingElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Configuration.IriParsingElement.#ctor
  id: '#ctor'
  parent: System.Configuration.IriParsingElement
  langs:
  - csharp
  name: IriParsingElement()
  nameWithType: IriParsingElement.IriParsingElement()
  fullName: System.Configuration.IriParsingElement.IriParsingElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.IriParsingElement&quot;></xref>类。"
  remarks: "此构造函数创建<xref:System.Configuration.IriParsingElement>实例。</xref:System.Configuration.IriParsingElement>"
  syntax:
    content: public IriParsingElement ();
    parameters: []
  overload: System.Configuration.IriParsingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IriParsingElement.Enabled
  id: Enabled
  parent: System.Configuration.IriParsingElement
  langs:
  - csharp
  name: Enabled
  nameWithType: IriParsingElement.Enabled
  fullName: System.Configuration.IriParsingElement.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取或设置的值<xref href=&quot;System.Configuration.IriParsingElement&quot;></xref>配置设置。"
  remarks: "<xref:System.Configuration.IriParsingElement>在<xref:System.Uri?displayProperty=fullName>类</xref:System.Uri?displayProperty=fullName>中的配置设置控件 IRI 处理</xref:System.Configuration.IriParsingElement> 此设置还间接控制国际域名 (IDN) 处理集<xref:System.Configuration.IdnElement?displayProperty=fullName>类。</xref:System.Configuration.IdnElement?displayProperty=fullName> 必须为 IDN 处理为可能启用 IRI 处理。 如果 IRI 处理处于禁用状态，则 IDN 处理将设置为其中的.NET Framework 2.0 行为用于实现兼容性和不使用 IDN 名称的默认设置。       配置设置<xref:System.Configuration.IriParsingElement>将能读取一次当第一个<xref:System.Uri?displayProperty=fullName>类构造。</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> 将忽略在此时间之后的配置设置的更改。       IRI 支持的详细信息，请参阅备注部分的<xref:System.Uri?displayProperty=fullName>类。</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否启用了国际资源标识符 (IRI) 处理。"
  overload: System.Configuration.IriParsingElement.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IriParsingElement.Properties
  id: Properties
  parent: System.Configuration.IriParsingElement
  langs:
  - csharp
  name: Properties
  nameWithType: IriParsingElement.Properties
  fullName: System.Configuration.IriParsingElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "要添加。"
  overload: System.Configuration.IriParsingElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Configuration.IriParsingElement.#ctor
  parent: System.Configuration.IriParsingElement
  isExternal: false
  name: IriParsingElement()
  nameWithType: IriParsingElement.IriParsingElement()
  fullName: System.Configuration.IriParsingElement.IriParsingElement()
- uid: System.Configuration.IriParsingElement.Enabled
  parent: System.Configuration.IriParsingElement
  isExternal: false
  name: Enabled
  nameWithType: IriParsingElement.Enabled
  fullName: System.Configuration.IriParsingElement.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IriParsingElement.Properties
  parent: System.Configuration.IriParsingElement
  isExternal: false
  name: Properties
  nameWithType: IriParsingElement.Properties
  fullName: System.Configuration.IriParsingElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.IriParsingElement.#ctor*
  parent: System.Configuration.IriParsingElement
  isExternal: false
  name: IriParsingElement
  nameWithType: IriParsingElement.IriParsingElement
- uid: System.Configuration.IriParsingElement.Enabled*
  parent: System.Configuration.IriParsingElement
  isExternal: false
  name: Enabled
  nameWithType: IriParsingElement.Enabled
- uid: System.Configuration.IriParsingElement.Properties*
  parent: System.Configuration.IriParsingElement
  isExternal: false
  name: Properties
  nameWithType: IriParsingElement.Properties
