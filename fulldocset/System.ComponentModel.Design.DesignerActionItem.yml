### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionItem
  id: DesignerActionItem
  children:
  - System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)
  - System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  - System.ComponentModel.Design.DesignerActionItem.Category
  - System.ComponentModel.Design.DesignerActionItem.Description
  - System.ComponentModel.Design.DesignerActionItem.DisplayName
  - System.ComponentModel.Design.DesignerActionItem.Properties
  - System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  langs:
  - csharp
  name: DesignerActionItem
  nameWithType: DesignerActionItem
  fullName: System.ComponentModel.Design.DesignerActionItem
  type: Class
  summary: "表示在智能标记面板上的控制面板项的类型提供基类。"
  remarks: "此 DesignerActionItem 类用作一个抽象基表示各个面板中的智能标记面板，它表示的智能标记菜单类似的用户界面 (UI) 的项的类。 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]提供派生类表示在智能标记面板中，包括纯文本、 标题文本、 属性和方法的关联的各种常见条目<xref:System.ComponentModel.Design.DesignerActionList>类和设计器谓词。</xref:System.ComponentModel.Design.DesignerActionList>       通常情况下，你`DesignerAction`中程序员提供的类派生自定义功能<xref:System.ComponentModel.Design.DesignerActionList>，其中包含<xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>分组在一起以形成的智能标记面板的单个控制面板项的方法。</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> </xref:System.ComponentModel.Design.DesignerActionList> <xref:System.ComponentModel.Design.DesignerActionPropertyItem>和<xref:System.ComponentModel.Design.DesignerActionMethodItem>类型是派生自此类的成员与关联<xref:System.ComponentModel.Design.DesignerActionList>，和<xref:System.ComponentModel.Design.DesignerActionMethodItem>时由用户选择他们相关联的面板的条目，对象会激活。</xref:System.ComponentModel.Design.DesignerActionMethodItem> </xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionMethodItem> </xref:System.ComponentModel.Design.DesignerActionPropertyItem>      1> [!NOTE]&1;> 表单和对话框可以显示由从<xref:System.ComponentModel.Design.DesignerActionList>.</xref:System.ComponentModel.Design.DesignerActionList>派生的类的成员 默认情况下，这些窗口的父级将为的智能标记面板的容器窗口。 显式用作父级到另一个服务或窗口这些子窗口可能会导致项不能正常显示。"
  example:
  - "The following code example demonstrates how to create a collection of DesignerActionItem objects.  \n  \n For a full example of implementing smart tags, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/visualbasic/t-system.componentmodel._21_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/csharp/t-system.componentmodel._21_1.cs)]"
  syntax:
    content: public abstract class DesignerActionItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: DesignerActionItem(String,String,String)
  nameWithType: DesignerActionItem.DesignerActionItem(String,String,String)
  fullName: System.ComponentModel.Design.DesignerActionItem.DesignerActionItem(String,String,String)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;></xref>类。"
  remarks: "因为<xref:System.ComponentModel.Design.DesignerActionItem>是一个抽象类，构造函数应从派生类调用 DesignerActionItem。</xref:System.ComponentModel.Design.DesignerActionItem>       有关详细信息，如何`category`参数用于在面板上的项进行分组，请参阅<xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>方法。</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>"
  syntax:
    content: public DesignerActionItem (string displayName, string category, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "此项的面板文本。"
    - id: category
      type: System.String
      description: "区分大小写<xref:System.String>定义面板条目的分组。</xref:System.String>"
    - id: description
      type: System.String
      description: "此项，可能用在工具提示或状态栏的补充文本。"
  overload: System.ComponentModel.Design.DesignerActionItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  id: AllowAssociate
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: AllowAssociate
  nameWithType: DesignerActionItem.AllowAssociate
  fullName: System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取或设置一个值，该值指示是否允许此项可被放入一组具有相同的项<xref:System.ComponentModel.Design.DesignerActionItem.Category*>属性值。</xref:System.ComponentModel.Design.DesignerActionItem.Category*>"
  remarks: "因为多个<xref:System.ComponentModel.Design.DesignerActionList>对象可能能结合使用以形成一个智能标记面板，AllowAssociate 属性指示是否按类别，可以重新排列当前项。</xref:System.ComponentModel.Design.DesignerActionList>       结合使用 AllowAssociate 属性<xref:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent%2A>属性<xref:System.ComponentModel.Design.DesignerActionMethodItem>和<xref:System.ComponentModel.Design.DesignerActionPropertyItem>类型。</xref:System.ComponentModel.Design.DesignerActionPropertyItem> </xref:System.ComponentModel.Design.DesignerActionMethodItem> </xref:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent%2A>       例如，ASP.NET 使用想<xref:System.Web.UI.WebControls.GridView>要连接到数据源控件，如<xref:System.Web.UI.WebControls.SqlDataSource>.</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Web.UI.WebControls.GridView>的数据绑定控件 两个具有<xref:System.ComponentModel.Design.DesignerActionList>具有自己的<xref:System.ComponentModel.Design.DesignerActionItem>对象。</xref:System.ComponentModel.Design.DesignerActionItem> </xref:System.ComponentModel.Design.DesignerActionList> <xref:System.Web.UI.WebControls.GridView>控件具有诸如<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>， `Edit Fields`，和`AutoFormat`。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource>类具有`Configure`和`Refresh Items`，都将设置为 AllowAssociate `true`。</xref:System.Web.UI.WebControls.SqlDataSource>       <xref:System.Web.UI.WebControls.GridView>控件的<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>项具有相关组件，该组件<xref:System.Web.UI.WebControls.SqlDataSource>对象。</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.GridView> 所有<xref:System.Web.UI.WebControls.SqlDataSource>对象的项具有设置为 AllowAssociate`true`自动包含在<xref:System.Web.UI.WebControls.GridView>控件的操作列表。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.SqlDataSource> 下表显示两个列表中的合并方式<xref:System.Web.UI.WebControls.GridView>控件的设计器操作列表。</xref:System.Web.UI.WebControls.GridView>      |GridView 项 |SqlDataSource 项 |  |--------------------|-------------------------|  |- `DataSourceID` (相关的组件 = `SqlDataSource`)<br />您可以编辑和字段<br />-自动套用格式 | 的配置 (`AllowAssociate` = `true`)<br />-   Refresh (`AllowAssociate` = `true`)|     |合并 GridView 控件的智能任务面板 |  |-------------------------------------------------|  |-DataSourceID<br />-配置<br />刷新<br />您可以编辑和字段<br />-自动套用格式 |"
  syntax:
    content: public bool AllowAssociate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以分组项;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.DesignerActionItem.AllowAssociate*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.Category
  id: Category
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: Category
  nameWithType: DesignerActionItem.Category
  fullName: System.ComponentModel.Design.DesignerActionItem.Category
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取项的组名称。"
  remarks: "项类别定义按它们是区分大小写的名称。       有关项按类别分组的方式的详细信息，请参阅<xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>方法。</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>"
  syntax:
    content: public virtual string Category { get; }
    return:
      type: System.String
      description: "一个字符串，表示项的成员的组。"
  overload: System.ComponentModel.Design.DesignerActionItem.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.Description
  id: Description
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: Description
  nameWithType: DesignerActionItem.Description
  fullName: System.ComponentModel.Design.DesignerActionItem.Description
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取项的补充文本。"
  remarks: "项的纯文本说明需要 （例如，在工具提示和状态栏） 时，会使用 Description 属性。       此类的构造函数中设置此属性的值。"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含项的描述性文本。</xref:System.String>"
  overload: System.ComponentModel.Design.DesignerActionItem.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.DisplayName
  id: DisplayName
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: DisplayName
  nameWithType: DesignerActionItem.DisplayName
  fullName: System.ComponentModel.Design.DesignerActionItem.DisplayName
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取为此项目的文本。"
  remarks: "此类的构造函数中设置的 DisplayName 属性的值。"
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含项的显示文本。</xref:System.String>"
  overload: System.ComponentModel.Design.DesignerActionItem.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.Properties
  id: Properties
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: Properties
  nameWithType: DesignerActionItem.Properties
  fullName: System.ComponentModel.Design.DesignerActionItem.Properties
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取可以用于存储程序员定义的键/值对集合的引用。"
  remarks: "Properties 属性可以使程序员编写将在某个项的任意数据存储。 此标准的属性类，如<xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>和<xref:System.ComponentModel.Design.DesignerActionItem.DisplayName%2A>，不存储在此集合中。</xref:System.ComponentModel.Design.DesignerActionItem.DisplayName%2A> </xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>       此属性的类型实际上是<xref:System.Collections.Specialized.HybridDictionary?displayProperty=fullName>.</xref:System.Collections.Specialized.HybridDictionary?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "集合可实现<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.Design.DesignerActionItem.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  id: ShowInSourceView
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: ShowInSourceView
  nameWithType: DesignerActionItem.ShowInSourceView
  fullName: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "获取或设置一个值，该值指示是否在源代码视图中会出现此项目。"
  syntax:
    content: public bool ShowInSourceView { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此项出现在源代码视图;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: DesignerActionItem(String,String,String)
  nameWithType: DesignerActionItem.DesignerActionItem(String,String,String)
  fullName: System.ComponentModel.Design.DesignerActionItem.DesignerActionItem(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: AllowAssociate
  nameWithType: DesignerActionItem.AllowAssociate
  fullName: System.ComponentModel.Design.DesignerActionItem.AllowAssociate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionItem.Category
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Category
  nameWithType: DesignerActionItem.Category
  fullName: System.ComponentModel.Design.DesignerActionItem.Category
- uid: System.ComponentModel.Design.DesignerActionItem.Description
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Description
  nameWithType: DesignerActionItem.Description
  fullName: System.ComponentModel.Design.DesignerActionItem.Description
- uid: System.ComponentModel.Design.DesignerActionItem.DisplayName
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: DisplayName
  nameWithType: DesignerActionItem.DisplayName
  fullName: System.ComponentModel.Design.DesignerActionItem.DisplayName
- uid: System.ComponentModel.Design.DesignerActionItem.Properties
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Properties
  nameWithType: DesignerActionItem.Properties
  fullName: System.ComponentModel.Design.DesignerActionItem.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: ShowInSourceView
  nameWithType: DesignerActionItem.ShowInSourceView
  fullName: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
- uid: System.ComponentModel.Design.DesignerActionItem.#ctor*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: DesignerActionItem
  nameWithType: DesignerActionItem.DesignerActionItem
- uid: System.ComponentModel.Design.DesignerActionItem.AllowAssociate*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: AllowAssociate
  nameWithType: DesignerActionItem.AllowAssociate
- uid: System.ComponentModel.Design.DesignerActionItem.Category*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Category
  nameWithType: DesignerActionItem.Category
- uid: System.ComponentModel.Design.DesignerActionItem.Description*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Description
  nameWithType: DesignerActionItem.Description
- uid: System.ComponentModel.Design.DesignerActionItem.DisplayName*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: DisplayName
  nameWithType: DesignerActionItem.DisplayName
- uid: System.ComponentModel.Design.DesignerActionItem.Properties*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Properties
  nameWithType: DesignerActionItem.Properties
- uid: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: ShowInSourceView
  nameWithType: DesignerActionItem.ShowInSourceView
