### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.ObjectIDGenerator
  id: ObjectIDGenerator
  children:
  - System.Runtime.Serialization.ObjectIDGenerator.#ctor
  - System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)
  - System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)
  langs:
  - csharp
  name: ObjectIDGenerator
  nameWithType: ObjectIDGenerator
  fullName: System.Runtime.Serialization.ObjectIDGenerator
  type: Class
  summary: "生成的对象 Id。"
  remarks: "将跟踪 ObjectIDGenerator 的之前标识的对象。 当您请求的对象 ID 时，ObjectIDGenerator 知道是否返回为现有的 ID，或生成并记住一个新的 id。       Id 是唯一 ObjectIDGenerator 实例的整个生命周期。 通常情况下，ObjectIDGenerator 生命持续只要<xref:System.Runtime.Serialization.Formatter>该创建它。</xref:System.Runtime.Serialization.Formatter> 对象 Id 仅在给定的序列化流中的含义，并用于跟踪哪些对象具有对其他序列化的对象图中的引用。       使用哈希表，ObjectIDGenerator 保留哪个 ID 分配给哪些对象。 对象引用，用于唯一标识每个对象时，是在运行时作为垃圾回收堆中的地址。 对象引用值可以更改序列化期间，但表可以自动更新，以便信息正确无误。       对象 Id 是 64 位数字。 分配从一开始，因此零不是有效的对象 id。 一个格式化程序，可以选择零值来表示其值是一个对象引用`null`。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ObjectIDGenerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.ObjectIDGenerator
  langs:
  - csharp
  name: ObjectIDGenerator()
  nameWithType: ObjectIDGenerator.ObjectIDGenerator()
  fullName: System.Runtime.Serialization.ObjectIDGenerator.ObjectIDGenerator()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;></xref>类。"
  syntax:
    content: public ObjectIDGenerator ();
    parameters: []
  overload: System.Runtime.Serialization.ObjectIDGenerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)
  id: GetId(System.Object,System.Boolean@)
  parent: System.Runtime.Serialization.ObjectIDGenerator
  langs:
  - csharp
  name: GetId(Object,Boolean)
  nameWithType: ObjectIDGenerator.GetId(Object,Boolean)
  fullName: System.Runtime.Serialization.ObjectIDGenerator.GetId(Object,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "返回指定的对象，如果指定的对象不已标识通过生成一个新的 ID 的 ID <xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>。"
  syntax:
    content: public virtual long GetId (object obj, out bool firstTime);
    parameters:
    - id: obj
      type: System.Object
      description: "所需的 ID 的对象。"
    - id: firstTime
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果`obj`不以前为知<xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int64
      description: "对象的 ID 用于序列化。 <code>firstTime</code>设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果这是首次已标识的对象; 否则，设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Serialization.ObjectIDGenerator.GetId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>已要求跟踪的对象太多。"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)
  id: HasId(System.Object,System.Boolean@)
  parent: System.Runtime.Serialization.ObjectIDGenerator
  langs:
  - csharp
  name: HasId(Object,Boolean)
  nameWithType: ObjectIDGenerator.HasId(Object,Boolean)
  fullName: System.Runtime.Serialization.ObjectIDGenerator.HasId(Object,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "确定是否一个对象已将分配一个 id。"
  remarks: "如果对象已被分配一个 ID，则返回该 ID 和`firstTime`设置为`false`; 否则为返回零和`firstTime`设置为`true`。 HasId 区别<xref:System.Runtime.Serialization.ObjectIDGenerator.GetId%2A>在于它永远不会创建已不受支持<xref:System.Runtime.Serialization.ObjectIDGenerator>。</xref:System.Runtime.Serialization.ObjectIDGenerator>看到的对象的 ID</xref:System.Runtime.Serialization.ObjectIDGenerator.GetId%2A>"
  syntax:
    content: public virtual long HasId (object obj, out bool firstTime);
    parameters:
    - id: obj
      type: System.Object
      description: "您所请求的对象。"
    - id: firstTime
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果`obj`不以前为知<xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int64
      description: "对象 ID <code> obj </code>如果以前已知的<xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>; 否则为零。"
  overload: System.Runtime.Serialization.ObjectIDGenerator.HasId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: ObjectIDGenerator()
  nameWithType: ObjectIDGenerator.ObjectIDGenerator()
  fullName: System.Runtime.Serialization.ObjectIDGenerator.ObjectIDGenerator()
- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: GetId(Object,Boolean)
  nameWithType: ObjectIDGenerator.GetId(Object,Boolean)
  fullName: System.Runtime.Serialization.ObjectIDGenerator.GetId(Object,Boolean)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: HasId(Object,Boolean)
  nameWithType: ObjectIDGenerator.HasId(Object,Boolean)
  fullName: System.Runtime.Serialization.ObjectIDGenerator.HasId(Object,Boolean)
- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor*
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: ObjectIDGenerator
  nameWithType: ObjectIDGenerator.ObjectIDGenerator
- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId*
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: GetId
  nameWithType: ObjectIDGenerator.GetId
- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId*
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: HasId
  nameWithType: ObjectIDGenerator.HasId
