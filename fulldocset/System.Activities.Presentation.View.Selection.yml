### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.View.Selection
  id: Selection
  children:
  - System.Activities.Presentation.View.Selection.#ctor
  - System.Activities.Presentation.View.Selection.#ctor(System.Activities.Presentation.Model.ModelItem[])
  - System.Activities.Presentation.View.Selection.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem})
  - System.Activities.Presentation.View.Selection.#ctor(System.Collections.IEnumerable)
  - System.Activities.Presentation.View.Selection.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem},System.Predicate{System.Activities.Presentation.Model.ModelItem})
  - System.Activities.Presentation.View.Selection.#ctor(System.Collections.IEnumerable,System.Predicate{System.Activities.Presentation.Model.ModelItem})
  - System.Activities.Presentation.View.Selection.ItemType
  - System.Activities.Presentation.View.Selection.PrimarySelection
  - System.Activities.Presentation.View.Selection.Select(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.View.Selection.SelectedObjects
  - System.Activities.Presentation.View.Selection.SelectionCount
  - System.Activities.Presentation.View.Selection.SelectOnly(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.View.Selection.Subscribe(System.Activities.Presentation.EditingContext,System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection})
  - System.Activities.Presentation.View.Selection.Toggle(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.View.Selection.Union(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.View.Selection.Unsubscribe(System.Activities.Presentation.EditingContext,System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection})
  langs:
  - csharp
  name: Selection
  nameWithType: Selection
  fullName: System.Activities.Presentation.View.Selection
  type: Class
  summary: "定义作为发布的对象选择<xref href=&quot;System.Activities.Presentation.ContextItem&quot;></xref>中<xref href=&quot;System.Activities.Presentation.EditingContext&quot;> </xref>。"
  remarks: "选择集可包含零个或多个对象。 选定内容中的第一个对象被指为主选择，可在组中的一个对象必须用作键时使用。 每个对象存储为一种<xref:System.WorkflowModel.Presentation.Model.ModelItem>。</xref:System.WorkflowModel.Presentation.Model.ModelItem>"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: 'public class Selection : System.Activities.Presentation.ContextItem'
  inheritance:
  - System.Object
  - System.Activities.Presentation.ContextItem
  implements: []
  inheritedMembers:
  - System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Selection()
  nameWithType: Selection.Selection()
  fullName: System.Activities.Presentation.View.Selection.Selection()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "创建一个空<xref href=&quot;System.Activities.Presentation.View.Selection&quot;></xref>对象。"
  syntax:
    content: public Selection ();
    parameters: []
  overload: System.Activities.Presentation.View.Selection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Activities.Presentation.Model.ModelItem[])
  id: '#ctor(System.Activities.Presentation.Model.ModelItem[])'
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Selection(ModelItem[])
  nameWithType: Selection.Selection(ModelItem[])
  fullName: System.Activities.Presentation.View.Selection.Selection(ModelItem[])
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "创建<xref href=&quot;System.Activities.Presentation.View.Selection&quot;></xref>与所选的指定对象的对象。"
  remarks: "第一个对象被当作主选择。"
  syntax:
    content: public Selection (System.Activities.Presentation.Model.ModelItem[] selectedObjects);
    parameters:
    - id: selectedObjects
      type: System.Activities.Presentation.Model.ModelItem[]
      description: "应选择的对象的参数数组。"
  overload: System.Activities.Presentation.View.Selection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem})'
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Selection(IEnumerable<ModelItem>)
  nameWithType: Selection.Selection(IEnumerable<ModelItem>)
  fullName: System.Activities.Presentation.View.Selection.Selection(IEnumerable<ModelItem>)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "创建<xref href=&quot;System.Activities.Presentation.View.Selection&quot;></xref>与所选的指定对象的对象。"
  remarks: "枚举中的第一个对象被当作主选择。"
  syntax:
    content: public Selection (System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> selectedObjects);
    parameters:
    - id: selectedObjects
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "应选择的对象的枚举。"
  overload: System.Activities.Presentation.View.Selection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>selectedObjects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Collections.IEnumerable)
  id: '#ctor(System.Collections.IEnumerable)'
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Selection(IEnumerable)
  nameWithType: Selection.Selection(IEnumerable)
  fullName: System.Activities.Presentation.View.Selection.Selection(IEnumerable)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "创建<xref href=&quot;System.Activities.Presentation.View.Selection&quot;></xref>与所选的指定对象的对象。"
  remarks: "枚举中的第一个对象被当作主选择。"
  syntax:
    content: public Selection (System.Collections.IEnumerable selectedObjects);
    parameters:
    - id: selectedObjects
      type: System.Collections.IEnumerable
      description: "应选择的对象的枚举。"
  overload: System.Activities.Presentation.View.Selection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>selectedObjects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem},System.Predicate{System.Activities.Presentation.Model.ModelItem})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem},System.Predicate{System.Activities.Presentation.Model.ModelItem})'
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Selection(IEnumerable<ModelItem>,Predicate<ModelItem>)
  nameWithType: Selection.Selection(IEnumerable<ModelItem>,Predicate<ModelItem>)
  fullName: System.Activities.Presentation.View.Selection.Selection(IEnumerable<ModelItem>,Predicate<ModelItem>)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "创建<xref href=&quot;System.Activities.Presentation.View.Selection&quot;></xref>与所选的指定对象的对象。"
  remarks: "在枚举中与谓词相匹配的第一个对象被当作主选择。"
  syntax:
    content: public Selection (System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> selectedObjects, Predicate<System.Activities.Presentation.Model.ModelItem> match);
    parameters:
    - id: selectedObjects
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "应选择的对象的枚举。"
    - id: match
      type: System.Predicate{System.Activities.Presentation.Model.ModelItem}
      description: "有关包括对象的条件。 中的那些对象`selectedObjects`谓词将添加到选定该匹配项。"
  overload: System.Activities.Presentation.View.Selection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>selectedObjects</code> or <code>match</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Collections.IEnumerable,System.Predicate{System.Activities.Presentation.Model.ModelItem})
  id: '#ctor(System.Collections.IEnumerable,System.Predicate{System.Activities.Presentation.Model.ModelItem})'
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Selection(IEnumerable,Predicate<ModelItem>)
  nameWithType: Selection.Selection(IEnumerable,Predicate<ModelItem>)
  fullName: System.Activities.Presentation.View.Selection.Selection(IEnumerable,Predicate<ModelItem>)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "创建<xref href=&quot;System.Activities.Presentation.View.Selection&quot;></xref>与所选的指定对象的对象。"
  remarks: "在枚举中与谓词相匹配的第一个对象被当作主选择。"
  syntax:
    content: public Selection (System.Collections.IEnumerable selectedObjects, Predicate<System.Activities.Presentation.Model.ModelItem> match);
    parameters:
    - id: selectedObjects
      type: System.Collections.IEnumerable
      description: "应选择的对象的枚举。"
    - id: match
      type: System.Predicate{System.Activities.Presentation.Model.ModelItem}
      description: "有关包括对象的条件。 中的那些对象`selectedObjects`谓词将添加到选定该匹配项。"
  overload: System.Activities.Presentation.View.Selection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>selectedObjects</code> or <code>match</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.ItemType
  id: ItemType
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: ItemType
  nameWithType: Selection.ItemType
  fullName: System.Activities.Presentation.View.Selection.ItemType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "返回此编辑上下文项的项类型。"
  remarks: "这是<xref:System.Activities.Presentation.ContextItem.ItemType%2A>.</xref:System.Activities.Presentation.ContextItem.ItemType%2A>的重写 在创建派生的类时，重写此属性以返回<xref:System.Type>的派生类型。</xref:System.Type>"
  syntax:
    content: public override sealed Type ItemType { get; }
    return:
      type: System.Type
      description: "Returns `typeof(`<xref href=&quot;System.Activities.Presentation.View.Selection&quot;></xref>`)`."
  overload: System.Activities.Presentation.View.Selection.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.PrimarySelection
  id: PrimarySelection
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: PrimarySelection
  nameWithType: Selection.PrimarySelection
  fullName: System.Activities.Presentation.View.Selection.PrimarySelection
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "返回主选择。"
  syntax:
    content: public System.Activities.Presentation.Model.ModelItem PrimarySelection { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "返回主选择作为<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>。"
  overload: System.Activities.Presentation.View.Selection.PrimarySelection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.Select(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  id: Select(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Select(EditingContext,ModelItem)
  nameWithType: Selection.Select(EditingContext,ModelItem)
  fullName: System.Activities.Presentation.View.Selection.Select(EditingContext,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "接受上下文中的现有选择，并在其中选择一项一个选择集帮助器方法。 如果该项已包含在所选内容中，保留所选内容，并且将该项提升为主选择。"
  syntax:
    content: public static System.Activities.Presentation.View.Selection Select (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.Model.ModelItem itemToSelect);
    parameters:
    - id: context
      type: System.Activities.Presentation.EditingContext
      description: "要应用到此所选内容更改的编辑上下文。"
    - id: itemToSelect
      type: System.Activities.Presentation.Model.ModelItem
      description: "要选择的项。"
    return:
      type: System.Activities.Presentation.View.Selection
      description: "一个包含新选择的 Selection 对象。"
  overload: System.Activities.Presentation.View.Selection.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.SelectedObjects
  id: SelectedObjects
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: SelectedObjects
  nameWithType: Selection.SelectedObjects
  fullName: System.Activities.Presentation.View.Selection.SelectedObjects
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "所选对象的枚举。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> SelectedObjects { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "返回作为所选的对象&lt;xref:System.Collections.Generic.IEnumerable%601&gt;。"
  overload: System.Activities.Presentation.View.Selection.SelectedObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.SelectionCount
  id: SelectionCount
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: SelectionCount
  nameWithType: Selection.SelectionCount
  fullName: System.Activities.Presentation.View.Selection.SelectionCount
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "当前在此选择中选择的对象数。"
  syntax:
    content: public int SelectionCount { get; }
    return:
      type: System.Int32
      description: "为<xref:System.Int32>。</xref:System.Int32>返回所选对象的数目"
  overload: System.Activities.Presentation.View.Selection.SelectionCount*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.SelectOnly(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  id: SelectOnly(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: SelectOnly(EditingContext,ModelItem)
  nameWithType: Selection.SelectOnly(EditingContext,ModelItem)
  fullName: System.Activities.Presentation.View.Selection.SelectOnly(EditingContext,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "设置到所选内容的项选择集帮助器方法。 选择将取消选择任何现有项。"
  syntax:
    content: public static System.Activities.Presentation.View.Selection SelectOnly (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.Model.ModelItem itemToSelect);
    parameters:
    - id: context
      type: System.Activities.Presentation.EditingContext
      description: "要应用到此所选内容更改的编辑上下文。"
    - id: itemToSelect
      type: System.Activities.Presentation.Model.ModelItem
      description: "要选择的项。"
    return:
      type: System.Activities.Presentation.View.Selection
      description: "一个包含新选择的 Selection 对象。"
  overload: System.Activities.Presentation.View.Selection.SelectOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.Subscribe(System.Activities.Presentation.EditingContext,System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection})
  id: Subscribe(System.Activities.Presentation.EditingContext,System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection})
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Subscribe(EditingContext,SubscribeContextCallback<Selection>)
  nameWithType: Selection.Subscribe(EditingContext,SubscribeContextCallback<Selection>)
  fullName: System.Activities.Presentation.View.Selection.Subscribe(EditingContext,SubscribeContextCallback<Selection>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "一个帮助器方法订阅了选择集更改事件。"
  syntax:
    content: public static void Subscribe (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.SubscribeContextCallback<System.Activities.Presentation.View.Selection> handler);
    parameters:
    - id: context
      type: System.Activities.Presentation.EditingContext
      description: "要侦听的编辑上下文。"
    - id: handler
      type: System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection}
      description: "要在所选内容更改时调用的处理程序。"
  overload: System.Activities.Presentation.View.Selection.Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.Toggle(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  id: Toggle(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Toggle(EditingContext,ModelItem)
  nameWithType: Selection.Toggle(EditingContext,ModelItem)
  fullName: System.Activities.Presentation.View.Selection.Toggle(EditingContext,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "一个选择集帮助器方法接受上下文中的现有选择，创建新的选择范围中包含的项的切换的状态。 如果该项是要添加到所选内容，则将它添加为主选择。"
  syntax:
    content: public static System.Activities.Presentation.View.Selection Toggle (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.Model.ModelItem itemToToggle);
    parameters:
    - id: context
      type: System.Activities.Presentation.EditingContext
      description: "要应用到此所选内容更改的编辑上下文。"
    - id: itemToToggle
      type: System.Activities.Presentation.Model.ModelItem
      description: "要切换选择的项。"
    return:
      type: System.Activities.Presentation.View.Selection
      description: "一个包含新选择的 Selection 对象。"
  overload: System.Activities.Presentation.View.Selection.Toggle*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.Union(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  id: Union(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Union(EditingContext,ModelItem)
  nameWithType: Selection.Union(EditingContext,ModelItem)
  fullName: System.Activities.Presentation.View.Selection.Union(EditingContext,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "一个选择集帮助器方法接受上下文中的现有选择，创建新的选择，其中包含原始选择以及要添加的指定的项。 如果要添加的指定的项已在原选定内容中，它将提升为主选择。"
  syntax:
    content: public static System.Activities.Presentation.View.Selection Union (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.Model.ModelItem itemToAdd);
    parameters:
    - id: context
      type: System.Activities.Presentation.EditingContext
      description: "要应用到此所选内容更改的编辑上下文。"
    - id: itemToAdd
      type: System.Activities.Presentation.Model.ModelItem
      description: "要添加到所选内容的项。"
    return:
      type: System.Activities.Presentation.View.Selection
      description: "一个包含新选择的 Selection 对象。"
  overload: System.Activities.Presentation.View.Selection.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.Selection.Unsubscribe(System.Activities.Presentation.EditingContext,System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection})
  id: Unsubscribe(System.Activities.Presentation.EditingContext,System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection})
  parent: System.Activities.Presentation.View.Selection
  langs:
  - csharp
  name: Unsubscribe(EditingContext,SubscribeContextCallback<Selection>)
  nameWithType: Selection.Unsubscribe(EditingContext,SubscribeContextCallback<Selection>)
  fullName: System.Activities.Presentation.View.Selection.Unsubscribe(EditingContext,SubscribeContextCallback<Selection>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "删除以前添加的选择集更改事件一个帮助器方法。"
  syntax:
    content: public static void Unsubscribe (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.SubscribeContextCallback<System.Activities.Presentation.View.Selection> handler);
    parameters:
    - id: context
      type: System.Activities.Presentation.EditingContext
      description: "要侦听的编辑上下文。"
    - id: handler
      type: System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection}
      description: "要在所选内容更改时调用的处理程序。"
  overload: System.Activities.Presentation.View.Selection.Unsubscribe*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.ContextItem
  isExternal: false
  name: System.Activities.Presentation.ContextItem
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.View.Selection.#ctor
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Selection()
  nameWithType: Selection.Selection()
  fullName: System.Activities.Presentation.View.Selection.Selection()
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Activities.Presentation.Model.ModelItem[])
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Selection(ModelItem[])
  nameWithType: Selection.Selection(ModelItem[])
  fullName: System.Activities.Presentation.View.Selection.Selection(ModelItem[])
- uid: System.Activities.Presentation.Model.ModelItem[]
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem[]
  spec.csharp:
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem})
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Selection(IEnumerable<ModelItem>)
  nameWithType: Selection.Selection(IEnumerable<ModelItem>)
  fullName: System.Activities.Presentation.View.Selection.Selection(IEnumerable<ModelItem>)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelItem>
  nameWithType: IEnumerable<ModelItem>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Collections.IEnumerable)
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Selection(IEnumerable)
  nameWithType: Selection.Selection(IEnumerable)
  fullName: System.Activities.Presentation.View.Selection.Selection(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem},System.Predicate{System.Activities.Presentation.Model.ModelItem})
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Selection(IEnumerable<ModelItem>,Predicate<ModelItem>)
  nameWithType: Selection.Selection(IEnumerable<ModelItem>,Predicate<ModelItem>)
  fullName: System.Activities.Presentation.View.Selection.Selection(IEnumerable<ModelItem>,Predicate<ModelItem>)
- uid: System.Predicate{System.Activities.Presentation.Model.ModelItem}
  parent: System
  isExternal: true
  name: Predicate<ModelItem>
  nameWithType: Predicate<ModelItem>
  fullName: System.Predicate<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.View.Selection.#ctor(System.Collections.IEnumerable,System.Predicate{System.Activities.Presentation.Model.ModelItem})
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Selection(IEnumerable,Predicate<ModelItem>)
  nameWithType: Selection.Selection(IEnumerable,Predicate<ModelItem>)
  fullName: System.Activities.Presentation.View.Selection.Selection(IEnumerable,Predicate<ModelItem>)
- uid: System.Activities.Presentation.View.Selection.ItemType
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: ItemType
  nameWithType: Selection.ItemType
  fullName: System.Activities.Presentation.View.Selection.ItemType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.View.Selection.PrimarySelection
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: PrimarySelection
  nameWithType: Selection.PrimarySelection
  fullName: System.Activities.Presentation.View.Selection.PrimarySelection
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.View.Selection.Select(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Select(EditingContext,ModelItem)
  nameWithType: Selection.Select(EditingContext,ModelItem)
  fullName: System.Activities.Presentation.View.Selection.Select(EditingContext,ModelItem)
- uid: System.Activities.Presentation.View.Selection
  parent: System.Activities.Presentation.View
  isExternal: false
  name: Selection
  nameWithType: Selection
  fullName: System.Activities.Presentation.View.Selection
- uid: System.Activities.Presentation.EditingContext
  parent: System.Activities.Presentation
  isExternal: false
  name: EditingContext
  nameWithType: EditingContext
  fullName: System.Activities.Presentation.EditingContext
- uid: System.Activities.Presentation.View.Selection.SelectedObjects
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: SelectedObjects
  nameWithType: Selection.SelectedObjects
  fullName: System.Activities.Presentation.View.Selection.SelectedObjects
- uid: System.Activities.Presentation.View.Selection.SelectionCount
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: SelectionCount
  nameWithType: Selection.SelectionCount
  fullName: System.Activities.Presentation.View.Selection.SelectionCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Presentation.View.Selection.SelectOnly(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: SelectOnly(EditingContext,ModelItem)
  nameWithType: Selection.SelectOnly(EditingContext,ModelItem)
  fullName: System.Activities.Presentation.View.Selection.SelectOnly(EditingContext,ModelItem)
- uid: System.Activities.Presentation.View.Selection.Subscribe(System.Activities.Presentation.EditingContext,System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection})
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Subscribe(EditingContext,SubscribeContextCallback<Selection>)
  nameWithType: Selection.Subscribe(EditingContext,SubscribeContextCallback<Selection>)
  fullName: System.Activities.Presentation.View.Selection.Subscribe(EditingContext,SubscribeContextCallback<Selection>)
- uid: System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection}
  parent: System.Activities.Presentation
  isExternal: false
  name: SubscribeContextCallback<Selection>
  nameWithType: SubscribeContextCallback<Selection>
  fullName: System.Activities.Presentation.SubscribeContextCallback<System.Activities.Presentation.View.Selection>
  spec.csharp:
  - uid: System.Activities.Presentation.SubscribeContextCallback`1
    name: SubscribeContextCallback
    nameWithType: SubscribeContextCallback
    fullName: SubscribeContextCallback<System.Activities.Presentation.View.Selection>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.View.Selection
    name: Selection
    nameWithType: Selection
    fullName: Selection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.View.Selection.Toggle(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Toggle(EditingContext,ModelItem)
  nameWithType: Selection.Toggle(EditingContext,ModelItem)
  fullName: System.Activities.Presentation.View.Selection.Toggle(EditingContext,ModelItem)
- uid: System.Activities.Presentation.View.Selection.Union(System.Activities.Presentation.EditingContext,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Union(EditingContext,ModelItem)
  nameWithType: Selection.Union(EditingContext,ModelItem)
  fullName: System.Activities.Presentation.View.Selection.Union(EditingContext,ModelItem)
- uid: System.Activities.Presentation.View.Selection.Unsubscribe(System.Activities.Presentation.EditingContext,System.Activities.Presentation.SubscribeContextCallback{System.Activities.Presentation.View.Selection})
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Unsubscribe(EditingContext,SubscribeContextCallback<Selection>)
  nameWithType: Selection.Unsubscribe(EditingContext,SubscribeContextCallback<Selection>)
  fullName: System.Activities.Presentation.View.Selection.Unsubscribe(EditingContext,SubscribeContextCallback<Selection>)
- uid: System.Activities.Presentation.View.Selection.#ctor*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Selection
  nameWithType: Selection.Selection
- uid: System.Activities.Presentation.View.Selection.ItemType*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: ItemType
  nameWithType: Selection.ItemType
- uid: System.Activities.Presentation.View.Selection.PrimarySelection*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: PrimarySelection
  nameWithType: Selection.PrimarySelection
- uid: System.Activities.Presentation.View.Selection.Select*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Select
  nameWithType: Selection.Select
- uid: System.Activities.Presentation.View.Selection.SelectedObjects*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: SelectedObjects
  nameWithType: Selection.SelectedObjects
- uid: System.Activities.Presentation.View.Selection.SelectionCount*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: SelectionCount
  nameWithType: Selection.SelectionCount
- uid: System.Activities.Presentation.View.Selection.SelectOnly*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: SelectOnly
  nameWithType: Selection.SelectOnly
- uid: System.Activities.Presentation.View.Selection.Subscribe*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Subscribe
  nameWithType: Selection.Subscribe
- uid: System.Activities.Presentation.View.Selection.Toggle*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Toggle
  nameWithType: Selection.Toggle
- uid: System.Activities.Presentation.View.Selection.Union*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Union
  nameWithType: Selection.Union
- uid: System.Activities.Presentation.View.Selection.Unsubscribe*
  parent: System.Activities.Presentation.View.Selection
  isExternal: false
  name: Unsubscribe
  nameWithType: Selection.Unsubscribe
