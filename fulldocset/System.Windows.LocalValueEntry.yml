### YamlMime:ManagedReference
items:
- uid: System.Windows.LocalValueEntry
  id: LocalValueEntry
  children:
  - System.Windows.LocalValueEntry.Equals(System.Object)
  - System.Windows.LocalValueEntry.GetHashCode
  - System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  - System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  - System.Windows.LocalValueEntry.Property
  - System.Windows.LocalValueEntry.Value
  langs:
  - csharp
  name: LocalValueEntry
  nameWithType: LocalValueEntry
  fullName: System.Windows.LocalValueEntry
  type: Struct
  summary: "表示一个属性标识符和本地设置的属性值依赖项属性。"
  remarks: "获取<xref:System.Windows.LocalValueEnumerator.Current%2A>一种<xref:System.Windows.LocalValueEnumerator>。</xref:System.Windows.LocalValueEnumerator>属性</xref:System.Windows.LocalValueEnumerator.Current%2A>的值时返回此类的实例 所有 LocalValueEntry 属性都是只读的。       此类具有没有公共构造函数。 为了获取必须调用此类的实例<xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>，，然后获取的值<xref:System.Windows.LocalValueEnumerator.Current%2A>从返回<xref:System.Windows.LocalValueEnumerator>。</xref:System.Windows.LocalValueEnumerator> </xref:System.Windows.LocalValueEnumerator.Current%2A> </xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>"
  example:
  - "The following example iterates locally set values of a <xref:System.Windows.DependencyObject> and queries LocalValueEntry properties.  \n  \n [!code-cs[DPClearValue#IterateLocalValuesAndClear](~/add/codesnippet/csharp/DPClearValue/default.xaml.cs#iteratelocalvaluesandclear)]\n [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/add/codesnippet/visualbasic/DPClearValue/default.xaml.vb#iteratelocalvaluesandclear)]"
  syntax:
    content: public struct LocalValueEntry
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: LocalValueEntry.Equals(Object)
  fullName: System.Windows.LocalValueEntry.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "确定两个<xref href=&quot;System.Windows.LocalValueEntry&quot;></xref>实例是否相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref>要与当前比较<xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "这<> *1> 实现比较的值<> *1>，并可能将的值进行比较<> *1>。<> </> *1> 组件的<xref href=&quot;System.Windows.LocalValueEntry&quot;></xref>是值类型，因此将始终为按位比较。 有关<xref:System.Windows.LocalValueEntry.Value*>组件，此实现将使用按位比较如果它是值类型。</xref:System.Windows.LocalValueEntry.Value*> 对于具有引用类型的本地设置的属性，该行为推迟到该类型的相等性确定机制，因为它只使用内部 = = 运算符对两个值。 默认情况下，这可能是值的引用相等性和因此的相等性整个<xref href=&quot;System.Windows.LocalValueEntry&quot;></xref>将变得引用相等性。"
  overload: System.Windows.LocalValueEntry.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.GetHashCode
  id: GetHashCode
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: LocalValueEntry.GetHashCode()
  fullName: System.Windows.LocalValueEntry.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "返回此哈希代码<xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref>。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "一个 32 位有符号的整数值。"
  overload: System.Windows.LocalValueEntry.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  id: op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: op_Equality(LocalValueEntry,LocalValueEntry)
  nameWithType: LocalValueEntry.op_Equality(LocalValueEntry,LocalValueEntry)
  fullName: System.Windows.LocalValueEntry.op_Equality(LocalValueEntry,LocalValueEntry)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "比较指定<xref href=&quot;System.Windows.LocalValueEntry&quot;></xref>实例，以确定它们是否相同。"
  remarks: "此实现中相等比较的值<xref:System.Windows.LocalValueEntry.Property%2A>，并可能将<xref:System.Windows.LocalValueEntry.Value%2A>.</xref:System.Windows.LocalValueEntry.Value%2A>的值进行比较</xref:System.Windows.LocalValueEntry.Property%2A> <xref:System.Windows.LocalValueEntry.Property%2A>组件的<xref:System.Windows.LocalValueEntry>始终是值类型，所以此比较将始终是按位值比较。</xref:System.Windows.LocalValueEntry> </xref:System.Windows.LocalValueEntry.Property%2A> 有关<xref:System.Windows.LocalValueEntry.Value%2A>组件，此实现将使用按位比较如果它是值类型。</xref:System.Windows.LocalValueEntry.Value%2A>       对于具有引用类型的本地设置的属性，该行为推迟到该类型的相等性确定机制，因为它使用`==`运算符对两个内部值。 默认情况下，这是引用相等性的值。"
  syntax:
    content: public static bool op_Equality (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEntry
      description: "要比较的第一个实例。"
    - id: obj2
      type: System.Windows.LocalValueEntry
      description: "要比较的第二个实例。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>obj1</code><xref href=&quot;System.Windows.LocalValueEntry&quot;></xref> is equal to the <code>obj2</code><xref href=&quot;System.Windows.LocalValueEntry&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.LocalValueEntry.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  id: op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: op_Inequality(LocalValueEntry,LocalValueEntry)
  nameWithType: LocalValueEntry.op_Inequality(LocalValueEntry,LocalValueEntry)
  fullName: System.Windows.LocalValueEntry.op_Inequality(LocalValueEntry,LocalValueEntry)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "比较指定<xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref>实例，以确定它们是否不同。"
  syntax:
    content: public static bool op_Inequality (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEntry
      description: "要比较的第一个实例。"
    - id: obj2
      type: System.Windows.LocalValueEntry
      description: "要比较的第二个实例。"
    return:
      type: System.Boolean
      description: "此实现将的值进行比较<> *1> 和<> *1> 组成部分<xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref>。 <> </> *1> 组件的<xref href=&quot;System.Windows.LocalValueEntry&quot;></xref>始终是值类型，所以此比较将始终是按位比较。有关<> *1> 组件，此实现将使用按位比较如果它是值类型。       对于具有引用类型的本地设置的属性，该行为推迟到该类型的相等性确定机制，因为它使用<xref uid=&quot;langword_csharp_==&quot; name=&quot;==&quot; href=&quot;&quot;></xref>运算符对两个内部值。 默认情况下，这是引用相等性的值。"
  overload: System.Windows.LocalValueEntry.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.Property
  id: Property
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: Property
  nameWithType: LocalValueEntry.Property
  fullName: System.Windows.LocalValueEntry.Property
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "获取本地设置的标识符此条目表示的依赖项属性。"
  remarks: "使用此属性来查询的标识符，本地设置的依赖项属性并获取其元数据。 此获取元数据可能包括属性和属性是否支持属性值继承的初始默认值。"
  syntax:
    content: public System.Windows.DependencyProperty Property { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "本地设置的标识符依赖项属性。"
  overload: System.Windows.LocalValueEntry.Property*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.Value
  id: Value
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: Value
  nameWithType: LocalValueEntry.Value
  fullName: System.Windows.LocalValueEntry.Value
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "获取本地设置的值依赖项属性。"
  remarks: "若要确定此值的更具体类型，请检查<xref:System.Windows.LocalValueEntry.Property%2A>当前<xref:System.Windows.LocalValueEntry>并获取其<xref:System.Windows.DependencyProperty.PropertyType%2A>.</xref:System.Windows.DependencyProperty.PropertyType%2A> </xref:System.Windows.LocalValueEntry> </xref:System.Windows.LocalValueEntry.Property%2A>"
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "本地设置的值作为对象的依赖项属性。"
  overload: System.Windows.LocalValueEntry.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.LocalValueEntry.Equals(System.Object)
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Equals(Object)
  nameWithType: LocalValueEntry.Equals(Object)
  fullName: System.Windows.LocalValueEntry.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.LocalValueEntry.GetHashCode
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: GetHashCode()
  nameWithType: LocalValueEntry.GetHashCode()
  fullName: System.Windows.LocalValueEntry.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: op_Equality(LocalValueEntry,LocalValueEntry)
  nameWithType: LocalValueEntry.op_Equality(LocalValueEntry,LocalValueEntry)
  fullName: System.Windows.LocalValueEntry.op_Equality(LocalValueEntry,LocalValueEntry)
- uid: System.Windows.LocalValueEntry
  parent: System.Windows
  isExternal: false
  name: LocalValueEntry
  nameWithType: LocalValueEntry
  fullName: System.Windows.LocalValueEntry
- uid: System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: op_Inequality(LocalValueEntry,LocalValueEntry)
  nameWithType: LocalValueEntry.op_Inequality(LocalValueEntry,LocalValueEntry)
  fullName: System.Windows.LocalValueEntry.op_Inequality(LocalValueEntry,LocalValueEntry)
- uid: System.Windows.LocalValueEntry.Property
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Property
  nameWithType: LocalValueEntry.Property
  fullName: System.Windows.LocalValueEntry.Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.LocalValueEntry.Value
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Value
  nameWithType: LocalValueEntry.Value
  fullName: System.Windows.LocalValueEntry.Value
- uid: System.Windows.LocalValueEntry.Equals*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Equals
  nameWithType: LocalValueEntry.Equals
- uid: System.Windows.LocalValueEntry.GetHashCode*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: GetHashCode
  nameWithType: LocalValueEntry.GetHashCode
- uid: System.Windows.LocalValueEntry.op_Equality*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: op_Equality
  nameWithType: LocalValueEntry.op_Equality
- uid: System.Windows.LocalValueEntry.op_Inequality*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: op_Inequality
  nameWithType: LocalValueEntry.op_Inequality
- uid: System.Windows.LocalValueEntry.Property*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Property
  nameWithType: LocalValueEntry.Property
- uid: System.Windows.LocalValueEntry.Value*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Value
  nameWithType: LocalValueEntry.Value
