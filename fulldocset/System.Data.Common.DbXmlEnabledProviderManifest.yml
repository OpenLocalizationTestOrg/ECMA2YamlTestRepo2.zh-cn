### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbXmlEnabledProviderManifest
  id: DbXmlEnabledProviderManifest
  children:
  - System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)
  - System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  - System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions
  - System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes
  - System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
  - System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  - System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  langs:
  - csharp
  name: DbXmlEnabledProviderManifest
  nameWithType: DbXmlEnabledProviderManifest
  fullName: System.Data.Common.DbXmlEnabledProviderManifest
  type: Class
  summary: "表示一个基类，实现该类<xref href=&quot;System.Data.Common.DbProviderManifest&quot;></xref>基于 XML 定义。 DbXmlEnabledProviderManifest 类可用于获取在运行时提供程序特定信息。"
  remarks: "DbXmlEnabledProviderManifest 类是尤其适用于其类型映射到 EDM 具有对称的提供程序。 在对称类型映射情况下，每个存储类型映射到单个实体数据模型 (EDM) 类型，而与映射方向无关。 换而言之，EDM 到提供程序类型映射是提供程序到 EDM 类型的映射相同。       在对称映射情况下，也可以从 DbXmlEnabledProviderManifest 类或<xref:System.Data.Common.DbProviderManifest>类</xref:System.Data.Common.DbProviderManifest>派生自定义提供程序类 我们建议你从对称映射情况下 DbXmlEnabledProviderManifest 类中派生您的自定义提供程序类因 DbXmlEnabledProviderManifest 类将允许你以声明方式指定清单。"
  syntax:
    content: 'public abstract class DbXmlEnabledProviderManifest : System.Data.Common.DbProviderManifest'
  inheritance:
  - System.Object
  - System.Data.Common.DbProviderManifest
  implements: []
  inheritedMembers:
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  - System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.GetInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.StoreSchemaMapping
  - System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  - System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)
  id: '#ctor(System.Xml.XmlReader)'
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: DbXmlEnabledProviderManifest(XmlReader)
  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "初始化的新实例<xref href=&quot;System.Data.Common.DbXmlEnabledProviderManifest&quot;></xref>类。"
  remarks: "实体框架提供了一个默认实现，生成提供程序清单中给定的 XmlReader 的信息。"
  syntax:
    content: protected DbXmlEnabledProviderManifest (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>提供提供程序清单文件中的 XML 数据的访问的对象。</xref:System.Xml.XmlReader>"
  overload: System.Data.Common.DbXmlEnabledProviderManifest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  id: GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "返回指定的实体数据模型 (EDM) 类型的方面说明的列表。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription> GetFacetDescriptions (System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: "<xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>这方面的说明，这是要检索。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
      description: "类型的集合&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;其中包含指定的 EDM 类型的方面说明的列表。"
  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions
  id: GetStoreFunctions
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: GetStoreFunctions()
  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "返回提供程序支持的函数的列表。"
  remarks: "此 (不可为 null) 的方法不返回用户定义函数。 如果提供程序不支持任何函数，此方法将返回空集合。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetStoreFunctions ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "类型的集合&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;其中包含提供程序支持的函数的列表。"
  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes
  id: GetStoreTypes
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: GetStoreTypes()
  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "返回由存储提供程序支持的基元类型的列表。"
  remarks: "如果存储不支持任何类型，此 (不可为 null) 方法将返回空集合。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetStoreTypes ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
      description: "类型的集合&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;其中包含存储提供程序支持的基元类型的列表。"
  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
  id: NamespaceName
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: NamespaceName
  nameWithType: DbXmlEnabledProviderManifest.NamespaceName
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "获取此提供程序清单支持的命名空间名称。"
  syntax:
    content: public override string NamespaceName { get; }
    return:
      type: System.String
      description: "此提供程序清单支持的命名空间名称。"
  overload: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  id: StoreTypeNameToEdmPrimitiveType
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: StoreTypeNameToEdmPrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "获取最佳映射等效实体数据模型 (EDM) 类型指定的存储类型名称。"
  remarks: "(不可为 null) 此属性返回<xref:System.Collections.Generic.Dictionary>对象，它接受一个存储类型名称作为键，并返回其关联的 EDM 类型值。</xref:System.Collections.Generic.Dictionary>"
  syntax:
    content: protected System.Collections.Generic.Dictionary<string,System.Data.Metadata.Edm.PrimitiveType> StoreTypeNameToEdmPrimitiveType { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}
      description: "最佳映射等效 EDM 类型指定的存储类型名称。"
  overload: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  id: StoreTypeNameToStorePrimitiveType
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: StoreTypeNameToStorePrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "获取指定的存储类型名称的最佳映射等效存储基元类型。"
  remarks: "(不可为 null) 此属性返回<xref:System.Collections.Generic.Dictionary>对象，它接受一个存储类型名称作为键，并返回其关联的存储基元类型值。</xref:System.Collections.Generic.Dictionary>"
  syntax:
    content: protected System.Collections.Generic.Dictionary<string,System.Data.Metadata.Edm.PrimitiveType> StoreTypeNameToStorePrimitiveType { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}
      description: "最佳映射等效存储基元类型指定的存储类型名称。"
  overload: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbProviderManifest
  isExternal: false
  name: System.Data.Common.DbProviderManifest
- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: DbXmlEnabledProviderManifest(XmlReader)
  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<FacetDescription>
  nameWithType: ReadOnlyCollection<FacetDescription>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.FacetDescription
    name: FacetDescription
    nameWithType: FacetDescription
    fullName: FacetDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetStoreFunctions()
  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetStoreTypes()
  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PrimitiveType>
  nameWithType: ReadOnlyCollection<PrimitiveType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbXmlEnabledProviderManifest.NamespaceName
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: StoreTypeNameToEdmPrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
- uid: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,PrimitiveType>
  nameWithType: Dictionary<String,PrimitiveType>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: StoreTypeNameToStorePrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: DbXmlEnabledProviderManifest
  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetFacetDescriptions
  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetStoreFunctions
  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetStoreTypes
  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes
- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbXmlEnabledProviderManifest.NamespaceName
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: StoreTypeNameToEdmPrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: StoreTypeNameToStorePrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
