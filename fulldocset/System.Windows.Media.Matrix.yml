### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Matrix
  id: Matrix
  children:
  - System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Determinant
  - System.Windows.Media.Matrix.Equals(System.Object)
  - System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.GetHashCode
  - System.Windows.Media.Matrix.HasInverse
  - System.Windows.Media.Matrix.Identity
  - System.Windows.Media.Matrix.Invert
  - System.Windows.Media.Matrix.IsIdentity
  - System.Windows.Media.Matrix.M11
  - System.Windows.Media.Matrix.M12
  - System.Windows.Media.Matrix.M21
  - System.Windows.Media.Matrix.M22
  - System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.OffsetX
  - System.Windows.Media.Matrix.OffsetY
  - System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Parse(System.String)
  - System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Rotate(System.Double)
  - System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.RotatePrepend(System.Double)
  - System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  - System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  - System.Windows.Media.Matrix.SetIdentity
  - System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  - System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  - System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.Matrix.ToString
  - System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  - System.Windows.Media.Matrix.Transform(System.Windows.Point)
  - System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  - System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  - System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  - System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  - System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  langs:
  - csharp
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
  type: Struct
  summary: "表示用于在中进行转换的 3 x 3 仿射转换矩阵[!INCLUDE[TLA#tla_2d](~/add/includes/tlasharptla-2d-md.md)]空间。"
  remarks: "在中进行转换使用的 3 x 3 矩阵[!INCLUDE[TLA2#tla_2d](~/add/includes/tla2sharptla-2d-md.md)]x，y 平面。 仿射转换矩阵相乘可形成任意数目的线性转换，例如旋转和时间差 （切变），然后再进行平移。 仿射转换矩阵具有等于 （0，0，1），因此只需指定前两个列中的成员的最后一列。  请注意行矢量，不是列矢量表示向量。       A[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]矩阵使用行优先顺序存储，并具有以下结构: | | |  |-|-|-|  |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  |<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  |<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|      在最后一个行中，成员<xref:System.Windows.Media.Matrix.OffsetX%2A>和<xref:System.Windows.Media.Matrix.OffsetY%2A>，表示平移值。</xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M11%2A>       方法和属性中的转换矩阵通常被指定为一个只需单击六成员具有的向量，如下所示: (<xref:System.Windows.Media.Matrix.M11%2A>， <xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.M22%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>， <xref:System.Windows.Media.Matrix.OffsetY%2A>) 尽管可以使用矩阵结构直接进行转换单独的点，或与<xref:System.Windows.Media.MatrixTransform>可以将对象，转换[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]还提供了一组使你可以将对象转换而无需直接与矩阵中使用的类︰ <xref:System.Windows.Media.RotateTransform>， <xref:System.Windows.Media.ScaleTransform>， <xref:System.Windows.Media.SkewTransform>，和<xref:System.Windows.Media.TranslateTransform>。</xref:System.Windows.Media.TranslateTransform> </xref:System.Windows.Media.SkewTransform> </xref:System.Windows.Media.ScaleTransform> </xref:System.Windows.Media.RotateTransform> </xref:System.Windows.Media.MatrixTransform> </xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M11%2A>      <a name=&quot;xamlAttributeUsage_Matrix&quot;></a># # XAML 属性用法```   <object property=&quot;m11, m12, m21, m22, offsetX, offsetY&quot;/>   - or -   <object property=&quot;Identity&quot;/>   ``` <a name=&quot;xamlValues_Matrix&quot;> </a> # # XAML 值*m11* <xref:System.Double?displayProperty=fullName>中的第一行和此矩阵的第一列的值。</xref:System.Double?displayProperty=fullName>           有关详细信息，请参阅<xref:System.Windows.Media.Matrix.M11%2A>属性。</xref:System.Windows.Media.Matrix.M11%2A>       *m12* <xref:System.Double?displayProperty=fullName>第一个行和第二列中的值。</xref:System.Double?displayProperty=fullName>     有关详细信息，请参阅<xref:System.Windows.Media.Matrix.M12%2A>属性。</xref:System.Windows.Media.Matrix.M12%2A>       *m21* <xref:System.Double?displayProperty=fullName>中的第二行和第一列的值。</xref:System.Double?displayProperty=fullName>     有关详细信息，请参阅<xref:System.Windows.Media.Matrix.M21%2A>属性。</xref:System.Windows.Media.Matrix.M21%2A>       *m22* <xref:System.Double?displayProperty=fullName>第二个行和第二列中的值。</xref:System.Double?displayProperty=fullName>     有关详细信息，请参阅<xref:System.Windows.Media.Matrix.M22%2A>属性。</xref:System.Windows.Media.Matrix.M22%2A>       *offsetX* <xref:System.Double?displayProperty=fullName>第三个行、 第三列中的值。</xref:System.Double?displayProperty=fullName>     有关详细信息，请参阅<xref:System.Windows.Media.Matrix.OffsetX%2A>属性。</xref:System.Windows.Media.Matrix.OffsetX%2A>       *offsetY* <xref:System.Double?displayProperty=fullName>第三个行和第二列中的值。</xref:System.Double?displayProperty=fullName>     有关详细信息，请参阅<xref:System.Windows.Media.Matrix.OffsetY%2A>属性。</xref:System.Windows.Media.Matrix.OffsetY%2A>"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))]

      public struct Matrix : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Matrix(Double,Double,Double,Double,Double,Double)
  nameWithType: Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  syntax:
    content: public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);
    parameters:
    - id: m11
      type: System.Double
      description: "新<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构的<xref:System.Windows.Media.Matrix.M11*>系数。</xref:System.Windows.Media.Matrix.M11*>"
    - id: m12
      type: System.Double
      description: "新<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构的<xref:System.Windows.Media.Matrix.M12*>系数。</xref:System.Windows.Media.Matrix.M12*>"
    - id: m21
      type: System.Double
      description: "新<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构的<xref:System.Windows.Media.Matrix.M21*>系数。</xref:System.Windows.Media.Matrix.M21*>"
    - id: m22
      type: System.Double
      description: "新<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构的<xref:System.Windows.Media.Matrix.M22*>系数。</xref:System.Windows.Media.Matrix.M22*>"
    - id: offsetX
      type: System.Double
      description: "新<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构的<xref:System.Windows.Media.Matrix.OffsetX*>系数。</xref:System.Windows.Media.Matrix.OffsetX*>"
    - id: offsetY
      type: System.Double
      description: "新<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构的<xref:System.Windows.Media.Matrix.OffsetY*>系数。</xref:System.Windows.Media.Matrix.OffsetY*>"
  overload: System.Windows.Media.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  id: Append(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Append(Matrix)
  nameWithType: Matrix.Append(Matrix)
  fullName: System.Windows.Media.Matrix.Append(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "追加指定<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>到此结构<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "此操作等同于将乘以这<xref:System.Windows.Media.Matrix>由参数的结构`matrix`。</xref:System.Windows.Media.Matrix>  矩阵乘法不是可交换性，不过，因此此操作不是与将乘以参数相同`matrix`由此<xref:System.Windows.Media.Matrix>结构; 即，(这 * `matrix`) 不是相同 (`matrix` \\*这)。</xref:System.Windows.Media.Matrix>"
  example:
  - "The following example shows how to append a <xref:System.Windows.Media.Matrix> structure to another <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]"
  syntax:
    content: public void Append (System.Windows.Media.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>结构要追加到此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  overload: System.Windows.Media.Matrix.Append*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Determinant
  id: Determinant
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: System.Windows.Media.Matrix.Determinant
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取此行列式<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: ''
  example:
  - "This example shows how to get the determinant of a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixdeterminantexample_csharp)]"
  syntax:
    content: public double Determinant { get; }
    return:
      type: System.Double
      description: "此决定<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.Determinant*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Windows.Media.Matrix.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "确定是否指定<xref:System.Object>是<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构，它是等同于此<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。</xref:System.Object>"
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref:System.Object>进行比较。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> o </code>是<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构，它是等同于此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  id: Equals(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "确定是否指定<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构是与此实例相同。"
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public bool Equals (System.Windows.Media.Matrix value);
    parameters:
    - id: value
      type: System.Windows.Media.Matrix
      description: "实例<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>要与此实例进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果实例相等，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Matrix,Matrix)
  nameWithType: Matrix.Equals(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix,Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "确定是否两个指定<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构相等。"
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  syntax:
    content: public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "第一个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行比较。"
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "第二个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>matrix1</code> and <code>matrix2</code> are identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.GetHashCode
  id: GetHashCode
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Windows.Media.Matrix.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "返回此哈希代码<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "此实例的哈希代码。"
  overload: System.Windows.Media.Matrix.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.HasInverse
  id: HasInverse
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: HasInverse
  nameWithType: Matrix.HasInverse
  fullName: System.Windows.Media.Matrix.HasInverse
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示是否这<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构是可逆转。"
  remarks: ''
  example:
  - "The following example checks whether a <xref:System.Windows.Media.Matrix> is invertible. If it is invertible, the <xref:System.Windows.Media.Matrix> is inverted.  \n  \n [!code-cs[MatrixExamples_snip#MatrixInverseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixinverseexample_csharp)]"
  syntax:
    content: public bool HasInverse { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>具有逆实例; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.HasInverse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Identity
  id: Identity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Identity
  nameWithType: Matrix.Identity
  fullName: System.Windows.Media.Matrix.Identity
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取一个标识<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  remarks: "某标识矩阵在系数 [1，1]，[2，2] [3，3] 中具有值为 1 和 0，在其余系数的值。 这对应于设置<xref:System.Windows.Media.Matrix.M11%2A>和<xref:System.Windows.Media.Matrix.M22%2A>为 1 和<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，和<xref:System.Windows.Media.Matrix.OffsetY%2A>为 0。</xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M11%2A> 是的实现的仿射矩阵，[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]用于<xref:System.Windows.Media.Matrix>，结构，系数 [3，1]、 [3，2] 和 [3.3] 暗指始终分别具有值 0,0,1。</xref:System.Windows.Media.Matrix>      ||||  |-|-|-|  |&1; |&0; |&0; |  |&0; |&1; |&0; |  |&0; |&0; |&1; |      为某标识矩阵，<xref:System.Windows.Media.Matrix.ToString%2A>方法返回字符串&quot;标识&quot;而不是<xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix>的系数</xref:System.Windows.Media.Matrix.ToString%2A>"
  example:
  - "The following example shows how to retrieve the Identity matrix.  \n  \n [!code-cs[MatrixExamples_snip#MatrixIdentityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixidentityexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Identity { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "某标识矩阵。"
  overload: System.Windows.Media.Matrix.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Invert
  id: Invert
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Windows.Media.Matrix.Invert()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "反转此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: ''
  example:
  - "The following example checks if a <xref:System.Windows.Media.Matrix> structure is invertible. If it is invertible, the <xref:System.Windows.Media.Matrix> structure is inverted.  \n  \n [!code-cs[MatrixExamples_snip#MatrixInverseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixinverseexample_csharp)]"
  syntax:
    content: public void Invert ();
    parameters: []
  overload: System.Windows.Media.Matrix.Invert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>结构不是可逆转。"
  platform:
  - net462
- uid: System.Windows.Media.Matrix.IsIdentity
  id: IsIdentity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Windows.Media.Matrix.IsIdentity
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取一个值，该值指示是否这<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构是单位矩阵。"
  remarks: "某标识矩阵在系数 [1，1]，[2，2] [3，3] 中具有值为 1 和 0，在其余系数的值。 这对应于设置<xref:System.Windows.Media.Matrix.M11%2A>和<xref:System.Windows.Media.Matrix.M22%2A>为 1 和<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，和<xref:System.Windows.Media.Matrix.OffsetY%2A>为 0。</xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M11%2A> 是的实现的仿射矩阵，[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]用于<xref:System.Windows.Media.Matrix>结构，系数 [3，1]、 [3，2] 和 [3.3] 暗指始终分别具有值 0,0,1。</xref:System.Windows.Media.Matrix>      ||||  |-|-|-|  |&1; |&0; |&0; |  |&0; |&1; |&0; |  |&0; |&0; |&1; |      为某标识矩阵，<xref:System.Windows.Media.Matrix.ToString%2A>方法返回字符串&quot;标识&quot;，而不是<xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix>的系数</xref:System.Windows.Media.Matrix.ToString%2A>"
  syntax:
    content: public bool IsIdentity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构是某标识矩阵; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.IsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M11
  id: M11
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M11
  nameWithType: Matrix.M11
  fullName: System.Windows.Media.Matrix.M11
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取或设置的值的第一行和第一列这<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: ''
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M11 { get; set; }
    return:
      type: System.Double
      description: "值的第一行和第一列这<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。 默认值为 1。"
  overload: System.Windows.Media.Matrix.M11*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M12
  id: M12
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M12
  nameWithType: Matrix.M12
  fullName: System.Windows.Media.Matrix.M12
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取或设置此第一个行和第二列的值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "下表显示了一种<xref:System.Windows.Media.Matrix>。</xref:System.Windows.Media.Matrix>的布局      ||||  |-|-|-|  |<xref:System.Windows.Media.Matrix.M11%2A>|M12 |&0; |  |<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  |<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|</xref:System.Windows.Media.Matrix.OffsetY%2A></xref:System.Windows.Media.Matrix.OffsetX%2A></xref:System.Windows.Media.Matrix.M22%2A></xref:System.Windows.Media.Matrix.M21%2A></xref:System.Windows.Media.Matrix.M11%2A>"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M12 { get; set; }
    return:
      type: System.Double
      description: "此第一个行和第二列的值<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。 默认值为 0"
  overload: System.Windows.Media.Matrix.M12*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M21
  id: M21
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M21
  nameWithType: Matrix.M21
  fullName: System.Windows.Media.Matrix.M21
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取或设置的值的第二行和第一列这<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "下表显示了一种<xref:System.Windows.Media.Matrix>。</xref:System.Windows.Media.Matrix>的布局      ||||  |-|-|-|  |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  |M21 |<xref:System.Windows.Media.Matrix.M22%2A>|0|  |<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|</xref:System.Windows.Media.Matrix.OffsetY%2A></xref:System.Windows.Media.Matrix.OffsetX%2A></xref:System.Windows.Media.Matrix.M22%2A></xref:System.Windows.Media.Matrix.M12%2A></xref:System.Windows.Media.Matrix.M11%2A>"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M21 { get; set; }
    return:
      type: System.Double
      description: "第二个行和此第一列的值<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。 默认值为 0"
  overload: System.Windows.Media.Matrix.M21*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M22
  id: M22
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M22
  nameWithType: Matrix.M22
  fullName: System.Windows.Media.Matrix.M22
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取或设置此第二个行和第二列的值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "下表显示的布局<xref:System.Windows.Media.Matrix>结构。</xref:System.Windows.Media.Matrix>      ||||  |-|-|-|  |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  |<xref:System.Windows.Media.Matrix.M21%2A>|M22 |&0; |  |<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|</xref:System.Windows.Media.Matrix.OffsetY%2A></xref:System.Windows.Media.Matrix.OffsetX%2A></xref:System.Windows.Media.Matrix.M21%2A></xref:System.Windows.Media.Matrix.M12%2A></xref:System.Windows.Media.Matrix.M11%2A>"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M22 { get; set; }
    return:
      type: System.Double
      description: "此第二个行和第二列的值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。 默认值为 1。"
  overload: System.Windows.Media.Matrix.M22*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Multiply(Matrix,Matrix)
  nameWithType: Matrix.Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Multiply(Matrix,Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "乘以<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>由另一个结构<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "矩阵乘法不是可交换的。 将乘以`trans1`通过`trans2`不相同相乘`trans2`通过`trans1`。"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);
    parameters:
    - id: trans1
      type: System.Windows.Media.Matrix
      description: "第一个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行乘法运算。"
    - id: trans2
      type: System.Windows.Media.Matrix
      description: "第二个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行乘法运算。"
    return:
      type: System.Windows.Media.Matrix
      description: "相乘的结果<code> trans1 </code>通过<code> trans2 </code>。"
  overload: System.Windows.Media.Matrix.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.OffsetX
  id: OffsetX
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Windows.Media.Matrix.OffsetX
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取或设置的值的第三行和第一列这<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "因此命名为 OffsetX 属性，因为它指定要坐标空间沿 x 轴平移的量。       下表显示了一种<xref:System.Windows.Media.Matrix>。</xref:System.Windows.Media.Matrix>的布局      ||||  |-|-|-|  |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  |<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  |OffsetX |<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|</xref:System.Windows.Media.Matrix.OffsetY%2A></xref:System.Windows.Media.Matrix.M22%2A></xref:System.Windows.Media.Matrix.M21%2A></xref:System.Windows.Media.Matrix.M12%2A></xref:System.Windows.Media.Matrix.M11%2A>"
  syntax:
    content: public double OffsetX { get; set; }
    return:
      type: System.Double
      description: "第三个行和此第一列的值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。 默认值为 0"
  overload: System.Windows.Media.Matrix.OffsetX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.OffsetY
  id: OffsetY
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Windows.Media.Matrix.OffsetY
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "获取或设置此第三个行和第二列的值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "因此命名为 OffsetY 属性，因为它指定要坐标空间沿 y 轴平移的量。       下表显示了一种<xref:System.Windows.Media.Matrix>。</xref:System.Windows.Media.Matrix>的布局      ||||  |-|-|-|  |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  |<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  |<xref:System.Windows.Media.Matrix.OffsetX%2A>|OffsetY |&1; |</xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M11%2A>"
  syntax:
    content: public double OffsetY { get; set; }
    return:
      type: System.Double
      description: "此第三个行和第二列的值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。 默认值为 0"
  overload: System.Windows.Media.Matrix.OffsetY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Equality(Matrix,Matrix)
  nameWithType: Matrix.op_Equality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Equality(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "确定是否两个指定<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构相等。"
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public static bool op_Equality (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "第一个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行比较。"
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "第二个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>matrix1</code> and <code>matrix2</code> are identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Inequality(Matrix,Matrix)
  nameWithType: Matrix.op_Inequality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Inequality(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "确定是否两个指定<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构不相同。"
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public static bool op_Inequality (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "第一个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行比较。"
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "第二个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>matrix1</code> and <code>matrix2</code> are not identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Multiply(Matrix,Matrix)
  nameWithType: Matrix.op_Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Multiply(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "乘以<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>由另一个结构<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "矩阵乘法不是可交换的。 将乘以`trans1`通过`trans2`不相同相乘`trans2`通过`trans1`。"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix op_Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);
    parameters:
    - id: trans1
      type: System.Windows.Media.Matrix
      description: "第一个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行乘法运算。"
    - id: trans2
      type: System.Windows.Media.Matrix
      description: "第二个<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构进行乘法运算。"
    return:
      type: System.Windows.Media.Matrix
      description: "相乘的结果<code> trans1 </code>通过<code> trans2 </code>。"
  overload: System.Windows.Media.Matrix.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Matrix.Parse(String)
  fullName: System.Windows.Media.Matrix.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "将转换<xref:System.String>矩阵表示形式为等效<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。</xref:System.String>"
  remarks: ''
  example:
  - "The following example shows how to convert a string representation of a matrix into a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixParseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixparseexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "<xref:System.String>矩阵表示形式。</xref:System.String>"
    return:
      type: System.Windows.Media.Matrix
      description: "等效于<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  overload: System.Windows.Media.Matrix.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  id: Prepend(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Prepend(Matrix)
  nameWithType: Matrix.Prepend(Matrix)
  fullName: System.Windows.Media.Matrix.Prepend(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "将添加前指定<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>到其中的结构<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "This operation is the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure. Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`; that is, `matrix` * this is not the same as this \\* `matrix`.  \n  \n In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "The following example shows how to prepend a <xref:System.Windows.Media.Matrix> onto another <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependexample_csharp)]"
  syntax:
    content: public void Prepend (System.Windows.Media.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>结构预先计算此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  overload: System.Windows.Media.Matrix.Prepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Rotate(System.Double)
  id: Rotate(System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Rotate(Double)
  nameWithType: Matrix.Rotate(Double)
  fullName: System.Windows.Media.Matrix.Rotate(Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "有关此源的指定角度的旋转<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: ''
  example:
  - "The following example shows how to rotate a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateexample_csharp)]"
  syntax:
    content: public void Rotate (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "旋转角度。"
  overload: System.Windows.Media.Matrix.Rotate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  id: RotateAt(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotateAt(Double,Double,Double)
  nameWithType: Matrix.RotateAt(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAt(Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "有关指定点此矩阵的旋转。"
  remarks: ''
  example:
  - "The following example shows how to rotate a <xref:System.Windows.Media.Matrix> about a specified point.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]"
  syntax:
    content: public void RotateAt (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "角度 （以度为单位，旋转此矩阵）。"
    - id: centerX
      type: System.Double
      description: "要围绕其旋转此矩阵的点 x 坐标。"
    - id: centerY
      type: System.Double
      description: "要围绕其旋转此矩阵的点的 y 坐标。"
  overload: System.Windows.Media.Matrix.RotateAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  id: RotateAtPrepend(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotateAtPrepend(Double,Double,Double)
  nameWithType: Matrix.RotateAtPrepend(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAtPrepend(Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "前面添加到此指定点处的指定角度的旋转<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "在复合转换中，各个变换之间的顺序很重要。 例如，如果第一次旋转，则缩放，则转换，你获得不同的结果不是如果首先将转换，然后旋转，则缩放。 顺序很重要的原因之一是，这样像旋转和缩放转换是针对坐标系统的原点。 缩放以原点中心的对象生成比缩放已离开源的对象不同的结果。 同样，轮换基于原点居中的对象生成已离开源的对象与旋转不同的结果。"
  example:
  - "The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependrotateexamples_csharp)]"
  syntax:
    content: public void RotateAtPrepend (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "旋转角度，以度为单位。"
    - id: centerX
      type: System.Double
      description: "旋转中心的 x 坐标。"
    - id: centerY
      type: System.Double
      description: "旋转中心的 y 坐标。"
  overload: System.Windows.Media.Matrix.RotateAtPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotatePrepend(System.Double)
  id: RotatePrepend(System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotatePrepend(Double)
  nameWithType: Matrix.RotatePrepend(Double)
  fullName: System.Windows.Media.Matrix.RotatePrepend(Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "前面添加旋转指定角度至此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "在复合转换中，各个变换之间的顺序很重要。 例如，如果第一次旋转，则缩放，则转换，你获得不同的结果不是如果首先将转换，然后旋转，则缩放。 顺序很重要的原因之一是，这样像旋转和缩放转换是针对坐标系统的原点。 缩放以原点中心的对象生成比缩放已离开源的对象不同的结果。 同样，轮换基于原点居中的对象生成已离开源的对象与旋转不同的结果。"
  example:
  - "The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependrotateexamples_csharp)]"
  syntax:
    content: public void RotatePrepend (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "要在前面添加旋转的角度。"
  overload: System.Windows.Media.Matrix.RotatePrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  id: Scale(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Scale(Double,Double)
  nameWithType: Matrix.Scale(Double,Double)
  fullName: System.Windows.Media.Matrix.Scale(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "将指定的比例向量追加到此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: ''
  example:
  - "The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixscaleexamples_csharp)]"
  syntax:
    content: public void Scale (double scaleX, double scaleY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "缩放这值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 x 轴。"
    - id: scaleY
      type: System.Double
      description: "缩放这值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 y 轴。"
  overload: System.Windows.Media.Matrix.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  id: ScaleAt(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScaleAt(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAt(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAt(Double,Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "缩放此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>指定点指定的量。"
  remarks: ''
  example:
  - "The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixscaleexamples_csharp)]"
  syntax:
    content: public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "缩放这量<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 x 轴。"
    - id: scaleY
      type: System.Double
      description: "缩放这量<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 y 轴。"
    - id: centerX
      type: System.Double
      description: "缩放操作的中心点的 x 坐标。"
    - id: centerY
      type: System.Double
      description: "缩放操作的中心点的 y 坐标。"
  overload: System.Windows.Media.Matrix.ScaleAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  id: ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScaleAtPrepend(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "在此指定的点指定的比例<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  remarks: "在复合转换中，各个变换之间的顺序很重要。 例如，如果第一次旋转，则缩放，则转换，你获得不同的结果不是如果首先将转换，然后旋转，则缩放。 顺序很重要的原因之一是，这样像旋转和缩放转换是针对坐标系统的原点。 缩放以原点中心的对象生成比缩放已离开源的对象不同的结果。 同样，轮换基于原点居中的对象生成已离开源的对象与旋转不同的结果。"
  example:
  - "The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependscaleexamples_csharp)]"
  syntax:
    content: public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "X 轴缩放比例。"
    - id: scaleY
      type: System.Double
      description: "Y 轴比例系数。"
    - id: centerX
      type: System.Double
      description: "有关哪些执行缩放操作的点 x 坐标。"
    - id: centerY
      type: System.Double
      description: "有关哪些执行缩放操作的点的 y 坐标。"
  overload: System.Windows.Media.Matrix.ScaleAtPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  id: ScalePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScalePrepend(Double,Double)
  nameWithType: Matrix.ScalePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.ScalePrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "将指定的比例向量到此添加前<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "在复合转换中，各个变换之间的顺序很重要。 例如，如果第一次旋转，则缩放，则转换，你获得不同的结果不是如果首先将转换，然后旋转，则缩放。 顺序很重要的原因之一是，这样像旋转和缩放转换是针对坐标系统的原点。 缩放以原点中心的对象生成比缩放已离开源的对象不同的结果。 同样，轮换基于原点居中的对象生成已离开源的对象与旋转不同的结果。"
  example:
  - "The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependscaleexamples_csharp)]"
  syntax:
    content: public void ScalePrepend (double scaleX, double scaleY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "缩放这值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 x 轴的结构。"
    - id: scaleY
      type: System.Double
      description: "缩放这值<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 y 轴的结构。"
  overload: System.Windows.Media.Matrix.ScalePrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.SetIdentity
  id: SetIdentity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: SetIdentity()
  nameWithType: Matrix.SetIdentity()
  fullName: System.Windows.Media.Matrix.SetIdentity()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "更改此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>到某标识矩阵的结构。"
  remarks: "某标识矩阵在系数 [1，1]，[2，2] [3，3] 中具有值为 1 和 0，在其余系数的值。 这对应于设置<xref:System.Windows.Media.Matrix.M11%2A>和<xref:System.Windows.Media.Matrix.M22%2A>为 1 和<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，和<xref:System.Windows.Media.Matrix.OffsetY%2A>为 0。</xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M11%2A> 是的实现的仿射矩阵，[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]用于<xref:System.Windows.Media.Matrix>结构，系数 [3，1]、 [3，2] 和 [3.3] 暗指始终分别具有值 0,0,1。</xref:System.Windows.Media.Matrix>      ||||  |-|-|-|  |&1; |&0; |&0; |  |&0; |&1; |&0; |  |&0; |&0; |&1; |      为某标识矩阵，<xref:System.Windows.Media.Matrix.ToString%2A>方法返回字符串&quot;标识&quot;，而不是<xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix>的系数</xref:System.Windows.Media.Matrix.ToString%2A>"
  example:
  - "The following example shows how to turn a <xref:System.Windows.Media.Matrix> structure into an identity matrix.  \n  \n [!code-cs[MatrixExamples_snip#MatrixIdentityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixidentityexample_csharp)]"
  syntax:
    content: public void SetIdentity ();
    parameters: []
  overload: System.Windows.Media.Matrix.SetIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  id: Skew(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Skew(Double,Double)
  nameWithType: Matrix.Skew(Double,Double)
  fullName: System.Windows.Media.Matrix.Skew(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "将 x 和 y 中指定的角度的倾斜追加到此维度<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: ''
  example:
  - "This example shows how to skew a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixSkewExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixskewexample_csharp)]"
  syntax:
    content: public void Skew (double skewX, double skewY);
    parameters:
    - id: skewX
      type: System.Double
      description: "通过用于扭曲此 x 维度中的角度<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
    - id: skewY
      type: System.Double
      description: "通过用于扭曲此 y 维度中的角度<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.Skew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  id: SkewPrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: SkewPrepend(Double,Double)
  nameWithType: Matrix.SkewPrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.SkewPrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "将 x 和 y 中指定的角度的倾斜前面添加到此维度<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "在复合转换中，各个变换之间的顺序很重要。 例如，如果第一次旋转，则缩放，则转换，你获得不同的结果不是如果首先将转换，然后旋转，则缩放。 顺序很重要的原因之一是，这样像旋转和缩放转换是针对坐标系统的原点。 缩放以原点中心的对象生成比缩放已离开源的对象不同的结果。 同样，轮换基于原点居中的对象生成已离开源的对象与旋转不同的结果。"
  example:
  - "This example shows how to prepend a skew to a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixskewprependexample_csharp)]"
  syntax:
    content: public void SkewPrepend (double skewX, double skewY);
    parameters:
    - id: skewX
      type: System.Double
      description: "通过用于扭曲此 x 维度中的角度<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
    - id: skewY
      type: System.Double
      description: "通过用于扭曲此 y 维度中的角度<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.SkewPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Matrix.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Media.Matrix.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "使用指定的格式的当前实例的值设置。"
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "要使用的格式。       -空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中) 使用的类型定义的默认格式<xref:System.IFormattable>实现。</xref:System.IFormattable>"
    - id: provider
      type: System.IFormatProvider
      description: "要用于设置值的格式提供程序。       -空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中) 来从操作系统的当前区域设置获取数字格式信息。"
    return:
      type: System.String
      description: "指定的格式中的当前实例的值。"
  overload: System.Windows.Media.Matrix.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ToString
  id: ToString
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: System.Windows.Media.Matrix.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "创建<xref:System.String>这种表示形式<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。</xref:System.String>"
  remarks: "如果此<xref:System.Windows.Media.Matrix>是<xref:System.Windows.Media.Matrix.Identity%2A>矩阵，返回&quot;标识&quot;的字符串。</xref:System.Windows.Media.Matrix.Identity%2A> </xref:System.Windows.Media.Matrix>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> containing the <>*>, <>*>, <>*>, <>*>, <>*>, and <>*> values of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>.</xref:System.String>"
  overload: System.Windows.Media.Matrix.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Matrix.ToString(IFormatProvider)
  fullName: System.Windows.Media.Matrix.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "创建<xref:System.String>这种表示形式<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>使用区域性特定格式设置信息的结构。</xref:System.String>"
  remarks: "如果此<xref:System.Windows.Media.Matrix>结构是单位矩阵，&quot;标识&quot;将返回的字符串。</xref:System.Windows.Media.Matrix>"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "区域性特定格式设置信息。"
    return:
      type: System.String
      description: "A <xref:System.String> containing the <>*>, <>*>, <>*>, <>*>, <>*>, and <>*> values of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>.</xref:System.String>"
  overload: System.Windows.Media.Matrix.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point)
  id: Transform(System.Windows.Point)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Point)
  nameWithType: Matrix.Transform(Point)
  fullName: System.Windows.Media.Matrix.Transform(Point)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "转换由指定的点<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>并返回结果。"
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public System.Windows.Point Transform (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "要变换的点。"
    return:
      type: System.Windows.Point
      description: "转换的结果<code> point </code>由此<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  id: Transform(System.Windows.Point[])
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Point[])
  nameWithType: Matrix.Transform(Point[])
  fullName: System.Windows.Media.Matrix.Transform(Point[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "通过此转换指定的点<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public void Transform (System.Windows.Point[] points);
    parameters:
    - id: points
      type: System.Windows.Point[]
      description: "要变换的点。 数组中的原始点将由其转换后的值替换。"
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  id: Transform(System.Windows.Vector)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Vector)
  nameWithType: Matrix.Transform(Vector)
  fullName: System.Windows.Media.Matrix.Transform(Vector)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "通过此转换指定的向量<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public System.Windows.Vector Transform (System.Windows.Vector vector);
    parameters:
    - id: vector
      type: System.Windows.Vector
      description: "要变换的向量。"
    return:
      type: System.Windows.Vector
      description: "转换的结果<code> vector </code>由此<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  id: Transform(System.Windows.Vector[])
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Vector[])
  nameWithType: Matrix.Transform(Vector[])
  fullName: System.Windows.Media.Matrix.Transform(Vector[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "通过此转换指定的向量<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public void Transform (System.Windows.Vector[] vectors);
    parameters:
    - id: vectors
      type: System.Windows.Vector[]
      description: "要变换的向量。 数组中的原始向量替换为转换后的值。"
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  id: Translate(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Translate(Double,Double)
  nameWithType: Matrix.Translate(Double,Double)
  fullName: System.Windows.Media.Matrix.Translate(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "将指定的偏移量的翻译追加到此<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: ''
  example:
  - "The following example shows how append a translation onto a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTranslateExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtranslateexample_csharp)]"
  syntax:
    content: public void Translate (double offsetX, double offsetY);
    parameters:
    - id: offsetX
      type: System.Double
      description: "这的偏移量<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 x 轴。"
    - id: offsetY
      type: System.Double
      description: "这的偏移量<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 y 轴。"
  overload: System.Windows.Media.Matrix.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  id: TranslatePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: TranslatePrepend(Double,Double)
  nameWithType: Matrix.TranslatePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.TranslatePrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "前面添加的指定的偏移量到此平移<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>结构。"
  remarks: "在复合转换中，各个变换之间的顺序很重要。 例如，如果第一次旋转，则缩放，则转换，你获得不同的结果不是如果首先将转换，然后旋转，则缩放。 顺序很重要的原因之一是，这样像旋转和缩放转换是针对坐标系统的原点。 缩放以原点中心的对象生成比缩放已离开源的对象不同的结果。 同样，轮换基于原点居中的对象生成已离开源的对象与旋转不同的结果。"
  example:
  - "The following example shows how prepend a translation onto a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtranslateprependexample_csharp)]"
  syntax:
    content: public void TranslatePrepend (double offsetX, double offsetY);
    parameters:
    - id: offsetX
      type: System.Double
      description: "这的偏移量<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 x 轴。"
    - id: offsetY
      type: System.Double
      description: "这的偏移量<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>沿 y 轴。"
  overload: System.Windows.Media.Matrix.TranslatePrepend*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Matrix(Double,Double,Double,Double,Double,Double)
  nameWithType: Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.Matrix(Double,Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Append(Matrix)
  nameWithType: Matrix.Append(Matrix)
  fullName: System.Windows.Media.Matrix.Append(Matrix)
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.Matrix.Determinant
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: System.Windows.Media.Matrix.Determinant
- uid: System.Windows.Media.Matrix.Equals(System.Object)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Windows.Media.Matrix.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix)
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Matrix,Matrix)
  nameWithType: Matrix.Equals(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.GetHashCode
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Windows.Media.Matrix.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Matrix.HasInverse
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: HasInverse
  nameWithType: Matrix.HasInverse
  fullName: System.Windows.Media.Matrix.HasInverse
- uid: System.Windows.Media.Matrix.Identity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Identity
  nameWithType: Matrix.Identity
  fullName: System.Windows.Media.Matrix.Identity
- uid: System.Windows.Media.Matrix.Invert
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Windows.Media.Matrix.Invert()
- uid: System.Windows.Media.Matrix.IsIdentity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Windows.Media.Matrix.IsIdentity
- uid: System.Windows.Media.Matrix.M11
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M11
  nameWithType: Matrix.M11
  fullName: System.Windows.Media.Matrix.M11
- uid: System.Windows.Media.Matrix.M12
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M12
  nameWithType: Matrix.M12
  fullName: System.Windows.Media.Matrix.M12
- uid: System.Windows.Media.Matrix.M21
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M21
  nameWithType: Matrix.M21
  fullName: System.Windows.Media.Matrix.M21
- uid: System.Windows.Media.Matrix.M22
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M22
  nameWithType: Matrix.M22
  fullName: System.Windows.Media.Matrix.M22
- uid: System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Multiply(Matrix,Matrix)
  nameWithType: Matrix.Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Multiply(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.OffsetX
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Windows.Media.Matrix.OffsetX
- uid: System.Windows.Media.Matrix.OffsetY
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Windows.Media.Matrix.OffsetY
- uid: System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Equality(Matrix,Matrix)
  nameWithType: Matrix.op_Equality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Equality(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Inequality(Matrix,Matrix)
  nameWithType: Matrix.op_Inequality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Inequality(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Multiply(Matrix,Matrix)
  nameWithType: Matrix.op_Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Multiply(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.Parse(System.String)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Parse(String)
  nameWithType: Matrix.Parse(String)
  fullName: System.Windows.Media.Matrix.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Prepend(Matrix)
  nameWithType: Matrix.Prepend(Matrix)
  fullName: System.Windows.Media.Matrix.Prepend(Matrix)
- uid: System.Windows.Media.Matrix.Rotate(System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Rotate(Double)
  nameWithType: Matrix.Rotate(Double)
  fullName: System.Windows.Media.Matrix.Rotate(Double)
- uid: System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAt(Double,Double,Double)
  nameWithType: Matrix.RotateAt(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAt(Double,Double,Double)
- uid: System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAtPrepend(Double,Double,Double)
  nameWithType: Matrix.RotateAtPrepend(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAtPrepend(Double,Double,Double)
- uid: System.Windows.Media.Matrix.RotatePrepend(System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotatePrepend(Double)
  nameWithType: Matrix.RotatePrepend(Double)
  fullName: System.Windows.Media.Matrix.RotatePrepend(Double)
- uid: System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Scale(Double,Double)
  nameWithType: Matrix.Scale(Double,Double)
  fullName: System.Windows.Media.Matrix.Scale(Double,Double)
- uid: System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAt(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAt(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAt(Double,Double,Double,Double)
- uid: System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAtPrepend(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAtPrepend(Double,Double,Double,Double)
- uid: System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScalePrepend(Double,Double)
  nameWithType: Matrix.ScalePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.ScalePrepend(Double,Double)
- uid: System.Windows.Media.Matrix.SetIdentity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SetIdentity()
  nameWithType: Matrix.SetIdentity()
  fullName: System.Windows.Media.Matrix.SetIdentity()
- uid: System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Skew(Double,Double)
  nameWithType: Matrix.Skew(Double,Double)
  fullName: System.Windows.Media.Matrix.Skew(Double,Double)
- uid: System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SkewPrepend(Double,Double)
  nameWithType: Matrix.SkewPrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.SkewPrepend(Double,Double)
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Matrix.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Media.Matrix.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Media.Matrix.ToString
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: System.Windows.Media.Matrix.ToString()
- uid: System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Matrix.ToString(IFormatProvider)
  fullName: System.Windows.Media.Matrix.ToString(IFormatProvider)
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Point)
  nameWithType: Matrix.Transform(Point)
  fullName: System.Windows.Media.Matrix.Transform(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Point[])
  nameWithType: Matrix.Transform(Point[])
  fullName: System.Windows.Media.Matrix.Transform(Point[])
- uid: System.Windows.Point[]
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point[]
  spec.csharp:
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Vector)
  nameWithType: Matrix.Transform(Vector)
  fullName: System.Windows.Media.Matrix.Transform(Vector)
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Vector[])
  nameWithType: Matrix.Transform(Vector[])
  fullName: System.Windows.Media.Matrix.Transform(Vector[])
- uid: System.Windows.Vector[]
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector[]
  spec.csharp:
  - uid: System.Windows.Vector
    name: Vector
    nameWithType: Vector
    fullName: Vector[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Translate(Double,Double)
  nameWithType: Matrix.Translate(Double,Double)
  fullName: System.Windows.Media.Matrix.Translate(Double,Double)
- uid: System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: TranslatePrepend(Double,Double)
  nameWithType: Matrix.TranslatePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.TranslatePrepend(Double,Double)
- uid: System.Windows.Media.Matrix.#ctor*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Matrix
  nameWithType: Matrix.Matrix
- uid: System.Windows.Media.Matrix.Append*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Append
  nameWithType: Matrix.Append
- uid: System.Windows.Media.Matrix.Determinant*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Determinant
  nameWithType: Matrix.Determinant
- uid: System.Windows.Media.Matrix.Equals*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals
  nameWithType: Matrix.Equals
- uid: System.Windows.Media.Matrix.GetHashCode*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
- uid: System.Windows.Media.Matrix.HasInverse*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: HasInverse
  nameWithType: Matrix.HasInverse
- uid: System.Windows.Media.Matrix.Identity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Identity
  nameWithType: Matrix.Identity
- uid: System.Windows.Media.Matrix.Invert*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Invert
  nameWithType: Matrix.Invert
- uid: System.Windows.Media.Matrix.IsIdentity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
- uid: System.Windows.Media.Matrix.M11*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M11
  nameWithType: Matrix.M11
- uid: System.Windows.Media.Matrix.M12*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M12
  nameWithType: Matrix.M12
- uid: System.Windows.Media.Matrix.M21*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M21
  nameWithType: Matrix.M21
- uid: System.Windows.Media.Matrix.M22*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M22
  nameWithType: Matrix.M22
- uid: System.Windows.Media.Matrix.Multiply*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Multiply
  nameWithType: Matrix.Multiply
- uid: System.Windows.Media.Matrix.OffsetX*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
- uid: System.Windows.Media.Matrix.OffsetY*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
- uid: System.Windows.Media.Matrix.op_Equality*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Equality
  nameWithType: Matrix.op_Equality
- uid: System.Windows.Media.Matrix.op_Inequality*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Inequality
  nameWithType: Matrix.op_Inequality
- uid: System.Windows.Media.Matrix.op_Multiply*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Multiply
  nameWithType: Matrix.op_Multiply
- uid: System.Windows.Media.Matrix.Parse*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Parse
  nameWithType: Matrix.Parse
- uid: System.Windows.Media.Matrix.Prepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Prepend
  nameWithType: Matrix.Prepend
- uid: System.Windows.Media.Matrix.Rotate*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Rotate
  nameWithType: Matrix.Rotate
- uid: System.Windows.Media.Matrix.RotateAt*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAt
  nameWithType: Matrix.RotateAt
- uid: System.Windows.Media.Matrix.RotateAtPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAtPrepend
  nameWithType: Matrix.RotateAtPrepend
- uid: System.Windows.Media.Matrix.RotatePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotatePrepend
  nameWithType: Matrix.RotatePrepend
- uid: System.Windows.Media.Matrix.Scale*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Scale
  nameWithType: Matrix.Scale
- uid: System.Windows.Media.Matrix.ScaleAt*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAt
  nameWithType: Matrix.ScaleAt
- uid: System.Windows.Media.Matrix.ScaleAtPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAtPrepend
  nameWithType: Matrix.ScaleAtPrepend
- uid: System.Windows.Media.Matrix.ScalePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScalePrepend
  nameWithType: Matrix.ScalePrepend
- uid: System.Windows.Media.Matrix.SetIdentity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SetIdentity
  nameWithType: Matrix.SetIdentity
- uid: System.Windows.Media.Matrix.Skew*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Skew
  nameWithType: Matrix.Skew
- uid: System.Windows.Media.Matrix.SkewPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SkewPrepend
  nameWithType: Matrix.SkewPrepend
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Matrix.System.IFormattable.ToString
- uid: System.Windows.Media.Matrix.ToString*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString
  nameWithType: Matrix.ToString
- uid: System.Windows.Media.Matrix.Transform*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform
  nameWithType: Matrix.Transform
- uid: System.Windows.Media.Matrix.Translate*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Translate
  nameWithType: Matrix.Translate
- uid: System.Windows.Media.Matrix.TranslatePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: TranslatePrepend
  nameWithType: Matrix.TranslatePrepend
