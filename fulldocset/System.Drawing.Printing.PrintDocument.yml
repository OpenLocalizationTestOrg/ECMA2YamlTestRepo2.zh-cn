### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.PrintDocument
  id: PrintDocument
  children:
  - System.Drawing.Printing.PrintDocument.#ctor
  - System.Drawing.Printing.PrintDocument.BeginPrint
  - System.Drawing.Printing.PrintDocument.DefaultPageSettings
  - System.Drawing.Printing.PrintDocument.DocumentName
  - System.Drawing.Printing.PrintDocument.EndPrint
  - System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  - System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  - System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  - System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  - System.Drawing.Printing.PrintDocument.OriginAtMargins
  - System.Drawing.Printing.PrintDocument.Print
  - System.Drawing.Printing.PrintDocument.PrintController
  - System.Drawing.Printing.PrintDocument.PrinterSettings
  - System.Drawing.Printing.PrintDocument.PrintPage
  - System.Drawing.Printing.PrintDocument.QueryPageSettings
  - System.Drawing.Printing.PrintDocument.ToString
  langs:
  - csharp
  name: PrintDocument
  nameWithType: PrintDocument
  fullName: System.Drawing.Printing.PrintDocument
  type: Class
  summary: "定义将输出发送到打印机，从 Windows 窗体应用程序打印时的可重用对象。"
  remarks: "通常，创建 PrintDocument 类的实例，设置属性，如<xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>和<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>，并调用<xref:System.Drawing.Printing.PrintDocument.Print%2A>方法开始打印进程。</xref:System.Drawing.Printing.PrintDocument.Print%2A> </xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> </xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> 处理<xref:System.Drawing.Printing.PrintDocument.PrintPage>你在其中指定要通过使用<xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A><xref:System.Drawing.Graphics>属性的<xref:System.Drawing.Printing.PrintPageEventArgs>。</xref:System.Drawing.Printing.PrintPageEventArgs></xref:System.Drawing.Graphics></xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A>打印的输出的事件</xref:System.Drawing.Printing.PrintDocument.PrintPage>       从 Windows 窗体应用程序打印有关的详细信息，请参阅[Windows 窗体打印支持](~/add/includes/ajax-current-ext-md.md)。 如果你想要从 Windows Presentation Foundation 应用程序打印，请参阅<xref:System.Printing>命名空间。</xref:System.Printing>"
  example:
  - "The following code example prints the file named C:\\My Documents\\MyFile.txt on the default printer. To run the example, create a new Windows Forms project and paste the example code into the form, replacing the file contents. For C#, you will need to delete the Form1.Designer.cs file. Also, change the path to the file you want to print.  \n  \n> [!NOTE]\n>  The example requires that each line fits within the page width.  \n  \n Use the <xref:System.ComponentModel>, <xref:System.Windows.Forms>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/t-system.drawing.printin_5_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/t-system.drawing.printin_5_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/t-system.drawing.printin_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PrintPage")]

      [System.ComponentModel.DefaultProperty("DocumentName")]

      [System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")]

      public class PrintDocument : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.#ctor
  id: '#ctor'
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintDocument()
  nameWithType: PrintDocument.PrintDocument()
  fullName: System.Drawing.Printing.PrintDocument.PrintDocument()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "初始化的新实例<xref href=&quot;System.Drawing.Printing.PrintDocument&quot;></xref>类。"
  remarks: "默认构造函数初始化基于默认打印机的所有字段。 通常情况下之后创建一个新, <xref:System.Drawing.Printing.PrintDocument>，设置会影响通过输出的打印机和页面设置<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>和<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>属性，分别。</xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> </xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> </xref:System.Drawing.Printing.PrintDocument>"
  example:
  - "The following code example sets a document's page orientation to landscape, and prints the document.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/m-system.drawing.printin_1_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/m-system.drawing.printin_1_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/m-system.drawing.printin_1_1.cs)]"
  syntax:
    content: public PrintDocument ();
    parameters: []
  overload: System.Drawing.Printing.PrintDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.BeginPrint
  id: BeginPrint
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: BeginPrint
  nameWithType: PrintDocument.BeginPrint
  fullName: System.Drawing.Printing.PrintDocument.BeginPrint
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "发生时<xref:System.Drawing.Printing.PrintDocument.Print*>调用方法以及在打印文档的第一页之前。</xref:System.Drawing.Printing.PrintDocument.Print*>"
  remarks: "通常情况下，处理 BeginPrint 事件初始化字体、 文件流和打印过程中使用其他资源。       若要将事件与事件处理程序关联，将添加的实例<xref:System.Drawing.Printing.PrintEventHandler>委托给该事件。</xref:System.Drawing.Printing.PrintEventHandler> 每当发生该事件时，都会调用事件处理程序。 有关与委托一起处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Drawing.Printing.PrintEventHandler BeginPrint;
    return:
      type: System.Drawing.Printing.PrintEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  id: DefaultPageSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
  fullName: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置用作的所有页的默认要打印的页设置。"
  remarks: "你可以指定多个通过 DefaultPageSettings 属性的默认页设置。 例如，<xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>属性指定是否用彩色，打印页<xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>属性指定横向或纵向方向和<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>属性指定的页的边距。</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>       若要在按页基础上指定设置，处理<xref:System.Drawing.Printing.PrintDocument.PrintPage>或<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>事件并修改<xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A>参数中包含<xref:System.Drawing.Printing.PrintPageEventArgs>或<xref:System.Drawing.Printing.QueryPageSettingsEventArgs>分别。</xref:System.Drawing.Printing.QueryPageSettingsEventArgs> </xref:System.Drawing.Printing.PrintPageEventArgs> </xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A> </xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> </xref:System.Drawing.Printing.PrintDocument.PrintPage>      1> [!NOTE]&1;> 启动打印后，通过 DefaultPageSettings 属性页设置的更改将不会影响正在打印的页。"
  example:
  - "The following code example sets a document's page orientation to landscape, and prints the document. The example makes three assumptions: that a variable named `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cs[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_16_1.cs)]\n [!code-cpp[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_16_1.cpp)]\n [!code-vb[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_16_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }
    return:
      type: System.Drawing.Printing.PageSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref> ，指定文档的默认页设置。"
  overload: System.Drawing.Printing.PrintDocument.DefaultPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.DocumentName
  id: DocumentName
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
  fullName: System.Drawing.Printing.PrintDocument.DocumentName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置要打印文档时显示 （例如，在打印状态对话框或打印机队列中） 的文档名称。"
  remarks: "文档名属性未指定要打印的文件。 相反，你指定要通过处理打印输出<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件。</xref:System.Drawing.Printing.PrintDocument.PrintPage> 有关示例，请参阅<xref:System.Drawing.Printing.PrintDocument>类概述。</xref:System.Drawing.Printing.PrintDocument>"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it, and sets the DocumentName to a user-friendly name. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/p-system.drawing.printin_24_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/p-system.drawing.printin_24_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/p-system.drawing.printin_24_1.vb)]"
  syntax:
    content: public string DocumentName { get; set; }
    return:
      type: System.String
      description: "要打印文档时显示的文档名称。 默认值为&quot;文档&quot;。"
  overload: System.Drawing.Printing.PrintDocument.DocumentName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.EndPrint
  id: EndPrint
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: EndPrint
  nameWithType: PrintDocument.EndPrint
  fullName: System.Drawing.Printing.PrintDocument.EndPrint
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "打印完文档的最后一页时发生。"
  remarks: "通常情况下，处理 EndPrint 事件来释放字体、 文件流和使用在打印过程中，字体等其他资源。       指示有更多要通过设置打印的页<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName>属性`false`中<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件。</xref:System.Drawing.Printing.PrintDocument.PrintPage> </xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName> 如果取消打印进程或打印过程中发生异常时，也会发生 EndPrint 事件。       若要将事件与事件处理程序关联，将添加的实例<xref:System.Drawing.Printing.PrintEventHandler>委托给该事件。</xref:System.Drawing.Printing.PrintEventHandler> 每当发生该事件时，都会调用事件处理程序。 有关与委托一起处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Drawing.Printing.PrintEventHandler EndPrint;
    return:
      type: System.Drawing.Printing.PrintEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  id: OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnBeginPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnBeginPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnBeginPrint(PrintEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "引发<xref href=&quot;System.Drawing.Printing.PrintDocument.BeginPrint&quot;></xref>事件。 后，它会调用<xref:System.Drawing.Printing.PrintDocument.Print*>调用方法以及在打印文档的第一页之前。</xref:System.Drawing.Printing.PrintDocument.Print*>"
  remarks: "OnBeginPrint 方法允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。       当派生的类调用 OnBeginPrint 方法时，它会发出<xref:System.Drawing.Printing.PrintDocument.BeginPrint>通过调用事件处理程序，通过委托的事件。</xref:System.Drawing.Printing.PrintDocument.BeginPrint> 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Drawing.Printing.PrintDocument.OnBeginPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  id: OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnEndPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnEndPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnEndPrint(PrintEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "引发<xref href=&quot;System.Drawing.Printing.PrintDocument.EndPrint&quot;></xref>事件。 打印完文档的最后一页时调用它。"
  remarks: "OnEndPrint 方法允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。 如果取消打印进程或打印过程中发生异常时，也称为 OnEndPrint 方法。       当派生的类调用 OnEndPrint 方法时，它会发出<xref:System.Drawing.Printing.PrintDocument.EndPrint>通过调用事件处理程序，通过委托的事件。</xref:System.Drawing.Printing.PrintDocument.EndPrint> 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Drawing.Printing.PrintDocument.OnEndPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  id: OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnPrintPage(PrintPageEventArgs)
  nameWithType: PrintDocument.OnPrintPage(PrintPageEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnPrintPage(PrintPageEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "引发<xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref>事件。 某页打印之前调用它。"
  remarks: "OnPrintPage 方法允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。       当派生的类调用 OnPrintPage 方法时，它会发出<xref:System.Drawing.Printing.PrintDocument.PrintPage>通过调用事件处理程序，通过委托的事件。</xref:System.Drawing.Printing.PrintDocument.PrintPage> 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintPageEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintPageEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Drawing.Printing.PrintDocument.OnPrintPage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  id: OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnQueryPageSettings(QueryPageSettingsEventArgs)
  nameWithType: PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "引发<xref href=&quot;System.Drawing.Printing.PrintDocument.QueryPageSettings&quot;></xref>事件。 每个之前调用<xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref>事件。"
  remarks: "OnQueryPageSettings 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。       当派生的类调用 OnQueryPageSettings 方法时，它会发出<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>通过调用事件处理程序，通过委托的事件。</xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 有关详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.QueryPageSettingsEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.QueryPageSettingsEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Drawing.Printing.PrintDocument.OnQueryPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins
  id: OriginAtMargins
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
  fullName: System.Drawing.Printing.PrintDocument.OriginAtMargins
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置一个值，该值指示与页关联的图形对象的位置位于用户指定边距内，还是位于该页可打印区域的左上角。"
  remarks: "计算可打印区域需要了解本文、 页上的边距的物理大小和位置<xref:System.Drawing.Graphics>对象原点。</xref:System.Drawing.Graphics> OriginAtMargins 时`true`、<xref:System.Drawing.Graphics>对象位置将考虑在内<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>属性值和该页可打印区域。</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> </xref:System.Drawing.Graphics> OriginAtMargins 时`false`，该页可打印区域用于确定的位置<xref:System.Drawing.Graphics>对象源，<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>值将被忽略。</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> </xref:System.Drawing.Graphics>       例如，如果 OriginAtMargins 为`true`，和<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>每一侧，设置为 1 英寸<xref:System.Drawing.Graphics>中包含对象<xref:System.Drawing.Printing.PrintPageEventArgs>左侧和页面顶部的位于 1 英寸。</xref:System.Drawing.Printing.PrintPageEventArgs> </xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> 如果该页可打印区域的每个边英寸.25 且 OriginAtMargins `false`、<xref:System.Drawing.Graphics>对象是所在的.25 英寸开始从左和页的顶部。</xref:System.Drawing.Graphics>      1> [!NOTE]&1;> 页可打印区域而异，打印机打印机不保证一定对称。"
  syntax:
    content: public bool OriginAtMargins { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果图形原点开始页边距;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果图形来源是可打印的页的左上角。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrintDocument.OriginAtMargins*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.Print
  id: Print
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: Print()
  nameWithType: PrintDocument.Print()
  fullName: System.Drawing.Printing.PrintDocument.Print()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "启动文档的打印进程。"
  remarks: "指定要通过处理打印输出<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件和通过使用<xref:System.Drawing.Graphics>包含在<xref:System.Drawing.Printing.PrintPageEventArgs>.</xref:System.Drawing.Printing.PrintPageEventArgs> </xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PrintDocument.PrintPage>       使用<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>属性指定哪一台打印机来打印文档。</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>       Print 方法而无需使用打印对话框将打印文档。 使用<xref:System.Windows.Forms.PrintDialog>如果想要使用户能够选择打印的设置。</xref:System.Windows.Forms.PrintDialog>      1> [!NOTE]&1;> 文档的打印如果在打印期间引发异常，未由打印方法，则中止。"
  example:
  - "The following code example prints the file that is specified through the command line to the default printer.  \n  \n> [!NOTE]\n>  The example requires that each line fits within the page width.  \n  \n Use the <xref:System.ComponentModel>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, <xref:System.IO>, and <xref:System.Windows.Forms> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/cpp/m-system.drawing.printin_0_1.cpp)]\n [!code-vb[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/visualbasic/m-system.drawing.printin_0_1.vb)]\n [!code-cs[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/csharp/m-system.drawing.printin_0_1.cs)]"
  syntax:
    content: public void Print ();
    parameters: []
  overload: System.Drawing.Printing.PrintDocument.Print*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "中指定的打印机&lt;xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName&gt;属性不存在。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrintController
  id: PrintController
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintController
  nameWithType: PrintDocument.PrintController
  fullName: System.Drawing.Printing.PrintDocument.PrintController
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置指导打印进程的打印控制器。"
  remarks: "一个打印控制器指导打印进程有几个方面。 例如，若要打印文档时，你需要将其转换为<xref:System.Drawing.Graphics>对象。</xref:System.Drawing.Graphics> A<xref:System.Drawing.Printing.PrintController>指定在哪里可以在映像为打印预览或实际打印文档打印机上绘制图形。</xref:System.Drawing.Printing.PrintController> 一个打印控制器还可以指定是否要立即，打印文档或等待指定时间间隔。"
  example:
  - "The following code example requires that you have created an instance of the <xref:System.Drawing.Printing.PrintDocument> class that is named `myPrintDocument`. The example creates a new instance of the <xref:System.Drawing.Printing.PrintController> class, assigns it to the PrintController property of `myPrintDocument`, and prints the document.  \n  \n Use the <xref:System.Drawing.Printing> and <xref:System.Windows.Forms> namespaces for this example.  \n  \n [!code-cs[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_6_1.cs)]\n [!code-vb[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_6_1.vb)]\n [!code-cpp[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_6_1.cpp)]"
  syntax:
    content: public System.Drawing.Printing.PrintController PrintController { get; set; }
    return:
      type: System.Drawing.Printing.PrintController
      description: "<xref href=&quot;System.Drawing.Printing.PrintController&quot;> </xref>指导打印进程。 默认值为的新实例<xref href=&quot;System.Windows.Forms.PrintControllerWithStatusDialog&quot;></xref>类。"
  overload: System.Drawing.Printing.PrintDocument.PrintController*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings
  id: PrinterSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
  fullName: System.Drawing.Printing.PrintDocument.PrinterSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "获取或设置对文档进行打印的打印机。"
  remarks: "你可以指定通过 PrinterSettings 属性的多个打印机设置。 例如，使用<xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=fullName>属性来指定你想要打印的份数，则<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>属性指定为使用，并将<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=fullName>属性指定要打印的页范围的</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=fullName>打印机</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=fullName>"
  example:
  - "The following code example prints a document on the specified printer. The example makes three assumptions: that a variable names `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_2_1.cpp)]\n [!code-cs[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_2_1.cs)]\n [!code-vb[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_2_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }
    return:
      type: System.Drawing.Printing.PrinterSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>的指定位置和方式打印文档。 默认值是<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>其属性值设为其默认值。"
  overload: System.Drawing.Printing.PrintDocument.PrinterSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrintPage
  id: PrintPage
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintPage
  nameWithType: PrintDocument.PrintPage
  fullName: System.Drawing.Printing.PrintDocument.PrintPage
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "需要针对当前页打印的输出时发生。"
  remarks: "若要指定要打印的输出，使用<xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A>的<xref:System.Drawing.Printing.PrintPageEventArgs>。</xref:System.Drawing.Printing.PrintPageEventArgs>属性</xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> 例如，若要指定是否应打印的文本行，绘制文本使用<xref:System.Drawing.Graphics.DrawString%2A?displayProperty=fullName>方法。</xref:System.Drawing.Graphics.DrawString%2A?displayProperty=fullName>       除了指定输出，可以指示是否有其他要打印的压通过设置<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName>属性`true`。</xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName> 默认值是`false`，它指示是更多要打印的页。 此外可以通过修改单个页面设置<xref:System.Drawing.Printing.PageSettings>并且可以通过设置取消打印作业<xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=fullName>属性`true`。</xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PageSettings> 若要打印的文档使用不同的页设置每个页面，处理<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>事件。</xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>       若要将事件与事件处理程序关联，将添加的实例<xref:System.Drawing.Printing.PrintPageEventHandler>委托给该事件。</xref:System.Drawing.Printing.PrintPageEventHandler> 每当发生该事件时，都会调用事件处理程序。 有关与委托一起处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates handling the PrintPage event.  \n  \n For another example, see [How to: Print a Multi-Page Text File in Windows Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/e-system.drawing.printin_0_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/e-system.drawing.printin_0_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/e-system.drawing.printin_0_1.cs)]"
  syntax:
    content: public event System.Drawing.Printing.PrintPageEventHandler PrintPage;
    return:
      type: System.Drawing.Printing.PrintPageEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.QueryPageSettings
  id: QueryPageSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: QueryPageSettings
  nameWithType: PrintDocument.QueryPageSettings
  fullName: System.Drawing.Printing.PrintDocument.QueryPageSettings
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "紧跟在之前每<xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref>事件。"
  remarks: "可打印的文档使用不同的页设置每个页面。 通过修改各个属性设置页设置<xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=fullName>属性或通过将属性设置为一种<xref:System.Drawing.Printing.PageSettings>。</xref:System.Drawing.Printing.PageSettings> </xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=fullName> 对所做更改<xref:System.Drawing.Printing.PageSettings>影响仅在当前页，不文档的默认页设置。</xref:System.Drawing.Printing.PageSettings> 也可以通过设置取消打印作业<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true` <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>。</xref:System.Drawing.Printing.QueryPageSettingsEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       若要将事件与事件处理程序关联，将添加的实例<xref:System.Drawing.Printing.QueryPageSettingsEventHandler>委托给该事件。</xref:System.Drawing.Printing.QueryPageSettingsEventHandler> 每当发生该事件时，都会调用事件处理程序。 有关与委托一起处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and QueryPageSettings events are handled. The `currentPageNumber` variable is incremented after every page is printed in the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, which is not shown.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/e-system.drawing.printin_1_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/e-system.drawing.printin_1_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/e-system.drawing.printin_1_1.vb)]"
  syntax:
    content: public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;
    return:
      type: System.Drawing.Printing.QueryPageSettingsEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.ToString
  id: ToString
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: ToString()
  nameWithType: PrintDocument.ToString()
  fullName: System.Drawing.Printing.PrintDocument.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "提供有关打印文档，以字符串形式的信息。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个字符串。"
  overload: System.Drawing.Printing.PrintDocument.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Drawing.Printing.InvalidPrinterException
  parent: System.Drawing.Printing
  isExternal: false
  name: InvalidPrinterException
  nameWithType: InvalidPrinterException
  fullName: System.Drawing.Printing.InvalidPrinterException
- uid: System.Drawing.Printing.PrintDocument.#ctor
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintDocument()
  nameWithType: PrintDocument.PrintDocument()
  fullName: System.Drawing.Printing.PrintDocument.PrintDocument()
- uid: System.Drawing.Printing.PrintDocument.BeginPrint
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: BeginPrint
  nameWithType: PrintDocument.BeginPrint
  fullName: System.Drawing.Printing.PrintDocument.BeginPrint
- uid: System.Drawing.Printing.PrintEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintEventHandler
  nameWithType: PrintEventHandler
  fullName: System.Drawing.Printing.PrintEventHandler
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
  fullName: System.Drawing.Printing.PrintDocument.DefaultPageSettings
- uid: System.Drawing.Printing.PageSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PageSettings
  nameWithType: PageSettings
  fullName: System.Drawing.Printing.PageSettings
- uid: System.Drawing.Printing.PrintDocument.DocumentName
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
  fullName: System.Drawing.Printing.PrintDocument.DocumentName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Printing.PrintDocument.EndPrint
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: EndPrint
  nameWithType: PrintDocument.EndPrint
  fullName: System.Drawing.Printing.PrintDocument.EndPrint
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnBeginPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnBeginPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnBeginPrint(PrintEventArgs)
- uid: System.Drawing.Printing.PrintEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintEventArgs
  nameWithType: PrintEventArgs
  fullName: System.Drawing.Printing.PrintEventArgs
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnEndPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnEndPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnEndPrint(PrintEventArgs)
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnPrintPage(PrintPageEventArgs)
  nameWithType: PrintDocument.OnPrintPage(PrintPageEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnPrintPage(PrintPageEventArgs)
- uid: System.Drawing.Printing.PrintPageEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintPageEventArgs
  nameWithType: PrintPageEventArgs
  fullName: System.Drawing.Printing.PrintPageEventArgs
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnQueryPageSettings(QueryPageSettingsEventArgs)
  nameWithType: PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
- uid: System.Drawing.Printing.QueryPageSettingsEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: QueryPageSettingsEventArgs
  nameWithType: QueryPageSettingsEventArgs
  fullName: System.Drawing.Printing.QueryPageSettingsEventArgs
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
  fullName: System.Drawing.Printing.PrintDocument.OriginAtMargins
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Printing.PrintDocument.Print
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: Print()
  nameWithType: PrintDocument.Print()
  fullName: System.Drawing.Printing.PrintDocument.Print()
- uid: System.Drawing.Printing.PrintDocument.PrintController
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintController
  nameWithType: PrintDocument.PrintController
  fullName: System.Drawing.Printing.PrintDocument.PrintController
- uid: System.Drawing.Printing.PrintController
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintController
  nameWithType: PrintController
  fullName: System.Drawing.Printing.PrintController
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
  fullName: System.Drawing.Printing.PrintDocument.PrinterSettings
- uid: System.Drawing.Printing.PrinterSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings
  nameWithType: PrinterSettings
  fullName: System.Drawing.Printing.PrinterSettings
- uid: System.Drawing.Printing.PrintDocument.PrintPage
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintPage
  nameWithType: PrintDocument.PrintPage
  fullName: System.Drawing.Printing.PrintDocument.PrintPage
- uid: System.Drawing.Printing.PrintPageEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintPageEventHandler
  nameWithType: PrintPageEventHandler
  fullName: System.Drawing.Printing.PrintPageEventHandler
- uid: System.Drawing.Printing.PrintDocument.QueryPageSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: QueryPageSettings
  nameWithType: PrintDocument.QueryPageSettings
  fullName: System.Drawing.Printing.PrintDocument.QueryPageSettings
- uid: System.Drawing.Printing.QueryPageSettingsEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: QueryPageSettingsEventHandler
  nameWithType: QueryPageSettingsEventHandler
  fullName: System.Drawing.Printing.QueryPageSettingsEventHandler
- uid: System.Drawing.Printing.PrintDocument.ToString
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: ToString()
  nameWithType: PrintDocument.ToString()
  fullName: System.Drawing.Printing.PrintDocument.ToString()
- uid: System.Drawing.Printing.PrintDocument.#ctor*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintDocument
  nameWithType: PrintDocument.PrintDocument
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
- uid: System.Drawing.Printing.PrintDocument.DocumentName*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnBeginPrint
  nameWithType: PrintDocument.OnBeginPrint
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnEndPrint
  nameWithType: PrintDocument.OnEndPrint
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnPrintPage
  nameWithType: PrintDocument.OnPrintPage
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnQueryPageSettings
  nameWithType: PrintDocument.OnQueryPageSettings
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
- uid: System.Drawing.Printing.PrintDocument.Print*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: Print
  nameWithType: PrintDocument.Print
- uid: System.Drawing.Printing.PrintDocument.PrintController*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintController
  nameWithType: PrintDocument.PrintController
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
- uid: System.Drawing.Printing.PrintDocument.ToString*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: ToString
  nameWithType: PrintDocument.ToString
