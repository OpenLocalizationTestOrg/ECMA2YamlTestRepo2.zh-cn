### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.ProcessModelSection
  id: ProcessModelSection
  children:
  - System.Web.Configuration.ProcessModelSection.#ctor
  - System.Web.Configuration.ProcessModelSection.AutoConfig
  - System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  - System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  - System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  - System.Web.Configuration.ProcessModelSection.CpuMask
  - System.Web.Configuration.ProcessModelSection.ElementProperty
  - System.Web.Configuration.ProcessModelSection.Enable
  - System.Web.Configuration.ProcessModelSection.IdleTimeout
  - System.Web.Configuration.ProcessModelSection.LogLevel
  - System.Web.Configuration.ProcessModelSection.MaxAppDomains
  - System.Web.Configuration.ProcessModelSection.MaxIOThreads
  - System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  - System.Web.Configuration.ProcessModelSection.MemoryLimit
  - System.Web.Configuration.ProcessModelSection.MinIOThreads
  - System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  - System.Web.Configuration.ProcessModelSection.Password
  - System.Web.Configuration.ProcessModelSection.PingFrequency
  - System.Web.Configuration.ProcessModelSection.PingTimeout
  - System.Web.Configuration.ProcessModelSection.Properties
  - System.Web.Configuration.ProcessModelSection.RequestLimit
  - System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  - System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  - System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  - System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  - System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  - System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  - System.Web.Configuration.ProcessModelSection.Timeout
  - System.Web.Configuration.ProcessModelSection.UserName
  - System.Web.Configuration.ProcessModelSection.WebGarden
  langs:
  - csharp
  name: ProcessModelSection
  nameWithType: ProcessModelSection
  fullName: System.Web.Configuration.ProcessModelSection
  type: Class
  summary: "Internet 信息服务 (IIS) Web 服务器上配置 ASP.NET 过程模型设置。 此类不能被继承。"
  remarks: "ProcessModelSection 类使您能够以编程方式访问和修改`processModel`配置文件节。       ProcessModelSection 类控制 ASP.NET 工作进程，包括其生存期内，一次，哪些安全标识下，运行时创建的实例数的各个方面和 CLR 的大小线程池为请求提供服务。       当在 IIS 6 下在纯模式下运行 ASP.NET 时，ASP.NET 将使用 IIS 6 进程模型，并忽略此部分中的大多数设置。 使用 IIS 管理用户界面 (UI) 来配置这些属性。 ASP.NET 仍将使用以下属性，可通过配置文件进行配置︰ <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>， <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>， <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>， <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>， <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>，和<xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>。</xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> </xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>       `processModel`部分不能被加密，使用受保护的配置功能或工具，因为它将使用 ASP.NET ISAPI 扩展插件。"
  example:
  - "This example demonstrates how to specify values declaratively for several attributes of the `processModel` section, which can also be accessed as members of the ProcessModelSection class.  \n  \n The following configuration file example shows how to specify values declaratively for the `processModel` section.  \n  \n```  \n<processModel   \n  enable=\"True\" timeout=\"Infinite\"   \n  idleTimeout=\"Infinite\"   \n  shutdownTimeout=\"00:00:05\" requestLimit=\"Infinite\"  \n  requestQueueLimit=\"5000\" restartQueueLimit=\"10\"   \n  memoryLimit=\"60\" webGarden=\"False\" cpuMask=\"0xffffffff\"   \n  userName=\"machine\" password=\"AutoGenerate\" logLevel=\"Errors\"  \n  clientConnectedCheck=\"00:00:05\"   \n  comAuthenticationLevel=\"Connect\" comImpersonationLevel=\"Impersonate\"  \n  responseDeadlockInterval=\"00:03:00\"   \n  responseRestartDeadlockInterval=\"00:03:00\" autoConfig=\"True\"  \n  maxWorkerThreads=\"20\" maxIoThreads=\"20\" minWorkerThreads=\"1\"  \n  minIoThreads=\"1\" serverErrorMessageFile=\"\" pingFrequency=\"Infinite\"  \n  pingTimeout=\"Infinite\" asyncOption=\"20\" maxAppDomains=\"2000\"   \n/>  \n```  \n  \n The following code example demonstrates how to use the ProcessModelSection class.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#1](~/add/codesnippet/csharp/t-system.web.configurati_87_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_87_1.vb)]"
  syntax:
    content: 'public sealed class ProcessModelSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ProcessModelSection()
  nameWithType: ProcessModelSection.ProcessModelSection()
  fullName: System.Web.Configuration.ProcessModelSection.ProcessModelSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Web.Configuration.ProcessModelSection&quot;></xref>类使用默认设置。"
  remarks: "ProcessModelSection 构造函数不应在代码中直接使用。 它是由 ASP.NET 配置系统调用的。 获取实例<xref:System.Web.Configuration.ProcessModelSection>类通过<xref:System.Configuration.Configuration.GetSection%2A>方法。</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.ProcessModelSection>"
  syntax:
    content: public ProcessModelSection ();
    parameters: []
  overload: System.Web.Configuration.ProcessModelSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig
  id: AutoConfig
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
  fullName: System.Web.Configuration.ProcessModelSection.AutoConfig
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值指示是否自动为 ASP.NET 应用程序配置了 ASP.NET 性能设置。"
  remarks: "如果自动配置值设置为`false`，显式 Web.config 值用于确定对 ASP.NET 应用程序的性能配置。 如果自动配置值设置为`true`，性能设置自动配置 ASP.NET 应用程序。       自动配置值显式设置为`true`Machine.config 文件中。 默认代码值设置为`false`。  如果从 Machine.config 中删除自动配置值，而不是自动配置设置情况下将使用显式设置。"
  syntax:
    content: public bool AutoConfig { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果为 ASP.NET 应用程序; 自动配置性能设置否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Configuration.ProcessModelSection.AutoConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  id: ClientConnectedCheck
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
  fullName: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值多长时间的请求会留在队列中。"
  remarks: "此属性指定时间长度的请求排队之前 ASP.NET 执行连接的客户端检查。      1> [!NOTE]&1;> 如果时间间隔到期时请求仍在排队，请检查客户端能够连接完成后再将该请求传递到处理的 ASP.NET 工作进程。"
  example:
  - "The following code example shows how to access and modify the ClientConnectedCheck property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#18](~/add/codesnippet/csharp/p-system.web.configurati_355_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#18](~/add/codesnippet/visualbasic/p-system.web.configurati_355_1.vb)]"
  syntax:
    content: public TimeSpan ClientConnectedCheck { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>值，该值指示的队列的时间。</xref:System.TimeSpan> 默认值为 5 秒。"
  overload: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  id: ComAuthenticationLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值的 DCOM 安全身份验证级别。"
  remarks: "当此属性的值设置为<xref:System.Web.Configuration.ProcessModelComAuthenticationLevel>，DCOM 确定使用其普通的安全协商算法的身份验证级别。</xref:System.Web.Configuration.ProcessModelComAuthenticationLevel> 分配给此属性，请在 Machine.config 文件中，指定的默认值为<xref:System.Web.Configuration.ProcessModelComAuthenticationLevel>。</xref:System.Web.Configuration.ProcessModelComAuthenticationLevel> 在这种情况下，DCOM 进行身份验证的客户端的凭据仅当客户端建立与服务器之间的关系时。"
  example:
  - "The following code example shows how to access the ComAuthenticationLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#21](~/add/codesnippet/csharp/p-system.web.configurati_143_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#21](~/add/codesnippet/visualbasic/p-system.web.configurati_143_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelComAuthenticationLevel
      description: "之一<xref href=&quot;System.Web.Configuration.ProcessModelComAuthenticationLevel&quot;></xref>值。 默认值是<xref href=&quot;System.Web.Configuration.ProcessModelComAuthenticationLevel&quot;> </xref>。"
  overload: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  id: ComImpersonationLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值 COM 安全性的身份验证级别。"
  remarks: "当此属性的值设置为<xref:System.Web.Configuration.ProcessModelComImpersonationLevel>，DCOM 确定使用其普通的安全协商算法的模拟级别。</xref:System.Web.Configuration.ProcessModelComImpersonationLevel> 分配给此属性，请在 Machine.config 文件中，指定的默认值为<xref:System.Web.Configuration.ProcessModelComImpersonationLevel>。</xref:System.Web.Configuration.ProcessModelComImpersonationLevel> 在这种情况下，服务器进程可以模拟代表客户端操作时的客户端的安全上下文。"
  example:
  - "The following code example shows how to access the ComImpersonationLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#22](~/add/codesnippet/csharp/p-system.web.configurati_249_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#22](~/add/codesnippet/visualbasic/p-system.web.configurati_249_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelComImpersonationLevel
      description: "之一<xref href=&quot;System.Web.Configuration.ProcessModelComImpersonationLevel&quot;></xref>值。 默认值是<xref href=&quot;System.Web.Configuration.ProcessModelComImpersonationLevel&quot;> </xref>。"
  overload: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.CpuMask
  id: CpuMask
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
  fullName: System.Web.Configuration.ProcessModelSection.CpuMask
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值在多处理器服务器上的处理器均有资格运行 ASP.NET 进程。"
  remarks: "CpuMask 值指定的位模式的指示有资格运行 ASP.NET 线程 Cpu。 如果<xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>属性设置为`true`，CpuMask 限制为符合条件的 Cpu 数的工作进程。</xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> 允许的最大工作进程数等于的 Cpu 数。 默认情况下，启用所有的 Cpu 和 ASP.NET 启动一个进程，每个 CPU。 如果<xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>属性设置为`false`，将忽略 CpuMask 属性，并且只有一个辅助进程将运行。</xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>"
  example:
  - "The following code example shows how to access the CpuMask property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#25](~/add/codesnippet/csharp/p-system.web.configurati_174_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#25](~/add/codesnippet/visualbasic/p-system.web.configurati_174_1.vb)]"
  syntax:
    content: public int CpuMask { get; set; }
    return:
      type: System.Int32
      description: "该数值表示位模式来应用。 默认值为 0xFFFFFFFF。"
  overload: System.Web.Configuration.ProcessModelSection.CpuMask*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty
  id: ElementProperty
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
  fullName: System.Web.Configuration.ProcessModelSection.ElementProperty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "要添加。"
  overload: System.Web.Configuration.ProcessModelSection.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Enable
  id: Enable
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Enable
  nameWithType: ProcessModelSection.Enable
  fullName: System.Web.Configuration.ProcessModelSection.Enable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值指示是否启用的进程模型。"
  remarks: "启用属性指定是否在外部工作进程中承载 ASP.NET。 如果启用`true`，ASP.NET 是在外部工作进程中承载; 否则为它直接在 Inetinfo.exe 中运行。      1> [!NOTE]&1;> 不建议在 Inetinfo.exe 中运行 ASP.NET，因为这涉及到在本地系统安全上下文中运行应用程序。 ASP.NET 运行时在 Internet 信息服务 (IIS) 6 纯模式下，将忽略此设置，因此通常无需将其设置为`false`。"
  example:
  - "The following code example shows how to access the Enable property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#2](~/add/codesnippet/csharp/p-system.web.configurati_95_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_95_1.vb)]"
  syntax:
    content: public bool Enable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了进程模型;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Configuration.ProcessModelSection.Enable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout
  id: IdleTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
  fullName: System.Web.Configuration.ProcessModelSection.IdleTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值段不活动时间后 ASP.NET 自动将结束工作进程。"
  remarks: '达到 IdleTimeout 属性值时，将重启 （退信） 的工作进程。 默认情况下，只有两种情况会导致进程反弹︰ 进程超过了允许的内存限制，或进程超过允许的可排队的请求数。 可以将其他条件添加到默认类型。 例如，可以使用 IdleTimeout 属性限制工作进程处于空闲状态的时间。'
  example:
  - "The following code example shows how to access the IdleTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#16](~/add/codesnippet/csharp/p-system.web.configurati_88_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#16](~/add/codesnippet/visualbasic/p-system.web.configurati_88_1.vb)]"
  syntax:
    content: public TimeSpan IdleTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>值，该值指示的空闲时间。</xref:System.TimeSpan> 默认值为 Infinite，其对应于<xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Web.Configuration.ProcessModelSection.IdleTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.LogLevel
  id: LogLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
  fullName: System.Web.Configuration.ProcessModelSection.LogLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值记录到事件日志的事件类型。"
  remarks: "通过正确使用此属性，你可以筛选系统可以记录的错误。 了解应用程序的问题或瓶颈后，你可能想要设计收缩的错误你感兴趣的范围的策略。"
  example:
  - "The following code example shows how to access the LogLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#23](~/add/codesnippet/csharp/p-system.web.configurati_246_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#23](~/add/codesnippet/visualbasic/p-system.web.configurati_246_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelLogLevel LogLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelLogLevel
      description: "之一<xref href=&quot;System.Web.Configuration.ProcessModelLogLevel&quot;></xref>值。 默认值是<xref href=&quot;System.Web.Configuration.ProcessModelLogLevel&quot;> </xref>。"
  overload: System.Web.Configuration.ProcessModelSection.LogLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  id: MaxAppDomains
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
  fullName: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个进程中的应用程序域的最大允许的数目。"
  remarks: "如果超出 MaxAppDomains 阈值，则最少使用的应用程序域关闭的情况下如果必须启动新的应用程序域。"
  example:
  - "The following code example shows how to access the MaxAppDomains property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#27](~/add/codesnippet/csharp/p-system.web.configurati_284_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#27](~/add/codesnippet/visualbasic/p-system.web.configurati_284_1.vb)]"
  syntax:
    content: public int MaxAppDomains { get; set; }
    return:
      type: System.Int32
      description: "允许的最大的一个进程中的应用程序域的数目。"
  overload: System.Web.Configuration.ProcessModelSection.MaxAppDomains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  id: MaxIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值最大的每个 CLR 线程池中的 CPU 的 I/O 线程数。"
  remarks: "MaxIOThreads 的值必须等于或大于<xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>中设置`httpRuntime`配置节。</xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>       你可以对 CPU 使用率的某些控制通过设置工作线程和 I/O 线程数使用<xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>属性和 MaxIOThreads 属性分别。</xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>       线程的两种类型的区别是，后者绑定到 I/O 对象，如流或管道，而前者是传统不受限制的线程。 为 Internet 信息服务 (IIS) 6.0 和更高版本，ASP.NET 处理工作线程的请求。 这是因为 ASP.NET 集成在 IIS 内。       这些线程是从应用程序属于进程范围 CLR 线程池获取的。      1> [!NOTE]&1;> 通常允许的线程的默认值是不足以保障高的 CPU 使用率。 如果由于某种原因，你的应用程序速度较慢，可能在等待外部资源，你可能尝试增大到小于 100 的值的线程数。"
  example:
  - "The following code example shows how to access the MaxIOThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#5](~/add/codesnippet/csharp/p-system.web.configurati_295_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_295_1.vb)]"
  syntax:
    content: public int MaxIOThreads { get; set; }
    return:
      type: System.Int32
      description: "最大线程数。 默认值为 20。"
  overload: System.Web.Configuration.ProcessModelSection.MaxIOThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  id: MaxWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值最大工作线程，每个 CLR 线程池中的 CPU 量。"
  remarks: "MaxWorkerThreads 的值必须等于或大于<xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>中设置`httpRuntime`配置节。</xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>       你可以对 CPU 使用率的某些控制通过设置工作线程和 I/O 线程数使用 MaxWorkerThreads 属性和，<xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>属性，分别。</xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>       线程的两种类型的区别是，后者绑定到 I/O 对象，如流或管道，而前者是传统不受限制的线程。 为 Internet 信息服务 (IIS) 6.0 和更高版本，ASP.NET 处理工作线程的请求。 这是因为 ASP.NET 集成在 IIS 内。       这些线程是从应用程序属于进程范围 CLR 线程池获取的。      1> [!NOTE]&1;> 通常允许的线程的默认值是不足以保障高的 CPU 使用率。 如果由于某种原因，你的应用程序速度较慢，可能在等待外部资源，你可能尝试增大到小于 100 的值的线程数。"
  example:
  - "The following code example shows how to access the MaxWorkerThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#7](~/add/codesnippet/csharp/p-system.web.configurati_48_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_48_1.vb)]"
  syntax:
    content: public int MaxWorkerThreads { get; set; }
    return:
      type: System.Int32
      description: "最大线程数。 默认值为 20。"
  overload: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit
  id: MemoryLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
  fullName: System.Web.Configuration.ProcessModelSection.MemoryLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值允许的最大内存大小。"
  remarks: "内存大小表示为系统总内存的百分比。 这是工作进程可以使用 ASP.NET 重启 （反弹） 之前的内存量它。"
  example:
  - "The following code example shows how to access the MemoryLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#3](~/add/codesnippet/csharp/p-system.web.configurati_265_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_265_1.vb)]"
  syntax:
    content: public int MemoryLimit { get; set; }
    return:
      type: System.Int32
      description: "系统总内存的百分比。 默认值为 60%。"
  overload: System.Web.Configuration.ProcessModelSection.MemoryLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads
  id: MinIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinIOThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置 CLR 线程池中的最小每个 CPU 的 I/O 线程数。"
  remarks: ''
  example:
  - "The following code example shows how to access the MinIOThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#4](~/add/codesnippet/csharp/p-system.web.configurati_296_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_296_1.vb)]"
  syntax:
    content: public int MinIOThreads { get; set; }
    return:
      type: System.Int32
      description: "最小每个 CLR 线程池中的 CPU 的 I/O 线程数。"
  overload: System.Web.Configuration.ProcessModelSection.MinIOThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  id: MinWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置 CLR 线程池中的最小每个 CPU 的工作线程数。"
  remarks: ''
  example:
  - "The following code example shows how to access the MinWorkerThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#6](~/add/codesnippet/csharp/p-system.web.configurati_183_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_183_1.vb)]"
  syntax:
    content: public int MinWorkerThreads { get; set; }
    return:
      type: System.Int32
      description: "最小每个 CLR 线程池中的 CPU 的工作线程数"
  overload: System.Web.Configuration.ProcessModelSection.MinWorkerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Password
  id: Password
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Password
  nameWithType: ProcessModelSection.Password
  fullName: System.Web.Configuration.ProcessModelSection.Password
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值用于 Windows 标识的密码。"
  remarks: "密码属性必须与使用<xref:System.Web.Configuration.ProcessModelSection.UserName%2A>属性。</xref:System.Web.Configuration.ProcessModelSection.UserName%2A>       当存在时，这些属性值将导致要使用的配置的 Windows 标识运行的工作进程。"
  example:
  - "The following code example shows how to access the Password property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#20](~/add/codesnippet/csharp/p-system.web.configurati_258_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#20](~/add/codesnippet/visualbasic/p-system.web.configurati_258_1.vb)]"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "要使用的密码。 默认值为自动生成。"
  overload: System.Web.Configuration.ProcessModelSection.Password*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency
  id: PingFrequency
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
  fullName: System.Web.Configuration.ProcessModelSection.PingFrequency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值的 ISAPI 扩展执行 ping 操作以确定它是否正在运行的工作进程的时间间隔。"
  remarks: "如果未在运行 PingFrequency 间隔过期后，会重新启动 （退信） 的工作进程。"
  example:
  - "The following code example shows how to access the PingFrequency property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#13](~/add/codesnippet/csharp/p-system.web.configurati_14_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_14_1.vb)]"
  syntax:
    content: public TimeSpan PingFrequency { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>定义的时间间隔。</xref:System.TimeSpan> 默认值为 30 秒。"
  overload: System.Web.Configuration.ProcessModelSection.PingFrequency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout
  id: PingTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
  fullName: System.Web.Configuration.ProcessModelSection.PingTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值不响应的工作进程重新启动后的时间间隔。"
  remarks: "ISAPI 扩展 ping 工作进程在<xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A>间隔。</xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> 如果工作进程未在 PingTimeout 间隔内响应，将重启进程。"
  example:
  - "The following code example shows how to access the PingTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#14](~/add/codesnippet/csharp/p-system.web.configurati_399_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#14](~/add/codesnippet/visualbasic/p-system.web.configurati_399_1.vb)]"
  syntax:
    content: public TimeSpan PingTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>定义的时间间隔。</xref:System.TimeSpan> 默认值为 5 秒。"
  overload: System.Web.Configuration.ProcessModelSection.PingTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Properties
  id: Properties
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Properties
  nameWithType: ProcessModelSection.Properties
  fullName: System.Web.Configuration.ProcessModelSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "要添加。"
  overload: System.Web.Configuration.ProcessModelSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit
  id: RequestLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值允许回收工作进程之前的请求数。"
  remarks: "如果超出请求数，则 ASP.NET 自动启动一个新的辅助进程用于代替当前。"
  example:
  - "The following code example shows how to use the RequestLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#8](~/add/codesnippet/csharp/p-system.web.configurati_185_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_185_1.vb)]"
  syntax:
    content: public int RequestLimit { get; set; }
    return:
      type: System.Int32
      description: "允许的请求数。 默认值为 Infinite。"
  overload: System.Web.Configuration.ProcessModelSection.RequestLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  id: RequestQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值允许在队列中的请求数。"
  remarks: "如果队列中所允许的请求数超过了，ASP.NET 将开始返回&quot;503-服务器太忙&quot;为新请求的错误。 达到此限制后，系统在异常条件中运行。 这可能是一种故障的症状，或可能是，只高负载。 重新启动 （会传来传去） 的工作进程可能会防止再次出现问题的唯一方法。"
  example:
  - "The following code example shows how to use the RequestQueueLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/csharp/p-system.web.configurati_126_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_126_1.vb)]"
  syntax:
    content: public int RequestQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "允许要排队的请求数。 默认值为 5000。"
  overload: System.Web.Configuration.ProcessModelSection.RequestQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  id: ResponseDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值为工作进程响应的时间间隔。"
  remarks: "如果有排队的请求并且如果没有响应由 ResponseDeadlockInterval 定义的时间间隔期间，会重新启动该过程。"
  example:
  - "The following code example shows how to use the ResponseDeadlockInterval property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#17](~/add/codesnippet/csharp/p-system.web.configurati_402_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#17](~/add/codesnippet/visualbasic/p-system.web.configurati_402_1.vb)]"
  syntax:
    content: public TimeSpan ResponseDeadlockInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>定义间隔。</xref:System.TimeSpan> 默认值为 3 分钟。"
  overload: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  id: ResponseRestartDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "不再使用。"
  remarks: "此属性不再可供 ASP.NET，并提供有关向后兼容性。 如果已在配置文件中存在，它不会导致配置错误。 现在由控制发生死锁条件的所有回收<xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>属性。</xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>"
  example:
  - "The following code example shows how to access the ResponseRestartDeadlockInterval property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#11](~/add/codesnippet/csharp/p-system.web.configurati_58_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#11](~/add/codesnippet/visualbasic/p-system.web.configurati_58_1.vb)]"
  syntax:
    content: public TimeSpan ResponseRestartDeadlockInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "不适用。"
  overload: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  id: RestartQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值在等待新的工作进程来开始处理请求时被 ISAPI 排队的最大请求数。"
  remarks: "当超过此限制时，客户端请求将收到 503 错误，直到辅助进程已就绪。"
  example:
  - "The following code example shows how to access the RestartQueueLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#9](~/add/codesnippet/csharp/p-system.web.configurati_255_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_255_1.vb)]"
  syntax:
    content: public int RestartQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "排队的请求数。 默认值为 10。"
  overload: System.Web.Configuration.ProcessModelSection.RestartQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  id: ServerErrorMessageFile
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
  fullName: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值时出现致命错误，则必须使用其内容的文件。"
  remarks: "其内容使用而不是默认服务器不可用消息的文件。       文件位置可以是相对或绝对文件路径。"
  example:
  - "The following code example shows how to use the ServerErrorMessageFile property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#28](~/add/codesnippet/csharp/p-system.web.configurati_154_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#28](~/add/codesnippet/visualbasic/p-system.web.configurati_154_1.vb)]"
  syntax:
    content: public string ServerErrorMessageFile { get; set; }
    return:
      type: System.String
      description: "使用时出现错误的文件的路径。"
  overload: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  id: ShutdownTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
  fullName: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值允许要关闭的工作进程的时间。"
  remarks: "此属性指定为要正常关闭其自身的工作进程允许的分钟数。 当超时到期时，ASP.NET 关闭工作进程强制。"
  example:
  - "The following code example shows how to use the ShutdownTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#15](~/add/codesnippet/csharp/p-system.web.configurati_202_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#15](~/add/codesnippet/visualbasic/p-system.web.configurati_202_1.vb)]"
  syntax:
    content: public TimeSpan ShutdownTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>定义间隔。</xref:System.TimeSpan> 默认值为 5 秒。"
  overload: System.Web.Configuration.ProcessModelSection.ShutdownTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Timeout
  id: Timeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
  fullName: System.Web.Configuration.ProcessModelSection.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值的 ASP.NET 启动新的工作进程之前的分钟数。"
  remarks: "ASP.NET 将启动新的工作进程来代替当前。"
  example:
  - "The following code example shows how to use the Timeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/csharp/p-system.web.configurati_144_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_144_1.vb)]"
  syntax:
    content: public TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>定义间隔。</xref:System.TimeSpan> 默认值为 Infinite。"
  overload: System.Web.Configuration.ProcessModelSection.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.UserName
  id: UserName
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: UserName
  nameWithType: ProcessModelSection.UserName
  fullName: System.Web.Configuration.ProcessModelSection.UserName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值 Windows 标识的用户名。"
  remarks: "如果存在，则用户名将定义 Windows 标识不同于默认过程。 此标识用于运行 ASP.NET 工作进程。       默认情况下，用户名设置为特殊值机，并在一个名为 ASPNET 安装 ASP.NET 时自动创建的用户帐户下运行的进程。       <xref:System.Web.Configuration.ProcessModelSection.Password%2A>属性必须与用户名属性一起使用。</xref:System.Web.Configuration.ProcessModelSection.Password%2A>       当存在时，这些属性值将导致要使用的配置的 Windows 标识运行的工作进程。      1> [!NOTE]&1;> 如果 UserName 属性设置为系统中，使用密码自动生成，它定义将作为管理帐户运行该进程，并允许在该进程具有完全管理权限下运行的所有 ASP.NET 用户代码的实体。 因此，请密切注意到这种情况下，允许的权限。"
  example:
  - "The following code example shows how to access the UserName property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#19](~/add/codesnippet/csharp/p-system.web.configurati_166_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#19](~/add/codesnippet/visualbasic/p-system.web.configurati_166_1.vb)]"
  syntax:
    content: public string UserName { get; set; }
    return:
      type: System.String
      description: "用户名。 默认值为机。"
  overload: System.Web.Configuration.ProcessModelSection.UserName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.WebGarden
  id: WebGarden
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
  fullName: System.Web.Configuration.ProcessModelSection.WebGarden
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取或设置一个值，该值启用可用的 Cpu，以便运行辅助进程。"
  remarks: "WebGarden 属性必须与使用<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>属性。</xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>       如果 WebGarden 属性设置为`false`、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>属性将被忽略，并且只有一个辅助进程运行。</xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>      1> [!NOTE]&1;> 的多处理器的 Web 服务器称为 Web 园。"
  example:
  - "The following code example shows how to access the WebGarden property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#24](~/add/codesnippet/csharp/p-system.web.configurati_94_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#24](~/add/codesnippet/visualbasic/p-system.web.configurati_94_1.vb)]"
  syntax:
    content: public bool WebGarden { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<> *1> 用于将工作进程映射到符合条件的 Cpu; 数<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <>*> is ignored."
  overload: System.Web.Configuration.ProcessModelSection.WebGarden*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.ProcessModelSection.#ctor
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ProcessModelSection()
  nameWithType: ProcessModelSection.ProcessModelSection()
  fullName: System.Web.Configuration.ProcessModelSection.ProcessModelSection()
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
  fullName: System.Web.Configuration.ProcessModelSection.AutoConfig
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
  fullName: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelComAuthenticationLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelComAuthenticationLevel
  nameWithType: ProcessModelComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelComImpersonationLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelComImpersonationLevel
  nameWithType: ProcessModelComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelSection.CpuMask
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
  fullName: System.Web.Configuration.ProcessModelSection.CpuMask
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
  fullName: System.Web.Configuration.ProcessModelSection.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Web.Configuration.ProcessModelSection.Enable
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Enable
  nameWithType: ProcessModelSection.Enable
  fullName: System.Web.Configuration.ProcessModelSection.Enable
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
  fullName: System.Web.Configuration.ProcessModelSection.IdleTimeout
- uid: System.Web.Configuration.ProcessModelSection.LogLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
  fullName: System.Web.Configuration.ProcessModelSection.LogLevel
- uid: System.Web.Configuration.ProcessModelLogLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelLogLevel
  nameWithType: ProcessModelLogLevel
  fullName: System.Web.Configuration.ProcessModelLogLevel
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
  fullName: System.Web.Configuration.ProcessModelSection.MaxAppDomains
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
  fullName: System.Web.Configuration.ProcessModelSection.MemoryLimit
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.Password
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Password
  nameWithType: ProcessModelSection.Password
  fullName: System.Web.Configuration.ProcessModelSection.Password
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
  fullName: System.Web.Configuration.ProcessModelSection.PingFrequency
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
  fullName: System.Web.Configuration.ProcessModelSection.PingTimeout
- uid: System.Web.Configuration.ProcessModelSection.Properties
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Properties
  nameWithType: ProcessModelSection.Properties
  fullName: System.Web.Configuration.ProcessModelSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestLimit
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
  fullName: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
  fullName: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
- uid: System.Web.Configuration.ProcessModelSection.Timeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
  fullName: System.Web.Configuration.ProcessModelSection.Timeout
- uid: System.Web.Configuration.ProcessModelSection.UserName
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: UserName
  nameWithType: ProcessModelSection.UserName
  fullName: System.Web.Configuration.ProcessModelSection.UserName
- uid: System.Web.Configuration.ProcessModelSection.WebGarden
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
  fullName: System.Web.Configuration.ProcessModelSection.WebGarden
- uid: System.Web.Configuration.ProcessModelSection.#ctor*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ProcessModelSection
  nameWithType: ProcessModelSection.ProcessModelSection
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelSection.CpuMask*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
- uid: System.Web.Configuration.ProcessModelSection.Enable*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Enable
  nameWithType: ProcessModelSection.Enable
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
- uid: System.Web.Configuration.ProcessModelSection.LogLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.Password*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Password
  nameWithType: ProcessModelSection.Password
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
- uid: System.Web.Configuration.ProcessModelSection.Properties*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Properties
  nameWithType: ProcessModelSection.Properties
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
- uid: System.Web.Configuration.ProcessModelSection.Timeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
- uid: System.Web.Configuration.ProcessModelSection.UserName*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: UserName
  nameWithType: ProcessModelSection.UserName
- uid: System.Web.Configuration.ProcessModelSection.WebGarden*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
