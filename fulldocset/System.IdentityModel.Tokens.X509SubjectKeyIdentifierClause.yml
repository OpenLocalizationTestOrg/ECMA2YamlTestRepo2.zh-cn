### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  id: X509SubjectKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  langs:
  - csharp
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  type: Class
  summary: "表示密钥标识符子句，它标识<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>安全令牌使用 X.509 证书的主题密钥标识符扩展。"
  remarks: "通常情况下，X509SubjectKeyIdentifierClause 不需要时要使用，而不创建自定义安全令牌服务。 当安全令牌服务返回安全令牌时，已颁发的安全令牌将包含对附加的和未附加安全令牌的引用。 附加的引用指包含在 SOAP 消息的安全标头的安全令牌而未附加的引用是未包含在 SOAP 消息的安全标头的安全令牌。 这些引用通常确认已颁发的安全令牌的真实性。 使用<xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>类来引用<xref:System.IdentityModel.Tokens.X509SecurityToken>安全令牌使用 X.509 证书的主题密钥标识符扩展。</xref:System.IdentityModel.Tokens.X509SecurityToken> </xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A>方法返回主题密钥标识符扩展。</xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A>       [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]支持以下类型的安全令牌引用<xref:System.IdentityModel.Tokens.X509SecurityToken>安全令牌。</xref:System.IdentityModel.Tokens.X509SecurityToken>      - <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>- <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>-X509SubjectKeyIdentifierClause <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause></xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> </xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> </xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>"
  syntax:
    content: 'public class X509SubjectKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: X509SubjectKeyIdentifierClause(Byte[])
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&quot;></xref>类使用指定的使用者密钥标识符。"
  syntax:
    content: public X509SubjectKeyIdentifierClause (byte[] ski);
    parameters:
    - id: ski
      type: System.Byte[]
      description: "数组<xref:System.Byte>包含主题密钥标识符。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ski</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateFrom(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取一个值，该值指示是否可以为指定的 X.509 证书创建密钥标识符子句。"
  remarks: "可以创建密钥标识符子句，时`certificate`参数包含<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>扩展。</xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>"
  syntax:
    content: public static bool CanCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>包含 X.509 证书。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以为创建的密钥标识符子句<code> certificate </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  id: GetX509SubjectKeyIdentifier
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: GetX509SubjectKeyIdentifier()
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取主题密钥标识符。"
  syntax:
    content: public byte[] GetX509SubjectKeyIdentifier ();
    parameters: []
    return:
      type: System.Byte[]
      description: "数组<xref:System.Byte>包含主题密钥标识符。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: Matches(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回一个值，该值指示此实例的密钥标识符是否等效于指定的 X.509 证书的密钥标识符。"
  remarks: "匹配方法比较<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>两个 X.509 证书的扩展。</xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>"
  syntax:
    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> ，其中包含要比较的 X.509 证书。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> certificate </code>具有相同主题密钥标识符与当前实例; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: X509SubjectKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回表示当前对象的字符串。"
  remarks: "ToString 方法返回主题密钥标识符。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>，表示当前对象。</xref:System.String>"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  id: TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建使用指定的 X.509 证书的密钥标识符子句。"
  remarks: "A<xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>包含主题密钥标识符时可以为 X.509 证书创建密钥标识符子句。</xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>"
  syntax:
    content: public static bool TryCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, out System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>若要创建的密钥标识符子句。"
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
      description: "此方法返回时，包含<xref href=&quot;System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&quot;></xref>表示密钥标识符子句。 此参数传递时未经初始化。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>当可以为指定的 X.509 证书; 中创建的密钥标识符子句否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: X509SubjectKeyIdentifierClause(Byte[])
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: CanCreateFrom(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: GetX509SubjectKeyIdentifier()
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: Matches(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: X509SubjectKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: CanCreateFrom
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: GetX509SubjectKeyIdentifier
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: X509SubjectKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: X509SubjectKeyIdentifierClause.ToString
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: TryCreateFrom
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom
