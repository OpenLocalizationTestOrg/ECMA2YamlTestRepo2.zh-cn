### YamlMime:ManagedReference
items:
- uid: System.Web.Handlers.ScriptResourceHandler
  id: ScriptResourceHandler
  children:
  - System.Web.Handlers.ScriptResourceHandler.#ctor
  - System.Web.Handlers.ScriptResourceHandler.IsReusable
  - System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  - System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  - System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: ScriptResourceHandler
  nameWithType: ScriptResourceHandler
  fullName: System.Web.Handlers.ScriptResourceHandler
  type: Class
  summary: "提供用于处理作为资源嵌入在程序集的脚本文件的请求的 HTTP 处理程序。 此类不能被继承。"
  remarks: "ScriptResourceHandler 类处理所有请求的嵌入的脚本文件的引用通过<xref:System.Web.UI.ScriptManager>类。</xref:System.Web.UI.ScriptManager> ScriptResourceHandler 对象检索嵌入的脚本库和脚本库的所有本地化的资源。 如果<xref:System.Web.UI.ScriptReference.NotifyScriptLoaded%2A>属性设置为`true`，ScriptResourceHandler 对象添加到对象的方法的调用是脚本文件的末尾。</xref:System.Web.UI.ScriptReference.NotifyScriptLoaded%2A>       默认情况下，ScriptResourceHandler 类压缩，并为 Internet Explorer 7 缓存嵌入的脚本文件。 你可以打开压缩和缓存通过<xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression%2A>和<xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching%2A>属性的<xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection>类。</xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection> </xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching%2A> </xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression%2A> 在 Web.config 文件中设置这些属性。      1> [!NOTE] 1> 可开启压缩为早期版本的 Internet Explorer 通过为 Web.config 文件的部分中的 Internet Explorer 7 创建别名。 然后以编程方式设置的值<xref:System.Web.UI.Page.ClientTarget%2A>到该别名的属性。</xref:System.Web.UI.Page.ClientTarget%2A> 但是，我们不建议此方法因为它将导致性能降低，它引入了巨大的风险的错误。       为启用了 AJAX 的 ASP.NET Web 应用程序的默认 Web.config 文件添加 ScriptResourceHandler 作为处理程序。 手动可以将该处理程序添加到你的应用程序，通过在 Web.config 文件中包含以下元素︰```   <httpHandlers>     <add verb=&quot;GET,HEAD&quot; path=&quot;ScriptResource.axd&quot;        type=&quot;System.Web.Handlers.ScriptResourceHandler,        System.Web.Extensions, Version=1.0.61025.0, Culture=neutral,        PublicKeyToken=31bf3856ad364e35&quot; validate=&quot;false&quot; />   </httpHandlers>   ```"
  syntax:
    content: 'public class ScriptResourceHandler : System.Web.IHttpHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor
  id: '#ctor'
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: ScriptResourceHandler()
  nameWithType: ScriptResourceHandler.ScriptResourceHandler()
  fullName: System.Web.Handlers.ScriptResourceHandler.ScriptResourceHandler()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "初始化的新实例<xref href=&quot;System.Web.Handlers.ScriptResourceHandler&quot;></xref>类。"
  syntax:
    content: public ScriptResourceHandler ();
    parameters: []
  overload: System.Web.Handlers.ScriptResourceHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable
  id: IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.IsReusable
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "当在派生类中重写，获取一个值，该值指示另一个请求是否可以使用类的实例。"
  syntax:
    content: protected virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.Handlers.ScriptResourceHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "当在派生类中重写，进程 HTTP Web 请求针对作为资源嵌入到程序集中的脚本文件。"
  syntax:
    content: protected virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>提供对内部服务器对象的引用的对象 (例如， <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>，和<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>)，用于 HTTP 请求提供服务。"
  overload: System.Web.Handlers.ScriptResourceHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  id: System#Web#IHttpHandler#IsReusable
  isEii: true
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "获取一个值，该值指示是否可以使用另一个请求<xref href=&quot;System.Web.IHttpHandler&quot;></xref>实例。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.Handlers.ScriptResourceHandler>实例被强制转换为<xref:System.Web.IHttpHandler>接口。</xref:System.Web.IHttpHandler> </xref:System.Web.Handlers.ScriptResourceHandler>"
  syntax:
    content: bool System.Web.IHttpHandler.IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  id: System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  isEii: true
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "处理作为资源嵌入到程序集中的脚本文件的 HTTP Web 请求。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.Handlers.ScriptResourceHandler>实例被强制转换为<xref:System.Web.IHttpHandler>接口。</xref:System.Web.IHttpHandler> </xref:System.Web.Handlers.ScriptResourceHandler>"
  syntax:
    content: void IHttpHandler.ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>提供对内部服务器对象的引用的对象 (例如， <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>，和<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>)，用于 HTTP 请求提供服务。"
  overload: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "嵌入的脚本调试和发布版本的类型名称不匹配。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ScriptResourceHandler()
  nameWithType: ScriptResourceHandler.ScriptResourceHandler()
  fullName: System.Web.Handlers.ScriptResourceHandler.ScriptResourceHandler()
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ScriptResourceHandler
  nameWithType: ScriptResourceHandler.ScriptResourceHandler
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: ScriptResourceHandler.ProcessRequest
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest
