### YamlMime:ManagedReference
items:
- uid: System.Configuration.DefaultSettingValueAttribute
  id: DefaultSettingValueAttribute
  children:
  - System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  - System.Configuration.DefaultSettingValueAttribute.Value
  langs:
  - csharp
  name: DefaultSettingValueAttribute
  nameWithType: DefaultSettingValueAttribute
  fullName: System.Configuration.DefaultSettingValueAttribute
  type: Class
  summary: "指定应用程序设置属性的默认值。"
  remarks: "> [!IMPORTANT]1> DefaultSettingValueAttribute 只能应用到单个设置属性︰若要将此特性应用于整个应用程序设置类无效。       不同的设置提供程序可能有不同的要求或限制 DefaultSettingValueAttribute 的使用。 例如，<xref:System.Configuration.LocalFileSettingsProvider>不需要此属性，并且将重写提供此属性，如果有任何值的任何值-默认值或用户修改-数据存储区中已存在。</xref:System.Configuration.LocalFileSettingsProvider>       DefaultSettingValueAttribute 需要默认值可以表示为字符串。 因此，使用 XML 序列化的设置不能具有通过此属性指定的默认值。 某些提供程序可以选择支持多个可以在编译时使用<xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute>指定序列化方案      1> [!CAUTION]&1;> 指定此属性的默认值存储为纯文本生成的已编译.exe 或.dll 文件中。 因此这些默认值是本质上是不安全的。"
  example:
  - "The following code example demonstrates the use of the DefaultSettingValueAttribute applied to three of the four properties of the `FormSettings` wrapper class, which is derived from the <xref:System.Configuration.ApplicationSettingsBase> class. This class is used to persist the location, size, background color, and text of form. The first three of these form properties have default values associated with them.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#9](~/add/codesnippet/cpp/t-system.configuration.d_1.cpp)]\n [!code-cs[AppSettingsSample#9](~/add/codesnippet/csharp/t-system.configuration.d_1.cs)]\n [!code-vb[AppSettingsSample#9](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#9)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class DefaultSettingValueAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.DefaultSettingValueAttribute
  langs:
  - csharp
  name: DefaultSettingValueAttribute(String)
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  fullName: System.Configuration.DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的实例<xref href=&quot;System.Configuration.DefaultSettingValueAttribute&quot;></xref>类。"
  remarks: "所提供的字符串必须是与属性类型关联的可用序列化机制与兼容的值。 例如，如果该属性属于类型<xref:System.Drawing.Color>，则`value`的`&quot;Azure&quot;`有效。</xref:System.Drawing.Color>      1> [!CAUTION]&1;> 指定此属性的默认值存储为纯文本生成的已编译.exe 或.dll 文件中。 因此这些默认值是本质上是不安全的。"
  syntax:
    content: public DefaultSettingValueAttribute (string value);
    parameters:
    - id: value
      type: System.String
      description: "A<xref:System.String>表示属性的默认值。</xref:System.String>"
  overload: System.Configuration.DefaultSettingValueAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.DefaultSettingValueAttribute.Value
  id: Value
  parent: System.Configuration.DefaultSettingValueAttribute
  langs:
  - csharp
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
  fullName: System.Configuration.DefaultSettingValueAttribute.Value
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "获取应用程序设置属性的默认值。"
  remarks: "在中设置的值属性<xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A>构造函数。</xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A>       设置提供程序可能支持多个可以使用<xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute>指定的序列化方案"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "A<xref:System.String>表示属性的默认值。</xref:System.String>"
  overload: System.Configuration.DefaultSettingValueAttribute.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: DefaultSettingValueAttribute(String)
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  fullName: System.Configuration.DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.DefaultSettingValueAttribute.Value
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
  fullName: System.Configuration.DefaultSettingValueAttribute.Value
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor*
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: DefaultSettingValueAttribute
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute
- uid: System.Configuration.DefaultSettingValueAttribute.Value*
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
