### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ServiceDomain
  id: ServiceDomain
  children:
  - System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  - System.EnterpriseServices.ServiceDomain.Leave
  langs:
  - csharp
  name: ServiceDomain
  nameWithType: ServiceDomain
  fullName: System.EnterpriseServices.ServiceDomain
  type: Class
  summary: "允许由标识代码段<> *1> 和<> *1> 若要在其自己的上下文中运行和行为就像它是在上下文中创建的对象调用的方法。 此类不能被继承。"
  remarks: "<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>方法中对使用以然后，可以使用 COM + 服务的代码外侧。</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 括调用的代码<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>在其自己的上下文中运行，行为方式就像它是在上下文中创建的对象调用的方法。</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>对可以嵌套。</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 由用户负责确保平衡对的调用，以便<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>匹配<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.</xref:System.EnterpriseServices.ServiceDomain.Enter%2A>的以前调用</xref:System.EnterpriseServices.ServiceDomain.Leave%2A>的每个调用"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ServiceDomain
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  id: Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "创建指定的上下文<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>对象，并将其推入到上下文堆栈成为当前上下文。"
  remarks: "输入首次创建配置为指定的上下文<xref:System.EnterpriseServices.ServiceConfig>作为传递对象`cfg`参数。</xref:System.EnterpriseServices.ServiceConfig> 就像方法调用出现，然后将触发客户端和服务器端上的策略。 新的上下文然后推送到上下文堆栈，并成为当前上下文。 由于它们高效的设计和因为涉及没有线程封送处理，请使用 enter 键和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>涉及显著减少开销相比的等效方法调用。</xref:System.EnterpriseServices.ServiceDomain.Leave%2A>"
  syntax:
    content: public static void Enter (System.EnterpriseServices.ServiceConfig cfg);
    parameters:
    - id: cfg
      type: System.EnterpriseServices.ServiceConfig
      description: "A <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref>包含要在所包含的代码中使用的服务的配置信息。"
  overload: System.EnterpriseServices.ServiceDomain.Enter*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>当前平台上不支持。"
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Leave
  id: Leave
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "就像方法调用已返回将触发服务器，然后选择客户端的策略。 然后从上下文堆栈，并且正在运行时的上下文中弹出当前上下文<xref:System.EnterpriseServices.ServiceDomain.Enter*>调用成为当前上下文。</xref:System.EnterpriseServices.ServiceDomain.Enter*>"
  syntax:
    content: public static System.EnterpriseServices.TransactionStatus Leave ();
    parameters: []
    return:
      type: System.EnterpriseServices.TransactionStatus
      description: "之一<xref href=&quot;System.EnterpriseServices.TransactionStatus&quot;></xref>值。"
  overload: System.EnterpriseServices.ServiceDomain.Leave*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>当前平台上不支持。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
- uid: System.EnterpriseServices.ServiceConfig
  parent: System.EnterpriseServices
  isExternal: false
  name: ServiceConfig
  nameWithType: ServiceConfig
  fullName: System.EnterpriseServices.ServiceConfig
- uid: System.EnterpriseServices.ServiceDomain.Leave
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
- uid: System.EnterpriseServices.TransactionStatus
  parent: System.EnterpriseServices
  isExternal: false
  name: TransactionStatus
  nameWithType: TransactionStatus
  fullName: System.EnterpriseServices.TransactionStatus
- uid: System.EnterpriseServices.ServiceDomain.Enter*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter
  nameWithType: ServiceDomain.Enter
- uid: System.EnterpriseServices.ServiceDomain.Leave*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave
  nameWithType: ServiceDomain.Leave
