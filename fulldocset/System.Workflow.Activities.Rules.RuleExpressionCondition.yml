### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition
  id: RuleExpressionCondition
  children:
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  - System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  - System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  - System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  langs:
  - csharp
  name: RuleExpressionCondition
  nameWithType: RuleExpressionCondition
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition
  type: Class
  summary: "定义后面的条件定义<xref href=&quot;System.Workflow.Activities.Rules.RuleConditionReference&quot;> </xref>。 此类不能被继承。"
  remarks: "RuleExpressionCondition 类定义基评估条件时<xref:System.Workflow.Activities.Rules.RuleSet>执行。</xref:System.Workflow.Activities.Rules.RuleSet>       此条件类型用 CodeDom 类型建模。 有关使用 CodeDom 类型的详细信息，请参阅[CodeDOM 支持的 Windows Workflow Foundation 的类型](http://msdn.microsoft.com/en-us/0381740f-0a29-43ae-96e2-17e14e832083)。"
  syntax:
    content: 'public sealed class RuleExpressionCondition : System.Workflow.Activities.Rules.RuleCondition'
  inheritance:
  - System.Object
  - System.Workflow.Activities.Rules.RuleCondition
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition()
  nameWithType: RuleExpressionCondition.RuleExpressionCondition()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;></xref>类。"
  syntax:
    content: public RuleExpressionCondition ();
    parameters: []
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  id: '#ctor(System.CodeDom.CodeExpression)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;></xref>通过使用指定的代码表达式的类。"
  syntax:
    content: public RuleExpressionCondition (System.CodeDom.CodeExpression expression);
    parameters:
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>初始化<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;></xref>使用。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(String)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;></xref>使用指定的名称的类。"
  syntax:
    content: public RuleExpressionCondition (string conditionName);
    parameters:
    - id: conditionName
      type: System.String
      description: "要计算的条件的名称。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>conditionName</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  id: '#ctor(System.String,System.CodeDom.CodeExpression)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(String,CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;></xref>通过使用指定的名称和代码表达式的类。"
  syntax:
    content: public RuleExpressionCondition (string conditionName, System.CodeDom.CodeExpression expression);
    parameters:
    - id: conditionName
      type: System.String
      description: "要计算的条件的名称。"
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>初始化<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;></xref>使用。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  id: Clone
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Clone()
  nameWithType: RuleExpressionCondition.Clone()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "创建当前的深层副本<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref>。"
  syntax:
    content: public override System.Workflow.Activities.Rules.RuleCondition Clone ();
    parameters: []
    return:
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "A <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref>与此实例完全相同。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RuleExpressionCondition.Equals(Object)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(Object)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "确定两个对象实例是否相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>与当前对象进行比较。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对象实例相等，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  id: Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Evaluate(RuleExecution)
  nameWithType: RuleExpressionCondition.Evaluate(RuleExecution)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(RuleExecution)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "计算的表达式。"
  syntax:
    content: public override bool Evaluate (System.Workflow.Activities.Rules.RuleExecution execution);
    parameters:
    - id: execution
      type: System.Workflow.Activities.Rules.RuleExecution
      description: "运行时上下文的实例， <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref>中运行。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果表达式的计算结果为 true;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  id: Expression
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "获取或设置要计算的表达式条件。"
  syntax:
    content: public System.CodeDom.CodeExpression Expression { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "要计算的表达式条件。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression*
  exceptions:
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "运行活动<xref href=&quot;System.Workflow.Activities.Rules.RuleSet&quot;></xref>运行时初始化。"
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  id: GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: GetDependencies(RuleValidation)
  nameWithType: RuleExpressionCondition.GetDependencies(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(RuleValidation)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "获取的依赖关系<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref>。"
  syntax:
    content: public override System.Collections.Generic.ICollection<string> GetDependencies (System.Workflow.Activities.Rules.RuleValidation validation);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref>若要管理验证过程。"
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "依赖项的列表。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  id: GetHashCode
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RuleExpressionCondition.GetHashCode()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "返回此实例的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "此实例的哈希代码。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  id: Name
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Name
  nameWithType: RuleExpressionCondition.Name
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "获取或设置要计算的条件的名称。"
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "要计算的条件的名称。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Name*
  exceptions:
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "运行活动<xref href=&quot;System.Workflow.Activities.Rules.RuleSet&quot;></xref>运行时初始化。"
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  id: OnRuntimeInitialized
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: OnRuntimeInitialized()
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "当已为所有属性都指定值时调用。"
  remarks: "此调用后，可以不修改任何属性。"
  syntax:
    content: public override void OnRuntimeInitialized ();
    parameters: []
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  id: ToString
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: ToString()
  nameWithType: RuleExpressionCondition.ToString()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "返回表达式条件的字符串值。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表达式条件的字符串值。 如果表达式条件为一个空字符串<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  id: Validate(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Validate(RuleValidation)
  nameWithType: RuleExpressionCondition.Validate(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(RuleValidation)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "验证表达式配置正确且没有错误。"
  remarks: "如果<xref:System.Workflow.Activities.Rules.RuleExpressionCondition>包含错误 (`Validate`方法返回`false`)，然后<xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName>将包含遇到的错误的列表。</xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName> </xref:System.Workflow.Activities.Rules.RuleExpressionCondition>"
  syntax:
    content: public override bool Validate (System.Workflow.Activities.Rules.RuleValidation validation);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref>若要管理验证过程。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果表达式没有错误;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>validator</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
references:
- uid: System.Workflow.Activities.Rules.RuleCondition
  isExternal: false
  name: System.Workflow.Activities.Rules.RuleCondition
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition()
  nameWithType: RuleExpressionCondition.RuleExpressionCondition()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(String)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(String,CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Clone()
  nameWithType: RuleExpressionCondition.Clone()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Equals(Object)
  nameWithType: RuleExpressionCondition.Equals(Object)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Evaluate(RuleExecution)
  nameWithType: RuleExpressionCondition.Evaluate(RuleExecution)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(RuleExecution)
- uid: System.Workflow.Activities.Rules.RuleExecution
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleExecution
  nameWithType: RuleExecution
  fullName: System.Workflow.Activities.Rules.RuleExecution
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetDependencies(RuleValidation)
  nameWithType: RuleExpressionCondition.GetDependencies(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(RuleValidation)
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.Rules.RuleValidation
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleValidation
  nameWithType: RuleValidation
  fullName: System.Workflow.Activities.Rules.RuleValidation
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetHashCode()
  nameWithType: RuleExpressionCondition.GetHashCode()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Name
  nameWithType: RuleExpressionCondition.Name
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: OnRuntimeInitialized()
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: ToString()
  nameWithType: RuleExpressionCondition.ToString()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Validate(RuleValidation)
  nameWithType: RuleExpressionCondition.Validate(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(RuleValidation)
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition
  nameWithType: RuleExpressionCondition.RuleExpressionCondition
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Clone
  nameWithType: RuleExpressionCondition.Clone
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Equals
  nameWithType: RuleExpressionCondition.Equals
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Evaluate
  nameWithType: RuleExpressionCondition.Evaluate
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetDependencies
  nameWithType: RuleExpressionCondition.GetDependencies
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetHashCode
  nameWithType: RuleExpressionCondition.GetHashCode
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Name
  nameWithType: RuleExpressionCondition.Name
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: OnRuntimeInitialized
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: ToString
  nameWithType: RuleExpressionCondition.ToString
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Validate
  nameWithType: RuleExpressionCondition.Validate
