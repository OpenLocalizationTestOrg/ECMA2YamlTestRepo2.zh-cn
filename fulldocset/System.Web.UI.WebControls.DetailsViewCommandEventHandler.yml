### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  id: DetailsViewCommandEventHandler
  langs:
  - csharp
  name: DetailsViewCommandEventHandler
  nameWithType: DetailsViewCommandEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  type: Delegate
  summary: "表示处理的方法<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCommand&quot;></xref>事件<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>控件都将引发<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>事件中的按钮时<xref:System.Web.UI.WebControls.ButtonField>， <xref:System.Web.UI.WebControls.CommandField>，或<xref:System.Web.UI.WebControls.TemplateField>单击行字段。</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> 这使您可以提供的事件处理程序每次此事件发生时执行的自定义的例程。      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.DetailsView>控件还将引发单击某些按钮时的其他专用的事件 (与按钮`CommandName`属性设置为&quot;Delete&quot;、&quot;插入&quot;、&quot;页上，&quot;或&quot;更新&quot;)。</xref:System.Web.UI.WebControls.DetailsView> 在使用这些按钮之一时，应考虑使用该控件提供的专用事件之一 (如<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>或<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>)。</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>       当创建 DetailsViewCommandEventHandler 委托时，需要标识将处理该事件的方法。 若要将事件与事件处理程序关联，添加到事件的委托的一个实例。 除非移除了该委托，称为每当发生该事件时，事件处理程序。 有关事件处理程序委托的详细信息，请参阅[NIB︰ 事件和委托](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。"
  example:
  - "The following code example demonstrates how to programmatically add a DetailsViewCommandEventHandler delegate to the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event of a <xref:System.Web.UI.WebControls.DetailsView> control. This example uses the single-file coding model.  \n  \n [!code-vb[DetailsViewCommandEventHandlerCodeInline#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_1.aspx)]\n [!code-cs[DetailsViewCommandEventHandlerCodeInline#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_1.aspx)]  \n  \n The following code example shows a code-behind coding model version of the previous example. For this example to work, you must copy the code below into the associated code-behind file.  \n  \n [!code-cs[DetailsViewCommandEventHandlerCodeBehind#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_2.aspx)]\n [!code-vb[DetailsViewCommandEventHandlerCodeBehind#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_2.aspx)]  \n  \n The following code example shows the code-behind file for the previous example.  \n  \n [!code-vb[DetailsViewCommandEventHandlerCodeBehind#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_3.vb)]\n [!code-cs[DetailsViewCommandEventHandlerCodeBehind#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_3.cs)]  \n  \n The following code example demonstrates how to declaratively add a DetailsViewCommandEventHandler delegate to the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event of a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_4.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_4.aspx)]"
  syntax:
    content: public delegate void DetailsViewCommandEventHandler(object sender, DetailsViewCommandEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
