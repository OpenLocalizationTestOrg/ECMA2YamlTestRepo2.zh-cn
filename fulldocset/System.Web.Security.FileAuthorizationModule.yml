### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FileAuthorizationModule
  id: FileAuthorizationModule
  children:
  - System.Web.Security.FileAuthorizationModule.#ctor
  - System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  - System.Web.Security.FileAuthorizationModule.Dispose
  - System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule
  fullName: System.Web.Security.FileAuthorizationModule
  type: Class
  summary: "验证用户有权访问所请求的文件。 此类不能被继承。"
  remarks: "此模块提供授权服务，文件系统的访问控制列表 (Acl)。 当`mode`属性[身份验证元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2)配置元素设置为`Windows`以便<xref:System.Web.Security.WindowsAuthenticationModule>模块会确保发出请求的用户允许 FileAuthorizationModule 读取或写入到的资源，具体取决于请求谓词的访问，在执行请求之前正用于应用程序，。</xref:System.Web.Security.WindowsAuthenticationModule> 有关详细信息，请参阅<xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>方法。</xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>"
  syntax:
    content: 'public sealed class FileAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "创建的实例<xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;></xref>类。"
  remarks: "此构造函数不应从应用程序代码中调用。       ASP.NET 调用此构造函数来创建实例的<xref:System.Web.Security.FileAuthorizationModule>类。</xref:System.Web.Security.FileAuthorizationModule> 后调用的构造函数，它调用<xref:System.Web.Security.FileAuthorizationModule.Init%2A>方法以初始化新<xref:System.Web.Security.FileAuthorizationModule>对象。</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule.Init%2A>"
  syntax:
    content: public FileAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  id: CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "确定用户是否可以访问到请求的文件。"
  remarks: "CheckFileAccessForUser 方法检查 Windows 访问令牌所表示的当前用户是否被授予访问权限的文件系统访问控制列表 (Acl) 中请求的文件。 虚拟路径映射到的物理文件系统路径之前进行检查。       用于发出请求的 HTTP 谓词是否`GET`， `POST`，或`HEAD`，CheckFileAccessForUser 方法检查文件的读取访问权限。 如果使用任何其他谓词，则 CheckFileAccessForUser 方法将检查文件的读/写权限。       **安全说明**如果<xref:System.Web.Security.FileAuthorizationModule>中未定义模块`httpModules`对应用程序的配置节<xref:System.Web.Security.FileAuthorizationModule>模块将始终返回`true`。</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public static bool CheckFileAccessForUser (string virtualPath, IntPtr token, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "文件的虚拟路径。"
    - id: token
      type: System.IntPtr
      description: "表示用户的 Windows 访问标记。"
    - id: verb
      type: System.String
      description: "用于发出请求的 HTTP 谓词。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果由当前的 Windows 用户表示<code> token </code>有权访问使用指定的 HTTP 谓词的文件或者如果<xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;></xref>模块不是在应用程序的配置文件中定义; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref:System.IntPtr.Zero>.       -or-       <code>verb</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>不是 Web 应用程序的应用程序目录结构。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件<code> virtualPath </code>不存在。"
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "释放所有资源，以外使用的内存<xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref>。"
  remarks: "此方法不应从应用程序代码中调用。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初始化<xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;></xref>对象。"
  remarks: "此方法不应从应用程序代码中调用。       Init 方法可确保<xref:System.Web.Security.FileAuthorizationModule>包含在处理<xref:System.Web.HttpApplication.AuthorizeRequest>事件。</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "当前<xref href=&quot;System.Web.HttpApplication&quot;></xref>实例。"
  overload: System.Web.Security.FileAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.FileAuthorizationModule.#ctor*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule.FileAuthorizationModule
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser
- uid: System.Web.Security.FileAuthorizationModule.Dispose*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: FileAuthorizationModule.Dispose
- uid: System.Web.Security.FileAuthorizationModule.Init*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: FileAuthorizationModule.Init
