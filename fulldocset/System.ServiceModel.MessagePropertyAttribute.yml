### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessagePropertyAttribute
  id: MessagePropertyAttribute
  children:
  - System.ServiceModel.MessagePropertyAttribute.#ctor
  - System.ServiceModel.MessagePropertyAttribute.Name
  langs:
  - csharp
  name: MessagePropertyAttribute
  nameWithType: MessagePropertyAttribute
  fullName: System.ServiceModel.MessagePropertyAttribute
  type: Class
  summary: "表示为具有自定义消息类型进行局部传递但没有序列化为 SOAP 消息的数据。"
  remarks: "MessagePropertyAttribute 属性用于将数据附加到自定义消息类型，通过传递[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]而无需进行数据序列化到 SOAP 消息的系统。"
  example:
  - "The following code example demonstrates the use of the MessagePropertyAttribute attribute.  \n  \n [!code-cs[messagepropertyattribute#0](~/add/codesnippet/csharp/t-system.servicemodel.me_2_1.cs)]\n [!code-vb[messagepropertyattribute#0](~/add/codesnippet/visualbasic/t-system.servicemodel.me_2_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, Inherited=false)]

      public sealed class MessagePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessagePropertyAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessagePropertyAttribute
  langs:
  - csharp
  name: MessagePropertyAttribute()
  nameWithType: MessagePropertyAttribute.MessagePropertyAttribute()
  fullName: System.ServiceModel.MessagePropertyAttribute.MessagePropertyAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.MessagePropertyAttribute&quot;></xref>类。"
  syntax:
    content: public MessagePropertyAttribute ();
    parameters: []
  overload: System.ServiceModel.MessagePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessagePropertyAttribute.Name
  id: Name
  parent: System.ServiceModel.MessagePropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: MessagePropertyAttribute.Name
  fullName: System.ServiceModel.MessagePropertyAttribute.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "获取或设置属性的名称。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "名称<xref href=&quot;System.ServiceModel.MessagePropertyAttribute&quot;></xref>属性。"
  overload: System.ServiceModel.MessagePropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ServiceModel.MessagePropertyAttribute.#ctor
  parent: System.ServiceModel.MessagePropertyAttribute
  isExternal: false
  name: MessagePropertyAttribute()
  nameWithType: MessagePropertyAttribute.MessagePropertyAttribute()
  fullName: System.ServiceModel.MessagePropertyAttribute.MessagePropertyAttribute()
- uid: System.ServiceModel.MessagePropertyAttribute.Name
  parent: System.ServiceModel.MessagePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: MessagePropertyAttribute.Name
  fullName: System.ServiceModel.MessagePropertyAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.MessagePropertyAttribute.#ctor*
  parent: System.ServiceModel.MessagePropertyAttribute
  isExternal: false
  name: MessagePropertyAttribute
  nameWithType: MessagePropertyAttribute.MessagePropertyAttribute
- uid: System.ServiceModel.MessagePropertyAttribute.Name*
  parent: System.ServiceModel.MessagePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: MessagePropertyAttribute.Name
