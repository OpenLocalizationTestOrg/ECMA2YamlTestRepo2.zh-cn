### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  id: DomainController
  children:
  - System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  - System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  - System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  - System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.DomainController.Domain
  - System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  - System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  - System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.Forest
  - System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  - System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  - System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  - System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  - System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  - System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  - System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  - System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  - System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  - System.DirectoryServices.ActiveDirectory.DomainController.Roles
  - System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  - System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  - System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  langs:
  - csharp
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
  type: Class
  summary: "域控制器类表示 Active Directory 域中的域控制器。"
  syntax:
    content: 'public class DomainController : System.DirectoryServices.ActiveDirectory.DirectoryServer'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.DirectoryServer
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Name
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: DomainController()
  nameWithType: DomainController.DomainController()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.DomainController()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "初始化的新实例<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;></xref>类。"
  syntax:
    content: protected DomainController ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.DomainController.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  id: CheckReplicationConsistency
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: CheckReplicationConsistency()
  nameWithType: DomainController.CheckReplicationConsistency()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "使用知识一致性检查器 (KCC) 来验证此域控制器的复制拓扑。"
  syntax:
    content: public override void CheckReplicationConsistency ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  id: CurrentTime
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: CurrentTime
  nameWithType: DomainController.CurrentTime
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "从此域控制器获取当前日期和时间。"
  syntax:
    content: public DateTime CurrentTime { get; }
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>对象，其中包含当前日期和时间从此域控制器。</xref:System.DateTime>"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DomainController.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "使对象释放所有的托管和/或非托管资源。"
  remarks: "`disposing`参数影响仅释放托管资源。 此方法始终释放非托管的资源。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "确定是否应释放托管的资源。 <xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>如果释放托管的资源;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain
  id: Domain
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Domain
  nameWithType: DomainController.Domain
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Domain
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取此域控制器是的成员的域。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Domain Domain { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>表示此域控制器是的成员的域的对象。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Domain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  id: EnableGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: EnableGlobalCatalog()
  nameWithType: DomainController.EnableGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "提升为全局编录服务器此域控制器。"
  remarks: "<xref:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog%2A?displayProperty=fullName>方法用于降级域控制器从全局目录服务器。</xref:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.DirectoryServices.ActiveDirectory.GlobalCatalog EnableGlobalCatalog ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref>表示全局编录服务器的对象。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  id: Finalize
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Finalize()
  nameWithType: DomainController.Finalize()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Finalize()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "重写&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;方法。"
  syntax:
    content: ~DomainController ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindAll(DirectoryContext)
  nameWithType: DomainController.FindAll(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在指定的上下文中查找所有域控制器。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>对象，其中包含的目标和凭据用于进行搜索。 此目标<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;></xref>对象是域控制器将搜索的域的名称。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref>对象，其中包含由搜索找到的域控制器。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>不是有效的。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindAll(DirectoryContext,String)
  nameWithType: DomainController.FindAll(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在指定的上下文和站点中查找所有域控制器。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>对象，其中包含的目标和凭据用于进行搜索。"
    - id: siteName
      type: System.String
      description: "要搜索域控制器的站点名称。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref>对象，其中包含由搜索已找到的域控制器。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>or <code>siteName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext)
  nameWithType: DomainController.FindOne(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在指定的上下文中查找单个域控制器。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>对象，其中包含的目标和凭据用于进行搜索。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>表示通过搜索已找到的域控制器的对象。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "找不到域控制器。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext,LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在指定的上下文中，允许其他搜索选项查找单个域控制器。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>对象，其中包含的目标和凭据用于进行搜索。"
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "一个或多个组合<xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;></xref>定义的域控制器，若要查找类型的成员。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>表示通过搜索已找到的域控制器的对象。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "找不到域控制器。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>或<code>flag</code>无效。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext,String)
  nameWithType: DomainController.FindOne(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在指定的上下文和站点中查找单个域控制器。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>对象，其中包含的目标和凭据用于进行搜索。"
    - id: siteName
      type: System.String
      description: "要搜索的域控制器的站点名称。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>表示通过搜索已找到的域控制器的对象。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "找不到域控制器。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>或<code>siteName</code>无效。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>or <code>siteName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext,String,LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext,String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "允许使用其他搜索选项中指定的上下文和站点，查找单个域控制器。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>对象，其中包含的目标和凭据用于进行搜索。"
    - id: siteName
      type: System.String
      description: "要搜索的域控制器的站点名称。"
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "一个或多个组合<xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;></xref>定义的域控制器，若要查找类型的成员。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>表示通过搜索已找到的域控制器的对象。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "找不到域控制器。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code><code>siteName</code>，或<code>flag</code>无效。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>or <code>siteName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest
  id: Forest
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Forest
  nameWithType: DomainController.Forest
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Forest
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取此域控制器所在的林。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>对象，它表示此域控制器所在的林。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Forest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  id: GetAllReplicationNeighbors
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetAllReplicationNeighbors()
  nameWithType: DomainController.GetAllReplicationNeighbors()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索此域控制器的复制邻居。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection&quot;> </xref>对象，其中包含此域控制器的复制邻居。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  id: GetDirectorySearcher
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetDirectorySearcher()
  nameWithType: DomainController.GetDirectorySearcher()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>域控制器对象。"
  syntax:
    content: public virtual System.DirectoryServices.DirectorySearcher GetDirectorySearcher ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectorySearcher
      description: "A <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>域控制器对象。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetDomainController(DirectoryContext)
  nameWithType: DomainController.GetDomainController(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;></xref>指定上下文的对象。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController GetDomainController (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>包含目标和凭据以用来检索对象的对象。 此上下文的目标必须是域控制器。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>表示找到的域控制器的对象。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "中指定的目标的连接<code> context </code>无法建立。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>不是有效的。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  id: GetReplicationConnectionFailures
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationConnectionFailures()
  nameWithType: DomainController.GetReplicationConnectionFailures()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索此域控制器记录复制连接失败的列表。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection&quot;> </xref>对象，其中包含此域控制器记录的复制连接失败。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  id: GetReplicationCursors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationCursors(String)
  nameWithType: DomainController.GetReplicationCursors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索指定的分区的复制光标信息。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: "为其检索复制光标信息分区的可分辨的名称。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection&quot;> </xref>包含复制光标信息。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partition</code>为一个空字符串。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  id: GetReplicationMetadata(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationMetadata(String)
  nameWithType: DomainController.GetReplicationMetadata(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索特定的 Active Directory 域服务对象的复制元数据。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);
    parameters:
    - id: objectPath
      type: System.String
      description: "为其检索复制元数据对象的路径。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata&quot;> </xref>对象，其中包含指定的对象的复制元数据。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>objectPath</code>不是有效的。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  id: GetReplicationNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationNeighbors(String)
  nameWithType: DomainController.GetReplicationNeighbors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索指定的分区的复制邻居。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: "为其检索复制邻居分区的可分辨的名称。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection&quot;> </xref>对象，其中包含此对象的复制邻居。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partition</code>不是有效的。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  id: GetReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationOperationInformation()
  nameWithType: DomainController.GetReplicationOperationInformation()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "检索当前和挂起的此域控制器的复制操作。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation&quot;> </xref>对象，其中包含当前和挂起的复制操作。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  id: HighestCommittedUsn
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: HighestCommittedUsn
  nameWithType: DomainController.HighestCommittedUsn
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取已提交到此域控制器的最高更新序列号。"
  syntax:
    content: public long HighestCommittedUsn { get; }
    return:
      type: System.Int64
      description: "最高更新序列号 (USN) 已提交到此域控制器。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  id: InboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: InboundConnections
  nameWithType: DomainController.InboundConnections
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取此域控制器的入站的复制连接。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection&quot;> </xref>对象，其中包含此域控制器的入站的复制连接。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  id: IPAddress
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: IPAddress
  nameWithType: DomainController.IPAddress
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取此域控制器的 IP 地址。"
  syntax:
    content: public override string IPAddress { get; }
    return:
      type: System.String
      description: "以字符串形式此域控制器的 Internet 协议 (IP) 地址。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  id: IsGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: IsGlobalCatalog()
  nameWithType: DomainController.IsGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "确定此域控制器是否为全局编录服务器。"
  syntax:
    content: public virtual bool IsGlobalCatalog ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此域控制器是全局编录服务器或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>否则为。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  id: OSVersion
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: OSVersion
  nameWithType: DomainController.OSVersion
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取此域控制器的操作系统版本。"
  syntax:
    content: public string OSVersion { get; }
    return:
      type: System.String
      description: "正在使用此域控制器上的操作系统版本。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  id: OutboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: OutboundConnections
  nameWithType: DomainController.OutboundConnections
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取此域控制器的出站复制连接。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection&quot;> </xref>对象，其中包含此域控制器的出站复制连接。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles
  id: Roles
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Roles
  nameWithType: DomainController.Roles
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Roles
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取此域控制器服务的角色。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection Roles { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection&quot;> </xref>对象，其中包含一套<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole&quot;></xref>指示此域控制器服务的角色的成员。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Roles*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  id: SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SeizeRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "导致此域控制器，才能指定角色的所有权。"
  remarks: "此方法是服务器的破坏性操作，因为它会导致不当前包含的角色的协作的情况下要执行的角色。 <xref:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership%2A?displayProperty=fullName>方法应改为使用尽可能。</xref:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership%2A?displayProperty=fullName>"
  syntax:
    content: public void SeizeRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
      description: "之一<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole&quot;></xref>指定哪个角色的域控制器应采用的所有权的成员。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>role</code>不是有效的。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  id: SiteName
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SiteName
  nameWithType: DomainController.SiteName
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取此域控制器所属的站点的名称。"
  syntax:
    content: public override string SiteName { get; }
    return:
      type: System.String
      description: "此域控制器所属的站点名称。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SiteName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "找不到该站点的名称。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  id: SyncFromAllServersCallback
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncFromAllServersCallback
  nameWithType: DomainController.SyncFromAllServersCallback
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取或设置此域控制器的同步委托。"
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }
    return:
      type: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.SyncUpdateCallback&quot;> </xref>将用于同步通知的委托。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  id: SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  nameWithType: DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "导致此域控制器与所有其他域控制器同步指定的分区。"
  remarks: "默认情况下，将仅与同一站点中的其他域控制器进行复制。 如果`options`参数包含<xref:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions>值，则与在林中的所有域控制器将会进行复制。</xref:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions>"
  syntax:
    content: public override void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);
    parameters:
    - id: partition
      type: System.String
      description: "要同步的域控制器的分区的可分辨的名称。"
    - id: options
      type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
      description: "一个或多个组合<xref href=&quot;System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions&quot;></xref>成员。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partition</code>不是有效的。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  - type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException
    description: "同步操作过程中出错。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  id: SyncReplicaFromServer(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncReplicaFromServer(String,String)
  nameWithType: DomainController.SyncReplicaFromServer(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "导致此域控制器与指定的域控制器同步指定的分区。"
  syntax:
    content: public override void SyncReplicaFromServer (string partition, string sourceServer);
    parameters:
    - id: partition
      type: System.String
      description: "要与之同步的域控制器分区的可分辨的名称。"
    - id: sourceServer
      type: System.String
      description: "要与之同步分区服务器的名称。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partition</code>or <code>sourceServer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partition</code>或<code>sourceServer</code>无效。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  id: TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: TransferRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "使指定的角色传输到此域控制器的所有权。"
  syntax:
    content: public void TransferRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
      description: "之一<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole&quot;></xref>指定哪个角色将传输到此域控制器的成员。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>role</code>不是有效的。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  id: TriggerSyncReplicaFromNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: TriggerSyncReplicaFromNeighbors(String)
  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "开始指定的分区的同步。"
  syntax:
    content: public override void TriggerSyncReplicaFromNeighbors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: "要同步的分区的可分辨的名称。"
  overload: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "目标服务器是忙或不可用。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partition</code>不是有效的。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放当前对象。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的帐户没有权限执行此操作。"
  platform:
  - net462
references:
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer
  isExternal: false
  name: System.DirectoryServices.ActiveDirectory.DirectoryServer
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SyncFromAllServersOperationException
  nameWithType: SyncFromAllServersOperationException
  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException
- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: DomainController()
  nameWithType: DomainController.DomainController()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.DomainController()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CheckReplicationConsistency()
  nameWithType: DomainController.CheckReplicationConsistency()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CurrentTime
  nameWithType: DomainController.CurrentTime
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DomainController.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Domain
  nameWithType: DomainController.Domain
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Domain
- uid: System.DirectoryServices.ActiveDirectory.Domain
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: EnableGlobalCatalog()
  nameWithType: DomainController.EnableGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog()
- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: GlobalCatalog
  nameWithType: GlobalCatalog
  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Finalize()
  nameWithType: DomainController.Finalize()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Finalize()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindAll(DirectoryContext)
  nameWithType: DomainController.FindAll(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainControllerCollection
  nameWithType: DomainControllerCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindAll(DirectoryContext,String)
  nameWithType: DomainController.FindAll(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext)
  nameWithType: DomainController.FindOne(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext,LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext,String)
  nameWithType: DomainController.FindOne(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext,String,LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext,String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Forest
  nameWithType: DomainController.Forest
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Forest
- uid: System.DirectoryServices.ActiveDirectory.Forest
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetAllReplicationNeighbors()
  nameWithType: DomainController.GetAllReplicationNeighbors()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationNeighborCollection
  nameWithType: ReplicationNeighborCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDirectorySearcher()
  nameWithType: DomainController.GetDirectorySearcher()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDomainController(DirectoryContext)
  nameWithType: DomainController.GetDomainController(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationConnectionFailures()
  nameWithType: DomainController.GetReplicationConnectionFailures()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationFailureCollection
  nameWithType: ReplicationFailureCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationCursors(String)
  nameWithType: DomainController.GetReplicationCursors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(String)
- uid: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationCursorCollection
  nameWithType: ReplicationCursorCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationMetadata(String)
  nameWithType: DomainController.GetReplicationMetadata(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryReplicationMetadata
  nameWithType: ActiveDirectoryReplicationMetadata
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationNeighbors(String)
  nameWithType: DomainController.GetReplicationNeighbors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationOperationInformation()
  nameWithType: DomainController.GetReplicationOperationInformation()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationOperationInformation
  nameWithType: ReplicationOperationInformation
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: HighestCommittedUsn
  nameWithType: DomainController.HighestCommittedUsn
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: InboundConnections
  nameWithType: DomainController.InboundConnections
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationConnectionCollection
  nameWithType: ReplicationConnectionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IPAddress
  nameWithType: DomainController.IPAddress
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IsGlobalCatalog()
  nameWithType: DomainController.IsGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OSVersion
  nameWithType: DomainController.OSVersion
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OutboundConnections
  nameWithType: DomainController.OutboundConnections
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Roles
  nameWithType: DomainController.Roles
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Roles
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryRoleCollection
  nameWithType: ActiveDirectoryRoleCollection
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SeizeRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SiteName
  nameWithType: DomainController.SiteName
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncFromAllServersCallback
  nameWithType: DomainController.SyncFromAllServersCallback
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
- uid: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SyncUpdateCallback
  nameWithType: SyncUpdateCallback
  fullName: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  nameWithType: DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SyncFromAllServersOptions
  nameWithType: SyncFromAllServersOptions
  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromServer(String,String)
  nameWithType: DomainController.SyncReplicaFromServer(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(String,String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TransferRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(ActiveDirectoryRole)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TriggerSyncReplicaFromNeighbors(String)
  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: DomainController
  nameWithType: DomainController.DomainController
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CheckReplicationConsistency
  nameWithType: DomainController.CheckReplicationConsistency
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CurrentTime
  nameWithType: DomainController.CurrentTime
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Dispose
  nameWithType: DomainController.Dispose
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Domain
  nameWithType: DomainController.Domain
- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: EnableGlobalCatalog
  nameWithType: DomainController.EnableGlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Finalize
  nameWithType: DomainController.Finalize
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindAll
  nameWithType: DomainController.FindAll
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne
  nameWithType: DomainController.FindOne
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Forest
  nameWithType: DomainController.Forest
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetAllReplicationNeighbors
  nameWithType: DomainController.GetAllReplicationNeighbors
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDirectorySearcher
  nameWithType: DomainController.GetDirectorySearcher
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDomainController
  nameWithType: DomainController.GetDomainController
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationConnectionFailures
  nameWithType: DomainController.GetReplicationConnectionFailures
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationCursors
  nameWithType: DomainController.GetReplicationCursors
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationMetadata
  nameWithType: DomainController.GetReplicationMetadata
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationNeighbors
  nameWithType: DomainController.GetReplicationNeighbors
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationOperationInformation
  nameWithType: DomainController.GetReplicationOperationInformation
- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: HighestCommittedUsn
  nameWithType: DomainController.HighestCommittedUsn
- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: InboundConnections
  nameWithType: DomainController.InboundConnections
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IPAddress
  nameWithType: DomainController.IPAddress
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IsGlobalCatalog
  nameWithType: DomainController.IsGlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OSVersion
  nameWithType: DomainController.OSVersion
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OutboundConnections
  nameWithType: DomainController.OutboundConnections
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Roles
  nameWithType: DomainController.Roles
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SeizeRoleOwnership
  nameWithType: DomainController.SeizeRoleOwnership
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SiteName
  nameWithType: DomainController.SiteName
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncFromAllServersCallback
  nameWithType: DomainController.SyncFromAllServersCallback
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromAllServers
  nameWithType: DomainController.SyncReplicaFromAllServers
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromServer
  nameWithType: DomainController.SyncReplicaFromServer
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TransferRoleOwnership
  nameWithType: DomainController.TransferRoleOwnership
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TriggerSyncReplicaFromNeighbors
  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors
