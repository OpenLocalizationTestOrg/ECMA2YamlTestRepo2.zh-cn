### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.HitTestFilterCallback
  id: HitTestFilterCallback
  langs:
  - csharp
  name: HitTestFilterCallback
  nameWithType: HitTestFilterCallback
  fullName: System.Windows.Media.HitTestFilterCallback
  type: Delegate
  summary: "表示指定的可视化树中不进行命中的测试处理的部分的回调方法"
  remarks: "命中的测试筛选器回叫方法调用映射到的命中的测试条件，从你指定的视觉效果和降序通过其可视化树的分支的所有可视化对象中。 但是，你可能想要忽略某些分支，你不感兴趣处理命中的测试结果回调函数中的可视化树。 使用命中的测试筛选回调函数的返回值确定应执行的操作的视觉对象的枚举类型。 例如，如果返回值， <xref:System.Windows.Media.HitTestFilterBehavior>，你可以从命中的测试结果枚举中删除当前的 visual 对象及其子代。</xref:System.Windows.Media.HitTestFilterBehavior> 这意味着，命中的测试结果回调方法将不会看到在其枚举中的这些对象。      1> [!NOTE]&1;> 删除对象的可视化树会减少的命中的测试结果枚举过程的处理量。       ![修剪可视化树使用命中的测试筛选器](~/add/media/filteredvisualtree-01.png &quot;修剪可视化树使用命中的测试筛选器&quot;)修剪可视化树"
  example:
  - "The following example shows how to invoke <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> by using a HitTestFilterCallback value. The corresponding hit test callback method is also defined.  \n  \n [!code-cs[HitTestingOverview#104](~/add/codesnippet/csharp/HitTestingOverview/Window1.xaml.cs#104)]\n [!code-vb[HitTestingOverview#104](~/add/codesnippet/visualbasic/hittestingoverview/window1.xaml.vb#104)]  \n  \n The following example shows how to return a <xref:System.Windows.Media.HitTestFilterBehavior> value from a hit test filter callback method.  \n  \n [!code-cs[HitTestingOverview#106](~/add/codesnippet/csharp/HitTestingOverview/Window1.xaml.cs#106)]\n [!code-vb[HitTestingOverview#106](~/add/codesnippet/visualbasic/hittestingoverview/window1.xaml.vb#106)]"
  syntax:
    content: public delegate System.Windows.Media.HitTestFilterBehavior HitTestFilterCallback(DependencyObject potentialHitTestTarget);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
