### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow
  id: IWebPartRow
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  langs:
  - csharp
  name: IWebPartRow
  nameWithType: IWebPartRow
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow
  type: Interface
  summary: "定义用于连接两个服务器控件使用单个字段的数据提供程序接口。"
  remarks: "此接口是用于与 Web 部件连接而设计的。 在 Web 部件连接中，两个驻留在的服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域建立连接和共享数据，使用一个控件充当使用者和中充当提供程序的其他控件。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 共享 Web 部件连接中的数据的机制是接口实例，该提供程序提供给使用者通过回调方法。 若要建立连接，使用者和提供程序必须同时使用相同的接口类型的共享数据。 如果使用者不能识别提供方发送的接口类型，则仍可能通过转换器连接控件 (<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>对象) 将发送到使用者可以识别的类型提供程序接口实例。</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 有关连接的详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>和[Web 部件连接概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       IWebPartRow 接口是随附的 Web 部件控件集用作用于创建基于数据行的连接的标准接口的提供程序接口。 你还可以创建自定义接口，以用于 Web 部件连接，但在许多数据驱动 Web 应用程序，十分有用来创建基于相同的字段的连接 (有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.IWebPartField>接口)，表 (有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>接口)，或从数据源的行。</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> </xref:System.Web.UI.WebControls.WebParts.IWebPartField> 在典型的连接，<xref:System.Web.UI.WebControls.WebParts.WebPart>控制操作，提供程序将实现 IWebPartRow 接口以及为特殊的回调方法中的使用者提供接口的实例。</xref:System.Web.UI.WebControls.WebParts.WebPart> 例如，提供程序可能实现到你的用户信息表中的用户相对应的行的 IWebPartRow 接口。 另一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件充当使用者将定义用于接收接口实例中，无法然后提取用户数据，使用它来查找有关该用户的帐户的其他信息并显示与该用户对页相关的所有信息的特殊方法。</xref:System.Web.UI.WebControls.WebParts.WebPart>       IWebPartRow 接口具有两个公开的成员。 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A>属性返回有关封装在数据行的架构信息<xref:System.ComponentModel.PropertyDescriptorCollection>对象。</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A>方法声明 （如提供程序控件） 的实现器用于检索接口实例的行数据时调用回调方法的方法。</xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartRow interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartRow interface, with one control acting as the provider, and the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartRow interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> method in the provider, to retrieve the actual data and write it to the page.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_327_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_327_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-vb[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_327_2.aspx)]\n [!code-cs[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_327_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified row, which the provider makes available through an instance of the IWebPartRow interface."
  syntax:
    content: public interface IWebPartRow
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  id: GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  langs:
  - csharp
  name: GetRowData(RowCallback)
  nameWithType: IWebPartRow.GetRowData(RowCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(RowCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "返回正在使用的行的数据接口作为连接的基础之间两个<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "使用此方法来检索接口所传递的数据行值。 提供程序实现此方法，并使用者调用它的点时使用者准备好处理或呈现数据。"
  example:
  - "The following code example shows the implementation and use of the GetRowData method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface. The provider control implements the GetRowData method, returning the value of a particular row in the data table. The consumer control calls the GetRowData method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/98668bea-41a0-4fc3-85fe-_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/98668bea-41a0-4fc3-85fe-_1.vb)]"
  syntax:
    content: public void GetRowData (System.Web.UI.WebControls.WebParts.RowCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.RowCallback
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.RowCallback&quot;> </xref>包含地址的接收数据的方法的委托。"
  overload: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartRow.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取用于两个之间共享数据的数据行的架构信息<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件。"
  remarks: "此属性提供的数据的属性信息。 使用<xref:System.Web.UI.WebControls.WebParts.IWebPartRow>接口在连接中，你获取<xref:System.ComponentModel.PropertyDescriptorCollection>对象，该引用的架构属性对象。</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 协定指定该调用`Schema[n].GetValue(RowData)`返回的值*n*第一行中的列。 你必须使用架构属性来获取行中的值。"
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface. The provider control implements the Schema property. Then the consumer control, in its `RenderContents` method, queries the Schema property to retrieve information about the row as it writes the row data to the page.  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_721_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_721_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>描述数据。"
  overload: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: GetRowData(RowCallback)
  nameWithType: IWebPartRow.GetRowData(RowCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(RowCallback)
- uid: System.Web.UI.WebControls.WebParts.RowCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: RowCallback
  nameWithType: RowCallback
  fullName: System.Web.UI.WebControls.WebParts.RowCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: Schema
  nameWithType: IWebPartRow.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData*
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: GetRowData
  nameWithType: IWebPartRow.GetRowData
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: Schema
  nameWithType: IWebPartRow.Schema
