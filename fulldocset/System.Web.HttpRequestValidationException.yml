### YamlMime:ManagedReference
items:
- uid: System.Web.HttpRequestValidationException
  id: HttpRequestValidationException
  children:
  - System.Web.HttpRequestValidationException.#ctor
  - System.Web.HttpRequestValidationException.#ctor(System.String)
  - System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException
  fullName: System.Web.HttpRequestValidationException
  type: Class
  summary: "从客户端作为请求数据的一部分收到潜在的恶意输入的字符串时引发的异常。 此类不能被继承。"
  remarks: "通过限制并验证用户输入的 Web 应用，以防止依赖于恶意输入字符串的黑客攻击中至关重要。 跨站点脚本攻击是此类攻击的一个示例。 其他类型的恶意或不需要的数据可以先通过在请求中各种形式的输入。 通过限制的低的级别应用程序中传递的数据类型，可以防止意外事件，即使使用你代码的程序员不要将放在正确验证技术就地。       请求验证检测到潜在的恶意客户端输入，并引发此异常，中止处理请求。 请求中止可能表示试图从而危及应用程序，如跨站点脚本攻击的安全。 强烈建议你的应用程序显式检查与请求中止有关的所有输入。 但是，你可以通过设置来禁用请求验证`validateRequest`属性中的指令`false`，下面的示例中所示︰`<%@ Page validateRequest=&quot;false&quot; %>`若要禁用请求验证你的应用程序，必须修改或创建 Web.config 文件，你的应用程序并设置`validateRequest`属性`pages`部分到`false`，下面的示例中所示︰```   <configuration>      <system.web>        <pages validateRequest=&quot;false&quot; />      </system.web>    </configuration>    ```若要禁用请求验证你的服务器上的所有应用程序你可以进行此项修改 Machine.config 文件。      1> [!NOTE]&1;> 强烈建议你的应用程序显式检查所有输入，它使用以及由 ASP.NET 执行请求验证。 请求验证功能无法捕捉所有攻击，尤其是那些制作专门针对你的应用程序逻辑。"
  example:
  - "The following code example demonstrates how to check for malicious user input by using an HttpRequestValidationException.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpRequestValidationException#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\n [!code-cs[HttpRequestValidationException#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]"
  syntax:
    content: 'public sealed class HttpRequestValidationException : System.Web.HttpException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Web.HttpException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor
  id: '#ctor'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "创建的新实例<xref href=&quot;System.Web.HttpRequestValidationException&quot;></xref>类。"
  syntax:
    content: public HttpRequestValidationException ();
    parameters: []
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "创建一个新<xref href=&quot;System.Web.HttpRequestValidationException&quot;></xref>与指定的错误消息的异常。"
  remarks: "内容`message`参数用于人工可读。 HttpRequestValidationException 构造函数的调用方需要确保`message`字符串已进行了本地化。"
  syntax:
    content: public HttpRequestValidationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "一个字符串，描述错误。"
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新实例<xref href=&quot;System.Web.HttpRequestValidationException&quot;></xref>使用指定的错误消息和对内部异常的原因的异常的引用的类。"
  remarks: "前一个异常的直接结果应包含中的前一个异常的引用引发的异常，<xref:System.Exception.InnerException%2A>属性。</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>属性返回相同的值传递到 HttpRequestValidationException 构造函数，或`null`如果<xref:System.Exception.InnerException%2A>属性不会提供给 HttpRequestValidationException 构造函数的内部异常值。</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public HttpRequestValidationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "解释异常原因的错误消息。"
    - id: innerException
      type: System.Exception
      description: "导致当前异常的异常。 如果此参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>中, 引发当前异常<xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;></xref>处理内部异常的块。"
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.HttpException
  isExternal: false
  name: System.Web.HttpException
- uid: System.Web.HttpRequestValidationException.#ctor
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpRequestValidationException.#ctor*
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException.HttpRequestValidationException
