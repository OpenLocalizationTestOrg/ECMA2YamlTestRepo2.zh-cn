### YamlMime:ManagedReference
items:
- uid: System.IAppDomainSetup
  id: IAppDomainSetup
  children:
  - System.IAppDomainSetup.ApplicationBase
  - System.IAppDomainSetup.ApplicationName
  - System.IAppDomainSetup.CachePath
  - System.IAppDomainSetup.ConfigurationFile
  - System.IAppDomainSetup.DynamicBase
  - System.IAppDomainSetup.LicenseFile
  - System.IAppDomainSetup.PrivateBinPath
  - System.IAppDomainSetup.PrivateBinPathProbe
  - System.IAppDomainSetup.ShadowCopyDirectories
  - System.IAppDomainSetup.ShadowCopyFiles
  langs:
  - csharp
  name: IAppDomainSetup
  nameWithType: IAppDomainSetup
  fullName: System.IAppDomainSetup
  type: Interface
  summary: "表示可以添加到的实例的程序集绑定信息<xref href=&quot;System.AppDomain&quot;> </xref>。"
  remarks: "此接口的成员用于<xref:System.AppDomain.GetData%2A?displayProperty=fullName>和<xref:System.AppDomain.SetData%2A?displayProperty=fullName>方法来标识<xref:System.AppDomain>要使用的数据。</xref:System.AppDomain> </xref:System.AppDomain.SetData%2A?displayProperty=fullName> </xref:System.AppDomain.GetData%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("27FFF232-A7A8-40dd-8D4A-734AD59FCD41")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IAppDomainSetup
  implements: []
  platform:
  - net462
- uid: System.IAppDomainSetup.ApplicationBase
  id: ApplicationBase
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: ApplicationBase
  nameWithType: IAppDomainSetup.ApplicationBase
  fullName: System.IAppDomainSetup.ApplicationBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取或设置包含应用程序的目录的名称。"
  remarks: "获取或设置程序集缓存管理器的 APPBASE 变量时使用。 这是其中的程序集管理器应开始探测程序集的目录。 此属性后不能更改<xref:System.AppDomain>已完成其第一次绑定。</xref:System.AppDomain>"
  syntax:
    content: public string ApplicationBase { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含应用程序基目录的名称。</xref:System.String>"
  overload: System.IAppDomainSetup.ApplicationBase*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.ApplicationName
  id: ApplicationName
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: ApplicationName
  nameWithType: IAppDomainSetup.ApplicationName
  fullName: System.IAppDomainSetup.ApplicationName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取或设置应用程序的名称。"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，它是应用程序的名称。</xref:System.String>"
  overload: System.IAppDomainSetup.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.CachePath
  id: CachePath
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: CachePath
  nameWithType: IAppDomainSetup.CachePath
  fullName: System.IAppDomainSetup.CachePath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取和设置特定于应用程序的、 从中对文件进行卷影复制使用的区域名称。"
  syntax:
    content: public string CachePath { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，它是完全限定名称的从中对文件进行卷影复制的目录路径和文件名称。</xref:System.String>"
  overload: System.IAppDomainSetup.CachePath*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.ConfigurationFile
  id: ConfigurationFile
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: ConfigurationFile
  nameWithType: IAppDomainSetup.ConfigurationFile
  fullName: System.IAppDomainSetup.ConfigurationFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取和设置应用程序域的配置文件的名称。"
  remarks: "配置文件描述的搜索规则和应用程序域的配置数据。 创建应用程序域的主机负责提供此数据，因为有意义的值会变化情况。       例如，ASP.NET 应用程序的配置数据存储为每个应用程序、 站点以及计算机，可执行文件的配置数据存储为每个应用程序、 用户和计算机时。 仅主机知道特定情况的配置数据的详细信息。       此属性后不能更改<xref:System.AppDomain>已完成其第一次绑定。</xref:System.AppDomain>"
  syntax:
    content: public string ConfigurationFile { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>指定配置文件的名称。</xref:System.String>"
  overload: System.IAppDomainSetup.ConfigurationFile*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.DynamicBase
  id: DynamicBase
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: DynamicBase
  nameWithType: IAppDomainSetup.DynamicBase
  fullName: System.IAppDomainSetup.DynamicBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取或设置在其中存储和访问动态生成的文件的目录。"
  remarks: "当<xref:System.AppDomain>是创建，指定的目录称为动态目录可以存储动态程序集。</xref:System.AppDomain> 此目录以逻辑方式位于<xref:System.AppDomainSetup.ApplicationBase%2A>，但它可以驻留在目录的另一部分。</xref:System.AppDomainSetup.ApplicationBase%2A>       此属性后不能更改<xref:System.AppDomain>已完成其第一次绑定。</xref:System.AppDomain>"
  syntax:
    content: public string DynamicBase { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，它指定包含动态程序集的目录。</xref:System.String>"
  overload: System.IAppDomainSetup.DynamicBase*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.LicenseFile
  id: LicenseFile
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: LicenseFile
  nameWithType: IAppDomainSetup.LicenseFile
  fullName: System.IAppDomainSetup.LicenseFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取或设置与此域关联的许可证文件的位置。"
  syntax:
    content: public string LicenseFile { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，它指定的许可证文件的名称。</xref:System.String>"
  overload: System.IAppDomainSetup.LicenseFile*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.PrivateBinPath
  id: PrivateBinPath
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: PrivateBinPath
  nameWithType: IAppDomainSetup.PrivateBinPath
  fullName: System.IAppDomainSetup.PrivateBinPath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取或设置与结合使用的目录的目录列表<xref:System.AppDomainSetup.ApplicationBase*>目录探测专用程序集。</xref:System.AppDomainSetup.ApplicationBase*>"
  remarks: "专用程序集部署在与应用程序相同的目录结构中。"
  syntax:
    content: public string PrivateBinPath { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含目录名称，其中每个名称用分号隔开的列表。</xref:System.String>"
  overload: System.IAppDomainSetup.PrivateBinPath*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.PrivateBinPathProbe
  id: PrivateBinPathProbe
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: PrivateBinPathProbe
  nameWithType: IAppDomainSetup.PrivateBinPathProbe
  fullName: System.IAppDomainSetup.PrivateBinPathProbe
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取或设置用于查找应用程序的专用二进制目录路径。"
  remarks: "设置此属性可从搜索应用程序中排除的应用程序目录路径。 搜索不限于私有和全局二进制目录路径和全局程序集缓存。       此属性后不能更改<xref:System.AppDomain>已完成其第一次绑定。</xref:System.AppDomain>"
  syntax:
    content: public string PrivateBinPathProbe { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含目录名称，其中每个名称用分号隔开的列表。</xref:System.String>"
  overload: System.IAppDomainSetup.PrivateBinPathProbe*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.ShadowCopyDirectories
  id: ShadowCopyDirectories
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: ShadowCopyDirectories
  nameWithType: IAppDomainSetup.ShadowCopyDirectories
  fullName: System.IAppDomainSetup.ShadowCopyDirectories
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取或设置包含要进行影像复制程序集的目录的名称。"
  remarks: "指定的所有目录<xref:System.AppDomainSetup.PrivateBinPath%2A>，包括指定的目录<xref:System.AppDomainSetup.ApplicationBase%2A>，进行卷影复制默认情况下，如果未设置此属性。</xref:System.AppDomainSetup.ApplicationBase%2A> </xref:System.AppDomainSetup.PrivateBinPath%2A>       如果可执行文件中使用，则卷影复制目录中存储的可执行文件的更新。 现有用户继续使用原始的可执行文件，直到其终止，而新用户使用卷影复制可执行文件。       此属性后不能更改<xref:System.AppDomain>已完成其第一次绑定。</xref:System.AppDomain>"
  syntax:
    content: public string ShadowCopyDirectories { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含目录名称，其中每个名称用分号隔开的列表。</xref:System.String>"
  overload: System.IAppDomainSetup.ShadowCopyDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.IAppDomainSetup.ShadowCopyFiles
  id: ShadowCopyFiles
  parent: System.IAppDomainSetup
  langs:
  - csharp
  name: ShadowCopyFiles
  nameWithType: IAppDomainSetup.ShadowCopyFiles
  fullName: System.IAppDomainSetup.ShadowCopyFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "获取或设置指示是否卷影复制打开还是关闭的字符串。"
  remarks: "此属性后不能更改<xref:System.AppDomain>已完成其第一次绑定。</xref:System.AppDomain>"
  syntax:
    content: public string ShadowCopyFiles { get; set; }
    return:
      type: System.String
      description: "<xref:System.String>包含值&quot;true&quot;以指示卷影复制处于打开状态; 或&quot;false&quot;指示卷影复制被打开关闭。</xref:System.String>"
  overload: System.IAppDomainSetup.ShadowCopyFiles*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IAppDomainSetup.ApplicationBase
  parent: System.IAppDomainSetup
  isExternal: false
  name: ApplicationBase
  nameWithType: IAppDomainSetup.ApplicationBase
  fullName: System.IAppDomainSetup.ApplicationBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IAppDomainSetup.ApplicationName
  parent: System.IAppDomainSetup
  isExternal: false
  name: ApplicationName
  nameWithType: IAppDomainSetup.ApplicationName
  fullName: System.IAppDomainSetup.ApplicationName
- uid: System.IAppDomainSetup.CachePath
  parent: System.IAppDomainSetup
  isExternal: false
  name: CachePath
  nameWithType: IAppDomainSetup.CachePath
  fullName: System.IAppDomainSetup.CachePath
- uid: System.IAppDomainSetup.ConfigurationFile
  parent: System.IAppDomainSetup
  isExternal: false
  name: ConfigurationFile
  nameWithType: IAppDomainSetup.ConfigurationFile
  fullName: System.IAppDomainSetup.ConfigurationFile
- uid: System.IAppDomainSetup.DynamicBase
  parent: System.IAppDomainSetup
  isExternal: false
  name: DynamicBase
  nameWithType: IAppDomainSetup.DynamicBase
  fullName: System.IAppDomainSetup.DynamicBase
- uid: System.IAppDomainSetup.LicenseFile
  parent: System.IAppDomainSetup
  isExternal: false
  name: LicenseFile
  nameWithType: IAppDomainSetup.LicenseFile
  fullName: System.IAppDomainSetup.LicenseFile
- uid: System.IAppDomainSetup.PrivateBinPath
  parent: System.IAppDomainSetup
  isExternal: false
  name: PrivateBinPath
  nameWithType: IAppDomainSetup.PrivateBinPath
  fullName: System.IAppDomainSetup.PrivateBinPath
- uid: System.IAppDomainSetup.PrivateBinPathProbe
  parent: System.IAppDomainSetup
  isExternal: false
  name: PrivateBinPathProbe
  nameWithType: IAppDomainSetup.PrivateBinPathProbe
  fullName: System.IAppDomainSetup.PrivateBinPathProbe
- uid: System.IAppDomainSetup.ShadowCopyDirectories
  parent: System.IAppDomainSetup
  isExternal: false
  name: ShadowCopyDirectories
  nameWithType: IAppDomainSetup.ShadowCopyDirectories
  fullName: System.IAppDomainSetup.ShadowCopyDirectories
- uid: System.IAppDomainSetup.ShadowCopyFiles
  parent: System.IAppDomainSetup
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: IAppDomainSetup.ShadowCopyFiles
  fullName: System.IAppDomainSetup.ShadowCopyFiles
- uid: System.IAppDomainSetup.ApplicationBase*
  parent: System.IAppDomainSetup
  isExternal: false
  name: ApplicationBase
  nameWithType: IAppDomainSetup.ApplicationBase
- uid: System.IAppDomainSetup.ApplicationName*
  parent: System.IAppDomainSetup
  isExternal: false
  name: ApplicationName
  nameWithType: IAppDomainSetup.ApplicationName
- uid: System.IAppDomainSetup.CachePath*
  parent: System.IAppDomainSetup
  isExternal: false
  name: CachePath
  nameWithType: IAppDomainSetup.CachePath
- uid: System.IAppDomainSetup.ConfigurationFile*
  parent: System.IAppDomainSetup
  isExternal: false
  name: ConfigurationFile
  nameWithType: IAppDomainSetup.ConfigurationFile
- uid: System.IAppDomainSetup.DynamicBase*
  parent: System.IAppDomainSetup
  isExternal: false
  name: DynamicBase
  nameWithType: IAppDomainSetup.DynamicBase
- uid: System.IAppDomainSetup.LicenseFile*
  parent: System.IAppDomainSetup
  isExternal: false
  name: LicenseFile
  nameWithType: IAppDomainSetup.LicenseFile
- uid: System.IAppDomainSetup.PrivateBinPath*
  parent: System.IAppDomainSetup
  isExternal: false
  name: PrivateBinPath
  nameWithType: IAppDomainSetup.PrivateBinPath
- uid: System.IAppDomainSetup.PrivateBinPathProbe*
  parent: System.IAppDomainSetup
  isExternal: false
  name: PrivateBinPathProbe
  nameWithType: IAppDomainSetup.PrivateBinPathProbe
- uid: System.IAppDomainSetup.ShadowCopyDirectories*
  parent: System.IAppDomainSetup
  isExternal: false
  name: ShadowCopyDirectories
  nameWithType: IAppDomainSetup.ShadowCopyDirectories
- uid: System.IAppDomainSetup.ShadowCopyFiles*
  parent: System.IAppDomainSetup
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: IAppDomainSetup.ShadowCopyFiles
