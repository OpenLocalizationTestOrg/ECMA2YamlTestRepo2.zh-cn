### YamlMime:ManagedReference
items:
- uid: System.Windows.ResourceDictionary
  id: ResourceDictionary
  children:
  - System.Windows.ResourceDictionary.#ctor
  - System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  - System.Windows.ResourceDictionary.BeginInit
  - System.Windows.ResourceDictionary.Clear
  - System.Windows.ResourceDictionary.Contains(System.Object)
  - System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  - System.Windows.ResourceDictionary.Count
  - System.Windows.ResourceDictionary.DeferrableContent
  - System.Windows.ResourceDictionary.EndInit
  - System.Windows.ResourceDictionary.FindName(System.String)
  - System.Windows.ResourceDictionary.GetEnumerator
  - System.Windows.ResourceDictionary.IsFixedSize
  - System.Windows.ResourceDictionary.IsReadOnly
  - System.Windows.ResourceDictionary.Item(System.Object)
  - System.Windows.ResourceDictionary.Keys
  - System.Windows.ResourceDictionary.MergedDictionaries
  - System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  - System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  - System.Windows.ResourceDictionary.Remove(System.Object)
  - System.Windows.ResourceDictionary.Source
  - System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  - System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  - System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  - System.Windows.ResourceDictionary.UnregisterName(System.String)
  - System.Windows.ResourceDictionary.Values
  langs:
  - csharp
  name: ResourceDictionary
  nameWithType: ResourceDictionary
  fullName: System.Windows.ResourceDictionary
  type: Class
  summary: "提供一个哈希表 / 字典实现，其中包含[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]所使用的组件和其他元素的资源[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]应用程序。"
  remarks: "不通过加载应用程序代码时立即处理的 ResourceDictionary 中的项[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]加载程序。 相反，ResourceDictionary 仍然作为对象存在，仅当他们专门请求时，才会处理各个值。       ResourceDictionary 类不被派生自<xref:System.Collections.DictionaryBase>.</xref:System.Collections.DictionaryBase> 相反，ResourceDictionary 类实现<xref:System.Collections.IDictionary>但依赖于<xref:System.Collections.Hashtable>内部。</xref:System.Collections.Hashtable> </xref:System.Collections.IDictionary>       在[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]，ResourceDictionary 类通常是为多个对象元素值的隐式集合元素`Resources`属性，在给定属性元素语法中。 有关详细信息中的隐式集合[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，请参阅[在详细信息的 XAML 语法](~/add/includes/ajax-current-ext-md.md)。 例外情况是当你想要指定合并的字典;有关详细信息，请参阅[合并资源字典](~/add/includes/ajax-current-ext-md.md)。       另一种可能[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]用法就是声明为离散的资源字典[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]文件，并在加载它运行时<xref:System.Windows.Markup.XamlReader.Load%2A>或将其作为资源或松散文件 （完全信任） 项目中包括。</xref:System.Windows.Markup.XamlReader.Load%2A> 在这种情况下，ResourceDictionary 可以声明为对象元素，充当的根元素[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。 你必须映射适当的 XML 命名空间值 (默认为[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]命名空间和通常`x:`为[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]命名空间) 到 ResourceDictionary 元素，如果你打算将其用作根元素。 然后，可以添加定义的资源，每个都有一个值的子元素。      <a name=&quot;xamlImplicitCollectionUsage_ResourceDictionary&quot;></a># # XAML 隐式集合用法```   <object>     <object.resourcesProperty>       oneOrMoreResources     </object.resourcesProperty>   </object>   ``` <a name=&quot;xamlValues_ResourceDictionary&quot;> </a> # # XAML 值*resourcesProperty*指定一个属性元素，该属性的值类型是 ResourceDictionary 的其中一个属性。       通常，这是`Resources`属性<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>，或<xref:System.Windows.Application>中应用程序资源的情况。</xref:System.Windows.Application> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>       *oneOrMoreResources*作为对象元素所指定的一个或多个资源。 你指定每个资源必须具有[X:key 指令](~/add/includes/ajax-current-ext-md.md)分配。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]

      [System.Windows.Markup.Ambient]

      [System.Windows.Markup.UsableDuringInitialization(true)]

      public class ResourceDictionary : System.Collections.IDictionary, System.ComponentModel.ISupportInitialize, System.Windows.Markup.INameScope, System.Windows.Markup.IUriContext
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.INameScope
  - System.Windows.Markup.IUriContext
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.#ctor
  id: '#ctor'
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>类。"
  syntax:
    content: public ResourceDictionary ();
    parameters: []
  overload: System.Windows.ResourceDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "将按的键的资源添加到此<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  remarks: "尝试添加重复的键会引发异常。       密钥始终将添加到基的字典。 密钥存储在<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>在当前<xref:System.Windows.ResourceDictionary>未检查重复，仅基字典检查重复项。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "要添加的键的名称。"
    - id: value
      type: System.Object
      description: "要添加的资源的值。"
  overload: System.Windows.ResourceDictionary.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>被锁定或只读的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中已存在具有相同键的元素<xref href=&quot;System.Collections.Hashtable&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.BeginInit
  id: BeginInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "开始此初始化阶段<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  remarks: "调用此方法是相对值的内容<xref:System.Windows.ResourceDictionary>将要加载。</xref:System.Windows.ResourceDictionary> 该过程的下一步是调用<xref:System.Windows.ResourceDictionary.EndInit%2A>.</xref:System.Windows.ResourceDictionary.EndInit%2A>       不要调用 BeginInit 不止一次，在调用<xref:System.Windows.ResourceDictionary.EndInit%2A>.</xref:System.Windows.ResourceDictionary.EndInit%2A>之前 执行此操作将引发的异常。"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "不止一次之前调用 BeginInit<xref:System.Windows.ResourceDictionary.EndInit*>曾。</xref:System.Windows.ResourceDictionary.EndInit*>"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Clear
  id: Clear
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "在基类中清除了所有键 （和值） <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。 这并不会清除任何合并字典项。"
  remarks: "如果你需要清除合并的字典项时，获取从特定字典<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>集合并专门调用上，清除<xref:System.Windows.ResourceDictionary>，尽管通常字典是远程的你可能没有访问权限。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 或者，删除整个<xref:System.Windows.ResourceDictionary>从<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>通过泛型集合上调用删除。</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.ResourceDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "确定是否<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>包含具有指定键的元素。"
  remarks: "如果请求的项不是此资源字典中，资源查找逻辑还会检查合并的字典。"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要查找中的键<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>包含具有指定的键 / 值对键; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  id: CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "副本<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>元素的一维<xref:System.Collections.DictionaryEntry>的指定索引处。</xref:System.Collections.DictionaryEntry>"
  remarks: "这会将复制仅基的字典。 结果数组不会有<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>如果重建为<xref:System.Windows.ResourceDictionary>再次。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>"
  syntax:
    content: public void CopyTo (System.Collections.DictionaryEntry[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.DictionaryEntry[]
      description: "目标的一维数组<xref:System.Collections.DictionaryEntry>从复制的对象<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>实例。</xref:System.Collections.DictionaryEntry> 该数组必须具有从零开始的索引。"
    - id: arrayIndex
      type: System.Int32
      description: "从零开始的索引`array`复制开始处。"
  overload: System.Windows.ResourceDictionary.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Count
  id: Count
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取基中的条目数<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "当前基字典中的条目数。"
  overload: System.Windows.ResourceDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.DeferrableContent
  id: DeferrableContent
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置此资源字典的可以推迟内容。"
  syntax:
    content: public System.Windows.DeferrableContent DeferrableContent { get; set; }
    return:
      type: System.Windows.DeferrableContent
      description: "始终返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.DeferrableContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.EndInit
  id: EndInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "结束初始化阶段中，并使以前的树，以便可以计期间初始化阶段，对密钥进行的所有更改。"
  remarks: "<xref:System.Windows.ResourceDictionary.BeginInit%2A>然后 EndInit 按照一种事务模型。</xref:System.Windows.ResourceDictionary.BeginInit%2A> <xref:System.Windows.ResourceDictionary.BeginInit%2A>将标记的未初始化的字典和 EndInit 标记为已初始化。</xref:System.Windows.ResourceDictionary.BeginInit%2A>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  id: FindName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "不支持此字典实现。"
  remarks: "<xref:System.Windows.ResourceDictionary>类不支持按名称注册。</xref:System.Windows.ResourceDictionary> 它使用的是键。"
  syntax:
    content: public object FindName (string name);
    parameters:
    - id: name
      type: System.String
      description: "正在请求的对象名称标识符。"
    return:
      type: System.Object
      description: "始终返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.FindName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "返回<xref:System.Collections.IDictionaryEnumerator>可用于循环访问<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "迭代器是基字典。"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "为专用的枚举器<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取是否这<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>是固定大小。"
  remarks: "默认实现返回<xref:System.Collections.Hashtable>默认设置，即`false`。</xref:System.Collections.Hashtable>"
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果哈希表具有固定大小;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取是否这<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>是只读的。"
  remarks: "此属性返回<xref:System.Collections.Hashtable>默认设置，即`false`。</xref:System.Collections.Hashtable>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果哈希表是只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置与给定的键关联的值。"
  remarks: "如果请求的项不是此资源字典中，框架资源系统还会检查合并的字典。       检查<xref:System.Windows.ResourceDictionary>按项或索引通常不检索资源的首选的方法。</xref:System.Windows.ResourceDictionary> 你应改为调用的方法，是能够参与完整资源查找过程，并查找资源的其键，以及可以在应用程序或主题查找资源。 <xref:System.Windows.FrameworkElement.FindResource%2A>是此类方法，并且存在任何<xref:System.Windows.FrameworkElement>。</xref:System.Windows.FrameworkElement></xref:System.Windows.FrameworkElement.FindResource%2A> 否则你尝试查找资源不匹配的 true 的运行时行为。       但是，直接从单个字典中获取资源可能适合情况就从已知在检索资源<xref:System.Windows.ResourceDictionary>位置，并且这样做，因此，若要避免可能性能和作用域的运行时键查找的影响。</xref:System.Windows.ResourceDictionary>       不使用索引器定义中的集合成员[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。 相反，你创建子元素标记中。 子元素是中的任一子元素<xref:System.Windows.ResourceDictionary>，或其中属性类型是一个属性元素的`ResourceDictionary`。</xref:System.Windows.ResourceDictionary> 有关详细信息，请参阅[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.ResourceDictionary>.</xref:System.Windows.ResourceDictionary>中的使用情况部分      <a name=&quot;xamlTextUsage_Item&quot;></a># # XAML 文本使用情况，请参阅备注。"
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "要获取或设置所需的密钥。"
    return:
      type: System.Object
      description: "密钥的值。"
  overload: System.Windows.ResourceDictionary.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Keys
  id: Keys
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取集合中包含的所有键<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  remarks: "此属性存在，因为它必需的<xref:System.Collections.IDictionary>，但密钥通常不适用于大多数<xref:System.Windows.ResourceDictionary>方案。</xref:System.Windows.ResourceDictionary> </xref:System.Collections.IDictionary>       返回的键不包括内<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>键 此外键集合是基字典中的键的快照。 如果随后对此进行更改<xref:System.Windows.ResourceDictionary>，存储的密钥将不会反映所做的更改。</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "所有键的集合。"
  overload: System.Windows.ResourceDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  id: MergedDictionaries
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取的集合<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>构成合并字典中的各种资源字典的字典。"
  remarks: "通过添加合并字典<xref:System.Windows.ResourceDictionary>到所引用的 MergedDictionaries 的泛型集合。</xref:System.Windows.ResourceDictionary> 合并<xref:System.Windows.ResourceDictionary>没有资源标记中定义的元素。</xref:System.Windows.ResourceDictionary> 相反，合并的字典，它是<xref:System.Windows.ResourceDictionary>并且不包含标记子元素定义 （或通过代码添加任何元素），但与[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]指定<xref:System.Windows.ResourceDictionary.Source%2A>。</xref:System.Windows.ResourceDictionary.Source%2A> </xref:System.Windows.ResourceDictionary> <xref:System.Windows.ResourceDictionary.Source%2A>代码使合并来自外部源，如应用程序后，附带的单独的资源程序集的字典&quot;松散[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]&quot;，或特定的本地化或全局资源程序集。</xref:System.Windows.ResourceDictionary.Source%2A>       指定资源中的元素<xref:System.Windows.ResourceDictionary>具有<xref:System.Windows.ResourceDictionary.Source%2A>指定不支持。</xref:System.Windows.ResourceDictionary.Source%2A> </xref:System.Windows.ResourceDictionary>       MergedDictionaries 集合中的查找行为将搜索上一次添加<xref:System.Windows.ResourceDictionary>第一个和搜索停止就会立即找到请求的键。</xref:System.Windows.ResourceDictionary> 整个合并字典的集合的重复键不是非法的。 合并的字典行为的详细信息，请参阅[合并的资源字典](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;xamlPropertyElementUsage_MergedDictionaries&quot;></a># # XAML 属性元素用法```   <object>     <object.MergedDictionaries>       oneOrMoreResourceDictionaries     </object.MergedDictionaries>   </object>      ``` <a name=&quot;xamlValues_MergedDictionaries&quot;> </a> # # XAML 值*oneOrMoreResourceDictionaries*一个或多个<xref:System.Windows.ResourceDictionary>对象元素。</xref:System.Windows.ResourceDictionary>       A<xref:System.Windows.ResourceDictionary>使用 MergedDictionaries 没有集合内容，并指定<xref:System.Windows.ResourceDictionary.Source%2A>引用完整的属性<xref:System.Windows.ResourceDictionary>远程。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.Source%2A> </xref:System.Windows.ResourceDictionary>"
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary> MergedDictionaries { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
      description: "合并字典的集合。"
  overload: System.Windows.ResourceDictionary.MergedDictionaries*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  id: OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "发生时<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>接收对资源的请求。"
  syntax:
    content: protected virtual void OnGettingValue (object key, ref object value, out bool canCache);
    parameters:
    - id: key
      type: System.Object
      description: "要获取的资源键。"
    - id: value
      type: System.Object
      description: "所请求资源的值。"
    - id: canCache
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以保存资源，并且将其用于更高版本;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.OnGettingValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  id: RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "不支持此字典实现。"
  remarks: "<xref:System.Windows.ResourceDictionary>类不支持按名称注册。</xref:System.Windows.ResourceDictionary> 它使用的是键。 XAML 命名空间方法实现为中的无效版本<xref:System.Windows.ResourceDictionary>以使它清楚该 XAML 名称不适用于资源。</xref:System.Windows.ResourceDictionary>       调用此方法将导致<xref:System.NotSupportedException>引发。</xref:System.NotSupportedException>"
  syntax:
    content: public void RegisterName (string name, object scopedElement);
    parameters:
    - id: name
      type: System.String
      description: "请参阅备注。"
    - id: scopedElement
      type: System.Object
      description: "请参阅备注。"
  overload: System.Windows.ResourceDictionary.RegisterName*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在所有情况下调用此方法时。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "从基字典中移除具有指定键项。"
  remarks: "如果<xref:System.Windows.ResourceDictionary>不具有指定键，包含的元素<xref:System.Windows.ResourceDictionary>保持不变。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary> 不会引发异常。       此方法不会从<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>中删除密钥 你必须获取特定于<xref:System.Windows.ResourceDictionary>从要移除的集合，这些键，但那可能不是可能由于通常要远程访问此类字典。</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要移除的项键。"
  overload: System.Windows.ResourceDictionary.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>被锁定或只读的。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Source
  id: Source
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]加载资源。"
  remarks: "通常，源指定为一个包 URI，它引用包含作为非资源的资源字典的位置，或者内容由你的应用程序构建项目的生成操作。 Pack URI 格式的详细信息，请参阅[WPF 中的包 Uri](~/add/includes/ajax-current-ext-md.md)。       通常情况下，只为设置的源属性则<xref:System.Windows.ResourceDictionary>为指定<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>属性 (作为中的属性元素[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，或被<xref:System.Windows.ResourceDictionary>代码中的集合的项)。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> </xref:System.Windows.ResourceDictionary> 在此上下文中，将值设置为源将合并位于所提供的字典内容[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]到当前<xref:System.Windows.ResourceDictionary>.</xref:System.Windows.ResourceDictionary> 任何加载失败将导致异常引发。"
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "外部资源字典中的源位置。"
  overload: System.Windows.ResourceDictionary.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "有关此成员的说明，请参阅&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.ResourceDictionary>实例被强制转换为<xref:System.Collections.ICollection>接口。</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: void ICollection.CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: "从零开始<xref:System.Array>接收复制的项从<xref href=&quot;System.Windows.Markup.Localizer.BamlLocalizationDictionary&quot;> </xref>。</xref:System.Array>"
    - id: arrayIndex
      type: System.Int32
      description: "在指定的第一个位置<xref:System.Array>以接收复制的内容。</xref:System.Array>"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "有关此成员的说明，请参阅&lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.ResourceDictionary>实例被强制转换为<xref:System.Collections.ICollection>接口。</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果访问<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>是同步的 （线程安全）; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "有关此成员的说明，请参阅&lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.ResourceDictionary>实例被强制转换为<xref:System.Collections.ICollection>接口。</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "可以用于对访问进行同步的对象<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "有关此成员的说明，请参阅&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.ResourceDictionary>实例被强制转换为<xref:System.Collections.IEnumerable>接口。</xref:System.Collections.IEnumerable> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>可用于循环访问集合的对象。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  id: System#Windows#Markup#IUriContext#BaseUri
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "有关此成员的说明，请参阅&lt;xref:System.Windows.Markup.IUriContext.BaseUri%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Windows.ResourceDictionary>实例被强制转换为<xref:System.Windows.Markup.IUriContext>接口。</xref:System.Windows.Markup.IUriContext> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }
    return:
      type: System.Uri
      description: "基[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的当前上下文。"
  overload: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  id: UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "不支持此字典实现。"
  remarks: "<xref:System.Windows.ResourceDictionary>类不支持按名称注册。</xref:System.Windows.ResourceDictionary> 它使用的是键。 调用此方法没有任何影响。"
  syntax:
    content: public void UnregisterName (string name);
    parameters:
    - id: name
      type: System.String
      description: "请参阅备注"
  overload: System.Windows.ResourceDictionary.UnregisterName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Values
  id: Values
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取与此包含键相关联的所有值的集合<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  remarks: "此属性存在，因为它必需的<xref:System.Collections.IDictionary>，但通常不适用于大多数<xref:System.Windows.ResourceDictionary>方案。</xref:System.Windows.ResourceDictionary> </xref:System.Collections.IDictionary>       返回的值不包括<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>内的值 此外该集合为基的字典中的值的快照。 如果随后对此进行更改<xref:System.Windows.ResourceDictionary>，存储的值将不会反映所做的更改。</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "所有值的集合。"
  overload: System.Windows.ResourceDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.ResourceDictionary.#ctor
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
- uid: System.Windows.ResourceDictionary.BeginInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
- uid: System.Windows.ResourceDictionary.Clear
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ResourceDictionary.Count
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
- uid: System.Windows.DeferrableContent
  parent: System.Windows
  isExternal: false
  name: DeferrableContent
  nameWithType: DeferrableContent
  fullName: System.Windows.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ResourceDictionary.GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
- uid: System.Windows.ResourceDictionary.Keys
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
- uid: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ResourceDictionary>
  nameWithType: Collection<ResourceDictionary>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.ResourceDictionary>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.ResourceDictionary
    name: ResourceDictionary
    nameWithType: ResourceDictionary
    fullName: ResourceDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
- uid: System.Windows.ResourceDictionary.Source
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
- uid: System.Windows.ResourceDictionary.Values
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
- uid: System.Windows.ResourceDictionary.#ctor*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary
  nameWithType: ResourceDictionary.ResourceDictionary
- uid: System.Windows.ResourceDictionary.Add*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add
  nameWithType: ResourceDictionary.Add
- uid: System.Windows.ResourceDictionary.BeginInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit
  nameWithType: ResourceDictionary.BeginInit
- uid: System.Windows.ResourceDictionary.Clear*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear
  nameWithType: ResourceDictionary.Clear
- uid: System.Windows.ResourceDictionary.Contains*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains
  nameWithType: ResourceDictionary.Contains
- uid: System.Windows.ResourceDictionary.CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo
  nameWithType: ResourceDictionary.CopyTo
- uid: System.Windows.ResourceDictionary.Count*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit
  nameWithType: ResourceDictionary.EndInit
- uid: System.Windows.ResourceDictionary.FindName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName
  nameWithType: ResourceDictionary.FindName
- uid: System.Windows.ResourceDictionary.GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: ResourceDictionary.GetEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item
  nameWithType: ResourceDictionary.Item
- uid: System.Windows.ResourceDictionary.Keys*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
- uid: System.Windows.ResourceDictionary.MergedDictionaries*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
- uid: System.Windows.ResourceDictionary.OnGettingValue*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue
  nameWithType: ResourceDictionary.OnGettingValue
- uid: System.Windows.ResourceDictionary.RegisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName
  nameWithType: ResourceDictionary.RegisterName
- uid: System.Windows.ResourceDictionary.Remove*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove
  nameWithType: ResourceDictionary.Remove
- uid: System.Windows.ResourceDictionary.Source*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName
  nameWithType: ResourceDictionary.UnregisterName
- uid: System.Windows.ResourceDictionary.Values*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
