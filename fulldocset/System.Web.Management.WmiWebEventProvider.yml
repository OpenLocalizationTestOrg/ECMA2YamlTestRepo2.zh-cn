### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WmiWebEventProvider
  id: WmiWebEventProvider
  children:
  - System.Web.Management.WmiWebEventProvider.#ctor
  - System.Web.Management.WmiWebEventProvider.Flush
  - System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WmiWebEventProvider.Shutdown
  langs:
  - csharp
  name: WmiWebEventProvider
  nameWithType: WmiWebEventProvider
  fullName: System.Web.Management.WmiWebEventProvider
  type: Class
  summary: "实现将 ASP.NET 运行状况监视事件映射到 Windows Management Instrumentation (WMI) 事件的事件提供程序。"
  remarks: "ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n ASP.NET uses this class to map health-monitoring events to WMI events. To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the WmiWebEventProvider class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.  \n  \n The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the WmiWebEventProvider class and mapped into WMI events. The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\\Microsoft.NET\\Framework\\\\*BuildNumber*. For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](http://msdn.microsoft.com/en-us/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.  \n  \n> [!NOTE]\n>  The WmiWebEventProvider class and the health event types to monitor are already configured by default. The only thing you need to do is to define the rule for all the health events. Remember that the health events are not dispatched to the WmiWebEventProvider provider by default.  \n  \n [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/add/codesnippet/visualbasic/t-system.web.management._2_1.vb)]\n [!code-cs[System.Web.Management.WmiWebEventProvider#1](~/add/codesnippet/csharp/t-system.web.management._2_1.cs)]  \n  \n The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the WmiWebEventProvider provider to process all health-monitoring events.  \n  \n```  \n<healthMonitoring>  \n  <rules>  \n    <add   \n      name=\"Using Wmi\"  \n      eventName=\"All Events\"   \n      provider=\"WmiWebEventProvider\"   \n      profile=\"Critical\"/>  \n  </rules>  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WmiWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.#ctor
  id: '#ctor'
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: WmiWebEventProvider()
  nameWithType: WmiWebEventProvider.WmiWebEventProvider()
  fullName: System.Web.Management.WmiWebEventProvider.WmiWebEventProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化的新实例<xref href=&quot;System.Web.Management.WmiWebEventProvider&quot;></xref>类。"
  remarks: "ASP.NET 运行状况监视系统在内部使用此构造函数。 你不应使用它来创建实例的<xref:System.Web.Management.TraceWebEventProvider>类，但你可以调用此构造函数，当您实现您自己的提供程序类型继承此类。</xref:System.Web.Management.TraceWebEventProvider>"
  syntax:
    content: public WmiWebEventProvider ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: WmiWebEventProvider.Flush()
  fullName: System.Web.Management.WmiWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "从提供程序的缓冲区中删除所有事件。"
  remarks: "当调用此方法时，所有提供程序的缓冲区中的事件将立即删除，无论自上次以来经过的时间量写入或多少事件都很缓冲区中。 最后一次写入时将重置为刷新操作的时间。 调用此方法时未启用缓冲机制起任何作用。"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WmiWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.WmiWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "设置此对象的初始值。"
  remarks: "ASP.NET 调用 Initialize 方法之后调用<xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A>构造函数。</xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> 调用此方法以初始化<xref:System.Web.Management.WmiWebEventProvider>类配置设置和配置文件中指定的名称。</xref:System.Web.Management.WmiWebEventProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "在配置文件中用于标识此提供程序的名称。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>对象，它指定为此提供程序配置文件中分配的特性。"
  overload: System.Web.Management.WmiWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "处理传递给提供的事件。"
  remarks: "这是，ASP.NET 运行状况监视功能可调用以启动事件的处理方法。"
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "<xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref>对象传递给过程。"
  overload: System.Web.Management.WmiWebEventProvider.ProcessEvent*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "不引发该事件。"
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: WmiWebEventProvider.Shutdown()
  fullName: System.Web.Management.WmiWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "执行与关闭提供程序关联的任务。"
  remarks: "ASP.NET 调用<xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>方法时托管 Web 应用程序的应用程序域终止。</xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> 该方法调用以执行将允许应用程序正常结束的任务。"
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Management.WmiWebEventProvider.#ctor
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: WmiWebEventProvider()
  nameWithType: WmiWebEventProvider.WmiWebEventProvider()
  fullName: System.Web.Management.WmiWebEventProvider.WmiWebEventProvider()
- uid: System.Web.Management.WmiWebEventProvider.Flush
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: WmiWebEventProvider.Flush()
  fullName: System.Web.Management.WmiWebEventProvider.Flush()
- uid: System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WmiWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.WmiWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WmiWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.WmiWebEventProvider.Shutdown
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: WmiWebEventProvider.Shutdown()
  fullName: System.Web.Management.WmiWebEventProvider.Shutdown()
- uid: System.Web.Management.WmiWebEventProvider.#ctor*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: WmiWebEventProvider
  nameWithType: WmiWebEventProvider.WmiWebEventProvider
- uid: System.Web.Management.WmiWebEventProvider.Flush*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: WmiWebEventProvider.Flush
- uid: System.Web.Management.WmiWebEventProvider.Initialize*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: WmiWebEventProvider.Initialize
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: WmiWebEventProvider.ProcessEvent
- uid: System.Web.Management.WmiWebEventProvider.Shutdown*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: WmiWebEventProvider.Shutdown
