### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyDescriptorCollection
  id: PropertyDescriptorCollection
  children:
  - System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  - System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  - System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.Clear
  - System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Count
  - System.ComponentModel.PropertyDescriptorCollection.Empty
  - System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  - System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  - System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  - System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Sort
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
  type: Class
  summary: "表示一套<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>对象。"
  remarks: "PropertyDescriptorCollection is read-only; it does not implement methods that add or remove properties. You must inherit from this class to implement these methods.  \n  \n Using the properties available in the PropertyDescriptorCollection class, you can query the collection about its contents. Use the <xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A> property to determine the number of elements in the collection. Use the [Item\\<xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to get a specific property by index number or by name.  \n  \n In addition to properties, you can use the <xref:System.ComponentModel.PropertyDescriptorCollection.Find%2A> method to get a description of the property with the specified name from the collection."
  example:
  - "The following code example creates a new PropertyDescriptorCollection using the properties on `button1`. It requires that `button1` has been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/csharp/t-system.componentmodel._39_1.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/cpp/t-system.componentmodel._39_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._39_1.vb)]  \n  \n The next example prints all the properties on a button in a text box. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/csharp/t-system.componentmodel._39_2.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/cpp/t-system.componentmodel._39_2.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._39_2.vb)]"
  syntax:
    content: 'public class PropertyDescriptorCollection : System.Collections.IDictionary, System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  id: '#ctor(System.ComponentModel.PropertyDescriptor[])'
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: PropertyDescriptorCollection(PropertyDescriptor[])
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref>类。"
  syntax:
    content: public PropertyDescriptorCollection (System.ComponentModel.PropertyDescriptor[] properties);
    parameters:
    - id: properties
      type: System.ComponentModel.PropertyDescriptor[]
      description: "类型的数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>提供此集合的属性。"
  overload: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  id: '#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)'
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref>类，该类是 （可选） 是只读的。"
  syntax:
    content: public PropertyDescriptorCollection (System.ComponentModel.PropertyDescriptor[] properties, bool readOnly);
    parameters:
    - id: properties
      type: System.ComponentModel.PropertyDescriptor[]
      description: "类型的数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>提供此集合的属性。"
    - id: readOnly
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，指定无法修改该集合。"
  overload: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  id: Add(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Add(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Add(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将指定的<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>到集合。"
  syntax:
    content: public int Add (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>要添加到集合。"
    return:
      type: System.Int32
      description: "索引<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>已添加到集合。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear
  id: Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: PropertyDescriptorCollection.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "中删除所有<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>从集合的对象。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  id: Contains(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Contains(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Contains(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Contains(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回集合中是否包含给定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>。"
  syntax:
    content: public bool Contains (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>若要在集合中找到。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合包含给定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDescriptorCollection.CopyTo(Array,Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将整个集合复制到一个数组中指定的索引编号开始。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>对象复制到集合中的元素。"
    - id: index
      type: System.Int32
      description: "索引`array`开始复制参数开始。"
  overload: System.ComponentModel.PropertyDescriptorCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Count
  id: Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取集合中的属性说明符的数目。"
  remarks: "你可以使用计数属性设置的一个循环来循环访问的对象的集合的限制。 因为集合是从零开始，请务必使用`Count - 1`作为循环的上限。"
  example:
  - "The following code example uses the Count property to print the number of properties on `button1`. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-vb[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._29_1.vb)]\n [!code-cpp[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/cpp/p-system.componentmodel._29_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/csharp/p-system.componentmodel._29_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "集合中的属性说明符的数目。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Empty
  id: Empty
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Empty
  nameWithType: PropertyDescriptorCollection.Empty
  fullName: System.ComponentModel.PropertyDescriptorCollection.Empty
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定可以使用而不是创建一个具有任何项的新的空集合。 这<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>字段是只读的。"
  syntax:
    content: public static readonly System.ComponentModel.PropertyDescriptorCollection Empty;
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Find(String,Boolean)
  nameWithType: PropertyDescriptorCollection.Find(String,Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>具有指定名称，使用一个布尔值以指示是否忽略大小写。"
  remarks: ''
  example:
  - "The following code example finds a specific <xref:System.ComponentModel.PropertyDescriptor>. It prints the type of component for this <xref:System.ComponentModel.PropertyDescriptor> in a text box. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/csharp/9cbbd46a-64d4-4a04-8109-_1.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/cpp/9cbbd46a-64d4-4a04-8109-_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/visualbasic/9cbbd46a-64d4-4a04-8109-_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor Find (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "名称<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>若要从集合中返回。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果你想要忽略的属性名称; 的大小写否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>具有指定名称，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果属性不存在。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PropertyDescriptorCollection.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回此类的枚举数。"
  remarks: ''
  example:
  - "The following code example gets an enumerator for the properties on `button1`. It uses the enumerator to print the names of the properties in the collection. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/cpp/m-system.componentmodel._32_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.componentmodel._32_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._32_1.vb)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "类型<xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>枚举数"
  overload: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  id: IndexOf(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: IndexOf(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回的索引给定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>。"
  syntax:
    content: public int IndexOf (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>若要返回的索引。"
    return:
      type: System.Int32
      description: "索引的给定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  id: Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Insert(Int32,PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将添加<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>到集合在指定的索引号。"
  syntax:
    content: public void Insert (int index, System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: index
      type: System.Int32
      description: "在其中添加索引`value`到集合的参数。"
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>要添加到集合。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  id: InternalSort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: InternalSort(IComparer)
  nameWithType: PropertyDescriptorCollection.InternalSort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "对此集合的成员使用指定<xref:System.Collections.IComparer>。</xref:System.Collections.IComparer>进行排序"
  syntax:
    content: protected void InternalSort (System.Collections.IComparer sorter);
    parameters:
    - id: sorter
      type: System.Collections.IComparer
      description: "要用于排序的比较器<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的对象。"
  overload: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  id: InternalSort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: InternalSort(String[])
  nameWithType: PropertyDescriptorCollection.InternalSort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "对此集合的成员进行排序。 指定的顺序是首先应用，然后为此集合，通常按字母顺序显示的默认排序。"
  remarks: ''
  example:
  - "The following code example defines the sort order for the InternalSort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/csharp/362da624-49d1-447a-bc3b-_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/cpp/362da624-49d1-447a-bc3b-_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/visualbasic/362da624-49d1-447a-bc3b-_1.vb)]"
  syntax:
    content: protected void InternalSort (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: "描述的顺序进行排序的字符串数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的对象。"
  overload: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PropertyDescriptorCollection.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>在指定的索引号。"
  remarks: "索引号是从零开始。 因此，你必须再从减去 1 的特定<xref:System.ComponentModel.PropertyDescriptor>访问该<xref:System.ComponentModel.PropertyDescriptor>。</xref:System.ComponentModel.PropertyDescriptor></xref:System.ComponentModel.PropertyDescriptor>的数字位置 例如，若要获取第三个<xref:System.ComponentModel.PropertyDescriptor>，你需要指定`myColl[2]`。</xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "The following code example uses the Item property to print the name of the <xref:System.ComponentModel.PropertyDescriptor> specified by the index number in a text box. Because the index number is zero-based, this example prints the name of the second <xref:System.ComponentModel.PropertyDescriptor>. It requires that `button1` has been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/cpp/p-system.componentmodel._18_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/csharp/p-system.componentmodel._18_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._18_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>要获取或设置。"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>具有指定的索引号。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> index </code>参数不是项的有效索引。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  id: Item(System.String)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyDescriptorCollection.Item(String)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>具有指定名称。"
  remarks: "<xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A>搜索名称时，属性是否区分大小写。</xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> 即&quot;Pname&quot;和&quot;pname&quot;的名称被视为两个不同的属性。"
  example:
  - "The following code example uses the <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to print the type of component for the <xref:System.ComponentModel.PropertyDescriptor> specified by the index. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/cpp/p-system.componentmodel._19_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._19_1.vb)]\n [!code-cs[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.componentmodel._19_1.cs)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "名称<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>若要从集合中获取。"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>具有指定名称，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果属性不存在。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  id: Remove(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Remove(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Remove(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Remove(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "中移除指定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>从集合。"
  syntax:
    content: public void Remove (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>若要从集合中移除。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "删除<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>从集合的指定索引处。"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>若要从集合中移除。"
  overload: System.ComponentModel.PropertyDescriptorCollection.RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort
  id: Sort
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort()
  nameWithType: PropertyDescriptorCollection.Sort()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "对此集合的成员对于此集合，通常按字母顺序显示使用默认排序进行排序。"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "一个新<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，其中包含已排序<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>对象。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  id: Sort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "对此集合的成员使用指定<xref:System.Collections.IComparer>。</xref:System.Collections.IComparer>进行排序"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "要用于排序的比较器<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的对象。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "一个新<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，其中包含已排序<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>对象。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  id: Sort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(String[])
  nameWithType: PropertyDescriptorCollection.Sort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "对此集合的成员进行排序。 指定的顺序是首先应用，然后为此集合，通常按字母顺序显示的默认排序。"
  remarks: ''
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/csharp/m-system.componentmodel._8_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._8_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/cpp/m-system.componentmodel._8_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: "描述的顺序进行排序的字符串数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的对象。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "一个新<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，其中包含已排序<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>对象。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  id: Sort(System.String[],System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(String[],IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(String[],IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[],IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "对此集合的成员进行排序。 指定的顺序是首先应用，然后通过使用指定的<xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>排序"
  remarks: ''
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/csharp/647021c9-86bc-46f3-95f4-_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/visualbasic/647021c9-86bc-46f3-95f4-_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/cpp/647021c9-86bc-46f3-95f4-_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (string[] names, System.Collections.IComparer comparer);
    parameters:
    - id: names
      type: System.String[]
      description: "描述的顺序进行排序的字符串数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的对象。"
    - id: comparer
      type: System.Collections.IComparer
      description: "要用于排序的比较器<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的对象。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "一个新<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，其中包含已排序<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>对象。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取集合中包含的元素数。"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "集合中包含的元素数。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示是否同步对集合的访问 （线程安全）。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对集合的访问是同步的 （线程安全）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取可用于同步对集合的访问的对象。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "一个可用于同步对集合的访问的对象。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将具有所提供的键和值的元素添加到<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "<xref:System.Object>要用作添加元素的键</xref:System.Object>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>要用作添加元素的值</xref:System.Object>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "从<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>中移除所有元素"
  syntax:
    content: void IDictionary.Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定是否<xref:System.Collections.IDictionary>包含具有指定键的元素。</xref:System.Collections.IDictionary>"
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要在<xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary>查找的键"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IDictionary>包含的元素具有键; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回此类的枚举数。"
  remarks: ''
  example:
  - "The following code example gets an enumerator for the properties on `button1`. It uses the enumerator to print the names of the properties in the collection. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/cpp/3bd980e1-aa61-4b0a-875e-_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/3bd980e1-aa61-4b0a-875e-_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/3bd980e1-aa61-4b0a-875e-_1.vb)]"
  syntax:
    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "类型<xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>枚举数"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示是否<xref:System.Collections.IDictionary>具有固定的大小。</xref:System.Collections.IDictionary>"
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IDictionary>具有固定大小; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示是否<xref:System.Collections.IDictionary>是只读的。</xref:System.Collections.IDictionary>"
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IDictionary>只读的; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置具有指定键的元素。"
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "要获取或设置元素的键。"
    return:
      type: System.Object
      description: "带有指定键的元素。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取<xref:System.Collections.ICollection>包含的<xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary>键</xref:System.Collections.ICollection>"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含的<xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary>键</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "从<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>移除带有指定键的元素"
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要移除的元素的键。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取<xref:System.Collections.ICollection>包含<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>中的值</xref:System.Collections.ICollection>"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>中的值</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回一个<xref:System.Collections.IEnumerator><xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary> </xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator> <xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary> </xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将某项添加到<xref:System.Collections.IList>。</xref:System.Collections.IList>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加到集合的项。"
    return:
      type: System.Int32
      description: "新元素的插入位置。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "删除集合中的所有项。"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定集合是否包含特定值。"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在集合中定位的项。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合; 中找到该项目否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定集合中的指定项的索引。"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在集合中定位的项。"
    return:
      type: System.Int32
      description: "索引<code> value </code>如果找到在列表中，否则为-1。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将一项插入集合中指定索引处。"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引位置`value`应插入。"
    - id: value
      type: System.Object
      description: "要插入到集合的项。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示集合是否具有固定的大小。"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合具有固定的大小，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示集合是否只读的。"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该集合为只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置指定索引处的集合中的项。"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "要获取或设置项的从零开始索引。"
    return:
      type: System.Object
      description: "指定索引处的元素。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is not a <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>小于 0。       -<code>index</code>等于或大于<xref:System.ComponentModel.EventDescriptorCollection.Count*>。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "从集合中移除指定的值的第一个匹配项。"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要从集合中移除的项。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除指定索引处的项。"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要移除的项的从零开始的索引。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是只读的。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection(PropertyDescriptor[])
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Add(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Add(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Clear()
  nameWithType: PropertyDescriptorCollection.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Contains(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Contains(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Contains(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDescriptorCollection.CopyTo(Array,Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.ComponentModel.PropertyDescriptorCollection.Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.Empty
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Empty
  nameWithType: PropertyDescriptorCollection.Empty
  fullName: System.ComponentModel.PropertyDescriptorCollection.Empty
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Find(String,Boolean)
  nameWithType: PropertyDescriptorCollection.Find(String,Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Find(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PropertyDescriptorCollection.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: IndexOf(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Insert(Int32,PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort(IComparer)
  nameWithType: PropertyDescriptorCollection.InternalSort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort(String[])
  nameWithType: PropertyDescriptorCollection.InternalSort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PropertyDescriptorCollection.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item(String)
  nameWithType: PropertyDescriptorCollection.Item(String)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(String)
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Remove(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Remove(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Remove(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort()
  nameWithType: PropertyDescriptorCollection.Sort()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort()
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(IComparer)
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(String[])
  nameWithType: PropertyDescriptorCollection.Sort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[])
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(String[],IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(String[],IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[],IComparer)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Values
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptorCollection.Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Add
  nameWithType: PropertyDescriptorCollection.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Clear
  nameWithType: PropertyDescriptorCollection.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Contains
  nameWithType: PropertyDescriptorCollection.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyDescriptorCollection.CopyTo
- uid: System.ComponentModel.PropertyDescriptorCollection.Count*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.Find*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Find
  nameWithType: PropertyDescriptorCollection.Find
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PropertyDescriptorCollection.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: IndexOf
  nameWithType: PropertyDescriptorCollection.IndexOf
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Insert
  nameWithType: PropertyDescriptorCollection.Insert
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort
  nameWithType: PropertyDescriptorCollection.InternalSort
- uid: System.ComponentModel.PropertyDescriptorCollection.Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item
  nameWithType: PropertyDescriptorCollection.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyDescriptorCollection.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: RemoveAt
  nameWithType: PropertyDescriptorCollection.RemoveAt
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort
  nameWithType: PropertyDescriptorCollection.Sort
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Clear
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt
