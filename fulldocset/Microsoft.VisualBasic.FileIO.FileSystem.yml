### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.FileSystem
  id: FileSystem
  children:
  - Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  - Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.Drives
  - Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  langs:
  - csharp
  name: FileSystem
  nameWithType: FileSystem
  fullName: Microsoft.VisualBasic.FileIO.FileSystem
  type: Class
  summary: "提供属性和方法用于处理驱动器、 文件和目录。"
  remarks: "下表列出了所涉及的任务的示例`My.Computer.FileSystem`对象。      |||  |-|-|  |到 |请参阅 |  |从文本文件读取 |[如何︰ 读取文本文件](~/add/includes/ajax-current-ext-md.md)|  |从带分隔符的文本文件中读取 |[如何︰ 读取逗号分隔的文本文件](~/add/includes/ajax-current-ext-md.md)|  |从固定宽度的文本文件读取 |[如何︰ 读取固定宽度的文本文件](~/add/includes/ajax-current-ext-md.md)|  |从具有多种格式的文本文件读取 |[如何︰ 读取具有多种格式的文本文件](~/add/includes/ajax-current-ext-md.md)|  |从二进制文件中读取 |[如何︰ 读取二进制文件](~/add/includes/ajax-current-ext-md.md)|  |从具有<xref:System.IO.StreamReader>的文本文件中读取 |[如何︰ 从文件使用 StreamReader 读取文本](~/add/includes/ajax-current-ext-md.md)|  |写入文本文件 |[如何︰ 向文件写入文本](~/add/includes/ajax-current-ext-md.md)|  |将追加到文本文件 |[如何︰ 向文本文件追加](~/add/includes/ajax-current-ext-md.md)|  |写入二进制文件 |[如何︰ 写入二进制文件](~/add/includes/ajax-current-ext-md.md)|  |写入文本文件**我的文档**目录 |[如何︰ 向文件中写入文本我的文档目录](~/add/includes/ajax-current-ext-md.md)|  |写入的文本文件`StreamWriter` |[如何︰ 使用 StreamWriter 向文件写入文本](~/add/includes/ajax-current-ext-md.md)|  |将具有特定模式的文件复制 |[如何︰ 将具有特定模式的文件复制到目录](~/add/includes/ajax-current-ext-md.md)|  |将文件复制到同一个目录 |[如何︰ 在同一目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|  |将文件复制到其他目录 |[如何︰ 在不同目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|  |创建文件 |[如何︰ 创建文件](~/add/includes/ajax-current-ext-md.md)|  |删除文件 |[如何︰ 删除文件](~/add/includes/ajax-current-ext-md.md)|  |查找具有特定模式的文件 |[如何︰ 查找具有特定模式的文件](~/add/includes/ajax-current-ext-md.md)|  |移动文件 |[如何︰ 将文件移](~/add/includes/ajax-current-ext-md.md)|  |重命名文件 |[如何︰ 重命名文件](~/add/includes/ajax-current-ext-md.md)|  |将目录复制到另一个目录 |[如何︰ 将目录复制到另一个目录](~/add/includes/ajax-current-ext-md.md)|  |创建一个目录 |[如何︰ 创建一个目录](~/add/includes/ajax-current-ext-md.md)|  |查找具有特定模式的子目录 |[如何︰ 查找具有特定模式的子目录](~/add/includes/ajax-current-ext-md.md)|  |获取目录中的文件的集合 |[如何︰ 获取目录中的文件的集合](~/add/includes/ajax-current-ext-md.md)|  |从读取**我的文档**目录 |[如何︰ 检索的内容我的文档目录](~/add/includes/ajax-current-ext-md.md)|  |分析文件路径 |[如何︰ 分析文件路径](~/add/includes/ajax-current-ext-md.md)| </xref:System.IO.StreamReader>"
  example:
  - "This example checks to determine whether the folder `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbVbcnMyFileSystem#23](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._1_1.vb)]"
  syntax:
    content: public class FileSystem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "初始化的新实例<xref href=&quot;Microsoft.VisualBasic.FileIO.FileSystem&quot;></xref>类。"
  remarks: ''
  example:
  - '[Objects (Visual Basic)](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public FileSystem ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "合并两个路径，并返回格式正确的路径。"
  remarks: "此方法将修整多余的斜杠标记字符创建格式正确的路径。       下表列出的任务涉及示例`My.Computer.FileSystem.CombinePath`方法。      |||  |-|-|  |到 |请参阅 |  |合并的目录路径和文件名称 |[如何︰ 分析在 Visual Basic 中的文件路径](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example combines a directory path and file name to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#3](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_1.vb)]  \n  \n This example combines two paths to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#4](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_2.vb)]  \n  \n This example returns `C:\\Dir1\\Dir2\\Dir4\\Dir5\\File.txt`."
  syntax:
    content: public static string CombinePath (string baseDirectory, string relativePath);
    parameters:
    - id: baseDirectory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要组合的第一个路径。"
    - id: relativePath
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要合并的第二个路径。"
    return:
      type: System.String
      description: "指定的路径的组合。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baseDirectory</code>或<code>relativePath</code>格式不正确的路径。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将目录的内容复制到另一个目录。"
  remarks: "此方法将源目录的内容复制到目标目录。 如果目标目录不存在，则创建它。 如果在目标位置存在具有相同名称的目录，这两个目录的内容合并。 你可以在操作期间指定目录的新名称。       复制目录内的文件时，可能会引发异常导致由特定的文件。 当引发此类异常时，它们被合并为单个异常其`Data`属性的形式保存一些条目<xref:System.Collections.IDictionary>在其中文件或目录路径是键和相应值中包含的特定异常消息。</xref:System.Collections.IDictionary> 使用`For…Each`用于循环访问项。       下表列出的任务涉及示例`My.Computer.FileSystem.CopyDirectory`方法。      |||  |-|-|  |到 |请参阅 |  |复制目录 |[如何︰ 将目录复制到在 Visual Basic 中的另一个目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/02942d01-133a-478f-ae50-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要复制的目录。"
    - id: destinationDirectoryName
      type: System.String
      description: "应将目录内容复制到该位置。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>或<code>sourceDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "源目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "源路径和目标路径是相同的。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该操作是循环。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件夹名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目标文件存在，但不能访问。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将目录的内容复制到另一个目录。"
  remarks: "此方法将源目录的内容复制到目标目录。 如果目标目录不存在，则创建它。 如果在目标位置存在具有相同名称的目录，这两个目录的内容合并。 你可以在操作期间指定目录的新名称。       复制目录内的文件时，可能会引发异常导致由特定的文件。 当引发此类异常时，它们被合并为单个异常其`Data`属性的形式保存一些条目<xref:System.Collections.IDictionary>在其中文件或目录路径是键和相应值中包含的特定异常消息。</xref:System.Collections.IDictionary> 使用`For…Each`用于循环访问项。       下表列出的任务涉及示例`My.Computer.FileSystem.CopyDirectory`方法。      |||  |-|-|  |到 |请参阅 |  |复制目录 |[如何︰ 将目录复制到在 Visual Basic 中的另一个目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/8f7d2df3-4266-47ac-8381-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要复制的目录。"
    - id: destinationDirectoryName
      type: System.String
      description: "应将目录内容复制到该位置。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>或<code>sourceDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "源目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "源路径和目标路径是相同的。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该操作是循环。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件夹名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目标文件存在，但不能访问。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>设置为<xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;></xref>并且用户取消操作，或无法复制目录中的一个或多个文件。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将目录的内容复制到另一个目录。"
  remarks: "此方法将源目录的内容复制到目标目录。 如果目标目录不存在，则创建它。 如果在目标位置存在具有相同名称的目录，这两个目录的内容合并。 你可以在操作期间指定目录的新名称。       复制目录内的文件时，可能会引发异常导致由特定的文件，如文件时合并期间现有`overwrite`设置为`False`。 当引发此类异常时，它们被合并为单个异常其`Data`属性的形式保存一些条目<xref:System.Collections.IDictionary>在其中文件或目录路径是键和相应值中包含的特定异常消息。</xref:System.Collections.IDictionary> 使用`For…Each`用于循环访问项。       下表列出的任务涉及示例`My.Computer.FileSystem.CopyDirectory`方法。      |||  |-|-|  |到 |请参阅 |  |复制目录 |[如何︰ 将目录复制到在 Visual Basic 中的另一个目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/fdc93a8a-3025-4efd-8987-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要复制的目录。"
    - id: destinationDirectoryName
      type: System.String
      description: "应将目录内容复制到该位置。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>或<code>sourceDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "源目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "源路径和目标路径是相同的。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该操作是循环。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件夹名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目标文件存在，但不能访问。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将目录的内容复制到另一个目录。"
  remarks: "此方法将源目录的内容复制到目标目录。 如果目标目录不存在，则创建它。 如果在目标位置存在具有相同名称的目录，这两个目录的内容合并。 你可以在操作期间指定目录的新名称。       复制目录内的文件时，可能会引发异常导致由特定的文件。 当引发此类异常时，它们被合并为单个异常其`Data`属性的形式保存一些条目<xref:System.Collections.IDictionary>在其中文件或目录路径是键和相应值中包含的特定异常消息。</xref:System.Collections.IDictionary> 使用`For…Each`用于循环访问项。       下表列出的任务涉及示例`My.Computer.FileSystem.CopyDirectory`方法。      |||  |-|-|  |到 |请参阅 |  |复制目录 |[如何︰ 将目录复制到在 Visual Basic 中的另一个目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/c0cf1625-22a4-46e5-a6cf-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要复制的目录。"
    - id: destinationDirectoryName
      type: System.String
      description: "应将目录内容复制到该位置。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定应该是什么如果用户单击这样做**取消**在操作过程中。 默认值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>或<code>sourceDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "源目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "源路径和目标路径是相同的。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该操作是循环。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件夹名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目标文件存在，但不能访问。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>设置为<xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;></xref>并且用户取消操作，或无法复制目录中的一个或多个文件。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文件复制到新位置。"
  remarks: "`CopyFile`不保留 Ace （访问控制项）。 新创建的文件默认 Ace 继承在其中创建的目录。       下表列出了所涉及的任务的示例`My.Computer.FileSystem.CopyFile`方法。      |||  |-|-|  |到 |请参阅 |  |将文件复制到相同的目录。 |[如何︰ 在 Visual Basic 中的同一目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|  |将文件复制到不同的目录。 |[如何︰ 在 Visual Basic 中的不同目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要复制的文件。"
    - id: destinationFileName
      type: System.String
      description: "应将文件复制到的位置。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>包含路径信息。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>或<code>sourceFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "源文件无效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "具有相同名称的目标目录中的文件正在使用。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文件复制到新位置。"
  remarks: "`CopyFile`不保留 Ace （访问控制项）。 新创建的文件默认 Ace 继承在其中创建的目录。       下表列出了所涉及的任务的示例`My.Computer.FileSystem.CopyFile`方法。      |||  |-|-|  |到 |请参阅 |  |将文件复制到相同的目录。 |[如何︰ 在 Visual Basic 中的同一目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|  |将文件复制到不同的目录。 |[如何︰ 在 Visual Basic 中的不同目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要复制的文件。"
    - id: destinationFileName
      type: System.String
      description: "应将文件复制到的位置。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>包含路径信息。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>或<code>sourceFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "源文件无效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目标文件存在和<code> overwrite </code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文件复制到新位置。"
  remarks: "`CopyFile`不保留 Ace （访问控制项）。 新创建的文件默认 Ace 继承在其中创建的目录。       下表列出了所涉及的任务的示例`My.Computer.FileSystem.CopyFile`方法。      |||  |-|-|  |到 |请参阅 |  |将文件复制到相同的目录。 |[如何︰ 在 Visual Basic 中的同一目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|  |将文件复制到不同的目录。 |[如何︰ 在 Visual Basic 中的不同目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要复制的文件。"
    - id: destinationFileName
      type: System.String
      description: "应将文件复制到的位置。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果应覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>包含路径信息。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>或<code>sourceFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "源文件无效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目标文件存在和<code> overwrite </code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文件复制到新位置。"
  remarks: "`CopyFile`不保留 Ace （访问控制项）。 新创建的文件默认 Ace 继承在其中创建的目录。       下表列出了所涉及的任务的示例`My.Computer.FileSystem.CopyFile`方法。      |||  |-|-|  |到 |请参阅 |  |将文件复制到相同的目录。 |[如何︰ 在 Visual Basic 中的同一目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|  |将文件复制到不同的目录。 |[如何︰ 在 Visual Basic 中的不同目录中创建文件的副本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要复制的文件。"
    - id: destinationFileName
      type: System.String
      description: "应将文件复制到的位置。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定应该是什么如果用户单击这样做**取消**在操作过程中。 默认值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>包含路径信息。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>或<code>sourceFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "源文件无效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目标文件存在和<code> overwrite </code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>UICancelOption</code>设置为<xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>，并且用户已取消该操作或发生了 I/O 错误。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "创建目录。"
  remarks: "如果该目录已存在，不引发异常。       下表列出的任务涉及示例`My.Computer.FileSystem.CreateDirectory`方法。      |||  |-|-|  |到 |请参阅 |  |创建一个目录 |[如何︰ 在 Visual Basic 中创建一个目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the directory, `NewDirectory`, in `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbcnMyFileSystem#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._120_1.vb)]"
  syntax:
    content: public static void CreateDirectory (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "名称和目录的位置。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "目录名称格式不正确。 例如，它包含非法字符，或仅为空白。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "目录名称过长。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目录名称是仅为冒号 （:）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "要创建的父目录是目录的只读的"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有权限创建目录。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  id: CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "获取或设置当前目录。"
  remarks: '`CurrentDirectory`是一个系统范围的环境变量。'
  example:
  - "This example returns the current directory and displays it in a message box.  \n  \n [!code-vb[VbVbcnMyFileSystem#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_1.vb)]  \n  \n This example sets the current directory to `C:\\TestDirectory`.  \n  \n [!code-vb[VbVbcnMyFileSystem#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_2.vb)]"
  syntax:
    content: public static string CurrentDirectory { get; set; }
    return:
      type: System.String
      description: "文件 I/O 操作在当前目录。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "路径不是有效的。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "该用户缺少必要的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "删除的目录。"
  remarks: ''
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);
    parameters:
    - id: directory
      type: System.String
      description: "要删除的目录。"
    - id: onDirectoryNotEmpty
      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
      description: "指定要从中删除一个目录包含文件或目录时应采取的操作。 默认值是<xref uid=&quot;langword_csharp_DeleteDirectoryOption.DeleteAllContents&quot; name=&quot;DeleteDirectoryOption.DeleteAllContents&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路径是零长度字符串、 格式不正确，仅包含空格，或包含无效字符 （包括通配符）。 路径是一个设备路径 (开头\\\\ \\\\。\\\\)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目录不存在，或者是文件。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目录或子目录中的文件正在使用。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目录名称包含冒号 （:）。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户没有所需的权限。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "用户取消操作，或无法删除该目录。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "删除的目录。"
  remarks: "`showUI`和`recycle`不是用户交互，例如 Windows 服务的应用程序中不支持参数。"
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: directory
      type: System.String
      description: "要删除的目录。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "指定是否应删除的文件发送到**回收站**。 默认值是<xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路径是零长度字符串、 格式不正确，仅包含空格，或包含无效字符 （包括通配符）。 路径是一个设备路径 (开头\\\\ \\\\。\\\\)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目录不存在，或者是文件。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目录或子目录中的文件正在使用。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目录名称包含冒号 （:）。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户没有所需的权限。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "用户取消操作，或无法删除该目录。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "删除的目录。"
  remarks: "`showUI`， `recycle`，和`onUserCancel`不是用户交互，例如 Windows 服务的应用程序中不支持参数。"
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: directory
      type: System.String
      description: "要删除的目录。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "指定是否应删除的文件发送到**回收站**。 默认值是<xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定是否引发异常，如果用户单击**取消**。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路径是零长度字符串、 格式不正确，仅包含空格，或包含无效字符 （包括通配符）。 路径是一个设备路径 (开头\\\\ \\\\。\\\\)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目录不存在，或者是文件。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目录或子目录中的文件正在使用。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目录名称包含冒号 （:）。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "用户没有所需的权限。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "用户取消操作，或无法删除该目录。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "删除的文件。"
  remarks: "下表列出的任务涉及示例`My.Computer.FileSystem.DeleteFile`方法。      |||  |-|-|  |到 |请参阅 |  |要删除的文件 |[如何︰ 删除在 Visual Basic 中的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: "名称和要删除的文件的路径。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;它具有尾随斜杠其中必须指定文件;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "该文件正在使用。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有权限删除此文件或文件是只读的。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "删除的文件。"
  remarks: "`showUI`和`recycle`不是用户交互，例如 Windows 服务的应用程序中不支持参数。       下表列出的任务涉及示例`My.Computer.FileSystem.DeleteFile`方法。      |||  |-|-|  |到 |请参阅 |  |要删除的文件 |[如何︰ 删除在 Visual Basic 中的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: file
      type: System.String
      description: "名称和要删除的文件的路径。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "是否应将已删除的文件发送到**回收站**。 默认值是<xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;它具有尾随斜杠其中必须指定文件;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "该文件正在使用。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有权限删除此文件或文件是只读的。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "删除的文件。"
  remarks: "`showUI`， `recycle`，和`onUserCancel`不是用户交互，例如 Windows 服务的应用程序中不支持参数。       下表列出的任务涉及示例`My.Computer.FileSystem.DeleteFile`方法。      |||  |-|-|  |到 |请参阅 |  |要删除的文件 |[如何︰ 删除在 Visual Basic 中的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: file
      type: System.String
      description: "名称和要删除的文件的路径。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "是否应将已删除的文件发送到**回收站**。 默认值是<xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定当用户取消操作时引发异常。 默认值是<xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;它具有尾随斜杠其中必须指定文件;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "该文件正在使用。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有权限删除此文件或文件是只读的。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "用户取消操作和<code> onUserCancel </code>设置为<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果指定的目录存在。"
  remarks: ''
  example:
  - "This example determines whether the directory `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbRefFile#13](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._66_1.vb)]"
  syntax:
    content: public static bool DirectoryExists (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "目录路径。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果目录存在，则否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  id: Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回的所有可用的驱动器名称的只读集合。"
  remarks: "此属性返回的所有逻辑驱动器。"
  example:
  - "This example displays the available drive names in a message box.  \n  \n [!code-vb[VbRefFile#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._109_1.vb)]"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo> Drives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
      description: "所有可用的驱动器作为只读集合<xref href=&quot;System.IO.DriveInfo&quot;></xref>对象。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果指定的文件存在。"
  remarks: "如果应用程序没有足够的权限读取指定的文件，`FileExists`方法返回`False`，无论是否存在的路径; 该方法不会引发异常。"
  example:
  - "This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.  \n  \n [!code-vb[VbRefFile#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._163_1.vb)]"
  syntax:
    content: public static bool FileExists (string file);
    parameters:
    - id: file
      type: System.String
      description: "名称和文件的路径。"
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果文件存在; 否则此方法返回<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "文件的名称以反斜杠结尾 (\\\\)。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回表示包含指定的文本的文件的名称的字符串的只读集合。"
  remarks: "如果未不找到指定的模式匹配的任何文件，则返回空集合。       下表列出的任务涉及示例`My.Computer.FileSystem.FindInFiles`方法。      |||  |-|-|  |到 |请参阅 |  |搜索包含特定字符串的文件的目录 |[演练︰ 操作 Visual Basic 中文件和目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/c1aba623-4b25-4809-b962-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);
    parameters:
    - id: directory
      type: System.String
      description: "要搜索的目录。"
    - id: containsText
      type: System.String
      description: "搜索文本。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果搜索应区分大小写;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>。"
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "是否包括子文件夹。 默认值是<xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "包含指定的文本的文件的名称的只读集合..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头`\\.\`)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目录指向现有文件。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "指定的目录路径包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "该用户缺少必要的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回表示包含指定的文本的文件的名称的字符串的只读集合。"
  remarks: "如果未不找到指定的模式匹配的任何文件，则返回空集合。       下表列出的任务涉及示例`My.Computer.FileSystem.FindInFiles`方法。      |||  |-|-|  |到 |请参阅 |  |搜索包含特定字符串的文件的目录 |[演练︰ 操作 Visual Basic 中文件和目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/3de7a74a-9724-4c87-9247-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards);
    parameters:
    - id: directory
      type: System.String
      description: "要搜索的目录。"
    - id: containsText
      type: System.String
      description: "搜索文本。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果搜索应区分大小写;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>。"
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "是否包括子文件夹。 默认值是<xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>。"
    - id: fileWildcards
      type: System.String[]
      description: "要被匹配的模式。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "包含指定的文本的文件的名称的只读集合..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头`\\.\`)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目录指向现有文件。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "指定的目录路径包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "该用户缺少必要的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回一个表示目录内的子目录的路径名称的字符串集合。"
  remarks: "下表列出的任务涉及示例`My.Computer.FileSystem.GetDirectories`方法。      |||  |-|-|  |到 |请参阅 |  |列出具有特定模式的子目录 |[如何︰ 在 Visual Basic 中查找具有特定模式的子目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._39_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "名称和目录的路径。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "只读集合中指定的目录的子目录的路径名称..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目录指向现有文件。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "该用户缺少必要的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回一个表示目录内的子目录的路径名称的字符串集合。"
  remarks: "你可以使用`wildcards`参数来指定特定模式。 如果你想要在搜索中包括的子目录的内容，设置`searchType`参数`SearchAllSubDirectories`。       如果未不找到指定的模式匹配的任何目录，则返回空集合。       下表列出的任务涉及示例`My.Computer.FileSystem.GetDirectories`方法。      |||  |-|-|  |到 |请参阅 |  |列出具有特定模式的子目录 |[如何︰ 在 Visual Basic 中查找具有特定模式的子目录](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/7bb013c4-a081-4298-a67c-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "名称和目录的路径。"
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "是否包括子文件夹。 默认值是<xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>。"
    - id: wildcards
      type: System.String[]
      description: "要匹配名称的模式。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "路径名称中指定的目录的子目录的只读集合。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一个或多个指定的通配符字符是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>，空字符串，或仅包含空格。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目录指向现有文件。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "该用户缺少必要的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  id: GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>指定路径的对象。"
  remarks: "如果目录不存在，不会引发异常第一次之前属性<xref:System.IO.DirectoryInfo>访问对象。</xref:System.IO.DirectoryInfo>"
  example:
  - "This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\\Documents and Settings` and displays the directory's creation time, last access time, and last write time.  \n  \n [!code-vb[VbRefFile#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._121_1.vb)]"
  syntax:
    content: public static System.IO.DirectoryInfo GetDirectoryInfo (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 目录的路径。"
    return:
      type: System.IO.DirectoryInfo
      description: "<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>指定路径的对象。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目录路径包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  id: GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回<xref href=&quot;System.IO.DriveInfo&quot;></xref>对于指定的驱动器的对象。"
  remarks: "<xref:System.IO.DriveInfo>类驱动器进行建模，并提供方法和属性，以查询有关驱动器的信息。</xref:System.IO.DriveInfo> 使用<xref:System.IO.DriveInfo>来确定哪些驱动器可用，以及它们是哪种类型的驱动器。</xref:System.IO.DriveInfo> 你还可以查询属性来确定容量和可用空间的驱动器上。"
  example:
  - "This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.  \n  \n [!code-vb[VbRefFile#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._132_1.vb)]  \n  \n For information on the different drive types, see <xref:System.IO.DriveType>."
  syntax:
    content: public static System.IO.DriveInfo GetDriveInfo (string drive);
    parameters:
    - id: drive
      type: System.String
      description: "要检查的驱动器。"
    return:
      type: System.IO.DriveInfo
      description: "<xref href=&quot;System.IO.DriveInfo&quot;></xref>对于指定的驱动器的对象。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>drive</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回<xref href=&quot;System.IO.FileInfo&quot;></xref>指定文件的对象。"
  remarks: "如果文件不存在; 不会引发异常相反，它将引发第一次访问对象的属性。       下表列出的任务涉及示例`My.Computer.FileSystem.GetFileInfo`方法。      |||  |-|-|  |到 |请参阅 |  |确定文件的名称和路径 |[如何︰ 分析在 Visual Basic 中的文件路径](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example retrieves a <xref:System.IO.FileInfo?displayProperty=fullName> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.  \n  \n [!code-vb[VbRefFile#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._167_1.vb)]"
  syntax:
    content: public static System.IO.FileInfo GetFileInfo (string file);
    parameters:
    - id: file
      type: System.String
      description: "名称和文件的路径。"
    return:
      type: System.IO.FileInfo
      description: "<xref href=&quot;System.IO.FileInfo&quot;></xref>指定的文件的对象"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路径名称格式不正确。 例如，它包含无效字符或仅为空白。 文件名称具有尾随斜杠标记。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路径包含在字符串中间的冒号。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径过长。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少必要的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "该用户缺少 ACL （访问控制列表） 文件的访问权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回字符串表示目录内文件的名称的只读的集合。"
  remarks: "如果未不找到指定的模式匹配的任何文件，则返回空集合。       下表列出了所涉及的任务的示例`My.Computer.FileSystem.GetFiles`方法。      |||  |-|-|  |到 |请参阅 |  |获取目录中的文件的集合 |[如何︰ 在 Visual Basic 中获取的目录中的文件集合](~/add/includes/ajax-current-ext-md.md)|  |在目录中查找具有特定模式的文件 |[如何︰ 在 Visual Basic 中查找具有特定模式的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "要搜索的目录。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "从指定的目录的文件名称的只读集合。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "要搜索的目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>指向现有文件。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "该用户缺少必要的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回字符串表示目录内文件的名称的只读的集合。"
  remarks: "如果未不找到指定的模式匹配的任何文件，则返回空集合。       下表列出了所涉及的任务的示例`My.Computer.FileSystem.GetFiles`方法。      |||  |-|-|  |到 |请参阅 |  |获取目录中的文件的集合 |[如何︰ 在 Visual Basic 中获取的目录中的文件集合](~/add/includes/ajax-current-ext-md.md)|  |在目录中查找具有特定模式的文件 |[如何︰ 在 Visual Basic 中查找具有特定模式的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "要搜索的目录。"
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "是否包括子文件夹。 默认值是<xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>。"
    - id: wildcards
      type: System.String[]
      description: "要被匹配的模式。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "从指定的目录的文件名称的只读集合。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "要搜索的目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>指向现有文件。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "该用户缺少必要的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  id: GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "分析提供的路径超出文件名称。"
  remarks: "这是一个字符串操作;`FileSystem`不检查。       `GetName`方法将忽略斜杠标记发生在路径末尾。       下表列出的任务涉及示例`My.Computer.FileSystem.GetFileName`方法。      |||  |-|-|  |到 |请参阅 |  |分析文件路径 |[如何︰ 分析在 Visual Basic 中的文件路径](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example parses a file path and returns the name of the file.  \n  \n [!code-vb[VbVbcnMyFileSystem#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._3_1.vb)]  \n  \n Replace the path `C:\\Testdirectory\\Testfile` with the path you wish to parse."
  syntax:
    content: public static string GetName (string path);
    parameters:
    - id: path
      type: System.String
      description: "必需。 要分析的路径。 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "指定的路径中的文件名称。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回所提供的路径的父路径。"
  remarks: "这是一个字符串操作;不检查文件系统。"
  example:
  - "This example gets the parent path for `C:\\Backups\\Tmp\\Test`.  \n  \n [!code-vb[VbRefFile#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._2_1.vb)]"
  syntax:
    content: public static string GetParentPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "要检查的路径。"
    return:
      type: System.String
      description: "提供的路径的父路径。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路径没有父路径，因为它是根路径。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  id: GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "创建唯一的命名磁盘上的零字节临时文件并返回该文件的完整路径。"
  remarks: "此方法可以用于创建临时文件。"
  example:
  - "This example creates a temp file and returns its path.  \n  \n [!code-vb[VbVbcnMyFileSystem#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._71_1.vb)]"
  syntax:
    content: public static string GetTempFileName ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>包含临时文件的完整路径。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将目录从一个位置移动到另一个。"
  remarks: "如果尝试将目录移入的目录中不存在，则将创建目标结构。"
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要移动的目录的路径。"
    - id: destinationDirectoryName
      type: System.String
      description: "源目录移动到其中的目录的路径。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>或<code>destinationDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "源是一个根目录或源路径和目标路径是相同的。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该操作是循环。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将目录从一个位置移动到另一个。"
  remarks: "如果尝试将目录移入的目录中不存在，则将创建目标结构。"
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要移动的目录的路径。"
    - id: destinationDirectoryName
      type: System.String
      description: "源目录移动到其中的目录的路径。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>或<code>destinationDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目标目录已存在和 o<code> verwrite </code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该操作是循环。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  id: MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将目录从一个位置移动到另一个。"
  remarks: "如果尝试将目录移入的目录中不存在，则将创建目标结构。"
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要移动的目录的路径。"
    - id: destinationDirectoryName
      type: System.String
      description: "源目录移动到其中的目录的路径。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果应覆盖现有的目录;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>或<code>destinationDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目标目录已存在和 o<code> verwrite </code>设置为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该操作是循环。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将目录从一个位置移动到另一个。"
  remarks: "如果尝试将目录移入的目录中不存在，则将创建目标结构。"
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要移动的目录的路径。"
    - id: destinationDirectoryName
      type: System.String
      description: "源目录移动到其中的目录的路径。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定当用户取消操作时引发异常。 默认值是<xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>或<code>destinationDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>onUserCancel</code>设置为<xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;></xref>和无法复制子目录中的文件。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>设置为<xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>，和用户取消操作，或无法完成该操作。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "该操作是循环。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文件移到新位置。"
  remarks: "如果目标结构不存在，则创建它。       `MoveFile`方法保留 Ace （访问控制项），仅当在移动文件相同的卷。 这包括继承的 Ace，后者将成为直接 Ace 移动 （直接 Ace 优先于继承的 Ace）。 如果卷之间移动文件，将不会复制 Ace。       下表列出的任务涉及示例`My.Computer.FileSystem.MoveFile`方法。      |||  |-|-|  |到 |请参阅 |  |移动文件 |[如何︰ 移动在 Visual Basic 中的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移动的文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "应将文件移动到其中的目录的路径。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "源文件无效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文件移到新位置。"
  remarks: "如果目标结构不存在，则创建它。       `MoveFile`方法保留 Ace （访问控制项），仅当在移动文件相同的卷。 这包括继承的 Ace，后者将成为直接 Ace 移动 （直接 Ace 优先于继承的 Ace）。 如果卷之间移动文件，将不会复制 Ace。       下表列出的任务涉及示例`My.Computer.FileSystem.MoveFile`方法。      |||  |-|-|  |到 |请参阅 |  |移动文件 |[如何︰ 移动在 Visual Basic 中的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移动的文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "应将文件移动到其中的目录的路径。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "源文件无效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  id: MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文件移到新位置。"
  remarks: "如果目标结构不存在，则创建它。       `MoveFile`方法保留 Ace （访问控制项），仅当在移动文件相同的卷。 这包括继承的 Ace，后者将成为直接 Ace 移动 （直接 Ace 优先于继承的 Ace）。 如果卷之间移动文件，将不会复制 Ace。       下表列出的任务涉及示例`My.Computer.FileSystem.MoveFile`方法。      |||  |-|-|  |到 |请参阅 |  |移动文件 |[如何︰ 移动在 Visual Basic 中的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移动的文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "应将文件移动到其中的目录的路径。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆盖现有文件;否则为<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "源文件无效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文件移到新位置。"
  remarks: "如果目标结构不存在，则创建它。       `MoveFile`方法保留 Ace （访问控制项），仅当在移动文件相同的卷。 这包括继承的 Ace，后者将成为直接 Ace 移动 （直接 Ace 优先于继承的 Ace）。 如果卷之间移动文件，将不会复制 Ace。       下表列出的任务涉及示例`My.Computer.FileSystem.MoveFile`方法。      |||  |-|-|  |到 |请参阅 |  |移动文件 |[如何︰ 移动在 Visual Basic 中的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移动的文件的路径。"
    - id: destinationFileName
      type: System.String
      description: "应将文件移动到其中的目录的路径。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要直观地跟踪操作的进度。 默认值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定当用户取消操作时引发异常。 默认值是<xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "源文件无效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>设置为<xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>，并且用户已取消该操作或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  id: OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref>方法允许你创建<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>对象可以用于读取分隔和固定宽度文件。"
  remarks: "下表列出了所涉及的任务的示例`My.Computer.FileSystem.OpenTextFieldParser`方法。      |||  |-|-|  |到 |请参阅 |  |从带分隔符的文本文件中读取 |[如何︰ 从逗号分隔的文本在 Visual Basic 中的文件中读取](~/add/includes/ajax-current-ext-md.md)|  |从固定宽度的文本文件读取 |[如何︰ 在 Visual Basic 中的固定宽度文本文件读取](~/add/includes/ajax-current-ext-md.md)|  |从具有多种格式的文本文件读取 |[如何︰ 读取具有多种格式，在 Visual Basic 中的文本文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._156_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);
    parameters:
    - id: file
      type: System.String
      description: "要使用打开的文件<xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>。"
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>若要读取指定的文件。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "无法使用指定的格式分析行。 异常消息指定的行引发异常，而<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>属性分配行中包含的文本。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  id: OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref>方法允许你创建<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>对象可以用于读取分隔和固定宽度文件。"
  remarks: "下表列出了所涉及的任务的示例`My.Computer.FileSystem.OpenTextFieldParser`方法。      |||  |-|-|  |到 |请参阅 |  |从带分隔符的文本文件中读取 |[如何︰ 从逗号分隔的文本在 Visual Basic 中的文件中读取](~/add/includes/ajax-current-ext-md.md)|  |从固定宽度的文本文件读取 |[如何︰ 在 Visual Basic 中的固定宽度文本文件读取](~/add/includes/ajax-current-ext-md.md)|  |从具有多种格式的文本文件读取 |[如何︰ 读取具有多种格式，在 Visual Basic 中的文本文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/23049b6e-0913-4641-bd0f-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, int[] fieldWidths);
    parameters:
    - id: file
      type: System.String
      description: "要使用打开的文件<xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>。"
    - id: fieldWidths
      type: System.Int32[]
      description: "字段的宽度。"
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>若要读取指定的文件。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "无法使用指定的格式分析行。 异常消息指定的行引发异常，而<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>属性分配行中包含的文本。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  id: OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref>方法允许你创建<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>对象可以用于读取分隔和固定宽度文件。"
  remarks: "下表列出了所涉及的任务的示例`My.Computer.FileSystem.OpenTextFieldParser`方法。      |||  |-|-|  |到 |请参阅 |  |从带分隔符的文本文件中读取 |[如何︰ 从逗号分隔的文本在 Visual Basic 中的文件中读取](~/add/includes/ajax-current-ext-md.md)|  |从固定宽度的文本文件读取 |[如何︰ 在 Visual Basic 中的固定宽度文本文件读取](~/add/includes/ajax-current-ext-md.md)|  |从具有多种格式的文本文件读取 |[如何︰ 读取具有多种格式，在 Visual Basic 中的文本文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/714bc4c9-ee52-4bdc-875b-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, string[] delimiters);
    parameters:
    - id: file
      type: System.String
      description: "要使用打开的文件<xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>。"
    - id: delimiters
      type: System.String[]
      description: "字段的分隔符。"
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>若要读取指定的文件。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "无法使用指定的格式分析行。 异常消息指定的行引发异常，而<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>属性分配行中包含的文本。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  id: OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "打开<xref:System.IO.StreamReader>要从文件读取对象。</xref:System.IO.StreamReader>"
  remarks: "只有文本文件可以读取以<xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       下表列出的任务涉及示例`My.Computer.FileSystem.OpenTextFileReader`方法。      |||  |-|-|  |到 |请参阅 |  |打开具有<xref:System.IO.StreamReader>|[如何︰ 使用 StreamReader (Visual Basic) 的文件中读取文本](~/add/includes/ajax-current-ext-md.md)| </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._86_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file);
    parameters:
    - id: file
      type: System.String
      description: "要读取的文件。"
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>要从文件中读取对象</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "以反斜杠结尾的文件名称 (\\\\)。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的文件。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少必要的权限来读取文件。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  id: OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "打开<xref:System.IO.StreamReader>要从文件读取对象。</xref:System.IO.StreamReader>"
  remarks: "只有文本文件可以读取以<xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       下表列出的任务涉及示例`My.Computer.FileSystem.OpenTextFileReader`方法。      |||  |-|-|  |到 |请参阅 |  |打开具有<xref:System.IO.StreamReader>|[如何︰ 使用 StreamReader (Visual Basic) 的文件中读取文本](~/add/includes/ajax-current-ext-md.md)| </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/86e418b6-8642-47bd-853b-_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "要读取的文件。"
    - id: encoding
      type: System.Text.Encoding
      description: "要用于文件内容的编码。 默认值为 ASCII。"
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>要从文件中读取对象</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "以反斜杠结尾的文件名称 (\\\\)。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的文件。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少必要的权限来读取文件。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  id: OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "打开<xref:System.IO.StreamWriter>要写入到指定的文件对象。</xref:System.IO.StreamWriter>"
  remarks: "`OpenTextFileWriter`方法打开和初始化文件流，然后返回<xref:System.IO.StreamWriter>该流的对象。</xref:System.IO.StreamWriter> 可以根据需要多次流写入并完成后关闭它。      1> [!NOTE]&1;> 必须调用<xref:System.IO.StreamWriter.Close%2A>方法<xref:System.IO.StreamWriter>对象以确保所有数据正确都写入基础流。</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       如果只有少量的字符串写入文件，则可能是使用简单得多<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>方法。</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       下表列出的任务涉及示例`My.Computer.FileSystem.OpenTextFileWriter`方法。      |||  |-|-|  |到 |请参阅 |  |向文件写入文本`StreamWriter` |[如何︰ 使用 Visual Basic 中 StreamWriter 向文件写入文本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/01606e79-13a9-4f6b-a18a-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append);
    parameters:
    - id: file
      type: System.String
      description: "要写入到文件。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要追加到文件; 的内容<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆盖文件的内容。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>要写入到指定的文件的对象。</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "带尾部反斜杠结尾的文件名称。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  id: OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "打开<xref:System.IO.StreamWriter>要写入到指定的文件。</xref:System.IO.StreamWriter>"
  remarks: "`OpenTextFileWriter`方法打开和初始化文件流，然后返回<xref:System.IO.StreamWriter>该流的对象。</xref:System.IO.StreamWriter> 可以根据需要多次流写入并完成后关闭它。      1> [!NOTE]&1;> 必须调用<xref:System.IO.StreamWriter.Close%2A>方法<xref:System.IO.StreamWriter>对象以确保所有数据正确都写入基础流。</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       如果只有少量的字符串写入文件，则可能是使用简单得多<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>方法。</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       下表列出的任务涉及示例`My.Computer.FileSystem.OpenTextFileWriter`方法。      |||  |-|-|  |到 |请参阅 |  |向文件写入文本`StreamWriter` |[如何︰ 使用 Visual Basic 中 StreamWriter 向文件写入文本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/dde0fe7a-3324-4e07-ba75-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "要写入到文件。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要追加到该文件; 中的内容<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆盖文件的内容。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: encoding
      type: System.Text.Encoding
      description: "编码用于写入文件。 默认值为 ASCII。"
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>要写入到指定的文件的对象。</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "带尾部反斜杠结尾的文件名称。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "字节数组的形式返回文件的内容。"
  remarks: "`ReadAllBytes`方法`My.Computer.FileSystem`对象允许你从二进制文件中读取。 文件的内容作为字节数组返回。       不要基于文件的名称的文件的内容的相关的决策。 例如，文件 Form1.vb 可能不是 Visual Basic 源文件。 使用你的应用程序中的数据之前，需验证所有的输入内容。       下表列出的任务涉及示例`My.Computer.FileSystem.ReadAllBytes`方法。      |||  |-|-|  |到 |请参阅 |  |从二进制文件中读取 |[如何︰ 从二进制文件在 Visual Basic 中读取](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`  \n  \n [!code-vb[VbVbcnMyFileSystem#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._186_1.vb)]"
  syntax:
    content: public static byte[] ReadAllBytes (string file);
    parameters:
    - id: file
      type: System.String
      description: "要读取的文件。"
    return:
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>数组，其中包含文件的内容。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来将字符串写入缓冲区。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回的文本文件作为内容<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>。"
  remarks: "`ReadAllText`方法`My.Computer.FileSystem`对象允许你从一个文本文件中读取。 文件的内容作为字符串返回。       文件编码可以是指定文件的内容是否采用如 ASCII 或 utf-8 的编码。 如果您正在读取包含扩展字符的文件，则需要指定文件编码使用的另一个重载<xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>方法。</xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>       不要基于文件的名称的文件的内容的相关的决策。 例如，文件 Form1.vb 可能不是 Visual Basic 源文件。 使用你的应用程序中的数据之前，需验证所有的输入内容。       下表列出的任务涉及示例`My.Computer.FileSystem.ReadAllText`方法。      |||  |-|-|  |到 |请参阅 |  |从文本文件读取 |[如何︰ 在 Visual Basic 中的文本文件读取](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file);
    parameters:
    - id: file
      type: System.String
      description: "名称和要读取的文件的路径。"
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>包含文件的内容。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来将字符串写入缓冲区。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "返回的文本文件作为内容<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>。"
  remarks: "`ReadAllText`方法`My.Computer.FileSystem`对象允许你从一个文本文件中读取。 文件的内容作为字符串返回。       文件编码可以是指定文件的内容是否采用如 ASCII 或 utf-8 的编码。 如果您正在读取包含扩展字符的文件，你需要指定文件编码。       不要基于文件的名称的文件的内容的相关的决策。 例如，文件 Form1.vb 可能不是 Visual Basic 源文件。 使用你的应用程序中的数据之前，需验证所有的输入内容。       下表列出的任务涉及示例`My.Computer.FileSystem.ReadAllText`方法。      |||  |-|-|  |到 |请参阅 |  |从文本文件读取 |[如何︰ 在 Visual Basic 中的文本文件读取](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "名称和要读取的文件的路径。"
    - id: encoding
      type: System.Text.Encoding
      description: "要在读取文件中使用字符编码。 默认值为 utf-8。"
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>包含文件的内容。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来将字符串写入缓冲区。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  id: RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "重命名一个目录。"
  remarks: "此方法不能用于移动目录;使用`MoveDirectory`方法来移动和重命名目录。"
  example:
  - "This example renames the `Test` directory to `SecondTest`.  \n  \n [!code-vb[VbVbcnMyFileSystem#13](~/add/codesnippet/visualbasic/313534a3-4c32-4f3e-9ae2-_1.vb)]"
  syntax:
    content: public static void RenameDirectory (string directory, string newName);
    parameters:
    - id: directory
      type: System.String
      description: "路径和要重命名目录的名称。"
    - id: newName
      type: System.String
      description: "目录的新名称。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>包含路径信息。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       -<code>newName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "没有现有的文件或目录中指定的名称与<code> newName </code>。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过 248 个字符。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "重命名文件。"
  remarks: "此方法不能用于移动文件;使用<xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>方法来移动和重命名该文件。</xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>       下表列出的任务涉及示例`My.Computer.FileSystem.RenameFile`方法。      |||  |-|-|  |到 |请参阅 |  |重命名文件 |[如何︰ 重命名 Visual Basic 中的文件](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example renames the file `Test.txt` to `SecondTest.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#1](~/add/codesnippet/visualbasic/39c53cd2-9477-4e35-83cb-_1.vb)]  \n  \n Change \"`C:\\Test.txt`\" to the path and file name of the file that you want to rename."
  syntax:
    content: public static void RenameFile (string file, string newName);
    parameters:
    - id: file
      type: System.String
      description: "要重命名的文件。"
    - id: newName
      type: System.String
      description: "文件的新名称。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>包含路径信息或以反斜杠结尾 (\\\\)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       -<code>newName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字符串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "目录不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "没有现有的文件或目录中指定的名称与<code> newName </code>。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "用户没有要求的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  id: WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将数据写入二进制文件。"
  remarks: "如果指定的路径，不包括文件名，不是有效，<xref:System.IO.DirectoryNotFoundException>将引发异常。</xref:System.IO.DirectoryNotFoundException> 如果路径有效，但该文件不存在，则创建该文件。      1> [!NOTE]&1;>`WriteAllBytes`方法打开文件，向其中写入，，然后关闭它。 使用代码`WriteAllBytes`方法是比使用代码的更简单<xref:System.IO.BinaryWriter>对象。</xref:System.IO.BinaryWriter> 但是，如果要将数据添加到使用循环，对文件<xref:System.IO.BinaryWriter>对象能够提供更好的性能，因为你只需打开和关闭文件一次。</xref:System.IO.BinaryWriter>       下表列出的任务涉及示例`My.Computer.FileSystem.WriteAllBytes`方法。      |||  |-|-|  |到 |请参阅 |  |写入二进制文件 |[如何︰ 写入二进制文件在 Visual Basic 中](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example appends the data array `CustomerData` to the file `CollectedData`.  \n  \n [!code-vb[VbVbcnMyFileSystem#50](~/add/codesnippet/visualbasic/45dbfd83-d122-4e5f-a7b8-_1.vb)]"
  syntax:
    content: public static void WriteAllBytes (string file, byte[] data, bool append);
    parameters:
    - id: file
      type: System.String
      description: "路径和要写入到的文件的名称。"
    - id: data
      type: System.Byte[]
      description: "要写入到文件数据。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要追加到该文件的内容;<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆盖该文件的内容。 默认值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来将字符串写入缓冲区。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  id: WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文本写入文件。"
  remarks: "使用的 utf-8 编码进行写入到文件。 若要指定不同的编码，使用的不同重载<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>方法。</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       如果指定的文件不存在，则创建它。       如果指定的编码与现有文件的编码不匹配，则忽略指定的编码。      1> [!NOTE]&1;>`WriteAllText`方法打开文件，向其中写入，，然后关闭它。 使用代码`WriteAllText`方法是比使用代码的更简单<xref:System.IO.StreamWriter>对象。</xref:System.IO.StreamWriter> 但是，如果你要通过使用循环，将字符串添加到文件<xref:System.IO.StreamWriter>对象能够提供更好的性能，因为你只需打开和关闭文件一次。</xref:System.IO.StreamWriter> 有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>方法。</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       下表列出了所涉及的任务的示例`My.Computer.FileSystem.WriteAllText`方法。      |||  |-|-|  |到 |请参阅 |  |文本写入文件 |[如何︰ 在 Visual Basic 中的文件将文本写入](~/add/includes/ajax-current-ext-md.md)|  |将文本追加到文件 |[如何︰ 向在 Visual Basic 中的文本文件追加](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append);
    parameters:
    - id: file
      type: System.String
      description: "要写入到文件。"
    - id: text
      type: System.String
      description: "要写入文件的文本。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要追加到文件; 的内容<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆盖文件的内容。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来将字符串写入缓冲区。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "将文本写入文件。"
  remarks: "如果指定的文件不存在，则创建它。       如果指定的编码与现有文件的编码不匹配，则忽略指定的编码。      1> [!NOTE]&1;>`WriteAllText`方法打开文件，向其中写入，，然后关闭它。 使用代码`WriteAllText`方法是比使用代码的更简单<xref:System.IO.StreamWriter>对象。</xref:System.IO.StreamWriter> 但是，如果你要通过使用循环，将字符串添加到文件<xref:System.IO.StreamWriter>对象能够提供更好的性能，因为你只需打开和关闭文件一次。</xref:System.IO.StreamWriter> 有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>方法。</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       下表列出了所涉及的任务的示例`My.Computer.FileSystem.WriteAllText`方法。      |||  |-|-|  |到 |请参阅 |  |文本写入文件 |[如何︰ 在 Visual Basic 中的文件将文本写入](~/add/includes/ajax-current-ext-md.md)|  |将文本追加到文件 |[如何︰ 向在 Visual Basic 中的文本文件追加](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "要写入到文件。"
    - id: text
      type: System.String
      description: "要写入文件的文本。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要追加到文件; 的内容<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆盖文件的内容。"
    - id: encoding
      type: System.Text.Encoding
      description: "写入文件时要使用何种编码。"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头\\ \\。\\); 它带尾部反斜杠结尾。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "该文件不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "文件正由另一个进程使用或发生了 I/O 错误。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路径超过了系统定义的最大长度。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在路径中的文件或目录名称包含冒号 （:），或格式无效。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来将字符串写入缓冲区。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "该用户缺少查看该路径所必需的权限。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OperationCanceledException
  isExternal: true
  name: System.OperationCanceledException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.UIOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UIOption
  nameWithType: UIOption
  fullName: Microsoft.VisualBasic.FileIO.UIOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: DeleteDirectoryOption
  nameWithType: DeleteDirectoryOption
  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.RecycleOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: RecycleOption
  nameWithType: RecycleOption
  fullName: Microsoft.VisualBasic.FileIO.RecycleOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DriveInfo>
  nameWithType: ReadOnlyCollection<DriveInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.DriveInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.SearchOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: SearchOption
  nameWithType: SearchOption
  fullName: Microsoft.VisualBasic.FileIO.SearchOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
- uid: System.IO.DriveInfo
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem
  nameWithType: FileSystem.FileSystem
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath
  nameWithType: FileSystem.CombinePath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory
  nameWithType: FileSystem.CopyDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile
  nameWithType: FileSystem.CopyFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory
  nameWithType: FileSystem.CreateDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory
  nameWithType: FileSystem.DeleteDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile
  nameWithType: FileSystem.DeleteFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists
  nameWithType: FileSystem.DirectoryExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists
  nameWithType: FileSystem.FileExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles
  nameWithType: FileSystem.FindInFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories
  nameWithType: FileSystem.GetDirectories
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo
  nameWithType: FileSystem.GetDirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo
  nameWithType: FileSystem.GetDriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo
  nameWithType: FileSystem.GetFileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles
  nameWithType: FileSystem.GetFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName
  nameWithType: FileSystem.GetName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath
  nameWithType: FileSystem.GetParentPath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName
  nameWithType: FileSystem.GetTempFileName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory
  nameWithType: FileSystem.MoveDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile
  nameWithType: FileSystem.MoveFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser
  nameWithType: FileSystem.OpenTextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader
  nameWithType: FileSystem.OpenTextFileReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter
  nameWithType: FileSystem.OpenTextFileWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes
  nameWithType: FileSystem.ReadAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText
  nameWithType: FileSystem.ReadAllText
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory
  nameWithType: FileSystem.RenameDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile
  nameWithType: FileSystem.RenameFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes
  nameWithType: FileSystem.WriteAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText
  nameWithType: FileSystem.WriteAllText
