### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.StringToken
  id: StringToken
  children:
  - System.Reflection.Emit.StringToken.Equals(System.Object)
  - System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)
  - System.Reflection.Emit.StringToken.GetHashCode
  - System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  - System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  - System.Reflection.Emit.StringToken.Token
  langs:
  - csharp
  name: StringToken
  nameWithType: StringToken
  fullName: System.Reflection.Emit.StringToken
  type: Struct
  summary: "表示表示字符串的令牌。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct StringToken
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: StringToken.Equals(Object)
  fullName: System.Reflection.Emit.StringToken.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "检查给定的对象是否的实例<xref uid=&quot;langword_csharp_StringToken&quot; name=&quot;StringToken&quot; href=&quot;&quot;></xref>和是否等于此实例。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要与此比较的对象<xref uid=&quot;langword_csharp_StringToken&quot; name=&quot;StringToken&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> obj </code>是的一个实例<xref uid=&quot;langword_csharp_StringToken&quot; name=&quot;StringToken&quot; href=&quot;&quot;></xref>和等于此对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Reflection.Emit.StringToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)
  id: Equals(System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: Equals(StringToken)
  nameWithType: StringToken.Equals(StringToken)
  fullName: System.Reflection.Emit.StringToken.Equals(StringToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "该值指示当前实例是否等于指定<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref>。"
  syntax:
    content: public bool Equals (System.Reflection.Emit.StringToken obj);
    parameters:
    - id: obj
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref>要与当前实例进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值<code> obj </code>等于当前实例的值; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Reflection.Emit.StringToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: StringToken.GetHashCode()
  fullName: System.Reflection.Emit.StringToken.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "返回此字符串的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "返回基础的字符串标记。"
  overload: System.Reflection.Emit.StringToken.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  id: op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: op_Equality(StringToken,StringToken)
  nameWithType: StringToken.op_Equality(StringToken,StringToken)
  fullName: System.Reflection.Emit.StringToken.op_Equality(StringToken,StringToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "指示两个<xref href=&quot;System.Reflection.Emit.StringToken&quot;></xref>结构是否相等。"
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.StringToken a, System.Reflection.Emit.StringToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref>要进行比较`b`。"
    - id: b
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref>要进行比较`a`。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.StringToken.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  id: op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: op_Inequality(StringToken,StringToken)
  nameWithType: StringToken.op_Inequality(StringToken,StringToken)
  fullName: System.Reflection.Emit.StringToken.op_Inequality(StringToken,StringToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "指示两个<xref href=&quot;System.Reflection.Emit.StringToken&quot;></xref>结构是否不相等。"
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.StringToken a, System.Reflection.Emit.StringToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref>要进行比较`b`。"
    - id: b
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref>要进行比较`a`。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.StringToken.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.Token
  id: Token
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: Token
  nameWithType: StringToken.Token
  fullName: System.Reflection.Emit.StringToken.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "检索此字符串的元数据标记。"
  syntax:
    content: public int Token { get; }
    return:
      type: System.Int32
      description: "只读。 检索此字符串的元数据标记。"
  overload: System.Reflection.Emit.StringToken.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.StringToken.Equals(System.Object)
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Equals(Object)
  nameWithType: StringToken.Equals(Object)
  fullName: System.Reflection.Emit.StringToken.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Equals(StringToken)
  nameWithType: StringToken.Equals(StringToken)
  fullName: System.Reflection.Emit.StringToken.Equals(StringToken)
- uid: System.Reflection.Emit.StringToken
  parent: System.Reflection.Emit
  isExternal: false
  name: StringToken
  nameWithType: StringToken
  fullName: System.Reflection.Emit.StringToken
- uid: System.Reflection.Emit.StringToken.GetHashCode
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: GetHashCode()
  nameWithType: StringToken.GetHashCode()
  fullName: System.Reflection.Emit.StringToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: op_Equality(StringToken,StringToken)
  nameWithType: StringToken.op_Equality(StringToken,StringToken)
  fullName: System.Reflection.Emit.StringToken.op_Equality(StringToken,StringToken)
- uid: System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: op_Inequality(StringToken,StringToken)
  nameWithType: StringToken.op_Inequality(StringToken,StringToken)
  fullName: System.Reflection.Emit.StringToken.op_Inequality(StringToken,StringToken)
- uid: System.Reflection.Emit.StringToken.Token
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Token
  nameWithType: StringToken.Token
  fullName: System.Reflection.Emit.StringToken.Token
- uid: System.Reflection.Emit.StringToken.Equals*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Equals
  nameWithType: StringToken.Equals
- uid: System.Reflection.Emit.StringToken.GetHashCode*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: GetHashCode
  nameWithType: StringToken.GetHashCode
- uid: System.Reflection.Emit.StringToken.op_Equality*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: op_Equality
  nameWithType: StringToken.op_Equality
- uid: System.Reflection.Emit.StringToken.op_Inequality*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: op_Inequality
  nameWithType: StringToken.op_Inequality
- uid: System.Reflection.Emit.StringToken.Token*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Token
  nameWithType: StringToken.Token
