### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildProvider
  id: BuildProvider
  children:
  - System.Web.Compilation.BuildProvider.#ctor
  - System.Web.Compilation.BuildProvider.CodeCompilerType
  - System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  - System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  - System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  - System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.OpenReader
  - System.Web.Compilation.BuildProvider.OpenReader(System.String)
  - System.Web.Compilation.BuildProvider.OpenStream
  - System.Web.Compilation.BuildProvider.OpenStream(System.String)
  - System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.ReferencedAssemblies
  - System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  - System.Web.Compilation.BuildProvider.VirtualPath
  - System.Web.Compilation.BuildProvider.VirtualPathDependencies
  langs:
  - csharp
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
  type: Class
  summary: "定义一组用于在 ASP.NET 生成环境中生成源代码的属性和方法。 此类为抽象类。"
  remarks: "ASP.NET 生成环境使用 BuildProvider 对象为应用程序中的不同文件类型生成源代码。 主要是为了符合从 BuildProvider 派生的类提供用于文件、 网页、 资源和其他自定义项的源代码。       通常情况下，你不要直接创建 BuildProvider 类的实例。 相反，你实现从 BuildProvider，派生的类，并配置在 ASP.NET 生成环境中使用的 BuildProvider 实现。       BuildProvider 类的实例用于<xref:System.Web.Compilation.AssemblyBuilder>对象生成一个或多个文件复制到已编译的程序集。</xref:System.Web.Compilation.AssemblyBuilder> BuildProvider 实例在单个文件的相应语言生成源代码和<xref:System.Web.Compilation.AssemblyBuilder>对象将合并到单个程序集中每个 BuildProvider 实例提供的源代码。</xref:System.Web.Compilation.AssemblyBuilder>       ASP.NET 生成环境使用 BuildProvider 类的实例来生成应用程序中的文件。 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>BuildProvider 类的属性指示要生成的文件的路径。</xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 应用程序中的每个文件的文件扩展名映射到相应的生成提供程序。 ASP.NET 生成环境初始化根据文件扩展名，每个文件的 BuildProvider 实例，并使用 BuildProvider 方法来生成的文件的源代码。 ASP.NET 生成环境传递<xref:System.Web.Compilation.AssemblyBuilder>对象基于首选的编译器语言和 BuildProvider 方法的文件的上下文生成来自一个或多个文件的程序集时，以便 BuildProvider 实例可以参与到总体程序集及其文件的源代码。</xref:System.Web.Compilation.AssemblyBuilder>       定义自定义生成操作的文件类型在 ASP.NET 应用程序，你必须从 BuildProvider 派生一个类，实现用于生成文件类型的派生类中的成员并配置的生成提供程序应用程序配置文件中的相应文件扩展名。       指定的文件扩展名为受支持的文件，并在生成提供程序支持文件、 Web 文件、 资源文件或所有文件。 使用`type`特性以指定的生成提供程序实现的完全限定的类型名称。 使用<xref:System.Web.Compilation.BuildProviderAppliesToAttribute>类指定在生成提供程序应用到 App_Code 目录中的文件、 Web 内容目录，为全局或本地资源中的文件或所有文件。</xref:System.Web.Compilation.BuildProviderAppliesToAttribute> 使用`extension`特性来指定用于标识 BuildProvider 类支持的文件的文件扩展名。 使用<xref:System.Web.Configuration.BuildProviderCollection>类来检查生成提供程序配置文件中的。</xref:System.Web.Configuration.BuildProviderCollection> 有关配置的生成提供程序的详细信息，请参阅[buildProviders 元素进行编译 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)。       若要实现为自定义文件类型生成源代码的生成提供程序，从 BuildProvider，派生类并重写<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>方法来为支持的文件类型生成源代码。</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 生成的源代码添加到<xref:System.Web.Compilation.AssemblyBuilder>形式在 CodeDOM 图中，或者作为表示物理源代码文件的内容的对象。</xref:System.Web.Compilation.AssemblyBuilder> 如果在生成提供程序需要特定的编程语言，重写<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>属性以返回<xref:System.Web.Compilation.CompilerType>的受支持的编程语言的对象。</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 如果在生成提供程序不需要特定的编程语言，不会覆盖<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>属性; 请改用基类实现，它指示在生成提供程序可以使用任何.NET Framework 语言，如 Visual Basic 或 C#。</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>       若要实现 Web 内容为生成源代码的生成提供程序，从 BuildProvider 并重写派生类<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法以返回<xref:System.Type>BuildProvider 所生成的类。</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 重写<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>方法为提供的受支持的文件类型生成源代码。</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>      1> [!NOTE]&1;> 将自定义的 BuildProvider 类添加到 Web.config 文件可用于在 ASP.NET Web 站点，但不起作用的 ASP.NET Web 应用程序项目中。 在 Web 应用程序项目中，不能由 BuildProvider 类生成的代码包含在应用程序。 有关详细信息，请参阅[ASP.NET Web 应用程序项目预编译概述](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)。"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract BuildProvider base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/t-system.web.compilation_0_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/t-system.web.compilation_0_1.vb)]"
  syntax:
    content: public abstract class BuildProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新实例<xref href=&quot;System.Web.Compilation.BuildProvider&quot;></xref>类。"
  remarks: "因为<xref:System.Web.Compilation.BuildProvider>类为抽象类，你无法创建的实例<xref:System.Web.Compilation.BuildProvider>直接使用构造函数。</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       从派生时<xref:System.Web.Compilation.BuildProvider>类中，重写构造函数来实现你的生成提供程序实现的自定义初始化操作。</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected BuildProvider ();
    parameters: []
  overload: System.Web.Compilation.BuildProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  id: CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "表示生成提供程序用于为自定义文件类型生成源代码的编译器类型。"
  remarks: "CodeCompilerType 属性用于提供设置编译的实现的<xref:System.Web.Compilation.BuildProvider>.</xref:System.Web.Compilation.BuildProvider>的源代码 CodeCompilerType 属性是`null`如果生成提供程序不需要特定的代码语言生成和编译源代码。       若要设置的值<xref:System.Web.Compilation.CompilerType>中生成提供程序实现中，使用对象<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>或<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>方法。</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> </xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> </xref:System.Web.Compilation.CompilerType>       <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>属性指定<xref:System.CodeDom.Compiler.CodeDomProvider>用于生成和编译为生成提供程序的源代码的实现。</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>属性定义的设置，用于将源代码编译为程序集。</xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the CodeCompilerType, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/p-system.web.compilation_4_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/p-system.web.compilation_4_1.vb)]"
  syntax:
    content: public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }
    return:
      type: System.Web.Compilation.CompilerType
      description: "只读<xref href=&quot;System.Web.Compilation.CompilerType&quot;></xref>表示代码生成器、 代码编译器和用于为虚拟路径生成源代码的编译器设置。 基类返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.BuildProvider.CodeCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  id: GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "为生成提供程序的虚拟路径生成源代码，并将源代码添加到指定的程序集生成器。"
  remarks: "若要实现为自定义文件类型生成源代码的生成提供程序，从派生类<xref:System.Web.Compilation.BuildProvider>类，并重写要为受支持的文件类型生成源代码的 GenerateCode 方法。</xref:System.Web.Compilation.BuildProvider>       通常情况下，生成提供程序的 GenerateCode 实现读取<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>属性，分析内容，并将所生成的源代码添加到指定<xref:System.Web.Compilation.AssemblyBuilder>对象。</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 你可参与源代码中的窗体的程序集<xref:System.IO.TextWriter>对象或在 CodeDOM 图。</xref:System.IO.TextWriter> 若要将源代码添加到的程序集通过<xref:System.IO.TextWriter>对象，请使用<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>方法。</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> </xref:System.IO.TextWriter> 若要将源代码在 CodeDOM 图中添加对程序集，使用<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>方法。</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>       如果在生成提供程序采用特定编程语言生成源代码，则必须重写<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>属性以返回<xref:System.Web.Compilation.CompilerType>的受支持的编程语言的对象。</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and GenerateCode members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/fc642c18-5414-4093-bd92-_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/fc642c18-5414-4093-bd92-_1.vb)]"
  syntax:
    content: public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);
    parameters:
    - id: assemblyBuilder
      type: System.Web.Compilation.AssemblyBuilder
      description: "引用生成提供程序生成的源代码的程序集生成器。"
  overload: System.Web.Compilation.BuildProvider.GenerateCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  id: GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "表示生成的 CodeDOM 图的容器。"
  remarks: "可以通过使用此方法<xref:System.Web.Compilation.ClientBuildManager>类的 Visual Studio 中支持的语法突出显示和设计器。</xref:System.Web.Compilation.ClientBuildManager>"
  syntax:
    content: protected virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "此方法返回时，包含一个字典，其中包含所有关联的行号，并对源代码的行杂注。 此参数传递时未经初始化。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "生成的 CodeDOM 图的容器<xref href=&quot;System.Web.Compilation.BuildProvider&quot;></xref>实例。"
  overload: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  id: GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "生成要保留在编译的程序集的字符串。"
  remarks: "<xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>方法<xref:System.Web.Compilation.BuildManager>对象创建一个输入的虚拟路径的生成提供程序的实例并调用 GetCustomString 方法<xref:System.Web.Compilation.BuildProvider>对象。</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildManager> </xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>       基<xref:System.Web.Compilation.BuildProvider>类返回`null`对于 GetCustomString 方法，指示未实现 GetCustomString。</xref:System.Web.Compilation.BuildProvider>       某些生成提供程序实现可以实现代替了 GetCustomString<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法。</xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> <xref:System.Web.Compilation.BuildProvider>对象通常使用<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>可返回一个<xref:System.Type>对象是虚拟路径。</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> </xref:System.Web.Compilation.BuildProvider> 但是，使用 GetCustomString 方法，则指示<xref:System.Web.Compilation.BuildProvider>对象可以生成多个类型从一个虚拟路径。</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "生成提供程序的虚拟路径的编译结果。"
    return:
      type: System.String
      description: "要在生成环境中，保留的字符串或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.Compilation.BuildProvider&quot;></xref>实例不实现 GetCustomString。"
  overload: System.Web.Compilation.BuildProvider.GetCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  id: GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "应用程序中返回的默认语言的编译器设置。"
  remarks: "使用 GetDefaultCompilerType 方法检查有生成提供程序的默认编译器类型。 使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>方法可检查配置中的生成提供程序特定语言名称的编译器类型。</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>       基<xref:System.Web.Compilation.BuildProvider>类可确定默认的编译器类型使用`defaultLanguage`属性值的部分中的应用程序配置文件。</xref:System.Web.Compilation.BuildProvider> 如果没有编译部分中的默认语言设置，使用设置的默认编译器类型<xref:Microsoft.VisualBasic.VBCodeProvider>语言提供程序。</xref:Microsoft.VisualBasic.VBCodeProvider>       从派生时<xref:System.Web.Compilation.BuildProvider>类，你可以使用 GetDefaultCompilerType 设置<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>中实现的属性。</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();
    parameters: []
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref>表示应用程序中的默认语言的编译器设置。 基类返回默认编译器根据应用程序配置文件。"
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  id: GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回生成提供程序基于指定的语言的编译器设置。"
  remarks: "GetDefaultCompilerTypeForLanguage 方法用于检查配置中的生成提供程序特定语言名称的编译器类型。 使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>方法可为生成提供程序检查默认的编译器类型。</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>       基<xref:System.Web.Compilation.BuildProvider>类可确定默认的编译器类型使用<xref:System.Web.Configuration.Compiler>中的元素<xref:System.Web.Configuration.CompilationSection.Compilers%2A>属性<xref:System.Web.Configuration.CompilationSection>配置文件的对象。</xref:System.Web.Configuration.CompilationSection> </xref:System.Web.Configuration.CompilationSection.Compilers%2A> </xref:System.Web.Configuration.Compiler> </xref:System.Web.Compilation.BuildProvider> 这相当于检查和元素的配置文件的部分中的元素。 例如，对于`language`值 VB，基类方法返回的<xref:System.Web.Compilation.CompilerType>对象相对应的实例<xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>。</xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>为配置的设置</xref:System.Web.Compilation.CompilerType>       派生自<xref:System.Web.Compilation.BuildProvider>类，你可以使用 GetDefaultCompilerTypeForLanguage 设置<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>由您的实现所支持的语言的属性值。</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);
    parameters:
    - id: language
      type: System.String
      description: "代码的语言名。"
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref>表示生成提供程序基于指定的语言的编译器设置。 基类返回默认值基于应用程序配置文件的语言的编译器设置。"
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>language</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>language</code>生成提供程序不匹配的已配置的编译器。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  id: GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回生成提供程序从虚拟路径生成的类型。"
  remarks: "若要实现为 Web 内容如.aspx 文件生成源代码的生成提供程序，从派生类<xref:System.Web.Compilation.BuildProvider>类并重写 GetGeneratedType 方法返回生成提供程序生成的类型。</xref:System.Web.Compilation.BuildProvider>       ASP.NET 生成系统会将文件编译为每个生成提供程序，并生成<xref:System.CodeDom.Compiler.CompilerResults>对象，将传递给 GetGeneratedType 方法。</xref:System.CodeDom.Compiler.CompilerResults> 通常情况下，生成提供程序的 GetGeneratedType 实现使用<xref:System.Reflection.Assembly.GetType%2A>方法<xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>属性输入`results`对象以返回所提供的类型。</xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> </xref:System.Reflection.Assembly.GetType%2A>"
  syntax:
    content: public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "生成提供程序的虚拟路径的编译结果。"
    return:
      type: System.Type
      description: "生成提供程序的虚拟路径生成的类型。 基类返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.BuildProvider.GetGeneratedType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  id: GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "返回一个值，该值指示生成虚拟路径时所需的操作。"
  remarks: "GetResultFlags 方法由 ASP.NET 生成环境使用的实例时<xref:System.Web.Compilation.BuildProvider>类生成文件和加载已编译的程序集。</xref:System.Web.Compilation.BuildProvider>       基<xref:System.Web.Compilation.BuildProvider>类方法返回<xref:System.Web.Compilation.BuildProviderResultFlags>字段值，指示生成虚拟路径时，不需要任何特殊操作。</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider>       当派生自的<xref:System.Web.Compilation.BuildProvider>类，你可以实现 GetResultFlags 方法返回不同<xref:System.Web.Compilation.BuildProviderResultFlags>值，则为你的自定义文件类型或虚拟路径。</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider> 例如，如果重新生成你的虚拟路径将需要包含<xref:System.AppDomain>要重新加载，你可以返回对象<xref:System.Web.Compilation.BuildProviderResultFlags>从 GetResultFlags 方法的枚举值。</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.AppDomain>"
  syntax:
    content: public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "生成提供程序的虚拟路径的编译结果。"
    return:
      type: System.Web.Compilation.BuildProviderResultFlags
      description: "A <xref href=&quot;System.Web.Compilation.BuildProviderResultFlags&quot;> </xref>值，该值指示生成环境中 ASP.NET 生成的虚拟路径后所需的操作。"
  overload: System.Web.Compilation.BuildProvider.GetResultFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader
  id: OpenReader
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "从当前生成提供程序对象的虚拟路径打开以进行读取文本读取器。"
  remarks: "使用<xref:System.IO.TextReader.Read%2A>方法返回<xref:System.IO.TextReader>要读取的内容对象<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>属性<xref:System.Web.Compilation.BuildProvider>对象。</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       调用 OpenReader 方法后，你必须使用<xref:System.IO.TextReader.Close%2A>方法来关闭<xref:System.IO.TextReader>对象并释放关联的系统资源。</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader ();
    parameters: []
    return:
      type: System.IO.TextReader
      description: "<xref:System.IO.TextReader>可以用于读取的内容的<xref:System.Web.Compilation.BuildProvider.VirtualPath*>。</xref:System.Web.Compilation.BuildProvider.VirtualPath*></xref:System.IO.TextReader>打开"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  id: OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "从指定的虚拟路径打开以进行读取文本读取器。"
  remarks: "使用<xref:System.IO.TextReader.Read%2A>方法对返回的<xref:System.IO.TextReader>对象来读取的内容的虚拟路径。</xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       在调用<xref:System.Web.Compilation.BuildProvider.OpenReader%2A>方法，则必须使用<xref:System.IO.TextReader.Close%2A>方法来关闭<xref:System.IO.TextReader>对象并释放关联的系统资源。</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenReader%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要读取的虚拟路径。"
    return:
      type: System.IO.TextReader
      description: "打开<xref:System.IO.TextReader>，可用于读取的内容指定的虚拟路径。</xref:System.IO.TextReader>"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream
  id: OpenStream
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "打开一个流以便读取当前生成提供程序对象的虚拟路径。"
  remarks: "使用<xref:System.IO.Stream.Read%2A>方法返回<xref:System.IO.Stream>要读取的虚拟路径的内容对象<xref:System.Web.Compilation.BuildProvider>对象。</xref:System.Web.Compilation.BuildProvider> </xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       调用 OpenStream 方法后，你必须使用<xref:System.IO.Stream.Close%2A>方法来关闭<xref:System.IO.Stream>对象并释放关联的系统资源。</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>可以用于读取的内容的<xref:System.Web.Compilation.BuildProvider.VirtualPath*>。</xref:System.Web.Compilation.BuildProvider.VirtualPath*></xref:System.IO.Stream>打开"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  id: OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "从指定的虚拟路径中打开一个流以便读取。"
  remarks: "使用<xref:System.IO.Stream.Read%2A>方法对返回的<xref:System.IO.Stream>对象来读取的内容的虚拟路径。</xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       在调用<xref:System.Web.Compilation.BuildProvider.OpenStream%2A>方法，则必须使用<xref:System.IO.Stream.Close%2A>方法来关闭<xref:System.IO.Stream>对象并释放关联的系统资源。</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenStream%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要读取的虚拟路径。"
    return:
      type: System.IO.Stream
      description: "打开<xref:System.IO.Stream>，可用于读取的内容指定的虚拟路径。</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  id: ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "当在派生类中重写，允许你查看编译器错误消息，以便可以修改它们以提供详细信息。"
  remarks: "你通常重写此方法，以便它们为了使对用户更有帮助的错误文本显示之前，你可以修改编译器错误。 这是非常有用的认识某些错误的上下文并可向有关如何解决它们的用户提供信息的位置。 原始的编译器错误消息通常特定于特定语言构造，并可能无法实现的真正原因或解决方案明显给用户。       你可以通过使用访问错误<xref:System.CodeDom.Compiler.CompilerResults>传递给方法的对象。</xref:System.CodeDom.Compiler.CompilerResults>"
  syntax:
    content: public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "编译器结果。"
  overload: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "表示要使用生成提供程序生成的源代码进行编译的程序集。"
  remarks: "ASP.NET 生成环境初始化可为生成提供程序的引用的程序集的集合。 生成提供程序生成的源代码可以使用公共类型中引用的程序集。 引用的程序集集合包含的其他 ASP.NET 应用程序，在生成的程序集和配置文件中的元素中列出的程序集。       如果生成提供程序生成引用其他程序集的源代码，生成提供程序将使用的其他程序集添加<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>方法。</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> ASP.NET 生成环境解析外部类型在使用添加的两个引用的程序集的程序集编译过程生成提供程序和可用于引用的程序集的默认集合。       ReferencedAssemblies 集合不包括程序集是通过其他生成提供程序通过添加为引用<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>方法。</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>"
  syntax:
    content: protected System.Collections.ICollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.ICollection
      description: "可以通过生成提供程序生成的源代码中引用的程序集的只读集合。"
  overload: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  id: RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "注册生成提供程序。"
  remarks: "你可以使用此方法注册生成提供程序而不是在 Web.config 文件中定义它们。 有关生成提供程序的详细信息，请参阅<xref:System.Web.Compilation.BuildProvider>类和[buildProviders 元素进行编译 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)。</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public static void RegisterBuildProvider (string extension, Type providerType);
    parameters:
    - id: extension
      type: System.String
      description: "生成提供程序文件名称扩展。"
    - id: providerType
      type: System.Type
      description: "生成提供程序类。"
  overload: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  id: VirtualPath
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "表示要生成的此生成提供程序实现的文件。"
  remarks: "虚拟路径<xref:System.Web.Compilation.BuildProvider>对象是正在编译生成提供程序的文件的路径。</xref:System.Web.Compilation.BuildProvider> 例如，如果你已配置自定义<xref:System.Web.Compilation.BuildProvider>类以生成具有.abc 自定义扩展的 Web 站点中的所有文件中，如果您的网站名称为 WebSite1，并且该网站包含一个名为 Example.abc 文件，VirtualPath 属性都包含值`/WebSite1/Example.abc`。</xref:System.Web.Compilation.BuildProvider>       应用程序中的每个文件的文件扩展名确定文件类型，以及相应的生成提供程序为文件类型。 ASP.NET 生成环境初始化<xref:System.Web.Compilation.BuildProvider>对象每个文件基于的文件类型，并使用<xref:System.Web.Compilation.BuildProvider>要生成的每个文件的源的方法。</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       有关配置的生成提供程序的详细信息，请参阅[buildProviders 元素进行编译 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)。"
  syntax:
    content: protected string VirtualPath { get; }
    return:
      type: System.String
      description: "一个只读的字符串，指定要编译此生成提供程序的文件的虚拟路径。"
  overload: System.Web.Compilation.BuildProvider.VirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  id: VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "表示的生成提供程序生成代码之前必须生成的虚拟路径的集合。"
  remarks: "VirtualPathDependencies 属性是必须在之前编译的虚拟路径的集合<xref:System.Web.Compilation.BuildProvider>实例生成源代码。</xref:System.Web.Compilation.BuildProvider> 从 VirtualPathDependencies 中的虚拟路径的程序集作为引用添加到针对编译<xref:System.Web.Compilation.BuildProvider>实例。</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual System.Collections.ICollection VirtualPathDependencies { get; }
    return:
      type: System.Collections.ICollection
      description: "一个字符串，表示生成提供程序的此实例所依赖的虚拟路径的只读集合中。"
  overload: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildProvider.#ctor
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.CompilerType
  parent: System.Web.Compilation
  isExternal: false
  name: CompilerType
  nameWithType: CompilerType
  fullName: System.Web.Compilation.CompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
- uid: System.Web.Compilation.AssemblyBuilder
  parent: System.Web.Compilation
  isExternal: false
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerResults
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerResults
  nameWithType: CompilerResults
  fullName: System.CodeDom.Compiler.CompilerResults
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
- uid: System.Web.Compilation.BuildProviderResultFlags
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProviderResultFlags
  nameWithType: BuildProviderResultFlags
  fullName: System.Web.Compilation.BuildProviderResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
- uid: System.Web.Compilation.BuildProvider.OpenStream
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
- uid: System.Web.Compilation.BuildProvider.#ctor*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider.BuildProvider
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode
  nameWithType: BuildProvider.GenerateCode
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit
  nameWithType: BuildProvider.GetCodeCompileUnit
- uid: System.Web.Compilation.BuildProvider.GetCustomString*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString
  nameWithType: BuildProvider.GetCustomString
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType
  nameWithType: BuildProvider.GetDefaultCompilerType
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType
  nameWithType: BuildProvider.GetGeneratedType
- uid: System.Web.Compilation.BuildProvider.GetResultFlags*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags
  nameWithType: BuildProvider.GetResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader
  nameWithType: BuildProvider.OpenReader
- uid: System.Web.Compilation.BuildProvider.OpenStream*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream
  nameWithType: BuildProvider.OpenStream
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors
  nameWithType: BuildProvider.ProcessCompileErrors
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider
  nameWithType: BuildProvider.RegisterBuildProvider
- uid: System.Web.Compilation.BuildProvider.VirtualPath*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
