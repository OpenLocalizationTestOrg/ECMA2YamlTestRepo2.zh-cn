### YamlMime:ManagedReference
items:
- uid: System.Drawing.Design.IPropertyValueUIService
  id: IPropertyValueUIService
  children:
  - System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  - System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)
  - System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged
  - System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
  - System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  langs:
  - csharp
  name: IPropertyValueUIService
  nameWithType: IPropertyValueUIService
  fullName: System.Drawing.Design.IPropertyValueUIService
  type: Interface
  summary: "提供一个接口，可管理映像、 工具提示和事件处理程序组件属性浏览器中显示的属性。"
  remarks: "组件可以使用 IPropertyValueUIService 接口提供<xref:System.Drawing.Design.PropertyValueUIItem>组件的任何属性的对象。</xref:System.Drawing.Design.PropertyValueUIItem> A<xref:System.Drawing.Design.PropertyValueUIItem>与关联属性可以单击与属性关联的图像时引发的事件中提供的映像，工具提示和事件处理程序。</xref:System.Drawing.Design.PropertyValueUIItem>       IPropertyValueUIService 接口提供方法来添加、 删除和检索<xref:System.Drawing.Design.PropertyValueUIHandler>委托到或从内部列表。</xref:System.Drawing.Design.PropertyValueUIHandler> 组件的属性都显示在属性浏览器中，每个<xref:System.Drawing.Design.PropertyValueUIHandler>列表中时，有机会提供<xref:System.Drawing.Design.PropertyValueUIItem>组件的每个属性。</xref:System.Drawing.Design.PropertyValueUIItem> </xref:System.Drawing.Design.PropertyValueUIHandler>       当属性浏览器设置来显示对象的属性时，它将调用<xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A>此接口的组件，并传递每个属性的方法<xref:System.ComponentModel.PropertyDescriptor>表示的属性。</xref:System.ComponentModel.PropertyDescriptor> </xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A>方法调用每个<xref:System.Drawing.Design.PropertyValueUIHandler>已添加到服务。</xref:System.Drawing.Design.PropertyValueUIHandler> </xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> 每个<xref:System.Drawing.Design.PropertyValueUIHandler>可以添加<xref:System.Drawing.Design.PropertyValueUIItem>到<xref:System.Collections.ArrayList>参数传递中`valueUIItemList`参数来提供 UI 项表示的属性以便<xref:System.ComponentModel.PropertyDescriptor>传入`propDesc`参数。</xref:System.ComponentModel.PropertyDescriptor> </xref:System.Collections.ArrayList> </xref:System.Drawing.Design.PropertyValueUIItem> </xref:System.Drawing.Design.PropertyValueUIHandler>       A<xref:System.Drawing.Design.PropertyValueUIItem>可以包含属性名称、 工具提示字符串和事件处理程序与属性关联的映像在双击时要调用旁边显示的图像。</xref:System.Drawing.Design.PropertyValueUIItem>"
  example:
  - "The following code example creates a component that obtains an instance of the IPropertyValueUIService interface and adds a <xref:System.Drawing.Design.PropertyValueUIHandler> to the service. The handler provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`. The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked. The image and the ToolTip are displayed in a <xref:System.Windows.Forms.PropertyGrid> when the grid is showing these properties of the component.  \n  \n [!code-cpp[IPropertyValueUIServiceExample#1](~/add/codesnippet/cpp/t-system.drawing.design._3_1.cpp)]\n [!code-cs[IPropertyValueUIServiceExample#1](~/add/codesnippet/csharp/t-system.drawing.design._3_1.cs)]\n [!code-vb[IPropertyValueUIServiceExample#1](~/add/codesnippet/visualbasic/t-system.drawing.design._3_1.vb)]"
  syntax:
    content: public interface IPropertyValueUIService
  implements: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  id: AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: AddPropertyValueUIHandler(PropertyValueUIHandler)
  nameWithType: IPropertyValueUIService.AddPropertyValueUIHandler(PropertyValueUIHandler)
  fullName: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(PropertyValueUIHandler)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "将指定的<xref href=&quot;System.Drawing.Design.PropertyValueUIHandler&quot;></xref>到此服务。"
  remarks: "当<xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A>是调用，每个添加到此服务的处理程序调用该方法并有机会在添加属性图标。</xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A>"
  syntax:
    content: public void AddPropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);
    parameters:
    - id: newHandler
      type: System.Drawing.Design.PropertyValueUIHandler
      description: "属性值 UI 要添加处理程序。"
  overload: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)
  id: GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  nameWithType: IPropertyValueUIService.GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  fullName: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "获取<xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;></xref>匹配的指定的上下文和属性描述符特征的对象。"
  syntax:
    content: public System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems (System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>可以用于获取附加上下文信息。"
    - id: propDesc
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> ，该值指示要与要返回的属性匹配的属性。"
    return:
      type: System.Drawing.Design.PropertyValueUIItem[]
      description: "数组<xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;></xref>与指定的参数匹配的对象。"
  overload: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged
  id: NotifyPropertyValueUIItemsChanged
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: NotifyPropertyValueUIItemsChanged()
  nameWithType: IPropertyValueUIService.NotifyPropertyValueUIItemsChanged()
  fullName: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "通知<xref href=&quot;System.Drawing.Design.IPropertyValueUIService&quot;></xref>实现的全局列表<xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;></xref>修改对象。"
  syntax:
    content: public void NotifyPropertyValueUIItemsChanged ();
    parameters: []
  overload: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
  id: PropertyUIValueItemsChanged
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: PropertyUIValueItemsChanged
  nameWithType: IPropertyValueUIService.PropertyUIValueItemsChanged
  fullName: System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "发生时的列表<xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;></xref>修改对象。"
  remarks: "提供的组件<xref:System.Drawing.Design.PropertyValueUIItem>对象可以调用<xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A>更改其项的列表时。</xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A> </xref:System.Drawing.Design.PropertyValueUIItem>"
  syntax:
    content: public event EventHandler PropertyUIValueItemsChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  id: RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: RemovePropertyValueUIHandler(PropertyValueUIHandler)
  nameWithType: IPropertyValueUIService.RemovePropertyValueUIHandler(PropertyValueUIHandler)
  fullName: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(PropertyValueUIHandler)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "中移除指定<xref href=&quot;System.Drawing.Design.PropertyValueUIHandler&quot;></xref>从 UI 服务的属性值。"
  syntax:
    content: public void RemovePropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);
    parameters:
    - id: newHandler
      type: System.Drawing.Design.PropertyValueUIHandler
      description: "要删除的处理程序。"
  overload: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: AddPropertyValueUIHandler(PropertyValueUIHandler)
  nameWithType: IPropertyValueUIService.AddPropertyValueUIHandler(PropertyValueUIHandler)
  fullName: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(PropertyValueUIHandler)
- uid: System.Drawing.Design.PropertyValueUIHandler
  parent: System.Drawing.Design
  isExternal: false
  name: PropertyValueUIHandler
  nameWithType: PropertyValueUIHandler
  fullName: System.Drawing.Design.PropertyValueUIHandler
- uid: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  nameWithType: IPropertyValueUIService.GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  fullName: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
- uid: System.Drawing.Design.PropertyValueUIItem[]
  parent: System.Drawing.Design
  isExternal: false
  name: PropertyValueUIItem
  nameWithType: PropertyValueUIItem
  fullName: System.Drawing.Design.PropertyValueUIItem[]
  spec.csharp:
  - uid: System.Drawing.Design.PropertyValueUIItem
    name: PropertyValueUIItem
    nameWithType: PropertyValueUIItem
    fullName: PropertyValueUIItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: NotifyPropertyValueUIItemsChanged()
  nameWithType: IPropertyValueUIService.NotifyPropertyValueUIItemsChanged()
  fullName: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged()
- uid: System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: PropertyUIValueItemsChanged
  nameWithType: IPropertyValueUIService.PropertyUIValueItemsChanged
  fullName: System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: RemovePropertyValueUIHandler(PropertyValueUIHandler)
  nameWithType: IPropertyValueUIService.RemovePropertyValueUIHandler(PropertyValueUIHandler)
  fullName: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(PropertyValueUIHandler)
- uid: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler*
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: AddPropertyValueUIHandler
  nameWithType: IPropertyValueUIService.AddPropertyValueUIHandler
- uid: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems*
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: GetPropertyUIValueItems
  nameWithType: IPropertyValueUIService.GetPropertyUIValueItems
- uid: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged*
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: NotifyPropertyValueUIItemsChanged
  nameWithType: IPropertyValueUIService.NotifyPropertyValueUIItemsChanged
- uid: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler*
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: RemovePropertyValueUIHandler
  nameWithType: IPropertyValueUIService.RemovePropertyValueUIHandler
