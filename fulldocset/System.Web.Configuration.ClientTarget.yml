### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.ClientTarget
  id: ClientTarget
  children:
  - System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)
  - System.Web.Configuration.ClientTarget.Alias
  - System.Web.Configuration.ClientTarget.Properties
  - System.Web.Configuration.ClientTarget.UserAgent
  langs:
  - csharp
  name: ClientTarget
  nameWithType: ClientTarget
  fullName: System.Web.Configuration.ClientTarget
  type: Class
  summary: "定义 ASP.NET 服务器控件应为其呈现内容的目标用户代理与关联的别名。 此类不能被继承。"
  remarks: "请类是指在中添加的元素`clientTarget`配置文件节。       请类所属的组，其中包括<xref:System.Web.Configuration.ClientTargetCollection>类和<xref:System.Web.Configuration.ClientTargetSection>类。</xref:System.Web.Configuration.ClientTargetSection> </xref:System.Web.Configuration.ClientTargetCollection>       请类包含两个标识客户端浏览器中，也称为用户代理属性。 一个属性是与客户端浏览器由第二个属性关联的别名。 ASP.NET 使用此信息来呈现在页中的服务器控件。       有关如何以编程方式使用用户代理或其别名的信息，请参阅<xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName>属性。</xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName> 有关如何以声明方式使用用户代理或其别名的信息，请参阅[@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)。       如果<xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName>未设置属性，<xref:System.Web.HttpBrowserCapabilities>与关联的对象<xref:System.Web.UI.Page.Request%2A?displayProperty=fullName>属性反映客户端浏览器的功能。</xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName> （它反映的浏览器类型，但不一定该浏览器的特定实例中的设置的功能）。设置该属性，如果禁用客户端浏览器检测，并且页面将使用与你定义的用户代理字符串相关联的浏览器功能。 你可以将此属性设置为任何有效的用户代理字符串。"
  example:
  - "This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the ClientTarget class. The second shows how to obtain the <xref:System.Web.Configuration.ClientTargetCollection> object from the configuration file. You use this object to access the ClientTarget objects it contains.  \n  \n The following code example shows how to declaratively specify values for several properties of the ClientTarget class.  \n  \n```  \n<clientTarget>  \n  <add alias=  \n    \"uplevel\"   \n    userAgent=\"Mozilla/5.0 (compatible;MSIE 6.0;Windows NT 5.1)\"/>  \n  <add alias=\"downlevel\" userAgent=\"Generic Downlevel\"/>  \n</clientTarget>  \n```  \n  \n The following code example shows how to obtain the <xref:System.Web.Configuration.ClientTargetCollection> object from the configuration file.  \n  \n [!code-vb[System.Web.Configuration.ClientTarget#1](~/add/codesnippet/visualbasic/t-system.web.configurati_29_1.vb)]\n [!code-cs[System.Web.Configuration.ClientTarget#1](~/add/codesnippet/csharp/t-system.web.configurati_29_1.cs)]"
  syntax:
    content: 'public sealed class ClientTarget : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Configuration.ClientTarget
  langs:
  - csharp
  name: ClientTarget(String,String)
  nameWithType: ClientTarget.ClientTarget(String,String)
  fullName: System.Web.Configuration.ClientTarget.ClientTarget(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Web.Configuration.ClientTarget&quot;></xref>类。"
  syntax:
    content: public ClientTarget (string alias, string userAgent);
    parameters:
    - id: alias
      type: System.String
      description: "用来引用特定的用户代理的名称。"
    - id: userAgent
      type: System.String
      description: "用户代理的标识名称。"
  overload: System.Web.Configuration.ClientTarget.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ClientTarget.Alias
  id: Alias
  parent: System.Web.Configuration.ClientTarget
  langs:
  - csharp
  name: Alias
  nameWithType: ClientTarget.Alias
  fullName: System.Web.Configuration.ClientTarget.Alias
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取用户代理的别名。"
  remarks: "别名属性是指`alias`属性`add`中的元素`clientTarget`配置文件节。       ASP.NET 配置默认值包括以下别名:- `uplevel`，它将告诉 ASP.NET 以 HTML 和 Internet Explorer 6.0 和更高版本支持的 ECMAScript 发送。      - `downlevel`，它将告诉 ASP.NET，若要限制的 HTML 和浏览器都支持早于 Internet Explorer 6.0 的版本的脚本。"
  example:
  - "The following code example shows how to get the Alias from the configuration file of an existing Web application.  \n  \n [!code-vb[System.Web.Configuration.ClientTarget#3](~/add/codesnippet/visualbasic/p-system.web.configurati_91_1.vb)]\n [!code-cs[System.Web.Configuration.ClientTarget#3](~/add/codesnippet/csharp/p-system.web.configurati_91_1.cs)]"
  syntax:
    content: public string Alias { get; }
    return:
      type: System.String
      description: "用来引用特定的用户代理的名称。"
  overload: System.Web.Configuration.ClientTarget.Alias*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ClientTarget.Properties
  id: Properties
  parent: System.Web.Configuration.ClientTarget
  langs:
  - csharp
  name: Properties
  nameWithType: ClientTarget.Properties
  fullName: System.Web.Configuration.ClientTarget.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "要添加。"
  overload: System.Web.Configuration.ClientTarget.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ClientTarget.UserAgent
  id: UserAgent
  parent: System.Web.Configuration.ClientTarget
  langs:
  - csharp
  name: UserAgent
  nameWithType: ClientTarget.UserAgent
  fullName: System.Web.Configuration.ClientTarget.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取用户代理的标识名称。"
  remarks: "UserAgent 属性是指`userAgent`属性`add`中的元素`clientTarget`配置文件节。       ASP.NET 配置默认设置允许自定义为各个 Microsoft Internet Explorer 版本的页。 它们之间找到别名`uplevel`，它将告诉 ASP.NET 以 HTML 和由 Internet Explorer 4.0 和更高版本，支持的 ECMAScript 发送客户端和`downlevel`，它将告诉 ASP.NET，若要限制的 HTML 和将脚本保存到支持的较早于 Internet Explorer 4.0 的浏览器。"
  example:
  - "The following code example shows how to get the UserAgent from the configuration file of an existing Web application.  \n  \n [!code-vb[System.Web.Configuration.ClientTarget#4](~/add/codesnippet/visualbasic/p-system.web.configurati_190_1.vb)]\n [!code-cs[System.Web.Configuration.ClientTarget#4](~/add/codesnippet/csharp/p-system.web.configurati_190_1.cs)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "用户代理的标识名称。"
  overload: System.Web.Configuration.ClientTarget.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: ClientTarget(String,String)
  nameWithType: ClientTarget.ClientTarget(String,String)
  fullName: System.Web.Configuration.ClientTarget.ClientTarget(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.ClientTarget.Alias
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: Alias
  nameWithType: ClientTarget.Alias
  fullName: System.Web.Configuration.ClientTarget.Alias
- uid: System.Web.Configuration.ClientTarget.Properties
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: Properties
  nameWithType: ClientTarget.Properties
  fullName: System.Web.Configuration.ClientTarget.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.ClientTarget.UserAgent
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: UserAgent
  nameWithType: ClientTarget.UserAgent
  fullName: System.Web.Configuration.ClientTarget.UserAgent
- uid: System.Web.Configuration.ClientTarget.#ctor*
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: ClientTarget
  nameWithType: ClientTarget.ClientTarget
- uid: System.Web.Configuration.ClientTarget.Alias*
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: Alias
  nameWithType: ClientTarget.Alias
- uid: System.Web.Configuration.ClientTarget.Properties*
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: Properties
  nameWithType: ClientTarget.Properties
- uid: System.Web.Configuration.ClientTarget.UserAgent*
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: UserAgent
  nameWithType: ClientTarget.UserAgent
