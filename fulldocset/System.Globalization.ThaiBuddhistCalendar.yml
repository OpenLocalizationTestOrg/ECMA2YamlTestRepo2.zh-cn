### YamlMime:ManagedReference
items:
- uid: System.Globalization.ThaiBuddhistCalendar
  id: ThaiBuddhistCalendar
  children:
  - System.Globalization.ThaiBuddhistCalendar.#ctor
  - System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.AlgorithmType
  - System.Globalization.ThaiBuddhistCalendar.Eras
  - System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
  - System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
  - System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: ThaiBuddhistCalendar
  nameWithType: ThaiBuddhistCalendar
  fullName: System.Globalization.ThaiBuddhistCalendar
  type: Class
  summary: "表示泰国佛教日历。"
  remarks: "泰国佛历工作方式与公历，完全相同，只的年份和纪元不相同。      1> [!NOTE]&1;> 在.NET Framework 中使用 ThaiBuddhistCalendar 类和其他日历类的信息，请参阅[使用日历](~/add/includes/ajax-current-ext-md.md)。       ThaiBuddhistCalendar 类只识别当前纪元。       中的泰国佛历闰年对应于为公历日历中的相同闰年。 闰年公历日历中定义为公历年份整除的由 4 个，但如果它是由 100 可除外。 但是，可被被 400 的公历年是闰年。 平 365 年天并且初始屏幕闰年有 366 天。       泰国佛历有 28 到 31 天的 12 个月: |GetMonth 值 |月 |天数在平年 |闰年中的天 |  |--------------------|-----------|--------------------------|------------------------|  | 1 | มกราคม （一月） | 31 | 31 |  | 2 | กุมภาพันธ์ （年 2 月） | 28 | 29 |  | 3 | มีนาคม （年 3 月） | 31 | 31 |  | 4 | เมษายน （年 4 月） | 30 | 30 |  | 5 | พฤษภาคม （五月） | 31 | 31 |  | 6 | มิถุนายน （年 6 月） | 30 | 30 |  | 7 | กรกฎาคม （年 7 月） | 31 | 31 |  | 8 |สิงหาคม （年 8 月） | 31 | 31 |  | 9 | กันยายน （年 9 月） | 30 | 30 |  | 10 | ตุลาคม （年 10 月） | 31 | 31 |  | 11 | พฤศจิกายน （年 11 月） | 30 | 30 |  | 12 | ธันวาคม （十二月） | 31 | 31 |      2 月有 29 天在闰年和 28 在平年。       日期到公元 2001 年 1 月 1 日 在公历日历中相当于泰国佛历当前纪元的年份 2544年中的年 1 月的第一天。       每个<xref:System.Globalization.CultureInfo>支持一组的日历。</xref:System.Globalization.CultureInfo> <xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历和<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>属性返回一个包含所有支持的区域性的日历数组。</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> 若要更改使用的<xref:System.Globalization.CultureInfo>，应用程序应设置此<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>为新的<xref:System.Globalization.Calendar>。</xref:System.Globalization.Calendar></xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName></xref:System.Globalization.DateTimeFormatInfo.Calendar%2A></xref:System.Globalization.CultureInfo>的日历"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ThaiBuddhistCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: ThaiBuddhistCalendar()
  nameWithType: ThaiBuddhistCalendar.ThaiBuddhistCalendar()
  fullName: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "初始化的新实例<xref href=&quot;System.Globalization.ThaiBuddhistCalendar&quot;></xref>类。"
  syntax:
    content: public ThaiBuddhistCalendar ();
    parameters: []
  overload: System.Globalization.ThaiBuddhistCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: ThaiBuddhistCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回一个<xref:System.DateTime>，它是指定的指定<xref:System.DateTime>。</xref:System.DateTime>离开的月数</xref:System.DateTime>"
  remarks: "日部分的生成<xref:System.DateTime>如果结果的日期不是有效的一天中生成月份影响。</xref:System.DateTime> 它将更改为在生成每年的生成的每月最后一个有效的一天。 <xref:System.DateTime>如果外部的指定<xref:System.DateTime>。</xref:System.DateTime>年，则结果月份影响</xref:System.DateTime>生成的年份部分 此实现支持仅当前纪元。 因此，<xref:System.ArgumentException>如果结果年份外部的指定<xref:System.DateTime>。</xref:System.DateTime>纪元，则引发</xref:System.ArgumentException> 时间的日部分的生成<xref:System.DateTime>与指定<xref:System.DateTime>.</xref:System.DateTime>相同</xref:System.DateTime>       例如，如果指定的月份是年 10 月，其中包含 31 天，指定的日期是该月第 31 天和的值`months`参数为 6，则结果年份是一个超过指定的年份，结果月份是年 4 月，和结果的日期是 30 日，即年 4 月的最后一天。       如果值`months`参数是负数，<xref:System.DateTime>早于指定<xref:System.DateTime>.</xref:System.DateTime></xref:System.DateTime>生成       <xref:System.DateTime.Kind%2A>属性的返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> 您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>方法，如以下示例所示。</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/0cd9be0e-c256-4e95-9c8e-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/0cd9be0e-c256-4e95-9c8e-_1.cs)]"
  example:
  - "The following example demonstrates the use of the AddMonths method.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/cpp/0cd9be0e-c256-4e95-9c8e-_2.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/csharp/0cd9be0e-c256-4e95-9c8e-_2.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/visualbasic/0cd9be0e-c256-4e95-9c8e-_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>向其添加月数。</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "要添加的月份数。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>添加指定的月数到指定<xref:System.DateTime>。</xref:System.DateTime>而产生</xref:System.DateTime>"
  overload: System.Globalization.ThaiBuddhistCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "生成<xref:System.DateTime>超出支持的范围。</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>小于-120000。       -或-<code>months</code>大于 120000。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: ThaiBuddhistCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回一个<xref:System.DateTime>，它是指定的指定<xref:System.DateTime>。</xref:System.DateTime>离开的年数</xref:System.DateTime>"
  remarks: "日部分的生成<xref:System.DateTime>如果结果的日期不是有效的一天中生成月份影响。</xref:System.DateTime> 它将更改为在生成每年的生成的每月最后一个有效的一天。 月部分的生成<xref:System.DateTime>与指定<xref:System.DateTime>.</xref:System.DateTime>相同</xref:System.DateTime> 此实现支持仅当前纪元。 因此，<xref:System.ArgumentException>如果结果年份外部的指定<xref:System.DateTime>。</xref:System.DateTime>纪元，则引发</xref:System.ArgumentException> 时间的日部分的生成<xref:System.DateTime>与指定<xref:System.DateTime>.</xref:System.DateTime>相同</xref:System.DateTime>       例如，年 2 月有除外的 28 天，在闰年，当它有 29 天。 如果指定的日期是闰年 2 月 29 日和的值`years`为 1，则得到的日期是第二中下一年的年 2 月 28 日。       如果`years`为负，<xref:System.DateTime>早于指定<xref:System.DateTime>.</xref:System.DateTime></xref:System.DateTime>生成       <xref:System.DateTime.Kind%2A>属性的返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> 您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>方法，如以下示例所示。</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/473c143f-a76f-46fb-8724-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/473c143f-a76f-46fb-8724-_1.cs)]"
  example:
  - "The following example demonstrates the use of the AddYears method.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/cpp/473c143f-a76f-46fb-8724-_2.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/csharp/473c143f-a76f-46fb-8724-_2.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/visualbasic/473c143f-a76f-46fb-8724-_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>向其添加年。</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "若要添加的年份数。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>添加指定的到指定<xref:System.DateTime>。</xref:System.DateTime>的年数而产生</xref:System.DateTime>"
  overload: System.Globalization.ThaiBuddhistCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "生成<xref:System.DateTime>超出支持的范围。</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: ThaiBuddhistCalendar.AlgorithmType
  fullName: System.Globalization.ThaiBuddhistCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取一个值，该值指示当前日历是阳历、 阴历还是二者的组合。"
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.t_4_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.t_4_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "始终返回<xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>。"
  overload: System.Globalization.ThaiBuddhistCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.Eras
  id: Eras
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: ThaiBuddhistCalendar.Eras
  fullName: System.Globalization.ThaiBuddhistCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取中的纪元列表<xref href=&quot;System.Globalization.ThaiBuddhistCalendar&quot;></xref>类。"
  remarks: "此属性返回的数组中的值是范围从 1 到的最大数纪元的数字。 在第一个数组元素中返回的最大数纪元和中的最后一个元素返回的最小数纪元。"
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "一个数组，包含单个元素始终是当前纪元值。"
  overload: System.Globalization.ThaiBuddhistCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定<xref:System.DateTime>.</xref:System.DateTime>中的每月天数"
  remarks: ''
  example:
  - "The following example demonstrates the use of the GetDayOfMonth method.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_10_1.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_10_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_10_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "一个从 1 到 31 之间的整数，表示在指定<xref:System.DateTime>。</xref:System.DateTime>每月的某"
  overload: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回在指定<xref:System.DateTime>。</xref:System.DateTime>星期几"
  remarks: "<xref:System.DayOfWeek>值如下: |DayOfWeek 值 | 指示 |  |---------------------|---------------------|  |星期日 | อาทิตย์ |  |星期一 | จันทร์ |  |星期二 | อังคาร |  |星期三 | พุธ |  |星期四 | พฤหัสบดี |  |星期五 | ศุกร์ |  |星期六 | เสาร์ |</xref:System.DayOfWeek>"
  example:
  - "The following example demonstrates the use of the GetDayOfWeek method.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_11_1.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_11_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_11_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "一个<xref:System.DayOfWeek>值，它表示日期中的指定<xref:System.DateTime>。</xref:System.DateTime>星期几</xref:System.DayOfWeek>"
  overload: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回在指定<xref:System.DateTime>。</xref:System.DateTime>年的某一天"
  remarks: "每年的日期被指从该年度的第一天的天数。 例如，第一个月的第一天的 GetDayOfYear 返回 1，和上个月的最后一天的 GetDayOfYear 返回该年份的总天数。 总是<xref:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear%2A>.</xref:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear%2A>返回的值相同"
  example:
  - "The following example demonstrates the use of the GetDayOfYear method.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_9_1.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_9_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_9_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "一个从 1 和 366 之间的整数，表示的年份中的指定<xref:System.DateTime>。</xref:System.DateTime>的第一天"
  overload: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定纪元中的指定年份的指定月份的天数。"
  remarks: "例如，此方法返回 28 或 29，年 2 月 (`month` = 2)，具体取决于`year`是否为闰年。"
  example:
  - "The following example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/6b555481-eeed-4fcb-b67a-_1.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/6b555481-eeed-4fcb-b67a-_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/6b555481-eeed-4fcb-b67a-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个整数，表示的年份。"
    - id: month
      type: System.Int32
      description: "从 1 到 12 的整数，表示的月份。"
    - id: era
      type: System.Int32
      description: "一个整数，表示纪元。"
    return:
      type: System.Int32
      description: "指定纪元中的指定年份中指定的月份的天数。"
  overload: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出所日历支持的范围。       -或-<code>month</code>超出所日历支持的范围。       -或-<code>era</code>超出所日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定纪元中指定年份中的天数。"
  remarks: "例如，此方法返回 365 或 366，具体取决于是否`year`是否为闰年。"
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/57a630dc-803c-4dba-b631-_1.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/57a630dc-803c-4dba-b631-_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/57a630dc-803c-4dba-b631-_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个整数，表示的年份。"
    - id: era
      type: System.Int32
      description: "一个整数，表示纪元。"
    return:
      type: System.Int32
      description: "指定纪元中的指定年份的天数。"
  overload: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出所日历支持的范围。       -或-<code>era</code>超出所日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetEra(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回在指定<xref:System.DateTime>。</xref:System.DateTime>纪元"
  remarks: "<xref:System.Globalization.ThaiBuddhistCalendar>类只识别当前纪元。</xref:System.Globalization.ThaiBuddhistCalendar>"
  example:
  - "The following example demonstrates the use of the GetEra method.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_4_1.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_4_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_4_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "一个整数，表示在指定<xref:System.DateTime>。</xref:System.DateTime>纪元"
  overload: System.Globalization.ThaiBuddhistCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "计算指定的年和纪元的闰月。"
  remarks: "在日历中支持闰月的概念，在某个特定的月份之后或在每一年中的任何月份之后发生的闰月。 例如，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>方法返回一个数字，介于 1 和 13，该值指示指定的日期与关联的月份。</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> 如果一年中，在第八个和第 9 个月之间存在闰月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>方法闰第八个月的 9 和 10 第 9 个月的第八个月份返回 8。</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "每一年。"
    - id: era
      type: System.Int32
      description: "纪元。"
    return:
      type: System.Int32
      description: "返回值始终是 0 因为<xref href=&quot;System.Globalization.ThaiBuddhistCalendar&quot;></xref>类不支持闰月这一概念。"
  overload: System.Globalization.ThaiBuddhistCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetMonth(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "在指定<xref:System.DateTime>。</xref:System.DateTime>中返回的月份"
  remarks: ''
  example:
  - "The following example demonstrates the use of the GetMonth method.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_3_1.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_3_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_3_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "从 1 到 12 的整数，表示在指定<xref:System.DateTime>。</xref:System.DateTime>月份"
  overload: System.Globalization.ThaiBuddhistCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定纪元中指定年份中的月数。"
  remarks: ''
  example:
  - "The following example calls GetMonthsInYear for five years in each era.  \n  \n [!code-vb[System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/de4cf2f9-e381-4e28-88b2-_1.vb)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/de4cf2f9-e381-4e28-88b2-_1.cs)]\n [!code-cpp[System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/de4cf2f9-e381-4e28-88b2-_1.cpp)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个整数，表示的年份。"
    - id: era
      type: System.Int32
      description: "一个整数，表示纪元。"
    return:
      type: System.Int32
      description: "指定纪元中的指定年份中的月数。"
  overload: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出所日历支持的范围。       -或-<code>era</code>超出所日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: ThaiBuddhistCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回包括指定<xref:System.DateTime>.</xref:System.DateTime>中的日期的年份的某一周"
  remarks: "此方法可以用于通过设置确定的年份中的周数`time`年份的最后一天的参数。       <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>包含可以用于的区域性特定值`rule`和`firstDayOfWeek`参数。</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>包含<xref:System.DayOfWeek>表示特定区域性，使用日历周的第一天的值在<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>属性</xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>中指定</xref:System.DayOfWeek>的默认</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>属性</xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>包含<xref:System.Globalization.CalendarWeekRule>的值，它定义的特定区域性，使用日历一个日历周<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>属性</xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>中指定</xref:System.Globalization.CalendarWeekRule>的默认</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>属性</xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       例如，在<xref:System.Globalization.GregorianCalendar>， <xref:System.Globalization.Calendar.GetWeekOfYear%2A>1 月 1 日，则返回 1。</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following example shows how the result of the GetWeekOfYear method varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, GetWeekOfYear returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/a2fb4535-92d9-4843-9826-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/a2fb4535-92d9-4843-9826-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/a2fb4535-92d9-4843-9826-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "之一<xref:System.Globalization.CalendarWeekRule>定义一个日历周的值。</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "之一<xref:System.DayOfWeek>这些值表示一周的第一天。</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "一个从 1 开始的正整数，表示包含中的日期的年份的某一周<code> time </code>参数。"
  overload: System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>或<code>firstDayOfWeek</code>超出所日历支持的范围。       -<code>rule</code>不是有效<xref:System.Globalization.CalendarWeekRule>值。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetYear(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回指定<xref:System.DateTime>.</xref:System.DateTime>中的年份"
  remarks: ''
  example:
  - "The following example demonstrates the use of the GetYear Method.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_0_1.cpp)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_0_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_0_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "一个整数，表示的年份中的指定<xref:System.DateTime>。</xref:System.DateTime>"
  overload: System.Globalization.ThaiBuddhistCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "确定指定纪元中指定的日期是否为闰日。"
  remarks: "中的泰国佛历闰年对应于为公历日历中的相同闰年。 闰年公历日历中定义为公历年份整除的由 4 个，但如果它是由 100 可除外。 但是，可被被 400 的公历年是闰年。 平 365 年天并且初始屏幕闰年有 366 天。       闰日是仅在闰年中发生了一天。 例如，年 2 月 29 日是唯一的闰日。"
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar.IsLeapDay#1](~/add/codesnippet/cpp/67ae98ae-5e38-47a4-a2e1-_1.cpp)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/67ae98ae-5e38-47a4-a2e1-_1.vb)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar.IsLeapDay#1](~/add/codesnippet/csharp/67ae98ae-5e38-47a4-a2e1-_1.cs)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个整数，表示的年份。"
    - id: month
      type: System.Int32
      description: "从 1 到 12 的整数，表示的月份。"
    - id: day
      type: System.Int32
      description: "一个从 1 到 31 之间的整数，表示日期。"
    - id: era
      type: System.Int32
      description: "一个整数，表示纪元。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的日期是闰日，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.ThaiBuddhistCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出所日历支持的范围。       -或-<code>month</code>超出所日历支持的范围。       -或-<code>day</code>超出所日历支持的范围。       -或-<code>era</code>超出所日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "确定指定纪元中的指定年份中的指定的月份是否为闰月。"
  remarks: "中的泰国佛历闰年对应于为公历日历中的相同闰年。 闰年公历日历中定义为公历年份整除的由 4 个，但如果它是由 100 可除外。 但是，可被被 400 的公历年是闰年。 平 365 年天并且初始屏幕闰年有 366 天。       闰月是仅在闰年中发生的整月。 泰国佛历没有闰月。"
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/e84647c1-ebe1-43c1-b009-_1.cpp)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/e84647c1-ebe1-43c1-b009-_1.vb)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/e84647c1-ebe1-43c1-b009-_1.cs)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个整数，表示的年份。"
    - id: month
      type: System.Int32
      description: "从 1 到 12 的整数，表示的月份。"
    - id: era
      type: System.Int32
      description: "一个整数，表示纪元。"
    return:
      type: System.Boolean
      description: "此方法始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，除非由派生类中重写。"
  overload: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出所日历支持的范围。       -或-<code>month</code>超出所日历支持的范围。       -或-<code>era</code>超出所日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "确定指定纪元中的指定的年份是否为闰年。"
  remarks: "中的泰国佛历闰年对应于为公历日历中的相同闰年。 闰年公历日历中定义为公历年份整除的由 4 个，但如果它是由 100 可除外。 但是，可被被 400 的公历年是闰年。 平 365 年天并且初始屏幕闰年有 366 天。"
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.ThaiBuddhistCalendar.IsLeapYear#1](~/add/codesnippet/cpp/5c0ae95d-3638-443e-a94b-_1.cpp)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/5c0ae95d-3638-443e-a94b-_1.vb)]\n [!code-cs[System.Globalization.ThaiBuddhistCalendar.IsLeapYear#1](~/add/codesnippet/csharp/5c0ae95d-3638-443e-a94b-_1.cs)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个整数，表示的年份。"
    - id: era
      type: System.Int32
      description: "一个整数，表示纪元。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的年是闰年，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.ThaiBuddhistCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出所日历支持的范围。       -或-<code>era</code>超出所日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: ThaiBuddhistCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取最新的日期和时间受<xref href=&quot;System.Globalization.ThaiBuddhistCalendar&quot;></xref>类。"
  remarks: ''
  example:
  - "The following example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.ThaiBuddhistCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.t_5_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.t_5_1.vb)]\n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.t_5_1.cpp)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最新的日期和时间受<xref href=&quot;System.Globalization.ThaiBuddhistCalendar&quot;></xref>类，该类是等效于的那一刻年 12 月 31 日公元 9999 年 在公历日历中。"
  overload: System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: ThaiBuddhistCalendar.MinSupportedDateTime
  fullName: System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取最早的日期和时间受<xref href=&quot;System.Globalization.ThaiBuddhistCalendar&quot;></xref>类。"
  remarks: ''
  example:
  - "The following example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.ThaiBuddhistCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.t_3_1.cs)]\n [!code-vb[System.Globalization.ThaiBuddhistCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.t_3_1.vb)]\n [!code-cpp[System.Globalization.ThaiBuddhistCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.t_3_1.cpp)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最早的日期和时间受<xref href=&quot;System.Globalization.ThaiBuddhistCalendar&quot;></xref>类，该类是等效于的那一刻 1 月 1 日公元 0001 年 在公历日历中。"
  overload: System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  id: ThaiBuddhistEra
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: ThaiBuddhistEra
  nameWithType: ThaiBuddhistCalendar.ThaiBuddhistEra
  fullName: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "表示当前纪元。 此字段为常数。"
  remarks: "<xref:System.Globalization.ThaiBuddhistCalendar>类只识别当前纪元。</xref:System.Globalization.ThaiBuddhistCalendar> 此字段始终返回 1。"
  syntax:
    content: public const int ThaiBuddhistEra = 1;
    return:
      type: System.Int32
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返回<xref:System.DateTime>它被设置为指定的日期和指定纪元中的时间。</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一个整数，表示的年份。"
    - id: month
      type: System.Int32
      description: "从 1 到 12 的整数，表示的月份。"
    - id: day
      type: System.Int32
      description: "一个从 1 到 31 之间的整数，表示日期。"
    - id: hour
      type: System.Int32
      description: "一个从 0 到 23 之间的整数，表示小时。"
    - id: minute
      type: System.Int32
      description: "从 0 到 59 之间的整数，表示分钟。"
    - id: second
      type: System.Int32
      description: "从 0 到 59 之间的整数，表示第二个。"
    - id: millisecond
      type: System.Int32
      description: "从 0 到 999 之间的整数，表示毫秒。"
    - id: era
      type: System.Int32
      description: "一个整数，表示纪元。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>，设置为指定的日期和时间以当前纪元。</xref:System.DateTime>"
  overload: System.Globalization.ThaiBuddhistCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出所日历支持的范围。       -或-<code>month</code>超出所日历支持的范围。       -或-<code>day</code>超出所日历支持的范围。       -或-<code>hour</code>小于零或大于 23。       -或-<code>minute</code>小于零或大于 59。       -或-<code>second</code>小于零或大于 59。       -或-<code>millisecond</code>小于零或大于 999。       -或-<code>era</code>超出所日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: ThaiBuddhistCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "将指定的年份转换为四位数年份，通过使用<xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax*>属性来确定相应的纪元。</xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A>是可以用两位数年份表示的 100 年范围内的最后一年。</xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A> 通过查找两位数字的唯一匹配项来确定世纪`year`该 100 年范围内。 例如，如果<xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A>设置为 2029，则 100 年范围是从 1930年为 2029年。</xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A> 因此，为 30 的 2 位值被解释为 1930，而 29 一个 2 位数字值被解释为 2029年。       ToFourDigitYear 支持两位数年份或四位数年份。 将两位数年份值 (小于 100) 传递会导致方法的值转换为一个四位数字值根据<xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A>值，该值表示相应的纪元。</xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A> 如果应用程序提供在 ToFourDigitYear 到了受支持的日历的范围内的四位数年份值，该方法将返回实际的输入的值。 如果应用程序提供一个四位数字值超出了支持的日历，或者它提供了负值，则该方法将引发异常。"
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "两位数或四位整数，它表示要转换的年份。"
    return:
      type: System.Int32
      description: "一个整数，包含的四位数字表示形式<code> year </code>。"
  overload: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出所日历支持的范围。"
  platform:
  - net462
- uid: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: ThaiBuddhistCalendar.TwoDigitYearMax
  fullName: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取或设置可以用两位数年份表示的 100 年范围内的最后一年。"
  remarks: "此属性允许两位数年份，要正确转换为 4 位数年份。 例如，在公历日历中，如果此属性设置为 2029，100 年范围是从 1930年为 2029年。 因此，为 30 的 2 位值被解释为 1930，而 29 一个 2 位数字值被解释为 2029年。       此属性的初始值被派生自控制面板的区域和语言选项部分中的设置。 但是，该信息可以更改<xref:System.AppDomain>.</xref:System.AppDomain>的生命周期内 <xref:System.Globalization.ThaiBuddhistCalendar>类不会检测系统设置中的更改自动。</xref:System.Globalization.ThaiBuddhistCalendar>       应用程序应将此值设置为 99，以指示按字面解释 2 位数字的年份。 例如，如果此属性设置为 99，100 年范围为 0 （不是有效值对于大多数日历而言） 和 99 之间。 因此，为 30 的 2 位值被解释为 30。"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "可以用两位数年份表示的 100 年范围内的最后一年。"
  overload: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "在集运算中指定的值是小于 99。       -或-指定在集运算中的值大于<xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在集运算中，当前实例是只读的。"
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.ThaiBuddhistCalendar.#ctor
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: ThaiBuddhistCalendar()
  nameWithType: ThaiBuddhistCalendar.ThaiBuddhistCalendar()
  fullName: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistCalendar()
- uid: System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: ThaiBuddhistCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: ThaiBuddhistCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.AlgorithmType
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: ThaiBuddhistCalendar.AlgorithmType
  fullName: System.Globalization.ThaiBuddhistCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.ThaiBuddhistCalendar.Eras
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: Eras
  nameWithType: ThaiBuddhistCalendar.Eras
  fullName: System.Globalization.ThaiBuddhistCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetEra(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetEra(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetMonth(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetMonth(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: ThaiBuddhistCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: ThaiBuddhistCalendar.GetYear(DateTime)
  fullName: System.Globalization.ThaiBuddhistCalendar.GetYear(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ThaiBuddhistCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
- uid: System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ThaiBuddhistCalendar.MinSupportedDateTime
  fullName: System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
- uid: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: ThaiBuddhistEra
  nameWithType: ThaiBuddhistCalendar.ThaiBuddhistEra
  fullName: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
- uid: System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: ThaiBuddhistCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: ThaiBuddhistCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: ThaiBuddhistCalendar.TwoDigitYearMax
  fullName: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
- uid: System.Globalization.ThaiBuddhistCalendar.#ctor*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: ThaiBuddhistCalendar
  nameWithType: ThaiBuddhistCalendar.ThaiBuddhistCalendar
- uid: System.Globalization.ThaiBuddhistCalendar.AddMonths*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: AddMonths
  nameWithType: ThaiBuddhistCalendar.AddMonths
- uid: System.Globalization.ThaiBuddhistCalendar.AddYears*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: AddYears
  nameWithType: ThaiBuddhistCalendar.AddYears
- uid: System.Globalization.ThaiBuddhistCalendar.AlgorithmType*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: ThaiBuddhistCalendar.AlgorithmType
- uid: System.Globalization.ThaiBuddhistCalendar.Eras*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: Eras
  nameWithType: ThaiBuddhistCalendar.Eras
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: ThaiBuddhistCalendar.GetDayOfMonth
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: ThaiBuddhistCalendar.GetDayOfWeek
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: ThaiBuddhistCalendar.GetDayOfYear
- uid: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: ThaiBuddhistCalendar.GetDaysInMonth
- uid: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: ThaiBuddhistCalendar.GetDaysInYear
- uid: System.Globalization.ThaiBuddhistCalendar.GetEra*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetEra
  nameWithType: ThaiBuddhistCalendar.GetEra
- uid: System.Globalization.ThaiBuddhistCalendar.GetLeapMonth*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: ThaiBuddhistCalendar.GetLeapMonth
- uid: System.Globalization.ThaiBuddhistCalendar.GetMonth*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetMonth
  nameWithType: ThaiBuddhistCalendar.GetMonth
- uid: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: ThaiBuddhistCalendar.GetMonthsInYear
- uid: System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: ThaiBuddhistCalendar.GetWeekOfYear
- uid: System.Globalization.ThaiBuddhistCalendar.GetYear*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: GetYear
  nameWithType: ThaiBuddhistCalendar.GetYear
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapDay*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: ThaiBuddhistCalendar.IsLeapDay
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: ThaiBuddhistCalendar.IsLeapMonth
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapYear*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: ThaiBuddhistCalendar.IsLeapYear
- uid: System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ThaiBuddhistCalendar.MaxSupportedDateTime
- uid: System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ThaiBuddhistCalendar.MinSupportedDateTime
- uid: System.Globalization.ThaiBuddhistCalendar.ToDateTime*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: ThaiBuddhistCalendar.ToDateTime
- uid: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: ThaiBuddhistCalendar.ToFourDigitYear
- uid: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax*
  parent: System.Globalization.ThaiBuddhistCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: ThaiBuddhistCalendar.TwoDigitYearMax
