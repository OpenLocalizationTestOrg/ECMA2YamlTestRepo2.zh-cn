### YamlMime:ManagedReference
items:
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute
  id: ComponentGuaranteesAttribute
  children:
  - System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  - System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  langs:
  - csharp
  name: ComponentGuaranteesAttribute
  nameWithType: ComponentGuaranteesAttribute
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute
  type: Class
  summary: "定义组件、 类型或类型成员可以跨多个版本的兼容性保证。"
  remarks: "组件和类库的开发人员使用 ComponentGuaranteesAttribute 以指示其库的使用者可以预期跨多个版本的兼容性的级别。 它指示库或组件的未来版本将不会中断现有客户端的保证的级别。 客户端然后可以使用 ComponentGuaranteesAttribute 设计自己的接口，以便确保稳定性版本之间的帮助。      1> [!NOTE]&1;> 公共语言运行时 (CLR) 不以任何方式使用此属性。 正式记录组件作者的目的在于其值。 编译时工具还可使用这些声明用于检测的编译时错误，否则会违反已声明的保证。      ## 级别的兼容性 ComponentGuaranteesAttribute 支持以下级别的兼容性，它们由的成员的形式表示<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>枚举:-不版本版本兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>)。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 客户端可以预期将来的版本会中断现有客户端。 有关详细信息，请参阅[无兼容性](#None)本主题中后面的部分。      ---并行版本的兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>)。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> 组件已经过测试，若要在多个版本的程序集加载到相同的应用程序域中时。 一般情况下，未来版本可能会破坏兼容性。 但是，当进行重大更改时，旧版本则不会修改，但是共存的新版本。 通过并行执行是预期的方式，使工作进行重大更改时的现有客户端。 有关详细信息，请参阅[并排显示兼容性](#SideBySide)本主题中后面的部分。      -稳定版本的兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>)。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> 将来的版本不应中断客户端，并通过并行执行应不必需的。 但是，如果客户端已无意中损坏的它可能可以使用通过并行执行来解决此问题。 有关详细信息，请参阅[稳定的兼容性](#Standard)部分。      -Exchange 版本的兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>)。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> 特别小心以确保将来的版本不会中断客户端。 客户端应在用于与独立于另一个部署其他程序集进行通信的接口的签名中使用仅限这些类型。 只有一个版本的这些类型预计会在给定应用程序域中，这意味着如果客户端中断，通过并行执行不能解决兼容性问题。 有关详细信息，请参阅[交换类型兼容性](#Exchange)部分。       以下各节讨论每个级别的更详细地保证。      <a name=&quot;None&quot;></a># # # 将组件作为标记不兼容性<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>指示提供程序，则没有有关兼容性的保证。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> 客户端应避免采取公开的接口的任何依赖项。 此级别的兼容性可用于实验或公共公开但仅用于在同一时间始终更新的组件的类型。 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>显式指示此组件不应使用由外部组件。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;SideBySide&quot;></a># # #--并行兼容性的作为组件将标记<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>指示组件已经过测试，在多个版本的程序集加载到同一应用程序域时起作用。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> 允许进行重大更改，只要它们由到具有更高版本的版本号的程序集。 绑定到对旧版本的程序集的组件应继续绑定到的旧版本，且其他组件可以将绑定到新版本。 还有可能更新被声明为一个组件<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>通过会造成任何破坏修改旧版本。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;Standard&quot;></a># # # 稳定标记作为类型的兼容性<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>指示类型，应在版本之间保持稳定。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> 但是，这可能也是类型的可能的稳定相同的应用程序域中存在的并行版本。       稳定类型维护高二进制兼容性栏。 因此，提供程序应避免对稳定类型进行重大更改。 以下类型的更改是可接受:-私有实例字段中添加或删除字段，一种类型，只要这不会中断的序列化格式。      -将更改为可序列化类型的非可序列化的类型。 （但是，可序列化的类型不被更改为非可序列化的类型。）     引发新的、 派生程度更大从方法的异常。      -改进性能的方法。      更改返回值的范围，只要更改不会产生不利影响大多数客户端。      -如果业务理由是高且受负面影响的客户端的数量较低，则修复严重的 bug。       由于新版本的稳定组件不会中断现有客户端，因此通常只有一个版本的稳定组件需要应用程序域中。 但是，这是不要求，因为稳定的类型不会使用所有组件都达成的 exchange 的已知类型。 因此，如果一个稳定的组件的新版本会无意间破坏某些组件，并且其他组件需要新版本，它可能可以修复此问题通过加载同时的旧和新组件。       <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>提供比<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>更强的版本兼容性保证</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 很多版本组件的公共的默认值。       <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>可以与组合<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>，该组件不会破坏兼容性，而测试若要在多个版本加载到给定应用程序域中时所处的状态。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions>       之后<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>，它可以升级到<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions>作为标记类型或方法 但是，无法降级到<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;Exchange&quot;></a># # # Exchange 类型兼容性标记的类型为<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>提供更强的版本兼容性保证比<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>，并应应用于所有类型的稳定。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> 这些类型旨在用于跨同时时间 （任何版本的 CLR） 或任何版本的组件或应用程序中的所有组件边界独立构建的组件和空间 (跨进程跨-CLR 在一个过程中，一个 CLR 中的跨应用程序域) 之间的交换。 如果对交换类型进行重大更改，则无法通过加载多个版本的类型解决此问题。       仅在一个问题是非常严重 （例如造成严重的安全问题） 或破坏的可能性较非常低 （即，如果代码可能不会采取依赖关系上的随机方式破坏行为） 时，才应更改 Exchange 类型。 你可以对 exchange 类型进行以下类型的更改:-添加新的接口定义的继承。      添加新的私有方法实现新继承的接口定义的方法。      添加新的静态字段。      添加新的静态方法。      -添加新的非虚拟实例方法。       以下被视为重大更改和基元类型不允许:-更改序列化格式。 版本容错序列化是必需的。      -添加或删除私有实例字段。 此风险更改类型的序列化格式并将分解为客户端代码使用反射。      更改类型的可序列化性。 不可序列化的类型不能设置为可序列化，反之亦然。      从方法的不同异常引发。      -除非成员定义引发这种可能性，并清楚地表明客户端应如何处理未知的值，则更改该方法的返回值的范围。      大多数 bug 修复。 类型的使用者将依赖于现有的行为。       后一个组件，标记类型或成员<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>保证，它不能更改为其中一种<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>或<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions>与       通常，交换类型都是基本类型 (如<xref:System.Int32>和<xref:System.String>.NET Framework 中) 和接口 (如<xref:System.Collections.Generic.IList%601>， <xref:System.Collections.Generic.IEnumerable%601>，和<xref:System.IComparable%601>)，通常用在公共接口。</xref:System.IComparable%601> </xref:System.Collections.Generic.IEnumerable%601> </xref:System.Collections.Generic.IList%601> </xref:System.String> </xref:System.Int32>       Exchange 类型上公开仅也标记为其他类型<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>兼容性。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 此外，exchange 类型不能依赖于倾向于更改的 Windows Api 的行为。      ## 组件保证︰ 摘要下表指示组件的特征和使用情况如何影响其兼容性保证。      |组件特征 |Exchange |稳定 |通过并行 |None |  |-------------------------------|--------------|------------|--------------------|----------|  |可以在组件之间的接口中该版本单独使用。 |Y |N |N |N |  |可以使用 （专用） 程序集由该版本独立。 |Y |Y |Y |N |  |可以在单个应用程序域中具有多个版本。 |N |Y |Y |Y |  |可以进行重大更改 |N |N |Y |Y |  |测试以确保程序集的多个版本，无法加载在一起。 |N |N |Y |N |  |可以就地进行重大更改。 |N |N |N |Y |  |可以进行非重大更改维护就地更改非常安全。 |Y |Y |Y |Y |     # # 应用你属性时，可以将 ComponentGuaranteesAttribute 应用于程序集、 类型或类型成员。 其应用程序具有层次结构。 也就是说，默认情况下，保证由定义<xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>的程序集级别属性的属性在程序集和在这些类型中的所有成员定义的所有类型的保证。</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 同样，如果保证应用于该类型，默认情况下它也适用于类型的每个成员。       此继承的保证可以重写通过将 ComponentGuaranteesAttribute 应用于各个类型和类型成员。 但是，重写默认值的保证仅会削弱保证;它们不能增强它。 例如，如果程序集标记为<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>保证，其类型和成员都具有不兼容性保证，并应用于类型或程序集中的成员的任何其他保证将被忽略。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      ## 测试保证<xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>属性返回的成员<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>枚举，它将标有<xref:System.FlagsAttribute>属性。</xref:System.FlagsAttribute> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 这意味着，你应进行测试以你感兴趣的屏蔽掉可能未知的标志的标志。 例如，下面的示例测试是否为<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>标记的类型       [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/add/codesnippet/csharp/t-system.runtime.version_1.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/add/codesnippet/visualbasic/t-system.runtime.version_1.vb) ]下面的示例测试是否为<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>或<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions>标记的类型         [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/add/codesnippet/csharp/t-system.runtime.version_2.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/add/codesnippet/visualbasic/t-system.runtime.version_2.vb) ]以下测试可以是一种类型的示例标记为<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>(也就是说，既不<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>也不<xref:System.Runtime.Versioning.ComponentGuaranteesOptions>)。</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions>         [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/add/codesnippet/csharp/t-system.runtime.version_3.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3  ](~/add/codesnippet/visualbasic/t-system.runtime.version_3.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)]

      public sealed class ComponentGuaranteesAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  id: '#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)'
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  langs:
  - csharp
  name: ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Versioning
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Versioning.ComponentGuaranteesAttribute&quot;></xref>一个值，指示库、 类型或成员的类保证跨多个版本的兼容性级别。"
  remarks: "当<xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>实例化类时，值`guarantees`参数分配给<xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>属性。</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> </xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>"
  syntax:
    content: public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);
    parameters:
    - id: guarantees
      type: System.Runtime.Versioning.ComponentGuaranteesOptions
      description: "指定的保证跨多个版本的兼容级别的枚举值之一。"
  overload: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  id: Guarantees
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  langs:
  - csharp
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Versioning
  summary: "获取一个值，该值指示受保证的库、 类型或类型成员跨多个版本的兼容性级别。"
  remarks: "保证属性的值对应于`guarantees`参数<xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A>构造函数。</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A>"
  syntax:
    content: public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }
    return:
      type: System.Runtime.Versioning.ComponentGuaranteesOptions
      description: "指定的保证跨多个版本的兼容级别的枚举值之一。"
  overload: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
- uid: System.Runtime.Versioning.ComponentGuaranteesOptions
  parent: System.Runtime.Versioning
  isExternal: false
  name: ComponentGuaranteesOptions
  nameWithType: ComponentGuaranteesOptions
  fullName: System.Runtime.Versioning.ComponentGuaranteesOptions
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor*
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: ComponentGuaranteesAttribute
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees*
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
