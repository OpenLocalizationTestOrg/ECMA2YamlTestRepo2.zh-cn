### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.DependencyObject
  id: DependencyObject
  children:
  - System.Workflow.ComponentModel.DependencyObject.#ctor
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.Finalize
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  langs:
  - csharp
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
  type: Class
  summary: "有依赖项属性的所有对象的基类。 必须继承此类。"
  remarks: >-
    > [!NOTE]

    >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class DependencyObject : IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "派生类中实现时，初始化的新实例<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>类。"
  syntax:
    content: protected DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "添加的事件处理程序<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  remarks: '当创建委托时，需要标识处理事件的方法。 若要将事件与事件处理程序关联，添加到事件的委托的一个实例。 除非移除了该委托，否则每当发生该事件时都会调用事件处理程序。 若要处理的事件，可以添加多个委托。 有关事件处理程序委托的详细信息，请参阅[NIB︰ 事件和委托](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。'
  example:
  - "Handlers are added and removed using the following code. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void AddHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>，表示此属性的值。</xref:System.Object> 在这种情况下，<xref:System.Delegate>类型。</xref:System.Delegate>"
  overload: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "任一参数为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> dependencyEvent </code>表示非事件<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  id: DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取值，该值指示此实例是否处于设计模式还是运行时模式。"
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此实例是否处于设计模式;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  id: Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "释放使用的所有资源<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "释放非托管的资源，还可以释放托管的资源由<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  id: Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "作为的重写提供&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;确定地清理任何非托管资源。"
  remarks: "通常，这是需要仅在非托管的资源，例如原始 HWNDS、 Win32 文件处理程序，并且其他人被释放时。"
  syntax:
    content: ~DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  id: GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "提供对访问<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>关联与特定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityBind GetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Workflow.ComponentModel.ActivityBind
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>关联与特定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  id: GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "检索<xref:System.Object>的主题<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。</xref:System.Object>"
  remarks: "<xref:System.Object>的<xref:System.Workflow.ComponentModel.ActivityBind>.</xref:System.Workflow.ComponentModel.ActivityBind>的主题</xref:System.Object> 当在派生类中重写此方法可以用于自定义在其中解析指定的绑定的方法。"
  syntax:
    content: protected virtual object GetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, Type targetType);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>的目标的<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>的主题<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  id: GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected T[] GetInvocationList<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
    return:
      type: T[]
      description: "要添加。"
  overload: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "提供的指定值的访问<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  remarks: "此成员通常在属性获取中用于提供命名的依赖值的值。"
  example:
  - "The following code shows how to use GetValue to return the value represented by a named dependency property in the context of get and set. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#231](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#231)]\n [!code-vb[WF_Samples#231](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#231)]"
  syntax:
    content: public object GetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Object
      description: "表示指定的值的对象<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "提供对绑定对象的访问权限<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>并跳过<xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>重写。</xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>"
  remarks: "此方法很有用内<xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>重写实现。</xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> 通常情况下，<xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>重写代码时，将调用 GetValueBase，，然后添加附加代码。</xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>       用于实现<xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>重写，<xref:System.Workflow.ComponentModel.PropertyMetadata>可在<xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>/<xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A>调用。</xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> </xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> </xref:System.Workflow.ComponentModel.PropertyMetadata> </xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>"
  syntax:
    content: public object GetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>若要获取的值。"
    return:
      type: System.Object
      description: "绑定的对象的<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。 这会跳过<xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>重写。</xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>"
  overload: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "对在派生类中重写时的依赖项属性执行初始化。"
  remarks: "在运行时在活动初始化期间由工作流运行时引擎调用。"
  syntax:
    content: protected virtual void InitializeProperties ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  id: IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "指示是否的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>设置为绑定。 请参阅<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>。</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>"
  syntax:
    content: public bool IsBindingSet (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>测试。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果设置为绑定;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  id: MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "确定是否<xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref>此<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>等于<xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref>的参数化<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  remarks: "这将使用`==`运算符，如私有成员的类型定义`metaproperties`，即<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: public bool MetaEquals (System.Workflow.ComponentModel.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Workflow.ComponentModel.DependencyObject
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>要比较是否相等。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref>相等; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  id: ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取父<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>中<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>关系图。"
  syntax:
    content: protected System.Workflow.ComponentModel.DependencyObject ParentDependencyObject { get; }
    return:
      type: System.Workflow.ComponentModel.DependencyObject
      description: "父<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>中<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>关系图。"
  overload: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "删除<xref:System.EventHandler>从一个关联<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。</xref:System.EventHandler>"
  remarks: "作为用于移除事件委托的方便直接方法提供。       当创建委托时，需要标识将处理该事件的方法。 若要将事件与事件处理程序关联，添加到事件的委托的一个实例。 除非移除了该委托，否则每当发生该事件时都会调用事件处理程序。 有关事件处理程序委托的详细信息，请参阅[NIB︰ 事件和委托](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。"
  example:
  - "Handlers are added and removed using the following code. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void RemoveHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>，表示此属性的值。</xref:System.Object> 在这种情况下，<xref:System.Delegate>类型。</xref:System.Delegate>"
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "任一参数为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> dependencyEvent </code>不是事件。"
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "<code> value </code>是<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>和此实例不是在<xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>。</xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  id: RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> from the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  syntax:
    content: public bool RemoveProperty (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>要删除。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果操作成功，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "自变量为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  id: SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "集<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>指定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>直接到<xref:System.Workflow.ComponentModel.DependencyProperty>。</xref:System.Workflow.ComponentModel.DependencyProperty>设置的值</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> 同样，<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>直接到类型事件的属性添加处理程序。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>       为相同属性调用它们时，这些方法是互斥的。 如果调用 SetBinding，则以前设置的值，它使用<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>(<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>事件中) 将忽略。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> 这同样适用另一种方法解决︰ <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>(<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) 将重置 SetBinding 与分配的绑定。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>"
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A>permission for this type.  \n  \n In addition, the use of the SetBinding method is illustrated.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#215](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#215)]\n [!code-vb[WF_Samples#215](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#215)]"
  syntax:
    content: public void SetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, System.Workflow.ComponentModel.ActivityBind bind);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>将设置为。"
  overload: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "任一参数为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Workflow.ComponentModel.PropertyMetadata&quot;> </xref>与关联<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>不可绑定。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "此实例不是在<xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>。</xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  id: SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "设置目标的值<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。"
  syntax:
    content: protected virtual void SetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, object value);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>要设置的目标<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bind</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "设置的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>，这是只读的。"
  syntax:
    content: protected void SetReadOnlyPropertyValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>，表示的值。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> dependencyProperty </code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "设置的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>到对象。"
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>设置依赖项属性的绑定。</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>       SetValue 设置一个值直接<xref:System.Workflow.ComponentModel.DependencyProperty>(同样，<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>直接到类型事件的属性添加处理程序)。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyProperty>       为相同属性调用它们时，这些方法是互斥的。 如果<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>调用，然后则以前设置的值，它使用 SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>事件中) 将忽略。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> 这同样适用另一种方法解决︰ SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) 将重置<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>。</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>分配的绑定</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>"
  example:
  - "The following code shows how a dependency property is set within a dependency object using SetValue.  \n  \n [!code-cs[WF_Samples#166](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#166)]\n [!code-vb[WF_Samples#166](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#166)]"
  syntax:
    content: public void SetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>设置。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>将值设置为。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "设置的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>到指定的<xref:System.Object>、 跳过<xref:System.Workflow.ComponentModel.DependencyObject.SetValue*>.</xref:System.Workflow.ComponentModel.DependencyObject.SetValue*> </xref:System.Object>"
  remarks: "此方法很有用内<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>重写实现。</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> 通常情况下，<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>重写代码将调用 SetValueBase 方法之前执行一些自定义逻辑。</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>       为设置<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>重写，<xref:System.Workflow.ComponentModel.PropertyMetadata>可在<xref:System.Workflow.ComponentModel.DependencyProperty>， <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>，或<xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A>调用。</xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> </xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> </xref:System.Workflow.ComponentModel.DependencyProperty> </xref:System.Workflow.ComponentModel.PropertyMetadata> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>"
  syntax:
    content: public void SetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>将设置为<xref:System.Object>.</xref:System.Object>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>该按钮将变为的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  id: Site
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取或设置到的站点组件的引用<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "站点组件的<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  id: UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取<xref:System.Collections.IDictionary>将自定义数据与此类实例关联。</xref:System.Collections.IDictionary>"
  remarks: "此属性是`metaproperty`，这意味着在运行时是不可变。 `Metaproperties`不要更改后的属性实例创建在运行时，因此该属性必须在设计时设置为文本值。       默认情况下不使用此属性<xref:System.Workflow.ComponentModel.Activity>由 Windows Workflow Foundation 提供的声明实现。</xref:System.Workflow.ComponentModel.Activity> 此集合未序列化;集合中包含的数据不会从设计时，运行时保留。"
  syntax:
    content: public System.Collections.IDictionary UserData { get; }
    return:
      type: System.Collections.IDictionary
      description: "字典，它用作扩展性挂钩，供开发人员用于操作<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>声明对设计工具，将自定义数据与单个活动声明关联。"
  overload: System.Workflow.ComponentModel.DependencyObject.UserData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
- uid: System.Workflow.ComponentModel.ActivityBind
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityBind
  nameWithType: ActivityBind
  fullName: System.Workflow.ComponentModel.ActivityBind
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
- uid: T[]
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
- uid: System.Workflow.ComponentModel.DependencyObject
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler
  nameWithType: DependencyObject.AddHandler
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose
  nameWithType: DependencyObject.Dispose
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize
  nameWithType: DependencyObject.Finalize
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding
  nameWithType: DependencyObject.GetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue
  nameWithType: DependencyObject.GetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList<T>
  nameWithType: DependencyObject.GetInvocationList<T>
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue
  nameWithType: DependencyObject.GetValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase
  nameWithType: DependencyObject.GetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties
  nameWithType: DependencyObject.InitializeProperties
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet
  nameWithType: DependencyObject.IsBindingSet
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals
  nameWithType: DependencyObject.MetaEquals
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler
  nameWithType: DependencyObject.RemoveHandler
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty
  nameWithType: DependencyObject.RemoveProperty
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding
  nameWithType: DependencyObject.SetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue
  nameWithType: DependencyObject.SetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue
  nameWithType: DependencyObject.SetReadOnlyPropertyValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue
  nameWithType: DependencyObject.SetValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase
  nameWithType: DependencyObject.SetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.Site*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
- uid: System.Workflow.ComponentModel.DependencyObject.UserData*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
