### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._Exception
  id: _Exception
  children:
  - System.Runtime.InteropServices._Exception.Equals(System.Object)
  - System.Runtime.InteropServices._Exception.GetBaseException
  - System.Runtime.InteropServices._Exception.GetHashCode
  - System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.InteropServices._Exception.GetType
  - System.Runtime.InteropServices._Exception.HelpLink
  - System.Runtime.InteropServices._Exception.InnerException
  - System.Runtime.InteropServices._Exception.Message
  - System.Runtime.InteropServices._Exception.Source
  - System.Runtime.InteropServices._Exception.StackTrace
  - System.Runtime.InteropServices._Exception.TargetSite
  - System.Runtime.InteropServices._Exception.ToString
  langs:
  - csharp
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
  type: Interface
  summary: "公开的公共成员&lt;xref:System.Exception?displayProperty=fullName&gt;到非托管代码的类。"
  remarks: "此接口是用于访问到托管类，从非托管代码，不应从托管代码调用。       此接口可保留的 vtable 顺序<xref:System.Exception?displayProperty=fullName>类可以访问由非托管 COM 对象的成员。</xref:System.Exception?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("b36b5c63-42ef-38bc-a07e-0b34c98f164a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]

      public interface _Exception
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _Exception.Equals(Object)
  fullName: System.Runtime.InteropServices._Exception.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Object.Equals%2A?displayProperty=fullName>方法确定是否<xref:System.Object>等于当前<xref:System.Object>.</xref:System.Object></xref:System.Object>指定</xref:System.Object.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>要与当前<xref:System.Object>.</xref:System.Object>进行比较</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref:System.Object>等同于当前<xref:System.Object>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._Exception.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.GetBaseException
  id: GetBaseException
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: GetBaseException()
  nameWithType: _Exception.GetBaseException()
  fullName: System.Runtime.InteropServices._Exception.GetBaseException()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.GetBaseException%2A?displayProperty=fullName&gt;方法。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.GetBaseException%2A?displayProperty=fullName>方法返回<xref:System.Exception>，它是一个或多个并发的异常的根本原因。</xref:System.Exception> </xref:System.Exception.GetBaseException%2A?displayProperty=fullName>"
  syntax:
    content: public Exception GetBaseException ();
    parameters: []
    return:
      type: System.Exception
      description: "引发的异常链中的第一个异常。 如果&lt;xref:System.Exception.InnerException%2A?displayProperty=fullName&gt;当前异常的属性为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，此属性返回当前异常。"
  overload: System.Runtime.InteropServices._Exception.GetBaseException*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _Exception.GetHashCode()
  fullName: System.Runtime.InteropServices._Exception.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;方法。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Object.GetHashCode%2A?displayProperty=fullName>方法用作特定类型的哈希函数。</xref:System.Object.GetHashCode%2A?displayProperty=fullName> <xref:System.Object.GetHashCode%2A?displayProperty=fullName>是适合在哈希算法和数据结构，如哈希表中使用。</xref:System.Object.GetHashCode%2A?displayProperty=fullName>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前实例的哈希代码。"
  overload: System.Runtime.InteropServices._Exception.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: _Exception.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.InteropServices._Exception.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.GetObjectData%2A?displayProperty=fullName&gt;方法"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.GetObjectData%2A?displayProperty=fullName>方法设置<xref:System.Runtime.Serialization.SerializationInfo>包含有关异常的信息的对象。</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Exception.GetObjectData%2A?displayProperty=fullName>"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>保存关于所引发异常的序列化的对象数据的对象。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>包含有关源或目标的上下文信息的结构。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.InteropServices._Exception.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.GetType
  id: GetType
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: GetType()
  nameWithType: _Exception.GetType()
  fullName: System.Runtime.InteropServices._Exception.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.GetType%2A?displayProperty=fullName&gt;方法。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.GetType%2A?displayProperty=fullName>方法获取当前实例的运行时类型。</xref:System.Exception.GetType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A<xref:System.Type>表示当前实例的确切运行时类型的对象。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Exception.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.HelpLink
  id: HelpLink
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: HelpLink
  nameWithType: _Exception.HelpLink
  fullName: System.Runtime.InteropServices._Exception.HelpLink
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.HelpLink%2A?displayProperty=fullName&gt;属性。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.HelpLink%2A?displayProperty=fullName>属性获取或设置指向与此异常关联的帮助文件。</xref:System.Exception.HelpLink%2A?displayProperty=fullName>"
  syntax:
    content: public string HelpLink { get; set; }
    return:
      type: System.String
      description: "统一资源名称 (URN) 或统一资源定位器 (URL) 的帮助文件。"
  overload: System.Runtime.InteropServices._Exception.HelpLink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.InnerException
  id: InnerException
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: InnerException
  nameWithType: _Exception.InnerException
  fullName: System.Runtime.InteropServices._Exception.InnerException
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.InnerException%2A?displayProperty=fullName&gt;属性。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.InnerException%2A?displayProperty=fullName>属性可以获取<xref:System.Exception>导致当前异常的实例。</xref:System.Exception> </xref:System.Exception.InnerException%2A?displayProperty=fullName>"
  syntax:
    content: public Exception InnerException { get; }
    return:
      type: System.Exception
      description: "实例&lt;xref:System.Exception?displayProperty=fullName&gt;描述导致当前异常的错误。 &lt;Xref:System.Exception.InnerException%2A?displayProperty=fullName&gt;属性返回相同的值传递到构造函数中，则为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中) 如果不向构造函数提供内部异常值。 此属性是只读的。"
  overload: System.Runtime.InteropServices._Exception.InnerException*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.Message
  id: Message
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: Message
  nameWithType: _Exception.Message
  fullName: System.Runtime.InteropServices._Exception.Message
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.Message%2A?displayProperty=fullName&gt;属性。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.Message%2A?displayProperty=fullName>属性获取描述当前异常的消息。</xref:System.Exception.Message%2A?displayProperty=fullName>"
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: "解释异常或空 string(&quot;&quot;) 原因的错误消息。"
  overload: System.Runtime.InteropServices._Exception.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.Source
  id: Source
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: Source
  nameWithType: _Exception.Source
  fullName: System.Runtime.InteropServices._Exception.Source
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.Source%2A?displayProperty=fullName&gt;属性。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.Source%2A?displayProperty=fullName>属性获取或设置的应用程序或导致错误的对象的名称。</xref:System.Exception.Source%2A?displayProperty=fullName>"
  syntax:
    content: public string Source { get; set; }
    return:
      type: System.String
      description: "应用程序或导致错误的对象的名称。"
  overload: System.Runtime.InteropServices._Exception.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.StackTrace
  id: StackTrace
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: StackTrace
  nameWithType: _Exception.StackTrace
  fullName: System.Runtime.InteropServices._Exception.StackTrace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.StackTrace%2A?displayProperty=fullName&gt;属性。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.StackTrace%2A?displayProperty=fullName>属性获取的字符串表示形式帧调用堆栈上引发当前异常的时间。</xref:System.Exception.StackTrace%2A?displayProperty=fullName>"
  syntax:
    content: public string StackTrace { get; }
    return:
      type: System.String
      description: "用最新的方法调用排在前面描述的调用堆栈，内容的字符串。"
  overload: System.Runtime.InteropServices._Exception.StackTrace*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.TargetSite
  id: TargetSite
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: TargetSite
  nameWithType: _Exception.TargetSite
  fullName: System.Runtime.InteropServices._Exception.TargetSite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.TargetSite%2A?displayProperty=fullName&gt;属性。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.TargetSite%2A?displayProperty=fullName>属性获取引发当前异常的方法。</xref:System.Exception.TargetSite%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodBase TargetSite { get; }
    return:
      type: System.Reflection.MethodBase
      description: "<xref:System.Reflection.MethodBase>引发当前异常的对象。</xref:System.Reflection.MethodBase>"
  overload: System.Runtime.InteropServices._Exception.TargetSite*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Exception.ToString
  id: ToString
  parent: System.Runtime.InteropServices._Exception
  langs:
  - csharp
  name: ToString()
  nameWithType: _Exception.ToString()
  fullName: System.Runtime.InteropServices._Exception.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限&lt;xref:System.Exception.ToString%2A?displayProperty=fullName&gt;方法。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Exception.ToString%2A?displayProperty=fullName>方法创建并返回当前异常的字符串表示。</xref:System.Exception.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个字符串，表示当前&lt;xref:System.Exception?displayProperty=fullName&gt;对象。"
  overload: System.Runtime.InteropServices._Exception.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._Exception.Equals(System.Object)
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: Equals(Object)
  nameWithType: _Exception.Equals(Object)
  fullName: System.Runtime.InteropServices._Exception.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._Exception.GetBaseException
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: _Exception.GetBaseException()
  fullName: System.Runtime.InteropServices._Exception.GetBaseException()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.InteropServices._Exception.GetHashCode
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: GetHashCode()
  nameWithType: _Exception.GetHashCode()
  fullName: System.Runtime.InteropServices._Exception.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: _Exception.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.InteropServices._Exception.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.InteropServices._Exception.GetType
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: GetType()
  nameWithType: _Exception.GetType()
  fullName: System.Runtime.InteropServices._Exception.GetType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._Exception.HelpLink
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: HelpLink
  nameWithType: _Exception.HelpLink
  fullName: System.Runtime.InteropServices._Exception.HelpLink
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._Exception.InnerException
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: InnerException
  nameWithType: _Exception.InnerException
  fullName: System.Runtime.InteropServices._Exception.InnerException
- uid: System.Runtime.InteropServices._Exception.Message
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: Message
  nameWithType: _Exception.Message
  fullName: System.Runtime.InteropServices._Exception.Message
- uid: System.Runtime.InteropServices._Exception.Source
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: Source
  nameWithType: _Exception.Source
  fullName: System.Runtime.InteropServices._Exception.Source
- uid: System.Runtime.InteropServices._Exception.StackTrace
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: StackTrace
  nameWithType: _Exception.StackTrace
  fullName: System.Runtime.InteropServices._Exception.StackTrace
- uid: System.Runtime.InteropServices._Exception.TargetSite
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: TargetSite
  nameWithType: _Exception.TargetSite
  fullName: System.Runtime.InteropServices._Exception.TargetSite
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.InteropServices._Exception.ToString
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: ToString()
  nameWithType: _Exception.ToString()
  fullName: System.Runtime.InteropServices._Exception.ToString()
- uid: System.Runtime.InteropServices._Exception.Equals*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: Equals
  nameWithType: _Exception.Equals
- uid: System.Runtime.InteropServices._Exception.GetBaseException*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: GetBaseException
  nameWithType: _Exception.GetBaseException
- uid: System.Runtime.InteropServices._Exception.GetHashCode*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: GetHashCode
  nameWithType: _Exception.GetHashCode
- uid: System.Runtime.InteropServices._Exception.GetObjectData*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: GetObjectData
  nameWithType: _Exception.GetObjectData
- uid: System.Runtime.InteropServices._Exception.GetType*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: GetType
  nameWithType: _Exception.GetType
- uid: System.Runtime.InteropServices._Exception.HelpLink*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: HelpLink
  nameWithType: _Exception.HelpLink
- uid: System.Runtime.InteropServices._Exception.InnerException*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: InnerException
  nameWithType: _Exception.InnerException
- uid: System.Runtime.InteropServices._Exception.Message*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: Message
  nameWithType: _Exception.Message
- uid: System.Runtime.InteropServices._Exception.Source*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: Source
  nameWithType: _Exception.Source
- uid: System.Runtime.InteropServices._Exception.StackTrace*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: StackTrace
  nameWithType: _Exception.StackTrace
- uid: System.Runtime.InteropServices._Exception.TargetSite*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: TargetSite
  nameWithType: _Exception.TargetSite
- uid: System.Runtime.InteropServices._Exception.ToString*
  parent: System.Runtime.InteropServices._Exception
  isExternal: false
  name: ToString
  nameWithType: _Exception.ToString
