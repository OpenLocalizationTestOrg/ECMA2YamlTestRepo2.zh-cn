### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.DateConstructor
  id: DateConstructor
  children:
  - Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])
  - Microsoft.JScript.DateConstructor.Invoke
  - Microsoft.JScript.DateConstructor.parse(System.String)
  - Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  langs:
  - csharp
  name: DateConstructor
  nameWithType: DateConstructor
  fullName: Microsoft.JScript.DateConstructor
  type: Class
  summary: "表示基于原型的对象定义的构造函数。 此类所属的内置对象模型类别。"
  syntax:
    content: 'public class DateConstructor : Microsoft.JScript.ScriptFunction'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  - Microsoft.JScript.ScriptFunction
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject
  - Microsoft.JScript.ScriptFunction.ilength
  - Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])
  - Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptFunction.length
  - Microsoft.JScript.ScriptFunction.prototype
  - Microsoft.JScript.ScriptFunction.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: Microsoft.JScript.DateConstructor
  langs:
  - csharp
  name: CreateInstance(Object[])
  nameWithType: DateConstructor.CreateInstance(Object[])
  fullName: Microsoft.JScript.DateConstructor.CreateInstance(Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "创建基于原型的对象，在指定的参数中传递的实例。"
  syntax:
    content: public Microsoft.JScript.DateObject CreateInstance (object[] args);
    parameters:
    - id: args
      type: System.Object[]
      description: "要传递给构造函数的参数。"
    return:
      type: Microsoft.JScript.DateObject
      description: "对象的实例。"
  overload: Microsoft.JScript.DateConstructor.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.DateConstructor.Invoke
  id: Invoke
  parent: Microsoft.JScript.DateConstructor
  langs:
  - csharp
  name: Invoke()
  nameWithType: DateConstructor.Invoke()
  fullName: Microsoft.JScript.DateConstructor.Invoke()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "返回自 1970 年 1 月 1 日以来所经历的毫秒数。"
  syntax:
    content: public string Invoke ();
    parameters: []
    return:
      type: System.String
      description: "自 1970 年 1 月 1 日以来所经历的毫秒数。"
  overload: Microsoft.JScript.DateConstructor.Invoke*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.DateConstructor.parse(System.String)
  id: parse(System.String)
  parent: Microsoft.JScript.DateConstructor
  langs:
  - csharp
  name: parse(String)
  nameWithType: DateConstructor.parse(String)
  fullName: Microsoft.JScript.DateConstructor.parse(String)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "将指定的字符串表示形式的日期和时间转换其<xref:System.Double>等效。</xref:System.Double>"
  syntax:
    content: public static double parse (string str);
    parameters:
    - id: str
      type: System.String
      description: "包含要转换的日期和时间的字符串。"
    return:
      type: System.Double
      description: "A<xref:System.Double>等效的日期和时间中包含的<code> str </code>。</xref:System.Double>"
  overload: Microsoft.JScript.DateConstructor.parse*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  id: UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.DateConstructor
  langs:
  - csharp
  name: UTC(Object,Object,Object,Object,Object,Object,Object)
  nameWithType: DateConstructor.UTC(Object,Object,Object,Object,Object,Object,Object)
  fullName: Microsoft.JScript.DateConstructor.UTC(Object,Object,Object,Object,Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "将指定的日期和时间转换为其<xref:System.Double>等效。</xref:System.Double>"
  syntax:
    content: public static double UTC (object year, object month, object date, object hours, object minutes, object seconds, object ms);
    parameters:
    - id: year
      type: System.Object
      description: "要转换的日期和时间的年份。"
    - id: month
      type: System.Object
      description: "要转换的日期和时间的月份。"
    - id: date
      type: System.Object
      description: "要转换的日期和时间的日期。"
    - id: hours
      type: System.Object
      description: "要转换的日期和时间的小时数。"
    - id: minutes
      type: System.Object
      description: "要转换的日期和时间的分钟数。"
    - id: seconds
      type: System.Object
      description: "要转换的日期和时间 （秒)。"
    - id: ms
      type: System.Object
      description: "要转换的日期和时间 （毫秒)。"
    return:
      type: System.Double
      description: "A<xref:System.Double>等效的指定的日期和时间。</xref:System.Double>"
  overload: Microsoft.JScript.DateConstructor.UTC*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: Microsoft.JScript.ScriptFunction
- uid: Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])
  parent: Microsoft.JScript.DateConstructor
  isExternal: false
  name: CreateInstance(Object[])
  nameWithType: DateConstructor.CreateInstance(Object[])
  fullName: Microsoft.JScript.DateConstructor.CreateInstance(Object[])
- uid: Microsoft.JScript.DateObject
  parent: Microsoft.JScript
  isExternal: false
  name: DateObject
  nameWithType: DateObject
  fullName: Microsoft.JScript.DateObject
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.DateConstructor.Invoke
  parent: Microsoft.JScript.DateConstructor
  isExternal: false
  name: Invoke()
  nameWithType: DateConstructor.Invoke()
  fullName: Microsoft.JScript.DateConstructor.Invoke()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.DateConstructor.parse(System.String)
  parent: Microsoft.JScript.DateConstructor
  isExternal: false
  name: parse(String)
  nameWithType: DateConstructor.parse(String)
  fullName: Microsoft.JScript.DateConstructor.parse(String)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.DateConstructor
  isExternal: false
  name: UTC(Object,Object,Object,Object,Object,Object,Object)
  nameWithType: DateConstructor.UTC(Object,Object,Object,Object,Object,Object,Object)
  fullName: Microsoft.JScript.DateConstructor.UTC(Object,Object,Object,Object,Object,Object,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.DateConstructor.CreateInstance*
  parent: Microsoft.JScript.DateConstructor
  isExternal: false
  name: CreateInstance
  nameWithType: DateConstructor.CreateInstance
- uid: Microsoft.JScript.DateConstructor.Invoke*
  parent: Microsoft.JScript.DateConstructor
  isExternal: false
  name: Invoke
  nameWithType: DateConstructor.Invoke
- uid: Microsoft.JScript.DateConstructor.parse*
  parent: Microsoft.JScript.DateConstructor
  isExternal: false
  name: parse
  nameWithType: DateConstructor.parse
- uid: Microsoft.JScript.DateConstructor.UTC*
  parent: Microsoft.JScript.DateConstructor
  isExternal: false
  name: UTC
  nameWithType: DateConstructor.UTC
