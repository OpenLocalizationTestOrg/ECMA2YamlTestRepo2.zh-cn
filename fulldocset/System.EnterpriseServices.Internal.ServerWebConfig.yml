### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.ServerWebConfig
  id: ServerWebConfig
  children:
  - System.EnterpriseServices.Internal.ServerWebConfig.#ctor
  - System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)
  langs:
  - csharp
  name: ServerWebConfig
  nameWithType: ServerWebConfig
  fullName: System.EnterpriseServices.Internal.ServerWebConfig
  type: Class
  summary: "创建 SOAP 启用 COM + 应用程序的 Web.config 文件。 此外可以在发布应用程序中的 COM 接口的文件添加组件条目。"
  remarks: "ServerWebConfig 类用于在创建的虚拟根目录在 Internet 信息服务 (IIS) 6.0 SOAP 启用 COM + 应用程序期间创建 Web.config 文件。 它还可以将添加 XML 元素到组件接口添加到应用程序的 Web.config 文件。       ServerWebConfig 由.NET Framework 在内部使用。 不需要在代码中直接使用它。"
  syntax:
    content: 'public class ServerWebConfig : System.EnterpriseServices.Internal.IServerWebConfig'
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IServerWebConfig
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ServerWebConfig.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  langs:
  - csharp
  name: ServerWebConfig()
  nameWithType: ServerWebConfig.ServerWebConfig()
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.ServerWebConfig()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "初始化的新实例<xref href=&quot;System.EnterpriseServices.Internal.ServerWebConfig&quot;></xref>类。"
  syntax:
    content: public ServerWebConfig ();
    parameters: []
  overload: System.EnterpriseServices.Internal.ServerWebConfig.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)
  id: AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  langs:
  - csharp
  name: AddElement(String,String,String,String,String,String)
  nameWithType: ServerWebConfig.AddElement(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.AddElement(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "将 XML 元素添加到 Web.config 文件，以便在 SOAP 启用 COM + 应用程序中正在发布的 COM 接口。"
  remarks: "对于指定的类型，则 AddElement 方法将添加到 Web.config 文件`<wellknown>`和`<activated>`元素的子级作为`<service>`元素使用以下 XPath: `/configuration/system.runtime.remoting/application/service` `AssemblyName`， `TypeName`， `ProgId`，和`WkoMode`参数合并到两个添加的元素的属性值。       不应直接调用 AddElement。 而应调用<xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>方法。</xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>"
  syntax:
    content: public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, out string Error);
    parameters:
    - id: FilePath
      type: System.String
      description: "现有的 Web.config 文件的路径。"
    - id: AssemblyName
      type: System.String
      description: "包含所添加的类型的程序集的名称。"
    - id: TypeName
      type: System.String
      description: "所添加的类型的名称。"
    - id: ProgId
      type: System.String
      description: "所添加的类型编程标识符。"
    - id: WkoMode
      type: System.String
      description: "对应于中的成员的名称的字符串常量<xref href=&quot;System.Runtime.Remoting.WellKnownObjectMode&quot;></xref>枚举，指示如何激活的已知对象。"
    - id: Error
      type: System.String
      description: "可以向其写入一条错误消息字符串。"
  overload: System.EnterpriseServices.Internal.ServerWebConfig.AddElement*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)
  id: Create(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  langs:
  - csharp
  name: Create(String,String,String)
  nameWithType: ServerWebConfig.Create(String,String,String)
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.Create(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "创建 SOAP 启用 COM + 应用程序的 Web.config 文件，以便该文件已准备好添加为要发布的 COM 接口的 XML 元素。"
  remarks: "Create 方法创建一个 Web.config 文件包含具有以下 XPath 的空元素的层次结构︰```   /configuration/system.runtime.remoting/application/service   ```而不是实例化<xref:System.EnterpriseServices.Internal.ServerWebConfig>类对象并调用直接创建调用<xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A>方法。</xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A> </xref:System.EnterpriseServices.Internal.ServerWebConfig>"
  syntax:
    content: public void Create (string FilePath, string FilePrefix, out string Error);
    parameters:
    - id: FilePath
      type: System.String
      description: "应在其中创建配置文件的文件夹。"
    - id: FilePrefix
      type: System.String
      description: "字符串值&quot;Web&quot;，以向其添加配置扩展。"
    - id: Error
      type: System.String
      description: "可以向其写入一条错误消息字符串。"
  overload: System.EnterpriseServices.Internal.ServerWebConfig.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.ServerWebConfig.#ctor
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: ServerWebConfig()
  nameWithType: ServerWebConfig.ServerWebConfig()
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.ServerWebConfig()
- uid: System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: AddElement(String,String,String,String,String,String)
  nameWithType: ServerWebConfig.AddElement(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.AddElement(String,String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: Create(String,String,String)
  nameWithType: ServerWebConfig.Create(String,String,String)
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.Create(String,String,String)
- uid: System.EnterpriseServices.Internal.ServerWebConfig.#ctor*
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: ServerWebConfig
  nameWithType: ServerWebConfig.ServerWebConfig
- uid: System.EnterpriseServices.Internal.ServerWebConfig.AddElement*
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: AddElement
  nameWithType: ServerWebConfig.AddElement
- uid: System.EnterpriseServices.Internal.ServerWebConfig.Create*
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: Create
  nameWithType: ServerWebConfig.Create
