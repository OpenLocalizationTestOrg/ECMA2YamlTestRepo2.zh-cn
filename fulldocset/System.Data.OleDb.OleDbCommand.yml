### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommand
  id: OleDbCommand
  children:
  - System.Data.OleDb.OleDbCommand.#ctor
  - System.Data.OleDb.OleDbCommand.#ctor(System.String)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  - System.Data.OleDb.OleDbCommand.Cancel
  - System.Data.OleDb.OleDbCommand.Clone
  - System.Data.OleDb.OleDbCommand.CommandText
  - System.Data.OleDb.OleDbCommand.CommandTimeout
  - System.Data.OleDb.OleDbCommand.CommandType
  - System.Data.OleDb.OleDbCommand.Connection
  - System.Data.OleDb.OleDbCommand.CreateDbParameter
  - System.Data.OleDb.OleDbCommand.CreateParameter
  - System.Data.OleDb.OleDbCommand.DbConnection
  - System.Data.OleDb.OleDbCommand.DbParameterCollection
  - System.Data.OleDb.OleDbCommand.DbTransaction
  - System.Data.OleDb.OleDbCommand.DesignTimeVisible
  - System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  - System.Data.OleDb.OleDbCommand.ExecuteReader
  - System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteScalar
  - System.Data.OleDb.OleDbCommand.Parameters
  - System.Data.OleDb.OleDbCommand.Prepare
  - System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  - System.Data.OleDb.OleDbCommand.Transaction
  - System.Data.OleDb.OleDbCommand.UpdatedRowSource
  langs:
  - csharp
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
  type: Class
  summary: "表示一个 SQL 语句或存储的过程以对数据源执行。"
  remarks: "当创建对 OleDbCommand 的实例时，读/写属性设置为其初始值。 有关这些值的列表，请参阅对 OleDbCommand 构造函数。       对 OleDbCommand 功能执行命令的数据源的以下方法: |项 |说明 |  |----------|-----------------|  |<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|执行返回行的命令。</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>可能没有所需如果使用效果执行命令，例如 SQL SET 语句。 |  |<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|执行命令，例如 SQL INSERT、 DELETE、 更新和一组语句。 |  |<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|检索单个值，例如，从数据库的聚合值。 |      你可以重置<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>属性和重复使用对 OleDbCommand 对象。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> </xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A></xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 但是，你必须关闭<xref:System.Data.OleDb.OleDbDataReader>便可以执行新的或以前的命令之前。</xref:System.Data.OleDb.OleDbDataReader>       如果致命<xref:System.Data.OleDb.OleDbException>（例如，SQL Server 严重性级别为 20 或更高版本） 执行对 OleDbCommand，方法生成<xref:System.Data.OleDb.OleDbConnection>，连接可能会关闭。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbException> 但是，用户可以重新打开连接并继续。"
  example:
  - "The following example uses the OleDbCommand, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database. The filled <xref:System.Data.DataSet> is then returned. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.  \n  \n [!code-cs[Classic WebData OleDbCommand Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData OleDbCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>类。"
  remarks: "基构造函数初始化为其默认值的所有字段。 下表显示<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>实例的初始属性的值      |属性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>| 空字符串 (&quot;&quot;) |  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|</xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public OleDbCommand ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>与文本的查询的类。"
  remarks: "下表显示<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>实例的初始属性的值      |属性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|</xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.IDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_19_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_19_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "查询的文本。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>与文本的查询的类和<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>。"
  remarks: "下表显示<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>实例的初始属性的值      |属性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|即的值的新<xref:System.Data.OleDb.OleDbConnection>`connection`参数。 |      你可以通过设置相关的属性更改任何这些参数的值。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand.Connection%2A> </xref:System.Data.IDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/visualbasic/26f0a1c0-3abd-4fd3-81fd-_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/csharp/26f0a1c0-3abd-4fd3-81fd-_1.cs)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "查询的文本。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>表示与数据源的连接。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新实例<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>类与文本的查询、 查询<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>，和<xref:System.Data.OleDb.OleDbCommand.Transaction*>.</xref:System.Data.OleDb.OleDbCommand.Transaction*>"
  remarks: "下表显示<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>实例的初始属性的值      |属性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|即的值的新<xref:System.Data.OleDb.OleDbConnection>`connection`参数。 |      你可以通过设置相关的属性更改任何这些参数的值。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand.Connection%2A> </xref:System.Data.IDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/csharp/e97c7061-6e79-4e9b-b76e-_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/visualbasic/e97c7061-6e79-4e9b-b76e-_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "查询的文本。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>表示与数据源的连接。"
    - id: transaction
      type: System.Data.OleDb.OleDbTransaction
      description: "在其中事务<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Cancel
  id: Cancel
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "尝试取消执行<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>。"
  remarks: "如果没有要取消内容，则不会。 但是，如果在过程中，命令，并且即使取消尝试失败，不会生成异常。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Clone
  id: Clone
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "创建一个新<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>副本的当前实例的对象。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand Clone ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "一个新<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>副本的此实例的对象。"
  overload: System.Data.OleDb.OleDbCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandText
  id: CommandText
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置的 SQL 语句或存储的过程以在数据源中执行。"
  remarks: "当<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>属性设置为`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>属性应设置为存储过程的名称。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 用户可能需要使用转义符语法，如果存储的过程名称包含任何特殊字符。 当你调用之一时，该命令将执行此存储的过程`Execute`方法。       当<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>设置为`TableDirect`、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>属性应设置为表或表的名称，以访问。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 用户可能需要的任何命名的表包含任何特殊字符时，请使用转义符语法。 当你调用之一时，将返回所有行和列的指定的表或表`Execute`方法。       无法设置<xref:System.Data.OleDb.OleDbCommand.Connection%2A>， <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>，和 CommandText 属性，如果当前的连接执行的 execute 或提取操作。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.Connection%2A>       OLE DB.NET 提供程序不支持命名的参数用于将参数传递到 SQL 语句或存储的过程由调用<xref:System.Data.OleDb.OleDbCommand>时<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>设置为`Text`。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand> 在这种情况下，必须使用问号 （？） 占位符。 例如︰`SELECT * FROM Customers WHERE CustomerID = ?`因此，在其中的顺序<xref:System.Data.OleDb.OleDbParameter>对象添加到<xref:System.Data.OleDb.OleDbParameterCollection>必须直接与对应参数的问号占位符的位置。</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter>       有关详细信息，请参阅[配置参数和参数数据类型](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_11_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_11_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "SQL 语句或要执行存储的过程。 默认值为空字符串。"
  overload: System.Data.OleDb.OleDbCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置在终止尝试执行命令并生成错误之前的等待时间。"
  remarks: "值为 0 表示没有限制，，应当避免在 CommandTimeout，因为尝试执行命令将无限期等待。"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "（以秒为单位） 的时间要等待的时间要执行的命令。 默认值为 30 秒。"
  overload: System.Data.OleDb.OleDbCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandType
  id: CommandType
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置一个值，该值指示如何<xref:System.Data.OleDb.OleDbCommand.CommandText*>解释属性。</xref:System.Data.OleDb.OleDbCommand.CommandText*>"
  remarks: "当将 CommandType 属性设置为`StoredProcedure`，应设置<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>到存储过程的名称的属性。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 在调用 Execute 方法之一时，该命令将执行此存储的过程。       <xref:System.Data.OleDb.OleDbCommand.Connection%2A>，CommandType 和<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>无法设置属性，如果当前的连接执行的 execute 或提取操作。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.Connection%2A>       OLE DB.NET 提供程序不支持命名的参数，将参数传递给 SQL 语句或存储的过程由调用<xref:System.Data.OleDb.OleDbCommand>时 CommandType 设置为文本。</xref:System.Data.OleDb.OleDbCommand> 在这种情况下，必须使用问号 （？） 占位符。 例如︰`SELECT * FROM Customers WHERE CustomerID = ?`因此，在其中的顺序<xref:System.Data.OleDb.OleDbParameter>对象添加到<xref:System.Data.OleDb.OleDbParameterCollection>必须直接与对应参数的问号占位符的位置。</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter> 有关详细信息，请参阅[配置参数和参数数据类型](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "CommandType 值之一。 默认值为 Text。"
  overload: System.Data.OleDb.OleDbCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "值不是有效的 CommandType。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Connection
  id: Connection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>的此实例所使用的<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>。"
  remarks: "无法设置该连接，<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>和<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>如果当前的连接执行的 execute 或提取操作的属性。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A>       如果在事务执行过程正在进行设置连接和<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>属性不为 null，<xref:System.InvalidOperationException>生成。</xref:System.InvalidOperationException> </xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 如果<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>属性不为 null，而事务已提交或回滚，<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>设置为 null。</xref:System.Data.OleDb.OleDbCommand.Transaction%2A> </xref:System.Data.OleDb.OleDbCommand.Transaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_0_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_0_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbConnection Connection { get; set; }
    return:
      type: System.Data.OleDb.OleDbConnection
      description: "到数据源的连接。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在事务正在进行，发生了更改连接属性。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "创建的新实例<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>对象。"
  remarks: "CreateParameter 方法是<xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>的强类型的版本"
  syntax:
    content: public System.Data.OleDb.OleDbParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbParameter
      description: "<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>对象。"
  overload: System.Data.OleDb.OleDbCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  id: DbConnection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置一个值，该值指示命令对象是否应在自定义 Windows 窗体设计器控件中可见。"
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "一个值，该值指示命令对象是否应在控件中可见。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "要添加。"
    return:
      type: System.Data.Common.DbDataReader
      description: "要添加。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "执行 SQL 语句针对<xref:System.Data.OleDb.OleDbCommand.Connection*>，并返回受影响的行数。</xref:System.Data.OleDb.OleDbCommand.Connection*>"
  remarks: "执行目录操作，例如，若要查询的数据库的结构或若要创建数据库对象，如表，或更改数据库中的数据而无需使用，你可以使用 ExecuteNonQuery<xref:System.Data.DataSet>通过执行更新、 插入或删除语句。</xref:System.Data.DataSet>       虽然 ExecuteNonQuery 不返回任何行，用数据填充任何输出参数或返回值映射到参数。       对于 UPDATE、 INSERT 和 DELETE 语句，返回值是通过该命令影响的行数。 对于所有其他类型的语句，则返回值为-1。 如果发生回滚，则返回值也为-1。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_5_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_5_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "受影响的行数。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "连接不存在。       -或者-连接未打开。       -或-无法从连接最初在其中登记的上下文执行不同的事务上下文中的命令。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "发送<> *1> 到<> *1> 并生成<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>。"
  remarks: "当<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>属性设置为`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>属性应设置为存储过程的名称。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 在调用 ExecuteReader 时，该命令将执行此存储的过程。       在关闭之前<xref:System.Data.OleDb.OleDbConnection>，先关闭<xref:System.Data.OleDb.OleDbDataReader>对象。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> 您必须关闭<xref:System.Data.OleDb.OleDbDataReader>对象你是否打算重新<xref:System.Data.OleDb.OleDbCommand>对象。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_11_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_11_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>对象。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "无法从最初在其中登记连接的上下文中执行不同的事务上下文中的命令。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "发送<> *1> 到<> *1>，并生成<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>使用之一<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
  remarks: "当指定<xref:System.Data.CommandBehavior>与<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>方法<xref:System.Data.OleDb.OleDbCommand>对象，用于 OLE DB.NET Framework 数据提供程序执行绑定使用 OLE DB **IRow**接口是否可用。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> </xref:System.Data.CommandBehavior> 否则，它使用**IRowset**接口。 如果你的 SQL 语句应返回单个行，则指定<xref:System.Data.CommandBehavior>还可提高应用程序性能。</xref:System.Data.CommandBehavior>       当<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>属性设置为`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>属性应设置为存储过程的名称。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 在调用<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>时，该命令执行此存储的过程       <xref:System.Data.OleDb.OleDbDataReader>支持一种特殊的模式，使大型二进制值，以高效读取。</xref:System.Data.OleDb.OleDbDataReader> 有关详细信息，请参阅`SequentialAccess` <xref:System.Data.CommandBehavior>。</xref:System.Data.CommandBehavior>设置       在关闭之前<xref:System.Data.OleDb.OleDbConnection>，先关闭<xref:System.Data.OleDb.OleDbDataReader>对象。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> 您必须关闭<xref:System.Data.OleDb.OleDbDataReader>对象你是否打算重新<xref:System.Data.OleDb.OleDbCommand>对象。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbDataReader> 如果<xref:System.Data.OleDb.OleDbDataReader>使用创建<xref:System.Data.CommandBehavior>设置为`CloseConnection`，正在关闭<xref:System.Data.OleDb.OleDbDataReader>自动关闭的连接。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.CommandBehavior> </xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "之一<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>对象。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "无法从最初在其中登记连接的上下文中执行不同的事务上下文中的命令。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "执行查询，并返回由查询返回的结果集第一行的第一列。 其他列或行将被忽略。"
  remarks: "从数据源使用 ExecuteScalar 方法来检索单个值的聚合值。 这要求更少的代码比使用<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>方法，，然后再执行，需生成单个值的操作使用受支持<xref:System.Data.OleDb.OleDbDataReader>。</xref:System.Data.OleDb.OleDbDataReader>返回的数据</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>       典型的 ExecuteScalar 查询可进行格式设置如下面的 C# 示例所示︰```   CommandText = &quot;SELECT COUNT(*) FROM region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_8_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_8_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "结果中的第一行的第一列设置，或者为空引用的结果集是否为空。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "无法从最初在其中登记连接的上下文中执行不同的事务上下文中的命令。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Parameters
  id: Parameters
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the <xref href=&quot;System.Data.OleDb.OleDbParameterCollection&quot;></xref>."
  remarks: "OLE DB.NET 提供程序不支持命名的参数，将参数传递给 SQL 语句或存储的过程由调用<xref:System.Data.OleDb.OleDbCommand>时<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>设置为`Text`。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand> 在这种情况下，必须使用问号 （？） 占位符。 例如︰`SELECT * FROM Customers WHERE CustomerID = ?`因此，在其中的顺序<xref:System.Data.OleDb.OleDbParameter>对象添加到<xref:System.Data.OleDb.OleDbParameterCollection>必须直接对应于命令文本中参数的问号占位符的位置。</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter>      1> [!NOTE]&1;> 如果集合中的参数不匹配的查询执行的要求，可能会产生错误。       有关详细信息，请参阅[配置参数和参数数据类型](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.  \n  \n [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_18_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_18_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbParameterCollection Parameters { get; }
    return:
      type: System.Data.OleDb.OleDbParameterCollection
      description: "SQL 语句或存储的过程的参数。 默认值为空集合。"
  overload: System.Data.OleDb.OleDbCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Prepare
  id: Prepare
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "在数据源上创建命令的已准备的 （或已编译的） 版本。"
  remarks: "如果<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>属性设置为`TableDirect`，准备不执行任何操作。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 如果<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>设置为`StoredProcedure`，prepare 调用应成功，尽管它可能会导致否 op.</xref:System.Data.OleDb.OleDbCommand.CommandType%2A>       在调用准备之前，请在要准备的语句中指定每个参数的数据类型。 对于每个参数具有可变长度数据类型，你必须设置**大小**属性设置为所需的最大大小。 准备如果不满足这些条件将返回错误。       如果调用`Execute`方法之后调用 Prepare 时，任何参数值大于指定的值**大小**属性自动截断至原始指定的大小的参数，并且会返回任何截断错误。       输出参数 （无论是否已准备） 必须具有用户指定的数据类型。 如果指定可变长度数据类型，你还必须指定最大值**大小**。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection. The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_26_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_26_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *1> 未设置。      -或- <> </> *1> 未打开。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "重置<xref:System.Data.OleDb.OleDbCommand.CommandTimeout*>为默认值的属性。</xref:System.Data.OleDb.OleDbCommand.CommandTimeout*>"
  remarks: "默认值<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>为 30 秒。</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  id: System#Data#IDbCommand#ExecuteReader
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "有关此成员的说明，请参阅&lt;xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.OleDb.OleDbCommand>实例被强制转换为<xref:System.Data.IDbCommand>接口。</xref:System.Data.IDbCommand> </xref:System.Data.OleDb.OleDbCommand>"
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>对象。"
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "执行<> *1> 针对<> *1>，并生成<xref href=&quot;System.Data.IDataReader&quot;></xref>使用之一<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.OleDb.OleDbCommand>实例被强制转换为<xref:System.Data.IDbCommand>接口。</xref:System.Data.IDbCommand> </xref:System.Data.OleDb.OleDbCommand>       有关此成员的说明，请参阅<xref:System.Data.IDbCommand.ExecuteReader%2A>。</xref:System.Data.IDbCommand.ExecuteReader%2A>"
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "之一<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>使用之一生成<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "有关此成员的说明，请参阅&lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Data.OleDb.OleDbCommand>实例被强制转换为<xref:System.ICloneable>接口。</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbCommand>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "一个新<xref:System.Object>，它是此实例的副本。</xref:System.Object>"
  overload: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Transaction
  id: Transaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置<xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;></xref>其中<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>执行。"
  remarks: "如果它已被设置为特定值，并且该命令正在执行，不能设置事务属性。 如果事务属性设置为<xref:System.Data.OleDb.OleDbTransaction>未连接到相同的对象<xref:System.Data.OleDb.OleDbConnection>作为<xref:System.Data.OleDb.OleDbCommand>对象，下次尝试执行语句，将引发异常。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbTransaction>"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction Transaction { get; set; }
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "The <xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;></xref>. 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "获取或设置如何将命令结果应用于<xref href=&quot;System.Data.DataRow&quot;></xref>由<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>方法<xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>。"
  remarks: "除非自动生成命令的默认 UpdatedRowSource 值都将为两者 (与<xref:System.Data.OleDb.OleDbCommandBuilder>)，在这种情况下的默认值为 None。</xref:System.Data.OleDb.OleDbCommandBuilder>       有关如何使用 UpdatedRowSource 属性的详细信息，请参阅[DataAdapter 参数](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "之一<xref href=&quot;System.Data.UpdateRowSource&quot;></xref>值。"
  overload: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "输入的值不是之一<xref href=&quot;System.Data.UpdateRowSource&quot;></xref>值。"
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommand.#ctor
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbCommand.Cancel
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
- uid: System.Data.OleDb.OleDbCommand.Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.CommandText
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommand.CommandType
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
- uid: System.Data.OleDb.OleDbParameter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameter
  nameWithType: OleDbParameter
  fullName: System.Data.OleDb.OleDbParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbCommand.Parameters
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbParameterCollection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameterCollection
  nameWithType: OleDbParameterCollection
  fullName: System.Data.OleDb.OleDbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.Prepare
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbCommand.Transaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OleDb.OleDbCommand.#ctor*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.Cancel*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel
  nameWithType: OleDbCommand.Cancel
- uid: System.Data.OleDb.OleDbCommand.Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone
  nameWithType: OleDbCommand.Clone
- uid: System.Data.OleDb.OleDbCommand.CommandText*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
- uid: System.Data.OleDb.OleDbCommand.CommandType*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OleDbCommand.CreateDbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OleDbCommand.CreateParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
- uid: System.Data.OleDb.OleDbCommand.Dispose*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose
  nameWithType: OleDbCommand.Dispose
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OleDbCommand.ExecuteDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OleDbCommand.ExecuteNonQuery
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OleDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OleDbCommand.ExecuteScalar
- uid: System.Data.OleDb.OleDbCommand.Parameters*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbCommand.Prepare*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare
  nameWithType: OleDbCommand.Prepare
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OleDbCommand.ResetCommandTimeout
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbCommand.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbCommand.Transaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
