### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeFormatter
  id: MimeFormatter
  children:
  - System.Web.Services.Protocols.MimeFormatter.#ctor
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  langs:
  - csharp
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
  type: Class
  summary: "用于所有的读取器和 Web 服务和客户端使用 HTTP 实现但不支持 SOAP 的编写器提供一个抽象基类。"
  remarks: "Web 服务编写器和读卡器序列化和反序列化，分别之间 Web 方法的参数或返回对象和 HTTP 请求或响应流。 MimeFormatter 类建立通用接口和功能，对于读取器和编写器类，在客户端和服务端。       MimeFormatter 类支持的 Web 服务通过 HTTP GET 和 HTTP POST 操作的.NET Framework 的实现。 在 HTTP GET 操作中请求参数进行编码在 HTTP 请求的统一资源定位器 (URL)。 在 HTTP POST 操作中，请求参数在 HTTP 请求正文中，编码与 HTML 窗体。 与这两个实现，返回值将显示在 HTTP 响应正文中为非 SOAP XML 文档。       开发人员通常不必直接使用 MimeFormatter 或其子代类。 相反，当 Wsdl.exe 工具生成的 HTTP GET 或 HTTP POST 实现根据客户端代理代码，它适用<xref:System.Web.Services.Protocols.HttpMethodAttribute>指向每个 Web 方法和设置的属性<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>和<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>属性添加到相应的类型派生自 MimeFormatter 类</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A></xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A></xref:System.Web.Services.Protocols.HttpMethodAttribute> 在服务器上，根据 ASP.NET 配置文件 (Web.config) 中的设置使用相应的派生的类型。 客户端上从 WSDL 确定适当的派生的类型。"
  syntax:
    content: public abstract class MimeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "初始化的新实例<xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref>类。"
  syntax:
    content: protected MimeFormatter ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  id: CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "创建并初始化的具体派生类的实例<xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>。"
  remarks: "CreateInstance 方法创建派生类的实例并调用派生的类实现的抽象<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> CreateInstance 方法是在处理请求或响应时调用。       初始值设定项是作为参数传递一个对象<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 初始值设定项作为一个参数传递给 CreateInstance 方法通过调用获得的派生类中，另一个实例从<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>在客户端或服务的初始化过程中的方法。</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);
    parameters:
    - id: type
      type: System.Type
      description: "从派生类型， <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>，要创建实例。"
    - id: initializer
      type: System.Object
      description: "用于初始化实例的对象之前获取通过派生的类实现<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>方法。</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>"
    return:
      type: System.Web.Services.Protocols.MimeFormatter
      description: "A <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref> object."
  overload: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "当在派生类中重写，则返回的指定方法的初始值设定项。"
  remarks: "初始值设定项是作为参数传递一个对象<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       在客户端或服务初始化期间调用的 GetInitializer 实例方法的派生的类的实现。 更高版本，在处理请求或响应时，初始值设定项对象传递到静态<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>方法，这将创建实例的另一个对象派生的类，以及然后<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法以初始化它。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> </xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 另一个对象执行实际读取或写入。"
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>指定 Web 方法为其获取初始值设定项。"
    return:
      type: System.Object
      description: "<xref:System.Object>，其中包含的指定方法的初始值设定项。</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "返回指定的方法的初始值设定项。"
  remarks: "初始值设定项是作为参数传递一个对象<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       静态 GetInitializer 方法将调用派生的类的<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>方法，隐式创建派生类的实例</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 在处理请求或响应时，初始值设定项对象传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法的另一个实例派生的类。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 后一种对象执行实际读取或写入。"
  syntax:
    content: public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: type
      type: System.Type
      description: "从派生类型， <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>，-用于从中获取初始值设定项。"
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>指定 Web 方法为其获取初始值设定项。"
    return:
      type: System.Object
      description: "A<xref:System.Object>包含初始值设定项的指定方法的对象。</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "当在派生类中重写，返回对象对应方法定义的输入数组的初始值设定项的数组。"
  remarks: "初始值设定项是作为参数传递一个对象<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       GetInitializers 实例方法调用<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>实例方法，为每个输入 Web 方法。</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 这意味着从派生的类的实例<xref:System.Web.Services.Protocols.MimeFormatter>已创建。</xref:System.Web.Services.Protocols.MimeFormatter> 在处理请求或响应时，初始值设定项将传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法的另一个实例派生的类。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 后一种对象执行实际读取或写入。"
  syntax:
    content: public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "其中，对于每个方法，获取该对象中返回的初始值设定项数组的相应索引的 Web 方法的数组。"
    return:
      type: System.Object[]
      description: "对应于输入的方法定义数组的初始值设定项对象的数组。"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "返回从指定的类派生的对应方法定义的输入数组的对象的数组初始值设定项<xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>。"
  remarks: "初始值设定项是作为参数传递一个对象<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       静态 GetInitializersmethod 可调用<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>属于指定的派生类方法`type`参数。</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: type
      type: System.Type
      description: "从派生类型， <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>，获取为哪些初始值设定项。"
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "类型的数组<xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> ，它指定为其获取初始值设定项的 Web 方法。"
    return:
      type: System.Object[]
      description: "数组初始值设定项对应的对象的输入数组的方法定义指定的类派生自<xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>。"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "当在派生类中重写，初始化实例。"
  remarks: "在处理请求或响应; 时调用的 Initialize 方法但是，初始值设定项通过调用获取<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>在客户端或服务的初始化过程中的另一个实例上的方法。</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "适用于实现该方法的特定类类型的对象。"
  overload: System.Web.Services.Protocols.MimeFormatter.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
- uid: System.Web.Services.Protocols.MimeFormatter
  parent: System.Web.Services.Protocols
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter.MimeFormatter
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance
  nameWithType: MimeFormatter.CreateInstance
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer
  nameWithType: MimeFormatter.GetInitializer
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers
  nameWithType: MimeFormatter.GetInitializers
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize
  nameWithType: MimeFormatter.Initialize
