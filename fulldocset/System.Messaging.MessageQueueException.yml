### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueException
  id: MessageQueueException
  children:
  - System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.Message
  - System.Messaging.MessageQueueException.MessageQueueErrorCode
  langs:
  - csharp
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
  type: Class
  summary: "如果发生 Microsoft 消息队列内部错误引发的异常。"
  remarks: "MessageQueueException 类与相关联的异常由消息队列应加以处理与通过你的代码中的内部错误生成。       每个异常都由错误代码和描述错误来源的文本字符串。 请参阅<xref:System.Messaging.MessageQueueErrorCode>类这些错误代码及其说明的列表。</xref:System.Messaging.MessageQueueErrorCode>       如果<xref:System.Messaging.MessageQueue>打开一个队列`sharedModeDenyReceive`参数设置为 true，任何<xref:System.Messaging.MessageQueue>，随后尝试从队列中读取生成 MessageQueueException 异常由于共享冲突。</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue> 如果将引发同一异常<xref:System.Messaging.MessageQueue>尝试访问以独占模式，而此时另一个队列<xref:System.Messaging.MessageQueue>已经以非独占方式访问队列。</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue>      1>**警报标记不支持!!!**   1><xref:System.Messaging.MessageQueueTransaction>是可识别线程单元 –。</xref:System.Messaging.MessageQueueTransaction> Visual Basic 将设置到的主线程的状态`STA`，因此您必须首先应用<xref:System.MTAThreadAttribute>中`Main`子例程。</xref:System.MTAThreadAttribute> 否则，发送事务性消息使用另一个线程将引发 MessageQueueException 异常。"
  example:
  - >-
    [!code-vb[MessageQueue.ExistsDelete#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_3_1.vb)]
     [!code-cs[MessageQueue.ExistsDelete#1](~/add/codesnippet/csharp/t-system.messaging.messa_3_1.cs)]
     [!code-cpp[MessageQueue.ExistsDelete#1](~/add/codesnippet/cpp/t-system.messaging.messa_3_1.cpp)]
  syntax:
    content: 'public class MessageQueueException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新实例<xref href=&quot;System.Messaging.MessageQueueException&quot;></xref>用序列化数据的类。"
  syntax:
    content: protected MessageQueueException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>它保存与关联的序列化的数据<xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A<xref:System.Runtime.Serialization.StreamingContext>包含源以及与相关联的序列化流的目标<xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Messaging.MessageQueueException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "序列化所需的数据，并用其填充序列化信息对象<xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>。"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>它保存与关联的序列化的数据<xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A<xref:System.Runtime.Serialization.StreamingContext>包含源以及与相关联的序列化流的目标<xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Messaging.MessageQueueException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.Message
  id: Message
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取一个值，描述消息队列错误。"
  remarks: "当您获取此属性时，该方法尝试检索与关联的文本字符串<xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A>属性。</xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A> 如果该方法是无法解释消息队列生成的错误代码，消息属性获取的值`UnknownError`。"
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "消息队列内部错误生成了此说明<xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>。"
  overload: System.Messaging.MessageQueueException.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  id: MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取一个值，该值指示与此异常关联的错误代码。"
  remarks: "<xref:System.Messaging.MessageQueueException.Message%2A>属性包含与此更完整地描述错误的来源的 MessageQueueErrorCode 相关联的字符串。</xref:System.Messaging.MessageQueueException.Message%2A>"
  syntax:
    content: public System.Messaging.MessageQueueErrorCode MessageQueueErrorCode { get; }
    return:
      type: System.Messaging.MessageQueueErrorCode
      description: "A <xref href=&quot;System.Messaging.MessageQueueErrorCode&quot;> </xref>标识的错误消息队列生成的类型。"
  overload: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Messaging.MessageQueueException.Message
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueErrorCode
  parent: System.Messaging
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueException.#ctor*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException.MessageQueueException
- uid: System.Messaging.MessageQueueException.GetObjectData*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData
  nameWithType: MessageQueueException.GetObjectData
- uid: System.Messaging.MessageQueueException.Message*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
