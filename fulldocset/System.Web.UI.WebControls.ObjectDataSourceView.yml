### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceView
  id: ObjectDataSourceView
  children:
  - System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  - System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  - System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  - System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  - System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  - System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  - System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.Selected
  - System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Updated
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Updating
  langs:
  - csharp
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView
  fullName: System.Web.UI.WebControls.ObjectDataSourceView
  type: Class
  summary: "支持<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件并提供用于数据绑定控件可以执行数据操作的业务和数据对象的接口。"
  remarks: "ObjectDataSourceView 类主要用于数据绑定控件，而不是页的代码中的可编程对象使用。       ObjectDataSourceView 类实现的数据功能<xref:System.Web.UI.WebControls.ObjectDataSource>控制，包括<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作、 排序、 筛选和设置的管理视图中保存状态。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       每个实例创建一个 ObjectDataSourceView 对象<xref:System.Web.UI.WebControls.ObjectDataSource>类在运行时。</xref:System.Web.UI.WebControls.ObjectDataSource> 实例的数据操作的调用<xref:System.Web.UI.WebControls.ObjectDataSource>类由 ObjectDataSourceView 对象的实例。</xref:System.Web.UI.WebControls.ObjectDataSource> 页开发人员不能直接访问 ObjectDataSourceView 类的实例。 控件开发人员可以创建自定义数据控件，通过扩展<xref:System.Web.UI.WebControls.ObjectDataSource>和 ObjectDataSourceView 类。</xref:System.Web.UI.WebControls.ObjectDataSource>       ObjectDataSourceView 类通过使用反射的业务或数据对象上调用方法来执行数据操作。 在运行时，<xref:System.Web.UI.WebControls.ObjectDataSource>控件创建一个实例的类型由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>属性，然后为数据操作调用相应的方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 实例化的对象不在内存中缓存通过 ObjectDataSourceView。 对象是创建和销毁为每个数据的方法调用。 如果该方法是`static`(`Shared`在 Visual Basic 中)，不创建实例，但仍调用数据操作方法。       对页面开发人员不直接公开 ObjectDataSourceView<xref:System.Web.UI.WebControls.ObjectDataSource>控件。</xref:System.Web.UI.WebControls.ObjectDataSource> 相反，通过<xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource>访问的属性和方法的 ObjectDataSourceView 例如，<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>通过设置<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>属性的<xref:System.Web.UI.WebControls.ObjectDataSource>。</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>设置 ObjectDataSourceView 属性</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>      ## 检索数据的数据源视图执行的最基本操作是从基础数据存储使用的数据检索<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，检索<xref:System.Collections.IEnumerable>数据项的集合。</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 以下数据检索方法、 属性和事件由 ObjectDataSourceView 对象实现并直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向页开发人员和其他调用方的控件:-<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法-<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>属性-<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>属性-<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>事件-<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>事件 # # 更新数据 ObjectDataSourceView 对象通过调用由标识的业务或数据对象方法支持数据更新<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 自动执行更新，如数据绑定控件<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控件，将其参数中的传递<xref:System.Collections.Specialized.IOrderedDictionary>ObjectDataSourceView 和视图对象的接口将合并这些参数与在中找到任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       以下更新方法、 属性和事件由 ObjectDataSourceView 实现并直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向页开发人员和其他调用方的控件:-<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>方法-<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>属性-<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>属性-<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>事件-<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件 # # 插入数据 ObjectDataSourceView 对象支持插入新的数据行，通过调用由标识的业务或数据对象方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 自动执行插入，如数据绑定控件<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，将其参数中的传递<xref:System.Collections.Specialized.IOrderedDictionary>ObjectDataSourceView 和视图对象的接口将合并这些参数与在中找到任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       以下插入方法、 属性和事件是由 ObjectDataSourceView 实现并且直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向页开发人员和其他调用方的控件:-<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>方法-<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>属性-<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>属性-<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>事件-<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件 # # 删除数据 ObjectDataSourceView 对象通过调用由标识的业务或数据对象方法中删除数据的支持<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 自动执行删除操作，如数据绑定控件<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，将其参数中的传递<xref:System.Collections.Specialized.IOrderedDictionary>ObjectDataSourceView 和视图对象的接口将合并这些参数与在中找到任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 以下删除方法、 属性和事件是由 ObjectDataSourceView 实现并且直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向页开发人员和其他调用方的控件:-<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>方法-<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>属性-<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>属性-<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>事件-<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件 # # 动态筛选器数据时，筛选和排序数据数据检索是更强大。</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 支持筛选仅可由<xref:System.Web.UI.WebControls.ObjectDataSource>控制如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataTable>或<xref:System.Data.DataSet>对象。</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 你可以使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>属性要应用到数据检索的动态筛选。</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 这些属性由 ObjectDataSourceView 对象实现并直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向数据绑定控件和其他调用方的控件。</xref:System.Web.UI.WebControls.ObjectDataSource>       您可以通过在检索数据进行排序<xref:System.Web.UI.WebControls.ObjectDataSource>通过对数据进行排序在内存中检索之后。</xref:System.Web.UI.WebControls.ObjectDataSource> 支持排序只能由<xref:System.Web.UI.WebControls.ObjectDataSource>控制如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataTable>或<xref:System.Data.DataSet>。</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>属性始终返回`true`，这是因为 ObjectDataSourceView 无法确定哪种类型由<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>而不会调用该方法的方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性语法是相同<xref:System.Data.DataView.Sort%2A?displayProperty=fullName>属性。</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>      ## 跟踪视图状态 ObjectDataSourceView 实现<xref:System.Web.UI.IStateManager>接口并使用视图状态在页请求之间跟踪其状态。</xref:System.Web.UI.IStateManager> 实现<xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>方法用于启用控件的视图状态跟踪。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> 有关详细信息，请参阅[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: 'public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>类。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>构造函数由调用<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法以返回具有指定的数据源视图的新实例`viewName`参数。</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> <xref:System.Web.UI.WebControls.ObjectDataSource>控件所关联只使用一个<xref:System.Web.UI.WebControls.ObjectDataSourceView>在任何时间，并始终将视图命名`DefaultView`，尽管此命名限制施加的<xref:System.Web.UI.WebControls.ObjectDataSource>控制，不<xref:System.Web.UI.WebControls.ObjectDataSourceView>。</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> 您可以重写<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法，以支持具有不同的命名约定的视图。</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>       <xref:System.Web.HttpContext>通过传递的对象`context`由数据源视图来访问参数对象，如<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.ObjectDataSource
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> ， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>与相关联。"
    - id: name
      type: System.String
      description: "拥有它的数据源控件的作用域内的数据源视图中唯一名称。"
    - id: context
      type: System.Web.HttpContext
      description: "当前<xref href=&quot;System.Web.HttpContext&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件支持删除操作。"
  remarks: "CanDelete 属性返回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性设置。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 删除操作仍可能会失败，如果所有数据属性未设置或未正确设置。"
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 不支持删除，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>属性为空字符串 (&quot;&quot;)。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件支持插入操作。"
  remarks: "CanInsert 属性返回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性设置。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 插入操作仍将失败，如果所有数据属性未设置或未正确设置。"
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 不支持插入，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>属性为空字符串。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件支持通过检索到的数据进行分页。"
  remarks: "CanPage 属性指示是否<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象支持分页。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 有关详细信息<xref:System.Web.UI.WebControls.ObjectDataSourceView>，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>支持分页"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>值设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件支持检索数据行，集以及数据的总行数。"
  remarks: "CanRetrieveTotalRowCount 属性返回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性设置。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 返回的计数方法应返回总的行数可以进行分页，不在页中的行数。 数据绑定控件使用可分页来确定如何呈现分页控件的行的总数。 例如，多少数字页导航按钮在呈现<xref:System.Web.UI.WebControls.GridView>控制寻呼机。</xref:System.Web.UI.WebControls.GridView> 分页支持的详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>       在调用是否选中了 CanRetrieveTotalRowCount 属性<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法，以确保数据源控件支持通过设置各种请求的所有功能<xref:System.Web.UI.DataSourceSelectArguments>属性。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件支持基础数据源的排序的视图。"
  remarks: "因为<xref:System.Web.UI.WebControls.ObjectDataSource>控件仅支持对数据进行排序时<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法返回<xref:System.Data.DataSet>， <xref:System.Data.DataView>，或<xref:System.Data.DataTable>对象，该视图对象无法确定是否排序支持直到<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法调用，并且返回。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 为此，CanSort 属性始终返回`true`。"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件支持更新操作。"
  remarks: "CanUpdate 属性返回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性设置。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 更新操作仍将失败，如果所有数据属性未设置或未正确设置。"
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持该操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果不支持更新<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>属性为空字符串 (&quot;&quot;)。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，确定如何<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件执行更新和删除操作时在基础数据存储的行中的数据更改操作期间。"
  remarks: "ConflictDetection 属性确定的旧和新值的参数适用于`Update`方法。 例如，如果该方法是指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性返回<xref:System.Data.DataTable>对象包含列`Name`和`Number`，和 ConflictDetection 属性设置为<xref:System.Web.UI.ConflictOptions>值，参数为创建`Name`和`Number`为`Update`方法。</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 如果 ConflictDetection 属性设置为<xref:System.Web.UI.ConflictOptions>参数值，创建具有名称`Name`， `Number`， `original_Name`，和`original_Name`。</xref:System.Web.UI.ConflictOptions> (取决于原始值的参数的确切名称<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>。)</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A><xref:System.Web.UI.WebControls.ObjectDataSourceView>然后确定方法是否在指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性具有匹配的参数。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       并发控制是一种数据存储区使用来控制如何读取和更改存储区中，在访问和操作同一数据多个客户端数据的技术。 例如，一台客户端读取数据，并将其呈现给用户，而另一个客户端读取同一数据，并将其呈现给其他用户。 如果两个用户更新的数据，并将其提交至数据存储，则可能会发生某种意外的结果，因为两个客户端可能会更新相同数据的不同值。 这是被视为冲突。 ConflictDetection 属性设置为<xref:System.Web.UI.ConflictOptions>值，`Update`方法然后可以将比较到原始的数据源，以检测冲突，并根据需要处理它们，新旧值。</xref:System.Web.UI.ConflictOptions>       属性是 ConflictDetection 的值存储在视图状态。"
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "之一<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>值。 默认值是<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>值。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "所选的值不是之一<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;></xref>传递给更新、 插入或删除操作的值自动转换从<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>到<xref href=&quot;System.DBNull.Value&quot;></xref>值。"
  remarks: "不转换`null`到<xref:System.DBNull.Value?displayProperty=fullName>值可能会在运行时导致错误。</xref:System.DBNull.Value?displayProperty=fullName> ConvertNullToDBNull 属性用于指示是否<xref:System.Web.UI.WebControls.Parameter>传递给更新、 插入或删除操作的值自动转换从`null`到<xref:System.DBNull.Value?displayProperty=fullName>值。</xref:System.DBNull.Value?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>"
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>中<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;></xref>对象传递给<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>自动转换为<xref href=&quot;System.DBNull.Value&quot;></xref>值; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的类名称<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件使用的数据操作中的参数。 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>控件使用指定的类，而不是<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;></xref>各种参数集合中的对象。"
  remarks: "而不是指定多个参数传递给`Select`， `Update`， `Insert`，和`Delete`方法，你可以创建一个聚合多个项的对象。 此对象传递到方法，而不是多个参数。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>"
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "标识的对象类型的部分或完全限定的类名， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>可以使用的参数作为<> *1>， <> </> *1>，或<xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>操作。</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*> 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "通过调用由标识的业务对象方法执行删除操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>使用指定的属性<code> keys </code>和<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "默认值为-1，这意味着已删除的行数未知。 若要返回不同的值，设置<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件处理程序。</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 受影响的行数通常由`Delete`业务对象，而该值的方法是从可用<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>参数<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件处理程序。</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       删除方法调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法，并传递`keys`和`oldValues`集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>的用于标识要删除的项的键值。</xref:System.Collections.IDictionary> 这些参数用于<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>属性来执行删除操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> 如果没有与该方法关联的参数，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>，其中包含用于匹配数据源中的项的其他非键值。</xref:System.Collections.IDictionary> 行值都会传递给方法才<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>属性设置为<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>字段。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "删除; 的行数否则为-1，如果不知道数量。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>操作已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "处理已删除事件，检查返回值的值和输出参数，或者想要确定后是否引发了异常<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 返回值、 输出参数和异常处理属性就可以在<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>与事件相关联的对象。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_129_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的方法或函数名称<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象将调用中删除数据。"
  remarks: "由 delete 方法属性标识的方法可以是实例方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果它是实例方法，业务对象是创建和销毁每次调用 delete 方法属性指定的方法。 你可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件调用 delete 方法属性指定的方法之前，要使用业务对象。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 你还可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>之后调用 delete 方法属性指定该方法，将引发的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 如果该方法是`static`(`Shared`在 Visual Basic 中) 永远不会创建方法，业务对象，无法处理这些事件。       如果业务对象<xref:System.Web.UI.WebControls.ObjectDataSource>控件的工作方式与实现多个方法或函数具有相同名称 （方法重载），尝试调用正确根据一组条件，包括中的参数的数据源控件<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合不匹配的 delete 方法方法签名，则数据源将引发异常。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>       Delete 方法属性的值存储在视图状态。       有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1099_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1099_1.aspx)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示方法的名称或函数的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>用于删除数据。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取包含所使用的参数的参数集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "名称和 DeleteParameters 集合中包含的参数类型必须匹配的名称和指定的方法中的参数类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性签名。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 参数名称受到<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性，并且区分大小写。</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 使用提供参数，如数据绑定控件时<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控件自动合并在具有这些参数提供的数据绑定控件的集合中显式指定任何参数。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>包含由指定的方法的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "之前发生<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "处理删除事件，以执行特定于应用程序，以验证参数的值的附加初始化操作或要更改参数值之前<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 参数都可用作<xref:System.Collections.IDictionary>集合所访问的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象。</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_88_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_88_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否为数据源控件支持它检索的数据集进行分页。"
  remarks: "通过分页<xref:System.Web.UI.WebControls.ObjectDataSourceView>控件处理通过设置 EnablePaging， <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceView>并定义`Select`并用正确的参数的业务对象中的方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 当 EnablePaging 属性设置为`true`、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合包括请求的第一个行和请求的行数的两个其他参数。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 这两个参数的名称由定义<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> `Select`方法应返回请求的指定索引处开始的行数。 因为按页大小，数据可能不均匀划分，最后一页可能包含更少的行。 因此，请求的行数是实际返回的行最大数量。       <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>在调用过程中检查属性<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法，以确保数据源控件支持通过设置各种请求的所有功能<xref:System.Web.UI.DataSourceSelectArguments>属性。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>       如果在关联的数据绑定控件上启用了分页，数据绑定控件调用`Select`方法的起始索引和所需的行数。 此外，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性设置，数据绑定控件在呈现的页导航控件之前调用的方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 例如，如果<xref:System.Web.UI.WebControls.GridView>控件页大小为 5，启用了分页和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>方法返回 20，仅 4 页将寻呼程序中显示。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.GridView>       属性是 EnablePaging 的值存储在视图状态。"
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据源控件支持到数据进行分页它检索;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "执行删除操作使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>方法并指定<code> keys </code>和<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现继承的 ExecuteDelete 方法，可以从基础数据存储区中使用业务对象中删除数据。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 页开发人员和数据绑定控件作者不 ExecuteDelete 方法直接调用;请改为使用公开提供<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>       执行删除操作之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 你可以处理此事件来检查参数的值之前并执行任何预处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>调用方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>       若要执行删除操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反射来调用的方法的由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性及所有关联的中的参数`keys`和`oldValues`集合，然后执行它。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 在操作完成后，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 你可以处理此事件，检查任何返回值和错误代码，并执行任何后续处理。"
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>的参数用于<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>属性来执行删除操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> </xref:System.Collections.IDictionary> 如果没有与该方法关联的参数，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>包含行值，其计算结果，仅当<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>属性设置为<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>字段。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "删除; 的行数否则为-1，如果不知道数量。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>属性返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>属性设置为<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>传入值，并没有值<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "通过调用由标识的业务对象方法中执行插入操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>使用指定的属性<code> values </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现继承的 ExecuteInsert 方法，可以将数据插入到基础数据存储区中使用业务对象。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 页开发人员和数据绑定控件作者不 ExecuteInsert 方法直接调用;请改为使用公开提供<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       执行插入之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 你可以处理此事件来检查参数的值之前并执行任何预处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>调用方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       执行插入操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>控件使用反射来调用的方法的由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性及所有关联的参数中`values`集合，然后执行它。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 在操作完成后，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 你可以处理此事件以检查任何返回值，错误代码，并执行任何后续处理。       返回插入的行数的详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>的参数用于<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>属性来执行插入操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> 如果没有与该方法关联的参数，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "插入; 的行数否则为-1，如果不知道数量。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>属性返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>values</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或为空。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "检索由标识此对象中的数据<> *1> 通过调用方法的属性由<> *1> 属性并传递中的任何值<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现继承的 ExecuteSelect 方法，可以使用业务对象检索数据。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 页开发人员和数据绑定控件作者不 ExecuteSelect 方法直接调用;请改为使用公开提供<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       指定的方法可以有任意方法签名，但必须返回的类型之一<xref:System.Web.UI.WebControls.ObjectDataSource>若要成功调用下表中列出的控件。</xref:System.Web.UI.WebControls.ObjectDataSource>      |返回类型 |操作 |  |-----------------|------------|  |<xref:System.Collections.IEnumerable>|由<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Collections.IEnumerable>。 |  |<xref:System.Data.DataTable>|创建使用<xref:System.Data.DataTable>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataView>。 |  |<xref:System.Data.DataSet>|提取<xref:System.Data.DataSet>的第一个<xref:System.Data.DataTable>并创建<xref:System.Data.DataView>并将其<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回。 |  |<xref:System.Object>|包装在一个元素<xref:System.Collections.IEnumerable>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回的对象。 |      执行数据检索之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView>  </xref:System.Data.DataTable></xref:System.Data.DataSet> </xref:System.Data.DataSet>   </xref:System.Data.DataView></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Data.DataTable> </xref:System.Data.DataTable>  </xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> 你可以处理此事件，检查的参数的值并执行操作之前任何预处理。       执行选择操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>控件使用反射来调用的方法的由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性及所有关联的参数中<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合，然后执行它。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 在操作完成后，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 你可以处理此事件，检查任何返回值和错误代码，并执行任何后续处理。       如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataSet>对象并启用了缓存，<xref:System.Web.UI.WebControls.ObjectDataSourceView>检索中的数据，并在操作期间将数据保存到缓存。</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 创建缓存，丢弃，或刷新基于指定的组合的缓存行为<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>和<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>属性。</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>       如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataSet>对象和一个<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>指定属性，以及提供的所有计算<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>属性并生成的筛选器应用到过程中的数据列表<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       有关返回选择的行数的信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>用于对数据执行基本的数据检索的请求操作。"
    return:
      type: System.Collections.IEnumerable
      description: "A<xref:System.Collections.IEnumerable>的数据行的列表。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n The object returned by the ExecuteSelect method is not a <xref href=\"System.Data.DataSet\"></xref> or <xref href=\"System.Data.DataTable\"></xref>, and caching is enabled. Only <xref href=\"System.Data.DataSet\"></xref> and <xref href=\"System.Data.DataTable\"></xref> objects can be cached for the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> does not support caching when client impersonation is enabled."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object returned by the ExecuteSelect method is a <xref href=\"System.Data.DataSet\"></xref>, but has no tables in its <xref:System.Data.DataSet.Tables*> collection.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*> and <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*> properties are not set."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "通过调用由标识的方法执行更新操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>属性并使用在提供的任何参数<code> keys </code>， <code> values </code>，或<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现继承的 ExecuteUpdate 方法，来更新使用业务对象数据。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 页开发人员和数据绑定控件作者不调用 ExecuteUpdate 方法直接;请改为使用公开提供<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>       中包含的值`keys`和`values`集合将进行计算并与包含的任何值合并<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置为<xref:System.Web.UI.ConflictOptions>值、 中包含的值`oldValues`集合都将使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性并合并。</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       执行更新操作之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 你可以处理此事件，检查的参数的值并执行更新之前任何预处理。 若要执行更新操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反射来调用的方法的由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性及所有关联的中的参数`keys`集合，然后执行它。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 在操作完成后，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 你可以处理此事件以检查任何返回值，错误代码，并执行任何后续处理。       返回更新的行数的详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>的主键，若要使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>属性以执行更新数据库操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> 如果没有任何与该方法关联的密钥，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>的值要用于<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>以执行更新数据库操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> 如果没有与该方法关联的参数，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>表示基础数据存储区中的原始值。</xref:System.Collections.IDictionary> 如果没有与查询关联的参数，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "更新; 的行数否则为-1，并不知道有多少。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.Update*>。</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>属性返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldValues</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty and <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> is set to <xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置业务对象方法时应用的筛选表达式由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>属性称为。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>控件支持筛选数据时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataSet>， <xref:System.Data.DataView>，或<xref:System.Data.DataTable>对象。</xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       适用于的语法<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性是一个格式字符串样式表达式。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 筛选器表达式语法是相同的语法通过接受<xref:System.Data.DataView.RowFilter%2A>属性因为筛选器表达式应用于<xref:System.Data.DataView.RowFilter%2A>属性<xref:System.Data.DataView>从执行返回的对象<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> (有关详细信息，请参阅<xref:System.Data.DataColumn.Expression%2A>。)</xref:System.Data.DataColumn.Expression%2A>如果你将参数添加到<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合，也可以包含格式字符串占位符，例如`&quot;{0}&quot;`，在要替换参数值的表达式。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 根据中的参数的索引替换占位符<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       你可以在<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>中包含参数 如果参数的类型是字符串或字符类型，将参数括在单引号中。 如果参数是数值类型，则不需要引号引起来。<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合包含的计算在<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>中找到的占位符的参数</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       属性是 FilterExpression 的值存储在视图状态。      1> [!IMPORTANT]&1;> 建议你验证从客户端接收任何筛选器参数值。 运行时只需将参数值替换到筛选器表达式，并将其应用于<xref:System.Data.DataView>返回的对象<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> 如果你使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性作为一种安全措施来限制返回，你必须筛选发生之前验证参数值的项的数目。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示使用业务对象方法通过标识检索数据时应用的筛选表达式<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "FilterExpression 属性已设置和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>方法不返回<xref href=&quot;System.Data.DataSet&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "筛选器操作前发生。"
  remarks: "处理<xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>事件来验证对值执行操作筛选器参数之前<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行筛选器操作。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> 你可以取消<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>通过设置的操作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 引发事件时，仅当<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性设置。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。      1> [!IMPORTANT]&1;> 应验证从客户端接收的任何筛选器参数值。 运行时只需将参数值替换到筛选器表达式，并将其应用于<xref:System.Data.DataView>返回的对象<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> 如果你使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性作为一种安全措施来限制返回，你必须筛选发生之前验证参数值的项的数目。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取与中的任何参数占位符相关联的参数的集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>字符串。</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>控件支持筛选数据时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataSet>， <xref:System.Data.DataTable>，或<xref:System.Data.DataView>对象。</xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       FilterParameters 集合中的参数是中指定所有参数相关联<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 中指定的参数占位符<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性 FilterParameters 集合中的参数对象时指定的方法匹配<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性称为。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含与在中找到任何参数占位符关联的参数集<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<> </> *1> 属性已设置和<> *1> 方法不返回<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "通过调用由标识的业务对象方法中执行插入操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>使用指定的属性<code> values </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "默认返回值为-1，这意味着，插入的行数未知。 若要返回不同的值，设置<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件。</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 受影响的行数通常由`Insert`业务对象，而该值的方法是从可用<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件。</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Insert 方法调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法，并传递`values`集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>与使用的参数集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>属性来执行插入操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> 如果没有与该方法关联的参数，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "插入; 的行数否则为-1，如果不知道数量。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>属性返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>操作已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "处理插入事件检查返回值的值和输出参数，或者想要确定后是否引发了异常<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 返回值、 输出参数和异常处理属性就可以在<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>与事件相关联的对象。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "之前发生<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "处理插入事件，以执行特定于应用程序，以验证参数的值的附加初始化操作或要更改参数值之前<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 参数都可用作<xref:System.Collections.IDictionary>集合所访问的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象。</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings, and then added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的方法或函数名称<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象调用以插入数据。"
  remarks: "由 InsertMethod 属性标识的方法可以是实例方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果它是实例方法，业务对象是创建和销毁每次调用 InsertMethod 属性指定的方法。 你可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件调用 InsertMethod 属性指定的方法之前，要使用业务对象。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 你还可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>之后调用 InsertMethod 属性指定该方法，将引发的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose`业务对象实现的情况下，才会调用<xref:System.IDisposable>接口。)</xref:System.IDisposable>如果该方法是`static`(`Shared`在 Visual Basic 中) 永远不会创建方法，业务对象，无法处理这些事件。       如果业务对象<xref:System.Web.UI.WebControls.ObjectDataSource>对象实现多个方法或函数具有相同名称 （方法重载），尝试调用正确根据一组条件，包括中的参数的数据源控件<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合不匹配的指定 InsertMethod 属性签名的方法，则数据源将引发异常。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>       属性是 InsertMethod 的值存储在视图状态。       有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the previous code example uses. The code example consists of two basic classes and an additional class:  \n  \n-   The `EmployeeLogic` class is a stateless class, which encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class, which contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n-   An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示方法的名称或函数的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>用于插入数据。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取包含所使用的参数的参数集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "名称和 InsertParameters 集合中包含的参数类型必须匹配的名称和指定的方法中的参数类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性签名。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 使用提供参数，如数据绑定控件时<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控件自动合并在具有这些参数提供的数据绑定控件的集合中显式指定任何参数。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n If you click the **Insert** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property that is set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an `int`, not as `string`.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the InsertParameters collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> to complete successfully.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含使用的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象是否保存对其视图状态的更改。"
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据源视图被标记为保存其状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "还原以前保存的数据源视图的视图状态。"
  remarks: "此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。  但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。       LoadViewState 方法还原视图状态信息<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象从已保存的上一个页面请求<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "一个对象，表示<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>要还原状态。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于指示要检索的数据源分页支持的记录数的数据检索方法参数的名称。"
  remarks: "MaximumRowsParameterName 属性用于支持数据源分页。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>       属性是 MaximumRowsParameterName 的值存储在视图状态。"
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "用于指示要检索的记录数的方法参数的名称。 默认值是`&quot;maximumRows&quot;`。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "之后，将会<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象创建由标识类型的实例<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "处理 ObjectCreated 事件以对业务对象，设置的属性，调用其他方法或执行其他特定于之前的业务对象的初始化<xref:System.Web.UI.WebControls.ObjectDataSource>控制调用`Data`业务对象的方法。</xref:System.Web.UI.WebControls.ObjectDataSource> 对对象的引用可通过<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象。</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       如果标识以执行数据操作的方法是`static`(`Shared`在 Visual Basic 中)，则<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>并永远不会引发 ObjectCreated 事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "之前发生<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象创建由标识类型的实例<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>控件将自动调用要创建的业务对象，它使用反射的实例的默认构造函数。</xref:System.Web.UI.WebControls.ObjectDataSource> 处理 ObjectCreating 事件以显式调用另一个构造函数并将结果传递给对象的实例设置<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性关联的<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象。</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       如果标识以执行数据操作的方法是`static`(`Shared`在 Visual Basic 中)，ObjectCreating 和<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>永远不会引发事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象丢弃它已创建对象的实例。"
  remarks: "丢弃的业务对象的实例之前，将引发 ObjectDisposing 事件。 如果业务对象实现<xref:System.IDisposable>接口，<xref:System.IDisposable.Dispose%2A>后引发 ObjectDisposing 事件调用方法。</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>       处理 ObjectDisposing 事件的对象上调用其他方法和设置属性或执行清理该对象被销毁之前即特定于该对象。 对对象的引用可通过<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象。</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       如果标识以执行数据操作的方法是`static`(`Shared`在 Visual Basic 中)，永远不会引发 ObjectDisposing 事件。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要应用于的参数传递给的原始值的名称格式字符串<xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;></xref>或<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>方法。"
  remarks: "OldValuesParameterFormatString 格式字符串应用于仅，主键如那些使用标识`DataKeyNames`属性的数据绑定控件或在删除和更新方案，其中<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置为<xref:System.Web.UI.ConflictOptions>值以及传递给相应的数据方法的原始值的集。</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       你可能在其中更改 OldValuesParameterFormatString 属性的两个常见方案如下所示:-若要区分中更新的旧和新值。 当<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置为<xref:System.Web.UI.ConflictOptions>值，参数的原始列值和新值添加到<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 没有格式设置字符串，将为每个数据字段创建具有相同名称的两个参数。 通过更改原始值参数的名称，你可以比较到原始的数据源，以检测冲突并比较键值的数据。      -某些可视化设计器实现原始值和键的特定命名的方案。       视图状态中存储的 OldValuesParameterFormatString 值。"
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示一个格式字符串应用于的任何名称<code> oldValues </code>传递给<> *1> 或<> *1> 方法。 默认值为&quot;{0}&quot;，这意味着参数名称是只需的字段名称。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleted&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象已完成删除操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnDeleted 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/bc34632f-3713-4841-acd5-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/bc34632f-3713-4841-acd5-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleting&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象尝试执行删除操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnDeleting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/6b2992c6-c81b-455e-8607-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/6b2992c6-c81b-455e-8607-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Filtering&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象尝试执行筛选操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnFiltering 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserted&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象已完成插入操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnInserted 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserting&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象尝试执行插入操作。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>调用方法时，仅在标识以执行数据操作的方法未`static`(`Shared`在 Visual Basic 中)。</xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnInserting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>创建由标识对象的实例<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "调用 OnObjectCreated 方法时，仅在标识以执行数据操作的方法未`static`(`Shared`在 Visual Basic 中)。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>       OnObjectCreated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象创建的业务对象执行数据操作实例。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnObjectCreating 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  id: OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象丢弃实例化的类型。"
  remarks: "用于执行数据操作而创建的对象的实例将被丢弃时，将调用 OnObjectDisposing。 `Dispose`调用方法时，才由标识的类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>属性实现<xref:System.IDisposable>接口。</xref:System.IDisposable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnObjectDisposing 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selected&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象已完成数据检索操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnSelected 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selecting&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象尝试执行数据检索操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnSelecting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updated&quot;></xref>事件之后<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象已完成更新操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnUpdated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updating&quot;></xref>之前的事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象尝试更新操作。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnUpdating 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/5e0e1dac-16d8-4af3-b004-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/5e0e1dac-16d8-4af3-b004-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，指示哪些区域性信息由时将字符串值转换为实际的属性类型以构造类型的对象指示<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "区域性信息。 默认值是<xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将所做的更改保存到的视图状态<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>自时页回发到服务器的时间的对象。"
  remarks: "SaveViewState 方法主要由控件开发人员使用。       视图状态是服务器控件的属性的值的累计。 这些值会自动放在<xref:System.Web.UI.Control.ViewState%2A>服务器控件，它是<xref:System.Web.UI.StateBag>类</xref:System.Web.UI.StateBag>的实例的属性</xref:System.Web.UI.Control.ViewState%2A> <xref:System.Web.UI.Control.ViewState%2A>值随后会保存到一个字符串对象的服务器控件生命周期的保存状态阶段后。</xref:System.Web.UI.Control.ViewState%2A>       视图状态保存时，查看状态内容返回到客户端作为变量存储在 HTML`Hidden`元素。 在创作自定义服务器控件时，你可以通过重写 SaveViewState 方法并修改提高效率`ViewState`服务器控件的属性。 有关详细信息，请参阅[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "包含的更改的对象<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>视图状态; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果没有与对象关联的视图状态。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "检索由标识此对象中的数据<> *1> 通过调用方法的属性由<> *1> 属性并传递中的任何值<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "选择方法调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>传递`arguments`参数。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>用于对数据执行基本的数据检索的请求操作。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>的数据行的列表。</xref:System.Collections.IEnumerable> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code> arguments </code>传递到选择方法指定数据源应执行一些其他工作的同时检索数据，以使分页或排序检索的数据，但数据源控件不支持请求的功能。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的方法或函数名称<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>控件调用以检索行计数。"
  remarks: "SelectCountMethod 标识用于检索总行数，以支持数据源分页的业务对象方法。 仅当计算 SelectCountMethod 属性<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>属性设置为`true`。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 有关详细信息<xref:System.Web.UI.WebControls.ObjectDataSourceView>，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>支持分页       属性是 SelectCountMethod 的值存储在视图状态。"
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示方法的名称或函数的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>使用来检索行计数。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "当数据检索操作已完成时发生。"
  remarks: "处理所选事件，检查返回值的值和输出参数，或者想要确定数据检索操作完成后是否引发了异常。 返回值、 输出参数和异常处理属性就可以在<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>与事件相关联的对象。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "数据检索操作前发生。"
  remarks: "处理选择事件，以执行特定于应用程序，以验证参数的值的附加初始化操作或要更改参数值之前<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行数据检索操作。</xref:System.Web.UI.WebControls.ObjectDataSource> 参数都可用作<xref:System.Collections.IDictionary>集合所访问的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象。</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的方法或函数名称<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>控件调用以检索数据。"
  remarks: "指定的方法可以有任意方法签名，但必须返回一个为了<xref:System.Web.UI.WebControls.ObjectDataSource>控件下表中列出的类型，若要成功调用 |返回类型 |操作 |  |-----------------|------------|  |<xref:System.Collections.IEnumerable>|由<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Collections.IEnumerable>。 |  |<xref:System.Data.DataTable>|创建使用<xref:System.Data.DataTable>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataView>。 |  |<xref:System.Data.DataSet>|提取<xref:System.Data.DataSet>的第一个<xref:System.Data.DataTable>并创建<xref:System.Data.DataView>并将其<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回。 |  |<xref:System.Object>|包装在一个元素<xref:System.Collections.IEnumerable>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回的对象。 |      由 SelectMethod 属性标识的方法可以是实例方法或`static`(`Shared`在 Visual Basic 中) 方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView>  </xref:System.Data.DataTable></xref:System.Data.DataSet> </xref:System.Data.DataSet>   </xref:System.Data.DataView></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Data.DataTable> </xref:System.Data.DataTable>  </xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果它是实例方法，业务对象是创建和销毁每次调用 SelectMethod 方法。 你可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件调用 SelectMethod 属性指定的方法之前，要使用业务对象。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 你还可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>之后调用 SelectMethod 属性指定该方法，将引发的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose`业务对象实现的情况下，才会调用<xref:System.IDisposable>接口。)</xref:System.IDisposable>如果该方法是`static`(`Shared`在 Visual Basic 中) 永远不会创建方法，业务对象，无法处理这些事件。       如果业务对象<xref:System.Web.UI.WebControls.ObjectDataSource>控件的工作方式与实现多个方法或函数具有相同名称 （方法重载），尝试调用正确根据一组条件，包括中的参数的数据源控件<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合与 SelectMethod 属性指定方法的签名不匹配，则数据源将引发异常。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>       有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the SelectMethod, and then displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_584_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_584_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示方法的名称或函数的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>用于检索数据。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取包含所使用的参数的参数集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "名称和 SelectParameters 集合中包含的参数类型必须匹配的名称和指定的方法中的参数类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性签名。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 使用提供参数，如数据绑定控件时<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控件自动合并在具有这些参数提供的数据绑定控件的集合中显式指定任何参数。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control, and then display the data record in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a <xref:System.Web.UI.WebControls.QueryStringParameter> object in its SelectParameters collection to pass an ID to the `GetEmployee` method.  \n  \n To view the example implementation of the `EmployeeLogic` class and the `GetEmployee` method, see <xref:System.Web.UI.WebControls.ObjectDataSource>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_297_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>包含由指定的方法的参数<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>属性。</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于指定排序支持的数据源的排序表达式的数据检索方法参数的名称。"
  remarks: "SortParameterName 属性用于支持数据源进行排序。 当<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>上设置属性<xref:System.Web.UI.DataSourceSelectArguments>对象并传递给<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，SortParameterName 属性标识指定的方法的参数名称<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>接受排序表达式值的业务对象属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       属性是 SortParameterName 的值存储在视图状态。"
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "用于指示接受此排序表达式值的参数的方法参数的名称。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于指示要检索的结果集进行数据源分页支持从第一个记录的整数索引的数据检索方法参数的名称。"
  remarks: "StartRowIndexParameterName 属性必须设置来启用分页。 有关如何信息<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>支持分页       属性是 StartRowIndexParameterName 的值存储在视图状态。"
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "用于指示要检索的第一个记录的业务对象方法参数的名称。 默认值为&quot;值&quot;。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅<xref:System.Web.UI.IStateManager.IsTrackingViewState*>。</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>实例被强制转换为<xref:System.Web.UI.IStateManager>接口。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果数据源视图被标记为保存其状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.IStateManager.LoadViewState%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>实例被强制转换为<xref:System.Web.UI.IStateManager>接口。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "一个对象，表示<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>要还原状态。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.IStateManager.SaveViewState%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>实例被强制转换为<xref:System.Web.UI.IStateManager>接口。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "包含的更改的对象<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>视图状态; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.IStateManager.TrackViewState%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>实例被强制转换为<xref:System.Web.UI.IStateManager>接口。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "导致<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象来跟踪其视图状态的更改，以便这些更改可以存储在<xref:System.Web.UI.Control.ViewState*>控制和不同请求间保留在相同页的对象。</xref:System.Web.UI.Control.ViewState*>"
  remarks: "TrackViewState 方法主要由控件开发人员使用。"
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的类名称<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控件表示。"
  remarks: "到创建的对象实例<xref:System.Web.UI.WebControls.ObjectDataSource>控件绑定到，该控件使用反射来加载由类型名称标识在运行时类型。</xref:System.Web.UI.WebControls.ObjectDataSource> 因此，此 TypeName 属性的值可以是位于 Bin 或 App_Code 目录中的代码的部分限定的类型或在全局程序集缓存中注册的代码的完全限定的类型名称。 如果你使用的全局程序集缓存，你必须添加对相应的引用`assemblies`Machine.config 或 Web.config 配置文件节。"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "标识的对象类型的部分或完全限定的类名， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>表示。 默认值为一个空字符串。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "通过调用由标识的方法执行更新操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>属性并使用在提供的任何参数<code> keys </code>， <code> values </code>，或<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "默认返回值为-1，这意味着已更新的行数未知。 若要返回不同的值，设置<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件。</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 受影响的行数通常由`Update`业务对象，而该值的方法是从可用<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>参数<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件。</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       更新方法调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法，并传递`keys`， `values`，和`oldValues`参数。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>的用于标识要更新的项的键值。</xref:System.Collections.IDictionary> 这些参数用于指定的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>属性来执行更新操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> 如果没有与该方法关联的参数，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>要应用于数据源的新值。</xref:System.Collections.IDictionary> 这些参数用于指定的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>属性以执行更新数据库操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> 如果没有与该方法关联的参数，将传递<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>，其中包含用于匹配数据源中的项的其他非键值。</xref:System.Collections.IDictionary> 行值都会传递给 delete 方法中，仅当<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>属性设置为<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>字段。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "更新; 的行数否则为-1，如果不知道数量。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>操作已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "处理更新事件检查返回值的值和输出参数，或者想要确定后是否引发了异常<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 返回值、 输出参数和异常处理属性就可以在<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>与事件相关联的对象。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的方法或函数名称<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>对象调用以更新数据。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象假定由 UpdateMethod 属性标识的方法执行更新一个，一次，而不是批处理中。</xref:System.Web.UI.WebControls.ObjectDataSourceView>       此方法可以是实例方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果它是实例方法，业务对象是创建和销毁每次调用 UpdateMethod 属性指定的方法。 你可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件调用 UpdateMethod 属性指定的方法之前，要使用业务对象。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 你还可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>调用 UpdateMethod 方法之后，将引发的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose`业务对象实现的情况下，才会调用<xref:System.IDisposable>接口。)</xref:System.IDisposable>如果该方法是`static`(`Shared`在 Visual Basic 中) 永远不会创建方法，业务对象，无法处理这些事件。       如果业务对象<xref:System.Web.UI.WebControls.ObjectDataSource>对象可与实现多个方法或函数具有相同名称 （方法重载），尝试调用正确根据一组条件，包括中的参数的数据源控件<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合与 UpdateMethod 属性指定方法的签名不匹配，则数据源将引发异常。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>       有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>       属性是 UpdateMethod 的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_413_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_413_1.aspx)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示方法的名称或函数的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>用来更新数据。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取包含所使用的参数的参数集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "名称和 UpdateParameters 集合中包含的参数类型必须匹配的名称和指定的方法中的参数类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性签名。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 参数名称受到<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性，并且区分大小写。</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 使用提供参数，如数据绑定控件时<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控件自动合并在具有这些参数提供的数据绑定控件的集合中显式指定任何参数。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含使用的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "之前发生<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "处理更新事件，以执行特定于应用程序，以验证参数的值的附加初始化操作或要更改参数值之前<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 参数都可用作<xref:System.Collections.IDictionary>集合，访问<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象。</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_93_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.ObjectDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventArgs
  nameWithType: ObjectDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventArgs
  nameWithType: ObjectDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView.ObjectDataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSourceView.Delete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: ObjectDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: ObjectDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: ObjectDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: ObjectDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSourceView.Insert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: ObjectDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: ObjectDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: ObjectDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: ObjectDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: ObjectDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated
  nameWithType: ObjectDataSourceView.OnObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating
  nameWithType: ObjectDataSourceView.OnObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing
  nameWithType: ObjectDataSourceView.OnObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: ObjectDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: ObjectDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: ObjectDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: ObjectDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select
  nameWithType: ObjectDataSourceView.Select
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update
  nameWithType: ObjectDataSourceView.Update
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
