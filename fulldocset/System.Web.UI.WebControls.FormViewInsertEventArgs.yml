### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs
  id: FormViewInsertEventArgs
  children:
  - System.Web.UI.WebControls.FormViewInsertEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument
  - System.Web.UI.WebControls.FormViewInsertEventArgs.Values
  langs:
  - csharp
  name: FormViewInsertEventArgs
  nameWithType: FormViewInsertEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs
  type: Class
  summary: "提供有关数据<xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserting&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件都将引发<xref:System.Web.UI.WebControls.FormView.ItemInserting>事件时的插入按钮 (带有按钮其`CommandName`属性设置为&quot;Insert&quot;) 在控件内单击时，之前<xref:System.Web.UI.WebControls.FormView>控件插入记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供执行自定义的例程，如 HTML 编码，或将其插入数据源中，每次此事件发生时之前验证其值的记录的事件处理方法。       FormViewInsertEventArgs 对象传递给事件处理方法，可用于确定发送到的可选命令参数的值<xref:System.Web.UI.WebControls.FormView>控件，还可以指示应取消插入操作。</xref:System.Web.UI.WebControls.FormView> 若要确定命令自变量的值，请使用<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> 若要取消插入操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您还可以读取或修改新的记录的字段值使用<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       FormViewInsertEventArgs 类的实例的初始属性值的列表，请参阅<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.%23ctor%2A>构造函数。</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.%23ctor%2A>"
  example:
  - "The following example demonstrates how to use the FormViewInsertEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemInserting> event to cancel an insert operation when the user leaves a field empty.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewInsertEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_44_1.aspx)]\n [!code-cs[FormViewInsertEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_44_1.aspx)]"
  syntax:
    content: 'public class FormViewInsertEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  langs:
  - csharp
  name: FormViewInsertEventArgs(Object)
  nameWithType: FormViewInsertEventArgs.FormViewInsertEventArgs(Object)
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs.FormViewInsertEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.FormViewInsertEventArgs&quot;></xref>类。"
  remarks: "使用此构造函数初始化<xref:System.Web.UI.WebControls.FormViewInsertEventArgs>类</xref:System.Web.UI.WebControls.FormViewInsertEventArgs>的新实例       下表显示<xref:System.Web.UI.WebControls.FormViewInsertEventArgs>类</xref:System.Web.UI.WebControls.FormViewInsertEventArgs>实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>|值`commandArgument`参数。 |    &1;> [!NOTE]&1;> 在引发事件时，主要由控件开发人员使用此构造函数。</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>"
  syntax:
    content: public FormViewInsertEventArgs (object commandArgument);
    parameters:
    - id: commandArgument
      type: System.Object
      description: "可选命令参数传递给<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormViewInsertEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  langs:
  - csharp
  name: CommandArgument
  nameWithType: FormViewInsertEventArgs.CommandArgument
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取命令参数的插入操作传递到<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "当你创建中的模板之一的插入按钮<xref:System.Web.UI.WebControls.FormView>控件，你可以选择指定按钮的命令参数，通过使用<xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A>属性。</xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A> </xref:System.Web.UI.WebControls.FormView> 命令参数通常包含你想要伴随插入命令，此类的键字段值的任何额外信息。 插入按钮的命令参数的值确定一种简便方式被提供 CommandArgument 属性。"
  syntax:
    content: public object CommandArgument { get; }
    return:
      type: System.Object
      description: "插入操作的命令参数传递给<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: FormViewInsertEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个字典，其中包含要插入记录的字段名称/值对。"
  remarks: "值属性用于访问要插入的记录的字段的值。 例如，您可以 HTML 进行编码或将其插入数据源中之前验证所记录的值。       值属性返回<xref:System.Collections.Specialized.OrderedDictionary>实现对象<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>接口。</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>对象包含<xref:System.Collections.DictionaryEntry?displayProperty=fullName>表示记录的字段的对象。</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> 若要访问的字段名称，使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>属性<xref:System.Collections.Specialized.OrderedDictionary>对象。</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 同样，通过使用访问的字段值<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>属性。</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      1> [!NOTE]&1;> 作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.OrderedDictionary>对象来访问该字段值直接。</xref:System.Collections.Specialized.OrderedDictionary> 使用索引器的优点是它直接返回字段值。 数据源的字段顺序所依赖的控件 (如<xref:System.Web.UI.WebControls.AccessDataSource>) 只能按索引访问字段值。</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to iterate through the Values collection.  \n  \n [!code-vb[FormViewInsertEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1305_1.aspx)]\n [!code-cs[FormViewInsertEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1305_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>包含插入的记录密钥字段名称/值对的字典。"
  overload: System.Web.UI.WebControls.FormViewInsertEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  isExternal: false
  name: FormViewInsertEventArgs(Object)
  nameWithType: FormViewInsertEventArgs.FormViewInsertEventArgs(Object)
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs.FormViewInsertEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: FormViewInsertEventArgs.CommandArgument
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.Values
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs.Values
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  isExternal: false
  name: FormViewInsertEventArgs
  nameWithType: FormViewInsertEventArgs.FormViewInsertEventArgs
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument*
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: FormViewInsertEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs.Values*
  parent: System.Web.UI.WebControls.FormViewInsertEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertEventArgs.Values
