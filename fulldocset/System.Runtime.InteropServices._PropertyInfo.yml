### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._PropertyInfo
  id: _PropertyInfo
  children:
  - System.Runtime.InteropServices._PropertyInfo.Attributes
  - System.Runtime.InteropServices._PropertyInfo.CanRead
  - System.Runtime.InteropServices._PropertyInfo.CanWrite
  - System.Runtime.InteropServices._PropertyInfo.DeclaringType
  - System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetHashCode
  - System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetType
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  - System.Runtime.InteropServices._PropertyInfo.MemberType
  - System.Runtime.InteropServices._PropertyInfo.Name
  - System.Runtime.InteropServices._PropertyInfo.PropertyType
  - System.Runtime.InteropServices._PropertyInfo.ReflectedType
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.ToString
  langs:
  - csharp
  name: _PropertyInfo
  nameWithType: _PropertyInfo
  fullName: System.Runtime.InteropServices._PropertyInfo
  type: Interface
  summary: "公开的公共成员&lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;到非托管代码的类。"
  remarks: "此接口是用于访问到托管类，从非托管代码，不应从托管代码调用。       此接口可保留的 vtable 顺序<xref:System.Reflection.PropertyInfo?displayProperty=fullName>类可以访问由非托管 COM 对象的成员。</xref:System.Reflection.PropertyInfo?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))]

      public interface _PropertyInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.Attributes*>属性。</xref:System.Reflection.PropertyInfo.Attributes*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.Attributes%2A>属性获取此属性的特性。</xref:System.Reflection.PropertyInfo.Attributes%2A>"
  syntax:
    content: public System.Reflection.PropertyAttributes Attributes { get; }
    return:
      type: System.Reflection.PropertyAttributes
      description: "此属性的特性。"
  overload: System.Runtime.InteropServices._PropertyInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  id: CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.CanRead*>属性。</xref:System.Reflection.PropertyInfo.CanRead*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.CanRead%2A>属性获取一个值，该值指示是否可以读取属性。</xref:System.Reflection.PropertyInfo.CanRead%2A>"
  syntax:
    content: public bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此属性可读;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._PropertyInfo.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  id: CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.CanWrite*>属性。</xref:System.Reflection.PropertyInfo.CanWrite*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.CanWrite%2A>属性获取一个值，该值指示属性是否可写。</xref:System.Reflection.PropertyInfo.CanWrite%2A>"
  syntax:
    content: public bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此属性可写受到保护。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.DeclaringType*>属性。</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.DeclaringType%2A>属性获取声明此成员的类。</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>声明此成员的类的对象。"
  overload: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Object.Equals*>方法。</xref:System.Object.Equals*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Object.Equals%2A>方法确定是否<xref:System.Object>等于当前<xref:System.Object>.</xref:System.Object></xref:System.Object>指定</xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>要与当前<xref:System.Object>.</xref:System.Object>进行比较</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref:System.Object>等同于当前<xref:System.Object>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._PropertyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  id: GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetAccessors*>方法。</xref:System.Reflection.PropertyInfo.GetAccessors*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法返回一个数组，其元素反射公共`get`， `set`，及其他访问器的当前实例反射的属性。</xref:System.Reflection.PropertyInfo.GetAccessors%2A>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "数组<xref:System.Reflection.MethodInfo>的公共对象<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>，和其他访问器的属性反射了由当前实例中，如果找到访问器; 否则，此方法返回包含零 (0) 个元素的数组。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetAccessors*>方法。</xref:System.Reflection.PropertyInfo.GetAccessors*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法返回一个数组，其元素反射公共并且，如果指定了非公共`get`， `set`，及其他访问器的当前实例反射的属性。</xref:System.Reflection.PropertyInfo.GetAccessors%2A>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括在返回非公共方法<xref uid=&quot;langword_csharp_MethodInfo&quot; name=&quot;MethodInfo&quot; href=&quot;&quot;></xref>数组; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.MethodInfo[]
      description: "数组<xref:System.Reflection.MethodInfo>对象，其元素反射<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>，及其他访问器的当前实例反射的属性。</xref:System.Reflection.MethodInfo> 如果<code> nonPublic </code>参数是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，此数组包含公共及非公共<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>，及其他访问器。 如果<code> nonPublic </code>是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，此数组仅包含公共<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>，及其他访问器。 如果不找到具有指定可见性的任何访问器，此方法将返回包含零 (0) 个元素的数组。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.GetCustomAttributes*>方法。</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法返回包含所有自定义特性的数组。</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "搜索此成员的继承链以查找属性; 则为 true否则为 false。"
    return:
      type: System.Object[]
      description: "一个数组，包含所有自定义特性，则包含零个元素如果无特性定义为数组。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.GetCustomAttributes*>方法。</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法返回包含由<xref:System.Type>.</xref:System.Type>标识的自定义特性的数组</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "要搜索的属性类型。 返回可分配给此类型的属性。"
    - id: inherit
      type: System.Boolean
      description: "搜索此成员的继承链以查找属性; 则为 true否则为 false。"
    return:
      type: System.Object[]
      description: "包含应用于此成员的自定义特性的数组或包含零 (0) 的元素，如果在不应用任何属性的数组。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  id: GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetGetMethod*>方法。</xref:System.Reflection.PropertyInfo.GetGetMethod*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>方法返回公共`get`此属性访问器。</xref:System.Reflection.PropertyInfo.GetGetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>表示公共对象<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>此属性访问器或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>访问器是非公共的或不存在。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetGetMethod*>方法。</xref:System.Reflection.PropertyInfo.GetGetMethod*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>方法返回的公共或非公共`get`此属性访问器。</xref:System.Reflection.PropertyInfo.GetGetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回非公共<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>访问器; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>对象，表示<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>此属性访问器如果<code> nonPublic </code>参数是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo> Or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and the <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessor is non-public, or if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but no <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessors exist."
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Object.GetHashCode*>方法。</xref:System.Object.GetHashCode*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Object.GetHashCode%2A>方法用作特定类型的哈希函数。</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>是适合在哈希算法和数据结构，如哈希表中使用。</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前实例的哈希代码。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "将一组名称映射到对应的一组调度标识符。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。 有关详细信息`IDispatch::GetIDsOfNames`，请参阅 MSDN 库。"
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "保留供将来使用。 必须为 IID_NULL。"
    - id: rgszNames
      type: System.IntPtr
      description: "要映射的名称数组。"
    - id: cNames
      type: System.UInt32
      description: "要映射的名称的计数。"
    - id: lcid
      type: System.UInt32
      description: "在其中解释名称的区域设置上下文。"
    - id: rgDispId
      type: System.IntPtr
      description: "由调用方分配的数组，它接收与名称对应的标识符。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  id: GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetIndexParameters*>方法。</xref:System.Reflection.PropertyInfo.GetIndexParameters*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法返回的属性的所有索引参数的数组</xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetIndexParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "类型的数组<xref:System.Reflection.ParameterInfo>它包含索引的参数。</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  id: GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetSetMethod*>方法。</xref:System.Reflection.PropertyInfo.GetSetMethod*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法返回公共`set`此属性访问器。</xref:System.Reflection.PropertyInfo.GetSetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>对象，表示<xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;></xref>此属性的方法如果<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>访问器是公共的或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>访问器是非公共。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetSetMethod*>方法。</xref:System.Reflection.PropertyInfo.GetSetMethod*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法返回`set`此属性访问器。</xref:System.Reflection.PropertyInfo.GetSetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回非公共访问器;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.MethodInfo
      description: "下表中的值之一。       <table><thead><tr><th> 值       </th><th> 含义       </th></tr></thead><tbody><tr><td> A<xref:System.Reflection.MethodInfo>对象，表示<xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;></xref>此属性的方法。</xref:System.Reflection.MethodInfo>       </td><td> <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>访问器是公共的。       -或- <code> nonPublic </code>参数是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>取值函数，则非公共。       </td></tr><tr><td><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref></td><td> <code> nonPublic </code>参数是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，但该属性是只读的。       -或- <code> nonPublic </code>参数是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>取值函数，则非公共。       -或-没有任何<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>访问器。       </td></tr></tbody></table>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Object.GetType*>方法。</xref:System.Object.GetType*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Object.GetType%2A>方法获取当前实例的类型。</xref:System.Object.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A<xref:System.Type>对象。</xref:System.Type>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "检索一个对象，它可以用于获取接口的类型信息的类型信息。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。 有关详细信息`IDispatch::GetTypeInfo`，请参阅 MSDN 库。"
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "要返回的类型信息。"
    - id: lcid
      type: System.UInt32
      description: "类型信息的区域设置标识符。"
    - id: ppTInfo
      type: System.IntPtr
      description: "指向请求的类型信息对象的指针。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "检索对象提供 （0 或 1） 的类型信息接口的数量。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。 有关详细信息`IDispatch::GetTypeInfoCount`，请参阅 MSDN 库。"
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "此方法返回时，包含指向接收对象提供的类型信息接口的数量的位置的指针。 此参数传递时未经初始化。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetValue*>方法。</xref:System.Reflection.PropertyInfo.GetValue*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetValue%2A>方法返回由编译器与属性关联的文本值。</xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "将返回其属性值的对象。"
    - id: index
      type: System.Object[]
      description: "索引化属性的可选索引值。 此值应为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>对于非索引化属性。"
    return:
      type: System.Object
      description: "属性值<code> obj </code>参数。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.GetValue*>方法。</xref:System.Reflection.PropertyInfo.GetValue*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.GetValue%2A>方法返回具有指定的绑定、 索引和<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>属性的值</xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "将返回其属性值的对象。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: '调用属性。 This must be a bit flag from <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. 必须指定合适的调用属性。 如果将通过调用静态成员<xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>标志的<xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>必须设置。'
    - id: binder
      type: System.Reflection.Binder
      description: "启用绑定、 强制自变量的对象类型、 成员的调用，以及检索<xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;></xref>通过反射的对象。 如果`binder`是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，则使用默认联编程序。"
    - id: index
      type: System.Object[]
      description: "索引化属性的可选索引值。 此值应为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>对于非索引化属性。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref>表示将为其本地化资源的区域性的对象。 请注意，如果没有为此区域性本地化该资源，则<xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;></xref>搜索匹配项，将依次调用方法。 如果此值为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref>从获取<xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;></xref>属性。"
    return:
      type: System.Object
      description: "属性值<code> obj </code>参数。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "提供对由对象公开属性和方法访问。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。 有关详细信息`IDispatch::Invoke`，请参阅 MSDN 库。"
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "成员标识符。"
    - id: riid
      type: System.Guid
      description: "保留供将来使用。 必须为 IID_NULL。"
    - id: lcid
      type: System.UInt32
      description: "在其中解释自变量的区域设置上下文。"
    - id: wFlags
      type: System.Int16
      description: "描述调用的上下文的标志。"
    - id: pDispParams
      type: System.IntPtr
      description: "指向一个包含参数的数组，数组的命名自变量和数组中元素数的计数 dispid 的结构的指针。"
    - id: pVarResult
      type: System.IntPtr
      description: "指向将存储结果的位置的指针。"
    - id: pExcepInfo
      type: System.IntPtr
      description: "指向包含异常信息的结构的指针。"
    - id: puArgErr
      type: System.IntPtr
      description: "出错的第一个参数的索引。"
  overload: System.Runtime.InteropServices._PropertyInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.IsDefined*>方法。</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.IsDefined%2A>方法指示一个或多个实例`attributeType`参数应用于此成员。</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref:System.Type>对象将应用自定义属性。</xref:System.Type>"
    - id: inherit
      type: System.Boolean
      description: "搜索此成员的继承链以查找属性; 则为 true否则为 false。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果一个或多个实例<code> attributeType </code>参数是应用于此成员; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.IsSpecialName*>属性。</xref:System.Reflection.PropertyInfo.IsSpecialName*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.IsSpecialName%2A>属性设置一个值，该值指示属性是否特殊名称。</xref:System.Reflection.PropertyInfo.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此属性是特殊名称;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.MemberType*>属性。</xref:System.Reflection.PropertyInfo.MemberType*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.MemberType%2A>属性可以获取<xref:System.Reflection.MemberTypes>值，该值指示此成员属性。</xref:System.Reflection.MemberTypes> </xref:System.Reflection.PropertyInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "之一<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> ，该值指示此成员属性的值。"
  overload: System.Runtime.InteropServices._PropertyInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.Name*>属性。</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.Name%2A>属性获取当前成员的名称。</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A<xref:System.String>对象，其中包含此成员的名称。</xref:System.String>"
  overload: System.Runtime.InteropServices._PropertyInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  id: PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.PropertyType*>属性。</xref:System.Reflection.PropertyInfo.PropertyType*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.PropertyType%2A>属性获取此属性的类型。</xref:System.Reflection.PropertyInfo.PropertyType%2A>"
  syntax:
    content: public Type PropertyType { get; }
    return:
      type: System.Type
      description: "此属性的类型。"
  overload: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.ReflectedType*>属性。</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.ReflectedType%2A>属性获取用于获取此类对象<xref:System.Reflection.MemberInfo>对象。</xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>对象，通过此<xref:System.Reflection.MemberInfo>获取对象。</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.PropertyInfo.SetValue*>方法。</xref:System.Reflection.PropertyInfo.SetValue*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.PropertyInfo.SetValue%2A>方法设置的属性的值用索引化属性的可选索引值。</xref:System.Reflection.PropertyInfo.SetValue%2A>"
  syntax:
    content: public void SetValue (object obj, object value, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "将设置其属性值的对象。"
    - id: value
      type: System.Object
      description: "此属性的新值。"
    - id: index
      type: System.Object[]
      description: "索引化属性的可选索引值。 此值应为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>对于非索引化属性。"
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.FieldInfo.SetValue*>方法。</xref:System.Reflection.FieldInfo.SetValue*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.FieldInfo.SetValue%2A>方法将给定对象的属性值设置为给定的值。</xref:System.Reflection.FieldInfo.SetValue%2A>"
  syntax:
    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "将返回其属性值的对象。"
    - id: value
      type: System.Object
      description: "此属性的新值。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: '调用属性。 This must be a bit flag from <xref href=&quot;System.Reflection.BindingFlags&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. 必须指定合适的调用属性。 如果将通过调用静态成员<xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>标志的<xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>必须设置。'
    - id: binder
      type: System.Reflection.Binder
      description: "启用绑定、 强制自变量的对象类型、 成员的调用，以及检索<xref:System.Reflection.MemberInfo>通过反射的对象。</xref:System.Reflection.MemberInfo> 如果`binder`是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，则使用默认联编程序。"
    - id: index
      type: System.Object[]
      description: "索引化属性的可选索引值。 此值应为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>对于非索引化属性。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>对象，表示将为其本地化资源的区域性。</xref:System.Globalization.CultureInfo> 请注意，如果没有为此区域性本地化该资源，则<xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;></xref>搜索匹配项，将依次调用方法。 如果此值为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref>从获取<xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;></xref>属性。"
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Object.ToString*>方法。</xref:System.Object.ToString*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个字符串，表示当前<xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._PropertyInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: true
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
- uid: System.Runtime.InteropServices._PropertyInfo.Equals*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals
  nameWithType: _PropertyInfo.Equals
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors
  nameWithType: _PropertyInfo.GetAccessors
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _PropertyInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod
  nameWithType: _PropertyInfo.GetGetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _PropertyInfo.GetHashCode
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _PropertyInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters
  nameWithType: _PropertyInfo.GetIndexParameters
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod
  nameWithType: _PropertyInfo.GetSetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType
  nameWithType: _PropertyInfo.GetType
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _PropertyInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _PropertyInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue
  nameWithType: _PropertyInfo.GetValue
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke
  nameWithType: _PropertyInfo.Invoke
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined
  nameWithType: _PropertyInfo.IsDefined
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
- uid: System.Runtime.InteropServices._PropertyInfo.Name*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue
  nameWithType: _PropertyInfo.SetValue
- uid: System.Runtime.InteropServices._PropertyInfo.ToString*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString
  nameWithType: _PropertyInfo.ToString
