### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  id: ObjectDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
  langs:
  - csharp
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Selected&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Inserted&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Updated&quot;></xref>, and <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Deleted&quot;></xref> events of the <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref> control."
  remarks: "中使用 ObjectDataSourceStatusEventArgs 类<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>方法以提供访问输出参数、 返回值和由调用的方法引发的异常<xref:System.Web.UI.WebControls.ObjectDataSource>控件。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 这些通过<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>属性，分别。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> 通过添加一个委托来处理<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>， <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>， <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>，或<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件，你可以检查此数据并执行是必需的任何其他的后续处理。</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected>       <xref:System.Web.UI.WebControls.ObjectDataSource>控件可公开可以处理在其生命周期的各个时间用于基础业务对象的多个事件。</xref:System.Web.UI.WebControls.ObjectDataSource> 下表列出了事件以及关联<xref:System.EventArgs>类和事件处理程序委托。</xref:System.EventArgs>      |事件 |EventArgs |EventHandler |  |-----------|---------------|------------------|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> 创建业务对象的实例之前立即发生。 |<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> 创建业务对象的实例后立即发生。 |<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> 检索的数据之前发生。 |<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> 执行更新或删除操作在插入、 之前发生。 |<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> 检索的数据后发生。 |ObjectDataSourceStatusEventArgs |<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler><br /><br /> 晚插入、 更新或删除操作已完成。 |ObjectDataSourceStatusEventArgs |<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler><br /><br /> 在业务对象被销毁前发生。 |<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The second code example provides an example middle-tier business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection. In this code example, one parameter is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection that corresponds to the employee ID. This is because although the ID is included in the <xref:System.Windows.Forms.DataGridView.Columns%2A> collection as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property set to the <xref:System.TypeCode> value, it will pass correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an integer, rather than as string.  \n  \n In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action has completed, to handle any exceptions that might have occurred. The `NorthwindEmployeeDeleted` delegate accesses possible exceptions that are thrown by the business object that is using the ObjectDataSourceStatusEventArgs object. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_115_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_115_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The following list describes the two major classes that are defined in the code example:  \n  \n-   The `EmployeeLogic` class is a class that does not maintain state and encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n In addition, a `NorthwindDataException` class is provided as a convenience.  \n  \n This set of example classes uses the Northwind Traders database, which is an example database that is available with Microsoft SQL Server and Microsoft Access. For a complete working example, you must compile this code as a library, and then use these classes from an ASP page. The ASP page that is provided in the preceding example is configured to work with this class library.  The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_115_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_115_2.cs)]"
  syntax:
    content: 'public class ObjectDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)
  id: '#ctor(System.Object,System.Collections.IDictionary)'
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: ObjectDataSourceStatusEventArgs(Object,IDictionary)
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;></xref>类使用指定的输出参数和返回值。"
  remarks: "`returnValue`参数可以是对业务对象数据方法的调用返回任何对象。 `outputParameters`参数是<xref:System.Collections.IDictionary>与方法签名中匹配和通过引用传递的名称/值对的集合。</xref:System.Collections.IDictionary>"
  syntax:
    content: public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);
    parameters:
    - id: returnValue
      type: System.Object
      description: "一个表示已完成的数据库操作的返回值的对象。"
    - id: outputParameters
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的参数对象的名称/值对。</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)
  id: '#ctor(System.Object,System.Collections.IDictionary,System.Exception)'
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;></xref>类使用指定的输出参数，则返回值和异常。"
  remarks: "`returnValue`参数可以是对业务对象数据方法的调用返回任何对象。 `outputParameters`参数是<xref:System.Collections.IDictionary>与方法签名中匹配和通过引用传递的名称/值对的集合。</xref:System.Collections.IDictionary> `exception`参数是<xref:System.Exception>包装由调用的方法引发任何异常的异常<xref:System.Web.UI.WebControls.ObjectDataSource>数据操作过程中的控件。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Exception> 如果未处理异常<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>，或<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>方法，通过将引发<xref:System.Web.UI.WebControls.ObjectDataSource>控制数据操作返回之后。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>"
  syntax:
    content: public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);
    parameters:
    - id: returnValue
      type: System.Object
      description: "一个表示已完成的数据库操作的返回值的对象。"
    - id: outputParameters
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的参数对象的名称/值对。</xref:System.Collections.IDictionary>"
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>包装方法调用过程中引发的任何内部异常。</xref:System.Exception>"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: ObjectDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的数据操作影响的行数。"
  remarks: "AffectedRows 值用于验证预期的行数受到影响。"
  syntax:
    content: public int AffectedRows { get; set; }
    return:
      type: System.Int32
      description: "数据操作所影响的行数。"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: ObjectDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取由调用的方法引发任何异常包装<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>数据操作过程中的控件。"
  remarks: "<xref:System.Exception>异常不表示实际业务对象数据方法引发的异常。</xref:System.Exception> 你可以使用<xref:System.Exception.InnerException%2A>属性来访问所引发的异常。</xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection.  \n  \n In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action has completed, to perform any exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindEmployeeDeleted` delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see the class overview in <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_143_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_143_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>包装的业务对象中其<xref:System.Exception.InnerException*>。</xref:System.Exception.InnerException*>所引发的任何异常</xref:System.Exception>"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: ObjectDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否已处理的业务对象引发的异常。"
  remarks: "如果业务对象引发了异常，ExceptionHandled 属性设置为`false`和异常由包装<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>属性。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 如果你使用<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>对象，你可以检查<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>属性并处理该异常。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> 如果处理异常，则将 ExceptionHandled 属性设置为`true`或<xref:System.Web.UI.WebControls.ObjectDataSource>控件将引发异常。</xref:System.Web.UI.WebControls.ObjectDataSource>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action has completed, to handle any exceptions that might have occurred. In this example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindEmployeeDeleted` delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see the class overview in <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1019_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1019_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果业务对象引发的异常已处理并且不应由引发<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
  id: OutputParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: OutputParameters
  nameWithType: ObjectDataSourceStatusEventArgs.OutputParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取包含业务对象方法参数及其值的集合。"
  remarks: "通过引用传递到业务对象方法的任何参数返回输出参数集合中。"
  syntax:
    content: public System.Collections.IDictionary OutputParameters { get; }
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示业务对象方法参数和其对应的值的名称/值对。</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
  id: ReturnValue
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: ReturnValue
  nameWithType: ObjectDataSourceStatusEventArgs.ReturnValue
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取业务对象方法，如果有，作为对象返回的返回值。"
  remarks: "在中设置 ReturnValue 属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>构造函数。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 值设置为业务对象方法调用的说明进行操作，它使用反射调用的返回值。 如果业务方法不返回值 (如业务对象方法返回时`void`)，ReturnValue 属性计算结果为`null`。"
  syntax:
    content: public object ReturnValue { get; }
    return:
      type: System.Object
      description: "一个对象，表示业务对象方法; 返回的返回值否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果业务对象方法不返回值。"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ObjectDataSourceStatusEventArgs(Object,IDictionary)
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ObjectDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: ObjectDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ObjectDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: OutputParameters
  nameWithType: ObjectDataSourceStatusEventArgs.OutputParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ReturnValue
  nameWithType: ObjectDataSourceStatusEventArgs.ReturnValue
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ObjectDataSourceStatusEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: ObjectDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ObjectDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: OutputParameters
  nameWithType: ObjectDataSourceStatusEventArgs.OutputParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ReturnValue
  nameWithType: ObjectDataSourceStatusEventArgs.ReturnValue
