### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.IFieldTemplateFactory
  id: IFieldTemplateFactory
  children:
  - System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  langs:
  - csharp
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
  type: Interface
  summary: "定义一个创建字段模板的对象来实现的接口。"
  remarks: "此类必须实现<xref:System.Web.DynamicData.FieldTemplateFactory>为了创建字段模板的类。</xref:System.Web.DynamicData.FieldTemplateFactory> 此接口可提供初始化的方法<xref:System.Web.DynamicData.FieldTemplateFactory>并创建字段模板。</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public interface IFieldTemplateFactory
  implements: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "创建的字段模板使用实例<xref href=&quot;System.Web.DynamicData.MetaColumn&quot;></xref>类， <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref>类和<xref:System.Web.DynamicData.MetaColumn.UIHint*>属性。</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  remarks: "ASP.NET 动态数据字段模板是映射到数据模型中的数据类型的数据控件的 ASP.NET 用户控件。 字段模板通常派生自<xref:System.Web.DynamicData.FieldTemplateUserControl>，使用户可以访问数据字段、 数据列和数据模型中的元数据的类。</xref:System.Web.DynamicData.FieldTemplateUserControl> 动态数据项目提供默认字段模板，但你可以对其进行修改或创建自定义字段模板。 当实现此方法创建基于数据列，数据列的模式的字段模板和<xref:System.Web.DynamicData.MetaColumn.UIHint%2A>属性。</xref:System.Web.DynamicData.MetaColumn.UIHint%2A> 你指定`uiHint`参数，如果你想要使用自定义的字段模板呈现数据。"
  syntax:
    content: public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "指定要用于显示的字段模板的数据列。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定的字段模板的显示模式。"
    - id: uiHint
      type: System.String
      description: "指定要使用的字段模板。"
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "实例<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>对象在类中实现时。"
  overload: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>使用指定的数据模型。"
  remarks: "ASP.NET 动态数据使用字段模板来显示各数据字段。 字段模板通常会为映射到数据控件中的各个字段的数据模型中的数据类型的用户控件实现。 此方法初始化<xref:System.Web.DynamicData.FieldTemplateFactory>将使用类，该类用于创建使用数据模型的字段模板的字段模板。</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "指定的字段模板使用的数据模型。"
  overload: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: IFieldTemplateFactory.Initialize
