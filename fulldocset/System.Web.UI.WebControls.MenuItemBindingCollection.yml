### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemBindingCollection
  id: MenuItemBindingCollection
  children:
  - System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  - System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: MenuItemBindingCollection
  nameWithType: MenuItemBindingCollection
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection
  type: Class
  summary: "表示一套<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>对象。"
  remarks: "MenuItemBindingCollection 类用于存储和管理集合的<xref:System.Web.UI.WebControls.MenuItemBinding>中的对象<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding> <xref:System.Web.UI.WebControls.Menu>控件使用 MenuItemBindingCollection 类的数据类型作为其<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>属性。</xref:System.Web.UI.WebControls.Menu.DataBindings%2A> </xref:System.Web.UI.WebControls.Menu> <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>属性用来存储为定义任何菜单项绑定<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.DataBindings%2A>      1> [!NOTE]&1;> 的顺序<xref:System.Web.UI.WebControls.MenuItemBinding>对象会显示在集合具有如何将这些对象应用于中的菜单项不会影响<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>       MenuItemBindingCollection 类支持多种方法可访问集合中的项:-使用<xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A>索引器以直接检索<xref:System.Web.UI.WebControls.MenuItemBinding>特定的从零开始索引处的对象。</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A>      -使用<xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>方法来创建可用于循环访问集合的枚举。</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>      -使用<xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>方法以将集合的内容复制到数组。</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>       你可以通过添加和删除以编程方式管理 MenuItemBindingCollection 对象<xref:System.Web.UI.WebControls.MenuItemBinding>对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 若要将菜单项添加到集合中，使用<xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A>或<xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A>方法。</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> 若要从集合中删除节点，使用<xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>、 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>，或<xref:System.Web.UI.StateManagedCollection.Clear%2A>方法。</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>       MenuItemBindingCollection 类包含属性和方法，可用于检索有关集合本身的信息。 若要找出多少项在集合中，使用<xref:System.Web.UI.StateManagedCollection.Count%2A>属性。</xref:System.Web.UI.StateManagedCollection.Count%2A> 如果你想要确定集合是否包含某一特定<xref:System.Web.UI.WebControls.MenuItemBinding>对象，请使用<xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A>方法。</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> 若要获取的索引<xref:System.Web.UI.WebControls.MenuItemBinding>对象在集合中，使用<xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A>方法。</xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to populate a MenuItemBindingCollection object declaratively. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuBindings#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_1.aspx)]\n [!code-cs[MenuBindings#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_1.aspx)]  \n  \n The following code example demonstrates how to add <xref:System.Web.UI.WebControls.MenuItemBinding> objects to a MenuItemBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_2.aspx)]\n [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_2.aspx)]  \n  \n The following is sample site map data for the previous examples.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: 'public sealed class MenuItemBindingCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  id: Add(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Add(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Add(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Add(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "追加指定<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>到集合末尾的对象。"
  remarks: "使用的 Add 方法追加指定<xref:System.Web.UI.WebControls.MenuItemBinding>到集合末尾的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;>，可以添加 null 值或重复<xref:System.Web.UI.WebControls.MenuItemBinding>到集合的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>       作为替代方法，你可以将插入<xref:System.Web.UI.WebControls.MenuItemBinding>中通过使用特定索引处的集合对象<xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A>方法。</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 的顺序<xref:System.Web.UI.WebControls.MenuItemBinding>对象会显示在集合具有如何将这些对象应用于中的菜单项不会影响<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Add method to append a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the end of the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/455e41fd-8e8e-40dd-99e4-_1.aspx)]\n [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/455e41fd-8e8e-40dd-99e4-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public int Add (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>要追加到集合的末尾。"
    return:
      type: System.Int32
      description: "开始的索引<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>插入到集合中。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  id: Contains(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Contains(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Contains(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定是否指定<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>对象位于集合中。"
  remarks: "使用 Contains 方法来确定是否<xref:System.Web.UI.WebControls.MenuItemBinding>集合中包含对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 此方法通常用于测试是否存在<xref:System.Web.UI.WebControls.MenuItemBinding>之前执行的任务，如添加或从集合中删除菜单项绑定的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>查找。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>包含在集合; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: CopyTo(MenuItemBinding[],Int32)
  nameWithType: MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将复制中的所有项<xref href=&quot;System.Web.UI.WebControls.MenuItemBindingCollection&quot;></xref>到兼容的一维数组的对象<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>对象，从目标数组中指定索引处开始。"
  remarks: "使用<xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>方法以将集合的内容复制到指定的从零开始的数组。</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> 目标数组的指定索引处开始复制项目。 与数组中，你可以然后使用数组语法访问中的项<xref:System.Web.UI.WebControls.MenuItemBindingCollection>对象。</xref:System.Web.UI.WebControls.MenuItemBindingCollection>       作为替代方法，你可以使用<xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>方法来创建用于访问集合中的项的枚举。</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.MenuItemBinding> objects from the collection to an array. The array is then iterated through to display the properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> objects. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/csharp/23779e9d-0868-4199-8f19-_1.aspx)]\n [!code-vb[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/23779e9d-0868-4199-8f19-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.MenuItemBinding[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.MenuItemBinding[]
      description: "一个从零开始的数组<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>接收复制的项集合中的对象。"
    - id: index
      type: System.Int32
      description: "若要开始接收复制的内容的目标数组中的位置。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: MenuItemBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要添加。"
    return:
      type: System.Object
      description: "要添加。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: MenuItemBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "要添加。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  id: IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: IndexOf(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.IndexOf(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定指定的索引<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>集合中的对象。"
  remarks: "IndexOf 方法用于确定指定的索引<xref:System.Web.UI.WebControls.MenuItemBinding>集合中的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 的顺序<xref:System.Web.UI.WebControls.MenuItemBinding>对象会显示在集合具有如何将这些对象应用于中的菜单项不会影响<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>       如果菜单项绑定不是集合中，该方法将返回-1。      1> [!NOTE]&1;> 如果指定的菜单项绑定在集合中出现多次，则返回第一个匹配项的索引。"
  example:
  - "The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/visualbasic/4ddc9e66-fb4e-4063-8f80-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/csharp/4ddc9e66-fb4e-4063-8f80-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.MenuItemBinding value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>来确定的索引。"
    return:
      type: System.Int32
      description: "第一个匹配项的从零开始索引<code> value </code>在集合中，如果找到; 否则为-1。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  id: Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Insert(Int32,MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将指定的<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>到集合中的指定的索引位置处的对象。"
  remarks: "使用 Insert 方法将指定<xref:System.Web.UI.WebControls.MenuItemBinding>集合中指定索引处的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;>，可以添加 null 值或重复<xref:System.Web.UI.WebControls.MenuItemBinding>到集合的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>       作为替代方法，只需可以附加<xref:System.Web.UI.WebControls.MenuItemBinding>对象与使用集合的末尾<xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A>方法。</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>      1> [!NOTE]&1;> 的顺序<xref:System.Web.UI.WebControls.MenuItemBinding>对象会显示在集合具有不起作用的方式这些对象应用到中的菜单项<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Insert method to add a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionInsert#1](~/add/codesnippet/visualbasic/4e0eb68e-1774-4135-bfc7-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionInsert#1](~/add/codesnippet/csharp/4e0eb68e-1774-4135-bfc7-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入的从零开始的索引位置<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>。"
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>插入。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MenuItemBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>从集合的指定索引处的对象。"
  remarks: "使用此索引器访问<xref:System.Web.UI.WebControls.MenuItemBinding>从集合中使用数组表示法的指定索引处的对象。</xref:System.Web.UI.WebControls.MenuItemBinding> 索引器可以访问、 修改或替换<xref:System.Web.UI.WebControls.MenuItemBinding>直接集合中的对象。</xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to retrieve a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection using the indexer. The properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> object are then updated programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_289_1.aspx)]\n [!code-vb[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_289_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemBinding this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "从零开始的索引<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>来检索。"
    return:
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>集合中的指定索引处。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: MenuItemBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "要添加。"
    - id: value
      type: System.Object
      description: "要添加。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: MenuItemBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  id: Remove(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Remove(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Remove(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中移除指定<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>从集合的对象。"
  remarks: "使用删除方法从集合中移除指定的菜单项绑定。 然后按照该菜单项的所有项都将上都移以填充空出的位置。 移动项的索引也将更新。      1> [!NOTE]&1;> 集合可以包含 null 值，以及重复<xref:System.Web.UI.WebControls.MenuItemBinding>对象。</xref:System.Web.UI.WebControls.MenuItemBinding>       作为替代方法，可移除菜单项集合中的特定索引使用<xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>方法。</xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> 你可以还所有菜单项从集合中都移除使用<xref:System.Web.UI.StateManagedCollection.Clear%2A>方法。</xref:System.Web.UI.StateManagedCollection.Clear%2A>      1> [!NOTE]&1;> 的顺序<xref:System.Web.UI.WebControls.MenuItemBinding>对象会显示在集合具有如何将这些对象应用于中的菜单项不会影响<xref:System.Web.UI.WebControls.Menu>控件。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionRemove#1](~/add/codesnippet/visualbasic/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionRemove#1](~/add/codesnippet/csharp/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>若要从集合中移除。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MenuItemBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "删除<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;></xref>对象从集合中指定的索引位置。"
  remarks: "RemoveAt 方法用于删除<xref:System.Web.UI.WebControls.MenuItemBinding>对象从集合中指定的索引位置。</xref:System.Web.UI.WebControls.MenuItemBinding> 然后按照该菜单项的所有项都将上都移以填充空出的位置。 移动项的索引也将更新。      1> [!NOTE]&1;> 集合可以包含 null 值，以及重复<xref:System.Web.UI.WebControls.MenuItemBinding>对象。</xref:System.Web.UI.WebControls.MenuItemBinding>       作为替代方法，你可以删除特定<xref:System.Web.UI.WebControls.MenuItemBinding>对象使用<xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>方法。</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> 你可以还所有菜单项从集合中都移除使用<xref:System.Web.UI.StateManagedCollection.Clear%2A>方法。</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_120_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要移除的菜单项绑定从零开始的索引位置。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: MenuItemBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要添加。"
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Add(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Add(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Add(MenuItemBinding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemBinding
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Contains(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Contains(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(MenuItemBinding)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CopyTo(MenuItemBinding[],Int32)
  nameWithType: MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
- uid: System.Web.UI.WebControls.MenuItemBinding[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.MenuItemBinding
    name: MenuItemBinding
    nameWithType: MenuItemBinding
    fullName: MenuItemBinding[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: MenuItemBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: MenuItemBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: IndexOf(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.IndexOf(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Insert(Int32,MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: MenuItemBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Item(Int32)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnClear()
  nameWithType: MenuItemBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear()
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: MenuItemBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Remove(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Remove(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MenuItemBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: MenuItemBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Add
  nameWithType: MenuItemBindingCollection.Add
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Contains
  nameWithType: MenuItemBindingCollection.Contains
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CopyTo
  nameWithType: MenuItemBindingCollection.CopyTo
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: MenuItemBindingCollection.CreateKnownType
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: MenuItemBindingCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: IndexOf
  nameWithType: MenuItemBindingCollection.IndexOf
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Insert
  nameWithType: MenuItemBindingCollection.Insert
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Item
  nameWithType: MenuItemBindingCollection.Item
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnClear
  nameWithType: MenuItemBindingCollection.OnClear
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: MenuItemBindingCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnValidate
  nameWithType: MenuItemBindingCollection.OnValidate
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Remove
  nameWithType: MenuItemBindingCollection.Remove
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: MenuItemBindingCollection.RemoveAt
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: MenuItemBindingCollection.SetDirtyObject
