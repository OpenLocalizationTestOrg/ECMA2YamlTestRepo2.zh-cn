### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsContext
  id: SettingsContext
  children:
  - System.Configuration.SettingsContext.#ctor
  langs:
  - csharp
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
  type: Class
  summary: "提供的提供程序可以使用保留设置时的上下文信息。"
  remarks: "SettingsContext 类是应用程序用于向设置提供程序提供的上下文信息的基类。 虽然此类不是抽象的可以选择应用程序创建一个专用的类继承自 SettingsContext 类并为特定类型的提供程序提供的其他信息。 在写入属性时，提供程序可以然后检查上下文的设置。       SettingsContext 类的主要用途是提供使用的功能<xref:System.Configuration.SettingsBase>类和相关的基础结构。</xref:System.Configuration.SettingsBase> SettingsContext 类提供有关通过存储的属性数据的其他特定于功能的上下文信息<xref:System.Configuration.SettingsBase>实例。</xref:System.Configuration.SettingsBase> 因此，它是非常简单，用于存储 SettingsContext 类中的其他信息，而不用派生从它 （或其他设置 * 类） 以支持其他功能特定的上下文信息。       例如，ASP.NET 使用 SettingsContext 类沿所管理的数据与关联的用户名将传递<xref:System.Configuration.SettingsBase>实例，以及属性，该值指示用户是否被视为身份验证。</xref:System.Configuration.SettingsBase> 这种方式，ASP.NET 使用 SettingsContext 类来标识身份验证用户或配置文件的匿名数据。"
  syntax:
    content: 'public class SettingsContext : System.Collections.Hashtable'
  inheritance:
  - System.Object
  - System.Collections.Hashtable
  implements: []
  inheritedMembers:
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.Clone
  - System.Collections.Hashtable.comparer
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Hashtable.hcp
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.OnDeserialization(System.Object)
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Hashtable.Values
  platform:
  - net462
- uid: System.Configuration.SettingsContext.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsContext
  langs:
  - csharp
  name: SettingsContext()
  nameWithType: SettingsContext.SettingsContext()
  fullName: System.Configuration.SettingsContext.SettingsContext()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.SettingsContext&quot;></xref>类。"
  syntax:
    content: public SettingsContext ();
    parameters: []
  overload: System.Configuration.SettingsContext.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.Hashtable
  isExternal: false
  name: System.Collections.Hashtable
- uid: System.Configuration.SettingsContext.#ctor
  parent: System.Configuration.SettingsContext
  isExternal: false
  name: SettingsContext()
  nameWithType: SettingsContext.SettingsContext()
  fullName: System.Configuration.SettingsContext.SettingsContext()
- uid: System.Configuration.SettingsContext.#ctor*
  parent: System.Configuration.SettingsContext
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext.SettingsContext
