### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.QueryContinueDragEventArgs
  id: QueryContinueDragEventArgs
  children:
  - System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  - System.Windows.Forms.QueryContinueDragEventArgs.Action
  - System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  - System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  langs:
  - csharp
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.Forms.QueryContinueDragEventArgs
  type: Class
  summary: "提供有关数据<xref href=&quot;System.Windows.Forms.Control.QueryContinueDrag&quot;></xref>事件。"
  remarks: "<xref:System.Windows.Forms.Control.QueryContinueDrag>事件在拖放操作期间发生，并且允许拖动源确定是否应取消拖放操作。</xref:System.Windows.Forms.Control.QueryContinueDrag> QueryContinueDragEventArgs 指定是否以及如何应继续拖放操作、 是否按下任何修饰符键，以及用户是否已按 ESC 键。       默认情况下，<xref:System.Windows.Forms.Control.QueryContinueDrag>事件集<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>到<xref:System.Windows.Forms.DragAction?displayProperty=fullName>曾按下 ESC 键，并设置`Action`到<xref:System.Windows.Forms.DragAction?displayProperty=fullName>如果按左、 中间，或向右鼠标左键。</xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>       有关事件模型的信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "This code excerpt demonstrates using the QueryContinueDragEventArgs class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/t-system.windows.forms.q_4_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/t-system.windows.forms.q_4_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/t-system.windows.forms.q_4_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class QueryContinueDragEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  id: '#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)'
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.QueryContinueDragEventArgs&quot;></xref>类。"
  syntax:
    content: public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);
    parameters:
    - id: keyState
      type: System.Int32
      description: "SHIFT、 CTRL 和 ALT 键的当前状态。"
    - id: escapePressed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果按 ESC 键;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: action
      type: System.Windows.Forms.DragAction
      description: "A <xref href=&quot;System.Windows.Forms.DragAction&quot;></xref> value."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action
  id: Action
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.Action
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置拖放操作的状态。"
  remarks: "默认情况下，<xref:System.Windows.Forms.Control.QueryContinueDrag>事件将操作设置为<xref:System.Windows.Forms.DragAction?displayProperty=fullName>曾按下 ESC 键，并设置`Action`到<xref:System.Windows.Forms.DragAction?displayProperty=fullName>如果按左、 中间，或向右鼠标左键。</xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.Control.QueryContinueDrag>"
  example:
  - "This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/p-system.windows.forms.q_0_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/p-system.windows.forms.q_0_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/p-system.windows.forms.q_0_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DragAction Action { get; set; }
    return:
      type: System.Windows.Forms.DragAction
      description: "A <xref href=&quot;System.Windows.Forms.DragAction&quot;></xref> value."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  id: EscapePressed
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取是否用户按下 ESC 键。"
  remarks: "默认情况下，<xref:System.Windows.Forms.Control.QueryContinueDrag>事件集<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>到<xref:System.Windows.Forms.DragAction?displayProperty=fullName>如果 EscapePressed 为 true。</xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>"
  example:
  - "The following code example demonstrates the use of the EscapePressed . In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#43](~/add/codesnippet/csharp/p-system.windows.forms.q_6_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#43](~/add/codesnippet/visualbasic/p-system.windows.forms.q_6_1.vb)]"
  syntax:
    content: public bool EscapePressed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果按 ESC 键;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  id: KeyState
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取 SHIFT、 CTRL 和 ALT 键的当前状态。"
  remarks: "在 KeyState 属性中设置的位标识键或在操作期间已按下鼠标按钮。 例如，如果按鼠标左键，KeyState 属性中的第一位设置。 你可以使用的按位`AND`运算符来测试给定键的状态。       下表列出的位将设置为指定的事件。      |位 |密钥 |  |---------|---------|  |&1; |鼠标左键。 |  |&2; |鼠标右键。 |  |&4; |SHIFT 键。 |  |&8; |CTL 密钥。 |  |&16; |鼠标中键。 |  |&32; |ALT 键。 |      默认情况下，<xref:System.Windows.Forms.Control.QueryContinueDrag>事件集<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>到<xref:System.Windows.Forms.DragAction?displayProperty=fullName>KeyState 如果指示，按左、 中间，或向右鼠标左键。</xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#43](~/add/codesnippet/csharp/p-system.windows.forms.q_2_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#43](~/add/codesnippet/visualbasic/p-system.windows.forms.q_2_1.vb)]"
  syntax:
    content: public int KeyState { get; }
    return:
      type: System.Int32
      description: "SHIFT、 CTRL 和 ALT 键的当前状态。"
  overload: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DragAction
  parent: System.Windows.Forms
  isExternal: false
  name: DragAction
  nameWithType: DragAction
  fullName: System.Windows.Forms.DragAction
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.Action
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
