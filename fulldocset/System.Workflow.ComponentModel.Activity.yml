### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Activity
  id: Activity
  children:
  - System.Workflow.ComponentModel.Activity.#ctor
  - System.Workflow.ComponentModel.Activity.#ctor(System.String)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  langs:
  - csharp
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
  type: Class
  summary: "表示工作流的基本构建块。 活动是所有活动的基类。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]活动是工作流的基本构建块。 活动定义一组属性和事件，包括任何类，以及执行逻辑定义活动的运行时行为。 一组其他组件可以与活动相关联。 这些组件包括但不限于验证程序、 代码生成器、 自定义序列化程序和设计器。       所有活动都共享一组通用的活动的基类上定义的属性。  每个活动可以通过扩展此类声明按照需要其自己附加属性。  由于活动派生自<xref:System.Workflow.ComponentModel.DependencyObject>，可以定义属性，为标准 CLR 属性和依赖项属性。</xref:System.Workflow.ComponentModel.DependencyObject>       活动的执行逻辑满足任何活动和工作流运行时之间存在的协定。 你必须文档中的功能的意义上的任何活动的执行逻辑，从而使得工作流开发人员使用活动了解其行为。 执行逻辑本身是隐藏的工作流开发人员在工作流中包括活动，因为执行逻辑是工作流运行时与活动之间严格存在的协定的一部分。"
  example:
  - "This example defines an activity whose purpose is to send an email. The activity defines one property, `Subject`, that uses a dependency property in its implementation. Other properties can be defined in a similar way. The `Execute` method is overridden to provide the logic for sending the email. For a complete example, see the [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n```c#  \npublic class SendEmail : Activity  \n{  \n    public static readonly DependencyProperty SubjectProperty =  \n        DependencyProperty.Register(\"Subject\", typeof(string), typeof(SendEmail));  \n  \n    public string Subject  \n    {  \n        get { return base.GetValue(SubjectProperty) as string; }  \n        set { base.SetValue(SubjectProperty, value); }  \n    }  \n  \n    // Define other properties...  \n  \n    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  \n    {  \n        // Logic to send the e-mail goes here...  \n        return ActivityExecutionStatus.Closed;  \n    }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.TypeCodeDomSerializer))]

      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("Component")]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.ComponentModel.ToolboxItemFilter("Microsoft.Workflow.VSDesigner", System.ComponentModel.ToolboxItemFilterType.Require)]

      [System.ComponentModel.ToolboxItemFilter("System.Workflow.ComponentModel.Design.ActivitySet", System.ComponentModel.ToolboxItemFilterType.Allow)]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.Activity), "Design.Resources.Activity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator))]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.ActivityValidator))]

      [System.Workflow.ComponentModel.Serialization.RuntimeNameProperty("Name")]

      public class Activity : System.Workflow.ComponentModel.DependencyObject
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Activity()
  nameWithType: Activity.Activity()
  fullName: System.Workflow.ComponentModel.Activity.Activity()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code shows how to create activities and add them as children to a composite activity.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public Activity ();
    parameters: []
  overload: System.Workflow.ComponentModel.Activity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Activity(String)
  nameWithType: Activity.Activity(String)
  fullName: System.Workflow.ComponentModel.Activity.Activity(String)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>类，初始化<xref:System.Workflow.ComponentModel.Activity.Name*>.</xref:System.Workflow.ComponentModel.Activity.Name*>时"
  syntax:
    content: public Activity (string name);
    parameters:
    - id: name
      type: System.String
      description: "要与此实例关联的名称。 名称必须符合工作流项目中正在使用的编程语言的变量命名规则，并且在工作流中必须唯一。"
  overload: System.Workflow.ComponentModel.Activity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  id: ActivityContextGuidProperty
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ActivityContextGuidProperty
  nameWithType: Activity.ActivityContextGuidProperty
  fullName: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>表示<xref:System.Guid>的<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>关联<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。</xref:System.Guid>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ActivityContextGuidProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: Activity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "由工作流运行时，可以取消当前正在执行一个活动的执行调用。"
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> ，其中包含要取消的实例。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "末尾的确定活动是保留在取消状态还是转换为关闭状态的操作状态。"
  overload: System.Workflow.ComponentModel.Activity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Canceling
  id: Canceling
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Canceling
  nameWithType: Activity.Canceling
  fullName: System.Workflow.ComponentModel.Activity.Canceling
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "在取消活动执行时发生。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       <xref:System.Workflow.ComponentModel.Activity.Cancel%2A>方法还允许派生的类对事件进行处理而不必附加委托。</xref:System.Workflow.ComponentModel.Activity.Cancel%2A> 这是处理派生类中的事件的首选的技术。  [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]处理事件，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Canceling;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.CancelingEvent
  id: CancelingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: CancelingEvent
  nameWithType: Activity.CancelingEvent
  fullName: System.Workflow.ComponentModel.Activity.CancelingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref href=&quot;System.Workflow.ComponentModel.Activity.Canceling&quot;></xref>事件。"
  remarks: "通过解析对应的依赖项属性的每个公共属性和事件，此类型的间接地访问。 此依赖属性是名为的公共静态字段`XProperty`或`XEvent`，其中 X 是对应的属性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CancelingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Clone
  id: Clone
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Clone()
  nameWithType: Activity.Clone()
  fullName: System.Workflow.ComponentModel.Activity.Clone()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "创建的深层副本<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  remarks: "使用<xref:System.IO.MemoryStream>复制活动和创建新的活动进行反序列化从该特定<xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream> </xref:System.IO.MemoryStream>"
  syntax:
    content: public System.Workflow.ComponentModel.Activity Clone ();
    parameters: []
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "深层副本<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Closed
  id: Closed
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Closed
  nameWithType: Activity.Closed
  fullName: System.Workflow.ComponentModel.Activity.Closed
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "发生时<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>执行完毕。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       封闭的方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Closed;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ClosedEvent
  id: ClosedEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ClosedEvent
  nameWithType: Activity.ClosedEvent
  fullName: System.Workflow.ComponentModel.Activity.ClosedEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref href=&quot;System.Workflow.ComponentModel.Activity.Closed&quot;></xref>事件。"
  remarks: "通过解析对应的依赖项属性的每个公共属性和事件，此类型的间接地访问。 此依赖属性是名为的公共静态字段`XProperty`或`XEvent`，其中 X 是对应的属性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ClosedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Compensating
  id: Compensating
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Compensating
  nameWithType: Activity.Compensating
  fullName: System.Workflow.ComponentModel.Activity.Compensating
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "在上运行补偿方法时发生<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       补偿方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Compensating;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent
  id: CompensatingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: CompensatingEvent
  nameWithType: Activity.CompensatingEvent
  fullName: System.Workflow.ComponentModel.Activity.CompensatingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref href=&quot;System.Workflow.ComponentModel.Activity.Compensating&quot;></xref>事件。"
  remarks: "通过解析对应的依赖项属性的每个公共属性和事件，此类型的间接地访问。 此依赖属性是名为的公共静态字段`XProperty`或`XEvent`，其中 X 是对应的属性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompensatingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Description
  id: Description
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Description
  nameWithType: Activity.Description
  fullName: System.Workflow.ComponentModel.Activity.Description
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取或设置的用户定义说明<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  remarks: "此属性是元属性，这意味着它不能在运行时更改。 元属性不发生更改后的属性实例创建在运行时，因此该属性必须在设计时设置为文本值。"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "文本说明<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Enabled
  id: Enabled
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Enabled
  nameWithType: Activity.Enabled
  fullName: System.Workflow.ComponentModel.Activity.Enabled
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取或设置一个值，该值指示是否启用此实例以供执行和验证。"
  remarks: "如果`false`，所有子活动被都视为此值是`false`为它们还。       此属性是元属性，这意味着它不能在运行时更改。 元属性不发生更改后的属性实例创建在运行时，因此该属性必须在设计时设置为文本值。"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果允许执行和验证，则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>否则为。"
  overload: System.Workflow.ComponentModel.Activity.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: Activity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "由要执行活动的工作流运行时调用。"
  remarks: "<xref:System.Workflow.ComponentModel.ActivityExecutionContext>可用于获取有关当前正在运行的活动和工作流，信息并还用于从运行时环境获取服务。</xref:System.Workflow.ComponentModel.ActivityExecutionContext>       运行同步发生，当活动完成或达到中间状态时，将控制返回到调用方。"
  example:
  - "The following code example shows an implementation of the `Execute` method. In this example, an Outlook e-mail message is constructed and sent. This example is from the Outlook Workflow Wizard SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Outlook Workflow Wizard Sample](http://msdn.microsoft.com/en-us/7b2ba92b-8456-43f3-87fc-184ffdec4408).  \n  \n [!code-cs[WF_Samples#98](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#98)]\n [!code-vb[WF_Samples#98](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#98)]"
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>要与此关联<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>和执行。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref>运行任务，确定活动是保留执行状态，还是转换为关闭状态。"
  overload: System.Workflow.ComponentModel.Activity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Executing
  id: Executing
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Executing
  nameWithType: Activity.Executing
  fullName: System.Workflow.ComponentModel.Activity.Executing
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "发生时<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>运行。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       执行方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Executing;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent
  id: ExecutingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutingEvent
  nameWithType: Activity.ExecutingEvent
  fullName: System.Workflow.ComponentModel.Activity.ExecutingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref href=&quot;System.Workflow.ComponentModel.Activity.Executing&quot;></xref>事件，发生时执行的活动。"
  remarks: "通过解析对应的依赖项属性的每个公共属性和事件，此类型的间接地访问。 此依赖属性是名为的公共静态字段`XProperty`或`XEvent`，其中 X 是对应的属性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult
  id: ExecutionResult
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
  fullName: System.Workflow.ComponentModel.Activity.ExecutionResult
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionResult&quot;></xref>的上次尝试运行此实例。"
  remarks: "当运行工作流实例时，此属性才有用。"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityExecutionResult ExecutionResult { get; }
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionResult
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionResult&quot;> </xref>的上次尝试运行此实例。"
  overload: System.Workflow.ComponentModel.Activity.ExecutionResult*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus
  id: ExecutionStatus
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
  fullName: System.Workflow.ComponentModel.Activity.ExecutionStatus
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取当前<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>的此实例。"
  remarks: "当运行工作流实例时，此属性才有用。"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityExecutionStatus ExecutionStatus { get; }
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "当前<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>的此实例。"
  overload: System.Workflow.ComponentModel.Activity.ExecutionStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Faulting
  id: Faulting
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Faulting
  nameWithType: Activity.Faulting
  fullName: System.Workflow.ComponentModel.Activity.Faulting
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "实例运行期间引发异常时发生。"
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]处理事件，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。'
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Faulting;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.FaultingEvent
  id: FaultingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: FaultingEvent
  nameWithType: Activity.FaultingEvent
  fullName: System.Workflow.ComponentModel.Activity.FaultingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>表示<xref href=&quot;System.Workflow.ComponentModel.Activity.Faulting&quot;></xref>事件。"
  remarks: "通过解析对应的依赖项属性的每个公共属性和事件，此类型的间接地访问。 此依赖属性是名为的公共静态字段`XProperty`或`XEvent`，其中 X 是对应的属性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  id: GetActivityByName(System.String)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: GetActivityByName(String)
  nameWithType: Activity.GetActivityByName(String)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "返回的实例的<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>其名称被此实例，即在工作流的根活动下运行的所有活动的集请求。"
  remarks: "调用`GetActivityByName`中自定义活动的构造函数不支持，并且可以具有意外的结果。"
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName);
    parameters:
    - id: activityQualifiedName
      type: System.String
      description: "名称<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>搜索。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "实例<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>其名称被此实例的根活动下运行的所有活动的集请求。"
  overload: System.Workflow.ComponentModel.Activity.GetActivityByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activityQualifiedID</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  id: GetActivityByName(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: GetActivityByName(String,Boolean)
  nameWithType: Activity.GetActivityByName(String,Boolean)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String,Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "返回的实例的<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>其名称被请求的根目录下的所有活动集<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>如果第二个参数是此实例的<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在当前<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>如果第二个参数是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  remarks: "返回的实例的<xref:System.Workflow.ComponentModel.Activity>其名称被请求的根目录下的所有活动集<xref:System.Workflow.ComponentModel.Activity>如果第二个参数是此实例的`false`在当前<xref:System.Workflow.ComponentModel.Activity>如果第二个参数是`true`。</xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity>       调用`GetActivityByName`中自定义活动的构造函数不支持，并且可以具有意外的结果。"
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName, bool withinThisActivityOnly);
    parameters:
    - id: activityQualifiedName
      type: System.String
      description: "名称<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>搜索。"
    - id: withinThisActivityOnly
      type: System.Boolean
      description: "一个值，该值指示是否将搜索限制为在此实例内包含的活动。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "实例<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>其名称被请求的根目录下的所有活动集<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>如果第二个参数是此实例的<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在当前<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>如果第二个参数是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.GetActivityByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activityQualifiedID</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: Activity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.Activity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "在此实例的执行上下文中引发异常时调用。"
  remarks: "默认方法尝试调用<xref:System.Workflow.ComponentModel.Activity.Cancel%2A>方法并返回此尝试的结果。</xref:System.Workflow.ComponentModel.Activity.Cancel%2A>"
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>此实例。"
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>导致此错误。</xref:System.Exception>"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref>中时得到的尝试取消此实例。"
  overload: System.Workflow.ComponentModel.Activity.HandleFault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exception</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: Activity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "由新的工作流实例的构造过程中初始化活动工作流运行时调用。 在构造动态调用此方法<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>。"
  syntax:
    content: protected virtual void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供初始化服务。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing &quot; name=&quot;Nothing &quot; href=&quot;&quot;></xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  id: Invoke``1(System.EventHandler{``0},``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Invoke(EventHandler<T>,T)
  nameWithType: Activity.Invoke(EventHandler<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(EventHandler<T>,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void Invoke<T> (EventHandler<T> handler, T e) where T : EventArgs;'
    parameters:
    - id: handler
      type: System.EventHandler{T}
      description: "要添加。"
    - id: e
      type: T
      description: "要添加。"
  overload: System.Workflow.ComponentModel.Activity.Invoke<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  id: Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Invoke(IActivityEventListener<T>,T)
  nameWithType: Activity.Invoke(IActivityEventListener<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(IActivityEventListener<T>,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void Invoke<T> (System.Workflow.ComponentModel.IActivityEventListener<T> eventListener, T e) where T : EventArgs;'
    parameters:
    - id: eventListener
      type: System.Workflow.ComponentModel.IActivityEventListener`1
      description: "要添加。"
    - id: e
      type: T
      description: "要添加。"
  overload: System.Workflow.ComponentModel.Activity.Invoke<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  id: IsDynamicActivity
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
  fullName: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取有关是否中默认值执行活动的信息<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>的工作流实例。"
  syntax:
    content: public bool IsDynamicActivity { get; }
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果中默认值执行活动<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>的工作流实例，否则返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.IsDynamicActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  id: Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Load(Stream,Activity)
  nameWithType: Activity.Load(Stream,Activity)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "加载的实例<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>从一种<xref:System.IO.Stream>。</xref:System.IO.Stream>"
  remarks: >-
    > [!IMPORTANT]

    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).
  syntax:
    content: public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>要从其中加载。</xref:System.IO.Stream>"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>拥有反序列化的上下文<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "实例<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>从一种<xref:System.IO.Stream>。</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  id: Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Load(Stream,Activity,IFormatter)
  nameWithType: Activity.Load(Stream,Activity,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity,IFormatter)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "加载的实例<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>从<xref:System.IO.Stream>使用自定义<xref href=&quot;System.Runtime.Serialization.IFormatter&quot;></xref>进行反序列化。</xref:System.IO.Stream>"
  remarks: >-
    > [!IMPORTANT]

    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).
  syntax:
    content: public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity, System.Runtime.Serialization.IFormatter formatter);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "目标<xref:System.IO.Stream>加载操作。</xref:System.IO.Stream>"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>拥有反序列化的上下文<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
    - id: formatter
      type: System.Runtime.Serialization.IFormatter
      description: "<xref href=&quot;System.Runtime.Serialization.IFormatter&quot;> </xref>用于读取来自<xref:System.IO.Stream>.</xref:System.IO.Stream>"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "实例<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>从一种<xref:System.IO.Stream>。</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>formatter</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Name
  id: Name
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Name
  nameWithType: Activity.Name
  fullName: System.Workflow.ComponentModel.Activity.Name
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取或设置此实例的名称。 此名称必须符合工作流项目中正在使用的编程语言的变量命名规则。"
  remarks: "此默认值为空字符串。       此属性是元属性，这意味着它不能在运行时更改。 元属性不发生更改后的属性实例创建在运行时，因此该属性必须在设计时设置为文本值。"
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and set the value for Name.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "此实例的名称。"
  overload: System.Workflow.ComponentModel.Activity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  id: OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "由工作流运行时每当<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>加载。 例如，在创建过程中调用此方法<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>以及每次<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> reincarnated 时从持久性存储区加载工作流实例。"
  syntax:
    content: protected virtual void OnActivityExecutionContextLoad (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服务。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  id: OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "由工作流运行时每当<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>卸载。 例如，在完成过程中调用此方法<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>以及每次<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>时持久化工作流实例时不会卸载。"
  syntax:
    content: protected virtual void OnActivityExecutionContextUnload (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服务。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: Activity.OnClosed(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "由工作流运行时为活动的转换到关闭状态的一部分调用。"
  remarks: "此方法使活动能够清理其执行期间使用的资源。"
  syntax:
    content: protected virtual void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服务。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Parent
  id: Parent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Parent
  nameWithType: Activity.Parent
  fullName: System.Workflow.ComponentModel.Activity.Parent
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取<xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;></xref>包含此<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  remarks: "返回一个空引用 (`Nothing`在 Visual Basic 中) 如果<xref:System.Workflow.ComponentModel.Activity>是工作流或根<xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public System.Workflow.ComponentModel.CompositeActivity Parent { get; }
    return:
      type: System.Workflow.ComponentModel.CompositeActivity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>至此的父级<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.QualifiedName
  id: QualifiedName
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: QualifiedName
  nameWithType: Activity.QualifiedName
  fullName: System.Workflow.ComponentModel.Activity.QualifiedName
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取活动的限定的名称。 活动的限定的名称始终是在工作流实例中唯一的。"
  remarks: "限定的名称是包含此实例追加到前面的自定义活动的名称与此实例的名称。"
  syntax:
    content: public string QualifiedName { get; }
    return:
      type: System.String
      description: "实例的限定的名称。"
  overload: System.Workflow.ComponentModel.Activity.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  id: RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RaiseEvent(DependencyProperty,Object,EventArgs)
  nameWithType: Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  fullName: System.Workflow.ComponentModel.Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "引发<xref href=&quot;System.Reflection.MemberTypes&quot;></xref>与指定的依赖属性关联。"
  remarks: ''
  example:
  - "The following code invokes this method to raise an event that is defined as a <xref:System.Workflow.ComponentModel.DependencyProperty>.  \n  \n This code example is part of the Send E-mail Activity sample and is from the SendEmailActivity.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669)  \n  \n [!code-cs[WF_Samples#233](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#233)]\n [!code-vb[WF_Samples#233](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#233)]"
  syntax:
    content: protected void RaiseEvent (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, EventArgs e);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>与此关联<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>。"
    - id: sender
      type: System.Object
      description: "<xref:System.Object>源<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>。</xref:System.Object>"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>与关联<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>。</xref:System.EventArgs>"
  overload: System.Workflow.ComponentModel.Activity.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  id: RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RaiseGenericEvent(DependencyProperty,Object,T)
  nameWithType: Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  fullName: System.Workflow.ComponentModel.Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void RaiseGenericEvent<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, T e) where T : EventArgs;'
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
    - id: sender
      type: System.Object
      description: "要添加。"
    - id: e
      type: T
      description: "要添加。"
  overload: System.Workflow.ComponentModel.Activity.RaiseGenericEvent<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  id: RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "注册指定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>状态更改事件。"
  syntax:
    content: public void RegisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> activityStatusChangeListener);
    parameters:
    - id: dependencyProp
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>注册。"
    - id: activityStatusChangeListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "实现此注册的事件侦听器接口的对象。"
  overload: System.Workflow.ComponentModel.Activity.RegisterForStatusChange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dependencyProp</code>不是以下之一:-<xref href=&quot;System.Workflow.ComponentModel.Activity.ExecutingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CancelingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.ClosedEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CompensatingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.FaultingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChangedEvent&quot;></xref>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: Activity.Save(Stream)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "写入<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>到<xref:System.IO.Stream>为暂留。</xref:System.IO.Stream>"
  syntax:
    content: public void Save (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>要将保存到<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  id: Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Save(Stream,IFormatter)
  nameWithType: Activity.Save(Stream,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream,IFormatter)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "写入<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>到<xref:System.IO.Stream>为使用自定义暂留<xref href=&quot;System.Runtime.Serialization.IFormatter&quot;></xref>为序列化提供。</xref:System.IO.Stream>"
  remarks: "Windows Workflow Foundation 不支持 soap 格式化程序。"
  syntax:
    content: public void Save (System.IO.Stream stream, System.Runtime.Serialization.IFormatter formatter);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "目标<xref:System.IO.Stream>的保存操作。</xref:System.IO.Stream>"
    - id: formatter
      type: System.Runtime.Serialization.IFormatter
      description: "二进制或自定义<xref href=&quot;System.Runtime.Serialization.IFormatter&quot;></xref>序列化。"
  overload: System.Workflow.ComponentModel.Activity.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>formatter</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "此实例处于设计模式。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.StatusChanged
  id: StatusChanged
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: StatusChanged
  nameWithType: Activity.StatusChanged
  fullName: System.Workflow.ComponentModel.Activity.StatusChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "发生时<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>运行的<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>更改。"
  remarks: "引发事件时，将调用事件处理程序，通过委托。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       StatusChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。      1> [!NOTE]&1;> 当某个活动 （活动 A） 订阅其他活动 (活动 B)`StatusChanged`事件，`Activity`属性关联的<xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>引用订阅 (活动 B) 的活动和关联`Sender`对象引用订阅活动 （活动 A） 的执行上下文。</xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> StatusChanged;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  id: StatusChangedEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: StatusChangedEvent
  nameWithType: Activity.StatusChangedEvent
  fullName: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "表示<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>针对<xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChanged&quot;></xref>事件。"
  remarks: "通过解析对应的依赖项属性的每个公共属性和事件，此类型的间接地访问。 此依赖属性是名为的公共静态字段`XProperty`或`XEvent`，其中 X 是对应的属性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty StatusChangedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ToString
  id: ToString
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: System.Workflow.ComponentModel.Activity.ToString()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "提供表示此实例的字符串。"
  remarks: "返回的字符串是的组合<xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A>和<xref:System.Type.FullName%2A>的此实例的类型。</xref:System.Type.FullName%2A> </xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "此实例中。"
  overload: System.Workflow.ComponentModel.Activity.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  id: TrackData(System.Object)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: TrackData(Object)
  nameWithType: Activity.TrackData(Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "通知运行时跟踪基础结构的挂起的跟踪信息。"
  remarks: ''
  example:
  - "The following example shows a call to the `TrackData` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#118](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#118)]\n [!code-vb[WF_Samples#118](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#118)]"
  syntax:
    content: protected void TrackData (object userData);
    parameters:
    - id: userData
      type: System.Object
      description: "<xref:System.Object>包含跟踪信息。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Activity.TrackData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userData</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  id: TrackData(System.String,System.Object)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: TrackData(String,Object)
  nameWithType: Activity.TrackData(String,Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(String,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "通知运行时跟踪基础结构的挂起的跟踪信息。"
  syntax:
    content: protected void TrackData (string userDataKey, object userData);
    parameters:
    - id: userDataKey
      type: System.String
      description: "已更改的用户数据至关重要。"
    - id: userData
      type: System.Object
      description: "<xref:System.Object>包含跟踪信息。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Activity.TrackData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userData</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  id: Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Uninitialize(IServiceProvider)
  nameWithType: Activity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Uninitialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "当在派生类中重写，则为活动提供由服务提供商的反初始化。"
  remarks: "此方法使活动能够清理在初始化期间分配的资源。       取消初始化活动实例保证不执行任何其他时调用。 未实现的活动<xref:System.Workflow.ComponentModel.ICompensatableActivity>，或该活动将立即关闭后，如果活动绝不会执行，在工作流完成后将发生这种情况。</xref:System.Workflow.ComponentModel.ICompensatableActivity> 有关<xref:System.Workflow.ComponentModel.ICompensatableActivity>活动，这发生在补偿后或在工作流完成。</xref:System.Workflow.ComponentModel.ICompensatableActivity>"
  syntax:
    content: protected virtual void Uninitialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服务。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.Uninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  id: UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "指定的取消寄存器<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>状态更改事件。"
  syntax:
    content: public void UnregisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> activityStatusChangeListener);
    parameters:
    - id: dependencyProp
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>中取消注册。"
    - id: activityStatusChangeListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "实现此注册的事件侦听器接口的对象。"
  overload: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dependencyProp</code>不是以下之一:-<xref href=&quot;System.Workflow.ComponentModel.Activity.ExecutingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CancelingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.ClosedEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CompensatingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.FaultingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChangedEvent&quot;></xref>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  id: WorkflowInstanceId
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
  fullName: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "获取<xref:System.Guid>与实例相关联。</xref:System.Guid>"
  syntax:
    content: protected Guid WorkflowInstanceId { get; }
    return:
      type: System.Guid
      description: "<xref:System.Guid>与实例相关联。</xref:System.Guid>"
  overload: System.Workflow.ComponentModel.Activity.WorkflowInstanceId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: System.Workflow.ComponentModel.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.ComponentModel.Activity.#ctor
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity()
  nameWithType: Activity.Activity()
  fullName: System.Workflow.ComponentModel.Activity.Activity()
- uid: System.Workflow.ComponentModel.Activity.#ctor(System.String)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity(String)
  nameWithType: Activity.Activity(String)
  fullName: System.Workflow.ComponentModel.Activity.Activity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ActivityContextGuidProperty
  nameWithType: Activity.ActivityContextGuidProperty
  fullName: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: Activity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.ComponentModel.Activity.Canceling
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Canceling
  nameWithType: Activity.Canceling
  fullName: System.Workflow.ComponentModel.Activity.Canceling
- uid: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ActivityExecutionStatusChangedEventArgs>
  nameWithType: EventHandler<ActivityExecutionStatusChangedEventArgs>
  fullName: System.EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
    name: ActivityExecutionStatusChangedEventArgs
    nameWithType: ActivityExecutionStatusChangedEventArgs
    fullName: ActivityExecutionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Activity.CancelingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: CancelingEvent
  nameWithType: Activity.CancelingEvent
  fullName: System.Workflow.ComponentModel.Activity.CancelingEvent
- uid: System.Workflow.ComponentModel.Activity.Clone
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Clone()
  nameWithType: Activity.Clone()
  fullName: System.Workflow.ComponentModel.Activity.Clone()
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.ComponentModel.Activity.Closed
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Closed
  nameWithType: Activity.Closed
  fullName: System.Workflow.ComponentModel.Activity.Closed
- uid: System.Workflow.ComponentModel.Activity.ClosedEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ClosedEvent
  nameWithType: Activity.ClosedEvent
  fullName: System.Workflow.ComponentModel.Activity.ClosedEvent
- uid: System.Workflow.ComponentModel.Activity.Compensating
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Compensating
  nameWithType: Activity.Compensating
  fullName: System.Workflow.ComponentModel.Activity.Compensating
- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: CompensatingEvent
  nameWithType: Activity.CompensatingEvent
  fullName: System.Workflow.ComponentModel.Activity.CompensatingEvent
- uid: System.Workflow.ComponentModel.Activity.Description
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Description
  nameWithType: Activity.Description
  fullName: System.Workflow.ComponentModel.Activity.Description
- uid: System.Workflow.ComponentModel.Activity.Enabled
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Enabled
  nameWithType: Activity.Enabled
  fullName: System.Workflow.ComponentModel.Activity.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: Activity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.Activity.Executing
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Executing
  nameWithType: Activity.Executing
  fullName: System.Workflow.ComponentModel.Activity.Executing
- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutingEvent
  nameWithType: Activity.ExecutingEvent
  fullName: System.Workflow.ComponentModel.Activity.ExecutingEvent
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
  fullName: System.Workflow.ComponentModel.Activity.ExecutionResult
- uid: System.Workflow.ComponentModel.ActivityExecutionResult
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionResult
  nameWithType: ActivityExecutionResult
  fullName: System.Workflow.ComponentModel.ActivityExecutionResult
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
  fullName: System.Workflow.ComponentModel.Activity.ExecutionStatus
- uid: System.Workflow.ComponentModel.Activity.Faulting
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Faulting
  nameWithType: Activity.Faulting
  fullName: System.Workflow.ComponentModel.Activity.Faulting
- uid: System.Workflow.ComponentModel.Activity.FaultingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: FaultingEvent
  nameWithType: Activity.FaultingEvent
  fullName: System.Workflow.ComponentModel.Activity.FaultingEvent
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName(String)
  nameWithType: Activity.GetActivityByName(String)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String)
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName(String,Boolean)
  nameWithType: Activity.GetActivityByName(String,Boolean)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String,Boolean)
- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: Activity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.Activity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: Activity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke(EventHandler<T>,T)
  nameWithType: Activity.Invoke(EventHandler<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(EventHandler<T>,T)
- uid: System.EventHandler{T}
  parent: System
  isExternal: true
  name: EventHandler<T>
  nameWithType: EventHandler<T>
  fullName: System.EventHandler<T>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke(IActivityEventListener<T>,T)
  nameWithType: Activity.Invoke(IActivityEventListener<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(IActivityEventListener<T>,T)
- uid: System.Workflow.ComponentModel.IActivityEventListener`1
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<T>
  nameWithType: IActivityEventListener<T>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<T>
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
  fullName: System.Workflow.ComponentModel.Activity.IsDynamicActivity
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load(Stream,Activity)
  nameWithType: Activity.Load(Stream,Activity)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load(Stream,Activity,IFormatter)
  nameWithType: Activity.Load(Stream,Activity,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity,IFormatter)
- uid: System.Runtime.Serialization.IFormatter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatter
  nameWithType: IFormatter
  fullName: System.Runtime.Serialization.IFormatter
- uid: System.Workflow.ComponentModel.Activity.Name
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Name
  nameWithType: Activity.Name
  fullName: System.Workflow.ComponentModel.Activity.Name
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: Activity.OnClosed(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnClosed(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.Parent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Parent
  nameWithType: Activity.Parent
  fullName: System.Workflow.ComponentModel.Activity.Parent
- uid: System.Workflow.ComponentModel.CompositeActivity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: CompositeActivity
  nameWithType: CompositeActivity
  fullName: System.Workflow.ComponentModel.CompositeActivity
- uid: System.Workflow.ComponentModel.Activity.QualifiedName
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: QualifiedName
  nameWithType: Activity.QualifiedName
  fullName: System.Workflow.ComponentModel.Activity.QualifiedName
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseEvent(DependencyProperty,Object,EventArgs)
  nameWithType: Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  fullName: System.Workflow.ComponentModel.Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseGenericEvent(DependencyProperty,Object,T)
  nameWithType: Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  fullName: System.Workflow.ComponentModel.Activity.RaiseGenericEvent(DependencyProperty,Object,T)
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>
  nameWithType: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
    name: ActivityExecutionStatusChangedEventArgs
    nameWithType: ActivityExecutionStatusChangedEventArgs
    fullName: ActivityExecutionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save(Stream)
  nameWithType: Activity.Save(Stream)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream)
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save(Stream,IFormatter)
  nameWithType: Activity.Save(Stream,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream,IFormatter)
- uid: System.Workflow.ComponentModel.Activity.StatusChanged
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: StatusChanged
  nameWithType: Activity.StatusChanged
  fullName: System.Workflow.ComponentModel.Activity.StatusChanged
- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: StatusChangedEvent
  nameWithType: Activity.StatusChangedEvent
  fullName: System.Workflow.ComponentModel.Activity.StatusChangedEvent
- uid: System.Workflow.ComponentModel.Activity.ToString
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: System.Workflow.ComponentModel.Activity.ToString()
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData(Object)
  nameWithType: Activity.TrackData(Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(Object)
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData(String,Object)
  nameWithType: Activity.TrackData(String,Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(String,Object)
- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Uninitialize(IServiceProvider)
  nameWithType: Activity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Uninitialize(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
  fullName: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.ComponentModel.Activity.#ctor*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity
  nameWithType: Activity.Activity
- uid: System.Workflow.ComponentModel.Activity.Cancel*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Cancel
  nameWithType: Activity.Cancel
- uid: System.Workflow.ComponentModel.Activity.Clone*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Clone
  nameWithType: Activity.Clone
- uid: System.Workflow.ComponentModel.Activity.Description*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Description
  nameWithType: Activity.Description
- uid: System.Workflow.ComponentModel.Activity.Enabled*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Enabled
  nameWithType: Activity.Enabled
- uid: System.Workflow.ComponentModel.Activity.Execute*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Execute
  nameWithType: Activity.Execute
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName
  nameWithType: Activity.GetActivityByName
- uid: System.Workflow.ComponentModel.Activity.HandleFault*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: HandleFault
  nameWithType: Activity.HandleFault
- uid: System.Workflow.ComponentModel.Activity.Initialize*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Initialize
  nameWithType: Activity.Initialize
- uid: System.Workflow.ComponentModel.Activity.Invoke<T>*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke<T>
  nameWithType: Activity.Invoke<T>
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
- uid: System.Workflow.ComponentModel.Activity.Load*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load
  nameWithType: Activity.Load
- uid: System.Workflow.ComponentModel.Activity.Name*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Name
  nameWithType: Activity.Name
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextLoad
  nameWithType: Activity.OnActivityExecutionContextLoad
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextUnload
  nameWithType: Activity.OnActivityExecutionContextUnload
- uid: System.Workflow.ComponentModel.Activity.OnClosed*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnClosed
  nameWithType: Activity.OnClosed
- uid: System.Workflow.ComponentModel.Activity.Parent*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Parent
  nameWithType: Activity.Parent
- uid: System.Workflow.ComponentModel.Activity.QualifiedName*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: QualifiedName
  nameWithType: Activity.QualifiedName
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseEvent
  nameWithType: Activity.RaiseEvent
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent<T>*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseGenericEvent<T>
  nameWithType: Activity.RaiseGenericEvent<T>
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RegisterForStatusChange
  nameWithType: Activity.RegisterForStatusChange
- uid: System.Workflow.ComponentModel.Activity.Save*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save
  nameWithType: Activity.Save
- uid: System.Workflow.ComponentModel.Activity.ToString*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ToString
  nameWithType: Activity.ToString
- uid: System.Workflow.ComponentModel.Activity.TrackData*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData
  nameWithType: Activity.TrackData
- uid: System.Workflow.ComponentModel.Activity.Uninitialize*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Uninitialize
  nameWithType: Activity.Uninitialize
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: UnregisterForStatusChange
  nameWithType: Activity.UnregisterForStatusChange
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
