### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormView
  id: FormView
  children:
  - System.Web.UI.WebControls.FormView.#ctor
  - System.Web.UI.WebControls.FormView.AllowPaging
  - System.Web.UI.WebControls.FormView.BackImageUrl
  - System.Web.UI.WebControls.FormView.BottomPagerRow
  - System.Web.UI.WebControls.FormView.Caption
  - System.Web.UI.WebControls.FormView.CaptionAlign
  - System.Web.UI.WebControls.FormView.CellPadding
  - System.Web.UI.WebControls.FormView.CellSpacing
  - System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  - System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.FormView.CreateControlStyle
  - System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.FormView.CreateTable
  - System.Web.UI.WebControls.FormView.CurrentMode
  - System.Web.UI.WebControls.FormView.DataBind
  - System.Web.UI.WebControls.FormView.DataItem
  - System.Web.UI.WebControls.FormView.DataItemCount
  - System.Web.UI.WebControls.FormView.DataItemIndex
  - System.Web.UI.WebControls.FormView.DataKey
  - System.Web.UI.WebControls.FormView.DataKeyNames
  - System.Web.UI.WebControls.FormView.DefaultMode
  - System.Web.UI.WebControls.FormView.DeleteItem
  - System.Web.UI.WebControls.FormView.DeleteMethod
  - System.Web.UI.WebControls.FormView.EditItemTemplate
  - System.Web.UI.WebControls.FormView.EditRowStyle
  - System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  - System.Web.UI.WebControls.FormView.EmptyDataTemplate
  - System.Web.UI.WebControls.FormView.EmptyDataText
  - System.Web.UI.WebControls.FormView.EnableModelValidation
  - System.Web.UI.WebControls.FormView.EnsureDataBound
  - System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  - System.Web.UI.WebControls.FormView.FooterRow
  - System.Web.UI.WebControls.FormView.FooterStyle
  - System.Web.UI.WebControls.FormView.FooterTemplate
  - System.Web.UI.WebControls.FormView.FooterText
  - System.Web.UI.WebControls.FormView.GridLines
  - System.Web.UI.WebControls.FormView.HeaderRow
  - System.Web.UI.WebControls.FormView.HeaderStyle
  - System.Web.UI.WebControls.FormView.HeaderTemplate
  - System.Web.UI.WebControls.FormView.HeaderText
  - System.Web.UI.WebControls.FormView.HorizontalAlign
  - System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  - System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  - System.Web.UI.WebControls.FormView.InsertItemTemplate
  - System.Web.UI.WebControls.FormView.InsertMethod
  - System.Web.UI.WebControls.FormView.InsertRowStyle
  - System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.FormView.ItemCommand
  - System.Web.UI.WebControls.FormView.ItemCreated
  - System.Web.UI.WebControls.FormView.ItemDeleted
  - System.Web.UI.WebControls.FormView.ItemDeleting
  - System.Web.UI.WebControls.FormView.ItemInserted
  - System.Web.UI.WebControls.FormView.ItemInserting
  - System.Web.UI.WebControls.FormView.ItemTemplate
  - System.Web.UI.WebControls.FormView.ItemUpdated
  - System.Web.UI.WebControls.FormView.ItemUpdating
  - System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.FormView.ModeChanged
  - System.Web.UI.WebControls.FormView.ModeChanging
  - System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  - System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  - System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  - System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  - System.Web.UI.WebControls.FormView.PageCount
  - System.Web.UI.WebControls.FormView.PageIndex
  - System.Web.UI.WebControls.FormView.PageIndexChanged
  - System.Web.UI.WebControls.FormView.PageIndexChanging
  - System.Web.UI.WebControls.FormView.PagerSettings
  - System.Web.UI.WebControls.FormView.PagerStyle
  - System.Web.UI.WebControls.FormView.PagerTemplate
  - System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  - System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.FormView.RenderOuterTable
  - System.Web.UI.WebControls.FormView.Row
  - System.Web.UI.WebControls.FormView.RowStyle
  - System.Web.UI.WebControls.FormView.SaveControlState
  - System.Web.UI.WebControls.FormView.SaveViewState
  - System.Web.UI.WebControls.FormView.SelectedValue
  - System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  - System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  - System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.FormView.TagKey
  - System.Web.UI.WebControls.FormView.TopPagerRow
  - System.Web.UI.WebControls.FormView.TrackViewState
  - System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  - System.Web.UI.WebControls.FormView.UpdateMethod
  langs:
  - csharp
  name: FormView
  nameWithType: FormView
  fullName: System.Web.UI.WebControls.FormView
  type: Class
  summary: "显示来自数据源使用用户定义的模板的单个记录的值。 FormView 控件可以编辑、 删除和插入记录。"
  remarks: "本主题中:-[简介](#introduction)      -   [模板](#templates)      -   [绑定到数据](#binding_to_data)      -   [数据操作](#data_operations)      -   [自定义用户界面](#customizing_the_user_interface)      -   [事件](#events)      -   [可访问性](#accessibility)      -   [应用 CSS 样式](#applying_styles)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介 FormView 控件用于显示来自数据源的单个记录。       它是类似于<xref:System.Web.UI.WebControls.DetailsView>控制，只是它显示用户定义的模板，而不是行字段。</xref:System.Web.UI.WebControls.DetailsView> 创建你自己的模板为你提供更灵活地控制数据的显示方式。 FormView 控件支持以下功能:-绑定到数据源控件，如<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSource>。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource>      -内置插入功能。      -内置更新和删除功能。      -内置分页功能。      -以编程方式访问 FormView 对象模型，以便动态设置属性，处理事件，等等。      通过用户定义的模板、 主题和样式的自定义外观。      <a name=&quot;templates&quot;></a># # 模板的 FormView 控件来显示内容，你需要为该控件的不同部分创建模板。 大多数模板是可选的;但是，你必须创建用于在其中配置该控件的模式的模板。 例如，支持插入记录 FormView 控件必须具有定义的插入项模板。 下表列出可以创建不同的模板。      |模板类型 |说明 |  |-------------------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|当 FormView 控件处于编辑模式时定义的数据行的内容。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 此模板通常包含输入的控件和命令按钮与其用户可以编辑现有记录。 |  |<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|定义显示 FormView 控件绑定到数据源不包含任何记录的空数据行的内容。</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 此模板通常包含内容，以提醒用户数据源不包含任何记录。 |  |<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|定义页脚行的内容。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 通常，此模板包含你想要的页脚行中显示的任何其他内容。 **注意︰**作为替代方法，只需可以指定要通过将<xref:System.Web.UI.WebControls.FormView.FooterText%2A>属性设置的页脚行中显示文本。 |  |<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|定义标头行的内容。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> 通常，此模板包含你想要显示的标题行中的任何其他内容。 **注意︰**作为替代方法，你可以只需指定要通过将<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>属性设置标题行中显示文本。 |  |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|定义数据行的内容时 FormView 控件是否处于只读模式。</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 此模板通常包含内容，以显示现有记录的值。 |  |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|在插入模式 FormView 控件时定义的数据行的内容。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 此模板通常包含输入的控件和用户可以使用该对话框添加一条新记录的命令按钮。 |  |<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|定义当启用分页功能时，显示的页导航行的内容 (时<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性设置为`true`)。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> </xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> 此模板通常包含与其用户可以导航到另一条记录的控件。 **注意︰** FormView 在控件有内置的页导航行用户界面 (UI)。 你需要创建页导航模板，仅当你想要创建您自己的自定义页导航行。 |      若要显示的字段值中的项模板，请使用数据绑定表达式。 有关数据绑定表达式的详细信息，请参阅[数据绑定表达式语法](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)。       编辑项模板和插入项模板中的输入的控件可以绑定到数据源的字段中，使用双向绑定表达式。 这使 FormView 控件可以自动提取更新的输入控件的值或插入操作。 双向绑定表达式还允许在编辑项模板以自动显示字段的原始值中的输入的控件。 双向绑定表达式的详细信息，请参阅[绑定到数据库](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。      <a name=&quot;binding_to_data&quot;></a># # 绑定到数据 FormView 控件可以绑定到数据源控件 (如<xref:System.Web.UI.WebControls.SqlDataSource>， <xref:System.Web.UI.WebControls.ObjectDataSource>，或<xref:System.Web.UI.WebControls.AccessDataSource>) 或任何数据源集合可实现<xref:System.Collections.IEnumerable?displayProperty=fullName>接口，如<xref:System.Data.DataView?displayProperty=fullName>， <xref:System.Collections.ArrayList?displayProperty=fullName>， <xref:System.Collections.Generic.List%601?displayProperty=fullName>，或其他集合类型。</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 使用以下方法之一来将 FormView 控件绑定到相应的数据源类型:-如果要将绑定到数据源控件，设置<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>FormView 控件的属性<xref:System.Web.UI.Control.ID%2A>数据源控件的值。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> FormView 控件自动绑定到指定的数据源控件，并且可以利用数据源控件的功能，以执行插入、 更新、 删除和分页功能。 这是将绑定到数据的首选的方法。      -若要将绑定到数据源实现<xref:System.Collections.IEnumerable?displayProperty=fullName>接口，以编程方式设置<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>FormView 属性控件拖到数据源，然后调用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName> 使用此方法时，FormView 控件不提供内置的插入、 更新、 删除和分页功能。 你需要通过使用相应的事件来提供此功能。       有关数据绑定的详细信息，请参阅[ASP.NET 数据访问内容映射](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)。      1> [!NOTE]&1;> 此控件可用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 只要有可能，强烈建议确保值之前都是 HTML 编码它们会显示在此控件。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 验证服务器控件还提供用于评估用户输入。 有关详细信息，请参阅[验证控件简介](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)。      <a name=&quot;data_operations&quot;></a># # 数据操作 FormView 控件提供了许多内置功能，以允许用户更新、 删除、 插入和分页控件中的项。 当 FormView 控件绑定到数据源控件时，FormView 控件可以利用数据源控件的功能，并提供自动更新、 删除、 插入和分页功能。      1> [!NOTE]&1;> FormView 控件可以为更新、 删除、 插入和与其他类型的数据源的分页操作提供支持; 但是，必须将相应的事件处理程序提供这些操作的实现。       FormView 控件使用模板，因为它不提供自动生成命令按钮以执行更新、 删除或插入操作的方法。 在适当的模板，必须手动将这些命令按钮。 FormView 控件可识别具有某些按钮其`CommandName`属性设置为特定值。 下表列出 FormView 控件可识别的命令按钮。      |按钮 |CommandName 值 |说明 |  |------------|-----------------------|-----------------|  |取消 |&quot;取消&quot;|使用更新或插入操作来取消操作并以放弃用户输入的值。 FormView 控制权随后返回到<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>属性指定的模式。 |  |删除 |&quot;删除&quot;|在删除操作中用于从数据源中删除所显示的记录。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 引发<xref:System.Web.UI.WebControls.FormView.ItemDeleting>和<xref:System.Web.UI.WebControls.FormView.ItemDeleted>事件。 |  |编辑 |&quot;编辑&quot;|在更新操作中用于 FormView 控件置于编辑模式。</xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> 为数据行显示在<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>属性中指定的内容。 |  |插入 |&quot;插入&quot;|用于在插入操作中尝试使用由用户提供的值的数据源中插入新记录。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 引发<xref:System.Web.UI.WebControls.FormView.ItemInserting>和<xref:System.Web.UI.WebControls.FormView.ItemInserted>事件。 |  |新 |&quot;新&quot;|在插入操作中用于将 FormView 控件放入在插入模式。</xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView.ItemInserting> 为数据行显示在<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>属性中指定的内容。 |  |页 |&quot;页&quot;|在分页操作中用于表示执行分页的页导航行中的按钮。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 若要指定的分页操作，设置`CommandArgument`的按钮为&quot;下一步&quot;、&quot;上一步&quot;、&quot;第一个&quot;、&quot;最后一个&quot;，或要导航到页的索引的属性。 引发<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>和<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **注意︰**仅中页导航模板通常使用此类型的按钮。 |  |更新 |&quot;更新&quot;|用于在更新操作中尝试使用由用户提供的值更新数据源中显示的记录。 引发<xref:System.Web.UI.WebControls.FormView.ItemUpdating>和<xref:System.Web.UI.WebControls.FormView.ItemUpdated>事件。 |      与删除不同按钮 （其所显示的记录立即删除），单击编辑或新建按钮时，控件进入编辑 FormView 或插入模式下，分别。</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> 在编辑模式，内容包含在<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>属性显示为当前数据项。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 通常情况下，编辑项模板被定义以便编辑按钮替换为更新和取消按钮。 输入适合于该字段的数据类型的控件 (如<xref:System.Web.UI.WebControls.TextBox>或<xref:System.Web.UI.WebControls.CheckBox>控件) 通常还显示与用户若要修改的字段的值。</xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> 单击更新按钮更新数据源中的记录，而单击取消按钮放弃所有更改。       同样中, 包含的内容<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>当控件处于在插入模式时，将属性显示的数据项。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 插入项模板通常定义，这样新建按钮将替换插入和取消按钮，并且用户以输入新的记录的值显示空的输入的控件。 单击插入按钮时单击取消按钮放弃所有更改无法在数据源中插入记录。       FormView 控件提供分页功能，这样用户就可以导航到其他数据源中的记录。 启用时，包含的页导航控件 FormView 控件中显示页导航行。 若要启用分页，设置<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性`true`。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 可以通过设置中包含的对象的属性来自定义的页导航行<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>和<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>属性。</xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> </xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> 而不是使用内置的页导航行 UI，你可以通过创建自己的 UI<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>属性。</xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>      <a name=&quot;customizing_the_user_interface&quot;></a># # 自定义用户界面你可以通过设置控件的不同部分的样式属性来自定义 FormView 控件的外观。 下表列出不同的样式属性。      |样式属性 |说明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|样式设置为数据行时 FormView 控件处于编辑模式。 |  |<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|如果数据源不包含任何记录 FormView 控件中显示的空数据行的样式设置。 |  |<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|FormView 控件的页脚行的样式设置。 |  |<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|FormView 控件的标题行的样式设置。 |  |<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|数据行时 FormView 控件的样式设置插入模式。 |  |<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|启用分页功能时 FormView 控件中显示的页导航行的样式设置。 |  |<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|FormView 控件是否处于只读模式时的数据行的样式设置。 |     <a name=&quot;events&quot;> </a> # # 事件 FormView 控件提供可以编程的多个事件。</xref:System.Web.UI.WebControls.FormView.RowStyle%2A> </xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> </xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> </xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> 这允许你每次事件发生时运行的自定义的例程。 下表列出 FormView 控件支持的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.ItemCommand>|单击 FormView 控件内的一个按钮时发生。</xref:System.Web.UI.WebControls.FormView.ItemCommand> 此事件通常用于在控件中单击一个按钮时执行的任务。 |  |<xref:System.Web.UI.WebControls.FormView.ItemCreated>|在所有发生<xref:System.Web.UI.WebControls.FormViewRow>FormView 控件中创建对象。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.ItemCreated> 此事件通常用于显示之前修改的记录的值。 |  |<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|时发生的删除按钮 (带有按钮其`CommandName`属性设置为&quot;删除&quot;) 单击后，但后 FormView 控制从数据源中删除记录。</xref:System.Web.UI.WebControls.FormView.ItemDeleted> 此事件通常用于检查删除操作的结果。 |  |<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|单击删除按钮后，但之前 FormView 控件中删除记录从数据源时发生。</xref:System.Web.UI.WebControls.FormView.ItemDeleting> 此事件通常用于取消删除操作。 |  |<xref:System.Web.UI.WebControls.FormView.ItemInserted>|时发生的插入按钮 (带有按钮其`CommandName`属性设置为&quot;Insert&quot;) 单击后，但之后 FormView 控件插入记录。</xref:System.Web.UI.WebControls.FormView.ItemInserted> 此事件通常用于检查插入操作的结果。 |  |<xref:System.Web.UI.WebControls.FormView.ItemInserting>|单击插入按钮后，但之前 FormView 控件插入记录时发生。</xref:System.Web.UI.WebControls.FormView.ItemInserting> 此事件通常用于取消插入操作。 |  |<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|时发生的更新按钮 (带有按钮其`CommandName`属性设置为&quot;更新&quot;) 单击后，但在 FormView 控件更新行。</xref:System.Web.UI.WebControls.FormView.ItemUpdated> 此事件通常用于检查更新操作的结果。 |  |<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|单击更新按钮后，但之前 FormView 控件更新记录时发生。</xref:System.Web.UI.WebControls.FormView.ItemUpdating> 此事件通常用于取消更新操作。 |  |<xref:System.Web.UI.WebControls.FormView.ModeChanged>|FormView 控件更改模式之后发生 （到编辑、 插入或只读模式下）。</xref:System.Web.UI.WebControls.FormView.ModeChanged> 此事件通常用于 FormView 控件更改模式时执行的任务。 |  |<xref:System.Web.UI.WebControls.FormView.ModeChanging>|FormView 控件更改模式之前发生 （到编辑、 插入或只读模式下）。</xref:System.Web.UI.WebControls.FormView.ModeChanging> 此事件通常用于取消模式更改。 |  |<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|在单击某一页导航按钮时，但 FormView 控件处理的分页操作后发生。</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 当你需要在用户定位到另一条记录控件中之后执行的任务时，通常使用此事件。 |  |<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|单击某一页导航按钮时，但之前 FormView 控件处理的分页操作时发生。</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 此事件通常用于取消的分页操作。 |     <a name=&quot;accessibility&quot;> </a> # # 有关如何配置此控件，以使其生成符合辅助功能标准的标记可访问性的信息，请参阅[Visual Studio 和 ASP.NET 中的辅助功能](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 控件和可访问性](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;applying_styles&quot;></a># # 应用 CSS 样式 FormView 控制允许您指定在标记中的 CSS 样式规则。 如果你使用模板来自定义 FormView 控件的外观，则可以在模板中的标记中指定 CSS 样式。 在这种情况下，没有额外的外部表是必需的。 你可以防止通过设置呈现表<xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>属性`false`。</xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:FormView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       DefaultMode=&quot;ReadOnly|Edit|Insert&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       FooterText=&quot;string&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       HeaderText=&quot;string&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDeleted=&quot;ItemDeleted event handler&quot;       OnItemDeleting=&quot;ItemDeleting event handler&quot;       OnItemInserted=&quot;ItemInserted event handler&quot;       OnItemInserting=&quot;ItemInserting event handler&quot;       OnItemUpdated=&quot;ItemUpdated event handler&quot;       OnItemUpdating=&quot;ItemUpdating event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnModeChanged=&quot;ModeChanged event handler&quot;       OnModeChanging=&quot;ModeChanging event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       RenderTable=&quot;True|False&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <EditItemTemplate>               <!-- child controls -->           </EditItemTemplate>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <InsertItemTemplate>               <!-- child controls -->           </InsertItemTemplate>           <InsertRowStyle />           <ItemTemplate>               <!-- child controls -->           </ItemTemplate>           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />   </asp:FormView>   ```"
  example:
  - "The following example demonstrates how to use a FormView control to display the values from a <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-vb[FormViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_1.aspx)]\n [!code-cs[FormViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_1.aspx)]  \n  \n The following example demonstrates how to use a FormView control to edit existing records.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormView#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_2.aspx)]\n [!code-cs[FormView#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_2.aspx)]  \n  \n The following example demonstrates how to use a FormView control to insert new records.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_3.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PageIndexChanging")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("DataKey")]

      [System.Web.UI.SupportsEventValidation]

      public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.IDataItemContainer
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IDataBoundItemControl
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FormView()
  nameWithType: FormView.FormView()
  fullName: System.Web.UI.WebControls.FormView.FormView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>类。"
  remarks: "使用此构造函数初始化<xref:System.Web.UI.WebControls.FormView>类</xref:System.Web.UI.WebControls.FormView>的新实例 若要动态添加<xref:System.Web.UI.WebControls.FormView>控件到页中，创建新的<xref:System.Web.UI.WebControls.FormView>对象、 设置其属性，并将其添加到<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>集合的容器控件，如<xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to dynamically add a <xref:System.Web.UI.WebControls.FormView> control to a page.  \n  \n [!code-vb[FormViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_130_1.aspx)]\n [!code-cs[FormViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public FormView ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: FormView.AllowPaging
  fullName: System.Web.UI.WebControls.FormView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否启用分页功能。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件有内置的分页功能，允许用户导航到数据源中另一条记录。</xref:System.Web.UI.WebControls.FormView> 可与任何支持的数据源对象使用分页功能<xref:System.Collections.ICollection?displayProperty=fullName>接口或支持分页功能的数据源。</xref:System.Collections.ICollection?displayProperty=fullName>       若要启用分页功能，请将 AllowPaging 属性设置为`true`。 你可以使用来确定在基础数据源中的项的总数目<xref:System.Web.UI.WebControls.FormView.PageCount%2A>属性。</xref:System.Web.UI.WebControls.FormView.PageCount%2A> 若要确定当前显示的项的索引，请使用<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>属性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       启用分页后，调用的页导航行的其他行自动显示在<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 页导航行包含的页导航控件，并且可以显示在顶部、 底部，或同时的顶部和底部的控件。 页导航行均有四个内置的页导航显示模式。 下表描述了四个模式。      |模式 |说明 |  |----------|-----------------|  |`PagerButton.NextPrevious`|一组分页控件包含以前和下一步按钮。 |  |`PagerButton.NextPreviousFirstLast`|一组的分页控件组成以前，接下来，第一个和最后一个按钮。 |  |`PagerButton.Numeric`|一组组成的分页控件直接带编号访问页的链接按钮。 这是默认模式。 |  |`PagerButton.NumericFirstLast`|一组编号和第一个和最后一个链接按钮组成的分页控件。 |    &1;> [!NOTE]&1;><xref:System.Web.UI.WebControls.FormView>时数据源包含少于两条记录后，控件将自动隐藏的页导航行。</xref:System.Web.UI.WebControls.FormView>       你可以通过使用来控制的设置 （如页导航显示模式，在时间和页导航控件的文本标签显示的页链接数） 的页导航行<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>属性。</xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> 若要控制 （包括其背景色和字体颜色） 的页导航行的外观，使用<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> <xref:System.Web.UI.WebControls.FormView>控件还允许你定义的页导航行的自定义模板。</xref:System.Web.UI.WebControls.FormView> 有关创建自定义页导航行模板的详细信息，请参阅<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>。</xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>       <xref:System.Web.UI.WebControls.FormView>控件提供可用于在发生分页时执行自定义操作的多个事件。</xref:System.Web.UI.WebControls.FormView> 下表列出了可用的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|单击某一页导航按钮时，但之后时发生<xref:System.Web.UI.WebControls.FormView>控件处理的分页操作。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 当你需要在用户定位到另一条记录控件中之后执行的任务时，通常使用此事件。 |  |<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|单击某一页导航按钮时，之前时发生<xref:System.Web.UI.WebControls.FormView>控件处理的分页操作。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 此事件通常用于取消的分页操作。 |    &1;> [!NOTE]&1;> 更改时，不会引发这些事件<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>属性以编程方式。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>"
  example:
  - "The following example demonstrates how to use the AllowPaging property to enable the paging feature in a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_367_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_367_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要启用分页功能，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
  fullName: System.Web.UI.WebControls.FormView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置背景中显示的图像的 URL <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控件。"
  remarks: "使用 BackImageUrl 属性指定的背景中显示的图像 URL<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>      1> [!NOTE]&1;> 如果指定的映像小于<xref:System.Web.UI.WebControls.FormView>控件，该图像平铺来填充的背景。</xref:System.Web.UI.WebControls.FormView> 如果图像大于控件，裁剪图像。"
  example:
  - "The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_554_1.aspx)]\n [!code-vb[FormViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_554_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "背景中显示的图像 URL <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控件。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
  fullName: System.Web.UI.WebControls.FormView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>对象，表示在底部显示的页导航行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "启用分页后 (时<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性设置为`true`)，一个称为的页导航行附加行会自动显示在<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 页导航行包含允许用户导航到其他记录，并且可以显示在顶部、 底部，或同时的顶部和底部的控件的控件。 使用 BottomPagerRow 属性以编程方式访问<xref:System.Web.UI.WebControls.FormViewRow>对象，表示中的底部页导航行<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>      1> [!NOTE]&1;> BottomPagerRow 属性是之后才可用<xref:System.Web.UI.WebControls.FormView>控件创建中的底部页导航行<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       当你需要以编程方式操作底部页导航行，例如在添加自定义内容时，通常使用此属性。 之后，必须执行对 BottomPagerRow 属性进行任何修改<xref:System.Web.UI.WebControls.FormViewRow>表示底部页导航行的对象已创建; 否则为<xref:System.Web.UI.WebControls.FormView>控件将覆盖任何更改。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>"
  example:
  - "The following example demonstrates how to use the BottomPagerRow property to access the pager row displayed at the bottom of a <xref:System.Web.UI.WebControls.FormView> control. The pager row is then updated with additional content.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_102_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_102_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>对象，表示的底部页导航行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Caption
  nameWithType: FormView.Caption
  fullName: System.Web.UI.WebControls.FormView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要呈现在一个 HTML 标题元素中的文本<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。 提供此属性是以使控件的辅助技术设备用户更易于访问。"
  remarks: "标题属性用于指定要呈现在一个 HTML 标题元素中的文本<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 你指定的文本提供了辅助技术设备可以用于以使控件更易于访问的表的说明。       其他辅助支持<xref:System.Web.UI.WebControls.FormView>控件由<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>属性。</xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> </xref:System.Web.UI.WebControls.FormView> 使用<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>属性来指定 HTML 标题元素中的对齐方式<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Caption property to specify the text for the HTML caption element rendered in a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1078_1.aspx)]\n [!code-cs[FormViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1078_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示要呈现在一个 HTML 标题元素中的文本<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.FormView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
  fullName: System.Web.UI.WebControls.FormView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中的 HTML 标题元素的水平或垂直位置<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。 提供此属性是以使控件的辅助技术设备用户更易于访问。"
  remarks: "使用 CaptionAlign 属性来指定 HTML caption 元素中的水平或垂直位置<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 提供此属性是以使控件的辅助技术设备用户更易于访问。       此属性使用其中一个设置<xref:System.Web.UI.WebControls.TableCaptionAlign>枚举值。</xref:System.Web.UI.WebControls.TableCaptionAlign> 下表列出可能的值。      |值 |说明 |  |-----------|-----------------|  |`TableCaptionAlign.Bottom`|与表的底部对齐的标题元素。 |  |`TableCaptionAlign.Left`|标题元素和表的左侧对齐。 |  |`TableCaptionAlign.NotSet`|未设置标题元素的对齐方式。 |  |`TableCaptionAlign.Right`|与表的右侧对齐的标题元素。 |  |`TableCaptionAlign.Top`|与表的顶部对齐的标题元素。 |    &1;> [!NOTE]&1;> 当此属性设置为`TableCaptionAlign.NotSet`，则使用的浏览器的默认值。       其他辅助支持<xref:System.Web.UI.WebControls.FormView>控件由<xref:System.Web.UI.WebControls.FormView.Caption%2A>属性。</xref:System.Web.UI.WebControls.FormView.Caption%2A> </xref:System.Web.UI.WebControls.FormView> 使用<xref:System.Web.UI.WebControls.FormView.Caption%2A>属性来指定要呈现在一个 HTML 标题元素中的文本<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.Caption%2A>"
  example:
  - "The following example demonstrates how to use the CaptionAlign property to specify that the HTML caption element in a <xref:System.Web.UI.WebControls.FormView> control should be rendered on the left side of the control.  \n  \n [!code-vb[FormViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_449_1.aspx)]\n [!code-cs[FormViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_449_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "之一<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是之一<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>枚举值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CellPadding
  nameWithType: FormView.CellPadding
  fullName: System.Web.UI.WebControls.FormView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置单元格的内容和单元格的边框之间的空间量。"
  remarks: "CellPadding 属性用于控制单元格的内容和单元格的边框之间的间距。 指定的填充量添加到单元格的所有四个边。       同一列中的所有单元格<xref:System.Web.UI.WebControls.FormView>控件具有相同的宽度。</xref:System.Web.UI.WebControls.FormView> 填充量应用于宽的单元格和列中的所有其他单元格调整为该单元格宽度。 同样，在同一行中的所有单元格具有高度相同。 填充量应用于行中最高的单元格和行中的所有其他单元格调整为该单元格高度。 不能指定单个单元格的大小。       若要调整单元格之间的间距，使用<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>属性。</xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>      1> [!NOTE]&1;> 时未设置此属性，则使用的浏览器的默认值。"
  example:
  - "The following example demonstrates how to use the CellPadding property to specify the amount of spacing between the contents of a cell and the cell's border.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_693_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_693_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "以像素为单位的单元格的内容和单元格的边框之间的空间量。 默认值为-1，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: FormView.CellSpacing
  fullName: System.Web.UI.WebControls.FormView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置单元格之间的空间量。"
  remarks: "使用 CellSpacing 属性来控制中的相邻单元格之间的间距<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 在垂直方向和水平应用此间距。 该单元格间距是为整个控件统一。 不能指定行或列之间的单个单元格间距。      1> [!NOTE] 1> 如果将此属性设置为一个值大于 0，然后设置<xref:System.Web.UI.WebControls.FormView.GridLines%2A>属性为一个值，显示单元格边框，相邻的单元格边框之间显示间距。</xref:System.Web.UI.WebControls.FormView.GridLines%2A> 在此情况下，CellSpacing 属性控制的差异大小。       若要调整单元格的内容和单元格的边框之间的间距，使用<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>属性。</xref:System.Web.UI.WebControls.FormView.CellPadding%2A>"
  example:
  - "The following example demonstrates how to use the CellSpacing property to specify the amount of spacing between adjacent cells.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_130_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "以像素为单位的单元格之间的空间量。 默认值为 0"
  overload: System.Web.UI.WebControls.FormView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  id: ChangeMode(System.Web.UI.WebControls.FormViewMode)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ChangeMode(FormViewMode)
  nameWithType: FormView.ChangeMode(FormViewMode)
  fullName: System.Web.UI.WebControls.FormView.ChangeMode(FormViewMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "交换机<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>到指定的数据输入模式的控件。"
  remarks: "使用 ChangeMode 方法以编程方式切换<xref:System.Web.UI.WebControls.FormView>之间编辑、 insert 和只读模式的控件。</xref:System.Web.UI.WebControls.FormView> 此方法还会更新<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>使用指定的模式的属性。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 下表列出了不同的模式值。      |模式 |说明 |  |----------|-----------------|  |`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式，这样用户就可以更新的记录的值。 |  |`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>控件是在插入模式下，这样用户就可以将一条新记录添加到数据源。 |  |`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>控件处于只读模式，这是正常的显示模式。 |    &1;> [!NOTE]&1;><xref:System.Web.UI.WebControls.FormView.ModeChanged>和<xref:System.Web.UI.WebControls.FormView.ModeChanging>时调用此方法，将不会引发事件。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the ChangeMode method to return the <xref:System.Web.UI.WebControls.FormView> control to read-only mode whenever the user navigates to another record.  \n  \n [!code-cs[FormViewChangeMode#1](~/add/codesnippet/csharp/662370c4-5409-4672-aaf8-_1.aspx)]\n [!code-vb[FormViewChangeMode#1](~/add/codesnippet/visualbasic/662370c4-5409-4672-aaf8-_1.aspx)]"
  syntax:
    content: public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);
    parameters:
    - id: newMode
      type: System.Web.UI.WebControls.FormViewMode
      description: "之一<xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref>枚举值。"
  overload: System.Web.UI.WebControls.FormView.ChangeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: FormView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.FormView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建用于呈现的控件层次结构<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>与指定的数据源的控件。"
  remarks: "CreateChildControls 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件创建的控件层次结构<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 当`dataBinding`参数是`true`，创建控件层次结构之前执行数据绑定。"
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>，表示用于创建控件层次结构的数据源。</xref:System.Collections.IEnumerable>"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>以指示控件层次结构直接从数据源; 创建<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以指示控件层次结构从创建的视图状态。"
    return:
      type: System.Int32
      description: "从数据源创建的项的数目。"
  overload: System.Web.UI.WebControls.FormView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>的<xref href=&quot;System.Web.UI.IDataSource&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件绑定是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: FormView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.FormView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "为创建一个默认表样式对象<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "CreateControlStyle 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件来创建其默认表样式对象。</xref:System.Web.UI.WebControls.FormView> 除了设置的默认样式<xref:System.Web.UI.WebControls.TableStyle>对象时，此方法还将设置<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>属性设为 0。</xref:System.Web.UI.WebControls.FormView.CellPadding%2A> </xref:System.Web.UI.WebControls.TableStyle>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> ，其中包含的默认表样式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: FormView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建<xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;></xref>包含传递到数据源以进行处理的自变量的对象。"
  remarks: "CreateDataSourceSelectArguments 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件创建<xref:System.Web.UI.DataSourceSelectArguments>对象，其中包含自变量传递到数据源。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.FormView> 在此实现中，<xref:System.Web.UI.DataSourceSelectArguments>对象包含分页操作的自变量。</xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> ，其中包含传递给数据源的自变量。"
  overload: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>对象使用指定的项索引、 行类型和行状态。"
  remarks: "CreateRow 方法是调用的帮助器方法<xref:System.Web.UI.WebControls.FormView>控件创建<xref:System.Web.UI.WebControls.FormViewRow>对象用于表示在控件内的行。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "要显示的数据项的从零开始的索引。"
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "之一<xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;></xref>枚举值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "按位组合<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>枚举值。"
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>使用指定的项索引、 行类型和行状态。"
  overload: System.Web.UI.WebControls.FormView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateTable
  id: CreateTable
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateTable()
  nameWithType: FormView.CreateTable()
  fullName: System.Web.UI.WebControls.FormView.CreateTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建的包含表<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "CreateTable 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件以创建充当控件容器的表。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "A <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref>表示的包含表<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CurrentMode
  id: CurrentMode
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CurrentMode
  nameWithType: FormView.CurrentMode
  fullName: System.Web.UI.WebControls.FormView.CurrentMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取当前的数据输入模式的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "使用 CurrentMode 属性来确定是否<xref:System.Web.UI.WebControls.FormView>控件处于编辑、 插入或只读模式。</xref:System.Web.UI.WebControls.FormView> 下表列出了不同的模式值。      |模式 |说明 |  |----------|-----------------|  |`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式，这样用户就可以更新的记录的值。 |  |`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>控件是在插入模式下，这样用户就可以将一条新记录添加到数据源。 |  |`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>控件处于只读模式，这是正常的显示模式。 |      通常会自动设置此值<xref:System.Web.UI.WebControls.FormView>控制时单击新建、 更新、 插入、 删除或取消命令按钮。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 当<xref:System.Web.UI.WebControls.FormView>控件更改的操作的响应中的模式，则下表中的事件引发。</xref:System.Web.UI.WebControls.FormView> 这允许你创建的自定义事件处理程序在事件发生时执行的适当的例程。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.ModeChanged>|发生时<xref:System.Web.UI.WebControls.FormView>控件更改模式，但在模式更改之后。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 此事件通常用于执行某项任务，每当<xref:System.Web.UI.WebControls.FormView>控件更改模式。 |  |<xref:System.Web.UI.WebControls.FormView.ModeChanging>|发生时<xref:System.Web.UI.WebControls.FormView>控件更改模式，但之前的模式下更改。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> 此事件通常用于取消模式更改。 |      **注意**你更改模式时以编程方式使用，不会引发这些事件<xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>方法。</xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>"
  example:
  - "The following example demonstrates how to use the CurrentMode property to determine whether the <xref:System.Web.UI.WebControls.FormView> control is in edit, insert, or read-only mode. If the user attempts to navigate to another record while the <xref:System.Web.UI.WebControls.FormView> control is in edit more, the paging operation is canceled.  \n  \n [!code-cs[FormViewCurrentMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_817_1.aspx)]\n [!code-vb[FormViewCurrentMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_817_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "之一<xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref>值。"
  overload: System.Web.UI.WebControls.FormView.CurrentMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataBind()
  nameWithType: FormView.DataBind()
  fullName: System.Web.UI.WebControls.FormView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将绑定到数据源<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "数据绑定方法用于将数据绑定到数据源从<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 此方法会解析所有活动模板中的控件的数据绑定表达式。"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItem
  nameWithType: FormView.DataItem
  fullName: System.Web.UI.WebControls.FormView.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取绑定的数据项<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "使用要访问该数据项目的 DataItem 属性绑定到<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 数据项目通常用于直接访问当前记录的字段值。 一种<xref:System.Object>返回此属性而异的数据源。</xref:System.Object> 例如，当<xref:System.Web.UI.WebControls.SqlDataSource>控件绑定到<xref:System.Web.UI.WebControls.FormView>控件，<xref:System.Data.DataRowView>返回对象。</xref:System.Data.DataRowView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.SqlDataSource>      1> [!NOTE]&1;> 仅在数据绑定发生后，此属性才可用。 数据绑定发生前，此属性返回`null`。 此属性也并不适用时<xref:System.Web.UI.WebControls.FormView>控件处于插入模式，并返回`null`。</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DataItem property to determine the value of a field in the data item.  \n  \n [!code-vb[FormViewCtor#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_191_1.aspx)]\n [!code-cs[FormViewCtor#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_191_1.aspx)]"
  syntax:
    content: public virtual object DataItem { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>表示数据项是否绑定到<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItemCount
  id: DataItemCount
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItemCount
  nameWithType: FormView.DataItemCount
  fullName: System.Web.UI.WebControls.FormView.DataItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在数据源中获取数据项目数。"
  remarks: "DataItemCount 属性用于确定数据源中包含的数据项目数。 此属性包含与相同的值<xref:System.Web.UI.WebControls.FormView.PageCount%2A>属性。</xref:System.Web.UI.WebControls.FormView.PageCount%2A>"
  syntax:
    content: public int DataItemCount { get; }
    return:
      type: System.Int32
      description: "数据源中的数据项目数。"
  overload: System.Web.UI.WebControls.FormView.DataItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItemIndex
  id: DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取的项的索引数据绑定到<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>从数据源的控件。"
  remarks: "要确定数据项的索引的 DataItemIndex 属性绑定到的使用<xref:System.Web.UI.WebControls.FormView>从数据源的控件。</xref:System.Web.UI.WebControls.FormView> 此属性包含与相同的值<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>属性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>      1> [!NOTE]&1;> 此属性不适用<xref:System.Web.UI.WebControls.FormView>控件是否处于插入模式。</xref:System.Web.UI.WebControls.FormView> 在插入模式控制时，DataItemIndex 属性将返回-1。"
  syntax:
    content: public virtual int DataItemIndex { get; }
    return:
      type: System.Int32
      description: "数据项的索引绑定到<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>从数据源的控件。"
  overload: System.Web.UI.WebControls.FormView.DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataKey
  id: DataKey
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataKey
  nameWithType: FormView.DataKey
  fullName: System.Web.UI.WebControls.FormView.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref>对象，表示所显示的记录的主键。"
  remarks: "当<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>设置属性，<xref:System.Web.UI.WebControls.FormView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>对象，其中包含的字段或字段中列出的键/值对<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>当前记录的属性。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 使用数据键属性来获取这<xref:System.Web.UI.WebControls.DataKey>对象。</xref:System.Web.UI.WebControls.DataKey> 此属性通常用于获取键和其对应的值中指定的字段<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>属性。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>      1> [!NOTE]&1;> 快捷方式，你还可以使用<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>属性来确定第一个键字段中列出的值<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>属性。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>"
  example:
  - "The following example demonstrates how to use the DataKey property to determine the value of the key field.  \n  \n [!code-cs[FormViewDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1171_1.aspx)]\n [!code-vb[FormViewDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1171_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref>对象，表示所显示的记录的主键。"
  overload: System.Web.UI.WebControls.FormView.DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个数组，包含数据源的键字段的名称。"
  remarks: "将字段名属性用于指定逗号分隔的表示数据源的主键值的字段名称列表。 当将字段名属性设置时，<xref:System.Web.UI.WebControls.FormView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>当前记录将字段名属性中列出的对象，其中包含的字段或字段的键/值对。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.DataKey>对象然后存储在<xref:System.Web.UI.WebControls.FormView.DataKey%2A>属性。</xref:System.Web.UI.WebControls.FormView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey>      1> [!NOTE]&1;> 必须设置为内置更新、 删除和插入的功能将字段名属性<xref:System.Web.UI.WebControls.FormView>控制工作。</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DataKeyNames property to specify the key field for the data source bound to the <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "包含数据源的键字段的名称的数组。"
  overload: System.Web.UI.WebControls.FormView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DefaultMode
  id: DefaultMode
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DefaultMode
  nameWithType: FormView.DefaultMode
  fullName: System.Web.UI.WebControls.FormView.DefaultMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置到的数据输入模式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制更新后，将返回插入，或取消操作。"
  remarks: "DefaultMode 属性用于指定是否<xref:System.Web.UI.WebControls.FormView>控件返回到编辑、 插入或只读模式更新后，执行插入、 或取消操作。</xref:System.Web.UI.WebControls.FormView> 默认情况下，<xref:System.Web.UI.WebControls.FormView>控件返回到只读模式; 但是，你可以保留<xref:System.Web.UI.WebControls.FormView>在编辑中的控制，或者通过将此属性设置为适当的值插入模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 下表列出了不同的模式值。      |模式 |说明 |  |----------|-----------------|  |`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式，这样用户就可以更新的记录的值。 |  |`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>控件是在插入模式下，这样用户就可以将一条新记录添加到数据源。 |  |`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>控件处于只读模式，这是正常的显示模式。 |      此属性通常是时使用<xref:System.Web.UI.WebControls.FormView>控件具有单一用途，如仅要插入或编辑记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DefaultMode property to keep a <xref:System.Web.UI.WebControls.FormView> control in edit mode after an update operation.  \n  \n [!code-vb[FormViewDefaultMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_229_1.aspx)]\n [!code-cs[FormViewDefaultMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_229_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "之一<xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_FormViewMode.ReadOnly&quot; name=&quot;FormViewMode.ReadOnly&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.DefaultMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是之一<xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref>枚举值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DeleteItem
  id: DeleteItem
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DeleteItem()
  nameWithType: FormView.DeleteItem()
  fullName: System.Web.UI.WebControls.FormView.DeleteItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "删除中的当前记录<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>从数据源的控件。"
  remarks: "每当方法用于以编程方式删除中的当前记录<xref:System.Web.UI.WebControls.FormView>从数据源的控件。</xref:System.Web.UI.WebControls.FormView> 此方法通常用时您需要删除当前记录从外部<xref:System.Web.UI.WebControls.FormView>控制，例如页上的其他控件。</xref:System.Web.UI.WebControls.FormView> 调用此方法也会引发<xref:System.Web.UI.WebControls.FormView.ItemDeleted>和<xref:System.Web.UI.WebControls.FormView.ItemDeleting>事件。</xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted>"
  example:
  - "The following example demonstrates how to use the DeleteItem method to programmatically delete the current record in a <xref:System.Web.UI.WebControls.FormView> control from the data source.  \n  \n [!code-vb[FormViewDeleteItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_190_1.aspx)]\n [!code-cs[FormViewDeleteItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_190_1.aspx)]"
  syntax:
    content: public virtual void DeleteItem ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.DeleteItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
  fullName: System.Web.UI.WebControls.FormView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于控件执行删除操作时调用的页面上的方法的名称。"
  remarks: "在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "当控件执行删除操作时调用的页上的方法名称。"
  overload: System.Web.UI.WebControls.FormView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
  fullName: System.Web.UI.WebControls.FormView.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置项的自定义内容处于编辑模式。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件呈现控件的当前模式所基于的数据行的不同模板 (指定的<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>属性)。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 下表显示每种模式使用哪个模板。      |模式 |呈现的模板 |  |----------|-----------------------|  |编辑 |EditItemTemplate |  |插入 |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  |只读 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|      使用 EditItemTemplate 属性来定义你自己的用户界面 (UI) 的数据行时<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 编辑项模板通常包含要更新现有记录，以及更新的记录，并用于取消更新操作的命令按钮的值的用户的输入的控件。       若要指定自定义模板、 首先`<EditItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 然后可以列出在开始和结束之间模板的内容`<EditItemTemplate>`标记。 通过使用双向绑定表达式，可以将字段与输入控件相关联。 这允许<xref:System.Web.UI.WebControls.FormView>控件可以自动在处于编辑模式关联的输入控件中显示原始的字段值。</xref:System.Web.UI.WebControls.FormView> 当更新某个记录时，<xref:System.Web.UI.WebControls.FormView>控件从关联的输入控件中自动提取更新的字段值。</xref:System.Web.UI.WebControls.FormView> 双向绑定表达式的详细信息，请参阅[绑定到数据库](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。 若要创建执行内置的取消和更新操作的命令按钮，请将命令按钮控件添加到模板的模板其`CommandName`下表中列出的属性设置为值之一。      |命令按钮类型 |CommandName 值 |  |-------------------------|-----------------------|  |取消 |&quot;取消&quot;|  |更新 |&quot;更新&quot;|      你可以通过使用来控制的项模板的外观<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in edit mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_886_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_886_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，包含的数据的自定义内容时行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件处于编辑模式。 默认值为 null，表示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
  fullName: System.Web.UI.WebControls.FormView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，它允许你设置数据的外观时行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件处于编辑模式。"
  remarks: "要控制数据的外观的 EditRowStyle 属性行时使用<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式。</xref:System.Web.UI.WebControls.FormView> 当<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式时，数据行显示由指定的用户定义的内容<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>属性。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.FormView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `EditRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -嵌套`<EditRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `EditRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the EditRowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in edit mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1022_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1022_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，表示数据的样式时行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件处于编辑模式。"
  overload: System.Web.UI.WebControls.FormView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，您可以设置显示当数据源绑定到的空数据行的外观<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件不包含任何记录。"
  remarks: "使用 EmptyDataRowStyle 属性来控制中的空数据行的外观<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 绑定到控件的数据源不包含任何记录，则会显示空数据行。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.FormView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `EmptyDataRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -嵌套`<EmptyDataRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `EmptyDataRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the EmptyDataRowStyle property to specify a custom style for the empty data row displayed when a <xref:System.Web.UI.WebControls.FormView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[FormViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1010_1.aspx)]\n [!code-vb[FormViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1010_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，允许您设置的空数据行的外观。"
  overload: System.Web.UI.WebControls.FormView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的用户定义的内容，空的数据行中呈现时<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件绑定到数据源不包含任何记录。"
  remarks: "空数据行显示在<xref:System.Web.UI.WebControls.FormView>控制当绑定到控件的数据源不包含任何记录。</xref:System.Web.UI.WebControls.FormView> 可以通过使用要属性定义为空的数据行自己自定义用户界面 (UI)。 若要指定自定义模板为空的数据行，第一次将`<EmptyDataTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 然后可以列出在开始和结束之间模板的内容`<EmptyDataTemplate>`标记。 若要控制空数据行的样式，使用<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 或者，你可以使用内置用户界面为空的数据行通过设置<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>而不是此属性的属性。</xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>      1> [!NOTE]&1;> 如果这两个<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>和要设置、 要属性优先。</xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>"
  example:
  - "The following example demonstrates how to define a custom template for the empty data row displayed when a <xref:System.Web.UI.WebControls.FormView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[FormViewEmptyDataTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1213_1.aspx)]\n [!code-vb[FormViewEmptyDataTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1213_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含空的数据行的自定义内容。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
  fullName: System.Web.UI.WebControls.FormView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要在空的数据行中显示的文本呈现时<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件绑定到数据源不包含任何记录。"
  remarks: "空数据行显示在<xref:System.Web.UI.WebControls.FormView>控制当绑定到控件的数据源不包含任何记录。</xref:System.Web.UI.WebControls.FormView> EmptyDataText 属性用于指定要在空的数据行中显示的文本。 若要控制空数据行的样式，使用<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 或者，可以通过设置定义为空的数据行自己自定义用户界面 (UI)<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>而不是此属性的属性。</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>      1> [!NOTE]&1;> 如果这两个 EmptyDataText 和<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>设置属性，<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>属性优先。</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-cs[FormViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1210_1.aspx)]\n [!code-vb[FormViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1210_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "要在空数据行中显示的文本。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
  fullName: System.Web.UI.WebControls.FormView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否验证程序控件将处理在 insert 过程中发生或更新操作的异常。"
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果验证程序控件将处理异常，在 insert 过程中发生或更新操作;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound
  id: EnsureDataBound
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EnsureDataBound()
  nameWithType: FormView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.FormView.EnsureDataBound()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "进行某些<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件绑定到数据在适当的时候。"
  remarks: "EnsureDataBound 方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>类，以确保<xref:System.Web.UI.WebControls.FormView>控件绑定到数据在适当的时候。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> EnsureDataBound 方法通常称为期间<xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A>方法以将控件绑定到数据源时数据绑定控件尚未绑定，但需要数据绑定。</xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> 此版本的方法已被重写，以防止发生数据绑定时<xref:System.Web.UI.WebControls.FormView>控件是否处于插入模式。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void EnsureDataBound ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.EnsureDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,Boolean)
  nameWithType: FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  fullName: System.Web.UI.WebControls.FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "检索的数据行中声明每个字段的值，并将其存储在指定<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>对象。"
  remarks: "ExtractRowValues 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>要检索的数据行中声明每个字段的值控件。</xref:System.Web.UI.WebControls.FormView> 由于数据行显示了基于当前模式的其他模板，则此方法检索对应于当前的模式的模板中声明的字段值。 下表显示可用的模式和相应的模板。      |模式 |模板 |  |----------|--------------|  |插入 |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  |编辑 |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  |只读 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|      你可以指定提取的值使用是否包含键字段`includeKeys`参数。</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>"
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>用于存储当前的数据项目的字段值。"
    - id: includeKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含密钥字段;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterRow
  nameWithType: FormView.FooterRow
  fullName: System.Web.UI.WebControls.FormView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>对象，表示中的页脚行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在底部显示页脚行<xref:System.Web.UI.WebControls.FormView>控制<xref:System.Web.UI.WebControls.FormView.FooterText%2A>或<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>属性设置。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> 使用 FooterRow 属性以编程方式访问<xref:System.Web.UI.WebControls.FormViewRow>表示的页脚行的对象。</xref:System.Web.UI.WebControls.FormViewRow>      1> [!NOTE]&1;> FooterRow 属性是之后才可用<xref:System.Web.UI.WebControls.FormView>控件创建中的页脚行<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       当你需要以编程方式操作页脚行中的，例如在添加自定义内容时，通常使用此属性。 之后，必须执行对 FooterRow 属性进行任何修改<xref:System.Web.UI.WebControls.FormView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.FormView>控件将覆盖任何更改。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>       若要控制页脚行的样式，使用<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>"
  example:
  - "The following example demonstrates how to use the FooterRow property to programmatically modify the properties of the footer row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-vb[FormViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_364_1.aspx)]\n [!code-cs[FormViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_364_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>表示中的页脚行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: FormView.FooterStyle
  fullName: System.Web.UI.WebControls.FormView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，它允许你设置中的页脚行的外观<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在底部显示页脚行<xref:System.Web.UI.WebControls.FormView>控制<xref:System.Web.UI.WebControls.FormView.FooterText%2A>或<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>属性设置。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> 使用 FooterStyle 属性来控制中的页脚行的外观<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.FormView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `FooterStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -嵌套`<FooterStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `FooterStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the FooterStyle property to specify a custom style for the footer row.  \n  \n [!code-cs[FormViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1350_1.aspx)]\n [!code-vb[FormViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1350_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>该对象表示中的页脚行样式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
  fullName: System.Web.UI.WebControls.FormView.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中的页脚行的用户定义内容<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在底部显示页脚行<xref:System.Web.UI.WebControls.FormView>控制<xref:System.Web.UI.WebControls.FormView.FooterText%2A>或要属性被设置。</xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> 通过使用要属性，可以为脚注行定义你自己的自定义用户界面 (UI)。 若要指定自定义模板的页脚行，第一次将`<FooterTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 然后可以列出在开始和结束之间模板的内容`<FooterTemplate>`标记。 若要控制页脚行的样式，使用<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 或者，你可以只是显示文本的页脚行中通过设置<xref:System.Web.UI.WebControls.FormView.FooterText%2A>而不是此属性的属性。</xref:System.Web.UI.WebControls.FormView.FooterText%2A>      1> [!NOTE]&1;> 如果这两个<xref:System.Web.UI.WebControls.FormView.FooterText%2A>和要设置、 要属性优先。</xref:System.Web.UI.WebControls.FormView.FooterText%2A>"
  example:
  - "The following example demonstrates how to use the FooterTemplate property to define a custom template to render for the footer row.  \n  \n [!code-vb[FormViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1258_1.aspx)]\n [!code-cs[FormViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1258_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含页脚行的自定义内容。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterText
  nameWithType: FormView.FooterText
  fullName: System.Web.UI.WebControls.FormView.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要显示的页脚行中的文本<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在底部显示页脚行<xref:System.Web.UI.WebControls.FormView>控制 FooterText 或<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>属性设置。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView> FooterText 属性用于指定要显示在页脚行中的文本。 若要控制页脚行的样式，使用<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 或者，你可以定义自己的自定义用户界面 (UI) 的页脚行通过设置<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>而不是此属性的属性。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>      1> [!NOTE]&1;> 如果这两个 FooterText 和<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>设置属性，<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>属性优先。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the FooterText property to specify the text to display in the footer row.  \n  \n [!code-cs[FormViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_904_1.aspx)]\n [!code-vb[FormViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_904_1.aspx)]"
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "要显示在页脚行中的文本。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: GridLines
  nameWithType: FormView.GridLines
  fullName: System.Web.UI.WebControls.FormView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置网格线样式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "使用网格线属性指定的网格线样式<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 下表列出可用的样式。      |样式 |说明 |  |-----------|-----------------|  |`GridLines.None`|显示没有网格线。 |  |`GridLines.Horizontal`|显示水平网格线。 |  |`GridLines.Vertical`|显示垂直网格线。 |  |`GridLines.Both`|显示水平和垂直网格。 |"
  example:
  - "The following example demonstrates how to use the GridLines property to display both the vertical and horizontal gridlines.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_236_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "之一<xref href=&quot;System.Web.UI.WebControls.GridLines&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_GridLines.None&quot; name=&quot;GridLines.None&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: FormView.HeaderRow
  fullName: System.Web.UI.WebControls.FormView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>对象，表示中的标题行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在顶部显示标题行<xref:System.Web.UI.WebControls.FormView>控制<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>或<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>属性设置。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> 使用 HeaderRow 属性以编程方式访问<xref:System.Web.UI.WebControls.FormViewRow>表示标头行的对象。</xref:System.Web.UI.WebControls.FormViewRow>      1> [!NOTE]&1;> HeaderRow 属性是之后才可用<xref:System.Web.UI.WebControls.FormView>控件创建中的标题行<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       当你需要以编程方式操作标头行，例如，添加自定义的内容时，通常使用此属性。 之后，必须执行对 HeaderRow 属性进行任何修改<xref:System.Web.UI.WebControls.FormView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.FormView>控件将覆盖任何更改。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the HeaderRow property to programmatically modify the properties of the header row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-vb[FormViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_518_1.aspx)]\n [!code-cs[FormViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_518_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>表示中的标题行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
  fullName: System.Web.UI.WebControls.FormView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，它允许你设置中的标题行的外观<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在顶部显示标题行<xref:System.Web.UI.WebControls.FormView>控制<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>或<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>属性设置。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> 使用 HeaderStyle 属性来控制中的标题行的外观<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.FormView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `HeaderStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -嵌套`<HeaderStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `HeaderStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the HeaderStyle property to specify a custom style for the header row.  \n  \n [!code-vb[FormViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1059_1.aspx)]\n [!code-cs[FormViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1059_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的标题行的样式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
  fullName: System.Web.UI.WebControls.FormView.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置标题行中的用户定义内容<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在顶部显示标题行<xref:System.Web.UI.WebControls.FormView>控制<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>或 HeaderTemplate 属性被设置。</xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> 通过使用 HeaderTemplate 属性，可以为标题行定义你自己的自定义用户界面 (UI)。 若要指定自定义模板的标头行，第一次将`<HeaderTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 然后可以列出在开始和结束之间模板的内容`<HeaderTemplate>`标记。 若要控制标头行的样式，使用<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 或者，你可以只是显示文本标题行中通过设置<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>而不是此属性的属性。</xref:System.Web.UI.WebControls.FormView.HeaderText%2A>      1> [!NOTE]&1;> 如果这两个<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>和 HeaderTemplate 属性已设置; HeaderTemplate 属性优先。</xref:System.Web.UI.WebControls.FormView.HeaderText%2A>"
  example:
  - "The following example demonstrates how to use the HeaderTemplate property to define a custom template to render for the header row.  \n  \n [!code-vb[FormViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1060_1.aspx)]\n [!code-cs[FormViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1060_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含标头行的自定义内容。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderText
  nameWithType: FormView.HeaderText
  fullName: System.Web.UI.WebControls.FormView.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要显示的标题行中的文本<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在顶部显示标题行<xref:System.Web.UI.WebControls.FormView>控制 HeaderText 或<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>属性设置。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView> HeaderText 属性用于指定要显示的标题行中的文本。 若要控制标头行的样式，使用<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 或者，你可以定义自己的自定义用户界面 (UI) 的标头行通过设置<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>而不是此属性的属性。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>      1> [!NOTE]&1;> 如果这两个 HeaderText 和<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>设置属性，<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>属性优先。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the HeaderText property to specify the text to display in the header row.  \n  \n [!code-vb[FormViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1225_1.aspx)]\n [!code-cs[FormViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1225_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "要在标题行中显示的文本。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
  fullName: System.Web.UI.WebControls.FormView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的水平对齐方式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>页上的控件。"
  remarks: "使用 HorizontalAlign 属性指定的水平对齐方式<xref:System.Web.UI.WebControls.FormView>页内的控件。</xref:System.Web.UI.WebControls.FormView> 下表列出了不同的水平对齐样式。      |HorizontalAlign 值 |说明 |  |---------------------------|-----------------|  |`HorizontalAlign.NotSet`|尚未设置<xref:System.Web.UI.WebControls.FormView>控件的水平对齐方式。 |  |`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView>控件是左对齐页面上。 |  |`HorizontalAlign.Center`|在页面上居中<xref:System.Web.UI.WebControls.FormView>控件。 |  |`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView>控件是右对齐的页上的对齐。 |  |`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView>控件对齐与页面的左侧和右侧页边距。 |</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the HorizontalAlign property to specify that a <xref:System.Web.UI.WebControls.FormView> control should be centered on the page.  \n  \n [!code-vb[FormViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1047_1.aspx)]\n [!code-cs[FormViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1047_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "之一<xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;></xref>值。 默认值是<xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InitializePager(FormViewRow,PagedDataSource)
  nameWithType: FormView.InitializePager(FormViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.FormView.InitializePager(FormViewRow,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建的页导航行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "InitializePager 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件创建的页导航行。</xref:System.Web.UI.WebControls.FormView> 它将创建<xref:System.Web.UI.WebControls.TableCell>对象，其中包含使用的属性导航控件<xref:System.Web.UI.WebControls.PagedDataSource>对象中包含`pagedDataSource`参数。</xref:System.Web.UI.WebControls.PagedDataSource> </xref:System.Web.UI.WebControls.TableCell> 然后将单元格添加到指定的行的`row`参数。"
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>包含的页导航行。"
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref>包含当前网页的数据。"
  overload: System.Web.UI.WebControls.FormView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  id: InitializeRow(System.Web.UI.WebControls.FormViewRow)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InitializeRow(FormViewRow)
  nameWithType: FormView.InitializeRow(FormViewRow)
  fullName: System.Web.UI.WebControls.FormView.InitializeRow(FormViewRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>对象。"
  remarks: "InitializeRow 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件来初始化指定<xref:System.Web.UI.WebControls.FormViewRow>对象。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormViewRow>对象初始化的行类型和指定的行状态其<xref:System.Web.UI.WebControls.FormViewRow.RowType%2A>和<xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>属性，分别。</xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> </xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> </xref:System.Web.UI.WebControls.FormViewRow> 然后将合适的内容添加到<xref:System.Web.UI.WebControls.FormViewRow>对象。</xref:System.Web.UI.WebControls.FormViewRow> 下表描述了如何初始化每个行类型。      |行类型 |说明 |  |--------------|-----------------|  |数据行 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>，内容<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>，或<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>属性添加到<xref:System.Web.UI.WebControls.FormViewRow>对象，具体取决于<xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>属性的值。 |  |空数据行 |值<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>属性或的内容<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>属性添加到<xref:System.Web.UI.WebControls.FormViewRow>对象，具体取决于设置属性。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> </xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> </xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> 如果设置这两个属性，<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>属性优先。 |  |页脚行 |值<xref:System.Web.UI.WebControls.FormView.FooterText%2A>属性或的内容<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>属性添加到<xref:System.Web.UI.WebControls.FormViewRow>对象，具体取决于设置属性。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 如果设置这两个属性，<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>属性优先。 |  |标头行 |值<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>属性或的内容<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>属性添加到<xref:System.Web.UI.WebControls.FormViewRow>对象，具体取决于设置属性。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 如果设置这两个属性，<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>属性优先。 |    &1;> [!NOTE]&1;> 此方法未初始化的页导航行。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 若要创建的页导航行，使用<xref:System.Web.UI.WebControls.FormView.InitializePager%2A>方法。</xref:System.Web.UI.WebControls.FormView.InitializePager%2A>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>初始化。"
  overload: System.Web.UI.WebControls.FormView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  id: InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertItem(Boolean)
  nameWithType: FormView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.InsertItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在数据源中插入当前记录。"
  remarks: "当<xref:System.Web.UI.WebControls.FormView>控件位于在插入模式中，使用 InsertItem 方法以编程方式在数据源中插入当前记录。</xref:System.Web.UI.WebControls.FormView> 此方法通常用时需要插入当前记录从外部<xref:System.Web.UI.WebControls.FormView>控制，例如页上的其他控件。</xref:System.Web.UI.WebControls.FormView>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.FormView>调用; 否则为此方法时，控件必须在插入模式下<xref:System.Web.HttpException>引发。</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.FormView>       若要指定是否在插入操作之前执行页验证，使用`causesValidation`参数。 调用此方法也会引发<xref:System.Web.UI.WebControls.FormView.ItemInserted>和<xref:System.Web.UI.WebControls.FormView.ItemInserting>事件。</xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted>"
  example:
  - "The following example demonstrates how to use the InsertItem method to programmatically insert the current record in a <xref:System.Web.UI.WebControls.FormView> control in the data source.  \n  \n [!code-cs[FormViewInsertItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_157_1.aspx)]\n [!code-vb[FormViewInsertItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_157_1.aspx)]"
  syntax:
    content: public virtual void InsertItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>当此方法叫做; 执行页验证否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.InsertItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当调用此方法<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件不在插入模式。       -或- <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>与关联的对象<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件为 null。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
  fullName: System.Web.UI.WebControls.FormView.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置在插入模式中的某个项目的自定义内容。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件呈现控件的当前模式所基于的数据行的不同模板 (指定的<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>属性)。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 下表显示每种模式使用哪个模板。      |模式 |呈现的模板 |  |----------|-----------------------|  |编辑 |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  |插入 |InsertItemTemplate |  |只读 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|      使用 InsertItemTemplate 属性来定义你自己的用户界面 (UI) 的数据行时<xref:System.Web.UI.WebControls.FormView>控件是否处于插入模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 插入项模板通常包含要为新记录中，输入值，以及命令按钮用于插入记录，并用于取消插入操作的用户的输入的控件。       若要指定自定义模板、 首先`<InsertItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 然后可以列出在开始和结束之间模板的内容`<InsertItemTemplate>`标记。 通过使用双向绑定表达式，可以将字段与输入控件相关联。 当插入一条记录时，<xref:System.Web.UI.WebControls.FormView>控件自动从关联的输入控件中提取的字段值。</xref:System.Web.UI.WebControls.FormView> 双向绑定表达式的详细信息，请参阅[绑定到数据库](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。 若要创建用于执行内置的取消和插入操作的命令按钮，请将命令按钮控件添加到模板的模板其`CommandName`下表中列出的属性设置为值之一。      |命令按钮类型 |CommandName 值 |  |-------------------------|-----------------------|  |取消 |&quot;取消&quot;|  |插入 |&quot;插入&quot;|      你可以通过使用来控制的项模板的外观<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in insert mode.  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_158_1.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_158_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，包含的数据的自定义内容时行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件是否处于插入模式。 默认值为 null，表示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: FormView.InsertMethod
  fullName: System.Web.UI.WebControls.FormView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于控件执行插入操作时调用的页面上的方法的名称。"
  remarks: "在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string InsertMethod { get; set; }
    return:
      type: System.String
      description: "当控件执行插入操作时调用的页上的方法名称。"
  overload: System.Web.UI.WebControls.FormView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle
  id: InsertRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
  fullName: System.Web.UI.WebControls.FormView.InsertRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，它允许你设置中的数据行的外观<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制当控件处于在插入模式。"
  remarks: "要控制数据的外观的 InsertRowStyle 属性行时使用<xref:System.Web.UI.WebControls.FormView>控件是否处于插入模式。</xref:System.Web.UI.WebControls.FormView> 当<xref:System.Web.UI.WebControls.FormView>控件是在插入模式下时，数据行显示由指定的用户定义的内容<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>属性。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle>       可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.FormView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `InsertRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -嵌套`<InsertRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `InsertRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the InsertRowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in insert mode.  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1317_1.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1317_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的数据行的样式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制当控件处于在插入模式。"
  overload: System.Web.UI.WebControls.FormView.InsertRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: FormView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.FormView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定指定的数据类型是否可以绑定到中的字段的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "IsBindableType 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件以确定指定的数据类型是否可以绑定到控件中的字段。</xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>控件支持以下数据类型:-所有基元数据类型，如<xref:System.Boolean>， <xref:System.Byte>， <xref:System.Int32>，依次类推。</xref:System.Int32> </xref:System.Byte> </xref:System.Boolean> </xref:System.Web.UI.WebControls.FormView>      -   <xref:System.DateTime>      -   <xref:System.Decimal>      -   <xref:System.Guid>      -   <xref:System.String></xref:System.String></xref:System.Guid></xref:System.Decimal></xref:System.DateTime>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>，它表示要检查的数据类型。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的数据类型可以绑定到中的字段的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件的指针; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemCommand
  nameWithType: FormView.ItemCommand
  fullName: System.Web.UI.WebControls.FormView.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的某个按钮时发生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件被单击。"
  remarks: "中的按钮时引发 ItemCommand 事件<xref:System.Web.UI.WebControls.FormView>控件被单击。</xref:System.Web.UI.WebControls.FormView> 这使您可以提供每次此事件发生时执行的自定义的例程的事件处理方法。       中的按钮<xref:System.Web.UI.WebControls.FormView>控件也可以调用某些控件的内置功能。</xref:System.Web.UI.WebControls.FormView> 若要执行这些操作之一，设置`CommandName`为下表中的值之一的按钮的属性。      |CommandName 值 |说明 |  |-----------------------|-----------------|  |&quot;取消&quot;|取消编辑或插入操作，并返回<xref:System.Web.UI.WebControls.FormView>控件添加到所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>属性。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 引发<xref:System.Web.UI.WebControls.FormView.ModeChanged>和<xref:System.Web.UI.WebControls.FormView.ModeChanging>事件。 |  |&quot;删除&quot;|删除当前记录。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 引发<xref:System.Web.UI.WebControls.FormView.ItemDeleted>和<xref:System.Web.UI.WebControls.FormView.ItemDeleting>事件。 |  |&quot;编辑&quot;|放入<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> 引发<xref:System.Web.UI.WebControls.FormView.ModeChanged>和<xref:System.Web.UI.WebControls.FormView.ModeChanging>事件。 |  |&quot;插入&quot;|在数据源中插入当前记录。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 引发<xref:System.Web.UI.WebControls.FormView.ItemInserted>和<xref:System.Web.UI.WebControls.FormView.ItemInserting>事件。 |  |&quot;新&quot;|放入<xref:System.Web.UI.WebControls.FormView>控件置于插入模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted> 引发<xref:System.Web.UI.WebControls.FormView.ModeChanged>和<xref:System.Web.UI.WebControls.FormView.ModeChanging>事件。 |  |&quot;页&quot;|执行分页操作。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 设置`CommandArgument`的按钮为&quot;First&quot;，&quot;最后&quot;、&quot;下一步&quot;、&quot;上一步&quot;或执行页编号，以指定的分页操作类型的属性。 引发<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>和<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>事件。 |  |&quot;更新&quot;|更新数据源中的当前记录。</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 引发<xref:System.Web.UI.WebControls.FormView.ItemUpdated>和<xref:System.Web.UI.WebControls.FormView.ItemUpdating>事件。 |      尽管时单击上表中列出的按钮，将引发 ItemCommand 事件，建议你使用该操作的表中列出的事件。</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>       A<xref:System.Web.UI.WebControls.FormViewCommandEventArgs>对象传递给事件处理方法，可用于确定命令名称和被单击按钮的命令参数。</xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 若要确定的命令名称和命令参数，请使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>和<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>属性，分别。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 你也可以访问通过引发事件的控件<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>属性。</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemCommand event to handle a button click in a <xref:System.Web.UI.WebControls.FormView> control. When the user clicks the Add button, the currently displayed item is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[FormViewItemCommandEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_135_1.aspx)]\n [!code-vb[FormViewItemCommandEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_135_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.FormViewCommandEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemCreated
  nameWithType: FormView.ItemCreated
  fullName: System.Web.UI.WebControls.FormView.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在中创建的所有行之后发生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "在中创建的所有行之后，将引发 ItemCreated 事件<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 首次呈现控件，或者当用户导航到另一条记录，就可能出现此问题。 此事件可用于提供执行自定义的例程，例如正在添加或修改行的内容，每次此事件发生时的事件处理方法。      1> [!NOTE]&1;> ItemCreated 事件之前发生<xref:System.Web.UI.WebControls.FormView>控件绑定到数据。</xref:System.Web.UI.WebControls.FormView> 若要修改的字段绑定的值，使用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>事件。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>       你可以访问中的页眉、 页脚和页导航行<xref:System.Web.UI.WebControls.FormView>控件通过使用<xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>， <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>， <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>，或<xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>属性，分别。</xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> </xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> </xref:System.Web.UI.WebControls.FormView.FooterRow%2A> </xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> </xref:System.Web.UI.WebControls.FormView> 若要访问的数据行，使用<xref:System.Web.UI.WebControls.FormView.Row%2A>属性。</xref:System.Web.UI.WebControls.FormView.Row%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemCreated event to update the text of a <xref:System.Web.UI.WebControls.Label> control contained in the pager row.  \n  \n [!code-vb[FormViewItemCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_13_1.aspx)]\n [!code-cs[FormViewItemCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_13_1.aspx)]"
  syntax:
    content: public event EventHandler ItemCreated;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemDeleted
  id: ItemDeleted
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemDeleted
  nameWithType: FormView.ItemDeleted
  fullName: System.Web.UI.WebControls.FormView.ItemDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的删除按钮时发生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>单击控件，但在删除操作之后。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件 ItemDeleted 时引发事件的删除按钮 (带有按钮其`CommandName`属性设置为&quot;Delete&quot;) 在控件内单击时，但之后<xref:System.Web.UI.WebControls.FormView>控件中删除记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供执行自定义的例程，例如检查删除操作的结果，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>对象传递给事件处理方法，可用于确定受影响的记录和任何可能发生的异常数。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> 若要确定删除操作所影响的记录数，请使用<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>属性。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> 使用<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>属性以确定是否发生任何异常。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>属性。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> 如果你想要访问的键字段和非键字段的已删除的记录的名称/值对，使用<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>属性，分别。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemDeleted event to determine whether an exception occurred during a delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_35_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_35_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;
    return:
      type: System.Web.UI.WebControls.FormViewDeletedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemDeleting
  id: ItemDeleting
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemDeleting
  nameWithType: FormView.ItemDeleting
  fullName: System.Web.UI.WebControls.FormView.ItemDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的删除按钮时发生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>单击控件，但在删除操作之前。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件 ItemDeleting 时引发事件的删除按钮 (带有按钮其`CommandName`属性设置为&quot;Delete&quot;) 在控件内单击时，之前<xref:System.Web.UI.WebControls.FormView>控件中删除记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 这样，你可以提供执行自定义的例程，如在每次此事件发生时删除它之前, 验证记录一个事件处理方法。       A<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs>对象传递给事件处理方法，以便您可以确定要删除的记录的索引，还可以指示是否应取消删除操作。</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> 若要确定记录的索引，请使用<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A>属性。</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> 若要取消删除操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 你还可以通过使用访问键字段和非键字段<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A>属性，分别。</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemDeleting event to cancel a delete operation.  \n  \n [!code-cs[FormViewDeleteEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_33_1.aspx)]\n [!code-vb[FormViewDeleteEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_33_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;
    return:
      type: System.Web.UI.WebControls.FormViewDeleteEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemInserted
  id: ItemInserted
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemInserted
  nameWithType: FormView.ItemInserted
  fullName: System.Web.UI.WebControls.FormView.ItemInserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的插入按钮时发生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>单击控件，但在插入操作之后。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件 ItemInserted 时引发事件的插入按钮 (带有按钮其`CommandName`属性设置为&quot;Insert&quot;) 在控件内单击时，但之后<xref:System.Web.UI.WebControls.FormView>控件插入记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供执行自定义的例程，例如检查插入操作的结果，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>对象传递给事件处理方法，可用于确定受影响的记录和任何可能发生的异常数。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> 若要确定受 insert 操作的记录数，请使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> 使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>属性以确定是否发生任何异常。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> 如果你需要访问插入的记录的值，请使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       默认情况下，<xref:System.Web.UI.WebControls.FormView>控件返回到所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>后插入操作的属性。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 若要保留<xref:System.Web.UI.WebControls.FormView>控件在插入模式下，设置<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>属性`true`。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemInserted event to determine whether an exception occurred during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_91_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;
    return:
      type: System.Web.UI.WebControls.FormViewInsertedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemInserting
  id: ItemInserting
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemInserting
  nameWithType: FormView.ItemInserting
  fullName: System.Web.UI.WebControls.FormView.ItemInserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的插入按钮时发生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>单击控件，但在插入操作之前。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件 ItemInserting 时引发事件的插入按钮 (带有按钮其`CommandName`属性设置为&quot;Insert&quot;) 在控件内单击时，之前<xref:System.Web.UI.WebControls.FormView>控件插入记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供执行自定义的例程，如 HTML 编码的记录的值在每次此事件发生时数据源中插入之前的事件处理方法。       A<xref:System.Web.UI.WebControls.FormViewInsertEventArgs>对象传递给事件处理方法，可用于确定发送到的可选命令参数的值<xref:System.Web.UI.WebControls.FormView>控件，还可以指示应取消插入操作。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertEventArgs> 命令参数值对应于`CommandArgument`属性的插入按钮。 当`CommandArgument`设置属性的插入按钮，则使用<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>属性来确定命令自变量的值。</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> 若要取消插入操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您还可以读取或修改新的记录的字段值使用<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>属性。</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemInserting event to cancel an insert operation.  \n  \n [!code-vb[FormViewInsertEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_61_1.aspx)]\n [!code-cs[FormViewInsertEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_61_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;
    return:
      type: System.Web.UI.WebControls.FormViewInsertEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
  fullName: System.Web.UI.WebControls.FormView.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置中的数据行的自定义内容<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制当控件处于只读模式。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件呈现控件的当前模式所基于的数据行的不同模板 (指定的<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>属性)。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 下表显示每种模式使用哪个模板。      |模式 |呈现的模板 |  |----------|-----------------------|  |编辑 |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  |插入 |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  |只读 |ItemTemplate |      使用 ItemTemplate 属性来定义你自己的用户界面 (UI) 的数据行时<xref:System.Web.UI.WebControls.FormView>控件是否处于只读模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 项模板通常包含控件显示的字段值的记录，以及命令按钮可以编辑、 插入和删除记录。       若要指定自定义模板、 首先`<ItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 然后可以列出在开始和结束之间模板的内容`<ItemTemplate>`标记。 若要显示的字段值的数据源绑定到控件，请使用数据绑定表达式。 有关数据绑定表达式的详细信息，请参阅[数据绑定表达式语法](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)。 若要创建执行内置删除、 编辑和新的记录操作的命令按钮，请将命令按钮控件添加到模板的模板其`CommandName`下表中列出的属性设置为值之一。      |命令按钮类型 |CommandName 值 |  |-------------------------|-----------------------|  |删除 |&quot;删除&quot;|  |编辑 |&quot;编辑&quot;|  |新 |&quot;新&quot;|      你可以通过使用来控制的项模板的外观<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.RowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in read-only mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_192_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_192_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，包含的数据的自定义内容时行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件是否处于只读模式。 默认值为 null，表示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemUpdated
  id: ItemUpdated
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemUpdated
  nameWithType: FormView.ItemUpdated
  fullName: System.Web.UI.WebControls.FormView.ItemUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的更新按钮时发生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>单击控件，但在更新操作之后。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件 ItemUpdated 时引发事件的更新按钮 (带有按钮其`CommandName`属性设置为&quot;更新&quot;) 在控件内单击时，但之后<xref:System.Web.UI.WebControls.FormView>控件更新记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供执行自定义的例程，例如检查更新操作的结果，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>对象传递给事件处理方法，可用于确定受影响的记录和任何可能发生的异常数。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 若要确定更新操作所影响的记录数，请使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>属性。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>属性以确定是否发生任何异常。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>属性。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 如果你需要访问已更新记录的键字段值，请使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>属性。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 可以使用访问原始和更新的非键字段值<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>和<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>属性，分别。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>       默认情况下，<xref:System.Web.UI.WebControls.FormView>控件返回到所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>后更新操作的属性。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 若要保留<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式，设置<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>属性`true`。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormView>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemUpdated event to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_100_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;
    return:
      type: System.Web.UI.WebControls.FormViewUpdatedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemUpdating
  id: ItemUpdating
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemUpdating
  nameWithType: FormView.ItemUpdating
  fullName: System.Web.UI.WebControls.FormView.ItemUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的更新按钮时发生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>单击控件，但在更新操作之前。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件 ItemUpdating 时引发事件的更新按钮 (带有按钮其`CommandName`属性设置为&quot;更新&quot;) 在控件内单击时，之前<xref:System.Web.UI.WebControls.FormView>控件更新记录。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供执行自定义的例程，如 HTML 编码的记录的值在更新该数据源中，每次此事件发生时的事件处理方法。       A<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>对象传递给事件处理方法，可用于确定发送到的可选命令参数的值<xref:System.Web.UI.WebControls.FormView>控件，还可以指示应取消更新操作。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 命令参数值对应于`CommandArgument`属性的更新按钮。 当`CommandArgument`设置属性的更新按钮，则使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>属性来确定命令自变量的值。</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> 若要取消更新操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您还可以读取或修改通过使用由用户输入的新值<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性。</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性包含的键字段，而<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性包含非键字段。</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 如果你需要访问非键字段的原始值，请使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>属性。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemUpdating event to cancel an update operation.  \n  \n [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_124_1.aspx)]\n [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_124_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;
    return:
      type: System.Web.UI.WebControls.FormViewUpdateEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: FormView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载的状态<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>保持不变，所需的控件属性，即使<xref:System.Web.UI.Control.EnableViewState*>属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.Control.EnableViewState*>"
  remarks: "LoadControlState 方法用于加载的状态<xref:System.Web.UI.WebControls.FormView>保持不变，所需的控件属性，即使<xref:System.Web.UI.Control.EnableViewState%2A>属性设置为`false`。</xref:System.Web.UI.Control.EnableViewState%2A> </xref:System.Web.UI.WebControls.FormView>      1> [!NOTE]&1;> 主要由控件开发人员使用此方法，在扩展<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>表示状态的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: FormView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "加载以前保存的视图状态的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "LoadViewState 方法用于加载以前保存的视图状态的<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>      1> [!NOTE]&1;> 主要由控件开发人员使用此方法，在扩展<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>表示状态的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModeChanged
  id: ModeChanged
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModeChanged
  nameWithType: FormView.ModeChanged
  fullName: System.Web.UI.WebControls.FormView.ModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制之间编辑、 insert 和只读模式，但模式更改后的交换机。"
  remarks: "将引发 ModeChanged 事件时<xref:System.Web.UI.WebControls.FormView>控件尝试进行切换之间编辑、 insert 和只读模式，但在实际更改模式。</xref:System.Web.UI.WebControls.FormView> 此选项，可以提供一个事件处理方法，执行自定义的例程，如同步<xref:System.Web.UI.WebControls.FormView>控件与另一个控件，每次此事件发生时。</xref:System.Web.UI.WebControls.FormView>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ModeChanged event to display the current mode in the header row of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewModeChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_127_1.aspx)]\n [!code-cs[FormViewModeChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_127_1.aspx)]"
  syntax:
    content: public event EventHandler ModeChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModeChanging
  id: ModeChanging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModeChanging
  nameWithType: FormView.ModeChanging
  fullName: System.Web.UI.WebControls.FormView.ModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制交换机之间编辑、 insert 和只读模式，但之前的模式下更改。"
  remarks: "将引发 ModeChanging 事件时<xref:System.Web.UI.WebControls.FormView>控件尝试进行切换之间编辑、 insert 和只读模式，但在实际更改模式之前。</xref:System.Web.UI.WebControls.FormView> 此选项，可以提供一个事件处理方法，执行自定义的例程，例如配置<xref:System.Web.UI.WebControls.FormView>控制为特定模式或取消模式更改中，每次此事件发生时。</xref:System.Web.UI.WebControls.FormView>       A<xref:System.Web.UI.WebControls.FormViewModeEventArgs>对象传递给事件处理方法，可用于确定向其模式<xref:System.Web.UI.WebControls.FormView>切换控件，来确定是否 ModeChanging 事件被引发因为用户取消编辑操作，或指示是否应取消插入操作。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewModeEventArgs> 若要确定新的模式，请使用<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>属性。</xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 你还可以使用<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>属性通过将其设置为其中一个切换到备用模式<xref:System.Web.UI.WebControls.FormViewMode>枚举值。</xref:System.Web.UI.WebControls.FormViewMode> </xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 使用<xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>属性来确定用户是否取消编辑操作。</xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> 若要取消的插入操作，将设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ModeChanging event to hide the pager row when the <xref:System.Web.UI.WebControls.FormView> control transitions to edit mode.  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_111_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;
    return:
      type: System.Web.UI.WebControls.FormViewModeEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  id: ModifiedOuterTableStylePropertyName
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModifiedOuterTableStylePropertyName()
  nameWithType: FormView.ModifiedOuterTableStylePropertyName()
  fullName: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定特定于表的 CSS 样式规则与之关联是否<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件设置为其默认值。"
  remarks: "为其默认值设置特定于表的 CSS 样式规则，应使用<xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>， <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>， <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>， <xref:System.Web.UI.WebControls.FormView.GridLines%2A>，<xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>和<xref:System.Web.UI.WebControls.Style.Font%2A>属性。</xref:System.Web.UI.WebControls.Style.Font%2A> </xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> </xref:System.Web.UI.WebControls.FormView.GridLines%2A> </xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> </xref:System.Web.UI.WebControls.FormView.CellPadding%2A> </xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>"
  syntax:
    content: protected virtual string ModifiedOuterTableStylePropertyName ();
    parameters: []
    return:
      type: System.String
      description: "与相关联的默认 CSS 样式规则<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: FormView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "处理控件层次结构中向上传递的事件。"
  remarks: "<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>控件使用方法来根据需要处理控件层次结构中向上传递的事件<xref:System.Web.UI.Control.RaiseBubbleEvent%2A>方法。</xref:System.Web.UI.Control.RaiseBubbleEvent%2A> </xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName> 它确定是否通过检查的属性处理的事件<xref:System.EventArgs>对象中包含`e`参数。</xref:System.EventArgs> 当需要处理的事件时，该方法将执行相应的措施。 其他事件是忽略，并且控制层次结构中向上传递。 此方法指示是否将事件进一步通过其返回值控件层次结构中向上传递。       <xref:System.Web.UI.WebControls.FormView>控件重写此方法以执行相应的措施，单击某一控件可识别的按钮时的基实现。</xref:System.Web.UI.WebControls.FormView> 下表列出的命令按钮<xref:System.Web.UI.WebControls.FormView>控件可识别。</xref:System.Web.UI.WebControls.FormView>      |按钮 |CommandName 值 |说明 |  |------------|-----------------------|-----------------|  |取消 |&quot;取消&quot;|使用更新或插入操作来取消操作并以放弃用户输入的值。 <xref:System.Web.UI.WebControls.FormView>随后控制返回到<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>属性指定的模式。 |  |删除 |&quot;删除&quot;|在删除操作中用于从数据源中删除所显示的记录。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 引发<xref:System.Web.UI.WebControls.FormView.ItemDeleting>和<xref:System.Web.UI.WebControls.FormView.ItemDeleted>事件。 |  |编辑 |&quot;编辑&quot;|在更新操作中用于使<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> 为数据行显示在<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>属性中指定的内容。 |  |插入 |&quot;插入&quot;|用于在插入操作中尝试使用由用户提供的值在数据源中插入新记录。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 引发<xref:System.Web.UI.WebControls.FormView.ItemInserting>和<xref:System.Web.UI.WebControls.FormView.ItemInserted>事件。 |  |新 |&quot;新&quot;|在插入操作中用于使<xref:System.Web.UI.WebControls.FormView>控件置于插入模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView.ItemInserting> 为数据行显示在<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>属性中指定的内容。 |  |页 |&quot;页&quot;|在分页操作中用于表示执行分页的页导航行中的按钮。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 若要指定的分页操作，设置`CommandArgument`的按钮为&quot;下一步&quot;、&quot;上一步&quot;、&quot;第一个&quot;、&quot;最后一个&quot;，或要导航到页的索引的属性。 引发<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>和<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **注意︰**仅中页导航模板通常使用此类型的按钮。 |  |更新 |&quot;更新&quot;|用于在更新操作中尝试使用由用户提供的值更新数据源中显示的记录。 引发<xref:System.Web.UI.WebControls.FormView.ItemUpdating>和<xref:System.Web.UI.WebControls.FormView.ItemUpdated>事件。 |      此版本的方法返回`true`时处理这些按钮之一。</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> 有关事件上传方法的详细信息，请参阅[NIB︰ 事件和委托](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指示事件应传递中继续向上控制层次结构;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: FormView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件。"
  remarks: "调用 OnInit 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.Control.Init>事件。</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnInit 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemCommand(FormViewCommandEventArgs)
  nameWithType: FormView.OnItemCommand(FormViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCommand(FormViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ItemCommand&quot;></xref>事件。"
  remarks: "调用 OnItemCommand 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ItemCommand>事件。</xref:System.Web.UI.WebControls.FormView.ItemCommand> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemCommand 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewCommandEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  id: OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemCreated(EventArgs)
  nameWithType: FormView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCreated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ItemCreated&quot;></xref>事件。"
  remarks: "调用 OnItemCreated 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemCreated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  id: OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemDeleted(FormViewDeletedEventArgs)
  nameWithType: FormView.OnItemDeleted(FormViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleted(FormViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleted&quot;></xref>事件。"
  remarks: "调用 OnItemDeleted 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ItemDeleted>事件。</xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemDeleted 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewDeletedEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnItemDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  id: OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemDeleting(FormViewDeleteEventArgs)
  nameWithType: FormView.OnItemDeleting(FormViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleting(FormViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleting&quot;></xref>事件。"
  remarks: "调用 OnItemDeleting 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ItemDeleting>事件。</xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemDeleting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewDeleteEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnItemDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当调用此方法<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件未绑定到数据源控件、 用户未取消删除操作，以及事件处理程序未注册的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  id: OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemInserted(FormViewInsertedEventArgs)
  nameWithType: FormView.OnItemInserted(FormViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserted(FormViewInsertedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;></xref>事件。"
  remarks: "调用 OnItemInserted 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ItemInserted>事件。</xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemInserted 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewInsertedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnItemInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  id: OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemInserting(FormViewInsertEventArgs)
  nameWithType: FormView.OnItemInserting(FormViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserting(FormViewInsertEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserting&quot;></xref>事件。"
  remarks: "调用 OnItemInserting 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ItemInserting>事件。</xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemInserting 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewInsertEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewInsertEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnItemInserting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当调用此方法<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件未绑定到数据源控件、 用户未取消的插入操作和事件处理程序未注册的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  id: OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemUpdated(FormViewUpdatedEventArgs)
  nameWithType: FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdated&quot;></xref>事件。"
  remarks: "调用 OnItemUpdated 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ItemUpdated>事件。</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemUpdated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewUpdatedEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnItemUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  id: OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemUpdating(FormViewUpdateEventArgs)
  nameWithType: FormView.OnItemUpdating(FormViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdating(FormViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdating&quot;></xref>事件。"
  remarks: "调用 OnItemUpdating 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ItemUpdating>事件。</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemUpdating 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewUpdateEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnItemUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当调用此方法<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件未绑定到数据源控件、 用户未取消更新操作，以及事件处理程序未注册的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  id: OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnModeChanged(EventArgs)
  nameWithType: FormView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanged&quot;></xref>事件。"
  remarks: "调用 OnModeChanged 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ModeChanged>事件。</xref:System.Web.UI.WebControls.FormView.ModeChanged> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnModeChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  id: OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnModeChanging(FormViewModeEventArgs)
  nameWithType: FormView.OnModeChanging(FormViewModeEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanging(FormViewModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;></xref>事件。"
  remarks: "调用 OnModeChanging 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.ModeChanging>事件。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnModeChanging 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewModeEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnModeChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当调用此方法<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件未绑定到数据源控件、 未取消模式更改，和一个事件处理程序未注册的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: FormView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.PageIndexChanged&quot;></xref>事件。"
  remarks: "调用 OnPageIndexChanged 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanged 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnPageIndexChanging(FormViewPageEventArgs)
  nameWithType: FormView.OnPageIndexChanging(FormViewPageEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanging(FormViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.FormView.PageIndexChanging&quot;></xref>事件。"
  remarks: "调用 OnPageIndexChanging 方法<xref:System.Web.UI.WebControls.FormView>控件以引发<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>事件。</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView> 它通常由控件开发人员在使用扩展<xref:System.Web.UI.WebControls.FormView>类。</xref:System.Web.UI.WebControls.FormView>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanging 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewPageEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.FormView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当调用此方法<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件未绑定到数据源控件、 未取消的分页操作，和一个事件处理程序未注册的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageCount
  nameWithType: FormView.PageCount
  fullName: System.Web.UI.WebControls.FormView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取数据源中显示的每个记录所需的页的总数。"
  remarks: "当启用分页功能 (时<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性设置为`true`)，使用 PageCount 属性来确定的基础数据源中的记录总数。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>      1> [!NOTE]&1;> 由于<xref:System.Web.UI.WebControls.FormView>控件显示一次只有一条记录时，此值对应于数据源中显示的每个记录所需的页的总数。</xref:System.Web.UI.WebControls.FormView> 数据绑定发生后，此值不准确之前。       若要确定当前记录从基础数据源的索引，请使用<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>属性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>"
  example:
  - "The following example demonstrates how to use the PageCount property to determine the total number of records displayed in the control.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_653_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_653_1.aspx)]"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "基础数据源中的项的数目。"
  overload: System.Web.UI.WebControls.FormView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndex
  nameWithType: FormView.PageIndex
  fullName: System.Web.UI.WebControls.FormView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置在显示的页面的索引。"
  remarks: "当启用分页功能 (时<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性设置为`true`)，使用 PageIndex 属性来确定当前显示的记录的索引。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 你还可以使用此属性以编程方式更改所显示的记录。      1> [!NOTE]&1;> 启用分页功能后，你还可以使用此属性来确定显示，则记录的页号但是，请注意，此属性是从零开始。       若要确定数据源中的项的总数目，使用<xref:System.Web.UI.WebControls.FormView.PageCount%2A>属性。</xref:System.Web.UI.WebControls.FormView.PageCount%2A>"
  example:
  - "The following example demonstrates how to use the PageIndex property to determine the page index of the displayed record.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_319_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_319_1.aspx)]"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "要显示在数据项的从零开始索引<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>从基础数据源的控件。"
  overload: System.Web.UI.WebControls.FormView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "选定的值是小于-1。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: FormView.PageIndexChanged
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时的值<xref:System.Web.UI.WebControls.FormView.PageIndex*>分页操作完成后的属性更改。</xref:System.Web.UI.WebControls.FormView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件 PageIndexChanged 时引发事件的页导航按钮 (带有按钮其`CommandName`属性设置为&quot;Page&quot;) 在控件内单击时，但之后<xref:System.Web.UI.WebControls.FormView>控件处理的分页操作。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供每次此事件发生时执行的自定义的例程的事件处理方法。      1> [!NOTE]&1;> 以编程方式设置时，将不会引发此事件<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>属性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       页导航按钮通常位于的页导航行<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 此事件通常用于同步<xref:System.Web.UI.WebControls.FormView>控件替换为<xref:System.Web.UI.WebControls.GridView>控件或设置的行为<xref:System.Web.UI.WebControls.FormView>分页操作完成后的控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the PageIndexChanged event to return the <xref:System.Web.UI.WebControls.FormView> to read-only mode when the user navigates to another record.  \n  \n [!code-vb[FormViewPageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_142_1.aspx)]\n [!code-cs[FormViewPageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_142_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: FormView.PageIndexChanging
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时的值<xref:System.Web.UI.WebControls.FormView.PageIndex*>分页操作前的属性更改。</xref:System.Web.UI.WebControls.FormView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控件 PageIndexChanging 时引发事件的页导航按钮 (带有按钮其`CommandName`属性设置为&quot;Page&quot;) 在控件内单击时，之前<xref:System.Web.UI.WebControls.FormView>控件处理的分页操作。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 这使您可以提供执行自定义的例程，每次此事件发生时取消的分页操作，如事件处理方法。      1> [!NOTE]&1;> 以编程方式设置时，将不会引发此事件<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>属性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       页导航按钮通常位于的页导航行<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>       A<xref:System.Web.UI.WebControls.FormViewPageEventArgs>对象传递给事件处理方法，以便您可以确定用户选择的页的索引，还可以指示是否应取消的分页操作。</xref:System.Web.UI.WebControls.FormViewPageEventArgs> 若要确定用户选择的页的索引，请使用<xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A>属性。</xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> 若要取消的分页操作，<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.FormViewPageEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.FormViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the PageIndexChanging event to cancel a paging operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewPageEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[FormViewPageEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_120_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.FormViewPageEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: FormView.PagerSettings
  fullName: System.Web.UI.WebControls.FormView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;></xref>对象，它允许你设置的属性中的页导航按钮<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "通常情况下用于控制的设置中的页导航行<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 启用分页功能时，将显示的页导航行 (时<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性设置为`true`)，并包含允许用户导航到控件中的不同记录的控件。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.PagerSettings>对象返回。</xref:System.Web.UI.WebControls.PagerSettings> 可以在窗体以声明方式设置了属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.PagerSettings>对象 (例如， `PagerSettings-Mode`)。</xref:System.Web.UI.WebControls.PagerSettings> 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `PagerSettings.Mode`)。 常用设置通常包括的页导航行显示模式和自定义文本或导航控件的图像。"
  example:
  - "The following example demonstrates how to use the PagerSettings property to specify the properties of the pager row.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_238_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_238_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> ，允许您设置的属性中的页导航按钮<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: FormView.PagerStyle
  fullName: System.Web.UI.WebControls.FormView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，它允许你设置中的页导航行的外观<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "使用 PagerStyle 属性来控制中的页导航行的外观<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 启用分页功能时，将显示的页导航行 (时<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性设置为`true`)，并包含允许用户导航到不同的页面控件中的控件。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.FormView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `PagerStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -嵌套`<PagerRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `PagerStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the PagerStyle property to specify the style settings for the pager row.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_425_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_425_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>该对象表示中的页导航行样式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
  fullName: System.Web.UI.WebControls.FormView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的页导航行中的自定义内容<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "页导航行显示在<xref:System.Web.UI.WebControls.FormView>控制当启用分页功能 (时<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性设置为 true)。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> </xref:System.Web.UI.WebControls.FormView> 页导航行包含允许用户导航到不同的页面控件中的控件。 而不是使用内置的页导航行用户界面 (UI)，你可以使用要属性来定义自己的 UI。      1> [!NOTE]&1;> 属性设置它时要重写内置页导航行 UI。       若要指定自定义模板的页导航行，第一次将`<PagerTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 然后可以列出在开始和结束之间模板的内容`<PagerTemplate>`标记。 若要控制的页导航行的外观，使用<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>属性。</xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>       通常情况下，将按钮控件添加到页导航模板来执行分页操作。 <xref:System.Web.UI.WebControls.FormView>控件将执行的分页操作使用的按钮控件时其`CommandName`单击属性设置为&quot;Page&quot;。</xref:System.Web.UI.WebControls.FormView> 按钮的`CommandArgument`属性确定要执行的分页操作的类型。 下表列出了支持的命令参数值<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>      |CommandArgument 值 |说明 |  |---------------------------|-----------------|  |&quot;下一步&quot;|导航到下一步的页面。 |  |&quot;上一步&quot;|导航到以前的页面。 |  |&quot;第一个&quot;|导航到第一个页面。 |  |&quot;最后一个&quot;|导航到最后一个页面。 |  |整数值 |导航到指定的页码。 |"
  example:
  - "The following example demonstrates how to define a custom pager template.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_644_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_644_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含的页导航行的自定义内容。 默认值为 null，表示未设置此属性。"
  overload: System.Web.UI.WebControls.FormView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: FormView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.FormView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将绑定到指定的数据源<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "PerformDataBinding 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件绑定到控件的指定的数据源。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>表示数据源。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.FormView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: FormView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.FormView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "设置控制层次结构中的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "PrepareControlHierarchy 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件设置控制层次结构中<xref:System.Web.UI.WebControls.FormView>控制之前呈现控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: FormView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发相应事件<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制当回发到服务器。"
  remarks: "则该页将调用方法的回发事件发生时将引发相应事件 RaisePostBackEvent<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> 加载和更改通知都完成时之后, 但尚未预呈现发生之前，此调用是在页的生命周期中。 实现此方法创建<xref:System.Web.UI.WebControls.CommandEventArgs>引发的事件的对象。</xref:System.Web.UI.WebControls.CommandEventArgs>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "从其创建的事件自变量<xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref>事件或引发的事件。"
  overload: System.Web.UI.WebControls.FormView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: FormView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.FormView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "显示<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>客户端上的控件。"
  remarks: "Render 方法用于呈现客户端的浏览器使用指定的服务器控件内容<xref:System.Web.UI.HtmlTextWriter>对象。</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>包含要在客户端上呈现的输出流。"
  overload: System.Web.UI.WebControls.FormView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable
  id: RenderOuterTable
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
  fullName: System.Web.UI.WebControls.FormView.RenderOuterTable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示控件是否包含在呈现的 HTML <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;> </xref>才能将应用内联样式元素。"
  remarks: "为了使内联样式属性，如<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>适用于所有控件呈现的 HTML，ASP.NET 将中呈现的 HTML`table`元素。</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 如果不希望外部`table`元素呈现，将此属性设置为`false`。 在这种情况下，如果你尝试设置应用于整个控件的样式属性的内联，则引发异常。"
  syntax:
    content: public virtual bool RenderOuterTable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件包含中呈现的 HTML <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;> </xref>元素; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.RenderOuterTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Row
  id: Row
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Row
  nameWithType: FormView.Row
  fullName: System.Web.UI.WebControls.FormView.Row
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>对象，表示中的数据行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "使用行属性以编程方式访问<xref:System.Web.UI.WebControls.FormViewRow>表示的数据行的对象。</xref:System.Web.UI.WebControls.FormViewRow> 数据行包含在基于为当前模式呈现的模板的不同内容 (通过指定<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>属性)。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 你只能访问当前模式的模板的内容。 下表显示每种模式使用哪个模板。      |模式 |呈现的模板 |  |----------|-----------------------|  |编辑 |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  |插入 |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  |只读 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|    &1;> [!NOTE]&1;> 行属性是之后才可用<xref:System.Web.UI.WebControls.FormView>控件创建中的数据行<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>       当你需要以编程方式操作数据行，例如在添加自定义内容时，通常使用此属性。 之后，必须执行对行属性进行任何修改<xref:System.Web.UI.WebControls.FormView>控件已经被数据绑定; 否则为<xref:System.Web.UI.WebControls.FormView>控件将覆盖任何更改。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the Row property to access the properties of the data row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-cs[FormViewRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1104_1.aspx)]\n [!code-vb[FormViewRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1104_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow Row { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>表示中的数据行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.Row*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RowStyle
  nameWithType: FormView.RowStyle
  fullName: System.Web.UI.WebControls.FormView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取对<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>对象，它允许你设置中的数据行的外观<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制当控件处于只读模式。"
  remarks: "要控制数据的外观的 RowStyle 属性行时使用<xref:System.Web.UI.WebControls.FormView>控件是否处于只读 （显示） 模式。</xref:System.Web.UI.WebControls.FormView> 当<xref:System.Web.UI.WebControls.FormView>控件是否处于只读模式时，数据行显示由指定的用户定义的内容<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>属性。</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。</xref:System.Web.UI.WebControls.TableItemStyle> 可以使用以下方法之一，以声明方式设置属性:-将属性置于开始标记中<xref:System.Web.UI.WebControls.FormView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `RowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -嵌套`<RowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>       属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `RowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。"
  example:
  - "The following example demonstrates how to use the RowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in read-only mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_235_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_235_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "对引用<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的数据行的样式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制当控件处于只读模式。"
  overload: System.Web.UI.WebControls.FormView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: FormView.SaveControlState()
  fullName: System.Web.UI.WebControls.FormView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "保存的状态<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>保持不变，所需的控件属性，即使&lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;属性设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "此方法用于保存的状态<xref:System.Web.UI.WebControls.FormView>保持不变，所需的控件属性，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>属性设置为`false`。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormView>      1> [!NOTE]&1;> 此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "返回服务器控件的当前视图状态。 如果没有与控件关联的视图状态，则此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: FormView.SaveViewState()
  fullName: System.Web.UI.WebControls.FormView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将当前视图状态保存<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "SaveViewState 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件保存的控件状态。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>，其中包含的已保存的状态<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: FormView.SelectedValue
  fullName: System.Web.UI.WebControls.FormView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取当前记录中的数据键值<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "当<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>设置属性，<xref:System.Web.UI.WebControls.FormView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>对象，其中包含的字段或字段中列出的键/值对<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>当前记录的属性。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>对象表示的主键字段或当前记录的字段，并存储在<xref:System.Web.UI.WebControls.FormView.DataKey%2A>属性。</xref:System.Web.UI.WebControls.FormView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey> 而不是使用<xref:System.Web.UI.WebControls.FormView.DataKey%2A>属性来访问数据的密钥值，你可以使用 SelectedValue 属性作为快捷方式。</xref:System.Web.UI.WebControls.FormView.DataKey%2A>      1> [!NOTE]&1;> 时<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>属性列出多个字段，则此属性返回列出的第一个字段的值。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>"
  example:
  - "The following example demonstrates how to use the SelectedValue property to determine the value of the key field.  \n  \n [!code-cs[FormViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_824_1.aspx)]\n [!code-vb[FormViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_824_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "数据中的当前记录的键值<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: FormView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.FormView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "设置中的当前显示页的索引<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  syntax:
    content: public void SetPageIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要设置的索引。"
  overload: System.Web.UI.WebControls.FormView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  id: System#Web#UI#IDataItemContainer#DataItemIndex
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.IDataItemContainer.DataItemIndex%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.IDataItemContainer>接口。</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DataItemIndex { get; }
    return:
      type: System.Int32
      description: "一个表示显示索引的对象。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  id: System#Web#UI#IDataItemContainer#DisplayIndex
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.IDataItemContainer.DisplayIndex%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.IDataItemContainer>接口。</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DisplayIndex { get; }
    return:
      type: System.Int32
      description: "始终返回 0。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发事件<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制当回发到服务器。"
  remarks: "页回发事件发生时调用 IPostBackEventHandler.RaisePostBackEvent 方法。 加载和更改通知都完成时之后, 但在呈现页之前，此调用是在页的生命周期中。"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件自变量。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置包含的项的主键字段中显示的名称的数组<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "包含的项的主键字段中显示的名称的数组<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的数据项的列表的名称<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件绑定到数据源包含的数据项目的多个列表时。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "数据的列表的名称项<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件绑定到。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置包含的数据的列表的对象， <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制检索。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "包含的数据的列表的对象， <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制检索。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置 ID 的数据源控件，其中包含的数据的列表项<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制检索。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "包含的数据的列表的数据源控件的 ID 项<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制检索。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取的数据源对象，其中包含的数据的列表项<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制检索。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "数据源对象包含的数据的列表项<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制检索。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  id: System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取表示中的行的数据密钥值的对象<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "表示中的行的数据密钥值的对象<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  id: System#Web#UI#WebControls#IDataBoundItemControl#Mode
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取当前模式的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.FormView>实例被强制转换为<xref:System.Web.UI.WebControls.IDataBoundControl>接口。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "当前模式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定的回发事件选项<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "IPostBackContainer.GetPostBackOptions 方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.FormView>控件创建<xref:System.Web.UI.PostBackOptions>对象，它包含控件的回发事件选项。</xref:System.Web.UI.PostBackOptions> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.PostBackOptions>对象通常用作参数<xref:System.Web.UI.Page.GetPostBackEventReference%2A>方法。</xref:System.Web.UI.Page.GetPostBackEventReference%2A> </xref:System.Web.UI.PostBackOptions>"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "按钮控件，发布页面回发到服务器。"
    return:
      type: System.Web.UI.PostBackOptions
      description: "回发事件选项<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "中包含的对象<code> buttonControl </code>参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.WebControls.IButtonControl.CausesValidation*> property of <code>buttonControl</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.IButtonControl.CausesValidation*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TagKey
  nameWithType: FormView.TagKey
  fullName: System.Web.UI.WebControls.FormView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>值<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "TagKey 属性允许要写入的相应 HTML 标记的输出流<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "始终返回<xref uid=&quot;langword_csharp_HtmlTextWriterTag.Table&quot; name=&quot;HtmlTextWriterTag.Table&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
  fullName: System.Web.UI.WebControls.FormView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>对象，表示在顶部显示的页导航行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "启用分页后 (时<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>属性设置为`true`)，一个称为的页导航行附加行会自动显示在<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 页导航行包含允许用户导航到其他记录，并且可以显示在顶部、 底部，或同时的顶部和底部的控件的控件。 使用 TopPagerRow 属性以编程方式访问<xref:System.Web.UI.WebControls.FormViewRow>对象，表示中的顶部页导航行<xref:System.Web.UI.WebControls.FormView>控件。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>      1> [!NOTE]&1;> TopPagerRow 属性是之后才可用<xref:System.Web.UI.WebControls.FormView>控件创建中的顶部页导航行<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       当你需要以编程方式操作顶部页导航行，例如在添加自定义内容时，通常使用此属性。 之后，必须执行对 TopPagerRow 属性进行任何修改<xref:System.Web.UI.WebControls.FormView>控件已经被绑定到数据; 否则为<xref:System.Web.UI.WebControls.FormView>控件将覆盖任何更改。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the TopPagerRow property to access the pager row displayed at the top of a <xref:System.Web.UI.WebControls.FormView> control. The pager row is then updated with additional content.  \n  \n [!code-vb[FormViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_408_1.aspx)]\n [!code-cs[FormViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_408_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>表示中的顶部页导航行<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.FormView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: FormView.TrackViewState()
  fullName: System.Web.UI.WebControls.FormView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "标记开始跟踪并视图状态将更改保存到的起始点<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件。"
  remarks: "重写此方法以将标记控件的视图状态的一部分开始对控件的跟踪并保存更改的起始点。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  id: UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: UpdateItem(Boolean)
  nameWithType: FormView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.UpdateItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新数据源中的当前记录。"
  remarks: "当<xref:System.Web.UI.WebControls.FormView>控件处于编辑模式，使用 UpdateItem 方法来以编程方式更新数据源中的当前记录。</xref:System.Web.UI.WebControls.FormView> 此方法通常用时你需要更新的当前记录从外部<xref:System.Web.UI.WebControls.FormView>控制，例如页上的其他控件。</xref:System.Web.UI.WebControls.FormView>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.FormView>调用; 否则为此方法时，控件必须处于编辑模式<xref:System.Web.HttpException>引发。</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.FormView>       若要指定是否在执行更新操作之前执行页验证，使用`causesValidation`参数。 调用此方法也会引发<xref:System.Web.UI.WebControls.FormView.ItemUpdated>和<xref:System.Web.UI.WebControls.FormView.ItemUpdating>事件。</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>"
  example:
  - "The following example demonstrates how to use the UpdateItem method to programmatically update the current record in a <xref:System.Web.UI.WebControls.FormView> control in the data source.  \n  \n [!code-vb[FormViewUpdateItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_32_1.aspx)]\n [!code-cs[FormViewUpdateItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_32_1.aspx)]"
  syntax:
    content: public virtual void UpdateItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>当此方法叫做; 执行页验证否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.UpdateItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "当调用此方法<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件未处于编辑模式。       -或- <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>与关联的对象<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控件为 null。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
  fullName: System.Web.UI.WebControls.FormView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于控件执行更新操作时调用的页面上的方法的名称。"
  remarks: "在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "当控件执行更新操作时调用的页上的方法名称。"
  overload: System.Web.UI.WebControls.FormView.UpdateMethod*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.FormView.#ctor
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FormView()
  nameWithType: FormView.FormView()
  fullName: System.Web.UI.WebControls.FormView.FormView()
- uid: System.Web.UI.WebControls.FormView.AllowPaging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: AllowPaging
  nameWithType: FormView.AllowPaging
  fullName: System.Web.UI.WebControls.FormView.AllowPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormView.BackImageUrl
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
  fullName: System.Web.UI.WebControls.FormView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
  fullName: System.Web.UI.WebControls.FormView.BottomPagerRow
- uid: System.Web.UI.WebControls.FormViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewRow
  nameWithType: FormViewRow
  fullName: System.Web.UI.WebControls.FormViewRow
- uid: System.Web.UI.WebControls.FormView.Caption
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Caption
  nameWithType: FormView.Caption
  fullName: System.Web.UI.WebControls.FormView.Caption
- uid: System.Web.UI.WebControls.FormView.CaptionAlign
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
  fullName: System.Web.UI.WebControls.FormView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.FormView.CellPadding
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellPadding
  nameWithType: FormView.CellPadding
  fullName: System.Web.UI.WebControls.FormView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.FormView.CellSpacing
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellSpacing
  nameWithType: FormView.CellSpacing
  fullName: System.Web.UI.WebControls.FormView.CellSpacing
- uid: System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ChangeMode(FormViewMode)
  nameWithType: FormView.ChangeMode(FormViewMode)
  fullName: System.Web.UI.WebControls.FormView.ChangeMode(FormViewMode)
- uid: System.Web.UI.WebControls.FormViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewMode
  nameWithType: FormViewMode
  fullName: System.Web.UI.WebControls.FormViewMode
- uid: System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: FormView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.FormView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: FormView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.FormView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: FormView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.FormView.CreateTable
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateTable()
  nameWithType: FormView.CreateTable()
  fullName: System.Web.UI.WebControls.FormView.CreateTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.FormView.CurrentMode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CurrentMode
  nameWithType: FormView.CurrentMode
  fullName: System.Web.UI.WebControls.FormView.CurrentMode
- uid: System.Web.UI.WebControls.FormView.DataBind
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataBind()
  nameWithType: FormView.DataBind()
  fullName: System.Web.UI.WebControls.FormView.DataBind()
- uid: System.Web.UI.WebControls.FormView.DataItem
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItem
  nameWithType: FormView.DataItem
  fullName: System.Web.UI.WebControls.FormView.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.FormView.DataItemCount
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemCount
  nameWithType: FormView.DataItemCount
  fullName: System.Web.UI.WebControls.FormView.DataItemCount
- uid: System.Web.UI.WebControls.FormView.DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.DataKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKey
  nameWithType: FormView.DataKey
  fullName: System.Web.UI.WebControls.FormView.DataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.FormView.DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.DataKeyNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.FormView.DefaultMode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DefaultMode
  nameWithType: FormView.DefaultMode
  fullName: System.Web.UI.WebControls.FormView.DefaultMode
- uid: System.Web.UI.WebControls.FormView.DeleteItem
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteItem()
  nameWithType: FormView.DeleteItem()
  fullName: System.Web.UI.WebControls.FormView.DeleteItem()
- uid: System.Web.UI.WebControls.FormView.DeleteMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
  fullName: System.Web.UI.WebControls.FormView.DeleteMethod
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
  fullName: System.Web.UI.WebControls.FormView.EditItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.FormView.EditRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
  fullName: System.Web.UI.WebControls.FormView.EditRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.FormView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.FormView.EmptyDataText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
  fullName: System.Web.UI.WebControls.FormView.EmptyDataText
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
  fullName: System.Web.UI.WebControls.FormView.EnableModelValidation
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnsureDataBound()
  nameWithType: FormView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.FormView.EnsureDataBound()
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,Boolean)
  nameWithType: FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  fullName: System.Web.UI.WebControls.FormView.ExtractRowValues(IOrderedDictionary,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormView.FooterRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterRow
  nameWithType: FormView.FooterRow
  fullName: System.Web.UI.WebControls.FormView.FooterRow
- uid: System.Web.UI.WebControls.FormView.FooterStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterStyle
  nameWithType: FormView.FooterStyle
  fullName: System.Web.UI.WebControls.FormView.FooterStyle
- uid: System.Web.UI.WebControls.FormView.FooterTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
  fullName: System.Web.UI.WebControls.FormView.FooterTemplate
- uid: System.Web.UI.WebControls.FormView.FooterText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterText
  nameWithType: FormView.FooterText
  fullName: System.Web.UI.WebControls.FormView.FooterText
- uid: System.Web.UI.WebControls.FormView.GridLines
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: GridLines
  nameWithType: FormView.GridLines
  fullName: System.Web.UI.WebControls.FormView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.FormView.HeaderRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderRow
  nameWithType: FormView.HeaderRow
  fullName: System.Web.UI.WebControls.FormView.HeaderRow
- uid: System.Web.UI.WebControls.FormView.HeaderStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
  fullName: System.Web.UI.WebControls.FormView.HeaderStyle
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
  fullName: System.Web.UI.WebControls.FormView.HeaderTemplate
- uid: System.Web.UI.WebControls.FormView.HeaderText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderText
  nameWithType: FormView.HeaderText
  fullName: System.Web.UI.WebControls.FormView.HeaderText
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
  fullName: System.Web.UI.WebControls.FormView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializePager(FormViewRow,PagedDataSource)
  nameWithType: FormView.InitializePager(FormViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.FormView.InitializePager(FormViewRow,PagedDataSource)
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializeRow(FormViewRow)
  nameWithType: FormView.InitializeRow(FormViewRow)
  fullName: System.Web.UI.WebControls.FormView.InitializeRow(FormViewRow)
- uid: System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItem(Boolean)
  nameWithType: FormView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.InsertItem(Boolean)
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
  fullName: System.Web.UI.WebControls.FormView.InsertItemTemplate
- uid: System.Web.UI.WebControls.FormView.InsertMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertMethod
  nameWithType: FormView.InsertMethod
  fullName: System.Web.UI.WebControls.FormView.InsertMethod
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
  fullName: System.Web.UI.WebControls.FormView.InsertRowStyle
- uid: System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: FormView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.FormView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.FormView.ItemCommand
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemCommand
  nameWithType: FormView.ItemCommand
  fullName: System.Web.UI.WebControls.FormView.ItemCommand
- uid: System.Web.UI.WebControls.FormViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewCommandEventHandler
  nameWithType: FormViewCommandEventHandler
  fullName: System.Web.UI.WebControls.FormViewCommandEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemCreated
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemCreated
  nameWithType: FormView.ItemCreated
  fullName: System.Web.UI.WebControls.FormView.ItemCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.FormView.ItemDeleted
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemDeleted
  nameWithType: FormView.ItemDeleted
  fullName: System.Web.UI.WebControls.FormView.ItemDeleted
- uid: System.Web.UI.WebControls.FormViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeletedEventHandler
  nameWithType: FormViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.FormViewDeletedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemDeleting
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemDeleting
  nameWithType: FormView.ItemDeleting
  fullName: System.Web.UI.WebControls.FormView.ItemDeleting
- uid: System.Web.UI.WebControls.FormViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeleteEventHandler
  nameWithType: FormViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.FormViewDeleteEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemInserted
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemInserted
  nameWithType: FormView.ItemInserted
  fullName: System.Web.UI.WebControls.FormView.ItemInserted
- uid: System.Web.UI.WebControls.FormViewInsertedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertedEventHandler
  nameWithType: FormViewInsertedEventHandler
  fullName: System.Web.UI.WebControls.FormViewInsertedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemInserting
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemInserting
  nameWithType: FormView.ItemInserting
  fullName: System.Web.UI.WebControls.FormView.ItemInserting
- uid: System.Web.UI.WebControls.FormViewInsertEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertEventHandler
  nameWithType: FormViewInsertEventHandler
  fullName: System.Web.UI.WebControls.FormViewInsertEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
  fullName: System.Web.UI.WebControls.FormView.ItemTemplate
- uid: System.Web.UI.WebControls.FormView.ItemUpdated
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemUpdated
  nameWithType: FormView.ItemUpdated
  fullName: System.Web.UI.WebControls.FormView.ItemUpdated
- uid: System.Web.UI.WebControls.FormViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdatedEventHandler
  nameWithType: FormViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemUpdating
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemUpdating
  nameWithType: FormView.ItemUpdating
  fullName: System.Web.UI.WebControls.FormView.ItemUpdating
- uid: System.Web.UI.WebControls.FormViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdateEventHandler
  nameWithType: FormViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdateEventHandler
- uid: System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: FormView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadControlState(Object)
- uid: System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: FormView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.FormView.ModeChanged
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModeChanged
  nameWithType: FormView.ModeChanged
  fullName: System.Web.UI.WebControls.FormView.ModeChanged
- uid: System.Web.UI.WebControls.FormView.ModeChanging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModeChanging
  nameWithType: FormView.ModeChanging
  fullName: System.Web.UI.WebControls.FormView.ModeChanging
- uid: System.Web.UI.WebControls.FormViewModeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewModeEventHandler
  nameWithType: FormViewModeEventHandler
  fullName: System.Web.UI.WebControls.FormViewModeEventHandler
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModifiedOuterTableStylePropertyName()
  nameWithType: FormView.ModifiedOuterTableStylePropertyName()
  fullName: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName()
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: FormView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: FormView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCommand(FormViewCommandEventArgs)
  nameWithType: FormView.OnItemCommand(FormViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCommand(FormViewCommandEventArgs)
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewCommandEventArgs
  nameWithType: FormViewCommandEventArgs
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCreated(EventArgs)
  nameWithType: FormView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCreated(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleted(FormViewDeletedEventArgs)
  nameWithType: FormView.OnItemDeleted(FormViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleted(FormViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeletedEventArgs
  nameWithType: FormViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleting(FormViewDeleteEventArgs)
  nameWithType: FormView.OnItemDeleting(FormViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleting(FormViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.FormViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeleteEventArgs
  nameWithType: FormViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeleteEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserted(FormViewInsertedEventArgs)
  nameWithType: FormView.OnItemInserted(FormViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserted(FormViewInsertedEventArgs)
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserting(FormViewInsertEventArgs)
  nameWithType: FormView.OnItemInserting(FormViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserting(FormViewInsertEventArgs)
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertEventArgs
  nameWithType: FormViewInsertEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdated(FormViewUpdatedEventArgs)
  nameWithType: FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdated(FormViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdating(FormViewUpdateEventArgs)
  nameWithType: FormView.OnItemUpdating(FormViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdating(FormViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdateEventArgs
  nameWithType: FormViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs
- uid: System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanged(EventArgs)
  nameWithType: FormView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanging(FormViewModeEventArgs)
  nameWithType: FormView.OnModeChanging(FormViewModeEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanging(FormViewModeEventArgs)
- uid: System.Web.UI.WebControls.FormViewModeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: FormView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanging(FormViewPageEventArgs)
  nameWithType: FormView.OnPageIndexChanging(FormViewPageEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanging(FormViewPageEventArgs)
- uid: System.Web.UI.WebControls.FormViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewPageEventArgs
  nameWithType: FormViewPageEventArgs
  fullName: System.Web.UI.WebControls.FormViewPageEventArgs
- uid: System.Web.UI.WebControls.FormView.PageCount
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageCount
  nameWithType: FormView.PageCount
  fullName: System.Web.UI.WebControls.FormView.PageCount
- uid: System.Web.UI.WebControls.FormView.PageIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndex
  nameWithType: FormView.PageIndex
  fullName: System.Web.UI.WebControls.FormView.PageIndex
- uid: System.Web.UI.WebControls.FormView.PageIndexChanged
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndexChanged
  nameWithType: FormView.PageIndexChanged
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanged
- uid: System.Web.UI.WebControls.FormView.PageIndexChanging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndexChanging
  nameWithType: FormView.PageIndexChanging
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanging
- uid: System.Web.UI.WebControls.FormViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewPageEventHandler
  nameWithType: FormViewPageEventHandler
  fullName: System.Web.UI.WebControls.FormViewPageEventHandler
- uid: System.Web.UI.WebControls.FormView.PagerSettings
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerSettings
  nameWithType: FormView.PagerSettings
  fullName: System.Web.UI.WebControls.FormView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.FormView.PagerStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerStyle
  nameWithType: FormView.PagerStyle
  fullName: System.Web.UI.WebControls.FormView.PagerStyle
- uid: System.Web.UI.WebControls.FormView.PagerTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
  fullName: System.Web.UI.WebControls.FormView.PagerTemplate
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: FormView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.FormView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: FormView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.FormView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: FormView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: FormView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.FormView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
  fullName: System.Web.UI.WebControls.FormView.RenderOuterTable
- uid: System.Web.UI.WebControls.FormView.Row
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Row
  nameWithType: FormView.Row
  fullName: System.Web.UI.WebControls.FormView.Row
- uid: System.Web.UI.WebControls.FormView.RowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RowStyle
  nameWithType: FormView.RowStyle
  fullName: System.Web.UI.WebControls.FormView.RowStyle
- uid: System.Web.UI.WebControls.FormView.SaveControlState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveControlState()
  nameWithType: FormView.SaveControlState()
  fullName: System.Web.UI.WebControls.FormView.SaveControlState()
- uid: System.Web.UI.WebControls.FormView.SaveViewState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveViewState()
  nameWithType: FormView.SaveViewState()
  fullName: System.Web.UI.WebControls.FormView.SaveViewState()
- uid: System.Web.UI.WebControls.FormView.SelectedValue
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SelectedValue
  nameWithType: FormView.SelectedValue
  fullName: System.Web.UI.WebControls.FormView.SelectedValue
- uid: System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: FormView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.FormView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.FormView.TagKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TagKey
  nameWithType: FormView.TagKey
  fullName: System.Web.UI.WebControls.FormView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.FormView.TopPagerRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
  fullName: System.Web.UI.WebControls.FormView.TopPagerRow
- uid: System.Web.UI.WebControls.FormView.TrackViewState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TrackViewState()
  nameWithType: FormView.TrackViewState()
  fullName: System.Web.UI.WebControls.FormView.TrackViewState()
- uid: System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateItem(Boolean)
  nameWithType: FormView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.UpdateItem(Boolean)
- uid: System.Web.UI.WebControls.FormView.UpdateMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
  fullName: System.Web.UI.WebControls.FormView.UpdateMethod
- uid: System.Web.UI.WebControls.FormView.#ctor*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FormView
  nameWithType: FormView.FormView
- uid: System.Web.UI.WebControls.FormView.AllowPaging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: AllowPaging
  nameWithType: FormView.AllowPaging
- uid: System.Web.UI.WebControls.FormView.BackImageUrl*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
- uid: System.Web.UI.WebControls.FormView.Caption*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Caption
  nameWithType: FormView.Caption
- uid: System.Web.UI.WebControls.FormView.CaptionAlign*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
- uid: System.Web.UI.WebControls.FormView.CellPadding*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellPadding
  nameWithType: FormView.CellPadding
- uid: System.Web.UI.WebControls.FormView.CellSpacing*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellSpacing
  nameWithType: FormView.CellSpacing
- uid: System.Web.UI.WebControls.FormView.ChangeMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ChangeMode
  nameWithType: FormView.ChangeMode
- uid: System.Web.UI.WebControls.FormView.CreateChildControls*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateChildControls
  nameWithType: FormView.CreateChildControls
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateControlStyle
  nameWithType: FormView.CreateControlStyle
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: FormView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.FormView.CreateRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateRow
  nameWithType: FormView.CreateRow
- uid: System.Web.UI.WebControls.FormView.CreateTable*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateTable
  nameWithType: FormView.CreateTable
- uid: System.Web.UI.WebControls.FormView.CurrentMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CurrentMode
  nameWithType: FormView.CurrentMode
- uid: System.Web.UI.WebControls.FormView.DataBind*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataBind
  nameWithType: FormView.DataBind
- uid: System.Web.UI.WebControls.FormView.DataItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItem
  nameWithType: FormView.DataItem
- uid: System.Web.UI.WebControls.FormView.DataItemCount*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemCount
  nameWithType: FormView.DataItemCount
- uid: System.Web.UI.WebControls.FormView.DataItemIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.DataKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKey
  nameWithType: FormView.DataKey
- uid: System.Web.UI.WebControls.FormView.DataKeyNames*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.DefaultMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DefaultMode
  nameWithType: FormView.DefaultMode
- uid: System.Web.UI.WebControls.FormView.DeleteItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteItem
  nameWithType: FormView.DeleteItem
- uid: System.Web.UI.WebControls.FormView.DeleteMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
- uid: System.Web.UI.WebControls.FormView.EditRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.FormView.EmptyDataText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnsureDataBound
  nameWithType: FormView.EnsureDataBound
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ExtractRowValues
  nameWithType: FormView.ExtractRowValues
- uid: System.Web.UI.WebControls.FormView.FooterRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterRow
  nameWithType: FormView.FooterRow
- uid: System.Web.UI.WebControls.FormView.FooterStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterStyle
  nameWithType: FormView.FooterStyle
- uid: System.Web.UI.WebControls.FormView.FooterTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
- uid: System.Web.UI.WebControls.FormView.FooterText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterText
  nameWithType: FormView.FooterText
- uid: System.Web.UI.WebControls.FormView.GridLines*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: GridLines
  nameWithType: FormView.GridLines
- uid: System.Web.UI.WebControls.FormView.HeaderRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderRow
  nameWithType: FormView.HeaderRow
- uid: System.Web.UI.WebControls.FormView.HeaderStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
- uid: System.Web.UI.WebControls.FormView.HeaderText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderText
  nameWithType: FormView.HeaderText
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
- uid: System.Web.UI.WebControls.FormView.InitializePager*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializePager
  nameWithType: FormView.InitializePager
- uid: System.Web.UI.WebControls.FormView.InitializeRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializeRow
  nameWithType: FormView.InitializeRow
- uid: System.Web.UI.WebControls.FormView.InsertItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItem
  nameWithType: FormView.InsertItem
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
- uid: System.Web.UI.WebControls.FormView.InsertMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertMethod
  nameWithType: FormView.InsertMethod
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
- uid: System.Web.UI.WebControls.FormView.IsBindableType*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: IsBindableType
  nameWithType: FormView.IsBindableType
- uid: System.Web.UI.WebControls.FormView.ItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
- uid: System.Web.UI.WebControls.FormView.LoadControlState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadControlState
  nameWithType: FormView.LoadControlState
- uid: System.Web.UI.WebControls.FormView.LoadViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadViewState
  nameWithType: FormView.LoadViewState
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModifiedOuterTableStylePropertyName
  nameWithType: FormView.ModifiedOuterTableStylePropertyName
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: FormView.OnBubbleEvent
- uid: System.Web.UI.WebControls.FormView.OnInit*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnInit
  nameWithType: FormView.OnInit
- uid: System.Web.UI.WebControls.FormView.OnItemCommand*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCommand
  nameWithType: FormView.OnItemCommand
- uid: System.Web.UI.WebControls.FormView.OnItemCreated*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCreated
  nameWithType: FormView.OnItemCreated
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleted
  nameWithType: FormView.OnItemDeleted
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleting
  nameWithType: FormView.OnItemDeleting
- uid: System.Web.UI.WebControls.FormView.OnItemInserted*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserted
  nameWithType: FormView.OnItemInserted
- uid: System.Web.UI.WebControls.FormView.OnItemInserting*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserting
  nameWithType: FormView.OnItemInserting
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdated
  nameWithType: FormView.OnItemUpdated
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdating
  nameWithType: FormView.OnItemUpdating
- uid: System.Web.UI.WebControls.FormView.OnModeChanged*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanged
  nameWithType: FormView.OnModeChanged
- uid: System.Web.UI.WebControls.FormView.OnModeChanging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanging
  nameWithType: FormView.OnModeChanging
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: FormView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: FormView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.FormView.PageCount*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageCount
  nameWithType: FormView.PageCount
- uid: System.Web.UI.WebControls.FormView.PageIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndex
  nameWithType: FormView.PageIndex
- uid: System.Web.UI.WebControls.FormView.PagerSettings*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerSettings
  nameWithType: FormView.PagerSettings
- uid: System.Web.UI.WebControls.FormView.PagerStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerStyle
  nameWithType: FormView.PagerStyle
- uid: System.Web.UI.WebControls.FormView.PagerTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PerformDataBinding
  nameWithType: FormView.PerformDataBinding
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: FormView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: FormView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.FormView.Render*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Render
  nameWithType: FormView.Render
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
- uid: System.Web.UI.WebControls.FormView.Row*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Row
  nameWithType: FormView.Row
- uid: System.Web.UI.WebControls.FormView.RowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RowStyle
  nameWithType: FormView.RowStyle
- uid: System.Web.UI.WebControls.FormView.SaveControlState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveControlState
  nameWithType: FormView.SaveControlState
- uid: System.Web.UI.WebControls.FormView.SaveViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveViewState
  nameWithType: FormView.SaveViewState
- uid: System.Web.UI.WebControls.FormView.SelectedValue*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SelectedValue
  nameWithType: FormView.SelectedValue
- uid: System.Web.UI.WebControls.FormView.SetPageIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SetPageIndex
  nameWithType: FormView.SetPageIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.FormView.TagKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TagKey
  nameWithType: FormView.TagKey
- uid: System.Web.UI.WebControls.FormView.TopPagerRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
- uid: System.Web.UI.WebControls.FormView.TrackViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TrackViewState
  nameWithType: FormView.TrackViewState
- uid: System.Web.UI.WebControls.FormView.UpdateItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateItem
  nameWithType: FormView.UpdateItem
- uid: System.Web.UI.WebControls.FormView.UpdateMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
