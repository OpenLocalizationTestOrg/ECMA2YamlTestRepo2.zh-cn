### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileManager
  id: ProfileManager
  children:
  - System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  - System.Web.Profile.ProfileManager.ApplicationName
  - System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  - System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  - System.Web.Profile.ProfileManager.Enabled
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.Provider
  - System.Web.Profile.ProfileManager.Providers
  langs:
  - csharp
  name: ProfileManager
  nameWithType: ProfileManager
  fullName: System.Web.Profile.ProfileManager
  type: Class
  summary: "管理用户配置文件数据和设置。"
  remarks: "ASP.NET 配置文件用于存储和检索数据源，如数据库中的用户设置。 使用<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Profile%2A>访问用户配置文件 使用配置文件提供程序管理配置文件信息和属性值。       ProfileManager 类用于管理配置文件设置、 用户配置文件，搜索和删除不再使用的用户配置文件。 ProfileManager 类提供静态方法和属性，可以通过引用应用程序代码中的 ProfileManager 类进行访问。 有关示例，请参阅有关 ProfileManager 类的成员的本主题中的示例部分和主题中的其他示例。       默认情况下，所有 ASP.NET 应用程序禁用的用户配置文件。 若要启用的用户配置文件，设置`enabled`为 true，如下面的示例中所示的配置元素的属性。      ```   <configuration>     <system.web>       <profile enabled=&quot;true&quot; />     </system.web>   </configuration>   ```有关用户配置文件的详细信息，请参阅[ASP.NET 配置文件属性概述](~/add/includes/ajax-current-ext-md.md)。       配置文件提供程序用于存储和检索用户配置文件中的属性。 .NET Framework 包括<xref:System.Web.Profile.SqlProfileProvider>为 SQL Server 数据库中存储用户配置文件属性的类。</xref:System.Web.Profile.SqlProfileProvider> A<xref:System.Web.Profile.SqlProfileProvider>实例名为`AspNetSqlProvider`作为默认配置文件提供程序的计算机配置中指定。</xref:System.Web.Profile.SqlProfileProvider> `AspNetSqlProvider`实例连接到本地的 Web 服务器上的 SQL Server 数据库。 你可以指定<xref:System.Web.Profile.SqlProfileProvider>，将连接到其他 SQL Server 作为默认配置文件提供程序使用的配置元素和`defaultProvider`配置元素，如下面的示例中所示的属性。</xref:System.Web.Profile.SqlProfileProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows an ASP.NET page that uses the ProfileManager class to manage inactive profiles.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/t-system.web.profile.pro_1_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/t-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public static class ProfileManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  id: AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "以编程方式添加的配置文件属性。"
  remarks: "此方法在功能上等效于添加到属性`profile`配置文件节。 要调用此方法以添加配置文件属性，必须进行调用的方法将标有中<xref:System.Web.PreApplicationStartMethodAttribute>属性。</xref:System.Web.PreApplicationStartMethodAttribute>"
  syntax:
    content: public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);
    parameters:
    - id: property
      type: System.Web.Configuration.ProfilePropertySettings
      description: "要添加的属性设置。"
  overload: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.ApplicationName
  id: ApplicationName
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取或设置其来存储和检索配置文件信息的应用程序的名称。"
  remarks: "<xref:System.Web.Profile.ProfileManager>ApplicationName 属性用于将配置文件信息与不同的应用程序相关联。</xref:System.Web.Profile.ProfileManager> 这使多个应用程序能够使用相同的数据库来存储用户信息而不会遇到重复的用户之间的冲突。 多个 ASP.NET 应用程序可以通过在应用程序名称属性中指定相同的值使用相同的用户数据库。 可以以编程方式，设置应用程序名称属性也可以在其进行设置以声明方式的 Web 应用程序的配置文件使用`applicationName`属性。       如果没有为指定值`applicationName`属性在 Web 应用的配置文件，则.NET Framework 附带的配置文件提供程序使用<xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>ASP.NET 应用程序的属性值。</xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> 对于非 ASP.NET 应用程序，默认值是<xref:System.Diagnostics.ProcessModule.ModuleName%2A>属性值，不含文件扩展名。</xref:System.Diagnostics.ProcessModule.ModuleName%2A>       应用程序名称属性可公开<xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName>的默认配置文件提供程序的属性。</xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，它们可能配置一个不同的应用程序名称。 若要访问配置文件提供者不是默认的提供程序的应用程序名称，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性和访问<xref:System.Configuration.SettingsProvider.ApplicationName%2A>直接的提供程序的属性。</xref:System.Configuration.SettingsProvider.ApplicationName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>      1> [!CAUTION]&1;> 由于一个默认配置文件提供程序实例用于所有服务的请求<xref:System.Web.HttpApplication>对象，您可以有多个请求并发执行，并尝试设置的应用程序名称属性值。</xref:System.Web.HttpApplication> 应用程序名称属性不是线程安全的多个写操作，并更改应用程序名称属性值可能导致多个用户的应用程序的意外行为。 建议你避免编写代码，用户可设置的应用程序名称属性，除非需要它。 应用程序可能需要设置应用程序名称属性的示例是管理应用程序管理多个应用程序的配置文件数据。 此类应用程序应为单用户应用程序和不是 Web 应用程序。"
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It sets the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n  <add name=\"SqlProvider\"  \n    type=\"System.Web.Profile.SqlProfileProvider\"  \n    connectionStringName=\"SqlServices\"  \n    applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "其来存储和检索配置文件信息的应用程序的名称。"
  overload: System.Web.Profile.ProfileManager.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  id: AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取一个值，该值指示是否将 ASP.NET 页的执行结束时自动保存的用户配置文件。"
  remarks: "AutomaticSaveEnabled 属性指示是否为应用程序启用的用户配置文件的自动保存。 如果启用了自动保存，<xref:System.Web.Profile.ProfileModule>对象引发<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件并调用<xref:System.Web.Profile.ProfileBase.Save%2A>方法期间<xref:System.Web.HttpApplication.EndRequest>末尾的 ASP.NET 页执行的事件。</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.Profile.ProfileBase.Save%2A> </xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> </xref:System.Web.Profile.ProfileModule>       使用设置 AutomaticSaveEnabled 属性`automaticSaveEnabled`的 ASP.NET 应用程序的 Web.config 文件中的元素的属性。"
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It specifies the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the `automaticSaveEnabled` attribute to `true`.  \n  \n```  \n<profile enabled=\"true\"  \n  automaticSaveEnabled=\"true\"  \n  defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool AutomaticSaveEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果将 ASP.NET 页; 的执行结束时自动保存的用户配置文件否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "尝试至少获取 AutomaticSaveEnabled 属性值，但无<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>权限。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "删除上次活动日期和时间发生的指定的日期和时间之前的用户配置文件数据。"
  remarks: "DeleteInactiveProfiles 方法用于从指定的应用程序的数据源中删除未使用的配置文件数据`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索的配置文件，所有与配置文件<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`删除参数值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       DeleteInactiveProfiles 方法调用<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，不会删除其他数据源中的配置文件信息。 若要删除非活动管理的配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all profiles that have been unused for the specified number of days and are therefore considered inactive.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/32807c48-d028-41c4-938b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/32807c48-d028-41c4-938b-_1.aspx)]"
  syntax:
    content: public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名，身份验证，或者两种类型的配置文件被删除。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime>，标识哪些用户配置文件被视为处于非活动状态。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的用户配置文件之前或在此日期和时间，该配置文件被视为处于非活动状态。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Int32
      description: "从数据源中删除的配置文件数。"
  overload: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  id: DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "从数据源中删除指定的用户名称的配置文件。"
  remarks: "DeleteProfile 方法将删除所有配置文件信息和对指定的用户配置文件的属性`username`从指定的<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A>的数据源       DeleteProfile 方法调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>要执行删除操作的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则它们不会删除。 若要删除由配置文件提供者不是默认的提供程序的配置文件属性，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. The DeleteProfile method is called when a single profile is selected to be deleted. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter value passed to the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#10](~/add/codesnippet/csharp/m-system.web.profile.pro_0_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#10](~/add/codesnippet/visualbasic/m-system.web.profile.pro_0_1.aspx)]"
  syntax:
    content: public static bool DeleteProfile (string username);
    parameters:
    - id: username
      type: System.String
      description: "要删除的配置文件的用户名。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果找到并删除; 用户配置文件否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileManager.DeleteProfile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>为空字符串 (&quot;&quot;) 或包含逗号。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  id: DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "删除配置文件属性和提供的一系列的用户名的信息。"
  remarks: "DeleteProfiles 方法指定的应用程序的数据源中删除所有配置文件信息和属性指定配置文件的<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 若要删除的配置文件列表指定为的用户名称的字符串数组。 如果配置文件属性和信息中的用户名称的数据源中存在`usernames`参数，它们在被删除。       返回值可能与指定的数组的长度不同`usernames`。 这指示指定的数组中的配置文件的一些`usernames`了已从数据存储区中删除。       DeleteProfiles 方法调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则它们不会删除。 若要删除由配置文件提供者不是默认的提供程序的配置文件属性，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A <xref:System.Web.UI.WebControls.GridView> control displays the inactive profiles returned. Each row of the <xref:System.Web.UI.WebControls.GridView> control includes a button that deletes the profile for that row from the data source with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/m-system.web.profile.pro_4_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/m-system.web.profile.pro_4_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (string[] usernames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "要删除的配置文件的用户名称的字符串数组。"
    return:
      type: System.Int32
      description: "从数据源中删除的配置文件数。"
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The length of <code>usernames</code> is zero.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is an empty string (\"\") or contains a comma.  \n  \n \\- or -  \n  \n Two or more items in <code>usernames</code> have the same value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  id: DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "提供的配置文件列表的数据源中删除配置文件属性和信息。"
  remarks: "DeleteProfiles 方法指定的应用程序的数据源中删除所有配置文件信息和属性指定配置文件的<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 使用指定的配置文件，以删除列表<xref:System.Web.Profile.ProfileInfoCollection>作为传递`profiles`参数。</xref:System.Web.Profile.ProfileInfoCollection> A<xref:System.Web.Profile.ProfileInfoCollection>可以从返回<xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>， <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>， <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>，和<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法。</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfoCollection>       请注意，返回的值可能不同于<xref:System.Web.Profile.ProfileInfoCollection.Count%2A>提供<xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection>值</xref:System.Web.Profile.ProfileInfoCollection.Count%2A> 这指示在指定的配置文件的一些<xref:System.Web.Profile.ProfileInfoCollection>了已从数据存储区中删除。</xref:System.Web.Profile.ProfileInfoCollection>       DeleteProfiles 方法调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则它们不会删除。 若要删除由配置文件提供者不是默认的提供程序的配置文件属性，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods. The user can then delete the returned profiles with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/dbbefae3-6297-4bf8-9680-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/dbbefae3-6297-4bf8-9680-_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);
    parameters:
    - id: profiles
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> ，其中包含要删除的配置文件的配置文件信息。"
    return:
      type: System.Int32
      description: "从数据源中删除的配置文件数。"
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>profiles</code> has a <xref:System.Web.Profile.ProfileInfoCollection.Count*> value of zero.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is an empty string (\"\") or contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>profiles</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Enabled
  id: Enabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取一个值，该值指示是否为应用程序启用的用户配置文件。"
  remarks: "为应用程序中使用启用的用户配置文件`enabled`配置元素的属性。"
  example:
  - "The following code example shows the  element in the  section of the Web.config file for an ASP.NET application where the user profile has been enabled.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool Enabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用用户配置文件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileManager.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "检索在其中指定日期或早于指定日期发生的上一次活动日期和时间和配置文件的用户名称匹配的指定的名称的所有配置文件的配置文件信息。"
  remarks: "FindInactiveProfilesByUserName 方法用于检索指定的应用程序的所有未使用的用户配置文件的配置文件信息`applicationName`配置文件中的属性。 此方法将仅检索为其配置文件的用户名匹配所提供的配置文件`usernameToMatch`参数值。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索的配置文件，所有与配置文件<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`返回参数值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       你可以检索此信息使用的重载，以数据页<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>采用其他方法`pageIndex`和`pageSize`参数。</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>      1> [!NOTE]&1;> 配置文件提供程序可能支持的通配符字符`usernameToMatch`参数。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>类支持的通配符字符`usernameToMatch`参数。</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>       FindInactiveProfilesByUserName 方法调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序管理的非活动配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The sample allows the user to specify whether to return only inactive profiles. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/02c1131d-855c-4e58-af67-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/02c1131d-855c-4e58-af67-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    - id: usernameToMatch
      type: System.String
      description: "要搜索的用户名。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime>，标识哪些用户配置文件被视为处于非活动状态。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的用户配置文件之前或在此日期和时间，该配置文件被视为处于非活动状态。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含不活动的配置文件中的用户名与匹配所提供的用户配置文件信息<code> usernameToMatch </code>参数。"
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>为空字符串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "检索配置文件在其中指定日期或早于指定日期发生的上一次活动日期和时间和配置文件的用户名称匹配的指定的名称的数据页的配置文件信息。"
  remarks: "FindInactiveProfilesByUserName 方法用于检索由指定的应用程序的未使用的用户配置文件的配置文件信息`applicationName`配置文件中的属性。 此方法将仅检索为其在用户名与匹配所提供的配置文件`usernameToMatch`参数值。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索配置文件中，任何配置文件返回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`参数值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       FindInactiveProfilesByUserName 返回的结果都受`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数<xref:System.Web.Profile.ProfileInfo>对象中返回<xref:System.Web.Profile.ProfileInfoCollection>集合。</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> `pageIndex`参数标识要返回的结果页; 0 标识的第一页。 `totalRecords`参数是`out`参数设置为已配置的非活动状态的用户配置文件的总数`applicationName`，具体取决`authenticationOption`和`userInactiveSinceDate`参数。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值为 1`pageSize`为 5，<xref:System.Web.Profile.ProfileInfoCollection>返回将包含通过第 10 个非活动状态的配置文件的第六个。</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords`参数将设置为 13。       请注意，配置文件提供程序可能支持的通配符字符`usernameToMatch`参数。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>类支持的通配符字符`usernameToMatch`参数。</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>       FindInactiveProfilesByUserName 方法调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序管理的非活动配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/8901892e-7654-4efd-b373-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/8901892e-7654-4efd-b373-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    - id: usernameToMatch
      type: System.String
      description: "要搜索的用户名。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime>，标识哪些用户配置文件被视为处于非活动状态。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的用户配置文件之前或在此日期和时间，该配置文件被视为处于非活动状态。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    - id: pageIndex
      type: System.Int32
      description: "要返回的结果页的索引。 `pageIndex`是从零开始。"
    - id: pageSize
      type: System.Int32
      description: "要返回的结果页的大小。"
    - id: totalRecords
      type: System.Int32
      description: "此方法返回时，包含一个整数，标识配置文件的总数。 此参数传递时未经初始化。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含在用户名与匹配所提供的不活动配置文件的用户配置文件信息<code> usernameToMatch </code>参数。"
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "检索用户名与匹配的指定的名称的配置文件的所有配置文件的信息。"
  remarks: "FindProfilesByUserName 方法返回的所有配置文件信息为其在用户名与匹配所提供的列表`usernameToMatch`已配置的参数值<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性值。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。       你可以检索的数据使用的重载，以页中的用户配置文件的配置文件信息<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>采用其他方法`pageIndex`和`pageSize`参数。</xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>       请注意，配置文件提供程序可能支持的通配符字符`usernameToMatch`参数。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>类支持的通配符字符`usernameToMatch`参数。</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>       FindProfilesByUserName 方法调用<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/31ac7eb6-b35d-45af-a76d-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/31ac7eb6-b35d-45af-a76d-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    - id: usernameToMatch
      type: System.String
      description: "要搜索的用户名。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含在用户名与匹配所提供的配置文件的用户配置文件信息<code> usernameToMatch </code>参数。"
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>为空字符串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "检索在用户名与匹配的指定的名称的配置文件的数据页的配置文件信息。"
  remarks: "<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法返回为其配置文件的用户名匹配所提供的配置文件信息的列表`usernameToMatch`参数值的配置<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> </xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。       请注意，配置文件提供程序可能支持的通配符字符`usernameToMatch`参数。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>类支持的通配符字符`usernameToMatch`参数。</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>       FindProfilesByUserName 返回的结果都受`pageIndex`和`pageSize`参数。 `pageSize`参数标识<xref:System.Web.Profile.ProfileInfo>对象以返回处于<xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection></xref:System.Web.Profile.ProfileInfo>的最大数目 `pageIndex`参数标识要返回; 的结果页零标识的第一页。 `totalRecords`参数是`out`参数设置为用于通过指定的应用程序处于非活动状态的用户配置文件的总数`applicationName`特性在配置文件中，根据所提供`authenticationOption`。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值为 1`pageSize`为 5，<xref:System.Web.Profile.ProfileInfoCollection>返回将包含通过第 10 个配置文件的第六个。</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords`参数将设置为 13。       <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/3375ceaa-fae5-498d-b74c-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/3375ceaa-fae5-498d-b74c-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    - id: usernameToMatch
      type: System.String
      description: "要搜索的用户名。"
    - id: pageIndex
      type: System.Int32
      description: "要返回的结果页的索引。 `pageIndex`是从零开始。"
    - id: pageSize
      type: System.Int32
      description: "要返回的结果页的大小。"
    - id: totalRecords
      type: System.Int32
      description: "此方法返回时，包含一个整数，标识配置文件的总数。 此参数传递时未经初始化。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含在用户名与匹配所提供的配置文件的用户配置文件信息<code> usernameToMatch </code>参数。"
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "检索最后一次活动日期或之前的指定的日期和时间发生的配置文件的所有用户配置文件数据。"
  remarks: "GetAllInactiveProfiles 方法用于从指定的应用程序的所有未使用的用户配置文件的数据源中检索配置文件信息`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索配置文件中，任何配置文件返回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`参数值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       你可以检索处于非活动状态的用户配置文件使用的重载，以数据页的配置文件信息<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>采用其他方法`pageIndex`和`pageSize`参数。</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>       GetAllInactiveProfiles 方法调用<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序管理的未使用配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#7](~/add/codesnippet/csharp/12596197-85de-46bb-89a0-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#7](~/add/codesnippet/visualbasic/12596197-85de-46bb-89a0-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime>，标识哪些用户配置文件被视为处于非活动状态。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的用户配置文件之前或在此日期和时间，该配置文件被视为处于非活动状态。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含有关处于非活动状态的配置文件的用户配置文件信息。"
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "检索的页<xref href=&quot;System.Web.Profile.ProfileInfo&quot;></xref>最后一次活动日期或之前的指定的日期和时间发生的用户配置文件的对象。"
  remarks: "GetAllInactiveProfiles 方法用于通过指定的应用程序的未使用的用户配置文件的数据源中检索配置文件信息`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索配置文件中，任何配置文件返回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况之前指定`userInactiveSinceDate`参数值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       GetAllInactiveProfiles 返回的结果都受`pageIndex`和`pageSize`参数。 `pageSize`参数标识<xref:System.Web.Profile.ProfileInfo>对象以返回处于<xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection></xref:System.Web.Profile.ProfileInfo>的最大数目 `pageIndex`参数标识要返回; 的结果页零标识的第一页。 `totalRecords`参数是`out`参数设置为已配置的非活动状态的用户配置文件的总数`applicationName`，具体取决`authenticationOption`和`userInactiveSinceDate`参数。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值是指具有`pageSize`为 5，<xref:System.Web.Profile.ProfileInfoCollection>返回将包含通过第 10 个非活动状态的配置文件的第六个。</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords`参数将设置为 13。       GetAllInactiveProfiles 方法调用<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET Web page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/40315987-b58d-4459-883e-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/40315987-b58d-4459-883e-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime>，标识哪些用户配置文件被视为处于非活动状态。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的用户配置文件之前或在此日期和时间，该配置文件被视为处于非活动状态。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    - id: pageIndex
      type: System.Int32
      description: "要返回的结果页的索引。 `pageIndex`是从零开始。"
    - id: pageSize
      type: System.Int32
      description: "要返回的结果页的大小。"
    - id: totalRecords
      type: System.Int32
      description: "此方法返回时，包含一个整数，标识配置文件的总数。 此参数传递时未经初始化。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含有关处于非活动状态的配置文件的用户配置文件信息。"
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "检索数据源中的配置文件的用户配置文件数据。"
  remarks: "GetAllProfiles 方法用于从指定的应用程序的数据源中检索配置文件信息`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。       你可以检索的页面<xref:System.Web.Profile.ProfileInfo>为用户配置文件使用的重载，以对象<xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>采用其他方法`pageIndex`和`pageSize`参数。</xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfo>       GetAllProfiles 方法调用<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName`.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/14cc8f0b-52b7-434e-bc19-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/14cc8f0b-52b7-434e-bc19-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含所有数据源中的配置文件的用户配置文件信息。"
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "检索用户配置文件数据的页面。"
  remarks: "GetAllProfiles 方法用于从指定的应用程序的数据源中检索配置文件信息`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。       返回的结果<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>受到`pageIndex`和`pageSize`参数。</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> `pageSize`参数标识<xref:System.Web.Profile.ProfileInfo>对象以返回处于<xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection></xref:System.Web.Profile.ProfileInfo>的最大数目 `pageIndex`参数标识要返回; 的结果页零标识的第一页。 `totalRecords`参数是`out`参数设置为已配置的非活动状态的用户配置文件的总数`applicationName`，将根据所提供`authenticationOption`。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值是指具有`pageSize`为 5，<xref:System.Web.Profile.ProfileInfoCollection>返回将包含通过第 10 个配置文件的第六个。</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords`参数将设置为 13。       GetAllProfiles 方法调用<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>的默认配置文件提供程序的方法。</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>的提供程序直接的方法。</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` in pages of data.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#3](~/add/codesnippet/csharp/3142f281-fd51-44c5-967b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#3](~/add/codesnippet/visualbasic/3142f281-fd51-44c5-967b-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    - id: pageIndex
      type: System.Int32
      description: "要返回的结果页的索引。 `pageIndex`是从零开始。"
    - id: pageSize
      type: System.Int32
      description: "要返回的结果页的大小。"
    - id: totalRecords
      type: System.Int32
      description: "此方法返回时，包含一个整数，标识配置文件的总数。 此参数传递时未经初始化。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含所有数据源中的配置文件的用户配置文件信息。"
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "指定的日期或之前，请获取上一次活动日期发生的配置文件数。"
  remarks: "GetNumberOfInactiveProfiles 方法用于从指定的应用程序的数据源检索的所有未使用的用户配置文件计数`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索的配置文件，所有配置文件将计算具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`参数值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>"
  example:
  - "The following code example allows a user to view and delete information for active and inactive profiles based on search criteria. A count of inactive profiles is displayed using the results of the GetNumberOfInactiveProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/456bb4d7-dc47-48d9-b96d-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/456bb4d7-dc47-48d9-b96d-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>标识哪些用户配置文件被视为处于非活动状态的对象。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的用户配置文件之前或在此日期和时间，该配置文件被视为处于非活动状态。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Int32
      description: "在指定的日期和时间之前发生的最后一个活动日期的数据源中的配置文件数。"
  overload: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "在数据源中获取配置文件的数。"
  remarks: "GetNumberOfProfiles 方法用于从指定的应用程序的数据源检索的所有用户配置文件计数`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` and also returns the number of profiles.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "之一<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>枚举值，指定是否匿名的经过身份验证，或返回这两种类型的配置文件。"
    return:
      type: System.Int32
      description: "数据源中的配置文件数。"
  overload: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Provider
  id: Provider
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取应用程序默认配置文件提供程序的引用。"
  remarks: "提供程序属性使您能够直接引用应用程序的默认配置文件提供程序。 这通常用于访问自定义配置文件提供程序的成员，它们不属于<xref:System.Web.Profile.ProfileProvider>抽象基的类。</xref:System.Web.Profile.ProfileProvider>"
  example:
  - "The following code example lists properties of the default profile provider.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_6_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#2](~/add/codesnippet/csharp/p-system.web.profile.pro_6_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProvider Provider { get; }
    return:
      type: System.Web.Profile.ProfileProvider
      description: "应用程序默认配置文件提供程序。"
  overload: System.Web.Profile.ProfileManager.Provider*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "尝试至少获取提供程序属性值，但无<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>权限。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Providers
  id: Providers
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "获取 ASP.NET 应用程序配置文件提供程序的集合。"
  remarks: "提供程序属性引用所有启用应用程序的配置文件提供程序，包括提供程序中的计算机配置和提供程序添加到所有的 Web.config 文件中添加。 你可以控制哪些配置文件提供程序可用于在配置文件中使用部分中的元素的应用程序。 例如，下面的 Web.config 文件中删除父配置文件中指定的配置文件提供程序，并将添加<xref:System.Web.Profile.SqlProfileProvider>为应用程序配置文件提供程序的实例。</xref:System.Web.Profile.SqlProfileProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile enabled=&quot;true&quot; defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```指定时部分中，你必须指定默认提供程序通过设置`defaultProvider`属性。 如果未在 Web.config 文件中指定一个部分，将使用计算机配置中的值与<xref:System.Web.Profile.SqlProfileProvider>名为 AspNetSqlProvider 实例则在建立作为默认的提供程序。</xref:System.Web.Profile.SqlProfileProvider>       可以通过配置文件提供程序编制索引的名称并将它强制转换为所需的类型来获取对提供程序提供程序集合中的强类型化的引用。"
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#9](~/add/codesnippet/visualbasic/p-system.web.profile.pro_5_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#9](~/add/codesnippet/csharp/p-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProviderCollection Providers { get; }
    return:
      type: System.Web.Profile.ProfileProviderCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileProviderCollection&quot;> </xref>的 ASP.NET 应用程序配置的配置文件提供程序。"
  overload: System.Web.Profile.ProfileManager.Providers*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "尝试至少获取提供程序属性值，但无<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>权限。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
- uid: System.Web.Configuration.ProfilePropertySettings
  parent: System.Web.Configuration
  isExternal: false
  name: ProfilePropertySettings
  nameWithType: ProfilePropertySettings
  fullName: System.Web.Configuration.ProfilePropertySettings
- uid: System.Web.Profile.ProfileManager.ApplicationName
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileAuthenticationOption
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAuthenticationOption
  nameWithType: ProfileAuthenticationOption
  fullName: System.Web.Profile.ProfileAuthenticationOption
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
- uid: System.Web.Profile.ProfileInfoCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
- uid: System.Web.Profile.ProfileManager.Enabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.Provider
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
- uid: System.Web.Profile.ProfileProvider
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProvider
  nameWithType: ProfileProvider
  fullName: System.Web.Profile.ProfileProvider
- uid: System.Web.Profile.ProfileManager.Providers
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
- uid: System.Web.Profile.ProfileProviderCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProviderCollection
  nameWithType: ProfileProviderCollection
  fullName: System.Web.Profile.ProfileProviderCollection
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty
  nameWithType: ProfileManager.AddDynamicProfileProperty
- uid: System.Web.Profile.ProfileManager.ApplicationName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles
  nameWithType: ProfileManager.DeleteInactiveProfiles
- uid: System.Web.Profile.ProfileManager.DeleteProfile*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile
  nameWithType: ProfileManager.DeleteProfile
- uid: System.Web.Profile.ProfileManager.DeleteProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles
  nameWithType: ProfileManager.DeleteProfiles
- uid: System.Web.Profile.ProfileManager.Enabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName
  nameWithType: ProfileManager.FindInactiveProfilesByUserName
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName
  nameWithType: ProfileManager.FindProfilesByUserName
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles
  nameWithType: ProfileManager.GetAllInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetAllProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles
  nameWithType: ProfileManager.GetAllProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles
  nameWithType: ProfileManager.GetNumberOfProfiles
- uid: System.Web.Profile.ProfileManager.Provider*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
- uid: System.Web.Profile.ProfileManager.Providers*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
