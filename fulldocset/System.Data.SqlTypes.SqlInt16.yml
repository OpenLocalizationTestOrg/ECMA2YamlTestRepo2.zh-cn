### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlInt16
  id: SqlInt16
  children:
  - System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)
  - System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Equals(System.Object)
  - System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.GetHashCode
  - System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.IsNull
  - System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.MaxValue
  - System.Data.SqlTypes.SqlInt16.MinValue
  - System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Null
  - System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Int16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)
  - System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Parse(System.String)
  - System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlInt16.ToSqlBoolean
  - System.Data.SqlTypes.SqlInt16.ToSqlByte
  - System.Data.SqlTypes.SqlInt16.ToSqlDecimal
  - System.Data.SqlTypes.SqlInt16.ToSqlDouble
  - System.Data.SqlTypes.SqlInt16.ToSqlInt32
  - System.Data.SqlTypes.SqlInt16.ToSqlInt64
  - System.Data.SqlTypes.SqlInt16.ToSqlMoney
  - System.Data.SqlTypes.SqlInt16.ToSqlSingle
  - System.Data.SqlTypes.SqlInt16.ToSqlString
  - System.Data.SqlTypes.SqlInt16.ToString
  - System.Data.SqlTypes.SqlInt16.Value
  - System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Zero
  langs:
  - csharp
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
  type: Struct
  summary: "表示要存储在或从数据库中检索一个 16 位带符号的整数。"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlInt16 : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)
  id: '#ctor(System.Int16)'
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: SqlInt16(Int16)
  nameWithType: SqlInt16.SqlInt16(Int16)
  fullName: System.Data.SqlTypes.SqlInt16.SqlInt16(Int16)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "初始化的新实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构使用提供的短整型参数。"
  syntax:
    content: public SqlInt16 (short value);
    parameters:
    - id: value
      type: System.Int16
      description: "短的整数。"
  overload: System.Data.SqlTypes.SqlInt16.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Add(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Add(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Add(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算两个和<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 Add (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含两个总和<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: BitwiseAnd(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.BitwiseAnd(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.BitwiseAnd(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算的按位 AND 其<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 BitwiseAnd (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含结果的按位 and。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.BitwiseAnd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: BitwiseOr(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.BitwiseOr(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.BitwiseOr(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算其两个的按位 OR <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 BitwiseOr (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含结果的按位 OR。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.BitwiseOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)
  id: CompareTo(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: CompareTo(SqlInt16)
  nameWithType: SqlInt16.CompareTo(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.CompareTo(SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较此<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>实例与所提供<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>并返回对其相对值的指示。"
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlInt16 value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlInt16
      description: "<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>进行比较。"
    return:
      type: System.Int32
      description: "一个带符号的数字，指示该实例和对象的相对值。       <table><thead><tr><th> 返回值       </th><th> 条件       </th></tr></thead><tbody><tr><td> 小于零       </td><td> 此实例是小于的对象。       </td></tr><tr><td> 零       </td><td> 此实例与对象相同。       </td></tr><tr><td> 大于零       </td><td> 此实例大于对象-该对象为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlInt16.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlInt16.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlInt16.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较此<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>实例与所提供<xref:System.Object>并返回对其相对值的指示。</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>进行比较。</xref:System.Object>"
    return:
      type: System.Int32
      description: "一个带符号的数字，指示该实例和对象的相对值。       <table><thead><tr><th> 返回值       </th><th> 条件       </th></tr></thead><tbody><tr><td> 小于零       </td><td> 此实例是小于的对象。       </td></tr><tr><td> 零       </td><td> 此实例与对象相同。       </td></tr><tr><td> 大于零       </td><td> 此实例大于对象-或-对象为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlInt16.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Divide(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Divide(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Divide(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将第一个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数除以第二个操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 Divide (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>其<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含除法运算的结果。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlInt16.Equals(Object)
  fullName: System.Data.SqlTypes.SqlInt16.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较指定的对象和<xref:System.Data.SqlTypes.SqlInt16.Value*>属性<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>对象。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要进行比较的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对象的实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>和两种方法是相等; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlInt16.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Equals(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Equals(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Equals(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构，以确定它们是否相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果两个值相等。 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果任一实例为 null，则<xref uid=&quot;langword_csharp_SqlInt16&quot; name=&quot;SqlInt16&quot; href=&quot;&quot;></xref>将为 null。"
  overload: System.Data.SqlTypes.SqlInt16.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlInt16.GetHashCode()
  fullName: System.Data.SqlTypes.SqlInt16.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "返回此实例的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.Data.SqlTypes.SqlInt16.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlInt16.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlInt16.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "返回指定的 XML 架构定义语言 (XSD) <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>。"
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "An <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A<xref:System.String>值，该值指示指定的 XSD <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>。</xref:System.String>"
  overload: System.Data.SqlTypes.SqlInt16.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: GreaterThan(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.GreaterThan(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.GreaterThan(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较两个实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>以确定第一个是否大于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例大于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.GreaterThanOrEqual(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较两个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构，以确定第一个是否大于或等于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>的第一个实例是否大于或等于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlInt16.IsNull
  fullName: System.Data.SqlTypes.SqlInt16.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指示是否这<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构为 null。"
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果为 null。 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 有关详细信息，请参阅[处理 Null 值](~/add/includes/ajax-current-ext-md.md)。"
  overload: System.Data.SqlTypes.SqlInt16.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: LessThan(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.LessThan(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.LessThan(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较两个实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>以确定第一个是否小于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: LessThanOrEqual(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.LessThanOrEqual(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.LessThanOrEqual(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较两个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构，以确定第一个是否小于或等于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于或等于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: MaxValue
  nameWithType: SqlInt16.MaxValue
  fullName: System.Data.SqlTypes.SqlInt16.MaxValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一个常数，表示的最大可能值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>。"
  remarks: "此常量的值为 32767。"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlInt16 MaxValue;
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: MinValue
  nameWithType: SqlInt16.MinValue
  fullName: System.Data.SqlTypes.SqlInt16.MinValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一个常数，表示的最小可能值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>。"
  remarks: "此常量的值是-32768。"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlInt16 MinValue;
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Mod(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Mod(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Mod(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算其第一个相除的余数<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数除以第二个操作数操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 Mod (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>包含该余数。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.Mod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Modulus(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Modulus(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Modulus(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将两个划分<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>值并返回余数。"
  remarks: "如果任一实例`x`或`y`是 null，则值为 null。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 Modulus (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref> value."
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref> value."
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "在执行除法后剩余<code> x </code>和<code> y </code>。"
  overload: System.Data.SqlTypes.SqlInt16.Modulus*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Multiply(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Multiply(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Multiply(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算两个产品<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 Multiply (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>包含两个参数的乘积。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: NotEquals(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.NotEquals(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.NotEquals(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构，以确定它们是否不相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否不相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否相等。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlInt16.Null
  fullName: System.Data.SqlTypes.SqlInt16.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "表示<xref href=&quot;System.DBNull&quot;> </xref> ，可以将其分配到此实例的<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。"
  remarks: "为函数 null 作为常量<xref:System.Data.SqlTypes.SqlInt16>结构。</xref:System.Data.SqlTypes.SqlInt16> 有关详细信息，请参阅[处理 Null 值](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlInt16 Null;
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)
  id: OnesComplement(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: OnesComplement(SqlInt16)
  nameWithType: SqlInt16.OnesComplement(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.OnesComplement(SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "~ 运算符将执行按位二进制反码运算上其<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 OnesComplement (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含指定的求补<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Addition(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Addition(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Addition(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算两个和<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Addition (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含两个总和<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_BitwiseAnd(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_BitwiseAnd(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算的按位 AND 其<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_BitwiseAnd (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含结果的按位 and。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_BitwiseAnd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_BitwiseOr(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_BitwiseOr(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_BitwiseOr(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算其两个的按位 OR <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_BitwiseOr (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含结果的按位 OR。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_BitwiseOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Division(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Division(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Division(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将第一个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数除以第二个操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Division (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>其<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含除法运算的结果。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Equality(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Equality(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Equality(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构，以确定它们是否相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否不相等。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_ExclusiveOr(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_ExclusiveOr(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行按位异或运算上提供的参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_ExclusiveOr (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含结果的按位 XOR。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_ExclusiveOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt16)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlInt16.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt16)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlInt16.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt16)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlInt16.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Int16)
  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Int16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlInt16)
  nameWithType: SqlInt16.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static short op_Explicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
    return:
      type: System.Int16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlInt16)
  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlInt32)
  nameWithType: SqlInt16.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Explicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlInt16)
  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlInt64)
  nameWithType: SqlInt16.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Explicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt16)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlInt16.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt16)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlInt16.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt16)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlInt16.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_GreaterThan(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_GreaterThan(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_GreaterThan(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较两个实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>以确定第一个是否大于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例大于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_GreaterThanOrEqual(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较两个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构，以确定第一个是否大于或等于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>的第一个实例是否大于或等于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)
  id: op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Implicit(SqlByte)
  nameWithType: SqlInt16.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlInt16.op_Implicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Implicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)
  id: op_Implicit(System.Int16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Implicit(Int16)
  nameWithType: SqlInt16.op_Implicit(Int16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Implicit(Int16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Implicit (short x);
    parameters:
    - id: x
      type: System.Int16
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlInt16.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Inequality(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Inequality(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Inequality(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构，以确定它们是否不相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否不相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否相等。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_LessThan(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_LessThan(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_LessThan(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较两个实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>以确定第一个是否小于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_LessThanOrEqual(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较两个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构，以确定第一个是否小于或等于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于或等于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Modulus(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Modulus(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Modulus(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算其第一个相除的余数<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数除以第二个操作数操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Modulus (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>包含该余数。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_Modulus*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Multiply(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Multiply(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Multiply(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算两个产品<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Multiply (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>包含两个参数的乘积。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)
  id: op_OnesComplement(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_OnesComplement(SqlInt16)
  nameWithType: SqlInt16.op_OnesComplement(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_OnesComplement(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "~ 运算符将执行按位二进制反码运算上其<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_OnesComplement (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含指定的求补<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_Subtraction(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Subtraction(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Subtraction(SqlInt16,SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "中减去第二个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>从第一个参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_Subtraction (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含该减法运算的结果。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: op_UnaryNegation(SqlInt16)
  nameWithType: SqlInt16.op_UnaryNegation(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_UnaryNegation(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一元减运算符对求反<xref:System.Data.SqlTypes.SqlInt16.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>操作数。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 op_UnaryNegation (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，其中包含的相反的值。"
  overload: System.Data.SqlTypes.SqlInt16.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlInt16.Parse(String)
  fullName: System.Data.SqlTypes.SqlInt16.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将转换<xref:System.String>为其等效的 16 位有符号整数的数字表示形式。</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> ，无法被分析。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "指定<xref:System.String>.</xref:System.String>中包含的值等效的 16 位有符号的整数"
  overload: System.Data.SqlTypes.SqlInt16.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Subtract(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Subtract(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Subtract(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "中减去第二个<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>从第一个参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 Subtract (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlInt16.Value*>属性包含该减法运算的结果。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成员支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "XML 架构，由.NET Framework。"
  overload: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成员支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader " name="XmlReader " href=""></xref>
  overload: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成员支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter " name="XmlWriter " href=""></xref>
  overload: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlInt16.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Data.SqlTypes.SqlInt16.Value*>为非零;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果零; 否则为 Null。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlInt16.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>结构，它的<> *1> 等于<> *1> 此<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。 如果值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>小于 0 或大于 255，<xref:System.OverflowException>发生。</xref:System.OverflowException>"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlInt16.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，它的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>等于此值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlInt16.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;></xref>结构，它的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>等于此值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlInt16.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;></xref>结构，它的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>等于此值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlInt16.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;></xref>结构，它的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>等于此值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlInt16.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;></xref>结构，它的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>等于此值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlInt16.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;></xref>结构，它的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>等于此值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlInt16.ToSqlString()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>表示<xref:System.Data.SqlTypes.SqlInt16.Value*>的此实例的<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  overload: System.Data.SqlTypes.SqlInt16.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlInt16.ToString()
  fullName: System.Data.SqlTypes.SqlInt16.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将转换<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref> <xref:System.String>.</xref:System.String>结构"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>对象，表示<xref:System.Data.SqlTypes.SqlInt16.Value*>的此实例的<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>。</xref:System.Data.SqlTypes.SqlInt16.Value*> </xref:System.String>"
  overload: System.Data.SqlTypes.SqlInt16.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Value
  id: Value
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Value
  nameWithType: SqlInt16.Value
  fullName: System.Data.SqlTypes.SqlInt16.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "获取此实例的值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。 此属性是只读的。"
  syntax:
    content: public short Value { get; }
    return:
      type: System.Int16
      description: "一个短整型，表示此值<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlInt16.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Xor(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Xor(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Xor(SqlInt16,SqlInt16)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行按位异或运算上提供的参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt16 Xor (System.Data.SqlTypes.SqlInt16 x, System.Data.SqlTypes.SqlInt16 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构，其中包含 XOR 运算的结果。"
  overload: System.Data.SqlTypes.SqlInt16.Xor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt16.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  name: Zero
  nameWithType: SqlInt16.Zero
  fullName: System.Data.SqlTypes.SqlInt16.Zero
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "表示一个零值，可以分配给<xref:System.Data.SqlTypes.SqlInt16.Value*>实例的属性<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>结构。</xref:System.Data.SqlTypes.SqlInt16.Value*>"
  remarks: "零个字段是常量<xref:System.Data.SqlTypes.SqlInt16>结构。</xref:System.Data.SqlTypes.SqlInt16>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlInt16 Zero;
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: SqlInt16(Int16)
  nameWithType: SqlInt16.SqlInt16(Int16)
  fullName: System.Data.SqlTypes.SqlInt16.SqlInt16(Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Add(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Add(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Add(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: BitwiseAnd(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.BitwiseAnd(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.BitwiseAnd(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: BitwiseOr(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.BitwiseOr(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.BitwiseOr(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: CompareTo(SqlInt16)
  nameWithType: SqlInt16.CompareTo(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.CompareTo(SqlInt16)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlInt16.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlInt16.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Divide(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Divide(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Divide(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlInt16.Equals(Object)
  fullName: System.Data.SqlTypes.SqlInt16.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Equals(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Equals(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Equals(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlInt16.GetHashCode
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlInt16.GetHashCode()
  fullName: System.Data.SqlTypes.SqlInt16.GetHashCode()
- uid: System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlInt16.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlInt16.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: GreaterThan(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.GreaterThan(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.GreaterThan(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: GreaterThanOrEqual(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.GreaterThanOrEqual(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.IsNull
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: IsNull
  nameWithType: SqlInt16.IsNull
  fullName: System.Data.SqlTypes.SqlInt16.IsNull
- uid: System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: LessThan(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.LessThan(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.LessThan(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: LessThanOrEqual(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.LessThanOrEqual(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.LessThanOrEqual(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.MaxValue
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: MaxValue
  nameWithType: SqlInt16.MaxValue
  fullName: System.Data.SqlTypes.SqlInt16.MaxValue
- uid: System.Data.SqlTypes.SqlInt16.MinValue
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: MinValue
  nameWithType: SqlInt16.MinValue
  fullName: System.Data.SqlTypes.SqlInt16.MinValue
- uid: System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Mod(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Mod(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Mod(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Modulus(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Modulus(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Modulus(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Multiply(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Multiply(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Multiply(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: NotEquals(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.NotEquals(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.NotEquals(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.Null
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: "Null"
  nameWithType: SqlInt16.Null
  fullName: System.Data.SqlTypes.SqlInt16.Null
- uid: System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: OnesComplement(SqlInt16)
  nameWithType: SqlInt16.OnesComplement(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.OnesComplement(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Addition(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Addition(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Addition(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_BitwiseAnd(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_BitwiseAnd(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_BitwiseOr(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_BitwiseOr(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_BitwiseOr(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Division(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Division(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Division(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Equality(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Equality(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Equality(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_ExclusiveOr(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_ExclusiveOr(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlInt16.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlInt16.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlInt16.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Int16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlInt16)
  nameWithType: SqlInt16.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlInt32)
  nameWithType: SqlInt16.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlInt64)
  nameWithType: SqlInt16.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlInt16.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlInt16.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlInt16.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlInt16.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_GreaterThan(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_GreaterThan(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_GreaterThan(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_GreaterThanOrEqual(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_GreaterThanOrEqual(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Implicit(SqlByte)
  nameWithType: SqlInt16.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlInt16.op_Implicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Implicit(Int16)
  nameWithType: SqlInt16.op_Implicit(Int16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Implicit(Int16)
- uid: System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Inequality(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Inequality(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Inequality(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_LessThan(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_LessThan(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_LessThan(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_LessThanOrEqual(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_LessThanOrEqual(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Modulus(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Modulus(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Modulus(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Multiply(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Multiply(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Multiply(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_OnesComplement(SqlInt16)
  nameWithType: SqlInt16.op_OnesComplement(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_OnesComplement(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Subtraction(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.op_Subtraction(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_Subtraction(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_UnaryNegation(SqlInt16)
  nameWithType: SqlInt16.op_UnaryNegation(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.op_UnaryNegation(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.Parse(System.String)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Parse(String)
  nameWithType: SqlInt16.Parse(String)
  fullName: System.Data.SqlTypes.SqlInt16.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Subtract(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Subtract(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Subtract(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlInt16.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlInt16.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlInt16.ToSqlByte
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlInt16.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlByte()
- uid: System.Data.SqlTypes.SqlInt16.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlInt16.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlInt16.ToSqlDouble
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlInt16.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlInt16.ToSqlInt32
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlInt16.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlInt16.ToSqlInt64
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlInt16.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlInt16.ToSqlMoney
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlInt16.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlInt16.ToSqlSingle
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlInt16.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlInt16.ToSqlString
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlInt16.ToSqlString()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlString()
- uid: System.Data.SqlTypes.SqlInt16.ToString
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToString()
  nameWithType: SqlInt16.ToString()
  fullName: System.Data.SqlTypes.SqlInt16.ToString()
- uid: System.Data.SqlTypes.SqlInt16.Value
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Value
  nameWithType: SqlInt16.Value
  fullName: System.Data.SqlTypes.SqlInt16.Value
- uid: System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Xor(SqlInt16,SqlInt16)
  nameWithType: SqlInt16.Xor(SqlInt16,SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Xor(SqlInt16,SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.Zero
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Zero
  nameWithType: SqlInt16.Zero
  fullName: System.Data.SqlTypes.SqlInt16.Zero
- uid: System.Data.SqlTypes.SqlInt16.#ctor*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16.SqlInt16
- uid: System.Data.SqlTypes.SqlInt16.Add*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Add
  nameWithType: SqlInt16.Add
- uid: System.Data.SqlTypes.SqlInt16.BitwiseAnd*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: BitwiseAnd
  nameWithType: SqlInt16.BitwiseAnd
- uid: System.Data.SqlTypes.SqlInt16.BitwiseOr*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: BitwiseOr
  nameWithType: SqlInt16.BitwiseOr
- uid: System.Data.SqlTypes.SqlInt16.CompareTo*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: CompareTo
  nameWithType: SqlInt16.CompareTo
- uid: System.Data.SqlTypes.SqlInt16.Divide*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Divide
  nameWithType: SqlInt16.Divide
- uid: System.Data.SqlTypes.SqlInt16.Equals*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Equals
  nameWithType: SqlInt16.Equals
- uid: System.Data.SqlTypes.SqlInt16.GetHashCode*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: GetHashCode
  nameWithType: SqlInt16.GetHashCode
- uid: System.Data.SqlTypes.SqlInt16.GetXsdType*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: GetXsdType
  nameWithType: SqlInt16.GetXsdType
- uid: System.Data.SqlTypes.SqlInt16.GreaterThan*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: GreaterThan
  nameWithType: SqlInt16.GreaterThan
- uid: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlInt16.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlInt16.IsNull*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: IsNull
  nameWithType: SqlInt16.IsNull
- uid: System.Data.SqlTypes.SqlInt16.LessThan*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: LessThan
  nameWithType: SqlInt16.LessThan
- uid: System.Data.SqlTypes.SqlInt16.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlInt16.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlInt16.Mod*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Mod
  nameWithType: SqlInt16.Mod
- uid: System.Data.SqlTypes.SqlInt16.Modulus*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Modulus
  nameWithType: SqlInt16.Modulus
- uid: System.Data.SqlTypes.SqlInt16.Multiply*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Multiply
  nameWithType: SqlInt16.Multiply
- uid: System.Data.SqlTypes.SqlInt16.NotEquals*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: NotEquals
  nameWithType: SqlInt16.NotEquals
- uid: System.Data.SqlTypes.SqlInt16.OnesComplement*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: OnesComplement
  nameWithType: SqlInt16.OnesComplement
- uid: System.Data.SqlTypes.SqlInt16.op_Addition*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Addition
  nameWithType: SqlInt16.op_Addition
- uid: System.Data.SqlTypes.SqlInt16.op_BitwiseAnd*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_BitwiseAnd
  nameWithType: SqlInt16.op_BitwiseAnd
- uid: System.Data.SqlTypes.SqlInt16.op_BitwiseOr*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_BitwiseOr
  nameWithType: SqlInt16.op_BitwiseOr
- uid: System.Data.SqlTypes.SqlInt16.op_Division*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Division
  nameWithType: SqlInt16.op_Division
- uid: System.Data.SqlTypes.SqlInt16.op_Equality*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Equality
  nameWithType: SqlInt16.op_Equality
- uid: System.Data.SqlTypes.SqlInt16.op_ExclusiveOr*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_ExclusiveOr
  nameWithType: SqlInt16.op_ExclusiveOr
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Explicit
  nameWithType: SqlInt16.op_Explicit
- uid: System.Data.SqlTypes.SqlInt16.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlInt16.op_GreaterThan
- uid: System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlInt16.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlInt16.op_Implicit*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Implicit
  nameWithType: SqlInt16.op_Implicit
- uid: System.Data.SqlTypes.SqlInt16.op_Inequality*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Inequality
  nameWithType: SqlInt16.op_Inequality
- uid: System.Data.SqlTypes.SqlInt16.op_LessThan*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_LessThan
  nameWithType: SqlInt16.op_LessThan
- uid: System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlInt16.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlInt16.op_Modulus*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Modulus
  nameWithType: SqlInt16.op_Modulus
- uid: System.Data.SqlTypes.SqlInt16.op_Multiply*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Multiply
  nameWithType: SqlInt16.op_Multiply
- uid: System.Data.SqlTypes.SqlInt16.op_OnesComplement*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_OnesComplement
  nameWithType: SqlInt16.op_OnesComplement
- uid: System.Data.SqlTypes.SqlInt16.op_Subtraction*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_Subtraction
  nameWithType: SqlInt16.op_Subtraction
- uid: System.Data.SqlTypes.SqlInt16.op_UnaryNegation*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: op_UnaryNegation
  nameWithType: SqlInt16.op_UnaryNegation
- uid: System.Data.SqlTypes.SqlInt16.Parse*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Parse
  nameWithType: SqlInt16.Parse
- uid: System.Data.SqlTypes.SqlInt16.Subtract*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Subtract
  nameWithType: SqlInt16.Subtract
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlInt16.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlInt16.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlInt16.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlInt16.ToSqlByte*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlInt16.ToSqlByte
- uid: System.Data.SqlTypes.SqlInt16.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlInt16.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlInt16.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlInt16.ToSqlDouble
- uid: System.Data.SqlTypes.SqlInt16.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlInt16.ToSqlInt32
- uid: System.Data.SqlTypes.SqlInt16.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlInt16.ToSqlInt64
- uid: System.Data.SqlTypes.SqlInt16.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlInt16.ToSqlMoney
- uid: System.Data.SqlTypes.SqlInt16.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlInt16.ToSqlSingle
- uid: System.Data.SqlTypes.SqlInt16.ToSqlString*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToSqlString
  nameWithType: SqlInt16.ToSqlString
- uid: System.Data.SqlTypes.SqlInt16.ToString*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: ToString
  nameWithType: SqlInt16.ToString
- uid: System.Data.SqlTypes.SqlInt16.Value*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Value
  nameWithType: SqlInt16.Value
- uid: System.Data.SqlTypes.SqlInt16.Xor*
  parent: System.Data.SqlTypes.SqlInt16
  isExternal: false
  name: Xor
  nameWithType: SqlInt16.Xor
