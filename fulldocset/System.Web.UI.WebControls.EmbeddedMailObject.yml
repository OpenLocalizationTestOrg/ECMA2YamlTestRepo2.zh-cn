### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EmbeddedMailObject
  id: EmbeddedMailObject
  children:
  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.EmbeddedMailObject.Name
  - System.Web.UI.WebControls.EmbeddedMailObject.Path
  langs:
  - csharp
  name: EmbeddedMailObject
  nameWithType: EmbeddedMailObject
  fullName: System.Web.UI.WebControls.EmbeddedMailObject
  type: Class
  summary: "表示要在构造使用的电子邮件中嵌入的项<xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;></xref>类。"
  remarks: "EmbeddedMailObject 表示要在一封电子邮件中嵌入的项。 这些嵌入的项可以如公司徽标的图像文件。 每个嵌入的项指定标识符和路径。       若要确保电子邮件消息文件中正确显示嵌入的对象，必须满足以下条件:-邮件消息采用 HTML 格式。      -此项是图像文件 （.jpg、.gif、.bmp、 等）。      的中指定 HTML 格式的正文文件<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性包含对使用以下语法的图像文件的引用︰```       <img src=&quot;cid:identifier&quot; alt=&quot;Alternate Text&quot; />.       ```如果 EmbeddedMailObject 添加到一封电子邮件，并且不满足所有先前指定的要求，它将很可能显示为在电子邮件附件。</xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> 如果项是通过电子邮件中的标识符引用，但不是包括作为嵌入项目，它将显示为已损坏的附件中，查看邮件时。       <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>存储的单个电子邮件的 EmbeddedMailObject 对象的集合。</xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>由<xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>属性<xref:System.Web.UI.WebControls.MailDefinition>对象创建电子邮件。</xref:System.Web.UI.WebControls.MailDefinition> </xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> </xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>       允许嵌入的对象的邮件是在以下的 Web 控件中配置的设置其<xref:System.Web.UI.WebControls.MailDefinition>属性以声明方式:- <xref:System.Web.UI.WebControls.CreateUserWizard>- <xref:System.Web.UI.WebControls.ChangePassword>- <xref:System.Web.UI.WebControls.PasswordRecovery>1> [!NOTE]&1;> EmbeddedMailObject 中的值和<xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>视图状态中未存储对象。</xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> </xref:System.Web.UI.WebControls.PasswordRecovery> </xref:System.Web.UI.WebControls.ChangePassword> </xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.MailDefinition> 这样可以防止恶意用户发现你的服务器的路径信息。"
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in e-mail is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n  \n```"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))]

      public sealed class EmbeddedMailObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: EmbeddedMailObject()
  nameWithType: EmbeddedMailObject.EmbeddedMailObject()
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.EmbeddedMailObject&quot;></xref>类。"
  remarks: "若要获取或设置嵌入项的标识符，使用<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>属性。</xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> 若要获取或设置指向嵌入项的路径，请使用<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>属性。</xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> 这两个属性必须设置为成功邮件消息中嵌入项。"
  syntax:
    content: public EmbeddedMailObject ();
    parameters: []
  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: EmbeddedMailObject(String,String)
  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.EmbeddedMailObject&quot;></xref>类，使用指定的标识符名称和路径来填充对象。"
  remarks: ''
  example:
  - "The following code example shows a code-behind example of an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. This code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n The following code example demonstrates using an .aspx page.  \n  \n [!code-cs[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_1.aspx)]  \n  \n The following code example demonstrates using a code-behind file.  \n  \n [!code-cs[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_2.vb)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_3.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_3.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public EmbeddedMailObject (string name, string path);
    parameters:
    - id: name
      type: System.String
      description: "用作要在邮件消息中嵌入的项的标识符的名称。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>。</xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>"
    - id: path
      type: System.String
      description: "用于检索要在邮件消息中嵌入的项的路径。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>。</xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>"
  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name
  id: Name
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: Name
  nameWithType: EmbeddedMailObject.Name
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置作为项的标识符使用要用来构造一个邮件消息中嵌入的名称<xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;></xref>类。"
  remarks: "Name 属性指定要在使用<xref:System.Web.UI.WebControls.MailDefinition>类</xref:System.Web.UI.WebControls.MailDefinition>以声明方式构造的一封电子邮件中嵌入的项的标识符 使用标识符映射中包含的项<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>属性中指定的文件的正文中的相应位置<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性，使用以下语法︰```   <img src=&quot;cid:identifier&quot; alt=&quot;Alternate Text&quot; />   ```通常情况下，表明它是图像文件。</xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> </xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> 名称属性的默认值为一个空字符串。       它是可访问性的设计，以将替换文字属性设置为任何嵌入图像你邮件消息中的最佳做法。"
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "返回要在一封电子邮件中嵌入的项的标识符。"
  overload: System.Web.UI.WebControls.EmbeddedMailObject.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path
  id: Path
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: Path
  nameWithType: EmbeddedMailObject.Path
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于检索要在用来构造的一封电子邮件中嵌入的项的路径<xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;></xref>类。"
  remarks: "The Path property specifies the path to the item you want to embed in the mail message constructed declaratively with the <xref:System.Web.UI.WebControls.MailDefinition> object. The file path in Path must be a path such as C:\\MyServer\\Banner.gif. Typically, the embedded item is an image file. If an image file is referenced by its identifier in the mail message but not included in the message, the image appears as a broken attachment when the e-mail message is viewed.  \n  \n It is a best practice for accessibility design to set the alternate text property in your mail message for any embedded images."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "返回要在一封电子邮件中嵌入的项的路径。"
  overload: System.Web.UI.WebControls.EmbeddedMailObject.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject()
  nameWithType: EmbeddedMailObject.EmbeddedMailObject()
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject(String,String)
  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Name
  nameWithType: EmbeddedMailObject.Name
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Path
  nameWithType: EmbeddedMailObject.Path
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject
  nameWithType: EmbeddedMailObject.EmbeddedMailObject
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Name
  nameWithType: EmbeddedMailObject.Name
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Path
  nameWithType: EmbeddedMailObject.Path
