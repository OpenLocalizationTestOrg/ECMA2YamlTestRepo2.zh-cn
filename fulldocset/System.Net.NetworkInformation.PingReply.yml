### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.PingReply
  id: PingReply
  children:
  - System.Net.NetworkInformation.PingReply.Address
  - System.Net.NetworkInformation.PingReply.Buffer
  - System.Net.NetworkInformation.PingReply.Options
  - System.Net.NetworkInformation.PingReply.RoundtripTime
  - System.Net.NetworkInformation.PingReply.Status
  langs:
  - csharp
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
  type: Class
  summary: "提供的状态和生成的数据有关的信息<> *1> 或<> *1> 操作。"
  remarks: "<xref:System.Net.NetworkInformation.Ping>类尝试发送到远程计算机的 Internet 控制消息协议 (ICMP) 回显请求和接收从通过 ICMP 回显回复消息的计算机的信息。</xref:System.Net.NetworkInformation.Ping> <xref:System.Net.NetworkInformation.Ping>类使用 PingReply 类的实例以返回有关此操作，如其状态和发送请求并接收答复所花费的时间的信息。</xref:System.Net.NetworkInformation.Ping>       <xref:System.Net.NetworkInformation.Ping.Send%2A>方法直接返回 PingReply 类的实例。</xref:System.Net.NetworkInformation.Ping.Send%2A> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法返回在 PingReply<xref:System.Net.NetworkInformation.PingCompletedEventHandler>方法的<xref:System.Net.NetworkInformation.PingCompletedEventArgs>参数。</xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 通过访问 PingReply<xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>属性。</xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>       如果值<xref:System.Net.NetworkInformation.PingReply.Status%2A>不<xref:System.Net.NetworkInformation.IPStatus>，不应使用返回的值<xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>，<xref:System.Net.NetworkInformation.PingReply.Options%2A>或<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>属性。</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>属性将返回零，<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>属性将返回空数组，和<xref:System.Net.NetworkInformation.PingReply.Options%2A>属性将返回`null`。</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_6_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_6_1.cpp)]"
  syntax:
    content: public class PingReply
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Address
  id: Address
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "获取发送 Internet 控制消息协议 (ICMP) 回显回复主机的地址。"
  remarks: "通过其中的任一返回地址<xref:System.Net.NetworkInformation.Ping.Send%2A>重载可以是来自恶意的远程计算机。</xref:System.Net.NetworkInformation.Ping.Send%2A> 不连接到远程计算机使用此地址。 使用 DNS 来确定你想要连接的计算机的 IP 地址。"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the value of this property.  \n  \n [!code-cs[NclPingSampler#2](~/add/codesnippet/csharp/p-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NclPingSampler#2](~/add/codesnippet/cpp/p-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.IPAddress Address { get; }
    return:
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>包含 ICMP 回送消息的目标。</xref:System.Net.IPAddress>"
  overload: System.Net.NetworkInformation.PingReply.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Buffer
  id: Buffer
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "获取 Internet 控制消息协议 (ICMP) 回送答复消息中收到的数据的缓冲区。"
  remarks: "ICMP 回显请求而发送的数据缓冲区被返回到发件人在回显回复消息，以便可以计算已知大小的数据包的往返行程时间。 数据缓冲区，结合<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>选项，可以用于发现源和目标计算机之间的网络路径的最大传输单位。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 有关其他信息，请参阅 RFC 1574，http://www.ietf.org 上 3.2 节中的&quot;跟踪&quot;。       与所使用的默认缓冲区<xref:System.Net.NetworkInformation.Ping.Send%2A>和<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>包含 32 个字节的数据。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_1_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_1_1.cpp)]"
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "A<xref:System.Byte>数组，其中包含中的 ICMP 回显回复消息，则为空数组，收到的数据，如果没有收到答复。</xref:System.Byte>"
  overload: System.Net.NetworkInformation.PingReply.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Options
  id: Options
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "获取用于传输对 Internet 控制消息协议 (ICMP) 回显请求的答复的选项。"
  remarks: "TTL 定义其源和目标之间传播时，节点可以转发数据包的次数。 如果转发，也称为跃点，数超过 TTL 为指定的值，数据包将被视为未送达，并且将被丢弃。       <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>ICMP 回显请求控件数据包碎片中指定的值。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 如果<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和数据包的大小超过数据包所采用的网络路径的最大传输单元，数据包将被丢弃和<xref:System.Net.NetworkInformation.IPStatus>返回错误。</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.  \n  \n [!code-cs[NclPingSampler#3](~/add/codesnippet/csharp/p-system.net.networkinfo_3_1.cs)]\n [!code-cpp[NclPingSampler#3](~/add/codesnippet/cpp/p-system.net.networkinfo_3_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingOptions Options { get; }
    return:
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>对象，它包含时间 (TTL) 和用于传输答复，如果碎片指令<xref:System.Net.NetworkInformation.PingReply.Status*>是<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Net.NetworkInformation.PingReply.Status*>"
  overload: System.Net.NetworkInformation.PingReply.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  id: RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "获取发送 Internet 控制消息协议 (ICMP) 回显请求和接收相应 ICMP 回显回复消息所花费的毫秒数。"
  remarks: "如果回显请求失败，RoundtripTime 时间被报告为 0 中,，在请求成功时也是一个有效的值。 必须检查<xref:System.Net.NetworkInformation.PingReply.Status%2A>以确定是否应忽略此属性返回的值。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_4_1.cpp)]"
  syntax:
    content: public long RoundtripTime { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>，它指定的往返时间，以毫秒为单位。</xref:System.Int64>"
  overload: System.Net.NetworkInformation.PingReply.RoundtripTime*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Status
  id: Status
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "获取发送 Internet 控制消息协议 (ICMP) 回显请求并接收相应 ICMP 回显回复消息的尝试的状态。"
  remarks: "如果状态的值不是<xref:System.Net.NetworkInformation.IPStatus>，不应使用返回的值<xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>，<xref:System.Net.NetworkInformation.PingReply.Options%2A>或<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>属性。</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>和<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>属性将返回零，和<xref:System.Net.NetworkInformation.PingReply.Options%2A>属性将返回`null`。</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/p-system.net.networkinfo_8_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/p-system.net.networkinfo_8_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.IPStatus Status { get; }
    return:
      type: System.Net.NetworkInformation.IPStatus
      description: "<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref>值，该值指示请求的结果。"
  overload: System.Net.NetworkInformation.PingReply.Status*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.PingReply.Address
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.PingReply.Buffer
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.PingReply.Options
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.NetworkInformation.PingReply.Status
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
- uid: System.Net.NetworkInformation.IPStatus
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPStatus
  nameWithType: IPStatus
  fullName: System.Net.NetworkInformation.IPStatus
- uid: System.Net.NetworkInformation.PingReply.Address*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
- uid: System.Net.NetworkInformation.PingReply.Buffer*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
- uid: System.Net.NetworkInformation.PingReply.Options*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
- uid: System.Net.NetworkInformation.PingReply.Status*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
