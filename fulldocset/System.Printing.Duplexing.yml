### YamlMime:ManagedReference
items:
- uid: System.Printing.Duplexing
  id: Duplexing
  children:
  - System.Printing.Duplexing.OneSided
  - System.Printing.Duplexing.TwoSidedLongEdge
  - System.Printing.Duplexing.TwoSidedShortEdge
  - System.Printing.Duplexing.Unknown
  langs:
  - csharp
  name: Duplexing
  nameWithType: Duplexing
  fullName: System.Printing.Duplexing
  type: Enum
  summary: "指定打印机是使用单侧打印还是使用某种类型的双面 （双工） 打印。"
  remarks: "主要用于以下目的使用此类型的值:-作为的成员<xref:System.Printing.PrintCapabilities.DuplexingCapability%2A>集合，这是一个属性的<xref:System.Printing.PrintCapabilities>，这些值指示的单侧和双侧打印打印机所支持的类型。</xref:System.Printing.PrintCapabilities> </xref:System.Printing.PrintCapabilities.DuplexingCapability%2A>      -为的值<xref:System.Printing.PrintTicket.Duplexing%2A>属性<xref:System.Printing.PrintTicket>，它们指示要使用单侧打印或某些类型的双侧打印的打印机。</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintTicket.Duplexing%2A>       **未知**属性中永远不会使用值<xref:System.Printing.PrintCapabilities>对象。</xref:System.Printing.PrintCapabilities>       你决不能设置<xref:System.Printing.PrintTicket>属性**未知**。</xref:System.Printing.PrintTicket> 如果某一其他<xref:System.Printing.PrintTicket>生成应用程序已创建*PrintTicket 文档*到无法识别的双工选项设置的双工功能 (即中未定义的选项[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397))，则<xref:System.Printing.PrintTicket>构造与该文档的应用程序中的对象将具有**未知**的值作为<xref:System.Printing.PrintTicket.Duplexing%2A>属性。</xref:System.Printing.PrintTicket.Duplexing%2A> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintTicket>       尽管<xref:System.Printing.PrintTicket>和<xref:System.Printing.PrintCapabilities>类不能被继承，可以扩展[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)能够识别并不表示中的打印设备功能<xref:System.Printing.PrintTicket>或<xref:System.Printing.PrintCapabilities>类。</xref:System.Printing.PrintCapabilities> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintCapabilities> </xref:System.Printing.PrintTicket> 有关详细信息请参阅[NOTINBUILD︰ 如何︰ 打印架构和创建新的打印系统类扩展](http://msdn.microsoft.com/en-us/a3600218-1ea5-478a-9853-6560464f2885)。"
  example:
  - "The following example shows how to test a printer's capabilities and configure the print job to take advantage of them. .  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public enum Duplexing
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Printing.Duplexing.OneSided
  id: OneSided
  parent: System.Printing.Duplexing
  langs:
  - csharp
  name: OneSided
  nameWithType: Duplexing.OneSided
  fullName: System.Printing.Duplexing.OneSided
  type: Field
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "在每个表只有一个端上输出的输出。"
  syntax:
    content: OneSided
    return:
      type: System.Printing.Duplexing
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Printing.Duplexing.TwoSidedLongEdge
  id: TwoSidedLongEdge
  parent: System.Printing.Duplexing
  langs:
  - csharp
  name: TwoSidedLongEdge
  nameWithType: Duplexing.TwoSidedLongEdge
  fullName: System.Printing.Duplexing.TwoSidedLongEdge
  type: Field
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "在翻转边缘到<xref:System.Printing.PrintDocumentImageableArea.MediaSizeHeight*>。</xref:System.Printing.PrintDocumentImageableArea.MediaSizeHeight*>并行的每个表的双方上输出的输出"
  syntax:
    content: TwoSidedLongEdge
    return:
      type: System.Printing.Duplexing
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Printing.Duplexing.TwoSidedShortEdge
  id: TwoSidedShortEdge
  parent: System.Printing.Duplexing
  langs:
  - csharp
  name: TwoSidedShortEdge
  nameWithType: Duplexing.TwoSidedShortEdge
  fullName: System.Printing.Duplexing.TwoSidedShortEdge
  type: Field
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "在翻转边缘到<xref:System.Printing.PrintDocumentImageableArea.MediaSizeWidth*>。</xref:System.Printing.PrintDocumentImageableArea.MediaSizeWidth*>并行的每个表的双方上输出的输出"
  syntax:
    content: TwoSidedShortEdge
    return:
      type: System.Printing.Duplexing
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Printing.Duplexing.Unknown
  id: Unknown
  parent: System.Printing.Duplexing
  langs:
  - csharp
  name: Unknown
  nameWithType: Duplexing.Unknown
  fullName: System.Printing.Duplexing.Unknown
  type: Field
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "该功能 （其选项由此枚举表示） 设置为中未定义选项[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)。"
  syntax:
    content: Unknown
    return:
      type: System.Printing.Duplexing
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Printing.Duplexing.OneSided
  parent: System.Printing.Duplexing
  isExternal: false
  name: OneSided
  nameWithType: Duplexing.OneSided
  fullName: System.Printing.Duplexing.OneSided
- uid: System.Printing.Duplexing
  parent: System.Printing
  isExternal: false
  name: Duplexing
  nameWithType: Duplexing
  fullName: System.Printing.Duplexing
- uid: System.Printing.Duplexing.TwoSidedLongEdge
  parent: System.Printing.Duplexing
  isExternal: false
  name: TwoSidedLongEdge
  nameWithType: Duplexing.TwoSidedLongEdge
  fullName: System.Printing.Duplexing.TwoSidedLongEdge
- uid: System.Printing.Duplexing.TwoSidedShortEdge
  parent: System.Printing.Duplexing
  isExternal: false
  name: TwoSidedShortEdge
  nameWithType: Duplexing.TwoSidedShortEdge
  fullName: System.Printing.Duplexing.TwoSidedShortEdge
- uid: System.Printing.Duplexing.Unknown
  parent: System.Printing.Duplexing
  isExternal: false
  name: Unknown
  nameWithType: Duplexing.Unknown
  fullName: System.Printing.Duplexing.Unknown
