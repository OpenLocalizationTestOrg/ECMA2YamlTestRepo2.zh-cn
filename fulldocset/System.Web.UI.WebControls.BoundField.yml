### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundField
  id: BoundField
  children:
  - System.Web.UI.WebControls.BoundField.#ctor
  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.BoundField.CreateField
  - System.Web.UI.WebControls.BoundField.DataField
  - System.Web.UI.WebControls.BoundField.DataFormatString
  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.HtmlEncode
  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.NullDisplayText
  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  langs:
  - csharp
  name: BoundField
  nameWithType: BoundField
  fullName: System.Web.UI.WebControls.BoundField
  type: Class
  summary: "表示为数据绑定控件中的文本显示的字段。"
  remarks: "数据绑定控件使用 BoundField 类 (如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) 将显示为文本字段的值。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 根据使用它的数据绑定控件以不同方式显示该 BoundField 对象。 例如，<xref:System.Web.UI.WebControls.GridView>控件显示为一列，BoundField 对象时<xref:System.Web.UI.WebControls.DetailsView>控件将其显示为一行。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       若要指定要显示 BoundField 对象中显示的字段，设置<xref:System.Web.UI.WebControls.BoundField.DataField%2A>属性字段的名称。</xref:System.Web.UI.WebControls.BoundField.DataField%2A> 在字段的值可以是 HTML 编码显示通过设置之前<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>属性`true`。</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 你可以通过设置应用于字段的值的自定义的格式设置字符串<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>属性。</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 当<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>属性是`true`，自定义格式字符串中使用的字段的编码的字符串值。</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 默认情况下，格式设置字符串被应用于字段值中，仅当数据绑定控件处于只读模式。 若要将格式设置字符串应用于值显示数据绑定控件处于编辑模式时，将设置<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>属性`true`。</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 如果字段的值为 null，则可以通过设置显示的自定义标题<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>属性。</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> BoundField 对象可以还自动将转换为空字符串 (&quot;&quot;) 通过设置字段值为 null 值<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>属性`true`。</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>       你可以通过设置隐藏数据绑定控件中的 BoundField 对象<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>属性`false`。</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 若要防止在编辑模式中被修改的字段的值，设置<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>属性`true`。</xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 在将记录插入该支持数据绑定控件 (如<xref:System.Web.UI.WebControls.DetailsView>控件)，你可以通过设置隐藏 BoundField 对象<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>属性`false`。</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> </xref:System.Web.UI.WebControls.DetailsView> 通常这是当你想要隐藏在插入模式下自动生成的键字段。       你可以自定义 BoundField 对象页眉和页脚部分。 若要在页眉或页脚部分中显示标题，将设置<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>或<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>属性，分别。</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 而不是在标头部分中显示文本，你可以通过设置内显示图像<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>属性。</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 标头部分可以通过设置隐藏 BoundField 对象中<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>属性`false`。</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      1> [!NOTE]&1;> 一些数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>控件) 可显示或隐藏控件的整个标头部分。</xref:System.Web.UI.WebControls.GridView> 这些数据绑定控件不支持<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>单个绑定字段的属性。</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 若要显示或隐藏的数据绑定控件的整个标头部分 （如果可用），请使用控件的`ShowHeader`属性。       你还可以自定义 BoundField 对象 （如字体颜色、 背景色等） 的外观的设置的字段的不同部分的样式属性。 下表列出不同的样式属性。      |样式属性 |说明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|BoundField 对象的子 Web 服务器控件的样式设置。 |  |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|BoundField 对象页脚部分的样式设置。 |  |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|BoundField 对象的标头部分的样式设置。 |  |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|BoundField 对象中的数据项的样式设置。 |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a BoundField object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_236_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>类。"
  remarks: "使用此构造函数初始化<xref:System.Web.UI.WebControls.BoundField>类</xref:System.Web.UI.WebControls.BoundField>的新实例 此构造函数通常用时将字段添加到的动态创建的数据绑定控件。       动态地添加<xref:System.Web.UI.WebControls.BoundField>对象转换为数据绑定控件，创建一个新<xref:System.Web.UI.WebControls.BoundField>对象、 设置其属性，并将其添加到数据绑定控件的字段集合。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> 例如，如果你使用<xref:System.Web.UI.WebControls.GridView>控件中，添加<xref:System.Web.UI.WebControls.BoundField>对象传递给<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.GridView>      1> [!NOTE]&1;> 动态，你可以将字段添加到的数据绑定控件中，尽管强烈建议该字段是静态声明，然后显示或隐藏，根据需要。 静态声明所有你字段会减小父数据绑定控件的视图状态的大小。"
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[BoundFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[BoundFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public BoundField ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指定的格式设置字符串<xref:System.Web.UI.WebControls.BoundField.DataFormatString*>，其中包含数据绑定控件时，将属性应用于字段值<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象处于编辑模式。</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "数据绑定控件 (如<xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.FormView>，和<xref:System.Web.UI.WebControls.GridView>) 具有不同的显示模式，允许用户读取、 编辑或插入记录。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> 默认情况下，通过将指定的格式设置字符串<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>仅在数据绑定控件是否处于只读模式时，将属性应用于字段值。</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 若要应用到数据绑定控件处于编辑模式时显示的值的格式设置字符串，请将 ApplyFormatInEditMode 属性设置为`true`。      1> [!NOTE]&1;> A<xref:System.Web.UI.WebControls.BoundField>对象不会自动删除格式设置的数据源中更新字段时。</xref:System.Web.UI.WebControls.BoundField> 如果您不希望的格式存储的值的一部分，你将需要删除格式设置以编程方式。"
  example:
  - "The following code example demonstrates how to use the ApplyFormatInEditMode property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \n  \n [!code-vb[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1333_1.aspx)]\n [!code-cs[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1333_1.aspx)]"
  syntax:
    content: public virtual bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将格式设置字符串应用于编辑模式; 中的字段值否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否将空字符串值 (&quot;&quot;) 在数据源中更新数据字段时自动转换为 null 值。"
  remarks: "有时用户可能为字段值更新或插入记录时输入空字符串。 ConvertEmptyStringToNull 属性用于指定是否为空字符串值自动转换为 null 时数据源中更新数据字段。      1> [!NOTE]&1;> 默认情况下，<xref:System.Web.UI.WebControls.BoundField>对象可显示 null 值为空字符串。</xref:System.Web.UI.WebControls.BoundField> 若要显示不同的值，设置<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>属性。</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the ConvertEmptyStringToNull property to specify that an empty string (\"\") field value should automatically be converted to null.  \n  \n [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1108_1.aspx)]\n [!code-cs[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1108_1.aspx)]"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将空字符串值自动转换为 null 值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将当前的属性复制<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>到指定的对象<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>对象。"
  remarks: "CopyProperties 方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>方法复制当前的属性<xref:System.Web.UI.WebControls.BoundField>对象传递给<xref:System.Web.UI.WebControls.DataControlField>方法创建的对象。</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>以复制当前属性<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>到。"
  overload: System.Web.UI.WebControls.BoundField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建一个空<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象。"
  remarks: "CreateField 方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>方法来创建一个空<xref:System.Web.UI.WebControls.BoundField>要复制当前的属性对象<xref:System.Web.UI.WebControls.BoundField>对象传递给。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>."
  overload: System.Web.UI.WebControls.BoundField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要绑定到的数据字段的名称<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象。"
  remarks: "DataField 属性用于指定要绑定到的数据字段的名称<xref:System.Web.UI.WebControls.BoundField>对象。</xref:System.Web.UI.WebControls.BoundField> 指定字段的值显示在<xref:System.Web.UI.WebControls.BoundField>以文本形式的对象。</xref:System.Web.UI.WebControls.BoundField> （可选） 可以通过设置来格式化显示的文本<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>属性。</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>      1> [!NOTE]&1;> 如果字段的值为 null，空字符串 (&quot;&quot;) 默认情况下为该值显示。 若要指定备用的标题，请设置<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>属性。</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_680_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_680_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "要将绑定到的数据字段的名称<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.BoundField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定字段的值的显示格式的字符串。"
  remarks: "使用数据属性指定的值中显示的自定义显示格式<xref:System.Web.UI.WebControls.BoundField>对象。</xref:System.Web.UI.WebControls.BoundField> 如果未设置数据属性，该字段的值将显示不带任何特殊格式。      1> [!NOTE] 1> 在之前的版本 ASP.NET 3.5，你必须设置<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>属性`false`若要设置格式的字段设置非字符串数据类型。</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 否则，字段值转换为字符串默认转换方法之前应用存储在数据属性中的格式字符串。       默认情况下，格式设置字符串应用于该字段值仅当包含数据绑定控件时，才<xref:System.Web.UI.WebControls.BoundField>对象处于只读模式。</xref:System.Web.UI.WebControls.BoundField> 若要应用于处于编辑模式的字段值的格式设置字符串，设置<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>属性`true`。</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>       格式设置字符串可以是任意文本字符串，并且通常包含字段的值的占位符。 例如，在格式设置字符串`Item Value: {0}`，在中显示字符串时，字段的值替换 {0} 占位符<xref:System.Web.UI.WebControls.BoundField>对象。</xref:System.Web.UI.WebControls.BoundField> 格式设置字符串的其余部分将显示为文字文本。       如果格式设置的字符串未包含占位符，仅格式设置字符串本身包含在最终显示文本 （不包含数据源的字段的值）。 如果占位符，如前面的示例中所示括在大括号中 0 （零） 的字段值是通过默认方法转换为字符串。 你可以向零追加一个字符串，指定应如何格式化的字段值。 例如，将占位符`{0:C}`数值字段指定应将的字段的值转换为货币格式。       格式设置应用通过使用<xref:System.String.Format%2A>方法。</xref:System.String.Format%2A> 后面的左大括号的数字是该方法使用的语法的一部分，并指示占位符应使用的一系列值中的哪一个。 由于每个单元中只有一个字段值，后面的左大括号的数字只能设置为 0。       下表列出了数值字段的标准格式字符。 这些格式字符不区分大小写，除`X`，它在指定的情况下会显示十六进制字符。 若要指定多少有效位数或小数位数想要显示，可以将大量追加到大多数格式字符。      1> [!NOTE]&1;> 在大多数情况下，格式设置依赖于服务器的区域性设置。 为区域性设置的示例包括`en-US`。      |格式字符 |说明 |示例 |  |----------------------|-----------------|-------------|  |`C` or `c`|以货币格式显示数字值。 你可以指定的小数位数。 |格式︰`{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> 格式︰`{0:C3}`<br /><br /> 123.456-> $123.456 |  |`D` or `d`|以十进制格式显示整数值。 你可以指定的位数。 （尽管类型称为&quot;小数&quot;，数字的格式为整数。） |格式︰`{0:D}`<br /><br /> 1234 -> 1234<br /><br /> 格式︰`{0:D6}`<br /><br /> 1234-> 001234 |  |`E` or `e`|以科学记数 （指数） 格式显示数值。 你可以指定的小数位数。 |格式︰`{0:E}`<br /><br /> -> 1.052033E + 003 1052.0329112756<br /><br /> 格式︰`{0:E2}`<br /><br /> -1052.0329112756->-1.05e +&003; |  |`F` or `f`|采用固定格式显示数字值。 你可以指定的小数位数。 |格式︰`{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> 格式︰`{0:F3}`<br /><br /> 1234.567-> 1234.567 |  |`G` or `g`|以常规格式 （最紧凑的定点或科学记数法） 显示数值。 你可以指定小数位数。 |格式︰`{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> 格式︰`{0:G2}`<br /><br /> -120->-123.456 |  |`N` or `n`|以 （包括组分隔符和负号可选） 的数字格式显示数字值。 你可以指定的小数位数。 |格式︰`{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> 格式︰`{0:N4}`<br /><br /> 1234.567-> 1,234.5670 |  |`P` or `p`|以百分比格式显示数字值。 你可以指定的小数位数。 |格式︰`{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> 格式︰`{0:P1}`<br /><br /> .5-> 英寸 50.0%| |`R` or `r`|显示<xref:System.Single>、 <xref:System.Double>，或`BigInteger`往返格式中的值。 |Format: `{0:R}`</xref:System.Double></xref:System.Single><br /><br /> 123456789.12345678-> 123456789.12345678 |  |`X` or `x`|以十六进制格式显示整数值。 你可以指定的位数。 |格式︰`{0:X}`<br /><br /> -> FF&255;<br /><br /> 格式︰`{0:x4}`<br /><br /> -> 00ff 255 |      有关详细信息和显示设置为其他区域性值的格式的示例，请参阅[标准数字格式字符串](~/add/includes/ajax-current-ext-md.md)。 你还可以创建自定义数字格式字符串。 有关详细信息，请参阅[自定义数字格式字符串](~/add/includes/ajax-current-ext-md.md)。       下表列出了格式字符<xref:System.DateTime>字段。</xref:System.DateTime> 这些格式规范大部分导致不同的输出，具体取决于的区域性设置。 这些示例适用于<xref:System.DateTime>值 6/15/2009年 1:45:30 PM 的区域性设置`en-US`。</xref:System.DateTime>      |格式字符 |说明 |示例 |  |----------------------|-----------------|-------------|  |`d`|短日期模式。 |格式︰`{0:d}`<br /><br /> 6/15/2009年 1:45:30 PM-> 6/15/2009年 |  |`D`|长日期模式。 |格式︰`{0:D}`<br /><br /> 6/15/2009年 1:45:30 PM-> 2009 年 6 月 15 日，星期一 |  |`f`|完整日期/时间模式 （短时间）。 |格式︰`{0:f}`<br /><br /> 6/15/2009年 1:45:30 PM-> 星期一，June 15，2009 1:45 PM |  |`F`|完整日期/时间模式 （长时间）。 |格式︰`{0:F}`<br /><br /> 6/15/2009年 1:45:30 PM-> 星期一，June 15，2009 1:45:30 PM |  |`g`|常规日期/时间模式 （短时间）。 |格式︰`{0:g}`<br /><br /> 6/15/2009年 1:45:30 PM-> 2009 年 6 月 15 日下午 1:45 |  |`G`|常规日期/时间模式 （长时间）。 |格式︰`{0:G}`<br /><br /> 6/15/2009年 1:45:30 PM-> 2009 年 6 月 15 日下午 1:45:30 |  |`M` or `m`|月/日模式。 |格式︰`{0:M}`<br /><br /> 6/15/2009年 1:45:30 PM-> 15 年 6 月 |  |`O` or `o`|往返日期/时间模式。 |格式︰`{0:o}`<br /><br /> 6/15/2009年 1:45:30 PM-> 2009年-06-15T13:45:30.0900000 |  |`R` or `r`|RFC1123 模式 （有关信息，请参阅<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>）。 |格式︰ `{0:R}` </xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName><br /><br /> 6/15/2009年 1:45:30 PM-> Mon，15 Jun 2009 20:45:30 GMT |  |`s`|可排序日期/时间模式。 |格式︰`{0:s}`<br /><br /> 6/15/2009年 1:45:30 PM-> 2009年-06-15T13:45:30 |  |`t`|短时间模式。 |格式︰`{0:t}`<br /><br /> 6/15/2009年 1:45:30 PM-> 下午 1:45 |  |`T`|长时间模式。 |格式︰`{0:T}`<br /><br /> 6/15/2009年 1:45:30 PM-> 下午 1:45:30 |  |`u`|通用可排序日期/时间模式。 |格式︰`{0:u}`<br /><br /> 6/15/2009年 1:45:30 PM-> 2009年-06-15 20:45:30Z |  |`U`|通用完整日期/时间模式。 |格式︰`{0:U}`<br /><br /> 6/15/2009年 1:45:30 PM-> 星期一，June 15，2009 晚上 8:45:30 |  |`Y` or `y`|年月模式。 |格式︰`{0:Y}`<br /><br /> 6/15/2009年 1:45:30 PM-> 2009 年 6 月，|      有关详细信息和显示设置为其他区域性值的格式的示例，请参阅[标准日期和时间格式字符串](~/add/includes/ajax-current-ext-md.md)。 你还可以创建自定义日期和时间格式字符串。 有关详细信息，请参阅[自定义日期和时间格式字符串](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \n  \n The following example shows how to use the DataFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows one row of the output that is produced by this example.  \n  \n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \n|---------------|----------|-------------------|---------------|------------|------------------|  \n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "一个格式设置字符串，指定字段的值的显示格式。 默认值为空字符串 (&quot;&quot;)，表示尚无特殊格式设置应用于该字段值。"
  overload: System.Web.UI.WebControls.BoundField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "填充指定&lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;对象从指定的值<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>对象。"
  remarks: "作为一种简便方式检索从指定的字段的值提供 ExtractValuesFromCell 方法<xref:System.Web.UI.WebControls.TableCell>对象在<xref:System.Web.UI.WebControls.BoundField>对象。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell>      1> [!NOTE]&1;> 主要由控件开发人员使用此方法。       此方法没有返回值。 相反，通过引用返回的字段值<xref:System.Collections.IDictionary?displayProperty=fullName>对象传入的`dictionary`参数。</xref:System.Collections.IDictionary?displayProperty=fullName> 调用该方法后，循环访问<xref:System.Collections.IDictionary?displayProperty=fullName>对象来访问的字段值。</xref:System.Collections.IDictionary?displayProperty=fullName>      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.TableCell>对象包含只读字段值，则必须传递`true`为`includeReadOnly`参数以包含这些值。</xref:System.Web.UI.WebControls.TableCell>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "A &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;用于存储指定的单元格的值。"
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> ，其中包含要检索的值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "之一<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括只读字段; 的值否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  id: FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "格式中的单元格的指定的字段值<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象。"
  remarks: "FormatDataValue 方法是用于转换到指定的格式的字段值的帮助器方法<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>属性。</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 如果字段值为 null 的值<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>返回属性。</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>      1> [!NOTE]&1;> 主要由控件开发人员使用此方法。"
  syntax:
    content: protected virtual string FormatDataValue (object dataValue, bool encode);
    parameters:
    - id: dataValue
      type: System.Object
      description: "要设置格式的字段值。"
    - id: encode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要编码值，则为否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "字段值转换为<xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>所指定的格式"
  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "检索用于字段的值，在呈现时的值<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>在设计器中的对象。"
  remarks: "GetDesignTimeValue 方法是一个帮助器方法，用于确定要在呈现时为字段显示的值<xref:System.Web.UI.WebControls.BoundField>在设计器中的对象。</xref:System.Web.UI.WebControls.BoundField> 如果在设计时，无法从数据源检索的真实数据，此方法返回的值是改为显示。      1> [!NOTE]&1;> 主要由控件开发人员使用此方法。"
  syntax:
    content: protected virtual object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: "要在设计器中作为字段的值中显示的值。"
  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  id: GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "检索绑定到的字段的值<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象。"
  remarks: "GetValue 方法是一个帮助器方法，用于确定字段的值。 如果<xref:System.Web.UI.WebControls.BoundField>从对象显示在设计器中，并且不能在设计时确定字段值，返回的值<xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>方法返回而不是实际的字段值。</xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> </xref:System.Web.UI.WebControls.BoundField>      1> [!NOTE]&1;> 主要由控件开发人员使用此方法。"
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "字段值的容器。"
    return:
      type: System.Object
      description: "字段的值绑定到<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The container specified by the <code>controlContainer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \n  \n \\- or -  \n  \n The data field was not found."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个数据控件的标头中显示的文本。"
  remarks: "使用 HeaderText 属性用来标识一个数据控件中的字段的友好名称。 HeaderText 属性的最常见的应用程序是提供有意义的列名中的数据绑定字段到<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.DetailsView>控件。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "数据控件的标头中显示的文本。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.BoundField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值字段值是否经过 HTML 编码之前它们将显示在<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象。"
  remarks: "Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \"\\<script>\" would be rendered as \"&lt;script&gt;\". If this property is `false`, the string would be rendered unchanged.  \n  \n> [!NOTE]\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible."
  example:
  - "The following code example demonstrates how to use the HtmlEncode property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n [!code-cs[BoundFieldHtmlEncode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_606_1.aspx)]\n [!code-vb[BoundFieldHtmlEncode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_606_1.aspx)]"
  syntax:
    content: public virtual bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字段值已经过 HTML 编码之前它们将显示在<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否文本，是通过应用创建<xref:System.Web.UI.WebControls.BoundField.DataFormatString*>属性<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>值应为 HTML 编码显示时会被。</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \"\\<br/>\" instead of inserting a line break (`<br/>` element) in the page.  \n  \n> [!NOTE]\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."
  syntax:
    content: public virtual bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果文本应为 HTML 编码;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象。"
  remarks: "Initialize 方法调用由数据控件与其<xref:System.Web.UI.WebControls.BoundField>对象所关联以执行基本的对象初始化的字段，该字段添加到行集合之前的实例。</xref:System.Web.UI.WebControls.BoundField> 数据控件，如<xref:System.Web.UI.WebControls.DetailsView>和<xref:System.Web.UI.WebControls.GridView>调用<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>方法在其`CreateChildControls`方法类似于其他方法之前`CreateRow`调用来使用数据创建特定行。</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       调用此方法在编写自定义数据绑定时控制使用<xref:System.Web.UI.WebControls.TableCell>对象执行基本初始化<xref:System.Web.UI.WebControls.BoundField>对象。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell> 实现此方法，如果你<xref:System.Web.UI.WebControls.BoundField>-派生的类型要求任何对象初始化之前它将填充<xref:System.Web.UI.WebControls.TableCell>对象与数据或控件的<xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>方法。</xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持进行排序;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: control
      type: System.Web.UI.Control
      description: "数据控件拥有<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.WebControls.BoundField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>到指定的行状态的对象。"
  remarks: "InitializeCell 方法由实现<xref:System.Web.UI.WebControls.BoundField>-派生类型中添加文本和控件添加到<xref:System.Web.UI.WebControls.TableCell>的一个数据控件，使用表来显示用户界面 (UI) 对象。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField> 这些数据控件创建完整的表结构的行时控件的`CreateChildControls`调用方法。 调用 InitializeCell 方法`InitializeRow`数据控件，如<xref:System.Web.UI.WebControls.DetailsView>和<xref:System.Web.UI.WebControls.GridView>。</xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.DetailsView>方法       调用此方法在编写自定义数据绑定时控制使用<xref:System.Web.UI.WebControls.TableCell>对象来初始化与数据或控件的表结构的单元格。</xref:System.Web.UI.WebControls.TableCell> 实现此方法，在编写时<xref:System.Web.UI.WebControls.BoundField>-派生类。</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>初始化。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "之一<xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;></xref>值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "之一<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    - id: rowIndex
      type: System.Int32
      description: "行的从零开始索引。"
  overload: System.Web.UI.WebControls.BoundField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>到指定的行状态的对象。"
  remarks: "InitializeDataCell 方法是一个帮助器方法，用于初始化中的单元格<xref:System.Web.UI.WebControls.BoundField>对象。</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>初始化。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "之一<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "还原此字段的以前存储的视图状态信息。"
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "表示要还原的控件状态。"
  overload: System.Web.UI.WebControls.BoundField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置字段的值为 null 时为字段显示的标题。"
  remarks: "有时字段的值存储为 null 的数据源中。 你可以指定要用于通过设置 NullDisplayText 属性具有 null 值的字段显示的自定义标题。 如果未设置此属性，null 字段值显示为空字符串 (&quot;&quot;)。 记录时更新或插入在数据绑定控件中，如果用户输入的值指定的字段在数据绑定控件中，此属性 （而不是一个空字符串） 值的数据源中自动转换为 null。      1> [!NOTE]&1;> 若要为 null 值转换为空字符串字段值，设置<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>属性`true`。</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>"
  example:
  - "The following code example demonstrates how to use the NullDisplayText property to specify a custom caption to display for null field values.  \n  \n [!code-vb[BoundFieldNullDisplayText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1327_1.aspx)]\n [!code-cs[BoundFieldNullDisplayText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1327_1.aspx)]"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "字段的值为 null 时，为字段显示的标题。 默认值为空字符串 (&quot;&quot;)，指示未设置此属性。"
  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将绑定到字段的值<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象。"
  remarks: "<xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>方法是一个帮助器方法，用于将数据源中的字段的值绑定到在相应的单元格<xref:System.Web.UI.WebControls.BoundField>对象。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>"
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "字段值绑定到该控件不<xref href=&quot;System.Web.UI.WebControls.TextBox&quot;></xref>或<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否可以在编辑模式下修改字段的值。"
  remarks: "使用 ReadOnly 属性以防止中显示的值<xref:System.Web.UI.WebControls.BoundField>从正在修改的对象。</xref:System.Web.UI.WebControls.BoundField> 编辑模式的数据绑定控件时，字段是只读的显示为纯文本，且不包含任何编辑控件。      1> [!NOTE]&1;> ReadOnly 属性仅适用于编辑模式。 若要防止字段显示在插入模式，请使用<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>属性。</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>"
  example:
  - "The following code example demonstrates how to use the ReadOnly property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_208_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_208_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要防止处于编辑模式; 正在修改的字段的值否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否支持 HTML 编码<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象。"
  remarks: "SupportsHtmlEncode 属性是<xref:System.Web.UI.WebControls.BoundField>类和派生的类，若要确定类是否支持 HTML 编码</xref:System.Web.UI.WebControls.BoundField>所使用的帮助器属性"
  syntax:
    content: protected virtual bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>以指示，是否支持 HTML 编码<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示&quot;this&quot;表达式。"
  remarks: "使用此字段，则指示<xref:System.Web.UI.WebControls.BoundField>对象应绑定数据源本身，而不是数据源的字段。</xref:System.Web.UI.WebControls.BoundField> 在此情况下，该对象的`ToString`值将显示在字段中。       主要由控件开发人员使用此字段。"
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，确定控件是否或不在验证客户端输入。"
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "确定控件是否或不在验证客户端输入一个值。 默认值是<xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定控件是否包含在<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>对象支持回调。"
  remarks: "ValidateSupportsCallback 方法是用于确定控件是否包含在一个帮助器方法<xref:System.Web.UI.WebControls.BoundField>对象支持回调。</xref:System.Web.UI.WebControls.BoundField> 此方法已作为空方法 （不包含任何代码的方法） 以指示支持回调实现。      1> [!NOTE]&1;> 主要由控件开发人员使用此方法。"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.BoundField.#ctor
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.BoundField.CreateField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
- uid: System.Web.UI.WebControls.BoundField.DataField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.BoundField.#ctor*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField
  nameWithType: BoundField.BoundField
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties
  nameWithType: BoundField.CopyProperties
- uid: System.Web.UI.WebControls.BoundField.CreateField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField
  nameWithType: BoundField.CreateField
- uid: System.Web.UI.WebControls.BoundField.DataField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
- uid: System.Web.UI.WebControls.BoundField.DataFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: BoundField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundField.FormatDataValue
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: BoundField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.BoundField.GetValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue
  nameWithType: BoundField.GetValue
- uid: System.Web.UI.WebControls.BoundField.HeaderText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize
  nameWithType: BoundField.Initialize
- uid: System.Web.UI.WebControls.BoundField.InitializeCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell
  nameWithType: BoundField.InitializeCell
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell
  nameWithType: BoundField.InitializeDataCell
- uid: System.Web.UI.WebControls.BoundField.LoadViewState*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState
  nameWithType: BoundField.LoadViewState
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField
  nameWithType: BoundField.OnDataBindField
- uid: System.Web.UI.WebControls.BoundField.ReadOnly*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: BoundField.ValidateSupportsCallback
