### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeSnippetCompileUnit
  id: CodeSnippetCompileUnit
  children:
  - System.CodeDom.CodeSnippetCompileUnit.#ctor
  - System.CodeDom.CodeSnippetCompileUnit.#ctor(System.String)
  - System.CodeDom.CodeSnippetCompileUnit.LinePragma
  - System.CodeDom.CodeSnippetCompileUnit.Value
  langs:
  - csharp
  name: CodeSnippetCompileUnit
  nameWithType: CodeSnippetCompileUnit
  fullName: System.CodeDom.CodeSnippetCompileUnit
  type: Class
  summary: "表示可以编译原义代码片段。"
  remarks: "CodeSnippetCompileUnit 可以表示文本的直接包含在源而无需修改的代码块。       CodeSnippetCompileUnit 将一段代码，完全按照其原始格式，存储为一个字符串。 CodeDOM 不会转换原义代码片段。 存储和在其原始格式输出文本的代码片段。 提供了包含文本的代码的 codeDOM 对象，以便开发人员可以封装已在目标语言的代码。       <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A>属性包含字符串形式的文本的代码片段。</xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> <xref:System.CodeDom.CodeSnippetCompileUnit.LinePragma%2A>属性是可选的它指定源代码文档内的代码的位置。</xref:System.CodeDom.CodeSnippetCompileUnit.LinePragma%2A>"
  example:
  - "The following code example demonstrates how to create a new instance of the CodeSnippetCompileUnit class by using a string that represents literal code.  \n  \n [!code-cpp[CodeDomSampleBatch#8](~/add/codesnippet/cpp/t-system.codedom.codesni_0_1.cpp)]\n [!code-vb[CodeDomSampleBatch#8](~/add/codesnippet/visualbasic/t-system.codedom.codesni_0_1.vb)]\n [!code-cs[CodeDomSampleBatch#8](~/add/codesnippet/csharp/t-system.codedom.codesni_0_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeSnippetCompileUnit : System.CodeDom.CodeCompileUnit
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeCompileUnit
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes
  - System.CodeDom.CodeCompileUnit.EndDirectives
  - System.CodeDom.CodeCompileUnit.Namespaces
  - System.CodeDom.CodeCompileUnit.ReferencedAssemblies
  - System.CodeDom.CodeCompileUnit.StartDirectives
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetCompileUnit.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeSnippetCompileUnit
  langs:
  - csharp
  name: CodeSnippetCompileUnit()
  nameWithType: CodeSnippetCompileUnit.CodeSnippetCompileUnit()
  fullName: System.CodeDom.CodeSnippetCompileUnit.CodeSnippetCompileUnit()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeSnippetCompileUnit&quot;></xref>类。"
  remarks: "如果使用此构造函数还应设置<xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A>属性。</xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A>"
  syntax:
    content: public CodeSnippetCompileUnit ();
    parameters: []
  overload: System.CodeDom.CodeSnippetCompileUnit.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetCompileUnit.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeSnippetCompileUnit
  langs:
  - csharp
  name: CodeSnippetCompileUnit(String)
  nameWithType: CodeSnippetCompileUnit.CodeSnippetCompileUnit(String)
  fullName: System.CodeDom.CodeSnippetCompileUnit.CodeSnippetCompileUnit(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeSnippetCompileUnit&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.CodeDom.CodeSnippetCompileUnit> class by using a string that represents literal code.  \n  \n [!code-cpp[CodeDomSampleBatch#8](~/add/codesnippet/cpp/m-system.codedom.codesni_1_1.cpp)]\n [!code-vb[CodeDomSampleBatch#8](~/add/codesnippet/visualbasic/m-system.codedom.codesni_1_1.vb)]\n [!code-cs[CodeDomSampleBatch#8](~/add/codesnippet/csharp/m-system.codedom.codesni_1_1.cs)]"
  syntax:
    content: public CodeSnippetCompileUnit (string value);
    parameters:
    - id: value
      type: System.String
      description: "要表示的文本的代码片段。"
  overload: System.CodeDom.CodeSnippetCompileUnit.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetCompileUnit.LinePragma
  id: LinePragma
  parent: System.CodeDom.CodeSnippetCompileUnit
  langs:
  - csharp
  name: LinePragma
  nameWithType: CodeSnippetCompileUnit.LinePragma
  fullName: System.CodeDom.CodeSnippetCompileUnit.LinePragma
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取或设置关于代码位于源代码文档的行和文件信息。"
  syntax:
    content: public System.CodeDom.CodeLinePragma LinePragma { get; set; }
    return:
      type: System.CodeDom.CodeLinePragma
      description: "A <xref href=&quot;System.CodeDom.CodeLinePragma&quot;> </xref> ，该值指示代码片段的位置。"
  overload: System.CodeDom.CodeSnippetCompileUnit.LinePragma*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetCompileUnit.Value
  id: Value
  parent: System.CodeDom.CodeSnippetCompileUnit
  langs:
  - csharp
  name: Value
  nameWithType: CodeSnippetCompileUnit.Value
  fullName: System.CodeDom.CodeSnippetCompileUnit.Value
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取或设置要表示的文本的代码片段。"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "中的文本的代码片段。"
  overload: System.CodeDom.CodeSnippetCompileUnit.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeCompileUnit
  isExternal: false
  name: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.CodeSnippetCompileUnit.#ctor
  parent: System.CodeDom.CodeSnippetCompileUnit
  isExternal: false
  name: CodeSnippetCompileUnit()
  nameWithType: CodeSnippetCompileUnit.CodeSnippetCompileUnit()
  fullName: System.CodeDom.CodeSnippetCompileUnit.CodeSnippetCompileUnit()
- uid: System.CodeDom.CodeSnippetCompileUnit.#ctor(System.String)
  parent: System.CodeDom.CodeSnippetCompileUnit
  isExternal: false
  name: CodeSnippetCompileUnit(String)
  nameWithType: CodeSnippetCompileUnit.CodeSnippetCompileUnit(String)
  fullName: System.CodeDom.CodeSnippetCompileUnit.CodeSnippetCompileUnit(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeSnippetCompileUnit.LinePragma
  parent: System.CodeDom.CodeSnippetCompileUnit
  isExternal: false
  name: LinePragma
  nameWithType: CodeSnippetCompileUnit.LinePragma
  fullName: System.CodeDom.CodeSnippetCompileUnit.LinePragma
- uid: System.CodeDom.CodeLinePragma
  parent: System.CodeDom
  isExternal: false
  name: CodeLinePragma
  nameWithType: CodeLinePragma
  fullName: System.CodeDom.CodeLinePragma
- uid: System.CodeDom.CodeSnippetCompileUnit.Value
  parent: System.CodeDom.CodeSnippetCompileUnit
  isExternal: false
  name: Value
  nameWithType: CodeSnippetCompileUnit.Value
  fullName: System.CodeDom.CodeSnippetCompileUnit.Value
- uid: System.CodeDom.CodeSnippetCompileUnit.#ctor*
  parent: System.CodeDom.CodeSnippetCompileUnit
  isExternal: false
  name: CodeSnippetCompileUnit
  nameWithType: CodeSnippetCompileUnit.CodeSnippetCompileUnit
- uid: System.CodeDom.CodeSnippetCompileUnit.LinePragma*
  parent: System.CodeDom.CodeSnippetCompileUnit
  isExternal: false
  name: LinePragma
  nameWithType: CodeSnippetCompileUnit.LinePragma
- uid: System.CodeDom.CodeSnippetCompileUnit.Value*
  parent: System.CodeDom.CodeSnippetCompileUnit
  isExternal: false
  name: Value
  nameWithType: CodeSnippetCompileUnit.Value
