### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  id: IInteractiveChannelInitializer
  children:
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  langs:
  - csharp
  name: IInteractiveChannelInitializer
  nameWithType: IInteractiveChannelInitializer
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  type: Interface
  summary: "定义使客户端应用程序显示一个用户界面来收集标识信息在创建通道之前的方法。"
  remarks: "实现 IInteractiveChannelInitializer 接口可使客户端应用程序显示用户界面，使应用程序的用户能够创建或选择在打开通道之前的凭据。       若要实现 IInteractiveChannelInitializer，执行以下步骤中的<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>: 1。</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>  提示用户并获取适当的<xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName>      2.  将自定义通道参数对象添加到<xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName><xref:System.ServiceModel.IClientChannel>其中<xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>类型参数的对象</xref:System.ServiceModel.IClientChannel>上的方法</xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>返回的集合 此通道参数对象由自定义<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>建立通道的安全令牌。</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  返回。       要插入 IInteractiveChannelInitializer: 1。  重写<xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>方法的<xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName>类。</xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> </xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>      2.  在该方法中，确定是否终结点需要 IInteractiveChannelInitializer，如果出现这种情况，添加到 IInteractiveChannelInitializer<xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>集合。</xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>       有两种应用程序开发人员可以使用插入 IInteractiveChannelInitializer 的方法。 客户端应用程序可以调用<xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>或<xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>（或异步版本） 在打开通道之前 (*显式*方法) 或只需调用的第一个操作 (*隐式*方法)。</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>       如果使用隐式方法，该应用程序必须调用的第一个操作<xref:System.ServiceModel.ClientBase%601>或<xref:System.ServiceModel.IClientChannel>扩展。</xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ClientBase%601> 如果它调用的第一个操作之外的任何内容，则引发异常。       如果使用显式方法，该应用程序必须按顺序执行以下步骤︰ 1。  调用<xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>或<xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>（或异步版本）。</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>      2.  当初始值设定项均返回时，调用<xref:System.ServiceModel.ICommunicationObject.Open%2A>方法<xref:System.ServiceModel.IClientChannel>对象或在<xref:System.ServiceModel.IClientChannel>从返回的对象<xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName>属性。</xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ICommunicationObject.Open%2A>      3.  调用操作。       通过采用显式方法建议生产质量的应用程序控制的用户界面过程。       使用隐式方法的应用程序调用用户界面初始值设定项，但是当用户界面返回时，如果应用程序的用户无法在绑定的发送超时期限内响应，引发异常。"
  syntax:
    content: public interface IInteractiveChannelInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  id: BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "要开始使用用户接口获取凭据信息的异步调用。"
  remarks: "若要实现<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>，BeginDisplayInitializationUI 中执行以下步骤︰ 1。</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>  提示你认为适合并获得适当的<xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName>何种方式中的用户      2.  将自定义通道参数对象添加到<xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName><xref:System.ServiceModel.IClientChannel>其中<xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>类型参数的对象</xref:System.ServiceModel.IClientChannel>上的方法</xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>返回的集合 此通道参数对象由自定义<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>建立通道的安全令牌。</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  返回。"
  syntax:
    content: public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);
    parameters:
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "客户端通道。"
    - id: callback
      type: System.AsyncCallback
      description: "回调对象中。"
    - id: state
      type: System.Object
      description: "任何状态数据。"
    return:
      type: System.IAsyncResult
      description: "&lt;Xref:System.IAsyncResult?displayProperty=fullName&gt;用于调用处理完成时返回。"
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  id: EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "时调用<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>已完成。</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>"
  syntax:
    content: public void EndDisplayInitializationUI (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "&lt;Xref:System.IAsyncResult?displayProperty=fullName&gt;。"
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI
