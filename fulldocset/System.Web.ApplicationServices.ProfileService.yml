### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.ProfileService
  id: ProfileService
  children:
  - System.Web.ApplicationServices.ProfileService.#ctor
  - System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)
  - System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  - System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata
  - System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)
  - System.Web.ApplicationServices.ProfileService.ValidatingProperties
  langs:
  - csharp
  name: ProfileService
  nameWithType: ProfileService
  fullName: System.Web.ApplicationServices.ProfileService
  type: Class
  summary: "允许访问 ASP.NET 用户通过 Web 服务的配置文件。"
  remarks: "页面类，可获取和设置通过 Windows Communication Foundation (WCF) 服务的用户的配置文件属性。 你可以保留配置文件属性通过为用户的自定义信息。 有关配置文件属性的信息，请参阅[ASP.NET 配置文件属性概述](~/add/includes/ajax-current-ext-md.md)。       页面类包含以下方法应仅通过 WCF 服务访问:- <xref:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser%2A>- <xref:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser%2A>- <xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A>-<xref:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata%2A>以调用这些方法，您必须启用 Web 服务器上的配置文件服务，然后 WCF 兼容客户端应用程序连接到 Web 服务。</xref:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata%2A> </xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A> </xref:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser%2A> </xref:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser%2A> 有关如何配置配置文件服务的信息，请参阅[如何︰ 启用 WCF 配置文件服务](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties>设置用户的配置文件属性时引发事件。</xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties> 你可以创建的事件处理程序<xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties>事件以验证属性值也可动态更改其值。</xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties>       有关如何使用 WCF 配置文件服务的控制台应用程序的示例，请参阅[演练︰ 使用 ASP.NET 应用程序服务](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceKnownType("GetKnownTypes", typeof(System.Web.ApplicationServices.KnownTypesProvider))]

      public class ProfileService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.ProfileService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.ProfileService
  langs:
  - csharp
  name: ProfileService()
  nameWithType: ProfileService.ProfileService()
  fullName: System.Web.ApplicationServices.ProfileService.ProfileService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "初始化的新实例<xref href=&quot;System.Web.ApplicationServices.ProfileService&quot;></xref>类。"
  syntax:
    content: public ProfileService ();
    parameters: []
  overload: System.Web.ApplicationServices.ProfileService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)
  id: GetAllPropertiesForCurrentUser(System.Boolean)
  parent: System.Web.ApplicationServices.ProfileService
  langs:
  - csharp
  name: GetAllPropertiesForCurrentUser(Boolean)
  nameWithType: ProfileService.GetAllPropertiesForCurrentUser(Boolean)
  fullName: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "检索所有配置文件属性和值可供当前用户配置文件服务。"
  remarks: "GetAllPropertiesForCurrentUser 方法用于检索通过一个 Web 服务调用的所有用户配置文件属性。 例如，你可调用此方法且然后将配置文件属性存储在客户端应用程序和检索值，根据需要。 GetAllPropertiesForCurrentUser 方法返回仅对已配置为通过 Web 服务访问的配置文件属性的值。 可设置是否可以通过设置通过 Web 服务访问配置文件属性<xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A>属性或<xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A>属性`true`。</xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> </xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A>"
  syntax:
    content: public System.Collections.Generic.Dictionary<string,object> GetAllPropertiesForCurrentUser (bool authenticatedUserOnly);
    parameters:
    - id: authenticatedUserOnly
      type: System.Boolean
      description: "一个值，该值指示是否仅为已经过身份验证的用户返回的属性。"
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "配置文件属性和值。"
  overload: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  id: GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: System.Web.ApplicationServices.ProfileService
  langs:
  - csharp
  name: GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)
  nameWithType: ProfileService.GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)
  fullName: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "检索指定的配置文件属性和当前用户的值。"
  remarks: "若要获取当前用户特定的配置文件属性值，你使用 GetPropertiesForCurrentUser 方法指定检索的配置文件属性。 GetPropertiesForCurrentUser 方法返回仅为配置为通过 Web 服务的访问的配置文件属性的值。 通过设置来配置通过 Web 服务的访问的配置文件属性<xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A>属性或<xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A>属性`true`。</xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> </xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A>"
  syntax:
    content: public System.Collections.Generic.Dictionary<string,object> GetPropertiesForCurrentUser (System.Collections.Generic.IEnumerable<string> properties, bool authenticatedUserOnly);
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "包含要检索的配置文件属性的名称的字符串值集合。"
    - id: authenticatedUserOnly
      type: System.Boolean
      description: "一个值，该值指示是否仅为已经过身份验证的用户返回的属性。"
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "配置文件属性信息和值。"
  overload: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> properties </code>参数或中的项<code> properties </code>集合是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata
  id: GetPropertiesMetadata
  parent: System.Web.ApplicationServices.ProfileService
  langs:
  - csharp
  name: GetPropertiesMetadata()
  nameWithType: ProfileService.GetPropertiesMetadata()
  fullName: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "检索有关可通过配置文件服务的配置文件属性的信息。"
  remarks: "使用 GetPropertiesMetadata 方法从与 Windows Communication Framework (WCF) 兼容的客户端应用程序中检索有关配置文件属性的信息。 你可以检索信息如下所示:-名称和类型的属性。      的它们是否是只读的。      -是否它们可以通过未经身份验证的用户访问。      的属性默认值。       在检索这些值之后, 客户端应用程序可能需要相应的操作，如不会尝试设置只读属性。 当前用户没有要进行身份验证以调用 GetPropertiesMetadata 方法中，因为这些属性适用于所有用户。"
  syntax:
    content: public System.Web.ApplicationServices.ProfilePropertyMetadata[] GetPropertiesMetadata ();
    parameters: []
    return:
      type: System.Web.ApplicationServices.ProfilePropertyMetadata[]
      description: "数组<xref href=&quot;System.Web.ApplicationServices.ProfilePropertyMetadata&quot;></xref>包含有关配置文件属性的信息的对象。"
  overload: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)
  id: SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)
  parent: System.Web.ApplicationServices.ProfileService
  langs:
  - csharp
  name: SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)
  nameWithType: ProfileService.SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)
  fullName: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "用户配置文件中设置的指定属性的值。"
  remarks: "SetPropertiesForCurrentUser 方法用于从使用 Windows Communication Foundation (WCF) 兼容的应用程序中设置用户的配置文件属性。 SetPropertiesForCurrentUser 方法返回的任何值未设置，这可能是由于以下原因之一:-指定的配置文件属性为只读 (<xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A>指定的配置文件属性的属性未设置为`true`)。</xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A>      -用户配置文件没有具有匹配名称的配置文件属性。      值的验证失败。"
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> SetPropertiesForCurrentUser (System.Collections.Generic.IDictionary<string,object> values, bool authenticatedUserOnly);
    parameters:
    - id: values
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "包含要设置的配置文件属性的名称和值的集合。"
    - id: authenticatedUserOnly
      type: System.Boolean
      description: "一个值，该值指示是否仅为已经过身份验证的用户设置属性。"
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "未设置的用户配置文件中，如果任何属性。"
  overload: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.ProfileService.ValidatingProperties
  id: ValidatingProperties
  parent: System.Web.ApplicationServices.ProfileService
  langs:
  - csharp
  name: ValidatingProperties
  nameWithType: ProfileService.ValidatingProperties
  fullName: System.Web.ApplicationServices.ProfileService.ValidatingProperties
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "设置用户的配置文件属性时发生。"
  remarks: "你可以创建的事件处理程序 ValidatingProperties 事件以验证属性值也可动态更改其值。 将引发 ValidatingProperties 事件时<xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A>调用方法。</xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A> 如果属性的值未通过验证，则将该属性添加到<xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A>集合的<xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs>类。</xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs> </xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> 中的任何属性<xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A>集合将不会保存到的用户配置文件。</xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A>       你可以添加和在 Global.asax 文件中注册事件处理程序。"
  example:
  - "The following example shows an event handler for the ValidatingProperties event. When the value passed for `FirstName` property is empty or `null`, the `FirstName` property is added to the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection.  \n  \n [!code-vb[System.Web.ApplicationServices.ProfileService#1](~/add/codesnippet/visualbasic/e-system.web.application_2_1.asax)]\n [!code-cs[System.Web.ApplicationServices.ProfileService#1](~/add/codesnippet/csharp/e-system.web.application_2_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.ValidatingPropertiesEventArgs> ValidatingProperties;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.ValidatingPropertiesEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.ProfileService.#ctor
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: ProfileService()
  nameWithType: ProfileService.ProfileService()
  fullName: System.Web.ApplicationServices.ProfileService.ProfileService()
- uid: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: GetAllPropertiesForCurrentUser(Boolean)
  nameWithType: ProfileService.GetAllPropertiesForCurrentUser(Boolean)
  fullName: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(Boolean)
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)
  nameWithType: ProfileService.GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)
  fullName: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: GetPropertiesMetadata()
  nameWithType: ProfileService.GetPropertiesMetadata()
  fullName: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata()
- uid: System.Web.ApplicationServices.ProfilePropertyMetadata[]
  parent: System.Web.ApplicationServices
  isExternal: false
  name: ProfilePropertyMetadata
  nameWithType: ProfilePropertyMetadata
  fullName: System.Web.ApplicationServices.ProfilePropertyMetadata[]
  spec.csharp:
  - uid: System.Web.ApplicationServices.ProfilePropertyMetadata
    name: ProfilePropertyMetadata
    nameWithType: ProfilePropertyMetadata
    fullName: ProfilePropertyMetadata[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)
  nameWithType: ProfileService.SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)
  fullName: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)
- uid: System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.ProfileService.ValidatingProperties
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: ValidatingProperties
  nameWithType: ProfileService.ValidatingProperties
  fullName: System.Web.ApplicationServices.ProfileService.ValidatingProperties
- uid: System.EventHandler{System.Web.ApplicationServices.ValidatingPropertiesEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ValidatingPropertiesEventArgs>
  nameWithType: EventHandler<ValidatingPropertiesEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.ValidatingPropertiesEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.ValidatingPropertiesEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.ValidatingPropertiesEventArgs
    name: ValidatingPropertiesEventArgs
    nameWithType: ValidatingPropertiesEventArgs
    fullName: ValidatingPropertiesEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.ProfileService.#ctor*
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: ProfileService
  nameWithType: ProfileService.ProfileService
- uid: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser*
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: GetAllPropertiesForCurrentUser
  nameWithType: ProfileService.GetAllPropertiesForCurrentUser
- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser*
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: GetPropertiesForCurrentUser
  nameWithType: ProfileService.GetPropertiesForCurrentUser
- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata*
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: GetPropertiesMetadata
  nameWithType: ProfileService.GetPropertiesMetadata
- uid: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser*
  parent: System.Web.ApplicationServices.ProfileService
  isExternal: false
  name: SetPropertiesForCurrentUser
  nameWithType: ProfileService.SetPropertiesForCurrentUser
