### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlAttribute
  id: SamlAttribute
  children:
  - System.IdentityModel.Tokens.SamlAttribute.#ctor
  - System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)
  - System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IdentityModel.Tokens.SamlAttribute.AttributeValues
  - System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
  - System.IdentityModel.Tokens.SamlAttribute.ExtractClaims
  - System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
  - System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly
  - System.IdentityModel.Tokens.SamlAttribute.Name
  - System.IdentityModel.Tokens.SamlAttribute.Namespace
  - System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
  - System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlAttribute
  nameWithType: SamlAttribute
  fullName: System.IdentityModel.Tokens.SamlAttribute
  type: Class
  summary: "表示与主题关联的特性<xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref>。"
  remarks: "SamlAttribute 类对应于`<saml:Attribute>`OASIS SAML 1.1 规范中定义的 XML 元素。       SamlAttribute 实例包含<xref:System.IdentityModel.Claims.Rights.PossessProperty%2A>的主题的一种<xref:System.IdentityModel.Tokens.SamlAttributeStatement>。</xref:System.IdentityModel.Tokens.SamlAttributeStatement>声明</xref:System.IdentityModel.Claims.Rights.PossessProperty%2A> 例如，可能包含 SamlAttribute`Over21`声明，将在指定其类型<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>属性和其资源将被指定为中的集合的成员<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>属性。</xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 当<xref:System.IdentityModel.Tokens.SamlStatement.CreatePolicy%2A>调用方法时，这`Over21`声明添加到返回由<xref:System.IdentityModel.Tokens.SamlAttributeStatement>.</xref:System.IdentityModel.Tokens.SamlAttributeStatement>从返回的授权策略</xref:System.IdentityModel.Tokens.SamlStatement.CreatePolicy%2A> 当<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>属性包含多个元素，则将为每个元素返回一个声明。</xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>       SamlAttribute SAML 对象层次结构中的位置是︰ <xref:System.IdentityModel.Tokens.SamlSecurityToken> <xref:System.IdentityModel.Tokens.SamlAssertion> <xref:System.IdentityModel.Tokens.SamlAttributeStatement>SamlAttribute</xref:System.IdentityModel.Tokens.SamlAttributeStatement>       </xref:System.IdentityModel.Tokens.SamlAssertion>       </xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  example:
  - >-
    [!code-vb[SamlAttribute#1](~/add/codesnippet/visualbasic/t-system.identitymodel.t_0_1.vb)]
     [!code-cs[SamlAttribute#1](~/add/codesnippet/csharp/t-system.identitymodel.t_0_1.cs)]
  syntax:
    content: public class SamlAttribute
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: SamlAttribute()
  nameWithType: SamlAttribute.SamlAttribute()
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>类。"
  syntax:
    content: public SamlAttribute ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)
  id: '#ctor(System.IdentityModel.Claims.Claim)'
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: SamlAttribute(Claim)
  nameWithType: SamlAttribute.SamlAttribute(Claim)
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute(Claim)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>类使用指定的声明。"
  remarks: "使用此构造函数将声明转换为 SAML 属性。 要转换为 SAML 属性，<xref:System.IdentityModel.Claims.Claim.Right%2A>属性必须为<xref:System.IdentityModel.Claims.Rights.PossessProperty%2A>、<xref:System.IdentityModel.Claims.Claim.Resource%2A>属性的类型必须为<xref:System.String>，和<xref:System.IdentityModel.Claims.Claim.ClaimType%2A>属性必须采用格式`namespace/name`。</xref:System.IdentityModel.Claims.Claim.ClaimType%2A> </xref:System.String> </xref:System.IdentityModel.Claims.Claim.Resource%2A> </xref:System.IdentityModel.Claims.Rights.PossessProperty%2A> </xref:System.IdentityModel.Claims.Claim.Right%2A>       下表指定了什么`claim`参数集<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>， <xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>，和<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>到的属性。</xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>      |属性 |属性`claim`参数用于设置属性 |  |--------------|----------------------------------------------------------------|  |<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>|<xref:System.IdentityModel.Claims.Claim.Resource%2A>属性的值添加到集合。 |  |<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>|后的最后一个字符串的部分<xref:System.IdentityModel.Claims.Claim.ClaimType%2A>属性中的 / 字符。 |  |<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>|早于最后字符串的部分中的 / 字符<xref:System.IdentityModel.Claims.Claim.ClaimType%2A>属性。 |</xref:System.IdentityModel.Claims.Claim.ClaimType%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> </xref:System.IdentityModel.Claims.Claim.ClaimType%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> </xref:System.IdentityModel.Claims.Claim.Resource%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>"
  syntax:
    content: public SamlAttribute (System.IdentityModel.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.IdentityModel.Claims.Claim
      description: "A <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref>表示的使用者的属性<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌。"
  overload: System.IdentityModel.Tokens.SamlAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<> </> *1> 属性<code> claim </code>不属于类型<xref:System.String>。      -or-       The <>*> property of <code>claim</code> is not <>*>.      -或- <> </> *1> 属性<code> claim </code>未没有 / 字符，或者它是在第一个或最后一个索引位置。</xref:System.String>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})'
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: SamlAttribute(String,String,IEnumerable<String>)
  nameWithType: SamlAttribute.SamlAttribute(String,String,IEnumerable<String>)
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute(String,String,IEnumerable<String>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>类使用指定的属性名称、 XML 命名空间和属性值。"
  remarks: "下表指定通过此构造函数的参数设置的属性。      |属性 |参数 |  |--------------|---------------|  |<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>|`attributeValues`|  |<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>|`attributeName`|  |<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>|`attributeNamespace`|</xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A></xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A></xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>"
  syntax:
    content: public SamlAttribute (string attributeNamespace, string attributeName, System.Collections.Generic.IEnumerable<string> attributeValues);
    parameters:
    - id: attributeNamespace
      type: System.String
      description: "在其中的 XML 命名空间`attributeName`定义参数。"
    - id: attributeName
      type: System.String
      description: "SAML 属性的名称。"
    - id: attributeValues
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "&lt;Xref:System.Collections.Generic.IEnumerable%601&gt;包含 SAML 属性的值。"
  overload: System.IdentityModel.Tokens.SamlAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attributeNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>attributeName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>attributeValues</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<> </> *1> 属性<code> claim </code>不属于类型<xref:System.String>。      -or-       The <>*> property of <code>claim</code> is not <>*>.      -或- <> </> *1> 属性<code> claim </code>未没有 / 字符，或者它是在第一个或最后一个索引位置。</xref:System.String>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValues
  id: AttributeValues
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: AttributeValues
  nameWithType: SamlAttribute.AttributeValues
  fullName: System.IdentityModel.Tokens.SamlAttribute.AttributeValues
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取 SAML 属性的属性值集合。"
  remarks: "A SAML attribute may contain more than one attribute value.  \n  \n The AttributeValues property corresponds to the `\\<saml:AttributeValue>` element that is defined in the Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) specification."
  syntax:
    content: public System.Collections.Generic.IList<string> AttributeValues { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "A &lt;xref:System.Collections.Generic.IList%601&gt; ，包含 SAML 属性的属性值的集。"
  overload: System.IdentityModel.Tokens.SamlAttribute.AttributeValues*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
  id: AttributeValueXsiType
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: AttributeValueXsiType
  nameWithType: SamlAttribute.AttributeValueXsiType
  fullName: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置 SAML 属性中包含的值的 xsi: type。"
  remarks: "AttributeValueXsiType 属性对应于`type`属性`<saml:AttributeValue>`OASIS 安全断言标记语言 (SAML) 规范中的断言和协议定义的元素。 此属性是必需的。"
  syntax:
    content: public string AttributeValueXsiType { get; set; }
    return:
      type: System.String
      description: "一个字符串，包含 xsi: type。 默认值是<xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "尝试设置一个值，是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空发生。       -或者-尝试设置的值的格式不正确时发生。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims
  id: ExtractClaims
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: ExtractClaims()
  nameWithType: SamlAttribute.ExtractClaims()
  fullName: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取该 SAML 属性表示声明的集合。"
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌使用指定其声明可以指定有关所表示的安全令牌的主题属性的 SAML 断言。</xref:System.IdentityModel.Tokens.SamlSecurityToken> 使用 ExtractClaims 方法将 SAML 属性转换为一组声明。"
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.Claim> ExtractClaims ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.Claim}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;类型的<xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> ，包含该 SAML 属性表示的声明集。"
  overload: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlAttribute.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取一个值，该值指示此实例的属性是否是只读的。"
  remarks: "若要使此实例的<xref:System.IdentityModel.Tokens.SamlAttribute>类只读的调用<xref:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly%2A>方法。</xref:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly%2A> </xref:System.IdentityModel.Tokens.SamlAttribute>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此实例的属性是只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlAttribute.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "将此实例设置为只读的。"
  remarks: "当调用 MakeReadOnly 方法时，<xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly%2A>属性设置为`true`和能不能再设置此实例的属性。</xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly%2A>"
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.Name
  id: Name
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SamlAttribute.Name
  fullName: System.IdentityModel.Tokens.SamlAttribute.Name
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置 SAML 属性的名称。"
  remarks: "若要指定与该 SAML 属性关联的值，设置<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>属性 Name 属性对应于`AttributeName`属性`<Attribute>`OASIS 安全断言标记语言 (SAML) 规范中的断言和协议定义的元素。</xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "SAML 属性的名称。"
  overload: System.IdentityModel.Tokens.SamlAttribute.Name*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "将名称属性设置和<xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly*>属性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Name 属性设置为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.Namespace
  id: Namespace
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: SamlAttribute.Namespace
  fullName: System.IdentityModel.Tokens.SamlAttribute.Namespace
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置在其中定义 SAML 属性的名称的 XML 命名空间。"
  remarks: "若要设置 SAML 属性的名称，设置<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>属性。</xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>       Namespace 属性对应于`AttributeNamespace`属性`<AttributeDesignator>`OASIS 安全断言标记语言 (SAML) 规范中的断言和协议定义的元素。"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "在其中定义 SAML 属性的名称的 XML 命名空间。"
  overload: System.IdentityModel.Tokens.SamlAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
  id: OriginalIssuer
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: OriginalIssuer
  nameWithType: SamlAttribute.OriginalIssuer
  fullName: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取或设置表示 SAML 属性 OriginalIssuer 的字符串。"
  syntax:
    content: public string OriginalIssuer { get; set; }
    return:
      type: System.String
      description: "SAML 属性的原始颁发者。"
  overload: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "尝试设置一个值，为一个空字符串时发生。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAttribute.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAttribute.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "从指定的 XML 读取器读取 SAML 属性。"
  remarks: "ReadXml 方法设置<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>， <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>，和<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>属性。</xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>"
  syntax:
    content: public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A<xref:System.Xml.XmlDictionaryReader>读取 SAML 属性。</xref:System.Xml.XmlDictionaryReader>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> ，它能够读取 SAML 规范中的 XML 元素。"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>读取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>的数字签名的子句。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，确定创建了数字签名的安全令牌。"
  overload: System.IdentityModel.Tokens.SamlAttribute.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<code>reader</code>不具有的 XML 元素引用<xref uid=&quot;langword_csharp_AttributeName&quot; name=&quot;AttributeName&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_AttributeNamespace&quot; name=&quot;AttributeNamespace&quot; href=&quot;&quot;></xref>属性。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAttribute.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAttribute.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "将 SAML 属性写入到指定的 XML 序列化程序。"
  syntax:
    content: public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "A<xref:System.Xml.XmlDictionaryWriter>写入 SAML 属性。</xref:System.Xml.XmlDictionaryWriter>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> ，它能够写入 SAML 断言中的 XML 元素。"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> ，它能够写入<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句。"
  overload: System.IdentityModel.Tokens.SamlAttribute.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: SamlAttribute()
  nameWithType: SamlAttribute.SamlAttribute()
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute()
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: SamlAttribute(Claim)
  nameWithType: SamlAttribute.SamlAttribute(Claim)
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute(Claim)
- uid: System.IdentityModel.Claims.Claim
  parent: System.IdentityModel.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.IdentityModel.Claims.Claim
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: SamlAttribute(String,String,IEnumerable<String>)
  nameWithType: SamlAttribute.SamlAttribute(String,String,IEnumerable<String>)
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute(String,String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValues
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: AttributeValues
  nameWithType: SamlAttribute.AttributeValues
  fullName: System.IdentityModel.Tokens.SamlAttribute.AttributeValues
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: AttributeValueXsiType
  nameWithType: SamlAttribute.AttributeValueXsiType
  fullName: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
- uid: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: ExtractClaims()
  nameWithType: SamlAttribute.ExtractClaims()
  fullName: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.Claim}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Claim>
  nameWithType: ReadOnlyCollection<Claim>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAttribute.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlAttribute.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlAttribute.Name
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: Name
  nameWithType: SamlAttribute.Name
  fullName: System.IdentityModel.Tokens.SamlAttribute.Name
- uid: System.IdentityModel.Tokens.SamlAttribute.Namespace
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: Namespace
  nameWithType: SamlAttribute.Namespace
  fullName: System.IdentityModel.Tokens.SamlAttribute.Namespace
- uid: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: OriginalIssuer
  nameWithType: SamlAttribute.OriginalIssuer
  fullName: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
- uid: System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAttribute.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAttribute.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAttribute.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAttribute.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: SamlAttribute
  nameWithType: SamlAttribute.SamlAttribute
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValues*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: AttributeValues
  nameWithType: SamlAttribute.AttributeValues
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: AttributeValueXsiType
  nameWithType: SamlAttribute.AttributeValueXsiType
- uid: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: ExtractClaims
  nameWithType: SamlAttribute.ExtractClaims
- uid: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAttribute.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlAttribute.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlAttribute.Name*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: Name
  nameWithType: SamlAttribute.Name
- uid: System.IdentityModel.Tokens.SamlAttribute.Namespace*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: Namespace
  nameWithType: SamlAttribute.Namespace
- uid: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: OriginalIssuer
  nameWithType: SamlAttribute.OriginalIssuer
- uid: System.IdentityModel.Tokens.SamlAttribute.ReadXml*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: ReadXml
  nameWithType: SamlAttribute.ReadXml
- uid: System.IdentityModel.Tokens.SamlAttribute.WriteXml*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: WriteXml
  nameWithType: SamlAttribute.WriteXml
