### YamlMime:ManagedReference
items:
- uid: System.Net.Mime.ContentType
  id: ContentType
  children:
  - System.Net.Mime.ContentType.#ctor
  - System.Net.Mime.ContentType.#ctor(System.String)
  - System.Net.Mime.ContentType.Boundary
  - System.Net.Mime.ContentType.CharSet
  - System.Net.Mime.ContentType.Equals(System.Object)
  - System.Net.Mime.ContentType.GetHashCode
  - System.Net.Mime.ContentType.MediaType
  - System.Net.Mime.ContentType.Name
  - System.Net.Mime.ContentType.Parameters
  - System.Net.Mime.ContentType.ToString
  langs:
  - csharp
  name: ContentType
  nameWithType: ContentType
  fullName: System.Net.Mime.ContentType
  type: Class
  summary: "表示 MIME 协议的 Content-type 标头。"
  remarks: "ContentType 类中的信息用于描述的方式显示电子邮件的软件在适当的方式种呈现内容的电子邮件中包含的数据。 与使用 ContentType<xref:System.Net.Mail.Attachment>类附件中指定的内容的类型。</xref:System.Net.Mail.Attachment>       RFC 2045 部分 5.1 中描述的内容类型标头的语法。 RFC 2046 提供有关 MIME 媒体类型和其参数的详细的信息。 这些 Rfc 位于[http://www.ietf.org](http://www.ietf.org/)。"
  example:
  - "The following code example sends an e-mail message with an attachment and displays the <xref:System.Net.Mail.Attachment.ContentDisposition%2A> properties for the attachment.  \n  \n [!code-cpp[NclMailSync#6](~/add/codesnippet/cpp/t-system.net.mime.conten_0_1.cpp)]\n [!code-cs[NclMailSync#6](~/add/codesnippet/csharp/t-system.net.mime.conten_0_1.cs)]"
  syntax:
    content: public class ContentType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Mime.ContentType.#ctor
  id: '#ctor'
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: ContentType()
  nameWithType: ContentType.ContentType()
  fullName: System.Net.Mime.ContentType.ContentType()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "初始化的新默认实例<xref href=&quot;System.Net.Mime.ContentType&quot;></xref>类。"
  remarks: "此构造函数初始化<xref:System.Net.Mime.ContentType.MediaType%2A>属性`&quot;application/octet-stream&quot;`。</xref:System.Net.Mime.ContentType.MediaType%2A>"
  example:
  - "The following code example demonstrates how to call this constructor.  \n  \n [!code-cpp[NclMailSync#15](~/add/codesnippet/cpp/m-system.net.mime.conten_0_1.cpp)]\n [!code-cs[NclMailSync#15](~/add/codesnippet/csharp/m-system.net.mime.conten_0_1.cs)]"
  syntax:
    content: public ContentType ();
    parameters: []
  overload: System.Net.Mime.ContentType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mime.ContentType.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: ContentType(String)
  nameWithType: ContentType.ContentType(String)
  fullName: System.Net.Mime.ContentType.ContentType(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "初始化的新实例<xref href=&quot;System.Net.Mime.ContentType&quot;></xref>类使用指定的字符串。"
  remarks: "语法`contentType`字符串部分所述 RFC 2045 5.1 在[http://www.ietf.org](http://www.ietf.org/)。"
  example:
  - "The following code example demonstrates how to call this constructor.  \n  \n [!code-cpp[NclMailSync#15](~/add/codesnippet/cpp/m-system.net.mime.conten_1_1.cpp)]\n [!code-cs[NclMailSync#15](~/add/codesnippet/csharp/m-system.net.mime.conten_1_1.cs)]"
  syntax:
    content: public ContentType (string contentType);
    parameters:
    - id: contentType
      type: System.String
      description: "A <xref:System.String>，例如， `&quot;text/plain; charset=us-ascii&quot;`，，包含 MIME 媒体类型、 子类型，以及可选的参数。</xref:System.String>"
  overload: System.Net.Mime.ContentType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contentType</code>is <xref:System.String> (&quot;&quot;)."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>contentType</code>无法分析的窗体中。"
  platform:
  - net462
- uid: System.Net.Mime.ContentType.Boundary
  id: Boundary
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: Boundary
  nameWithType: ContentType.Boundary
  fullName: System.Net.Mime.ContentType.Boundary
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "获取或设置此实例所表示的内容类型标头中包含边界参数的值。"
  remarks: "在以下示例中的内容类型标头，边界参数的值是&quot;`-----boundary---0`&quot;。       `content-type: multipart/mixed; boundary=-----boundary---0`将此属性设置为`null`或<xref:System.String?displayProperty=fullName>从标头中删除的边界信息。</xref:System.String?displayProperty=fullName>       RFC 2045 部分 5.1 中描述的内容类型标头的语法。 边界参数的深度讨论包含在 RFC 2046 第 5.1.1 节中。 这些 Rfc 位于[http://www.ietf.org](http://www.ietf.org/)。"
  example:
  - "The following code example displays the value of the Boundary property.  \n  \n [!code-cpp[NclMailSync#5](~/add/codesnippet/cpp/p-system.net.mime.conten_11_1.cpp)]\n [!code-cs[NclMailSync#5](~/add/codesnippet/csharp/p-system.net.mime.conten_11_1.cs)]"
  syntax:
    content: public string Boundary { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含与边界参数关联的值。</xref:System.String>"
  overload: System.Net.Mime.ContentType.Boundary*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mime.ContentType.CharSet
  id: CharSet
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: CharSet
  nameWithType: ContentType.CharSet
  fullName: System.Net.Mime.ContentType.CharSet
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "获取或设置此实例所表示的内容类型标头中包含的字符集参数的值。"
  remarks: "在以下示例中的内容类型标头，CharSet 属性的值是&quot;`us-ascii`&quot;。       `content-type: application/x-myType; charset=us-ascii`将此属性设置为`null`或<xref:System.String?displayProperty=fullName>去 charset 信息从标头。</xref:System.String?displayProperty=fullName>       RFC 2045 5.1 节描述了详细说明的内容类型标头的语法语法。 Charset 参数的深度讨论包含在 RFC 2046 第 4.1.2 节中。 这些 Rfc 位于[http://www.ietf.org](http://www.ietf.org/)。"
  example:
  - "The following code example displays the value of the property.  \n  \n [!code-cpp[NclMailSync#5](~/add/codesnippet/cpp/p-system.net.mime.conten_12_1.cpp)]\n [!code-cs[NclMailSync#5](~/add/codesnippet/csharp/p-system.net.mime.conten_12_1.cs)]"
  syntax:
    content: public string CharSet { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含与 charset 参数关联的值。</xref:System.String>"
  overload: System.Net.Mime.ContentType.CharSet*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mime.ContentType.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ContentType.Equals(Object)
  fullName: System.Net.Mime.ContentType.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "确定是否指定的内容类型标头<xref href=&quot;System.Net.Mime.ContentType&quot;></xref>对象是否等于此对象的内容类型标头。"
  syntax:
    content: public override bool Equals (object rparam);
    parameters:
    - id: rparam
      type: System.Object
      description: "<xref href=&quot;System.Net.Mime.ContentType&quot;> </xref>对象与此对象进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果内容类型标头都相同;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.Mime.ContentType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mime.ContentType.GetHashCode
  id: GetHashCode
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ContentType.GetHashCode()
  fullName: System.Net.Mime.ContentType.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "确定指定的哈希代码<xref href=&quot;System.Net.Mime.ContentType&quot;></xref>对象"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "整数哈希值。"
  overload: System.Net.Mime.ContentType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mime.ContentType.MediaType
  id: MediaType
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: MediaType
  nameWithType: ContentType.MediaType
  fullName: System.Net.Mime.ContentType.MediaType
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "获取或设置此实例所表示的内容类型标头中包含的媒体类型值。"
  remarks: "在以下示例中的内容类型标头，媒体类型属性的值是`&quot;application/x-myType&quot;`。       `content-type: application/x-myType; name=data.xyz`将此属性设置为`null`或<xref:System.String?displayProperty=fullName>从标头中删除名称信息。</xref:System.String?displayProperty=fullName>       RFC 2045 部分 5.1 中描述的内容类型标头的语法。 RFC 2046 MIME 媒体类型提供了详细的信息。 这些 Rfc 位于[http://www.ietf.org](http://www.ietf.org/)。"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cpp[NclMailSync#13](~/add/codesnippet/cpp/p-system.net.mime.conten_1_1.cpp)]\n [!code-cs[NclMailSync#13](~/add/codesnippet/csharp/p-system.net.mime.conten_1_1.cs)]"
  syntax:
    content: public string MediaType { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含媒体类型和子类型值。</xref:System.String> 此值不包括分号 （;） 分隔符后面子类型。"
  overload: System.Net.Mime.ContentType.MediaType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "为集运算指定的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "为集运算指定的值<xref:System.String>(&quot;&quot;)。</xref:System.String>"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "为集运算指定的值是无法分析的窗体中。"
  platform:
  - net462
- uid: System.Net.Mime.ContentType.Name
  id: Name
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: Name
  nameWithType: ContentType.Name
  fullName: System.Net.Mime.ContentType.Name
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "获取或设置包含在此实例所表示的内容类型标头名称参数的值。"
  remarks: "Name 属性的值是在以下示例中的内容类型标头， `&quot;data.xyz&quot;`。       `content-type: application/x-myType; name=data.xyz`语法，其中详细列出的内容类型标头的语法部分所述 RFC 2045 5.1 中，在[http://www.ietf.org](http://www.ietf.org/)。       指定的内容时<xref:System.Net.Mail.Attachment>作为<xref:System.IO.Stream>或<xref:System.String>，你可以使用名称设置的接收方的系统存储内容的文件的名称。</xref:System.String> </xref:System.IO.Stream> </xref:System.Net.Mail.Attachment>"
  example:
  - "The following code example sets the value of the property to specify a name for a file being attached as a stream.  \n  \n [!code-cpp[NclMailSync#15](~/add/codesnippet/cpp/p-system.net.mime.conten_3_1.cpp)]\n [!code-cs[NclMailSync#15](~/add/codesnippet/csharp/p-system.net.mime.conten_3_1.cs)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含与名称参数关联的值。</xref:System.String>"
  overload: System.Net.Mime.ContentType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mime.ContentType.Parameters
  id: Parameters
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: Parameters
  nameWithType: ContentType.Parameters
  fullName: System.Net.Mime.ContentType.Parameters
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "获取包含此实例所表示的内容类型标头中包含的参数的字典。"
  remarks: "你可以通过在构造时指定的整个内容标头值设置参数<xref:System.Net.Mime.ContentType>对象也可以将参数添加到<xref:System.Collections.Specialized.StringDictionary>参数属性返回。</xref:System.Collections.Specialized.StringDictionary> </xref:System.Net.Mime.ContentType>       参数的名称时将参数项添加到字典中，为项的密钥，参数的值为条目的值。       RFC 2045 5.1 节描述了详细说明的内容类型标头的语法语法。 RFC 2046 MIME 媒体类型和其关联的参数提供详细的信息。 这些 Rfc 位于[http://www.ietf.org](http://www.ietf.org/)。"
  example:
  - "The following code example displays the values in the dictionary returned by this property.  \n  \n [!code-cpp[NclMailSync#5](~/add/codesnippet/cpp/p-system.net.mime.conten_9_1.cpp)]\n [!code-cs[NclMailSync#5](~/add/codesnippet/csharp/p-system.net.mime.conten_9_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Parameters { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "可写<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>包含名称和值对。"
  overload: System.Net.Mime.ContentType.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mime.ContentType.ToString
  id: ToString
  parent: System.Net.Mime.ContentType
  langs:
  - csharp
  name: ToString()
  nameWithType: ContentType.ToString()
  fullName: System.Net.Mime.ContentType.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mime
  summary: "返回的字符串表示形式这<xref href=&quot;System.Net.Mime.ContentType&quot;></xref>对象。"
  remarks: "ToString 方法的值包含用于创建此字符串<xref:System.Net.Mime.ContentType>，如果已指定一个且已更改任何属性值。</xref:System.Net.Mime.ContentType> 如果没有指定字符串，或一个或多个属性值已更改，由于这<xref:System.Net.Mime.ContentType>已创建，ToString 的值是由使用的当前属性值的内容类型标头格式的字符串。</xref:System.Net.Mime.ContentType> 的字符串未包含`&quot;Content-type:&quot;`前缀。       RFC 2045 部分 5.1 中，在可用中描述的内容类型标头的语法[http://www.ietf.org](http://www.ietf.org/)。"
  example:
  - "The following code example displays the string representation of a <xref:System.Net.Mime.ContentType>.  \n  \n [!code-cpp[NclMailSync#13](~/add/codesnippet/cpp/m-system.net.mime.conten_4_1.cpp)]\n [!code-cs[NclMailSync#13](~/add/codesnippet/csharp/m-system.net.mime.conten_4_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>，包含此的当前设置<xref href=&quot;System.Net.Mime.ContentType&quot;> </xref>。</xref:System.String>"
  overload: System.Net.Mime.ContentType.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Mime.ContentType.#ctor
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: ContentType()
  nameWithType: ContentType.ContentType()
  fullName: System.Net.Mime.ContentType.ContentType()
- uid: System.Net.Mime.ContentType.#ctor(System.String)
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: ContentType(String)
  nameWithType: ContentType.ContentType(String)
  fullName: System.Net.Mime.ContentType.ContentType(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mime.ContentType.Boundary
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: Boundary
  nameWithType: ContentType.Boundary
  fullName: System.Net.Mime.ContentType.Boundary
- uid: System.Net.Mime.ContentType.CharSet
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: CharSet
  nameWithType: ContentType.CharSet
  fullName: System.Net.Mime.ContentType.CharSet
- uid: System.Net.Mime.ContentType.Equals(System.Object)
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: Equals(Object)
  nameWithType: ContentType.Equals(Object)
  fullName: System.Net.Mime.ContentType.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Mime.ContentType.GetHashCode
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: GetHashCode()
  nameWithType: ContentType.GetHashCode()
  fullName: System.Net.Mime.ContentType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Mime.ContentType.MediaType
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: MediaType
  nameWithType: ContentType.MediaType
  fullName: System.Net.Mime.ContentType.MediaType
- uid: System.Net.Mime.ContentType.Name
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: Name
  nameWithType: ContentType.Name
  fullName: System.Net.Mime.ContentType.Name
- uid: System.Net.Mime.ContentType.Parameters
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: Parameters
  nameWithType: ContentType.Parameters
  fullName: System.Net.Mime.ContentType.Parameters
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Net.Mime.ContentType.ToString
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: ToString()
  nameWithType: ContentType.ToString()
  fullName: System.Net.Mime.ContentType.ToString()
- uid: System.Net.Mime.ContentType.#ctor*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: ContentType
  nameWithType: ContentType.ContentType
- uid: System.Net.Mime.ContentType.Boundary*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: Boundary
  nameWithType: ContentType.Boundary
- uid: System.Net.Mime.ContentType.CharSet*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: CharSet
  nameWithType: ContentType.CharSet
- uid: System.Net.Mime.ContentType.Equals*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: Equals
  nameWithType: ContentType.Equals
- uid: System.Net.Mime.ContentType.GetHashCode*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: GetHashCode
  nameWithType: ContentType.GetHashCode
- uid: System.Net.Mime.ContentType.MediaType*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: MediaType
  nameWithType: ContentType.MediaType
- uid: System.Net.Mime.ContentType.Name*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: Name
  nameWithType: ContentType.Name
- uid: System.Net.Mime.ContentType.Parameters*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: Parameters
  nameWithType: ContentType.Parameters
- uid: System.Net.Mime.ContentType.ToString*
  parent: System.Net.Mime.ContentType
  isExternal: false
  name: ToString
  nameWithType: ContentType.ToString
