### YamlMime:ManagedReference
items:
- uid: System.Windows.HierarchicalDataTemplate
  id: HierarchicalDataTemplate
  children:
  - System.Windows.HierarchicalDataTemplate.#ctor
  - System.Windows.HierarchicalDataTemplate.#ctor(System.Object)
  - System.Windows.HierarchicalDataTemplate.AlternationCount
  - System.Windows.HierarchicalDataTemplate.ItemBindingGroup
  - System.Windows.HierarchicalDataTemplate.ItemContainerStyle
  - System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
  - System.Windows.HierarchicalDataTemplate.ItemsSource
  - System.Windows.HierarchicalDataTemplate.ItemStringFormat
  - System.Windows.HierarchicalDataTemplate.ItemTemplate
  - System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
  langs:
  - csharp
  name: HierarchicalDataTemplate
  nameWithType: HierarchicalDataTemplate
  fullName: System.Windows.HierarchicalDataTemplate
  type: Class
  summary: "Represents a <xref href=&quot;System.Windows.DataTemplate&quot;></xref> that supports <xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;></xref>, such as <xref href=&quot;System.Windows.Controls.TreeViewItem&quot;></xref> or <xref href=&quot;System.Windows.Controls.MenuItem&quot;></xref>."
  remarks: ''
  example:
  - "In the following example, `ListLeagueList` is a list of `League` objects. Each `League` object has a `Name` and a collection of `Division` objects. Each `Division` has a `Name` and a collection of `Team` objects, and each `Team` object has a `Name`.  \n  \n [!code-xml[HierarchicalDataTemplate#HDT](~/add/codesnippet/xaml/t-system.windows.hierarc_1.xaml)]\n [!code-xml[HierarchicalDataTemplate#HDT](~/add/codesnippet/xaml/t-system.windows.hierarc_1.xaml)]  \n  \n The example shows that with the use of HierarchicalDataTemplate, you can easily display list data that contains other lists. The following is a screenshot of the example.  \n  \n ![HierarchicalDataTemplate sample screen shot](~/add/media/databinding-hierarchicaldatatemplate.png \"HierarchicalDataTemplate sample screen shot\")"
  syntax:
    content: 'public class HierarchicalDataTemplate : System.Windows.DataTemplate'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  - System.Windows.DataTemplate
  implements: []
  inheritedMembers:
  - System.Windows.DataTemplate.DataTemplateKey
  - System.Windows.DataTemplate.DataType
  - System.Windows.DataTemplate.Triggers
  - System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: HierarchicalDataTemplate()
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate()
  fullName: System.Windows.HierarchicalDataTemplate.HierarchicalDataTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.HierarchicalDataTemplate&quot;></xref>类。"
  syntax:
    content: public HierarchicalDataTemplate ();
    parameters: []
  overload: System.Windows.HierarchicalDataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: HierarchicalDataTemplate(Object)
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate(Object)
  fullName: System.Windows.HierarchicalDataTemplate.HierarchicalDataTemplate(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.HierarchicalDataTemplate&quot;></xref>模板所针对的指定类型的类。"
  remarks: "`dataType`参数可以是[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]对象或一个字符串，表示[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]元素。 有关详细信息，请参阅[绑定源概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public HierarchicalDataTemplate (object dataType);
    parameters:
    - id: dataType
      type: System.Object
      description: "此模板所针对的类型。"
  overload: System.Windows.HierarchicalDataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.AlternationCount
  id: AlternationCount
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: AlternationCount
  nameWithType: HierarchicalDataTemplate.AlternationCount
  fullName: System.Windows.HierarchicalDataTemplate.AlternationCount
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置的交替项容器的子项目数。"
  remarks: "<xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>和<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>属性使您能够指定两个或多个交替项容器的外观。</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 例如，可以在<xref:System.Windows.Controls.ItemsControl>.</xref:System.Windows.Controls.ItemsControl>中指定的每个第三个项的交替的背景色  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>分配给每个项容器中<xref:System.Windows.Controls.ItemsControl>。</xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>从 0 开始的、 递增时才执行<xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>减 1 和 0 然后重新启动。</xref:System.Windows.Controls.ItemsControl.AlternationCount%2A></xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 例如，如果<xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>为 3 中的七项<xref:System.Windows.Controls.ItemsControl>下, 表列出<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>每个项。</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>      |项位置中<xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>|  |---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  |&1; |&0; |  |&2; |&1; |  |&3; |&2; |  |&4; |&0; |  |&5; |&1; |  |&6; |&2; |  |&7; |&0; |      当你设置 AlternationCount 属性时，则表示子项目，应获取<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>在该范围内，不具有<xref:System.Windows.HierarchicalDataTemplate>应用于它。</xref:System.Windows.HierarchicalDataTemplate>此项</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName></xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName></xref:System.Windows.Controls.ItemsControl> 例如，如果<xref:System.Windows.Controls.HeaderedItemsControl>调用`aHeaderedItemsControl`使用<xref:System.Windows.HierarchicalDataTemplate>AlternationCount 设置后，子项的项容器`aHeaderedItemsControl`将具有<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>，而不是项容器的`aHeaderedItemsControl`。</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.HierarchicalDataTemplate> </xref:System.Windows.Controls.HeaderedItemsControl>       有多种方法可用于指定不同的外观的交替项容器。 一种方法是将项容器的属性绑定到<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>。</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 然后，可以使用<xref:System.Windows.Controls.AlternationConverter>来指定应将哪个值应用到具有特定的项容器<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>值。</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.AlternationConverter> 此外可以使用触发器若要更改根据其<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>.</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>的值的项容器的属性的值"
  example:
  - "The following example creates a <xref:System.Windows.Controls.TreeView> that is bound to data that is three levels deep, and each item is displayed in a <xref:System.Windows.Controls.TextBlock>.  The <xref:System.Windows.Controls.TextBlock> objects in the first level have the same property values, the <xref:System.Windows.Controls.TextBlock> objects in the second level use alternating values for the <xref:System.Windows.Controls.TextBlock.FontStyle%2A> property, and the <xref:System.Windows.Controls.TextBlock> objects in the third level use alternating values for the <xref:System.Windows.Controls.TextBlock.Background%2A> property.  \n  \n Because the <xref:System.Windows.HierarchicalDataTemplate> for the first level, `Level1Data`, has the AlternationCount property set to 2, the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> for the <xref:System.Windows.Controls.TreeViewItem> objects in the second level alternates between 0 and 1. In the <xref:System.Windows.HierarchicalDataTemplate> for the second level, `Level2Data`, the <xref:System.Windows.Controls.TextBlock.FontStyle%2A> of the <xref:System.Windows.Controls.TextBlock> is bound to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and an <xref:System.Windows.Controls.AlternationConverter> is provided to convert the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> to an alternating <xref:System.Windows.Controls.TextBlock.FontStyle%2A>.  A similar relationship exists between `Level2Data` and `Level3Data`:  The AlternationCount is set to 3 on `Level2Data`, and the <xref:System.Windows.Controls.TextBlock> in `Level3Ddata` has its <xref:System.Windows.Controls.TextBlock.Background%2A> property bound to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>.  \n  \n [!code-xml[AlternationIndexSnippets#5](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#5)]"
  syntax:
    content: public int AlternationCount { get; set; }
    return:
      type: System.Int32
      description: "交替项容器的下一个级别的项的数量。"
  overload: System.Windows.HierarchicalDataTemplate.AlternationCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemBindingGroup
  id: ItemBindingGroup
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemBindingGroup
  nameWithType: HierarchicalDataTemplate.ItemBindingGroup
  fullName: System.Windows.HierarchicalDataTemplate.ItemBindingGroup
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>复制到每个子项。"
  remarks: "当你将设置<xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>属性，每个项容器获取<xref:System.Windows.Data.BindingGroup>具有相同<xref:System.Windows.Controls.ValidationRule>对象，以作为<xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>，但描述中的绑定，如<xref:System.Windows.Data.BindingGroup.Items%2A>和<xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>、 特定于<xref:System.Windows.Controls.ItemsControl>.</xref:System.Windows.Controls.ItemsControl>中每一项数据</xref:System.Windows.Data.BindingGroup.BindingExpressions%2A></xref:System.Windows.Data.BindingGroup.Items%2A>的数据的属性</xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A></xref:System.Windows.Controls.ValidationRule></xref:System.Windows.Data.BindingGroup></xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>  你必须访问项容器的<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>执行操作，如验证数据和错误检查的项。</xref:System.Windows.FrameworkContentElement.BindingGroup%2A>"
  syntax:
    content: public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }
    return:
      type: System.Windows.Data.BindingGroup
      description: "<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>复制到每个子项。"
  overload: System.Windows.HierarchicalDataTemplate.ItemBindingGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyle
  id: ItemContainerStyle
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemContainerStyle
  nameWithType: HierarchicalDataTemplate.ItemContainerStyle
  fullName: System.Windows.HierarchicalDataTemplate.ItemContainerStyle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置<xref href=&quot;System.Windows.Style&quot;></xref>应用于每个子项的项容器。"
  remarks: "使用此属性或<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A>属性来设置样式，以影响包含数据项的元素的外观。</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> 例如，对于<xref:System.Windows.Controls.TreeView>，生成的容器是<xref:System.Windows.Controls.TreeViewItem>控件; 有关<xref:System.Windows.Controls.Menu>，它们是<xref:System.Windows.Controls.MenuItem>控件。</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TreeViewItem> </xref:System.Windows.Controls.TreeView>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.TreeView> that uses one style for items in its first level and another style for items in its second level.  The style for the first level is set in the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property of the <xref:System.Windows.Controls.TreeView>.  The style for the second level is set in the ItemContainerStyle property of the <xref:System.Windows.HierarchicalDataTemplate>.  \n  \n [!code-xml[RecycleItemContainerShippets#VirtualizingTreeView](~/add/codesnippet/xaml/RecycleItemContainerShippets/Window1.xaml#virtualizingtreeview)]  \n  \n The following example creates the data that is used in the previous example.  \n  \n [!code-cs[RecycleItemContainerShippets#TreeViewData](~/add/codesnippet/csharp/RecycleItemContainerShippets/Window1.xaml.cs#treeviewdata)]\n [!code-vb[RecycleItemContainerShippets#TreeViewData](~/add/codesnippet/visualbasic/recycleitemcontainershippets/window1.xaml.vb#treeviewdata)]"
  syntax:
    content: public System.Windows.Style ItemContainerStyle { get; set; }
    return:
      type: System.Windows.Style
      description: "<xref href=&quot;System.Windows.Style&quot;> </xref>应用于每个子项的项容器。"
  overload: System.Windows.HierarchicalDataTemplate.ItemContainerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
  id: ItemContainerStyleSelector
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemContainerStyleSelector
  nameWithType: HierarchicalDataTemplate.ItemContainerStyleSelector
  fullName: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置可应用于每个项容器的样式的自定义样式选择逻辑。"
  remarks: "你使用<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>属性来设置样式，以影响包含数据项的元素的外观。</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 例如，对于<xref:System.Windows.Controls.TreeView>，生成的容器是<xref:System.Windows.Controls.TreeViewItem>控件; 有关<xref:System.Windows.Controls.Menu>，它们是<xref:System.Windows.Controls.MenuItem>控件。</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TreeViewItem> </xref:System.Windows.Controls.TreeView> 如果你有多个样式定义且需要提供逻辑来选择哪一个应用，则使用 ItemContainerStyleSelector 属性而不是<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>属性。</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 请注意，将忽略此属性，是否<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>属性设置。</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.TreeView> that uses the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> of a <xref:System.Windows.HierarchicalDataTemplate> to choose between two styles for items in the second level of the <xref:System.Windows.Controls.TreeView>.  \n  \n [!code-xml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/add/codesnippet/xaml/RecycleItemContainerShippets/Window1.xaml#itemcontainerstyleselector)]  \n  \n The following example shows the <xref:System.Windows.Controls.StyleSelector> that is used in the previous example.  \n  \n [!code-cs[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/add/codesnippet/csharp/RecycleItemContainerShippets/Window1.xaml.cs#treeviewitemstyleselector)]\n [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/add/codesnippet/visualbasic/recycleitemcontainershippets/window1.xaml.vb#treeviewitemstyleselector)]  \n  \n The following example creates the data that is used in the previous example.  \n  \n [!code-cs[RecycleItemContainerShippets#TreeViewData](~/add/codesnippet/csharp/RecycleItemContainerShippets/Window1.xaml.cs#treeviewdata)]\n [!code-vb[RecycleItemContainerShippets#TreeViewData](~/add/codesnippet/visualbasic/recycleitemcontainershippets/window1.xaml.vb#treeviewdata)]"
  syntax:
    content: public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }
    return:
      type: System.Windows.Controls.StyleSelector
      description: "A <xref href=&quot;System.Windows.Controls.StyleSelector&quot;> </xref> ，选择要用作<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle*>.</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle*>哪种样式 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemsSource
  id: ItemsSource
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemsSource
  nameWithType: HierarchicalDataTemplate.ItemsSource
  fullName: System.Windows.HierarchicalDataTemplate.ItemsSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置此数据模板中，指示在何处可以找到表示数据层次结构中的下一级别的集合的绑定。"
  remarks: "它将应用于<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>上一个已生成的属性<xref:System.Windows.Controls.HeaderedItemsControl>(如<xref:System.Windows.Controls.MenuItem>或<xref:System.Windows.Controls.TreeViewItem>) 用于指示在何处可以找到表示数据层次结构中的下一级别的集合。</xref:System.Windows.Controls.TreeViewItem> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.HeaderedItemsControl> </xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>      <a name=&quot;xamlTextUsage_ItemsSource&quot;></a># # XAML 文本使用对于[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]信息，请参阅<xref:System.Windows.Data.Binding>类型。</xref:System.Windows.Data.Binding>"
  example:
  - "In the following example, `ListLeagueList` is a list of `League` objects. Each `League` object has a `Name` and a collection of `Division` objects. Each `Division` has a `Name` and a collection of `Team` objects, and each `Team` object has a `Name`.  \n  \n [!code-xml[HierarchicalDataTemplate#HDT](~/add/codesnippet/xaml/p-system.windows.hierarc_1_1.xaml)]\n [!code-xml[HierarchicalDataTemplate#HDT](~/add/codesnippet/xaml/p-system.windows.hierarc_1_1.xaml)]  \n  \n The example shows that with the use of <xref:System.Windows.HierarchicalDataTemplate>, you can easily display list data that contains other lists. The following is a screenshot of the example.  \n  \n ![HierarchicalDataTemplate sample screen shot](~/add/media/databinding-hierarchicaldatatemplate.png \"HierarchicalDataTemplate sample screen shot\")"
  syntax:
    content: public System.Windows.Data.BindingBase ItemsSource { get; set; }
    return:
      type: System.Windows.Data.BindingBase
      description: "默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.HierarchicalDataTemplate.ItemsSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemStringFormat
  id: ItemStringFormat
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemStringFormat
  nameWithType: HierarchicalDataTemplate.ItemStringFormat
  fullName: System.Windows.HierarchicalDataTemplate.ItemStringFormat
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置一个复合字符串，指定如何格式化数据层次结构中的下一步级别中的项，如果它们显示为字符串。"
  syntax:
    content: public string ItemStringFormat { get; set; }
    return:
      type: System.String
      description: "一个复合字符串，指定如何格式化这些项数据层次结构的下一步级别中，如果它们显示为字符串。"
  overload: System.Windows.HierarchicalDataTemplate.ItemStringFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplate
  id: ItemTemplate
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: HierarchicalDataTemplate.ItemTemplate
  fullName: System.Windows.HierarchicalDataTemplate.ItemTemplate
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置<xref href=&quot;System.Windows.DataTemplate&quot;></xref>要应用于<xref:System.Windows.Controls.ItemsControl.ItemTemplate*>上一个已生成的属性<xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;> </xref> (如<xref href=&quot;System.Windows.Controls.MenuItem&quot;></xref>或<xref href=&quot;System.Windows.Controls.TreeViewItem&quot;> </xref>)，以指示如何显示数据层次结构中的下一步的级别中的项目。</xref:System.Windows.Controls.ItemsControl.ItemTemplate*>"
  syntax:
    content: public System.Windows.DataTemplate ItemTemplate { get; set; }
    return:
      type: System.Windows.DataTemplate
      description: "<xref href=&quot;System.Windows.DataTemplate&quot;> </xref>要应用于<xref:System.Windows.Controls.ItemsControl.ItemTemplate*>上一个已生成的属性<xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;> </xref> (如<xref href=&quot;System.Windows.Controls.MenuItem&quot;></xref>或<xref href=&quot;System.Windows.Controls.TreeViewItem&quot;> </xref>)，以指示如何显示数据层次结构中的下一步的级别中的项目。</xref:System.Windows.Controls.ItemsControl.ItemTemplate*>"
  overload: System.Windows.HierarchicalDataTemplate.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
  id: ItemTemplateSelector
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemTemplateSelector
  nameWithType: HierarchicalDataTemplate.ItemTemplateSelector
  fullName: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "获取或设置<xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;></xref>要应用于<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector*>上一个已生成的属性<xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;> </xref> (如<xref href=&quot;System.Windows.Controls.MenuItem&quot;></xref>或<xref href=&quot;System.Windows.Controls.TreeViewItem&quot;> </xref>)，以指示如何选择模板，以显示数据层次结构中的下一步的级别中的项目。</xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector*>"
  syntax:
    content: public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }
    return:
      type: System.Windows.Controls.DataTemplateSelector
      description: "<xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;> </xref>对象要应用于<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector*>上一个已生成的属性<xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;> </xref> (如<xref href=&quot;System.Windows.Controls.MenuItem&quot;></xref>或<xref href=&quot;System.Windows.Controls.TreeViewItem&quot;> </xref>)，以指示如何选择模板，以显示数据层次结构中的下一步的级别中的项目。</xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector*>"
  overload: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DataTemplate
  isExternal: false
  name: System.Windows.DataTemplate
- uid: System.Windows.HierarchicalDataTemplate.#ctor
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: HierarchicalDataTemplate()
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate()
  fullName: System.Windows.HierarchicalDataTemplate.HierarchicalDataTemplate()
- uid: System.Windows.HierarchicalDataTemplate.#ctor(System.Object)
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: HierarchicalDataTemplate(Object)
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate(Object)
  fullName: System.Windows.HierarchicalDataTemplate.HierarchicalDataTemplate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.HierarchicalDataTemplate.AlternationCount
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: AlternationCount
  nameWithType: HierarchicalDataTemplate.AlternationCount
  fullName: System.Windows.HierarchicalDataTemplate.AlternationCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.HierarchicalDataTemplate.ItemBindingGroup
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemBindingGroup
  nameWithType: HierarchicalDataTemplate.ItemBindingGroup
  fullName: System.Windows.HierarchicalDataTemplate.ItemBindingGroup
- uid: System.Windows.Data.BindingGroup
  parent: System.Windows.Data
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyle
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemContainerStyle
  nameWithType: HierarchicalDataTemplate.ItemContainerStyle
  fullName: System.Windows.HierarchicalDataTemplate.ItemContainerStyle
- uid: System.Windows.Style
  parent: System.Windows
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Windows.Style
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemContainerStyleSelector
  nameWithType: HierarchicalDataTemplate.ItemContainerStyleSelector
  fullName: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
- uid: System.Windows.Controls.StyleSelector
  parent: System.Windows.Controls
  isExternal: false
  name: StyleSelector
  nameWithType: StyleSelector
  fullName: System.Windows.Controls.StyleSelector
- uid: System.Windows.HierarchicalDataTemplate.ItemsSource
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemsSource
  nameWithType: HierarchicalDataTemplate.ItemsSource
  fullName: System.Windows.HierarchicalDataTemplate.ItemsSource
- uid: System.Windows.Data.BindingBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Windows.HierarchicalDataTemplate.ItemStringFormat
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemStringFormat
  nameWithType: HierarchicalDataTemplate.ItemStringFormat
  fullName: System.Windows.HierarchicalDataTemplate.ItemStringFormat
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplate
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemTemplate
  nameWithType: HierarchicalDataTemplate.ItemTemplate
  fullName: System.Windows.HierarchicalDataTemplate.ItemTemplate
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemTemplateSelector
  nameWithType: HierarchicalDataTemplate.ItemTemplateSelector
  fullName: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
- uid: System.Windows.Controls.DataTemplateSelector
  parent: System.Windows.Controls
  isExternal: false
  name: DataTemplateSelector
  nameWithType: DataTemplateSelector
  fullName: System.Windows.Controls.DataTemplateSelector
- uid: System.Windows.HierarchicalDataTemplate.#ctor*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: HierarchicalDataTemplate
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate
- uid: System.Windows.HierarchicalDataTemplate.AlternationCount*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: AlternationCount
  nameWithType: HierarchicalDataTemplate.AlternationCount
- uid: System.Windows.HierarchicalDataTemplate.ItemBindingGroup*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemBindingGroup
  nameWithType: HierarchicalDataTemplate.ItemBindingGroup
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyle*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemContainerStyle
  nameWithType: HierarchicalDataTemplate.ItemContainerStyle
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemContainerStyleSelector
  nameWithType: HierarchicalDataTemplate.ItemContainerStyleSelector
- uid: System.Windows.HierarchicalDataTemplate.ItemsSource*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemsSource
  nameWithType: HierarchicalDataTemplate.ItemsSource
- uid: System.Windows.HierarchicalDataTemplate.ItemStringFormat*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemStringFormat
  nameWithType: HierarchicalDataTemplate.ItemStringFormat
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplate*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemTemplate
  nameWithType: HierarchicalDataTemplate.ItemTemplate
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemTemplateSelector
  nameWithType: HierarchicalDataTemplate.ItemTemplateSelector
