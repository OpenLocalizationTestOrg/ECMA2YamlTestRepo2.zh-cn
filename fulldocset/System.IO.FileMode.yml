### YamlMime:ManagedReference
items:
- uid: System.IO.FileMode
  id: FileMode
  children:
  - System.IO.FileMode.Append
  - System.IO.FileMode.Create
  - System.IO.FileMode.CreateNew
  - System.IO.FileMode.Open
  - System.IO.FileMode.OpenOrCreate
  - System.IO.FileMode.Truncate
  langs:
  - csharp
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
  type: Enum
  summary: "指定操作系统打开文件的方式。"
  remarks: "创建一个文件并将文本写入文件的示例，请参阅[如何︰ 将文本写入到文件](~/add/includes/ajax-current-ext-md.md)。 从文件读取文本的示例，请参阅[如何︰ 从文件读取文本](~/add/includes/ajax-current-ext-md.md)。 读取和写入二进制文件的示例，请参阅[如何︰ 读取和写入到新创建数据文件](~/add/includes/ajax-current-ext-md.md)。       A`FileMode`在很多的构造函数指定参数<xref:System.IO.FileStream>， <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>，然后在`Open`方法<xref:System.IO.File>和<xref:System.IO.FileInfo>来控制如何打开文件。</xref:System.IO.FileInfo> </xref:System.IO.File> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> </xref:System.IO.FileStream>       `FileMode`参数控制是否覆盖文件，创建，打开，或它们的某些组合。 使用`Open`以打开现有文件。 若要将追加到文件，请使用`Append`。 若要将文件截断或创建一个文件，如果它不存在，使用`Create`。"
  example:
  - "The following `FileStream` constructor opens an existing file (`FileMode.Open`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.filemode_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.filemode_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.filemode_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileMode.Append
  id: Append
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "如果它存在，并且查找到的文件尾，或者创建一个新文件，请打开该文件。 这要求&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt;权限。 <xref uid=&quot;langword_csharp_FileMode.Append&quot; name=&quot;FileMode.Append&quot; href=&quot;&quot;></xref>可以使用仅在需要兼顾<xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>。 尝试查找该文件将引发结束之前将其置于<xref:System.IO.IOException>异常，并且任何尝试读取失败，则将引发<xref:System.NotSupportedException>异常。</xref:System.NotSupportedException> </xref:System.IO.IOException>"
  syntax:
    content: Append
    return:
      type: System.IO.FileMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Create
  id: Create
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定操作系统应创建一个新文件。 如果该文件已存在，则会覆盖它。 这要求&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;权限。 <xref uid=&quot;langword_csharp_FileMode.Create&quot; name=&quot;FileMode.Create&quot; href=&quot;&quot;></xref>等效于请求，如果文件不存在，使用创建新;否则，请使用 Truncate。 如果该文件已存在，但是一个隐藏的文件，<xref:System.UnauthorizedAccessException>引发异常。</xref:System.UnauthorizedAccessException>"
  syntax:
    content: Create
    return:
      type: System.IO.FileMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.CreateNew
  id: CreateNew
  parent: System.IO.FileMode
  langs:
  - csharp
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定操作系统应创建一个新文件。 这要求&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;权限。 如果该文件已存在，<xref:System.IO.IOException>引发异常。</xref:System.IO.IOException>"
  syntax:
    content: CreateNew
    return:
      type: System.IO.FileMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Open
  id: Open
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定操作系统打开现有文件。 打开文件的能力是依赖于指定的值<xref href=&quot;System.IO.FileAccess&quot;></xref>枚举。 A &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt;如果文件不存在将引发异常。"
  syntax:
    content: Open
    return:
      type: System.IO.FileMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.OpenOrCreate
  id: OpenOrCreate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定是否存在;，操作系统应打开文件否则，应创建一个新文件。 如果该文件在打开与<xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>， &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt;权限是必需的。 如果文件的访问是<xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>， &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;权限是必需的。 如果该文件在打开与<xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>，这两个&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt;和&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;权限是必需的。"
  syntax:
    content: OpenOrCreate
    return:
      type: System.IO.FileMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Truncate
  id: Truncate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定操作系统打开现有文件。 当打开文件时，它应会被截断，以便其大小为零字节。 这要求&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;权限。 尝试从文件读取使用打开<xref uid=&quot;langword_csharp_FileMode.Truncate&quot; name=&quot;FileMode.Truncate&quot; href=&quot;&quot;></xref>导致<xref:System.ArgumentException>异常。</xref:System.ArgumentException>"
  syntax:
    content: Truncate
    return:
      type: System.IO.FileMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileMode.Append
  parent: System.IO.FileMode
  isExternal: false
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileMode.Create
  parent: System.IO.FileMode
  isExternal: false
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
- uid: System.IO.FileMode.CreateNew
  parent: System.IO.FileMode
  isExternal: false
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
- uid: System.IO.FileMode.Open
  parent: System.IO.FileMode
  isExternal: false
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
- uid: System.IO.FileMode.OpenOrCreate
  parent: System.IO.FileMode
  isExternal: false
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
- uid: System.IO.FileMode.Truncate
  parent: System.IO.FileMode
  isExternal: false
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
