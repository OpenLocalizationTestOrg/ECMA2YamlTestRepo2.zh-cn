### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.AlternationConverter
  id: AlternationConverter
  children:
  - System.Windows.Controls.AlternationConverter.#ctor
  - System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.AlternationConverter.Values
  langs:
  - csharp
  name: AlternationConverter
  nameWithType: AlternationConverter
  fullName: System.Windows.Controls.AlternationConverter
  type: Class
  summary: "将整数与其他对象转换通过将整数作为索引应用于的对象的列表。"
  remarks: "AlternationConverter 可用于将属性绑定到交替值。 例如，如果你希望项<xref:System.Windows.Controls.ListBox>具有交替蓝色和浅蓝色背景，您可以执行以下操作:-创建 AlternationConverter 并添加蓝色<xref:System.Windows.Media.SolidColorBrush>和浅蓝色<xref:System.Windows.Media.SolidColorBrush>到其<xref:System.Windows.Controls.AlternationConverter.Values%2A>属性。</xref:System.Windows.Controls.AlternationConverter.Values%2A> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Controls.ListBox>      -在<xref:System.Windows.Style>为<xref:System.Windows.Controls.ListBoxItem>，将绑定<xref:System.Windows.Controls.Control.Background%2A>属性<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>并分配到所创建的转换器<xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName>属性。</xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName> </xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.Control.Background%2A> </xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Style>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.ListBox> and uses two AlternationConverter objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \n  \n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Values")]

      public class AlternationConverter : System.Windows.Data.IValueConverter
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: AlternationConverter()
  nameWithType: AlternationConverter.AlternationConverter()
  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "初始化的新实例<xref href=&quot;System.Windows.Controls.AlternationConverter&quot;></xref>类。"
  syntax:
    content: public AlternationConverter ();
    parameters: []
  overload: System.Windows.Controls.AlternationConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "将整数转换中的某个对象为<xref:System.Windows.Controls.AlternationConverter.Values*>列表。</xref:System.Windows.Controls.AlternationConverter.Values*>"
  syntax:
    content: public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: o
      type: System.Object
      description: "要用于查找中的某个对象的整数<xref:System.Windows.Controls.AlternationConverter.Values*>属性。</xref:System.Windows.Controls.AlternationConverter.Values*>"
    - id: targetType
      type: System.Type
      description: "绑定目标属性的类型。"
    - id: parameter
      type: System.Object
      description: "要使用的转换器参数。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "要在转换器中使用的区域性。"
    return:
      type: System.Object
      description: "中的位置的对象<code> o </code>取模中的项目<xref:System.Windows.Controls.AlternationConverter.Values*>。</xref:System.Windows.Controls.AlternationConverter.Values*>数"
  overload: System.Windows.Controls.AlternationConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "将转换中的某个对象<xref:System.Windows.Controls.AlternationConverter.Values*>为整数的列表。</xref:System.Windows.Controls.AlternationConverter.Values*>"
  syntax:
    content: public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: o
      type: System.Object
      description: "要查找中的对象<xref:System.Windows.Controls.AlternationConverter.Values*>属性。</xref:System.Windows.Controls.AlternationConverter.Values*>"
    - id: targetType
      type: System.Type
      description: "绑定目标属性的类型。"
    - id: parameter
      type: System.Object
      description: "要使用的转换器参数。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "要在转换器中使用的区域性。"
    return:
      type: System.Object
      description: "索引<code> o </code>如果它在<> *1>，或为-1 如果中不存在 o <> </> *1>。"
  overload: System.Windows.Controls.AlternationConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.Values
  id: Values
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: Values
  nameWithType: AlternationConverter.Values
  fullName: System.Windows.Controls.AlternationConverter.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "获取的对象的列表<xref href=&quot;System.Windows.Controls.AlternationConverter&quot;></xref>返回一个整数传递到<xref:System.Windows.Controls.AlternationConverter.Convert*>方法。</xref:System.Windows.Controls.AlternationConverter.Convert*>"
  remarks: "当你使用<xref:System.Windows.Controls.AlternationConverter>将属性绑定到交替值，值属性包含分配给属性的对象。</xref:System.Windows.Controls.AlternationConverter>  例如，如果你希望项<xref:System.Windows.Controls.ListBox>具有交替蓝色和浅蓝色背景，你添加蓝色<xref:System.Windows.Media.SolidColorBrush>和浅蓝色<xref:System.Windows.Media.SolidColorBrush>为值。</xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Controls.ListBox>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \n  \n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]"
  syntax:
    content: public System.Collections.IList Values { get; }
    return:
      type: System.Collections.IList
      description: "列表对象<xref href=&quot;System.Windows.Controls.AlternationConverter&quot;></xref>返回一个整数传递到<xref:System.Windows.Controls.AlternationConverter.Convert*>方法。</xref:System.Windows.Controls.AlternationConverter.Convert*>"
  overload: System.Windows.Controls.AlternationConverter.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.AlternationConverter.#ctor
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: AlternationConverter()
  nameWithType: AlternationConverter.AlternationConverter()
  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()
- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
- uid: System.Windows.Controls.AlternationConverter.Values
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Values
  nameWithType: AlternationConverter.Values
  fullName: System.Windows.Controls.AlternationConverter.Values
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Controls.AlternationConverter.#ctor*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: AlternationConverter
  nameWithType: AlternationConverter.AlternationConverter
- uid: System.Windows.Controls.AlternationConverter.Convert*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Convert
  nameWithType: AlternationConverter.Convert
- uid: System.Windows.Controls.AlternationConverter.ConvertBack*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: ConvertBack
  nameWithType: AlternationConverter.ConvertBack
- uid: System.Windows.Controls.AlternationConverter.Values*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Values
  nameWithType: AlternationConverter.Values
