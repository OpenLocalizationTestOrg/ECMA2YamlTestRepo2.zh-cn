### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ApplicationCommands
  id: ApplicationCommands
  children:
  - System.Windows.Input.ApplicationCommands.CancelPrint
  - System.Windows.Input.ApplicationCommands.Close
  - System.Windows.Input.ApplicationCommands.ContextMenu
  - System.Windows.Input.ApplicationCommands.Copy
  - System.Windows.Input.ApplicationCommands.CorrectionList
  - System.Windows.Input.ApplicationCommands.Cut
  - System.Windows.Input.ApplicationCommands.Delete
  - System.Windows.Input.ApplicationCommands.Find
  - System.Windows.Input.ApplicationCommands.Help
  - System.Windows.Input.ApplicationCommands.New
  - System.Windows.Input.ApplicationCommands.NotACommand
  - System.Windows.Input.ApplicationCommands.Open
  - System.Windows.Input.ApplicationCommands.Paste
  - System.Windows.Input.ApplicationCommands.Print
  - System.Windows.Input.ApplicationCommands.PrintPreview
  - System.Windows.Input.ApplicationCommands.Properties
  - System.Windows.Input.ApplicationCommands.Redo
  - System.Windows.Input.ApplicationCommands.Replace
  - System.Windows.Input.ApplicationCommands.Save
  - System.Windows.Input.ApplicationCommands.SaveAs
  - System.Windows.Input.ApplicationCommands.SelectAll
  - System.Windows.Input.ApplicationCommands.Stop
  - System.Windows.Input.ApplicationCommands.Undo
  langs:
  - csharp
  name: ApplicationCommands
  nameWithType: ApplicationCommands
  fullName: System.Windows.Input.ApplicationCommands
  type: Class
  summary: "提供的标准应用程序组相关命令。"
  remarks: "ApplicationCommands 类中的命令和命令中的其他命令库类，如<xref:System.Windows.Input.ComponentCommands>和<xref:System.Windows.Input.NavigationCommands>，用于表示一组的应用程序程序员经常遇到的常见命令。</xref:System.Windows.Input.NavigationCommands> </xref:System.Windows.Input.ComponentCommands>  命令仅表示的实例<xref:System.Windows.Input.RoutedCommand>不实现逻辑的命令。</xref:System.Windows.Input.RoutedCommand> 实现逻辑绑定到以<xref:System.Windows.Input.CommandBinding>.</xref:System.Windows.Input.CommandBinding>命令 例如，如果<xref:System.Windows.Input.ApplicationCommands.Close%2A>命令执行控件，后者将执行的逻辑<xref:System.Windows.Input.ApplicationCommands.Close%2A>命令可能不提供由控件，因此应用程序编写器将负责编写确定控件将如何处理命令的逻辑。</xref:System.Windows.Input.ApplicationCommands.Close%2A> </xref:System.Windows.Input.ApplicationCommands.Close%2A>       许多控件对于许多命令库中的命令提供实现逻辑。  例如，<xref:System.Windows.Controls.TextBox>类提供了逻辑<xref:System.Windows.Input.ApplicationCommands.Paste%2A>， <xref:System.Windows.Input.ApplicationCommands.Cut%2A>， <xref:System.Windows.Input.ApplicationCommands.Copy%2A>， <xref:System.Windows.Input.ApplicationCommands.Undo%2A>，和<xref:System.Windows.Input.ApplicationCommands.Redo%2A>命令。</xref:System.Windows.Input.ApplicationCommands.Redo%2A> </xref:System.Windows.Input.ApplicationCommands.Undo%2A> </xref:System.Windows.Input.ApplicationCommands.Copy%2A> </xref:System.Windows.Input.ApplicationCommands.Cut%2A> </xref:System.Windows.Input.ApplicationCommands.Paste%2A> </xref:System.Windows.Controls.TextBox>       有关详细信息命令和命令，请参阅[命令概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static class ApplicationCommands
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.CancelPrint
  id: CancelPrint
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: CancelPrint
  nameWithType: ApplicationCommands.CancelPrint
  fullName: System.Windows.Input.ApplicationCommands.CancelPrint
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示取消打印命令的值。"
  remarks: "此命令指示打算取消打印作业。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_CancelPrint&quot;></a># # XAML 属性用法```   <object property=&quot;CancelPrint&quot;/>>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand CancelPrint { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> 未定义笔势。       </td></tr><tr><td> UI 文本       </td><td> 取消打印       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.CancelPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Close
  id: Close
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Close
  nameWithType: ApplicationCommands.Close
  fullName: System.Windows.Input.ApplicationCommands.Close
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示关闭命令的值。"
  remarks: "此命令指示意图关闭某项 （通常是一个文件）。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Close&quot;></a># # XAML 属性用法```   <object property=&quot;Close&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Close { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> 未定义笔势。       </td></tr><tr><td> UI 文本       </td><td> “关闭”       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.ContextMenu
  id: ContextMenu
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: ContextMenu
  nameWithType: ApplicationCommands.ContextMenu
  fullName: System.Windows.Input.ApplicationCommands.ContextMenu
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示上下文菜单命令的值。"
  remarks: "此命令指示打开上下文菜单的意图。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_ContextMenu&quot;></a># # XAML 属性用法```   <object property=&quot;ContextMenu&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand ContextMenu { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Shift + F10 应用       </td></tr><tr><td> 鼠标手势       </td><td> 鼠标手势未附加到此命令，但大多数应用程序遵循使用右击笔势调用上下文菜单的约定。       </td></tr><tr><td> UI 文本       </td><td> 上下文菜单       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.ContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Copy
  id: Copy
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Copy
  nameWithType: ApplicationCommands.Copy
  fullName: System.Windows.Input.ApplicationCommands.Copy
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示复制命令的值。"
  remarks: "此命令指示打算将所选内容复制到剪贴板。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Copy&quot;></a># # XAML 属性用法```   <object property=&quot;Copy&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Copy { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + C Ctrl + Insert       </td></tr><tr><td> UI 文本       </td><td> 复制       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.CorrectionList
  id: CorrectionList
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: CorrectionList
  nameWithType: ApplicationCommands.CorrectionList
  fullName: System.Windows.Input.ApplicationCommands.CorrectionList
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示更正列表命令的值。"
  remarks: "此命令指示打开更正列表的意图。       更正列表是上下文而异。 例如，对于[!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]输入更正列表标识重新转换选项。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_CorrectionList&quot;></a># # XAML 属性用法```   <object property=&quot;CorrectionList&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand CorrectionList { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> 未定义笔势。       </td></tr><tr><td> UI 文本       </td><td> 更正列表       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.CorrectionList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Cut
  id: Cut
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Cut
  nameWithType: ApplicationCommands.Cut
  fullName: System.Windows.Input.ApplicationCommands.Cut
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示剪切命令的值。"
  remarks: "此命令指示意图剪切到剪贴板选定内容。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Cut&quot;></a># # XAML 属性用法```   <object property=&quot;Cut&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Cut { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + X Shift + Delete       </td></tr><tr><td> UI 文本       </td><td> 剪切       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Cut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Delete
  id: Delete
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Delete
  nameWithType: ApplicationCommands.Delete
  fullName: System.Windows.Input.ApplicationCommands.Delete
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示删除命令的值。"
  remarks: "此命令指示想要删除所选内容。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Delete&quot;></a># # XAML 属性用法```   <object property=&quot;Delete&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Delete { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Del       </td></tr><tr><td> UI 文本       </td><td> 删除       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Find
  id: Find
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Find
  nameWithType: ApplicationCommands.Find
  fullName: System.Windows.Input.ApplicationCommands.Find
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示 Find 命令的值。"
  remarks: "此命令指示打开专用的查找对话框的意图。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Find&quot;></a># # XAML 属性用法```   <object property=&quot;Find&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Find { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + F       </td></tr><tr><td> UI 文本       </td><td> 查找       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Help
  id: Help
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Help
  nameWithType: ApplicationCommands.Help
  fullName: System.Windows.Input.ApplicationCommands.Help
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示 Help 命令的值。"
  remarks: "此命令指示打开帮助对话框 （窗口） 的意图。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Help&quot;></a># # XAML 属性用法```   <object property=&quot;Help&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Help { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> F1       </td></tr><tr><td> UI 文本       </td><td> 帮助       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Help*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.New
  id: New
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: New
  nameWithType: ApplicationCommands.New
  fullName: System.Windows.Input.ApplicationCommands.New
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示 New 命令的值。"
  remarks: "此命令指示打算创建新项。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_New&quot;></a># # XAML 属性用法```   <object property=&quot;New&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand New { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + N       </td></tr><tr><td> UI 文本       </td><td> “新建”       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.New*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.NotACommand
  id: NotACommand
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: NotACommand
  nameWithType: ApplicationCommands.NotACommand
  fullName: System.Windows.Input.ApplicationCommands.NotACommand
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "表示命令始终被忽略。"
  remarks: "此命令将始终忽略，并且不处理导致它的输入的事件。  这使您能够关闭内置于现有控件的输入绑定。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_NotACommand&quot;></a># # XAML 属性用法```   <object property=&quot;NotACommand&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand NotACommand { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。"
  overload: System.Windows.Input.ApplicationCommands.NotACommand*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Open
  id: Open
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Open
  nameWithType: ApplicationCommands.Open
  fullName: System.Windows.Input.ApplicationCommands.Open
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示打开命令的值。"
  remarks: "此命令指示打开某项 （通常是一个文件） 的意图。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Open&quot;></a># # XAML 属性用法```   <object property=&quot;Open&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Open { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + O       </td></tr><tr><td> UI 文本       </td><td> 打开       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Paste
  id: Paste
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Paste
  nameWithType: ApplicationCommands.Paste
  fullName: System.Windows.Input.ApplicationCommands.Paste
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示粘贴命令的值。"
  remarks: "此命令指示意图粘贴到剪贴板的所选内容。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Paste&quot;></a># # XAML 属性用法```   <object property=&quot;Paste&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Paste { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + V Shift + Insert       </td></tr><tr><td> UI 文本       </td><td> 粘贴       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Paste*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Print
  id: Print
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Print
  nameWithType: ApplicationCommands.Print
  fullName: System.Windows.Input.ApplicationCommands.Print
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示打印命令的值。"
  remarks: "此命令指示意图打印当前项。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Print&quot;></a># # XAML 属性用法```   <object property=&quot;Print&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Print { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + P       </td></tr><tr><td> UI 文本       </td><td> 打印       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Print*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.PrintPreview
  id: PrintPreview
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: PrintPreview
  nameWithType: ApplicationCommands.PrintPreview
  fullName: System.Windows.Input.ApplicationCommands.PrintPreview
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示打印预览命令的值。"
  remarks: "此命令指示打开打印预览对话框的意图。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_PrintPreview&quot;></a># # XAML 属性用法```   <object property=&quot;PrintPreview&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand PrintPreview { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + F2       </td></tr><tr><td> UI 文本       </td><td> 打印预览       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.PrintPreview*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Properties
  id: Properties
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationCommands.Properties
  fullName: System.Windows.Input.ApplicationCommands.Properties
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示属性命令的值。"
  remarks: "此命令指示打开属性对话框的意图。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Properties&quot;></a># # XAML 属性用法```   <object property=&quot;Properties&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Properties { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> F4       </td></tr><tr><td> UI 文本       </td><td> 属性       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Redo
  id: Redo
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Redo
  nameWithType: ApplicationCommands.Redo
  fullName: System.Windows.Input.ApplicationCommands.Redo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示重做命令的值。"
  remarks: "此命令指示打算重做上一操作。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Redo&quot;></a># # XAML 属性用法```   <object property=&quot;Redo&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Redo { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + Y       </td></tr><tr><td> UI 文本       </td><td> 重做       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Redo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Replace
  id: Replace
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Replace
  nameWithType: ApplicationCommands.Replace
  fullName: System.Windows.Input.ApplicationCommands.Replace
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示替换命令的值。"
  remarks: "此命令指示打开 [替换] 对话框意图。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Replace&quot;></a># # XAML 属性用法```   <object property=&quot;Replace&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Replace { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + H       </td></tr><tr><td> UI 文本       </td><td> 替换       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Save
  id: Save
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Save
  nameWithType: ApplicationCommands.Save
  fullName: System.Windows.Input.ApplicationCommands.Save
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示保存命令的值。"
  remarks: "此命令指示意图保存当前项。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Save&quot;></a># # XAML 属性用法```   <object property=&quot;Save&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Save { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + S       </td></tr><tr><td> UI 文本       </td><td> 保存       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.SaveAs
  id: SaveAs
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: SaveAs
  nameWithType: ApplicationCommands.SaveAs
  fullName: System.Windows.Input.ApplicationCommands.SaveAs
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示另存为命令的值。"
  remarks: "此命令指示意图打开另存为对话框。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_SaveAs&quot;></a># # XAML 属性用法```   <object property=&quot;SaveAs&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand SaveAs { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> 未定义笔势。       </td></tr><tr><td> UI 文本       </td><td> 另存为       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.SaveAs*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.SelectAll
  id: SelectAll
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: SelectAll
  nameWithType: ApplicationCommands.SelectAll
  fullName: System.Windows.Input.ApplicationCommands.SelectAll
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示全选命令的值。"
  remarks: "此命令指示意图选择所有项。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_SelectAll&quot;></a># # XAML 属性用法```   <object property=&quot;SelectAll&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand SelectAll { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl + A       </td></tr><tr><td> UI 文本       </td><td> 全选       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.SelectAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Stop
  id: Stop
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Stop
  nameWithType: ApplicationCommands.Stop
  fullName: System.Windows.Input.ApplicationCommands.Stop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示停止命令的值。"
  remarks: "此命令指示打算停止处理。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Stop&quot;></a># # XAML 属性用法```   <object property=&quot;Stop&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Stop { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Esc       </td></tr><tr><td> UI 文本       </td><td> 停止       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Undo
  id: Undo
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Undo
  nameWithType: ApplicationCommands.Undo
  fullName: System.Windows.Input.ApplicationCommands.Undo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "获取表示撤销命令的值。"
  remarks: "此命令指示意图撤消上次操作。       并不一定对任何给定的对象; 该命令的实现在许多情况下该命令的实现是应用程序编写器的责任。      <a name=&quot;xamlAttributeUsage_Undo&quot;></a># # XAML 属性用法```   <object property=&quot;Undo&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Undo { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "该命令。       <table><thead><tr><th> 默认值       </th><th></th></tr></thead><tbody><tr><td> 键笔势       </td><td> Ctrl Z       </td></tr><tr><td> UI 文本       </td><td> 撤消       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Undo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.ApplicationCommands.CancelPrint
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: CancelPrint
  nameWithType: ApplicationCommands.CancelPrint
  fullName: System.Windows.Input.ApplicationCommands.CancelPrint
- uid: System.Windows.Input.RoutedUICommand
  parent: System.Windows.Input
  isExternal: false
  name: RoutedUICommand
  nameWithType: RoutedUICommand
  fullName: System.Windows.Input.RoutedUICommand
- uid: System.Windows.Input.ApplicationCommands.Close
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Close
  nameWithType: ApplicationCommands.Close
  fullName: System.Windows.Input.ApplicationCommands.Close
- uid: System.Windows.Input.ApplicationCommands.ContextMenu
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: ContextMenu
  nameWithType: ApplicationCommands.ContextMenu
  fullName: System.Windows.Input.ApplicationCommands.ContextMenu
- uid: System.Windows.Input.ApplicationCommands.Copy
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Copy
  nameWithType: ApplicationCommands.Copy
  fullName: System.Windows.Input.ApplicationCommands.Copy
- uid: System.Windows.Input.ApplicationCommands.CorrectionList
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: CorrectionList
  nameWithType: ApplicationCommands.CorrectionList
  fullName: System.Windows.Input.ApplicationCommands.CorrectionList
- uid: System.Windows.Input.ApplicationCommands.Cut
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Cut
  nameWithType: ApplicationCommands.Cut
  fullName: System.Windows.Input.ApplicationCommands.Cut
- uid: System.Windows.Input.ApplicationCommands.Delete
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Delete
  nameWithType: ApplicationCommands.Delete
  fullName: System.Windows.Input.ApplicationCommands.Delete
- uid: System.Windows.Input.ApplicationCommands.Find
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Find
  nameWithType: ApplicationCommands.Find
  fullName: System.Windows.Input.ApplicationCommands.Find
- uid: System.Windows.Input.ApplicationCommands.Help
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Help
  nameWithType: ApplicationCommands.Help
  fullName: System.Windows.Input.ApplicationCommands.Help
- uid: System.Windows.Input.ApplicationCommands.New
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: New
  nameWithType: ApplicationCommands.New
  fullName: System.Windows.Input.ApplicationCommands.New
- uid: System.Windows.Input.ApplicationCommands.NotACommand
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: NotACommand
  nameWithType: ApplicationCommands.NotACommand
  fullName: System.Windows.Input.ApplicationCommands.NotACommand
- uid: System.Windows.Input.ApplicationCommands.Open
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Open
  nameWithType: ApplicationCommands.Open
  fullName: System.Windows.Input.ApplicationCommands.Open
- uid: System.Windows.Input.ApplicationCommands.Paste
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Paste
  nameWithType: ApplicationCommands.Paste
  fullName: System.Windows.Input.ApplicationCommands.Paste
- uid: System.Windows.Input.ApplicationCommands.Print
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Print
  nameWithType: ApplicationCommands.Print
  fullName: System.Windows.Input.ApplicationCommands.Print
- uid: System.Windows.Input.ApplicationCommands.PrintPreview
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: PrintPreview
  nameWithType: ApplicationCommands.PrintPreview
  fullName: System.Windows.Input.ApplicationCommands.PrintPreview
- uid: System.Windows.Input.ApplicationCommands.Properties
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Properties
  nameWithType: ApplicationCommands.Properties
  fullName: System.Windows.Input.ApplicationCommands.Properties
- uid: System.Windows.Input.ApplicationCommands.Redo
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Redo
  nameWithType: ApplicationCommands.Redo
  fullName: System.Windows.Input.ApplicationCommands.Redo
- uid: System.Windows.Input.ApplicationCommands.Replace
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Replace
  nameWithType: ApplicationCommands.Replace
  fullName: System.Windows.Input.ApplicationCommands.Replace
- uid: System.Windows.Input.ApplicationCommands.Save
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Save
  nameWithType: ApplicationCommands.Save
  fullName: System.Windows.Input.ApplicationCommands.Save
- uid: System.Windows.Input.ApplicationCommands.SaveAs
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: SaveAs
  nameWithType: ApplicationCommands.SaveAs
  fullName: System.Windows.Input.ApplicationCommands.SaveAs
- uid: System.Windows.Input.ApplicationCommands.SelectAll
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: SelectAll
  nameWithType: ApplicationCommands.SelectAll
  fullName: System.Windows.Input.ApplicationCommands.SelectAll
- uid: System.Windows.Input.ApplicationCommands.Stop
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Stop
  nameWithType: ApplicationCommands.Stop
  fullName: System.Windows.Input.ApplicationCommands.Stop
- uid: System.Windows.Input.ApplicationCommands.Undo
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Undo
  nameWithType: ApplicationCommands.Undo
  fullName: System.Windows.Input.ApplicationCommands.Undo
- uid: System.Windows.Input.ApplicationCommands.CancelPrint*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: CancelPrint
  nameWithType: ApplicationCommands.CancelPrint
- uid: System.Windows.Input.ApplicationCommands.Close*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Close
  nameWithType: ApplicationCommands.Close
- uid: System.Windows.Input.ApplicationCommands.ContextMenu*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: ContextMenu
  nameWithType: ApplicationCommands.ContextMenu
- uid: System.Windows.Input.ApplicationCommands.Copy*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Copy
  nameWithType: ApplicationCommands.Copy
- uid: System.Windows.Input.ApplicationCommands.CorrectionList*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: CorrectionList
  nameWithType: ApplicationCommands.CorrectionList
- uid: System.Windows.Input.ApplicationCommands.Cut*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Cut
  nameWithType: ApplicationCommands.Cut
- uid: System.Windows.Input.ApplicationCommands.Delete*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Delete
  nameWithType: ApplicationCommands.Delete
- uid: System.Windows.Input.ApplicationCommands.Find*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Find
  nameWithType: ApplicationCommands.Find
- uid: System.Windows.Input.ApplicationCommands.Help*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Help
  nameWithType: ApplicationCommands.Help
- uid: System.Windows.Input.ApplicationCommands.New*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: New
  nameWithType: ApplicationCommands.New
- uid: System.Windows.Input.ApplicationCommands.NotACommand*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: NotACommand
  nameWithType: ApplicationCommands.NotACommand
- uid: System.Windows.Input.ApplicationCommands.Open*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Open
  nameWithType: ApplicationCommands.Open
- uid: System.Windows.Input.ApplicationCommands.Paste*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Paste
  nameWithType: ApplicationCommands.Paste
- uid: System.Windows.Input.ApplicationCommands.Print*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Print
  nameWithType: ApplicationCommands.Print
- uid: System.Windows.Input.ApplicationCommands.PrintPreview*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: PrintPreview
  nameWithType: ApplicationCommands.PrintPreview
- uid: System.Windows.Input.ApplicationCommands.Properties*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Properties
  nameWithType: ApplicationCommands.Properties
- uid: System.Windows.Input.ApplicationCommands.Redo*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Redo
  nameWithType: ApplicationCommands.Redo
- uid: System.Windows.Input.ApplicationCommands.Replace*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Replace
  nameWithType: ApplicationCommands.Replace
- uid: System.Windows.Input.ApplicationCommands.Save*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Save
  nameWithType: ApplicationCommands.Save
- uid: System.Windows.Input.ApplicationCommands.SaveAs*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: SaveAs
  nameWithType: ApplicationCommands.SaveAs
- uid: System.Windows.Input.ApplicationCommands.SelectAll*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: SelectAll
  nameWithType: ApplicationCommands.SelectAll
- uid: System.Windows.Input.ApplicationCommands.Stop*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Stop
  nameWithType: ApplicationCommands.Stop
- uid: System.Windows.Input.ApplicationCommands.Undo*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Undo
  nameWithType: ApplicationCommands.Undo
