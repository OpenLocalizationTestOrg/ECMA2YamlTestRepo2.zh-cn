### YamlMime:ManagedReference
items:
- uid: System.Xml.XPath.XPathItem
  id: XPathItem
  children:
  - System.Xml.XPath.XPathItem.#ctor
  - System.Xml.XPath.XPathItem.IsNode
  - System.Xml.XPath.XPathItem.TypedValue
  - System.Xml.XPath.XPathItem.Value
  - System.Xml.XPath.XPathItem.ValueAs(System.Type)
  - System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.XPathItem.ValueAsBoolean
  - System.Xml.XPath.XPathItem.ValueAsDateTime
  - System.Xml.XPath.XPathItem.ValueAsDouble
  - System.Xml.XPath.XPathItem.ValueAsInt
  - System.Xml.XPath.XPathItem.ValueAsLong
  - System.Xml.XPath.XPathItem.ValueType
  - System.Xml.XPath.XPathItem.XmlType
  langs:
  - csharp
  name: XPathItem
  nameWithType: XPathItem
  fullName: System.Xml.XPath.XPathItem
  type: Class
  summary: "表示在 XQuery 1.0 和 XPath 2.0 数据模型中的项。"
  remarks: "项是节点或一个原子值。"
  syntax:
    content: public abstract class XPathItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.#ctor
  id: '#ctor'
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: XPathItem()
  nameWithType: XPathItem.XPathItem()
  fullName: System.Xml.XPath.XPathItem.XPathItem()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "初始化的新实例<xref href=&quot;System.Xml.XPath.XPathItem&quot;></xref>类。"
  remarks: "派生的类构造函数来初始化此类型中的状态将调用此构造函数。"
  syntax:
    content: protected XPathItem ();
    parameters: []
  overload: System.Xml.XPath.XPathItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.IsNode
  id: IsNode
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: IsNode
  nameWithType: XPathItem.IsNode
  fullName: System.Xml.XPath.XPathItem.IsNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取一个值，该值指示该项是否表示一个 XPath 节点或一个原子值。"
  syntax:
    content: public abstract bool IsNode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该项表示一个 XPath 节点;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果该项表示一个原子值。"
  overload: System.Xml.XPath.XPathItem.IsNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.TypedValue
  id: TypedValue
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: TypedValue
  nameWithType: XPathItem.TypedValue
  fullName: System.Xml.XPath.XPathItem.TypedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，作为最合适的装箱对象获取的当前项[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]根据其架构类型的类型。"
  remarks: "如果项的值相对于其指定的架构类型无效，TypedValue 属性的值的值等效<xref:System.Xml.XPath.XPathItem.Value%2A>属性。</xref:System.Xml.XPath.XPathItem.Value%2A>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public abstract object TypedValue { get; }
    return:
      type: System.Object
      description: "作为最合适的装箱对象的当前项[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]类型。"
  overload: System.Xml.XPath.XPathItem.TypedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.Value
  id: Value
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: Value
  nameWithType: XPathItem.Value
  fullName: System.Xml.XPath.XPathItem.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>项的值。"
  syntax:
    content: public abstract string Value { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>项的值。"
  overload: System.Xml.XPath.XPathItem.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.ValueAs(System.Type)
  id: ValueAs(System.Type)
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: ValueAs(Type)
  nameWithType: XPathItem.ValueAs(Type)
  fullName: System.Xml.XPath.XPathItem.ValueAs(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "返回指定的类型的项的值。"
  remarks: "当在派生类中重写，ValueAs 方法尝试将项的值转换[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]指定类型。"
  syntax:
    content: public virtual object ValueAs (Type returnType);
    parameters:
    - id: returnType
      type: System.Type
      description: "要返回的项值的类型。"
    return:
      type: System.Object
      description: "请求的类型作为项的值。"
  overload: System.Xml.XPath.XPathItem.ValueAs*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "项的值不在目标类型的正确格式。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换无效。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XPathItem.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathItem.ValueAs(Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写时返回项的值为使用指定的类型<xref:System.Xml.IXmlNamespaceResolver>对象指定用来解析命名空间前缀。</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "当在派生类中重写，ValueAs 方法尝试将项的值转换[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]指定类型。       <xref:System.Xml.IXmlNamespaceResolver>对象用于解析与类型转换有关的命名空间前缀。</xref:System.Xml.IXmlNamespaceResolver> 例如，转换时`xs:QName`到`xs:string`。       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public abstract object ValueAs (Type returnType, System.Xml.IXmlNamespaceResolver nsResolver);
    parameters:
    - id: returnType
      type: System.Type
      description: "要返回的项的值的类型。"
    - id: nsResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>对象用于解析命名空间前缀。</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Object
      description: "请求的类型作为项的值。"
  overload: System.Xml.XPath.XPathItem.ValueAs*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "项的值不在目标类型的正确格式。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换无效。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.ValueAsBoolean
  id: ValueAsBoolean
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: ValueAsBoolean
  nameWithType: XPathItem.ValueAsBoolean
  fullName: System.Xml.XPath.XPathItem.ValueAsBoolean
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取作为一种<xref:System.Boolean>。</xref:System.Boolean>项的值"
  remarks: "<xref:System.Xml.XPath.XPathItem.ValueAsDateTime%2A>属性尝试将项的值转换[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]<xref:System.Boolean>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.Boolean> </xref:System.Xml.XPath.XPathItem.ValueAsDateTime%2A>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public abstract bool ValueAsBoolean { get; }
    return:
      type: System.Boolean
      description: "作为一种<xref:System.Boolean>。</xref:System.Boolean>的项的值"
  overload: System.Xml.XPath.XPathItem.ValueAsBoolean*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "项的值不正确的格式为<xref:System.Boolean>类型。</xref:System.Boolean>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.Boolean>无效。</xref:System.Boolean>"
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.ValueAsDateTime
  id: ValueAsDateTime
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: ValueAsDateTime
  nameWithType: XPathItem.ValueAsDateTime
  fullName: System.Xml.XPath.XPathItem.ValueAsDateTime
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取作为一种<xref:System.DateTime>。</xref:System.DateTime>项的值"
  remarks: "ValueAsDateTime 属性尝试将项的值转换[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]<xref:System.DateTime>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.DateTime>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public abstract DateTime ValueAsDateTime { get; }
    return:
      type: System.DateTime
      description: "作为一种<xref:System.DateTime>。</xref:System.DateTime>的项的值"
  overload: System.Xml.XPath.XPathItem.ValueAsDateTime*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "项的值不正确的格式为<xref:System.DateTime>类型。</xref:System.DateTime>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.DateTime>无效。</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.ValueAsDouble
  id: ValueAsDouble
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: ValueAsDouble
  nameWithType: XPathItem.ValueAsDouble
  fullName: System.Xml.XPath.XPathItem.ValueAsDouble
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取作为一种<xref:System.Double>。</xref:System.Double>项的值"
  remarks: "ValueAsDouble 属性尝试将项的值转换[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]<xref:System.Double>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.Double>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public abstract double ValueAsDouble { get; }
    return:
      type: System.Double
      description: "作为一种<xref:System.Double>。</xref:System.Double>的项的值"
  overload: System.Xml.XPath.XPathItem.ValueAsDouble*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "项的值不正确的格式为<xref:System.Double>类型。</xref:System.Double>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.Double>无效。</xref:System.Double>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.ValueAsInt
  id: ValueAsInt
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: ValueAsInt
  nameWithType: XPathItem.ValueAsInt
  fullName: System.Xml.XPath.XPathItem.ValueAsInt
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取作为<xref:System.Int32>.</xref:System.Int32>项的值"
  remarks: "ValueAsInt 属性尝试将项的值转换[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]<xref:System.Int32>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.Int32>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public abstract int ValueAsInt { get; }
    return:
      type: System.Int32
      description: "为<xref:System.Int32>。</xref:System.Int32>的项的值"
  overload: System.Xml.XPath.XPathItem.ValueAsInt*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "项的值不正确的格式为<xref:System.Int32>类型。</xref:System.Int32>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.Int32>无效。</xref:System.Int32>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.ValueAsLong
  id: ValueAsLong
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: ValueAsLong
  nameWithType: XPathItem.ValueAsLong
  fullName: System.Xml.XPath.XPathItem.ValueAsLong
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取作为<xref:System.Int64>.</xref:System.Int64>项的值"
  remarks: "ValueAsLong 属性尝试将项的值转换[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]<xref:System.Int64>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.Int64>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public abstract long ValueAsLong { get; }
    return:
      type: System.Int64
      description: "为<xref:System.Int64>。</xref:System.Int64>的项的值"
  overload: System.Xml.XPath.XPathItem.ValueAsLong*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "项的值不正确的格式为<xref:System.Int64>类型。</xref:System.Int64>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.Int64>无效。</xref:System.Int64>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.ValueType
  id: ValueType
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: ValueType
  nameWithType: XPathItem.ValueType
  fullName: System.Xml.XPath.XPathItem.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]的项类型。"
  remarks: "当在派生类中重写，ValueType 属性获取[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]的项的类型化值的类型。       例如，类型的元素`xs:int`将具有的 ValueType<xref:System.Int32>默认情况下。</xref:System.Int32> 但是，ValueType 可能是任何一种可以映射到有效类型`xs:int`，如<xref:System.Int16>或<xref:System.Double>.</xref:System.Double> </xref:System.Int16>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public abstract Type ValueType { get; }
    return:
      type: System.Type
      description: "[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]的项类型。 默认值为<xref:System.String>。</xref:System.String>"
  overload: System.Xml.XPath.XPathItem.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathItem.XmlType
  id: XmlType
  parent: System.Xml.XPath.XPathItem
  langs:
  - csharp
  name: XmlType
  nameWithType: XPathItem.XmlType
  fullName: System.Xml.XPath.XPathItem.XmlType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "当在派生类中重写，获取<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref>项。"
  remarks: "当在派生类中重写，获取 xml 类型属性<xref:System.Xml.Schema.XmlSchemaType>项。</xref:System.Xml.Schema.XmlSchemaType> 例如，<xref:System.Xml.Schema.XmlSchemaSimpleType>或<xref:System.Xml.Schema.XmlSchemaComplexType>。</xref:System.Xml.Schema.XmlSchemaComplexType> </xref:System.Xml.Schema.XmlSchemaSimpleType>"
  syntax:
    content: public abstract System.Xml.Schema.XmlSchemaType XmlType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref>项。"
  overload: System.Xml.XPath.XPathItem.XmlType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Xml.XPath.XPathItem.#ctor
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: XPathItem()
  nameWithType: XPathItem.XPathItem()
  fullName: System.Xml.XPath.XPathItem.XPathItem()
- uid: System.Xml.XPath.XPathItem.IsNode
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: IsNode
  nameWithType: XPathItem.IsNode
  fullName: System.Xml.XPath.XPathItem.IsNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XPath.XPathItem.TypedValue
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: TypedValue
  nameWithType: XPathItem.TypedValue
  fullName: System.Xml.XPath.XPathItem.TypedValue
- uid: System.Xml.XPath.XPathItem.Value
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: Value
  nameWithType: XPathItem.Value
  fullName: System.Xml.XPath.XPathItem.Value
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XPath.XPathItem.ValueAs(System.Type)
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAs(Type)
  nameWithType: XPathItem.ValueAs(Type)
  fullName: System.Xml.XPath.XPathItem.ValueAs(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XPathItem.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathItem.ValueAs(Type,IXmlNamespaceResolver)
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.XPath.XPathItem.ValueAsBoolean
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XPathItem.ValueAsBoolean
  fullName: System.Xml.XPath.XPathItem.ValueAsBoolean
- uid: System.Xml.XPath.XPathItem.ValueAsDateTime
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XPathItem.ValueAsDateTime
  fullName: System.Xml.XPath.XPathItem.ValueAsDateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.XPath.XPathItem.ValueAsDouble
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsDouble
  nameWithType: XPathItem.ValueAsDouble
  fullName: System.Xml.XPath.XPathItem.ValueAsDouble
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Xml.XPath.XPathItem.ValueAsInt
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsInt
  nameWithType: XPathItem.ValueAsInt
  fullName: System.Xml.XPath.XPathItem.ValueAsInt
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XPath.XPathItem.ValueAsLong
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsLong
  nameWithType: XPathItem.ValueAsLong
  fullName: System.Xml.XPath.XPathItem.ValueAsLong
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Xml.XPath.XPathItem.ValueType
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueType
  nameWithType: XPathItem.ValueType
  fullName: System.Xml.XPath.XPathItem.ValueType
- uid: System.Xml.XPath.XPathItem.XmlType
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: XmlType
  nameWithType: XPathItem.XmlType
  fullName: System.Xml.XPath.XPathItem.XmlType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.XPath.XPathItem.#ctor*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: XPathItem
  nameWithType: XPathItem.XPathItem
- uid: System.Xml.XPath.XPathItem.IsNode*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: IsNode
  nameWithType: XPathItem.IsNode
- uid: System.Xml.XPath.XPathItem.TypedValue*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: TypedValue
  nameWithType: XPathItem.TypedValue
- uid: System.Xml.XPath.XPathItem.Value*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: Value
  nameWithType: XPathItem.Value
- uid: System.Xml.XPath.XPathItem.ValueAs*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAs
  nameWithType: XPathItem.ValueAs
- uid: System.Xml.XPath.XPathItem.ValueAsBoolean*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XPathItem.ValueAsBoolean
- uid: System.Xml.XPath.XPathItem.ValueAsDateTime*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XPathItem.ValueAsDateTime
- uid: System.Xml.XPath.XPathItem.ValueAsDouble*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsDouble
  nameWithType: XPathItem.ValueAsDouble
- uid: System.Xml.XPath.XPathItem.ValueAsInt*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsInt
  nameWithType: XPathItem.ValueAsInt
- uid: System.Xml.XPath.XPathItem.ValueAsLong*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueAsLong
  nameWithType: XPathItem.ValueAsLong
- uid: System.Xml.XPath.XPathItem.ValueType*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: ValueType
  nameWithType: XPathItem.ValueType
- uid: System.Xml.XPath.XPathItem.XmlType*
  parent: System.Xml.XPath.XPathItem
  isExternal: false
  name: XmlType
  nameWithType: XPathItem.XmlType
