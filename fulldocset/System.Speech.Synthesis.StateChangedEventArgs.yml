### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.StateChangedEventArgs
  id: StateChangedEventArgs
  children:
  - System.Speech.Synthesis.StateChangedEventArgs.PreviousState
  - System.Speech.Synthesis.StateChangedEventArgs.State
  langs:
  - csharp
  name: StateChangedEventArgs
  nameWithType: StateChangedEventArgs
  fullName: System.Speech.Synthesis.StateChangedEventArgs
  type: Class
  summary: "返回从数据<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer.StateChanged&quot;></xref>事件。"
  remarks: "何时创建的 StateChangedEventArgs 实例<xref:System.Speech.Synthesis.SpeechSynthesizer>对象引发<xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>事件。</xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> </xref:System.Speech.Synthesis.SpeechSynthesizer> 若要获取新的值和上一个<xref:System.Speech.Synthesis.SynthesizerState>，访问<xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A>和<xref:System.Speech.Synthesis.StateChangedEventArgs.PreviousState>事件的处理程序中的属性。</xref:System.Speech.Synthesis.StateChangedEventArgs.PreviousState> </xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> </xref:System.Speech.Synthesis.SynthesizerState>"
  example:
  - "The following example demonstrates the information that is available about the <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> event.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Subscribe to StateChanged event.  \n        synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  \n  \n        // Subscribe to the SpeakProgress event.  \n        synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  \n  \n        // Speak the prompt.  \n        synth.Speak(\"What is your favorite color?\");  \n  \n        // Pause the SpeechSynthesizer object.  \n        synth.Pause();  \n  \n        // Resume the SpeechSynthesizer object.  \n        synth.Resume();  \n      }  \n  \n      Console.WriteLine(\"\\nPress any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Write the state of the SpeechSynthesizer to the console.  \n    static void synth_StateChanged(object sender, StateChangedEventArgs e)  \n    {  \n      Console.WriteLine(\"State: {0}    Previous State: {1}\\n\", e.State, e.PreviousState);  \n    }  \n  \n    // Write the speak progress of the SpeechSynthesizer to the console.  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: 'public class StateChangedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.StateChangedEventArgs.PreviousState
  id: PreviousState
  parent: System.Speech.Synthesis.StateChangedEventArgs
  langs:
  - csharp
  name: PreviousState
  nameWithType: StateChangedEventArgs.PreviousState
  fullName: System.Speech.Synthesis.StateChangedEventArgs.PreviousState
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "获取的状态<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>之前<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer.StateChanged&quot;></xref>事件。"
  remarks: "PreviousState 属性表示的成员的合成状态<xref:System.Speech.Synthesis.SynthesizerState>枚举。</xref:System.Speech.Synthesis.SynthesizerState>"
  syntax:
    content: public System.Speech.Synthesis.SynthesizerState PreviousState { get; }
    return:
      type: System.Speech.Synthesis.SynthesizerState
      description: "之前的状态发生更改，则返回合成器的状态。"
  overload: System.Speech.Synthesis.StateChangedEventArgs.PreviousState*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.StateChangedEventArgs.State
  id: State
  parent: System.Speech.Synthesis.StateChangedEventArgs
  langs:
  - csharp
  name: State
  nameWithType: StateChangedEventArgs.State
  fullName: System.Speech.Synthesis.StateChangedEventArgs.State
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "获取的状态<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>之前<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer.StateChanged&quot;></xref>事件。"
  remarks: "State 属性表示的成员的合成状态<xref:System.Speech.Synthesis.SynthesizerState>枚举。</xref:System.Speech.Synthesis.SynthesizerState>"
  syntax:
    content: public System.Speech.Synthesis.SynthesizerState State { get; }
    return:
      type: System.Speech.Synthesis.SynthesizerState
      description: "合成后的状态发生更改的状态。"
  overload: System.Speech.Synthesis.StateChangedEventArgs.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Speech.Synthesis.StateChangedEventArgs.PreviousState
  parent: System.Speech.Synthesis.StateChangedEventArgs
  isExternal: false
  name: PreviousState
  nameWithType: StateChangedEventArgs.PreviousState
  fullName: System.Speech.Synthesis.StateChangedEventArgs.PreviousState
- uid: System.Speech.Synthesis.SynthesizerState
  parent: System.Speech.Synthesis
  isExternal: false
  name: SynthesizerState
  nameWithType: SynthesizerState
  fullName: System.Speech.Synthesis.SynthesizerState
- uid: System.Speech.Synthesis.StateChangedEventArgs.State
  parent: System.Speech.Synthesis.StateChangedEventArgs
  isExternal: false
  name: State
  nameWithType: StateChangedEventArgs.State
  fullName: System.Speech.Synthesis.StateChangedEventArgs.State
- uid: System.Speech.Synthesis.StateChangedEventArgs.PreviousState*
  parent: System.Speech.Synthesis.StateChangedEventArgs
  isExternal: false
  name: PreviousState
  nameWithType: StateChangedEventArgs.PreviousState
- uid: System.Speech.Synthesis.StateChangedEventArgs.State*
  parent: System.Speech.Synthesis.StateChangedEventArgs
  isExternal: false
  name: State
  nameWithType: StateChangedEventArgs.State
