### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.ComContractElement
  id: ComContractElement
  children:
  - System.ServiceModel.Configuration.ComContractElement.#ctor
  - System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)
  - System.ServiceModel.Configuration.ComContractElement.Contract
  - System.ServiceModel.Configuration.ComContractElement.ExposedMethods
  - System.ServiceModel.Configuration.ComContractElement.Name
  - System.ServiceModel.Configuration.ComContractElement.Namespace
  - System.ServiceModel.Configuration.ComContractElement.PersistableTypes
  - System.ServiceModel.Configuration.ComContractElement.Properties
  - System.ServiceModel.Configuration.ComContractElement.RequiresSession
  - System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes
  langs:
  - csharp
  name: ComContractElement
  nameWithType: ComContractElement
  fullName: System.ServiceModel.Configuration.ComContractElement
  type: Class
  summary: "指定 COM + 集成服务协定。 此类不能被继承。"
  remarks: "COM + 集成服务协定当前只限于&quot;http://tempuri.org&quot;命名空间，而协定名称从支持的 COM 接口派生。 但是，可以通过使用来指定替代服务协定`comContracts`配置文件中的部分。"
  example:
  - "You can use the following configuration to specify the namespace, contract name, and user defined types to be included. You can also specify other settings for a service contract  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n When the service is initialized, the specified namespaces and contract names are applied to the generated service descriptions."
  syntax:
    content: 'public sealed class ComContractElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: ComContractElement()
  nameWithType: ComContractElement.ComContractElement()
  fullName: System.ServiceModel.Configuration.ComContractElement.ComContractElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Configuration.ComContractElement&quot;></xref>类。"
  syntax:
    content: public ComContractElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.ComContractElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: ComContractElement(String)
  nameWithType: ComContractElement.ComContractElement(String)
  fullName: System.ServiceModel.Configuration.ComContractElement.ComContractElement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Configuration.ComContractElement&quot;></xref>类。"
  syntax:
    content: public ComContractElement (string contractType);
    parameters:
    - id: contractType
      type: System.String
      description: "一个字符串，包含的类型的协定。"
  overload: System.ServiceModel.Configuration.ComContractElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.Contract
  id: Contract
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: Contract
  nameWithType: ComContractElement.Contract
  fullName: System.ServiceModel.Configuration.ComContractElement.Contract
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取或设置协定类型。"
  syntax:
    content: public string Contract { get; set; }
    return:
      type: System.String
      description: "协定类型。"
  overload: System.ServiceModel.Configuration.ComContractElement.Contract*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.ExposedMethods
  id: ExposedMethods
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: ExposedMethods
  nameWithType: ComContractElement.ExposedMethods
  fullName: System.ServiceModel.Configuration.ComContractElement.ExposedMethods
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取在 COM + 组件上的接口作为 Web 服务公开时公开的 COM + 方法的集合。"
  remarks: "可以使用 COM + 集成配置工具 (ComSvcConfig.exe) 来添加 COM 接口，使其出现在生成的服务协定中的特定方法。       例如，你可以使用以下命令从三个命名的方法添加`IFinances`上的 COM 接口`ItemOrders.Financial`组件，生成的服务协定。      ```   ComSvcConfig.exe /i /application:OnlineStore /contract:ItemOrders.Financial,IFinances.{TransferFunds,AddFunds,RemoveFunds} /hosting:complus   ```运行 ComSvcConfig.exe 工具时，它会生成以下服务协定列出以前提到的方法作为`exposedMethod`元素。       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ]在服务初始化时，在运行时尝试通过反射和添加仅在列表中所包括的方法来生成服务协定`exposedMethod`元素。 对于每个接口方法中未包括的服务协定，都会产生一个跟踪。"
  syntax:
    content: public System.ServiceModel.Configuration.ComMethodElementCollection ExposedMethods { get; }
    return:
      type: System.ServiceModel.Configuration.ComMethodElementCollection
      description: "COM + 组件上的接口作为 Web 服务公开时公开的 COM + 方法的集合。"
  overload: System.ServiceModel.Configuration.ComContractElement.ExposedMethods*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.Name
  id: Name
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: Name
  nameWithType: ComContractElement.Name
  fullName: System.ServiceModel.Configuration.ComContractElement.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取或设置协定名称。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "协定名称。"
  overload: System.ServiceModel.Configuration.ComContractElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.Namespace
  id: Namespace
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: Namespace
  nameWithType: ComContractElement.Namespace
  fullName: System.ServiceModel.Configuration.ComContractElement.Namespace
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取或设置协定命名空间。"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "协定命名空间。"
  overload: System.ServiceModel.Configuration.ComContractElement.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.PersistableTypes
  id: PersistableTypes
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: PersistableTypes
  nameWithType: ComContractElement.PersistableTypes
  fullName: System.ServiceModel.Configuration.ComContractElement.PersistableTypes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取所有持久类型。"
  syntax:
    content: public System.ServiceModel.Configuration.ComPersistableTypeElementCollection PersistableTypes { get; }
    return:
      type: System.ServiceModel.Configuration.ComPersistableTypeElementCollection
      description: "持久类型。"
  overload: System.ServiceModel.Configuration.ComContractElement.PersistableTypes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: Properties
  nameWithType: ComContractElement.Properties
  fullName: System.ServiceModel.Configuration.ComContractElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "要添加。"
  overload: System.ServiceModel.Configuration.ComContractElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.RequiresSession
  id: RequiresSession
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: RequiresSession
  nameWithType: ComContractElement.RequiresSession
  fullName: System.ServiceModel.Configuration.ComContractElement.RequiresSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取或设置一个布尔值，指定协定是否只能在会话绑定上使用。"
  remarks: "初始化服务时，集成运行库可以确保此设置与要使用的绑定的类型一致。 如果一个生成异常的或多个协定绑定冲突。 如果此属性为`false`、 正在使用单向通道并且有任何 [out] 参数，也会生成异常。"
  syntax:
    content: public bool RequiresSession { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果仅在会话绑定; 上使用该协定否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Configuration.ComContractElement.RequiresSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes
  id: UserDefinedTypes
  parent: System.ServiceModel.Configuration.ComContractElement
  langs:
  - csharp
  name: UserDefinedTypes
  nameWithType: ComContractElement.UserDefinedTypes
  fullName: System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "获取集合中的用户定义类型 (UDT) 要包括在服务协定。 此类不能被继承。"
  remarks: "COM + 集成运行时通过检查类型库来创建服务。 当 COM + 组件包含传递 VARIANT 的方法时，系统无法确定要在运行时之前传递的实际类型。 因此，如果尝试以传递用户定义类型 (UDT) 在 VARIANT 内，它失败，因为它不是序列化的已知的类型。       若要避免此问题，你可以将 Udt 添加到配置文件，以便它们可以包含作为已知类型相应的服务协定。 为了做到这一点，你必须唯一地标识 UDT 和协定，即，原始 COM 接口，使用它。"
  example:
  - "The following example demonstrates adding two specific UDTs to the <`userDefinedTypes`> section of the configuration file for this purpose.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The attributes of the <`userDefinedType`> element are defined as follows:  \n  \n-   `typeName`: An optional attribute that provides the readable type name. This is not used by the runtime but helps a reader to distinguish the types.  \n  \n-   `typeLibID`: A GUID string that specifies the registered type library that defines the type.  \n  \n-   `typeLibVersion`: A string that specifies the type library version that defines the type.  \n  \n-   `typeDefID`: A GUID string that specifies the specific UDT type within the registered type library.  \n  \n When the service is initialized, the integration runtime looks up the specified types and adds them to the known types collection for the specified contracts."
  syntax:
    content: public System.ServiceModel.Configuration.ComUdtElementCollection UserDefinedTypes { get; }
    return:
      type: System.ServiceModel.Configuration.ComUdtElementCollection
      description: "集合的用户定义类型 (UDT)。"
  overload: System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Configuration.ComContractElement.#ctor
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: ComContractElement()
  nameWithType: ComContractElement.ComContractElement()
  fullName: System.ServiceModel.Configuration.ComContractElement.ComContractElement()
- uid: System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: ComContractElement(String)
  nameWithType: ComContractElement.ComContractElement(String)
  fullName: System.ServiceModel.Configuration.ComContractElement.ComContractElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.ComContractElement.Contract
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: Contract
  nameWithType: ComContractElement.Contract
  fullName: System.ServiceModel.Configuration.ComContractElement.Contract
- uid: System.ServiceModel.Configuration.ComContractElement.ExposedMethods
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: ExposedMethods
  nameWithType: ComContractElement.ExposedMethods
  fullName: System.ServiceModel.Configuration.ComContractElement.ExposedMethods
- uid: System.ServiceModel.Configuration.ComMethodElementCollection
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ComMethodElementCollection
  nameWithType: ComMethodElementCollection
  fullName: System.ServiceModel.Configuration.ComMethodElementCollection
- uid: System.ServiceModel.Configuration.ComContractElement.Name
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: Name
  nameWithType: ComContractElement.Name
  fullName: System.ServiceModel.Configuration.ComContractElement.Name
- uid: System.ServiceModel.Configuration.ComContractElement.Namespace
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: Namespace
  nameWithType: ComContractElement.Namespace
  fullName: System.ServiceModel.Configuration.ComContractElement.Namespace
- uid: System.ServiceModel.Configuration.ComContractElement.PersistableTypes
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: PersistableTypes
  nameWithType: ComContractElement.PersistableTypes
  fullName: System.ServiceModel.Configuration.ComContractElement.PersistableTypes
- uid: System.ServiceModel.Configuration.ComPersistableTypeElementCollection
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ComPersistableTypeElementCollection
  nameWithType: ComPersistableTypeElementCollection
  fullName: System.ServiceModel.Configuration.ComPersistableTypeElementCollection
- uid: System.ServiceModel.Configuration.ComContractElement.Properties
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: Properties
  nameWithType: ComContractElement.Properties
  fullName: System.ServiceModel.Configuration.ComContractElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.ComContractElement.RequiresSession
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: RequiresSession
  nameWithType: ComContractElement.RequiresSession
  fullName: System.ServiceModel.Configuration.ComContractElement.RequiresSession
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: UserDefinedTypes
  nameWithType: ComContractElement.UserDefinedTypes
  fullName: System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes
- uid: System.ServiceModel.Configuration.ComUdtElementCollection
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ComUdtElementCollection
  nameWithType: ComUdtElementCollection
  fullName: System.ServiceModel.Configuration.ComUdtElementCollection
- uid: System.ServiceModel.Configuration.ComContractElement.#ctor*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: ComContractElement
  nameWithType: ComContractElement.ComContractElement
- uid: System.ServiceModel.Configuration.ComContractElement.Contract*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: Contract
  nameWithType: ComContractElement.Contract
- uid: System.ServiceModel.Configuration.ComContractElement.ExposedMethods*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: ExposedMethods
  nameWithType: ComContractElement.ExposedMethods
- uid: System.ServiceModel.Configuration.ComContractElement.Name*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: Name
  nameWithType: ComContractElement.Name
- uid: System.ServiceModel.Configuration.ComContractElement.Namespace*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: Namespace
  nameWithType: ComContractElement.Namespace
- uid: System.ServiceModel.Configuration.ComContractElement.PersistableTypes*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: PersistableTypes
  nameWithType: ComContractElement.PersistableTypes
- uid: System.ServiceModel.Configuration.ComContractElement.Properties*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: Properties
  nameWithType: ComContractElement.Properties
- uid: System.ServiceModel.Configuration.ComContractElement.RequiresSession*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: RequiresSession
  nameWithType: ComContractElement.RequiresSession
- uid: System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes*
  parent: System.ServiceModel.Configuration.ComContractElement
  isExternal: false
  name: UserDefinedTypes
  nameWithType: ComContractElement.UserDefinedTypes
