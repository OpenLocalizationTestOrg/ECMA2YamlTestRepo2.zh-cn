### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  id: ConfigurationSet
  children:
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  langs:
  - csharp
  name: ConfigurationSet
  nameWithType: ConfigurationSet
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  type: Class
  summary: "ConfigurationSet 类表示为一个或多个 AD LDS 实例设置的配置。"
  syntax:
    content: public class ConfigurationSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  id: AdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取 AD LDS 的只读集合的配置中设置的实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection AdamInstances { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref>对象，其中包含<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;></xref>在配置中设置的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  id: ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取配置中设置的应用程序分区的只读集合。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection&quot;> </xref>对象，其中包含<xref href=&quot;System.DirectoryServices.ActiveDirectory.ApplicationPartition&quot;></xref>在配置中设置的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  id: Dispose
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: ConfigurationSet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "释放由该对象使用的所有托管和非托管资源。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ConfigurationSet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "释放由该对象使用的非托管的资源，还可以释放托管的资源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A<xref:System.Boolean>值，该值确定是否应释放托管的资源。</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应释放托管的资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果仅应释放非托管的资源。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  id: FindAdamInstance
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance()
  nameWithType: ConfigurationSet.FindAdamInstance()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在此配置集中查找某个 AD LDS 实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref>表示找到的 AD LDS 实例的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "AD LDS 实例找不到此配置集中。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  id: FindAdamInstance(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance(String)
  nameWithType: ConfigurationSet.FindAdamInstance(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在此配置集中针对给定的分区名称中查找的 AD LDS 实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance (string partitionName);
    parameters:
    - id: partitionName
      type: System.String
      description: "A <xref:System.String>，它指定要在其中进行搜索的分区。</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref>表示找到的 AD LDS 实例的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partitionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定的 AD LDS 实例<code> partitionName </code>找不到此配置集中。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  id: FindAdamInstance(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance(String,String)
  nameWithType: ConfigurationSet.FindAdamInstance(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在此配置集中针对给定的分区名称和站点名称中查找的 AD LDS 实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance (string partitionName, string siteName);
    parameters:
    - id: partitionName
      type: System.String
      description: "A <xref:System.String>，它指定要在其中进行搜索的分区。</xref:System.String>"
    - id: siteName
      type: System.String
      description: "A <xref:System.String>，它指定在其中进行搜索的站点。</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref>表示找到的 AD LDS 实例的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定的 AD LDS 实例<code> partitionName </code>和<code> siteName </code>在此配置集中找不到参数。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  id: FindAllAdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances()
  nameWithType: ConfigurationSet.FindAllAdamInstances()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "返回在此配置集中所有 AD LDS 实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref>对象，其中包含<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;></xref>找到的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  id: FindAllAdamInstances(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances(String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "在此配置集中针对给定的分区名称返回所有 AD LDS 实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances (string partitionName);
    parameters:
    - id: partitionName
      type: System.String
      description: "A <xref:System.String>，它指定要在其中进行搜索的分区。</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref>对象，其中包含<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;></xref>找到的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partitionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  id: FindAllAdamInstances(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances(String,String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "返回此配置集中针对给定的分区名称和站点名称中的所有 AD LDS 实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances (string partitionName, string siteName);
    parameters:
    - id: partitionName
      type: System.String
      description: "A <xref:System.String>，它指定要在其中进行搜索的分区。</xref:System.String>"
    - id: siteName
      type: System.String
      description: "A <xref:System.String>，它指定要在其中进行搜索的分区。</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref>对象，其中包含<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;></xref>找到的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetConfigurationSet(DirectoryContext)
  nameWithType: ConfigurationSet.GetConfigurationSet(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "返回<xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;></xref>指定的目录上下文的对象。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ConfigurationSet GetConfigurationSet (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>包含目标和凭据以用来检索对象的对象。 此上下文的目标可以是 AD LDS 实例或在中可以识别配置集的当前林的 serviceConnectionPoint 对象中指定的关键字。"
    return:
      type: System.DirectoryServices.ActiveDirectory.ConfigurationSet
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref>对象，表示的配置设置为指定的上下文。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "中指定的目标<code> context </code>找不到参数。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "对基础目录服务的调用导致了错误。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> context </code>参数无效。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: ConfigurationSet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>配置分区的对象。"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>配置分区的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  id: GetSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetSecurityLevel()
  nameWithType: ConfigurationSet.GetSecurityLevel()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "返回 AD LDS 复制安全级别。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel GetSecurityLevel ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;> </xref>值，该值指示当前的 AD LDS 复制身份验证模式。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  id: Name
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationSet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取的名称<xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;></xref>对象。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含名称的<xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;></xref>对象。</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  id: NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取域命名主机角色的当前所有者的 AD LDS 实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance NamingRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref>当前表示 AD LDS 实例的对象保存对包括域命名主机角色。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  id: Schema
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Schema
  nameWithType: ConfigurationSet.Schema
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取配置集的架构对象。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref>对象，表示此配置集中的架构。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  id: SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取架构操作主机角色的当前所有者的 AD LDS 实例。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance SchemaRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref>表示当前拥有架构操作主机角色的 AD LDS + 实例的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  id: SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: SetSecurityLevel(ReplicationSecurityLevel)
  nameWithType: ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "设置 AD LDS 复制安全级别。"
  syntax:
    content: public void SetSecurityLevel (System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel securityLevel);
    parameters:
    - id: securityLevel
      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;> </xref>到其设置复制身份验证模式的 AD LDS 的值。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>securityLevel</code>不是有效<xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;></xref>值。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  id: Sites
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Sites
  nameWithType: ConfigurationSet.Sites
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "获取配置中设置的站点的只读集合。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection&quot;> </xref>对象，其中包含<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySite&quot;></xref>在配置中设置的对象。"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此对象。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  id: ToString
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: ToString()
  nameWithType: ConfigurationSet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "返回的名称<xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;></xref>对象。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>包含名称的当前<xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;></xref>对象。</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
- uid: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamInstanceCollection
  nameWithType: AdamInstanceCollection
  fullName: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ApplicationPartitionCollection
  nameWithType: ApplicationPartitionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose()
  nameWithType: ConfigurationSet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ConfigurationSet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance()
  nameWithType: ConfigurationSet.FindAdamInstance()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance()
- uid: System.DirectoryServices.ActiveDirectory.AdamInstance
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamInstance
  nameWithType: AdamInstance
  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance(String)
  nameWithType: ConfigurationSet.FindAdamInstance(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance(String,String)
  nameWithType: ConfigurationSet.FindAdamInstance(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String,String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances()
  nameWithType: ConfigurationSet.FindAllAdamInstances()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances(String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances(String,String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String,String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetConfigurationSet(DirectoryContext)
  nameWithType: ConfigurationSet.GetConfigurationSet(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ConfigurationSet
  nameWithType: ConfigurationSet
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: ConfigurationSet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetSecurityLevel()
  nameWithType: ConfigurationSet.GetSecurityLevel()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationSecurityLevel
  nameWithType: ReplicationSecurityLevel
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Name
  nameWithType: ConfigurationSet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Schema
  nameWithType: ConfigurationSet.Schema
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SetSecurityLevel(ReplicationSecurityLevel)
  nameWithType: ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Sites
  nameWithType: ConfigurationSet.Sites
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlySiteCollection
  nameWithType: ReadOnlySiteCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ToString()
  nameWithType: ConfigurationSet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose
  nameWithType: ConfigurationSet.Dispose
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance
  nameWithType: ConfigurationSet.FindAdamInstance
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances
  nameWithType: ConfigurationSet.FindAllAdamInstances
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetConfigurationSet
  nameWithType: ConfigurationSet.GetConfigurationSet
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: ConfigurationSet.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetSecurityLevel
  nameWithType: ConfigurationSet.GetSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Name
  nameWithType: ConfigurationSet.Name
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Schema
  nameWithType: ConfigurationSet.Schema
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SetSecurityLevel
  nameWithType: ConfigurationSet.SetSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Sites
  nameWithType: ConfigurationSet.Sites
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ToString
  nameWithType: ConfigurationSet.ToString
