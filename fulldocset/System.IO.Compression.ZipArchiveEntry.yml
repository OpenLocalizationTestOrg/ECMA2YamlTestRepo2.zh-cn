### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipArchiveEntry
  id: ZipArchiveEntry
  children:
  - System.IO.Compression.ZipArchiveEntry.Archive
  - System.IO.Compression.ZipArchiveEntry.CompressedLength
  - System.IO.Compression.ZipArchiveEntry.Delete
  - System.IO.Compression.ZipArchiveEntry.FullName
  - System.IO.Compression.ZipArchiveEntry.LastWriteTime
  - System.IO.Compression.ZipArchiveEntry.Length
  - System.IO.Compression.ZipArchiveEntry.Name
  - System.IO.Compression.ZipArchiveEntry.Open
  - System.IO.Compression.ZipArchiveEntry.ToString
  langs:
  - csharp
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
  type: Class
  summary: "表示 zip 存档中的压缩的文件。"
  remarks: "Zip 存档包含每个压缩文件的条目。 ZipArchiveEntry 类使你可以检查的项的属性和打开或删除的条目。 当你打开一个条目时，你可以通过写入该压缩文件的流来修改压缩的文件。       用于操作的 zip 存档和其文件条目的方法将分布在三个类︰ <xref:System.IO.Compression.ZipFile>，<xref:System.IO.Compression.ZipArchive>和 ZipArchiveEntry。</xref:System.IO.Compression.ZipArchive> </xref:System.IO.Compression.ZipFile>      |到...|...使用 |  |---------|----------|  |从目录中创建的 zip 存档 |<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  |提取到目录的 zip 存档的内容 |<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  |将新文件添加到现有的 zip 存档 |<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  |检索 zip 存档中的文件 |<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  |检索 zip 存档中的文件的所有 |<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  |若要打开 zip 存档中包含单个文件的流 |<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  |从 zip 存档中删除文件 |<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|      如果引用`System.IO.Compression.FileSystem`程序集在项目中，你可以访问 ZipArchiveEntry 类的两个扩展方法</xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName></xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName></xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName> 这些方法都是<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>和<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>，并且它们使你可以解压缩到文件的项的内容。</xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> </xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> `System.IO.Compression.FileSystem`程序集不位于[!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]。 在[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]应用，你可以通过使用解压缩的存档内容<xref:System.IO.Compression.DeflateStream>或<xref:System.IO.Compression.GZipStream>，或者可以使用[!INCLUDE[wrt](~/add/includes/wrt-md.md)]类型[压缩程序](http://go.microsoft.com/fwlink/p/?LinkId=246357)和[解压缩程序](http://go.microsoft.com/fwlink/?LinkId=246358)来压缩和解压缩文件。</xref:System.IO.Compression.GZipStream> </xref:System.IO.Compression.DeflateStream>"
  example:
  - "The first example shows how to create a new entry in a zip archive and write to it.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_1.vb)]  \n  \n The second example shows how to use the <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> extension method. You must reference the `System.IO.Compression.FileSystem` assembly in your project for the code to execute.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._4_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_2.vb)]"
  syntax:
    content: public class ZipArchiveEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  id: Archive
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "获取该项所属的 zip 存档。"
  syntax:
    content: public System.IO.Compression.ZipArchive Archive { get; }
    return:
      type: System.IO.Compression.ZipArchive
      description: "该项所属的 zip 存档或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果该条目已被删除。"
  overload: System.IO.Compression.ZipArchiveEntry.Archive*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  id: CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "获取 zip 存档中项的压缩的大小。"
  remarks: "无法检索此属性，当模式设置为<xref:System.IO.Compression.ZipArchiveMode>，或将模式设置为<xref:System.IO.Compression.ZipArchiveMode>和打开条目。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to retrieve entries in a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and CompressedLength properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._2_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._2_1.vb)]"
  syntax:
    content: public long CompressedLength { get; }
    return:
      type: System.Int64
      description: "在 zip 存档中项的压缩的大小。"
  overload: System.IO.Compression.ZipArchiveEntry.CompressedLength*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "属性的值不可用，该条目已被修改。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  id: Delete
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Delete()
  nameWithType: ZipArchiveEntry.Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "从 zip 存档中删除条目。"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.IO.Compression.ZipArchiveEntry.Delete*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "该条目已打开以进行读取或写入。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "此项的 zip 存档已打开在模式下以外<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此项的 zip 存档。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  id: FullName
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "获取 zip 存档中项的相对路径。"
  remarks: "The FullName property contains the relative path, including the subdirectory hierarchy, of an entry in a zip archive. (In contrast, the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property contains only the name of the entry and does not include the subdirectory hierarchy.) For example, if you create two entries in a zip archive by using the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method and provide `NewEntry.txt` as the name for the first entry and `AddedFolder\\\\NewEntry.txt` for the second entry, both entries will have `NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property. The first entry will also have `NewEntry.txt` in the FullName property, but the second entry will have `AddedFolder\\\\NewEntry.txt` in the FullName property.  \n  \n You can specify any string as the path of an entry, including strings that specify invalid and absolute paths. Therefore, the FullName property might contain a value that is not correctly formatted. An invalid or absolute path might result in an exception when you extract the contents of the zip archive."
  example:
  - "The following example shows how to iterate through the contents of a .zip file, and extract files that contain the .txt extension.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._0_1.vb)]"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "在 zip 存档中项的相对路径。"
  overload: System.IO.Compression.ZipArchiveEntry.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  id: LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "获取或设置上次更改 zip 存档中的项的时间。"
  remarks: "当你创建新的条目从现有文件通过调用<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，该条目将 LastWriteTime 属性自动设置为上次修改该文件的时间。</xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> 当你创建新的条目以编程方式通过调用<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>方法，该条目将 LastWriteTime 属性自动设置为执行的时间。</xref:System.IO.Compression.ZipArchive.CreateEntry%2A> 如果你修改的条目，必须显式设置 LastWriteTime 属性，如果你想要反映的最新更改的时间的值。       当设置此属性，<xref:System.DateTimeOffset>值转换为特定于 zip 存档的时间戳格式。</xref:System.DateTimeOffset> 此格式支持两秒的分辨率。 最早的允许的值为 1980 年 1 月月 1 日 0:00:00 （午夜）。 允许的最新值是 2107年 12 月 31 日 23:59:58 （之前午夜的一个秒）。 如果上次写入时间的值不是有效的该属性返回的默认值为 1980 年 1 月 1 0:00:00 （午夜）。"
  example:
  - "The following example shows how to open an entry in a zip archive, modify it, and set the LastWriteTime property to the current time.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/p-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/p-system.io.compression._3_1.vb)]"
  syntax:
    content: public DateTimeOffset LastWriteTime { get; set; }
    return:
      type: System.DateTimeOffset
      description: "最后一次更改 zip 存档中的项。"
  overload: System.IO.Compression.ZipArchiveEntry.LastWriteTime*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "设置此属性的尝试失败，因为在 zip 存档条目处于<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>模式。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref>.  \n  \n \\- or -  \n  \n The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref> and the entry has been opened."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "尝试将此属性设置为一个值，为是早于 1980 年 1 月 1 日 0:00:00 （午夜） 或更高版本比 2107 12 月 31 日 23:59:58 （之前午夜的一个秒）。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Length
  id: Length
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Length
  nameWithType: ZipArchiveEntry.Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "获取 zip 存档中项的未压缩的大小。"
  remarks: "无法检索此属性，当模式设置为<xref:System.IO.Compression.ZipArchiveMode>，或将模式设置为<xref:System.IO.Compression.ZipArchiveMode>和打开条目。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to retrieve entries from a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the Length and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._1_1.vb)]"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "在 zip 存档中项的未压缩的大小。"
  overload: System.IO.Compression.ZipArchiveEntry.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "属性的值不可用，该条目已被修改。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Name
  id: Name
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Name
  nameWithType: ZipArchiveEntry.Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "获取 zip 存档中的条目的文件名称。"
  remarks: "Name 属性包含的部分<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>与最后一个目录分隔符字符之后的属性 (\\\\)，并且不包括子目录层次结构。</xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> 例如，如果你通过在 zip 存档中创建两个条目<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法并提供`NewEntry.txt`作为第一个条目的名称和`AddedFolder\\ ewEntry.txt`第二个条目，这两个条目都有`NewEntry.txt`Name 属性中。</xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> 第一个条目将还有`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>属性，但第二个条目将具有`AddedFolder\\ ewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>属性。</xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> </xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>"
  example:
  - "The following example shows how to retrieve entries from a zip archive and evaluate the properties of the entries. It uses the Name property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._4_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Zip 存档中的项的文件名。"
  overload: System.IO.Compression.ZipArchiveEntry.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Open
  id: Open
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Open()
  nameWithType: ZipArchiveEntry.Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "将打开 zip 存档中的条目。"
  remarks: "此方法用于访问 zip 存档中的条目的流。 在检索之后流，你可以读取或写入到流。 当写入到流时，对项进行的修改将出现在 zip 存档中。"
  example:
  - "The following example shows how to create a new entry, open it with the Open method, and write to the stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._0_1.vb)]"
  syntax:
    content: public System.IO.Stream Open ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "表示的项的内容的流。"
  overload: System.IO.Compression.ZipArchiveEntry.Open*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "项已是为了写入而当前打开的。       -或者-从存档中删除该条目。       -或-为此条目存档方式打开的<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>模式和此项已被写入到。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "该条目是存档中缺少或已损坏，无法读取。       -或者-通过使用不支持的压缩方法压缩该条目。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放此项的 zip 存档。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  id: ToString
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: ToString()
  nameWithType: ZipArchiveEntry.ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "检索 zip 存档中的项的相对路径。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "是的值的项的相对路径存储在<xref:System.IO.Compression.ZipArchiveEntry.FullName*>属性。</xref:System.IO.Compression.ZipArchiveEntry.FullName*>"
  overload: System.IO.Compression.ZipArchiveEntry.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Delete()
  nameWithType: ZipArchiveEntry.Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.IO.Compression.ZipArchiveEntry.Length
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Length
  nameWithType: ZipArchiveEntry.Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Name
  nameWithType: ZipArchiveEntry.Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Open
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Open()
  nameWithType: ZipArchiveEntry.Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: ToString()
  nameWithType: ZipArchiveEntry.ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
- uid: System.IO.Compression.ZipArchiveEntry.Archive*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
- uid: System.IO.Compression.ZipArchiveEntry.Delete*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Delete
  nameWithType: ZipArchiveEntry.Delete
- uid: System.IO.Compression.ZipArchiveEntry.FullName*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
- uid: System.IO.Compression.ZipArchiveEntry.Length*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Length
  nameWithType: ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Name
  nameWithType: ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Open*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Open
  nameWithType: ZipArchiveEntry.Open
- uid: System.IO.Compression.ZipArchiveEntry.ToString*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: ToString
  nameWithType: ZipArchiveEntry.ToString
