### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.WindowsSecurityToken
  id: WindowsSecurityToken
  children:
  - System.IdentityModel.Tokens.WindowsSecurityToken.#ctor
  - System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)
  - System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)
  - System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)
  - System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType
  - System.IdentityModel.Tokens.WindowsSecurityToken.Dispose
  - System.IdentityModel.Tokens.WindowsSecurityToken.Id
  - System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)
  - System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)
  - System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed
  - System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo
  - System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity
  langs:
  - csharp
  name: WindowsSecurityToken
  nameWithType: WindowsSecurityToken
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken
  type: Class
  summary: "表示基于 Windows 域或用户帐户的标识的安全令牌。"
  remarks: "通常情况下，应用程序开发人员不需要使用 WindowsSecurityToken 类，除非 Web 服务必须访问有关与 WindowsSecurityToken 安全令牌相关联的 Windows 域或用户帐户的详细信息。 若要获取 Windows 域或用户帐户的详细信息，请访问<xref:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity%2A>属性。</xref:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity%2A>"
  syntax:
    content: 'public class WindowsSecurityToken : System.IdentityModel.Tokens.SecurityToken, IDisposable'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: WindowsSecurityToken()
  nameWithType: WindowsSecurityToken.WindowsSecurityToken()
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsSecurityToken()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;></xref>类。"
  remarks: "此构造函数将不对任何，默认情况下。"
  syntax:
    content: protected WindowsSecurityToken ();
    parameters: []
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)
  id: '#ctor(System.Security.Principal.WindowsIdentity)'
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: WindowsSecurityToken(WindowsIdentity)
  nameWithType: WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;></xref>类使用的 Windows 用户。"
  remarks: "此构造函数创建的唯一标识符<xref:System.IdentityModel.Tokens.WindowsSecurityToken>安全令牌并将该值分配给<xref:System.IdentityModel.Tokens.WindowsSecurityToken.Id%2A>属性。</xref:System.IdentityModel.Tokens.WindowsSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.WindowsSecurityToken>"
  syntax:
    content: public WindowsSecurityToken (System.Security.Principal.WindowsIdentity windowsIdentity);
    parameters:
    - id: windowsIdentity
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>表示 Windows 用户。"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>windowsIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)
  id: '#ctor(System.Security.Principal.WindowsIdentity,System.String)'
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: WindowsSecurityToken(WindowsIdentity,String)
  nameWithType: WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity,String)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;></xref>类使用的 Windows 用户。"
  remarks: "此构造函数调用的<xref:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize%2A>方法来初始化此类的属性</xref:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize%2A>"
  syntax:
    content: public WindowsSecurityToken (System.Security.Principal.WindowsIdentity windowsIdentity, string id);
    parameters:
    - id: windowsIdentity
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>表示 Windows 用户。"
    - id: id
      type: System.String
      description: "安全令牌的唯一标识符。"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>windowsIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>id</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)
  id: '#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)'
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: WindowsSecurityToken(WindowsIdentity,String,String)
  nameWithType: WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity,String,String)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "创建的新实例<xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;> </xref>。"
  syntax:
    content: public WindowsSecurityToken (System.Security.Principal.WindowsIdentity windowsIdentity, string id, string authenticationType);
    parameters:
    - id: windowsIdentity
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>表示 Windows 用户。"
    - id: id
      type: System.String
      description: "安全令牌的唯一标识符。"
    - id: authenticationType
      type: System.String
      description: "安全令牌身份验证类型。"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType
  id: AuthenticationType
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: WindowsSecurityToken.AuthenticationType
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取令牌的身份验证类型。"
  syntax:
    content: public string AuthenticationType { get; }
    return:
      type: System.String
      description: "返回<xref:System.String>.</xref:System.String>"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Dispose
  id: Dispose
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: Dispose()
  nameWithType: WindowsSecurityToken.Dispose()
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.Dispose()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "释放使用的所有资源<xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;> </xref>。"
  remarks: "在完成使用<xref:System.IdentityModel.Tokens.WindowsSecurityToken>.</xref:System.IdentityModel.Tokens.WindowsSecurityToken>时调用的 Dispose 方法 Dispose 方法离开<xref:System.IdentityModel.Tokens.WindowsSecurityToken>中不可用状态。</xref:System.IdentityModel.Tokens.WindowsSecurityToken> 调用 Dispose 方法后，必须释放对所有引用<xref:System.IdentityModel.Tokens.WindowsSecurityToken>以便垃圾回收器才能回收的内存，<xref:System.IdentityModel.Tokens.WindowsSecurityToken>占用。</xref:System.IdentityModel.Tokens.WindowsSecurityToken> </xref:System.IdentityModel.Tokens.WindowsSecurityToken>      1> [!NOTE]&1;> 始终在发布到<xref:System.IdentityModel.Tokens.WindowsSecurityToken>。</xref:System.IdentityModel.Tokens.WindowsSecurityToken>最后一个引用之前调用的 Dispose 方法 否则，它所使用的资源之前，不会释放垃圾回收器调用<xref:System.IdentityModel.Tokens.WindowsSecurityToken>对象的`Finalize`方法。</xref:System.IdentityModel.Tokens.WindowsSecurityToken>"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: WindowsSecurityToken.Id
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取安全令牌的唯一标识符。"
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "安全令牌的唯一标识符。"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)
  id: Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: Initialize(String,DateTime,DateTime,WindowsIdentity,Boolean)
  nameWithType: WindowsSecurityToken.Initialize(String,DateTime,DateTime,WindowsIdentity,Boolean)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(String,DateTime,DateTime,WindowsIdentity,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;></xref>类在安全令牌的有效时间中使用指定的唯一标识符、 Windows 用户和时刻第一个和最后时刻。"
  remarks: "<xref:System.IdentityModel.Tokens.WindowsSecurityToken>类</xref:System.IdentityModel.Tokens.WindowsSecurityToken>的构造函数调用的 Initialize 方法"
  syntax:
    content: protected void Initialize (string id, DateTime effectiveTime, DateTime expirationTime, System.Security.Principal.WindowsIdentity windowsIdentity, bool clone);
    parameters:
    - id: id
      type: System.String
      description: "安全令牌的唯一标识符。 设置的值<xref:System.IdentityModel.Tokens.WindowsSecurityToken.Id*>属性。</xref:System.IdentityModel.Tokens.WindowsSecurityToken.Id*>"
    - id: effectiveTime
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示时刻从该处此安全令牌的第一次有效的时间。</xref:System.DateTime> 设置的值<xref:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom*>属性。</xref:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom*>"
    - id: expirationTime
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示的最后时刻此安全令牌无效。</xref:System.DateTime> 设置的值<xref:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo*>属性。</xref:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo*>"
    - id: windowsIdentity
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>表示 Windows 用户。 设置的值<xref:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity*>属性。</xref:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity*>"
    - id: clone
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>等同于的对象`windowsIdentity`参数并分配给<> *1> 属性; 否则，将分配的值`windowsIdentity`参数<> *1> 属性。"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>windowsIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>id</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)
  id: Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: Initialize(String,String,DateTime,DateTime,WindowsIdentity,Boolean)
  nameWithType: WindowsSecurityToken.Initialize(String,String,DateTime,DateTime,WindowsIdentity,Boolean)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(String,String,DateTime,DateTime,WindowsIdentity,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;></xref>类。"
  syntax:
    content: protected void Initialize (string id, string authenticationType, DateTime effectiveTime, DateTime expirationTime, System.Security.Principal.WindowsIdentity windowsIdentity, bool clone);
    parameters:
    - id: id
      type: System.String
      description: "安全令牌的唯一标识符。"
    - id: authenticationType
      type: System.String
      description: "安全令牌身份验证类型。"
    - id: effectiveTime
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示时刻从该处此安全令牌的第一次有效的时间。</xref:System.DateTime>"
    - id: expirationTime
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示的最后时刻此安全令牌无效。</xref:System.DateTime>"
    - id: windowsIdentity
      type: System.Security.Principal.WindowsIdentity
      description: "表示 Windows 用户。"
    - id: clone
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要创建<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>等同于的对象`windowsIdentity`参数并分配给`WindowsIdentity`属性; 否则，将分配的值`windowsIdentity`参数`WindowsIdentity`属性。"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: WindowsSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取与安全令牌相关联的加密密钥。"
  remarks: "SecurityKeys 方法返回空集合，默认情况下。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;类型的<xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> ，包含与安全令牌相关联的密钥集。"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed
  id: ThrowIfDisposed
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: ThrowIfDisposed()
  nameWithType: WindowsSecurityToken.ThrowIfDisposed()
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "如果引发异常<xref:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose*>已为此实例调用方法。</xref:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose*>"
  syntax:
    content: protected void ThrowIfDisposed ();
    parameters: []
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose*>已为此实例调用方法。</xref:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: WindowsSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取此安全令牌无效的时间的最初时刻。"
  remarks: "ValidFrom 属性设置为将在时间<xref:System.IdentityModel.Tokens.WindowsSecurityToken>创建类。</xref:System.IdentityModel.Tokens.WindowsSecurityToken>"
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示时刻从该处此安全令牌的第一次有效的时间。</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: WindowsSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取的最后时刻此安全令牌无效。"
  remarks: "A<xref:System.IdentityModel.Tokens.WindowsSecurityToken>安全令牌的有效期为 10 小时，默认情况下。</xref:System.IdentityModel.Tokens.WindowsSecurityToken> ValidTo 属性设置为将在时间<xref:System.IdentityModel.Tokens.WindowsSecurityToken>类创建加上 10 小时。</xref:System.IdentityModel.Tokens.WindowsSecurityToken>"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>，表示的最后时刻此安全令牌无效。</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity
  id: WindowsIdentity
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  langs:
  - csharp
  name: WindowsIdentity
  nameWithType: WindowsSecurityToken.WindowsIdentity
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取与此安全令牌相关联的 Windows 用户。"
  syntax:
    content: public virtual System.Security.Principal.WindowsIdentity WindowsIdentity { get; }
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>表示 Windows 用户。"
  overload: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: WindowsSecurityToken()
  nameWithType: WindowsSecurityToken.WindowsSecurityToken()
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsSecurityToken()
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: WindowsSecurityToken(WindowsIdentity)
  nameWithType: WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity)
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: WindowsSecurityToken(WindowsIdentity,String)
  nameWithType: WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity,String)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: WindowsSecurityToken(WindowsIdentity,String,String)
  nameWithType: WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity,String,String)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsSecurityToken(WindowsIdentity,String,String)
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: AuthenticationType
  nameWithType: WindowsSecurityToken.AuthenticationType
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Dispose
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: Dispose()
  nameWithType: WindowsSecurityToken.Dispose()
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.Dispose()
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Id
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: Id
  nameWithType: WindowsSecurityToken.Id
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.Id
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: Initialize(String,DateTime,DateTime,WindowsIdentity,Boolean)
  nameWithType: WindowsSecurityToken.Initialize(String,DateTime,DateTime,WindowsIdentity,Boolean)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(String,DateTime,DateTime,WindowsIdentity,Boolean)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: Initialize(String,String,DateTime,DateTime,WindowsIdentity,Boolean)
  nameWithType: WindowsSecurityToken.Initialize(String,String,DateTime,DateTime,WindowsIdentity,Boolean)
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(String,String,DateTime,DateTime,WindowsIdentity,Boolean)
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: WindowsSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: WindowsSecurityToken.ThrowIfDisposed()
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed()
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: WindowsSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: WindowsSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsSecurityToken.WindowsIdentity
  fullName: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: WindowsSecurityToken
  nameWithType: WindowsSecurityToken.WindowsSecurityToken
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: AuthenticationType
  nameWithType: WindowsSecurityToken.AuthenticationType
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Dispose*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: Dispose
  nameWithType: WindowsSecurityToken.Dispose
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Id*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: Id
  nameWithType: WindowsSecurityToken.Id
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.Initialize*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: Initialize
  nameWithType: WindowsSecurityToken.Initialize
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: WindowsSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: ThrowIfDisposed
  nameWithType: WindowsSecurityToken.ThrowIfDisposed
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: WindowsSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: WindowsSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity*
  parent: System.IdentityModel.Tokens.WindowsSecurityToken
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsSecurityToken.WindowsIdentity
