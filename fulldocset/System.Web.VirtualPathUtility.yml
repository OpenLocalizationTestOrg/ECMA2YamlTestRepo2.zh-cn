### YamlMime:ManagedReference
items:
- uid: System.Web.VirtualPathUtility
  id: VirtualPathUtility
  children:
  - System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  - System.Web.VirtualPathUtility.Combine(System.String,System.String)
  - System.Web.VirtualPathUtility.GetDirectory(System.String)
  - System.Web.VirtualPathUtility.GetExtension(System.String)
  - System.Web.VirtualPathUtility.GetFileName(System.String)
  - System.Web.VirtualPathUtility.IsAbsolute(System.String)
  - System.Web.VirtualPathUtility.IsAppRelative(System.String)
  - System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  - System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  - System.Web.VirtualPathUtility.ToAbsolute(System.String)
  - System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  - System.Web.VirtualPathUtility.ToAppRelative(System.String)
  - System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  langs:
  - csharp
  name: VirtualPathUtility
  nameWithType: VirtualPathUtility
  fullName: System.Web.VirtualPathUtility
  type: Class
  summary: "提供实用工具方法，用于通用虚拟路径操作。"
  remarks: "The VirtualPathUtility class provides utility methods for common operations involving virtual paths. For ASP.NET server controls and server code, virtual paths using the Web application root operator, the tilde (~), commonly are used instead of relative and absolute paths. For more information, see [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md).  \n  \n Use the VirtualPathUtility class when you need to convert application-relative paths to absolute virtual paths, as might be the case in developing a custom Web service handler.  \n  \n An absolute virtual path starts with the literal slash mark (/). A relative virtual path is relative to the application root directory, if it is just a tilde (~) or starts with the tilde and a double backslash (~\\\\\\\\) or the tilde and a slash mark (~/). Making a virtual path relative makes the path independent of the application.  \n  \n The virtual directory for the application can be obtained from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> and <xref:System.Web.HttpRequest.ApplicationPath%2A> properties.  \n  \n> [!NOTE]\n>  The VirtualPathUtility class is not intended for security or canonicalization purposes. For more information about Web application security, see [Overview of Web Application Security Threats](~/add/includes/ajax-current-ext-md.md). For generic URL processing functionality, see <xref:System.Uri>."
  example:
  - "The following code example demonstrates how to use the VirtualPathUtility class and some of its methods. First, the <xref:System.Web.HttpRequest.FilePath%2A> property generates the virtual path to the Web page. The <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods return information about the virtual path. Next, the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property generates a virtual path of the current request, which might be different from the <xref:System.Web.HttpRequest.FilePath%2A> property, if a <xref:System.Web.HttpResponse.Redirect%2A> method was called. The <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods return information about the virtual path.  \n  \n [!code-vb[System.Web.VirtualPathUtility#1](~/add/codesnippet/visualbasic/t-system.web.virtualpath_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#1](~/add/codesnippet/csharp/t-system.web.virtualpath_1.aspx)]"
  syntax:
    content: public static class VirtualPathUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  id: AppendTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: AppendTrailingSlash(String)
  nameWithType: VirtualPathUtility.AppendTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.AppendTrailingSlash(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "如果尚不存在，请将文本斜杠标记 （/） 追加到的虚拟路径的末尾。"
  remarks: "如果文本斜杠标记 （/） 存在的虚拟路径的末尾，则不会修改的虚拟路径。"
  syntax:
    content: public static string AppendTrailingSlash (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要追加到的斜杠标记的虚拟路径。"
    return:
      type: System.String
      description: "修改后的虚拟路径。"
  overload: System.Web.VirtualPathUtility.AppendTrailingSlash*
  exceptions: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.Combine(System.String,System.String)
  id: Combine(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: Combine(String,String)
  nameWithType: VirtualPathUtility.Combine(String,String)
  fullName: System.Web.VirtualPathUtility.Combine(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "将组合的基路径和相对路径。"
  remarks: "TheCombine 方法返回的值<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>如果相对路径是完全波形符 （~） 的属性。</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>       合并方法使用<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>属性值而不是基路径中，如果以波形符和斜杠标记开头的相对路径 (~ /); 否则为该组合方法使用基路径。</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>"
  syntax:
    content: public static string Combine (string basePath, string relativePath);
    parameters:
    - id: basePath
      type: System.String
      description: "基路径。"
    - id: relativePath
      type: System.String
      description: "相对路径。"
    return:
      type: System.String
      description: "The combined <code>basePath</code> and <code>relativePath</code>."
  overload: System.Web.VirtualPathUtility.Combine*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>relativePath</code>是的物理路径。       -或-<code>relativePath</code>包括一个或多个冒号。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relativePath</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串。       -<code>basePath</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetDirectory(System.String)
  id: GetDirectory(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetDirectory(String)
  nameWithType: VirtualPathUtility.GetDirectory(String)
  fullName: System.Web.VirtualPathUtility.GetDirectory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "返回虚拟路径的目录的部分。"
  remarks: "如果`virtualPath`不根路径; 也就是说，它不等于根目录运算符 （波形符 [~]），不以开头波形符 （~），例如波形符和斜杠标记 (~ /) 或波形符和使用双反斜杠 (~ / /)，或不以斜杠标记 （/） 开头<xref:System.ArgumentException>引发异常。</xref:System.ArgumentException>       如果传递给 GetDirectory 方法的虚拟路径是`&quot;/images/image1.gif&quot;`，则返回的目录是`&quot;/images&quot;`。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and GetDirectory methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_3_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_3_1.aspx)]"
  syntax:
    content: public static string GetDirectory (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虚拟路径。"
    return:
      type: System.String
      description: "中的虚拟路径引用的目录。"
  overload: System.Web.VirtualPathUtility.GetDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code> is not rooted.  \n  \n \\- or -  \n  \n <code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetExtension(System.String)
  id: GetExtension(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetExtension(String)
  nameWithType: VirtualPathUtility.GetExtension(String)
  fullName: System.Web.VirtualPathUtility.GetExtension(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索的虚拟路径中引用的文件的扩展。"
  remarks: "如果传递给 GetExtension 方法的虚拟路径是`&quot;/images/image1.gif&quot;`，返回的扩展名是`&quot;.gif&quot;`。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.GetFileName%2A>, GetExtension, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_0_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_0_1.aspx)]"
  syntax:
    content: public static string GetExtension (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虚拟路径。"
    return:
      type: System.String
      description: "文件名称扩展字符串文本，包括句点 （.）、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或空字符串 (&quot;&quot;)。"
  overload: System.Web.VirtualPathUtility.GetExtension*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>包含不有效，因为在中定义的一个或多个字符<xref:System.IO.Path.InvalidPathChars>。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetFileName(System.String)
  id: GetFileName(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetFileName(String)
  nameWithType: VirtualPathUtility.GetFileName(String)
  fullName: System.Web.VirtualPathUtility.GetFileName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "检索的虚拟路径中引用的文件的文件名称。"
  remarks: "如果传递给 GetFileName 方法的虚拟路径是`&quot;/images/image1.gif&quot;`，返回的文件名是`&quot;image1.gif&quot;`。"
  example:
  - "The following code example demonstrates how to use the GetFileName, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_5_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_5_1.aspx)]"
  syntax:
    content: public static string GetFileName (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虚拟路径。"
    return:
      type: System.String
      description: "文本中的最后一个目录字符后的文件名称<code> virtualPath </code>; 否则为如果最后一个目录名称的最后一个字符<code> virtualPath </code>是目录或卷分隔符字符。"
  overload: System.Web.VirtualPathUtility.GetFileName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>包含不有效，因为在中定义的一个或多个字符<xref:System.IO.Path.InvalidPathChars>。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.IsAbsolute(System.String)
  id: IsAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: IsAbsolute(String)
  nameWithType: VirtualPathUtility.IsAbsolute(String)
  fullName: System.Web.VirtualPathUtility.IsAbsolute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "返回一个布尔值，该值指示指定的虚拟路径为绝对;也就是说，它将启动与文本的斜杠标记 （/）。"
  remarks: "虚拟路径是绝对地址，如果以斜杠 （/）。 例如，<xref:System.Web.HttpRequest.Path%2A>属性返回绝对虚拟路径。</xref:System.Web.HttpRequest.Path%2A>"
  example:
  - "The following code example demonstrates how to use the IsAbsolute, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_2_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_2_1.aspx)]"
  syntax:
    content: public static bool IsAbsolute (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要检查的虚拟路径。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> virtualPath </code>是绝对路径而不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字符串 (&quot;&quot;);otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.VirtualPathUtility.IsAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.IsAppRelative(System.String)
  id: IsAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: IsAppRelative(String)
  nameWithType: VirtualPathUtility.IsAppRelative(String)
  fullName: System.Web.VirtualPathUtility.IsAppRelative(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "返回一个布尔值，该值指示相对于应用程序是否为指定的虚拟路径。"
  remarks: "虚拟路径可以是只需根目录运算符 （波形符 [~]），也可以开头根目录运算符。 如果`virtualPath`是`null`、<xref:System.ArgumentNullException>引发异常。</xref:System.ArgumentNullException> 如果`virtualPath`为空字符串 (&quot;&quot;)，IsAppRelative 方法返回`false`。      1> [!NOTE]  >   `&quot;~` `filename` `&quot;`不是有效的虚拟路径，并返回`false`IsAppRelative 方法。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, IsAppRelative, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_4_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_4_1.aspx)]"
  syntax:
    content: public static bool IsAppRelative (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要检查的虚拟路径。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> virtualPath </code>相对于应用程序; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.VirtualPathUtility.IsAppRelative*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  id: MakeRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: MakeRelative(String,String)
  nameWithType: VirtualPathUtility.MakeRelative(String,String)
  fullName: System.Web.VirtualPathUtility.MakeRelative(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "从包含根目录运算符 （波形符 [~]） 到另一个虚拟路径返回了相对虚拟路径。"
  remarks: "如果`fromPath`和`toPath`参数不取得 root 权限; 也就是说，它们不相等根目录运算符 （波形符 [~]），不会启动与波形符 （~），例如波形符和斜杠标记 (~ /) 或波形符和使用双反斜杠 (~ / /)，或不是以斜杠标记 （/） 开头<xref:System.ArgumentException>引发异常。</xref:System.ArgumentException>       确定的相对路径不使用查询字符串参数和 URI 中使用的 HTML 定位点。       如果`fromPath`是`&quot;/directory1/file1.aspx&quot;`和`toPath`是`&quot;/directory2/file2.aspx&quot;`，MakeRelative 方法返回`&quot;../directory2/file2.aspx&quot;`。"
  syntax:
    content: public static string MakeRelative (string fromPath, string toPath);
    parameters:
    - id: fromPath
      type: System.String
      description: "要返回的相对虚拟路径的起始虚拟路径。"
    - id: toPath
      type: System.String
      description: "要返回的相对虚拟路径的结束虚拟路径。"
    return:
      type: System.String
      description: "从的相对虚拟路径<code> fromPath </code>到<code> toPath </code>。"
  overload: System.Web.VirtualPathUtility.MakeRelative*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fromPath</code> is not rooted.  \n  \n \\- or -  \n  \n <code>toPath</code> is not rooted."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  id: RemoveTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: RemoveTrailingSlash(String)
  nameWithType: VirtualPathUtility.RemoveTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.RemoveTrailingSlash(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "从虚拟路径中删除尾随斜杠标记 （/）。"
  remarks: "从虚拟路径的末尾，RemoveTrailingSlash 方法中删除斜杠标记 （/）。 如果已指定的虚拟路径的根目录 (`&quot;/&quot;`)，不执行任何操作。 如果虚拟路径`null`或空字符串 (&quot;&quot;)，RemoveTrailingSlash 方法返回`null`。"
  syntax:
    content: public static string RemoveTrailingSlash (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要删除从任何尾随斜杠标记的虚拟路径。"
    return:
      type: System.String
      description: "不尾随斜杠标记，如果的虚拟路径尚不是根目录 （&quot;/&quot;）; 包含的虚拟路径否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.VirtualPathUtility.RemoveTrailingSlash*
  exceptions: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String)
  id: ToAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAbsolute(String)
  nameWithType: VirtualPathUtility.ToAbsolute(String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "将虚拟路径转换为应用程序绝对路径。"
  remarks: "应用程序绝对路径是应用程序路径使用而不是根目录运算符 （波形符 [~]） 的位置。       如果`virtualPath`是:-绝对，ToAbsolute 方法返回未更改的虚拟路径。      -相对于应用程序，则该 ToAbsolute 方法会将当前的应用程序虚拟目录路径追加到的开头`virtualPath`。 例如，可以从访问当前的应用程序虚拟目录路径<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>属性。</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>      -不取得 root 权限，则该 ToAbsolute 方法将引发<xref:System.ArgumentOutOfRangeException>异常。</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public static string ToAbsolute (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要将转换为相对于应用程序路径的虚拟路径。"
    return:
      type: System.String
      description: "指定虚拟路径的绝对路径表示形式。"
  overload: System.Web.VirtualPathUtility.ToAbsolute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>virtualPath</code>不是根路径。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "前导双句点 （.） 用于退出顶级目录。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  id: ToAbsolute(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAbsolute(String,String)
  nameWithType: VirtualPathUtility.ToAbsolute(String,String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "将虚拟路径转换为使用指定的应用程序路径的应用程序绝对路径。"
  remarks: "该 ToAbsolute 重载的<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法使用提供的应用程序路径而不是当前的应用程序路径。</xref:System.Web.VirtualPathUtility.ToAbsolute%2A>       如果`virtualPath`是:-绝对，ToAbsolute 方法返回未更改的虚拟路径。      -相对于应用程序，则 ToAbsolute 方法将添加`applicationPath`到的虚拟路径的开头。      -不取得 root 权限，则该 ToAbsolute 方法将引发<xref:System.ArgumentOutOfRangeException>异常。</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public static string ToAbsolute (string virtualPath, string applicationPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要将转换为相对于应用程序路径的虚拟路径。"
    - id: applicationPath
      type: System.String
      description: "要使用要转换的应用程序路径`virtualPath`为相对路径。"
    return:
      type: System.String
      description: "虚拟绝对路径表示形式<code> virtualPath </code>。"
  overload: System.Web.VirtualPathUtility.ToAbsolute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>applicationPath</code>不是根路径。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "前导双句点 （.） 的应用程序路径中使用，以退出顶级目录。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String)
  id: ToAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAppRelative(String)
  nameWithType: VirtualPathUtility.ToAppRelative(String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "将虚拟路径转换为使用中的应用程序虚拟路径相对于应用程序路径<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*>属性。</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*>"
  remarks: "如果应用程序的虚拟路径是`&quot;myapp&quot;`和虚拟路径`&quot;/myApp/sub/default.asp&quot;`传递到 ToAppRelative 方法中，生成的应用程序相对路径是`&quot;~/sub/default.aspx&quot;`。       如果`virtualPath`才会使用当前的应用程序路径、 ToAppRelative 方法返回未更改的虚拟路径。       如果`virtualPath`是应用程序路径中，相同根目录运算符 （波形符 [~]），将返回。 例如，可以从访问当前的应用程序虚拟目录路径<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>属性。</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_1_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_1_1.aspx)]"
  syntax:
    content: public static string ToAppRelative (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要将转换为相对于应用程序路径的虚拟路径。"
    return:
      type: System.String
      description: "相对于应用程序路径表示形式<code> virtualPath </code>。"
  overload: System.Web.VirtualPathUtility.ToAppRelative*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  id: ToAppRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAppRelative(String,String)
  nameWithType: VirtualPathUtility.ToAppRelative(String,String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "将虚拟路径转换为使用指定的应用程序路径的相对于应用程序路径。"
  remarks: "ToAppRelative 重载<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法使用`applicationPath`而不是当前的应用程序路径。</xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 如果`virtualPath`开头不`applicationPath`，ToAppRelative 方法返回未更改的虚拟路径。"
  syntax:
    content: public static string ToAppRelative (string virtualPath, string applicationPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要将转换为相对于应用程序路径的虚拟路径。"
    - id: applicationPath
      type: System.String
      description: "要使用要转换的应用程序路径`virtualPath`为相对路径。"
    return:
      type: System.String
      description: "相对于应用程序路径表示形式<code> virtualPath </code>。"
  overload: System.Web.VirtualPathUtility.ToAppRelative*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: AppendTrailingSlash(String)
  nameWithType: VirtualPathUtility.AppendTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.AppendTrailingSlash(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.VirtualPathUtility.Combine(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: Combine(String,String)
  nameWithType: VirtualPathUtility.Combine(String,String)
  fullName: System.Web.VirtualPathUtility.Combine(String,String)
- uid: System.Web.VirtualPathUtility.GetDirectory(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetDirectory(String)
  nameWithType: VirtualPathUtility.GetDirectory(String)
  fullName: System.Web.VirtualPathUtility.GetDirectory(String)
- uid: System.Web.VirtualPathUtility.GetExtension(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetExtension(String)
  nameWithType: VirtualPathUtility.GetExtension(String)
  fullName: System.Web.VirtualPathUtility.GetExtension(String)
- uid: System.Web.VirtualPathUtility.GetFileName(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetFileName(String)
  nameWithType: VirtualPathUtility.GetFileName(String)
  fullName: System.Web.VirtualPathUtility.GetFileName(String)
- uid: System.Web.VirtualPathUtility.IsAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAbsolute(String)
  nameWithType: VirtualPathUtility.IsAbsolute(String)
  fullName: System.Web.VirtualPathUtility.IsAbsolute(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.VirtualPathUtility.IsAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAppRelative(String)
  nameWithType: VirtualPathUtility.IsAppRelative(String)
  fullName: System.Web.VirtualPathUtility.IsAppRelative(String)
- uid: System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: MakeRelative(String,String)
  nameWithType: VirtualPathUtility.MakeRelative(String,String)
  fullName: System.Web.VirtualPathUtility.MakeRelative(String,String)
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: RemoveTrailingSlash(String)
  nameWithType: VirtualPathUtility.RemoveTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.RemoveTrailingSlash(String)
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute(String)
  nameWithType: VirtualPathUtility.ToAbsolute(String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String)
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute(String,String)
  nameWithType: VirtualPathUtility.ToAbsolute(String,String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String,String)
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative(String)
  nameWithType: VirtualPathUtility.ToAppRelative(String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String)
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative(String,String)
  nameWithType: VirtualPathUtility.ToAppRelative(String,String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String,String)
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: AppendTrailingSlash
  nameWithType: VirtualPathUtility.AppendTrailingSlash
- uid: System.Web.VirtualPathUtility.Combine*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: Combine
  nameWithType: VirtualPathUtility.Combine
- uid: System.Web.VirtualPathUtility.GetDirectory*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetDirectory
  nameWithType: VirtualPathUtility.GetDirectory
- uid: System.Web.VirtualPathUtility.GetExtension*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetExtension
  nameWithType: VirtualPathUtility.GetExtension
- uid: System.Web.VirtualPathUtility.GetFileName*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetFileName
  nameWithType: VirtualPathUtility.GetFileName
- uid: System.Web.VirtualPathUtility.IsAbsolute*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAbsolute
  nameWithType: VirtualPathUtility.IsAbsolute
- uid: System.Web.VirtualPathUtility.IsAppRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAppRelative
  nameWithType: VirtualPathUtility.IsAppRelative
- uid: System.Web.VirtualPathUtility.MakeRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: MakeRelative
  nameWithType: VirtualPathUtility.MakeRelative
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: RemoveTrailingSlash
  nameWithType: VirtualPathUtility.RemoveTrailingSlash
- uid: System.Web.VirtualPathUtility.ToAbsolute*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute
  nameWithType: VirtualPathUtility.ToAbsolute
- uid: System.Web.VirtualPathUtility.ToAppRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative
  nameWithType: VirtualPathUtility.ToAppRelative
