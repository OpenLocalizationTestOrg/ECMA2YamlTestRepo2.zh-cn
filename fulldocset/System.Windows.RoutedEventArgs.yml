### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEventArgs
  id: RoutedEventArgs
  children:
  - System.Windows.RoutedEventArgs.#ctor
  - System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  - System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  langs:
  - csharp
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
  type: Class
  summary: "包含与路由事件相关联的状态信息和事件数据。"
  remarks: "可以使用单个<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>.</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>使用不同为 RoutedEventArgs 此类负责打包的事件数据<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>，提供额外的事件状态信息，和由事件系统，用于调用处理程序与路由事件相关联。</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>"
  syntax:
    content: 'public class RoutedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor
  id: '#ctor'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs()
  nameWithType: RoutedEventArgs.RoutedEventArgs()
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>类。"
  remarks: "当使用此无参数构造函数，所有公共属性的新<xref:System.Windows.RoutedEventArgs>实例假定有以下默认值:-<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>默认为`null`。</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> </xref:System.Windows.RoutedEventArgs>      -<xref:System.Windows.RoutedEventArgs.Handled%2A>默认为`false`-<xref:System.Windows.RoutedEventArgs.Source%2A>默认为`null`。</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.RoutedEventArgs.Handled%2A>      -<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>默认为`null`。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>       为空值<xref:System.Windows.RoutedEventArgs.Source%2A>和<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>只意味着<xref:System.Windows.RoutedEventArgs>数据使不尝试指定源。</xref:System.Windows.RoutedEventArgs> </xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Source%2A> 当在调用中使用此实例<xref:System.Windows.UIElement.RaiseEvent%2A>、<xref:System.Windows.RoutedEventArgs.Source%2A>和<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>填充基于引发该事件，并会传递到侦听器通过路由的元素的值。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.UIElement.RaiseEvent%2A>"
  syntax:
    content: public RoutedEventArgs ();
    parameters: []
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs(RoutedEvent)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>类，使用提供的路由的事件标识符。"
  remarks: "在使用此重载的构造函数时，未指定属性的新<xref:System.Windows.RoutedEventArgs>实例假定有以下默认值:-<xref:System.Windows.RoutedEventArgs.Handled%2A>默认为`false`-<xref:System.Windows.RoutedEventArgs.Source%2A>默认为`null`。</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.RoutedEventArgs.Handled%2A> </xref:System.Windows.RoutedEventArgs>      -<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>默认为`null`。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>       为空值<xref:System.Windows.RoutedEventArgs.Source%2A>和<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>只意味着此<xref:System.Windows.RoutedEventArgs>不尝试指定源。</xref:System.Windows.RoutedEventArgs> </xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Source%2A> 当在调用中使用此实例<xref:System.Windows.UIElement.RaiseEvent%2A>、<xref:System.Windows.RoutedEventArgs.Source%2A>和<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>填充基于引发该事件，并会传递到侦听器通过路由的元素的值。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.UIElement.RaiseEvent%2A>"
  example:
  - "The following example constructs a new <xref:System.Windows.RoutedEventArgs> for use in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>.  \n  \n [!code-cs[RoutedEventCustom#RaiseEvent](~/add/codesnippet/csharp/RoutedEventCustom/SDKSampleLibrary/class1.cs#raiseevent)]\n [!code-vb[RoutedEventCustom#RaiseEvent](~/add/codesnippet/visualbasic/SDKSampleLibrary/Class1.vb#raiseevent)]"
  syntax:
    content: public RoutedEventArgs (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "此实例的路由的事件标识符<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>类。"
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  id: '#ctor(System.Windows.RoutedEvent,System.Object)'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs(RoutedEvent,Object)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "初始化的新实例<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>类，使用提供的路由的事件的标识符，并提供机会来声明不同源的事件。"
  remarks: "在使用此重载的构造函数时，未指定属性的新<xref:System.Windows.RoutedEventArgs>实例假定有以下默认值:-<xref:System.Windows.RoutedEventArgs.Handled%2A>默认为`false`-<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>默认为`null`。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Handled%2A> </xref:System.Windows.RoutedEventArgs>       为空值<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>都基于引发事件并将其通过路由的元素填充，但将读取`null`之前调用。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>       传递时使用此签名<xref:System.Windows.RoutedEventArgs>到虚方法，如<xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A>、 自变量用于调用<xref:System.Windows.UIElement.RaiseEvent%2A>内部。</xref:System.Windows.UIElement.RaiseEvent%2A> </xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A> </xref:System.Windows.RoutedEventArgs>"
  syntax:
    content: public RoutedEventArgs (System.Windows.RoutedEvent routedEvent, object source);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "此实例的路由的事件标识符<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>类。"
    - id: source
      type: System.Object
      description: "处理事件时将报告一个备用源。 这将预先填充<xref:System.Windows.RoutedEventArgs.Source*>属性。</xref:System.Windows.RoutedEventArgs.Source*>"
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.Handled
  id: Handled
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: System.Windows.RoutedEventArgs.Handled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "获取或设置一个值，指示的事件处理路由事件在路由过程的当前状态。"
  remarks: "将标记为处理的事件将限制到侦听器为由事件路由的路由事件的可见性。 事件仍经过的其余部分的路由，但仅处理程序专门添加与`HandledEventsToo``true`中<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>将在响应中调用方法调用。</xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> 默认实例侦听器上的处理程序 (如那些用表示[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]) 将不会调用。 处理标记处理的事件不是一种常见方案。       如果您是控件作者定义您自己的事件，你做的决策有关事件处理在类级别会影响控件的用户以及派生控件的所有用户和可能都是其他元素包含的控件或包含您的控件。 有关详细信息，请参阅[标记作为 Handled，和类处理的路由事件](~/add/includes/ajax-current-ext-md.md)。       在极少数情况下很适合于处理事件其中标记 Handled `true`，并修改事件自变量更改为 Handled `false`。 这可能是必需的输入控件的事件的例如密钥处理的某些方面<xref:System.Windows.UIElement.KeyDown>与<xref:System.Windows.UIElement.TextInput>，低级别和高级别输入的事件会争用处理，并且每个正试图使用不同的路由策略。</xref:System.Windows.UIElement.TextInput> </xref:System.Windows.UIElement.KeyDown>"
  example:
  - "The following example implements an event handler that marks the event handled.  \n  \n [!code-vb[ClassHandling#OnStarClassHandler](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#onstarclasshandler)]\n [!code-cs[ClassHandling#OnStarClassHandler](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#onstarclasshandler)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "如果设置，将设置为<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;></xref>如果事件将标记为已处理; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果读取此值，<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;> </xref>指示类处理程序或在路由过程，某个实例处理程序已标记处理此事件。 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>指示没有此类处理标记为已处理的事件。       默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.RoutedEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "当在派生类中重写，使您能够以基实现相比可提高效率的特定类型的方式调用事件处理程序。"
  remarks: "基实现包含反射来确定正确的处理程序的任何情况，该处理程序不是按原义<xref:System.Windows.RoutedEventHandler>，并且此反射步骤具有某些性能产生负面影响。</xref:System.Windows.RoutedEventHandler> 调用可以通过更高效不依赖于反射。 这是使得此方法可用于选择重写任何路由的事件自变量类的方案。 实现不应调用基对于此方法，因为您的实现已应负责调用类型安全的处理程序。"
  example:
  - "The following is pseudocode that illustrates a basic pattern that can be used for implementation. Here, `MyRoutedEventHandler` is a subclass of <xref:System.Windows.RoutedEventHandler>.  \n  \n [!code-cs[CorePseudocode#RoutedEventArgs](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#routedeventargs)]\n [!code-vb[CorePseudocode#RoutedEventArgs](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#routedeventargs)]"
  syntax:
    content: protected virtual void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "泛型处理程序 / 委托实现调用。"
    - id: genericTarget
      type: System.Object
      description: "应在其调用提供的处理程序的目标。"
  overload: System.Windows.RoutedEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  id: OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: System.Windows.RoutedEventArgs.OnSetSource(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "当在派生类中重写时提供通知回调入口点时的值<xref:System.Windows.RoutedEventArgs.Source*>的某个实例发生变化的属性。</xref:System.Windows.RoutedEventArgs.Source*>"
  syntax:
    content: protected virtual void OnSetSource (object source);
    parameters:
    - id: source
      type: System.Object
      description: "新值<xref:System.Windows.RoutedEventArgs.Source*>正被设置为。</xref:System.Windows.RoutedEventArgs.Source*>"
  overload: System.Windows.RoutedEventArgs.OnSetSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.OriginalSource
  id: OriginalSource
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "获取原始报告源由纯命中测试，任何可能在<xref:System.Windows.RoutedEventArgs.Source*>调整父类</xref:System.Windows.RoutedEventArgs.Source*>前"
  remarks: "此属性获取其值后之前类, 实例的任何处理或事件处理程序调用，以及永远不会调整忽略这一点。 原始的源信息是只读的类处理程序或类实现中，就像它将被报告中的事件数据。       其中可能调整源的常见用例包含控件的内容模型内的内容元素 (列表项，例如，内容将报告作为列表项元素<xref:System.Windows.RoutedEventArgs.Source%2A>和列表项中的实际元素将 OriginalSource。</xref:System.Windows.RoutedEventArgs.Source%2A>       由各种元素和内容模型的源调整而异类类。 调整事件源的每个类尝试预测哪个源是最有用报告最输入的方案和为其类旨在，，然后将该源设置<xref:System.Windows.RoutedEventArgs.Source%2A>.</xref:System.Windows.RoutedEventArgs.Source%2A>的方案 如果此源不是一个具有与你处理事件的相关性，请尝试改为检查 OriginalSource 以确定它是否报告更适合的不同源。 输入事件的更多详细信息，请参阅[输入概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public object OriginalSource { get; }
    return:
      type: System.Object
      description: "在任何可能之前的原始报告源<xref:System.Windows.RoutedEventArgs.Source*>类处理可能对展平复合元素树进行的调整。</xref:System.Windows.RoutedEventArgs.Source*>"
  overload: System.Windows.RoutedEventArgs.OriginalSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  id: RoutedEvent
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: System.Windows.RoutedEventArgs.RoutedEvent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "获取或设置与此关联 RoutedEvent <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>实例。"
  remarks: "无法将此值设置上<xref:System.Windows.RoutedEventArgs>，已经传送 （例如，如果你获得通过处理程序的自变量）。</xref:System.Windows.RoutedEventArgs> 尝试这样做将产生异常。 你仅可以将其设置不尚未已用于生成事件的调用的实例上。       RoutedEvent 值不能为`null`在任何时间。"
  example:
  - "The following example creates new routed event data with an initial constructor and then sets the RoutedEvent property as a subsequent operation. You must have RoutedEvent set prior to raising the routed event.  \n  \n [!code-cs[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/add/codesnippet/csharp/ColorPicker/ColorPicker.cs#routedeventargsroutedevent)]\n [!code-vb[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/add/codesnippet/visualbasic/colorpicker/colorpicker.vb#routedeventargsroutedevent)]"
  syntax:
    content: public System.Windows.RoutedEvent RoutedEvent { get; set; }
    return:
      type: System.Windows.RoutedEvent
      description: "已调用事件的标识符。"
  overload: System.Windows.RoutedEventArgs.RoutedEvent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "试图更改 RoutedEvent 值时在路由事件。"
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.Source
  id: Source
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: System.Windows.RoutedEventArgs.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "获取或设置对引发事件的对象的引用。"
  remarks: "任何冒泡路由实际经过超出引发它，元素的路由的事件的源的值对于任何隧道路由给引发它的元素不具有尚未隧道的事件，将为不同的值`sender`事件自变量类的参数。 这两个元素的事件中涉及属于最任何给定的处理程序中的重要性 (源，引发它，该元素或`sender`，当前正在处理它的元素) 依赖于解决你的处理程序的应用程序逻辑。       设置此属性通常只是当重写或实现其他[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]调整事件源，例如，当处理事件的类。 不建议重置明显的事件源的实例处理，尤其是在处理程序不会不将该事件标记为已处理时。       如果执行重置源报告的不同事件源，<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>起源引起作为第一个的源的报表将继续<xref:System.Windows.UIElement.RaiseEvent%2A>调用。</xref:System.Windows.UIElement.RaiseEvent%2A> </xref:System.Windows.RoutedEventArgs.OriginalSource%2A>"
  syntax:
    content: public object Source { get; set; }
    return:
      type: System.Object
      description: "引发事件的对象。"
  overload: System.Windows.RoutedEventArgs.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.RoutedEventArgs.#ctor
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs()
  nameWithType: RoutedEventArgs.RoutedEventArgs()
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs()
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs(RoutedEvent)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs(RoutedEvent,Object)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RoutedEventArgs.Handled
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: System.Windows.RoutedEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RoutedEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: System.Windows.RoutedEventArgs.OnSetSource(Object)
- uid: System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: System.Windows.RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: System.Windows.RoutedEventArgs.Source
- uid: System.Windows.RoutedEventArgs.#ctor*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs.RoutedEventArgs
- uid: System.Windows.RoutedEventArgs.Handled*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RoutedEventArgs.InvokeEventHandler
- uid: System.Windows.RoutedEventArgs.OnSetSource*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource
  nameWithType: RoutedEventArgs.OnSetSource
- uid: System.Windows.RoutedEventArgs.OriginalSource*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
