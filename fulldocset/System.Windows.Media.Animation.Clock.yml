### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Clock
  id: Clock
  children:
  - System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Clock.Completed
  - System.Windows.Media.Animation.Clock.Controller
  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Clock.CurrentGlobalTime
  - System.Windows.Media.Animation.Clock.CurrentIteration
  - System.Windows.Media.Animation.Clock.CurrentProgress
  - System.Windows.Media.Animation.Clock.CurrentState
  - System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  - System.Windows.Media.Animation.Clock.CurrentTime
  - System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  - System.Windows.Media.Animation.Clock.GetCanSlip
  - System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  - System.Windows.Media.Animation.Clock.HasControllableRoot
  - System.Windows.Media.Animation.Clock.IsPaused
  - System.Windows.Media.Animation.Clock.NaturalDuration
  - System.Windows.Media.Animation.Clock.Parent
  - System.Windows.Media.Animation.Clock.RemoveRequested
  - System.Windows.Media.Animation.Clock.SpeedChanged
  - System.Windows.Media.Animation.Clock.Stopped
  - System.Windows.Media.Animation.Clock.Timeline
  langs:
  - csharp
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
  type: Class
  summary: "维护运行时时序状态<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "A <xref:System.Windows.Media.Animation.Timeline>，其本身而言，实际上不进行任何内容而描述的时间段。</xref:System.Windows.Media.Animation.Timeline> 它是执行实际工作的时间线的时钟对象︰ 它维护与计时相关时间线的运行时状态。       在大多数情况下，时钟自动创建为时间线。 当你使用进行动画处理<xref:System.Windows.Media.Animation.Storyboard>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法中，时钟自动创建为时间线和动画和应用到其目标属性。</xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> </xref:System.Windows.Media.Animation.Storyboard> 有关示例，请参阅[如何︰ 使用情节提要属性进行动画处理](~/add/includes/ajax-current-ext-md.md)和[如何︰ 使用进行动画处理属性而无需情节提要](~/add/includes/ajax-current-ext-md.md)。       你还可以创建时钟显式使用<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>方法。</xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> 在性能要求较高的情况下，对进行动画处理大量类似对象，如管理自己的时钟使用可以提供性能优势。       在与结构相匹配的目录树中排列时钟<xref:System.Windows.Media.Animation.Timeline>对象从其创建树。</xref:System.Windows.Media.Animation.Timeline> 这样的计时树的根时钟可以以交互方式操作 （暂停、 恢复、 已停止，等等） 通过检索其<xref:System.Windows.Media.Animation.Clock.Controller%2A>.</xref:System.Windows.Media.Animation.Clock.Controller%2A> 不能直接控制非根时钟。       一旦创建，就无法修改时钟 （但可以对其进行处理）。      ## 使用时间线，事件处理程序时，将仅在计时器的时间线的时钟与之关联或 (对于<xref:System.Windows.Media.Animation.AnimationClock>对象) 是与属性相关联。</xref:System.Windows.Media.Animation.AnimationClock> 此原因 （和其他内容），不建议你使用<xref:System.Windows.Media.Animation.Timeline>作为计时器。</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: 'public class Clock : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  id: '#ctor(System.Windows.Media.Animation.Timeline)'
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Clock(Timeline)
  nameWithType: Clock.Clock(Timeline)
  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>类，使用指定<xref:System.Windows.Media.Animation.Clock.Timeline*>作为模板。</xref:System.Windows.Media.Animation.Clock.Timeline*> 新<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>对象没有任何子级。"
  syntax:
    content: protected Clock (System.Windows.Media.Animation.Timeline timeline);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "<> </> *1> 从构造此时钟。时钟不会创建任何子级<> *1> 对象，如果它们存在。"
  overload: System.Windows.Media.Animation.Clock.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Completed
  id: Completed
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Completed
  nameWithType: Clock.Completed
  fullName: System.Windows.Media.Animation.Clock.Completed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "当此时钟完全播放完毕时发生。"
  remarks: "如果此时钟时钟树的根时钟，它已完成播放后到达其活动的持续时间 （其中包括重复） 结尾，并且所有子项具有都达到各自活动持续时间的末尾。 如果此时钟是子时钟，它被视为完全完成播放时其所属达到时钟树的根时钟完成其活动持续时间和所有子时钟结束播放。       停止时钟不会触发其已完成的事件，但前移到其填充期间会。"
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Controller
  id: Controller
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Controller
  nameWithType: Clock.Controller
  fullName: System.Windows.Media.Animation.Clock.Controller
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取<xref href=&quot;System.Windows.Media.Animation.ClockController&quot;></xref>可用来启动、 暂停、 恢复、 查找、 跳过、 停止或删除此<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>。"
  remarks: "可以以交互方式控制仅根时钟。"
  syntax:
    content: public System.Windows.Media.Animation.ClockController Controller { get; }
    return:
      type: System.Windows.Media.Animation.ClockController
      description: "A <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>如果这是根时钟; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Clock.Controller*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  id: CurrentGlobalSpeed
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取与现实世界的时间相比的时钟时间的当前前进的速率。"
  syntax:
    content: public Nullable<double> CurrentGlobalSpeed { get; }
    return:
      type: System.Nullable{System.Double}
      description: "相对于现实世界的时间时钟时间的当前前进速率。 如果时钟停止，此属性返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  id: CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Clock.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "当更新时钟速度时发生。"
  remarks: "暂停、 恢复、 反转、 加速、 减速、 查找、 停止或更改时钟的交互速度使用<xref:System.Windows.Media.Animation.ClockController>触发此事件。</xref:System.Windows.Media.Animation.ClockController>       虽然此事件发生时<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>属性变为无效，并不一定意味着更改的属性。</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>"
  syntax:
    content: public event EventHandler CurrentGlobalSpeedInvalidated;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  id: CurrentGlobalTime
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取当前的全局时间，由建立[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]计时系统。"
  syntax:
    content: protected TimeSpan CurrentGlobalTime { get; }
    return:
      type: System.TimeSpan
      description: "当前全局时间[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]计时系统。"
  overload: System.Windows.Media.Animation.Clock.CurrentGlobalTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentIteration
  id: CurrentIteration
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
  fullName: System.Windows.Media.Animation.Clock.CurrentIteration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取此时钟的当前迭代。"
  remarks: "时钟的第一次迭代具有值为 1。       如果此时钟的时间线具有<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>设置`true`，完整迭代包含正向和反向迭代，而不仅仅是其中一种分段。</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>       无论其当前迭代中，定位时钟都会将其当前迭代为 1。 重新启动时钟还为 1 返回其当前迭代。"
  syntax:
    content: public Nullable<int> CurrentIteration { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "在其当前的活动内，此时钟的当前迭代或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果此时钟已停止。"
  overload: System.Windows.Media.Animation.Clock.CurrentIteration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentProgress
  id: CurrentProgress
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
  fullName: System.Windows.Media.Animation.Clock.CurrentProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取当前的进度<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>在其当前迭代。"
  remarks: "此属性的值指示<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>通过<xref:System.Windows.Media.Animation.Timeline.Duration%2A>此时钟的<xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</xref:System.Windows.Media.Animation.Clock.Timeline%2A></xref:System.Windows.Media.Animation.Timeline.Duration%2A>规范化</xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>       是一个时钟<xref:System.Windows.Media.Animation.ClockState>具有 1.0 CurrentProgress。</xref:System.Windows.Media.Animation.ClockState>      ## 使用时间线的事件处理程序时，将仅在计时器的时间线的时钟与之关联或 (对于<xref:System.Windows.Media.Animation.AnimationClock>对象) 是与属性相关联。</xref:System.Windows.Media.Animation.AnimationClock> 此原因 （和其他内容），不建议你使用<xref:System.Windows.Media.Animation.Timeline>作为计时器。</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: public Nullable<double> CurrentProgress { get; }
    return:
      type: System.Nullable{System.Double}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果此时钟为<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>，或 0.0 如果此时钟处于活动状态并将其<> *1> 具有<> *1> 的<xref:System.Windows.Duration.Forever*>; 否则为介于 0.0 和 1.0，该值指示在其当前迭代中此时钟的当前进度。</xref:System.Windows.Duration.Forever*> 值 0.0 表示没有取得进展，而值为 1.0 表示时钟在其当前迭代的结尾。"
  overload: System.Windows.Media.Animation.Clock.CurrentProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentState
  id: CurrentState
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentState
  nameWithType: Clock.CurrentState
  fullName: System.Windows.Media.Animation.Clock.CurrentState
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取一个值，该值指示当前是否时钟<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>， <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>，或<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>。"
  remarks: "请注意的系统时钟的 CurrentState 属性不会告诉你它是否已暂停。 若要确定是否已暂停时钟，请使用<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>属性。</xref:System.Windows.Media.Animation.Clock.IsPaused%2A>       <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>每当此属性的值更改时发生。</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>"
  syntax:
    content: public System.Windows.Media.Animation.ClockState CurrentState { get; }
    return:
      type: System.Windows.Media.Animation.ClockState
      description: '时钟的当前状态︰ <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>， <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>，或<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>。'
  overload: System.Windows.Media.Animation.Clock.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  id: CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentStateInvalidated
  nameWithType: Clock.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "发生时的系统时钟的<xref:System.Windows.Media.Animation.Clock.CurrentState*>更新属性。</xref:System.Windows.Media.Animation.Clock.CurrentState*>"
  remarks: "使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件时想要被通知当时钟启动时，如果停止或填充。</xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> <xref:System.Object>参数<xref:System.EventHandler>事件处理程序是<xref:System.Windows.Media.Animation.Clock>其状态无效。</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       暂停<xref:System.Windows.Media.Animation.Clock>不会更改其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.Clock> 若要要得到通知时钟变为暂停时，使用<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>       虽然此事件发生时<xref:System.Windows.Media.Animation.ClockState>变为无效，并不一定意味着<xref:System.Windows.Media.Animation.ClockState>更改︰<xref:System.Windows.Media.Animation.Clock>用于从切换<xref:System.Windows.Media.Animation.ClockState>到<xref:System.Windows.Media.Animation.ClockState>和再转回<xref:System.Windows.Media.Animation.ClockState>在同一个计时周期将导致此事件激发，但其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>属性不会实际更改。</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState>"
  syntax:
    content: public event EventHandler CurrentStateInvalidated;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentTime
  id: CurrentTime
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentTime
  nameWithType: Clock.CurrentTime
  fullName: System.Windows.Media.Animation.Clock.CurrentTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取此时钟的当前时间在其当前迭代。"
  remarks: "## 使用时间线的事件处理程序时，将仅在计时器的时间线的时钟与之关联或 (对于<xref:System.Windows.Media.Animation.AnimationClock>对象) 是与属性相关联。</xref:System.Windows.Media.Animation.AnimationClock> 此原因 （和其他内容），不建议你使用<xref:System.Windows.Media.Animation.Timeline>作为计时器。</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: public Nullable<TimeSpan> CurrentTime { get; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果此时钟为<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>; 否则为此时钟的当前时间。"
  overload: System.Windows.Media.Animation.Clock.CurrentTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  id: CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentTimeInvalidated
  nameWithType: Clock.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "发生时此时钟<xref:System.Windows.Media.Animation.Clock.CurrentTime*>将变为无效。</xref:System.Windows.Media.Animation.Clock.CurrentTime*>"
  remarks: 'A clock''s <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses. The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.'
  syntax:
    content: public event EventHandler CurrentTimeInvalidated;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  id: DiscontinuousTimeMovement
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: DiscontinuousTimeMovement()
  nameWithType: Clock.DiscontinuousTimeMovement()
  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "派生类中实现时，将时钟重复、 跳过，或查找时调用。"
  syntax:
    content: protected virtual void DiscontinuousTimeMovement ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.GetCanSlip
  id: GetCanSlip
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: GetCanSlip()
  nameWithType: Clock.GetCanSlip()
  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "返回是否<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>具有其自己的外部时间源，这可能需要使用计时系统的同步。"
  remarks: "媒体所播放<xref:System.Windows.Media.MediaTimeline>在<xref:System.Windows.Media.Animation.Storyboard>举例说明创建<xref:System.Windows.Media.Animation.Clock>将具有外部时间源 （例如视频剪辑） 可能需要与其他时间线内<xref:System.Windows.Media.Animation.Storyboard>.</xref:System.Windows.Media.Animation.Storyboard>同步</xref:System.Windows.Media.Animation.Clock></xref:System.Windows.Media.Animation.Storyboard>内</xref:System.Windows.Media.MediaTimeline>使用 请参阅<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>有关详细信息。</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>"
  syntax:
    content: protected virtual bool GetCanSlip ();
    parameters: []
    return:
      type: System.Boolean
      description: "返回**true**如果<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>时间，这可能需要使用计时系统; 同步具有其自己的外部源否则为**false**。"
  overload: System.Windows.Media.Animation.Clock.GetCanSlip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  id: GetCurrentTimeCore
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: GetCurrentTimeCore()
  nameWithType: Clock.GetCurrentTimeCore()
  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取此时钟的当前时间在其当前迭代。"
  remarks: "此方法使用的实现中<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>方法且不应在代码中直接调用。</xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>"
  syntax:
    content: protected virtual TimeSpan GetCurrentTimeCore ();
    parameters: []
    return:
      type: System.TimeSpan
      description: "如果它是活动或正在填充; 此时钟的当前时间否则为<xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot
  id: HasControllableRoot
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取一个值，该值指示是否这<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>是可控制的时钟树的一部分。"
  syntax:
    content: public bool HasControllableRoot { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此时钟与控制根时钟属于时钟树，或此时钟为本身可控制根;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Clock.HasControllableRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.IsPaused
  id: IsPaused
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: IsPaused
  nameWithType: Clock.IsPaused
  fullName: System.Windows.Media.Animation.Clock.IsPaused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取一个值，该值指示是否这<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>，或其任何父级，已暂停。"
  syntax:
    content: public bool IsPaused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>或其任何父级是暂停; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Clock.IsPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.NaturalDuration
  id: NaturalDuration
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
  fullName: System.Windows.Media.Animation.Clock.NaturalDuration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取此时钟的<xref:System.Windows.Media.Animation.Clock.Timeline*>.</xref:System.Windows.Media.Animation.Clock.Timeline*>的自然持续时间"
  remarks: "有关自然持续时间的详细信息，请参阅<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName>方法。</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Duration NaturalDuration { get; }
    return:
      type: System.Windows.Duration
      description: "此时钟，由其<xref:System.Windows.Media.Animation.Clock.Timeline*>.</xref:System.Windows.Media.Animation.Clock.Timeline*>自然持续时间"
  overload: System.Windows.Media.Animation.Clock.NaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Parent
  id: Parent
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Parent
  nameWithType: Clock.Parent
  fullName: System.Windows.Media.Animation.Clock.Parent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取是此时钟的父级的时钟。"
  syntax:
    content: public System.Windows.Media.Animation.Clock Parent { get; }
    return:
      type: System.Windows.Media.Animation.Clock
      description: "此时钟的父或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果此时钟为根。"
  overload: System.Windows.Media.Animation.Clock.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.RemoveRequested
  id: RemoveRequested
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: RemoveRequested
  nameWithType: Clock.RemoveRequested
  fullName: System.Windows.Media.Animation.Clock.RemoveRequested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "发生时<xref:System.Windows.Media.Animation.ClockController.Remove*>上调用方法<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>或其父时钟之一。</xref:System.Windows.Media.Animation.ClockController.Remove*>"
  syntax:
    content: public event EventHandler RemoveRequested;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.SpeedChanged
  id: SpeedChanged
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: SpeedChanged()
  nameWithType: Clock.SpeedChanged()
  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "当在派生类中实现时，每当时钟将调用开始、 跳过、 暂停、 恢复，或者当时钟的<xref:System.Windows.Media.Animation.ClockController.SpeedRatio*>被修改。</xref:System.Windows.Media.Animation.ClockController.SpeedRatio*>"
  syntax:
    content: protected virtual void SpeedChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.SpeedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Stopped
  id: Stopped
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Stopped()
  nameWithType: Clock.Stopped()
  fullName: System.Windows.Media.Animation.Clock.Stopped()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "将调用派生类中实现时，每当时钟已停止使用<xref:System.Windows.Media.Animation.ClockController.Stop*>方法。</xref:System.Windows.Media.Animation.ClockController.Stop*>"
  syntax:
    content: protected virtual void Stopped ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.Stopped*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Timeline
  id: Timeline
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Timeline
  nameWithType: Clock.Timeline
  fullName: System.Windows.Media.Animation.Clock.Timeline
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "获取从此时间线<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>已创建。"
  remarks: "修改时钟的<xref:System.Windows.Media.MediaTimeline>不会更新时钟; 必须从修改<xref:System.Windows.Media.Animation.Timeline>。</xref:System.Windows.Media.Animation.Timeline>创建新的时钟</xref:System.Windows.Media.MediaTimeline>"
  syntax:
    content: public System.Windows.Media.Animation.Timeline Timeline { get; }
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "从此时间线<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>已创建。"
  overload: System.Windows.Media.Animation.Clock.Timeline*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Clock(Timeline)
  nameWithType: Clock.Clock(Timeline)
  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)
- uid: System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation.Clock.Completed
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Completed
  nameWithType: Clock.Completed
  fullName: System.Windows.Media.Animation.Clock.Completed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.Animation.Clock.Controller
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Controller
  nameWithType: Clock.Controller
  fullName: System.Windows.Media.Animation.Clock.Controller
- uid: System.Windows.Media.Animation.ClockController
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ClockController
  nameWithType: ClockController
  fullName: System.Windows.Media.Animation.ClockController
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Clock.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.Animation.Clock.CurrentIteration
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
  fullName: System.Windows.Media.Animation.Clock.CurrentIteration
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentProgress
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
  fullName: System.Windows.Media.Animation.Clock.CurrentProgress
- uid: System.Windows.Media.Animation.Clock.CurrentState
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentState
  nameWithType: Clock.CurrentState
  fullName: System.Windows.Media.Animation.Clock.CurrentState
- uid: System.Windows.Media.Animation.ClockState
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ClockState
  nameWithType: ClockState
  fullName: System.Windows.Media.Animation.ClockState
- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentStateInvalidated
  nameWithType: Clock.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
- uid: System.Windows.Media.Animation.Clock.CurrentTime
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTime
  nameWithType: Clock.CurrentTime
  fullName: System.Windows.Media.Animation.Clock.CurrentTime
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTimeInvalidated
  nameWithType: Clock.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: DiscontinuousTimeMovement()
  nameWithType: Clock.DiscontinuousTimeMovement()
  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()
- uid: System.Windows.Media.Animation.Clock.GetCanSlip
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCanSlip()
  nameWithType: Clock.GetCanSlip()
  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCurrentTimeCore()
  nameWithType: Clock.GetCurrentTimeCore()
  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot
- uid: System.Windows.Media.Animation.Clock.IsPaused
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: IsPaused
  nameWithType: Clock.IsPaused
  fullName: System.Windows.Media.Animation.Clock.IsPaused
- uid: System.Windows.Media.Animation.Clock.NaturalDuration
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
  fullName: System.Windows.Media.Animation.Clock.NaturalDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.Clock.Parent
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Parent
  nameWithType: Clock.Parent
  fullName: System.Windows.Media.Animation.Clock.Parent
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.Clock.RemoveRequested
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: RemoveRequested
  nameWithType: Clock.RemoveRequested
  fullName: System.Windows.Media.Animation.Clock.RemoveRequested
- uid: System.Windows.Media.Animation.Clock.SpeedChanged
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: SpeedChanged()
  nameWithType: Clock.SpeedChanged()
  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()
- uid: System.Windows.Media.Animation.Clock.Stopped
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Stopped()
  nameWithType: Clock.Stopped()
  fullName: System.Windows.Media.Animation.Clock.Stopped()
- uid: System.Windows.Media.Animation.Clock.Timeline
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Timeline
  nameWithType: Clock.Timeline
  fullName: System.Windows.Media.Animation.Clock.Timeline
- uid: System.Windows.Media.Animation.Clock.#ctor*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Clock
  nameWithType: Clock.Clock
- uid: System.Windows.Media.Animation.Clock.Controller*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Controller
  nameWithType: Clock.Controller
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
- uid: System.Windows.Media.Animation.Clock.CurrentIteration*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
- uid: System.Windows.Media.Animation.Clock.CurrentProgress*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
- uid: System.Windows.Media.Animation.Clock.CurrentState*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentState
  nameWithType: Clock.CurrentState
- uid: System.Windows.Media.Animation.Clock.CurrentTime*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTime
  nameWithType: Clock.CurrentTime
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: DiscontinuousTimeMovement
  nameWithType: Clock.DiscontinuousTimeMovement
- uid: System.Windows.Media.Animation.Clock.GetCanSlip*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCanSlip
  nameWithType: Clock.GetCanSlip
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCurrentTimeCore
  nameWithType: Clock.GetCurrentTimeCore
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
- uid: System.Windows.Media.Animation.Clock.IsPaused*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: IsPaused
  nameWithType: Clock.IsPaused
- uid: System.Windows.Media.Animation.Clock.NaturalDuration*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
- uid: System.Windows.Media.Animation.Clock.Parent*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Parent
  nameWithType: Clock.Parent
- uid: System.Windows.Media.Animation.Clock.SpeedChanged*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: SpeedChanged
  nameWithType: Clock.SpeedChanged
- uid: System.Windows.Media.Animation.Clock.Stopped*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Stopped
  nameWithType: Clock.Stopped
- uid: System.Windows.Media.Animation.Clock.Timeline*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Timeline
  nameWithType: Clock.Timeline
