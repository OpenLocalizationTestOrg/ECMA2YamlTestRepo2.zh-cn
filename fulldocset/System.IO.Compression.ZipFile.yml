### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipFile
  id: ZipFile
  children:
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  - System.IO.Compression.ZipFile.OpenRead(System.String)
  langs:
  - csharp
  name: ZipFile
  nameWithType: ZipFile
  fullName: System.IO.Compression.ZipFile
  type: Class
  summary: "提供用于创建、 解压缩和打开 zip 存档的静态方法。"
  remarks: "> [!IMPORTANT]1> 到使用 ZipFile 类，必须添加对的引用`System.IO.Compression.FileSystem`项目; 中的程序集否则，你将得到以下错误消息，当尝试编译︰ **ZipFile 不存在当前上下文中的名称**。 有关如何在 Visual Studio 中添加到你的项目的引用的详细信息，请参阅[如何︰ 添加或删除引用使用引用管理器](~/add/includes/ajax-current-ext-md.md)。       用于操作的 zip 存档和其文件的方法将分布在三个类︰ zip 文件，<xref:System.IO.Compression.ZipArchive>和<xref:System.IO.Compression.ZipArchiveEntry>。</xref:System.IO.Compression.ZipArchiveEntry> </xref:System.IO.Compression.ZipArchive>      |到...|...使用 |  |---------|----------|  |从目录中创建的 zip 存档 |<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  |提取到目录的 zip 存档的内容 |<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  |将新文件添加到现有的 zip 存档 |<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  |检索 zip 存档中的文件 |<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  |检索 zip 存档中的文件的所有 |<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  |若要打开 zip 存档中包含单个文件的流 |<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  |从 zip 存档中删除文件 |<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|      不能使用 ZipFile 或<xref:System.IO.Compression.ZipFileExtensions>中的类[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]应用。</xref:System.IO.Compression.ZipFileExtensions> </xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName> 在[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]应用，你应使用以下类处理的压缩文件。      -   <xref:System.IO.Compression.ZipArchive>      -   <xref:System.IO.Compression.ZipArchiveEntry>      -   <xref:System.IO.Compression.DeflateStream>      -   <xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.DeflateStream></xref:System.IO.Compression.ZipArchiveEntry></xref:System.IO.Compression.ZipArchive>"
  example:
  - "This example shows how to create and extract a zip archive by using the ZipFile class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder.  \n  \n> [!TIP]\n>  To use the ZipFile class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/t-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/t-system.io.compression._3_1.vb)]"
  syntax:
    content: public static class ZipFile
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  id: CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String)
  nameWithType: ZipFile.CreateFromDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "创建包含的文件和目录的指定目录的 zip 存档。"
  remarks: "从文件系统的目录结构将保留在存档中。 如果此目录为空，则创建空存档。 此方法重载不存档中包括的基目录，并且不允许你指定的压缩级别。 如果你想要包括的基目录，或指定压缩级别，请调用<xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29>方法重载。</xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29>       如果存档已存在，<xref:System.IO.IOException>引发异常。</xref:System.IO.IOException> 如果在存档中已存在一个具有指定名称的项，第二个条目被创建具有相同的名称。       如果无法将目录中的文件添加到存档，存档左不完整和无效，并且该方法将引发<xref:System.IO.IOException>异常。</xref:System.IO.IOException>"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/m-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/m-system.io.compression._3_1.vb)]"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要存档，指定为相对或绝对路径的目录路径。 相对路径被指相对于当前工作目录。"
    - id: destinationArchiveFileName
      type: System.String
      description: "存档创建，指定为相对或绝对路径的路径。 相对路径被指相对于当前工作目录。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>是<xref:System.String>，仅包含空格，或包含至少一个无效字符。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> sourceDirectoryName </code>或<code> destinationArchiveFileName </code>，指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，和文件名称不能超过 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>无效或不存在 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>已存在。       -或者-无法打开指定的目录中的文件。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>指定的目录。       -或-调用方没有所要求的权限访问中指定的目录<code>sourceDirectoryName</code>中指定的文件或<code>destinationArchiveFileName</code>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>包含无效的格式。       -或者-zip 存档不支持写入。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "创建 zip 存档，其中包含的文件和目录指定的目录，使用指定的压缩级别，可以选择包含基目录。"
  remarks: "从文件系统的目录结构将保留在存档中。 如果此目录为空，则创建空存档。 使用此方法重载来指定压缩级别以及是否要包含在存档中的基目录。       如果存档已存在，<xref:System.IO.IOException>引发异常。</xref:System.IO.IOException> 如果在存档中已存在一个具有指定名称的项，第二个条目被创建具有相同的名称。       如果无法将目录中的文件添加到存档，存档左不完整和无效，并且该方法将引发<xref:System.IO.IOException>异常。</xref:System.IO.IOException>"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder. When compressing the archive, the base directory is included and the compression level is set to emphasize the speed of the operation over efficiency. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#2](~/add/codesnippet/csharp/42971baa-9b4d-4381-a7b3-_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#2](~/add/codesnippet/visualbasic/42971baa-9b4d-4381-a7b3-_1.vb)]"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要存档，指定为相对或绝对路径的目录路径。 相对路径被指相对于当前工作目录。"
    - id: destinationArchiveFileName
      type: System.String
      description: "存档创建，指定为相对或绝对路径的路径。 相对路径被指相对于当前工作目录。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "指示是否要创建项时强调速度或压缩有效性的枚举值之一。"
    - id: includeBaseDirectory
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括的目录名称`sourceDirectoryName`根目录下的存档;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>包括仅目录的内容。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>是<xref:System.String>，仅包含空格，或包含至少一个无效字符。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> sourceDirectoryName </code>或<code> destinationArchiveFileName </code>，指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，和文件名称不能超过 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>无效或不存在 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>已存在。       -或者-无法打开指定的目录中的文件。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>指定的目录。       -或-调用方没有所要求的权限访问中指定的目录<code>sourceDirectoryName</code>中指定的文件或<code>destinationArchiveFileName</code>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>包含无效的格式。       -或者-zip 存档不支持写入。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "创建 zip 存档，其中包含的文件和目录指定的目录，使用指定的压缩级别和字符编码进行条目名称，可以选择包含基目录。"
  remarks: "从文件系统的目录结构将保留在存档中。 如果此目录为空，则创建空存档。 使用此方法重载来指定压缩级别和字符编码，以及是否要包含在存档中的基目录。       如果存档已存在，<xref:System.IO.IOException>引发异常。</xref:System.IO.IOException> 如果在存档中已存在一个具有指定名称的项，第二个条目被创建具有相同的名称。       如果无法将目录中的文件添加到存档，存档左不完整和无效，并且该方法将引发<xref:System.IO.IOException>异常。</xref:System.IO.IOException>       如果`entryNameEncoding`设置一个值为非`null`，通过使用指定的编码进行编码条目名称。 如果指定的编码为 utf-8，编码标志 （在本地文件头的通用的位标志） 的语言设置为每个项，如果`entryNameEncoding`设置为`null`，条目名称是根据以下规则进行编码:-条目包含外的 ASCII 字符的名称范围，设置编码的标志，语言和 utf-8 用于编码的条目名称。      -对于仅包含 ASCII 字符的条目名称，设置语言编码标志，和当前的系统默认代码页用于编码条目名称。"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要存档，指定为相对或绝对路径的目录路径。 相对路径被指相对于当前工作目录。"
    - id: destinationArchiveFileName
      type: System.String
      description: "存档创建，指定为相对或绝对路径的路径。 相对路径被指相对于当前工作目录。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "指示是否要创建项时强调速度或压缩有效性的枚举值之一。"
    - id: includeBaseDirectory
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括的目录名称`sourceDirectoryName`根目录下的存档;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>包括仅目录的内容。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "读取时要使用的编码，或在该存档文件中写入条目名称。 仅当需要与 zip 存档工具和不支持 utf-8 编码项名称的库的互操作性的编码时，请指定此参数的值。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>是<xref:System.String>，仅包含空格，或包含至少一个无效字符。       -或-<code>entryNameEncoding</code>设置为 Unicode 编码不是 utf-8。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> sourceDirectoryName </code>或<code> destinationArchiveFileName </code>，指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，和文件名称不能超过 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>无效或不存在 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>已存在。       -或者-无法打开指定的目录中的文件。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>指定的目录。       -或-调用方没有所要求的权限访问中指定的目录<code>sourceDirectoryName</code>中指定的文件或<code>destinationArchiveFileName</code>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>包含无效的格式。       -或者-zip 存档不支持写入。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  id: ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: ExtractToDirectory(String,String)
  nameWithType: ZipFile.ExtractToDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "所有文件都解压缩到的目录将指定的 zip 存档中的文件系统上。"
  remarks: "此方法创建指定的目录及其所有子目录。 目标目录不能已存在。 验证中的路径与异常`destinationDirectoryName`或`sourceArchiveFileName`参数引发之前提取。 否则，如果提取过程中发生错误，保持部分提取存档。 每个提取的文件具有指定的目录的同一相对路径`destinationDirectoryName`作为其源项均具有到存档的根。"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive and extracts that content to a new folder. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/m-system.io.compression._5_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/m-system.io.compression._5_1.vb)]"
  syntax:
    content: public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: "要解压缩存档的路径。"
    - id: destinationDirectoryName
      type: System.String
      description: "要在其中放置所提取的文件，指定为相对或绝对路径的目录路径。 相对路径被指相对于当前工作目录。"
  overload: System.IO.Compression.ZipFile.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code>或<code>sourceArchiveFileName</code>是<xref:System.String>，仅包含空格，或包含至少一个无效字符。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>or <code>sourceArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "中的指定的路径<code> destinationDirectoryName </code>或<code> sourceArchiveFileName </code>超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，和文件名称不能超过 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目录<code> destinationDirectoryName </code>已存在。       -或-存档中的条目的名称是<xref:System.String>，仅包含空格，或包含至少一个无效字符。</xref:System.String>       -或-提取存档条目会创建超出指定的目录的文件<code> destinationDirectoryName </code>。 （例如，这可能会发生如果条目名中包含父目录访问器。）      -或者-要提取的存档项具有相同的名称为已经从同一存档提取的项。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限访问存档或目标目录。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>或<code>sourceArchiveFileName</code>包含无效的格式。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceArchiveFileName</code>未找到。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "指定存档<code> sourceArchiveFileName </code>不是有效的 zip 存档。       -或者-存档条目找不到或已损坏。       -或者-存档条目已使用不支持的压缩方法进行压缩。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  id: ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: ExtractToDirectory(String,String,Encoding)
  nameWithType: ZipFile.ExtractToDirectory(String,String,Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "所有文件都解压缩到的目录将指定的 zip 存档中的文件系统上，并使用指定的字符编码条目名称。"
  remarks: "此方法创建指定的目录及其所有子目录。 目标目录不能已存在。 验证中的路径与异常`destinationDirectoryName`或`sourceArchiveFileName`参数引发之前提取。 否则，如果提取过程中发生错误，保持部分提取存档。 每个提取的文件具有指定的目录的同一相对路径`destinationDirectoryName`作为其源项均具有到存档的根。       如果`entryNameEncoding`设置一个值为非`null`，条目名称解码根据下列规则:-其中编码标志 （在本地文件头的通用的位标志） 的语言不设置，通过使用指定的编码解码的名称的项的项名称。      -对于其中设置语言编码标志的条目，通过使用 utf-8 解码条目名称。       如果`entryNameEncoding`设置为`null`，条目名称解码根据下列规则:-其中编码标志 （在本地文件头的通用的位标志） 的语言不设置，名称进行解码通过使用当前的系统默认代码页的条目的条目。      -对于其中设置语言编码标志的条目，通过使用 utf-8 解码条目名称。"
  syntax:
    content: public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: "要解压缩存档的路径。"
    - id: destinationDirectoryName
      type: System.String
      description: "要在其中放置所提取的文件，指定为相对或绝对路径的目录路径。 相对路径被指相对于当前工作目录。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "读取时要使用的编码，或在该存档文件中写入条目名称。 仅当需要与 zip 存档工具和不支持 utf-8 编码项名称的库的互操作性的编码时，请指定此参数的值。"
  overload: System.IO.Compression.ZipFile.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code>或<code>sourceArchiveFileName</code>是<xref:System.String>，仅包含空格，或包含至少一个无效字符。       -或-<code>entryNameEncoding</code>设置为 Unicode 编码不是 utf-8。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>or <code>sourceArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "中的指定的路径<code> destinationDirectoryName </code>或<code> sourceArchiveFileName </code>超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，和文件名称不能超过 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路径无效 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目录<code> destinationDirectoryName </code>已存在。       -或-存档中的条目的名称是<xref:System.String>，仅包含空格，或包含至少一个无效字符。</xref:System.String>       -或-提取存档条目会创建超出指定的目录的文件<code> destinationDirectoryName </code>。 （例如，这可能会发生如果条目名中包含父目录访问器。）      -或者-要提取的存档项具有相同的名称为已经从同一存档提取的项。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限访问存档或目标目录。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>或<code>sourceArchiveFileName</code>包含无效的格式。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceArchiveFileName</code>未找到。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "指定存档<code> sourceArchiveFileName </code>不是有效的 zip 存档。       -或者-存档条目找不到或已损坏。       -或者-存档条目已使用不支持的压缩方法进行压缩。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: Open(String,ZipArchiveMode)
  nameWithType: ZipFile.Open(String,ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "打开在指定的路径和指定的模式的 zip 存档。"
  remarks: "当你将设置`mode`参数<xref:System.IO.Compression.ZipArchiveMode>，使用打开存档<xref:System.IO.FileMode>从<xref:System.IO.FileMode>枚举为的文件模式值。</xref:System.IO.FileMode> </xref:System.IO.FileMode> </xref:System.IO.Compression.ZipArchiveMode> 如果存档不存在，<xref:System.IO.FileNotFoundException>引发异常。</xref:System.IO.FileNotFoundException> 设置`mode`参数<xref:System.IO.Compression.ZipArchiveMode>等效于调用<xref:System.IO.Compression.ZipFile.OpenRead%2A>方法。</xref:System.IO.Compression.ZipFile.OpenRead%2A> </xref:System.IO.Compression.ZipArchiveMode>       当你将设置`mode`参数<xref:System.IO.Compression.ZipArchiveMode>，使用打开存档<xref:System.IO.FileMode?displayProperty=fullName>作为文件模式值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果存档已存在，<xref:System.IO.IOException>引发。</xref:System.IO.IOException>       当你将设置`mode`参数<xref:System.IO.Compression.ZipArchiveMode>，使用打开存档<xref:System.IO.FileMode?displayProperty=fullName>作为文件模式值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果存在存档，它打开。 可以修改现有条目，并可以创建新项。 如果存档不存在，则创建新存档;但是，创建在 zip 存档<xref:System.IO.Compression.ZipArchiveMode>模式不是创建在尽可能高效<xref:System.IO.Compression.ZipArchiveMode>模式。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to open a zip archive in the update mode and add an entry to the archive.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/7e49a288-de57-4354-b009-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/7e49a288-de57-4354-b009-_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "若要打开，存档的路径指定为相对或绝对路径。 相对路径被指相对于当前工作目录。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "指定的操作的允许打开的存档中的项的枚举值之一。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "打开的 zip 存档中。"
  overload: System.IO.Compression.ZipFile.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code>是<xref:System.String>，仅包含空格，或包含至少一个无效字符。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> archiveFileName </code>，指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，和文件名称不能超过 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>无效或不存在 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>无法打开。       -<code>mode</code>设置为<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但中指定的文件<code>archiveFileName</code>已存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>指定的目录。       -或-调用方没有所要求的权限访问该文件中指定<code>archiveFileName</code>。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>指定了一个无效值。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>mode</code>设置为<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但中指定的文件<code>archiveFileName</code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>包含无效的格式。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>无法解释作为 zip 存档。       -<code>mode</code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但一个条目缺失或已损坏，无法读取。       -<code>mode</code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但有一项不太大而无法放入内存。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: Open(String,ZipArchiveMode,Encoding)
  nameWithType: ZipFile.Open(String,ZipArchiveMode,Encoding)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "在指定的模式，以及通过使用指定的字符编码条目名称，请打开指定的路径、 zip 存档。"
  remarks: "当你将设置`mode`参数<xref:System.IO.Compression.ZipArchiveMode>，使用打开存档<xref:System.IO.FileMode?displayProperty=fullName>作为文件模式值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果存档不存在，<xref:System.IO.FileNotFoundException>引发异常。</xref:System.IO.FileNotFoundException> 设置`mode`参数<xref:System.IO.Compression.ZipArchiveMode>等效于调用<xref:System.IO.Compression.ZipFile.OpenRead%2A>方法。</xref:System.IO.Compression.ZipFile.OpenRead%2A> </xref:System.IO.Compression.ZipArchiveMode>       当你将设置`mode`参数<xref:System.IO.Compression.ZipArchiveMode>，使用打开存档<xref:System.IO.FileMode?displayProperty=fullName>作为文件模式值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果存档已存在，<xref:System.IO.IOException>引发。</xref:System.IO.IOException>       当你将设置`mode`参数<xref:System.IO.Compression.ZipArchiveMode>，使用打开存档<xref:System.IO.FileMode?displayProperty=fullName>作为文件模式值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果存在存档，它打开。 可以修改现有条目，并可以创建新项。 如果存档不存在，则创建新存档;但是，创建在 zip 存档<xref:System.IO.Compression.ZipArchiveMode>模式不是创建在尽可能高效<xref:System.IO.Compression.ZipArchiveMode>模式。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>       当打开读取的 zip 存档文件和`entryNameEncoding`设置为`null`，条目名称解码根据下列规则:-时未设置编码标志 （在本地文件头的通用的位标志），该语言当前的系统默认代码页用于解码条目名称。      -当设置语言编码标志，用于对条目名称解码 utf-8。       当打开读取的 zip 存档文件和`entryNameEncoding`设置一个值为非`null`，条目名称解码根据下列规则:-编码标志的语言未设置时，指定`entryNameEncoding`用于解码条目名称。      -当设置语言编码标志，用于对条目名称解码 utf-8。       当你编写以将文件存档和`entryNameEncoding`设置为`null`，条目名称是根据以下规则进行编码:-条目包含外的 ASCII 字符的名称范围，设置编码的标志，语言和条目名称编码使用 utf-8。      -对于仅包含 ASCII 字符的条目名称，未设置语言编码标志，并通过使用当前的系统默认代码页的条目名称进行编码。       当你编写以将文件存档和`entryNameEncoding`设置一个值为非`null`，指定`entryNameEncoding`用于转换为字节编码条目名称。 仅当指定的编码为 utf-8 编码时设置编码标志 （在本地文件头的通用的位标志） 的语言。"
  syntax:
    content: public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "若要打开，存档的路径指定为相对或绝对路径。 相对路径被指相对于当前工作目录。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "指定允许的操作打开的存档中的项的枚举值之一。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "读取时要使用的编码，或在该存档文件中写入条目名称。 仅当需要与 zip 存档工具和不支持 utf-8 编码项名称的库的互操作性的编码时，请指定此参数的值。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "打开的 zip 存档中。"
  overload: System.IO.Compression.ZipFile.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code>是<xref:System.String>，仅包含空格，或包含至少一个无效字符。       -或-<code>entryNameEncoding</code>设置为 Unicode 编码不是 utf-8。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> archiveFileName </code>，指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，和文件名称不能超过 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>无效或不存在 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>无法打开。       -<code>mode</code>设置为<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但中指定的文件<code>archiveFileName</code>已存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>指定的目录。       -或-调用方没有所要求的权限访问该文件中指定<code>archiveFileName</code>。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>指定了一个无效值。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>mode</code>设置为<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但中指定的文件<code>archiveFileName</code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>包含无效的格式。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>无法解释作为 zip 存档。       -<code>mode</code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但一个条目缺失或已损坏，无法读取。       -<code>mode</code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但有一项不太大而无法放入内存。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: ZipFile.OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "打开在指定路径用于读取的 zip 存档。"
  remarks: "此方法等效于调用<xref:System.IO.Compression.ZipFile.Open%2A>方法和设置`mode`参数到<xref:System.IO.Compression.ZipArchiveMode>。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipFile.Open%2A> 使用打开存档<xref:System.IO.FileMode?displayProperty=fullName>作为文件模式值。</xref:System.IO.FileMode?displayProperty=fullName> 如果存档不存在，<xref:System.IO.FileNotFoundException>引发异常。</xref:System.IO.FileNotFoundException>"
  example:
  - "The following example shows how to open a zip archive for reading.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/m-system.io.compression._2_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/m-system.io.compression._2_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "若要打开，存档的路径指定为相对或绝对路径。 相对路径被指相对于当前工作目录。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "打开的 zip 存档中。"
  overload: System.IO.Compression.ZipFile.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code>是<xref:System.String>，仅包含空格，或包含至少一个无效字符。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> archiveFileName </code>，指定的路径和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，和文件名称不能超过 260 个字符。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>无效或不存在 （例如，它位于未映射的驱动器上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>无法打开。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>指定的目录。       -或-调用方没有所要求的权限访问该文件中指定<code>archiveFileName</code>。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的文件<code> archiveFileName </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>包含无效的格式。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>无法解释作为 zip 存档。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String)
  nameWithType: ZipFile.CreateFromDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory(String,String)
  nameWithType: ZipFile.ExtractToDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String)
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory(String,String,Encoding)
  nameWithType: ZipFile.ExtractToDirectory(String,String,Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String,Encoding)
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open(String,ZipArchiveMode)
  nameWithType: ZipFile.Open(String,ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode)
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  nameWithType: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open(String,ZipArchiveMode,Encoding)
  nameWithType: ZipFile.Open(String,ZipArchiveMode,Encoding)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode,Encoding)
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: OpenRead(String)
  nameWithType: ZipFile.OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(String)
- uid: System.IO.Compression.ZipFile.CreateFromDirectory*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory
  nameWithType: ZipFile.CreateFromDirectory
- uid: System.IO.Compression.ZipFile.ExtractToDirectory*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory
  nameWithType: ZipFile.ExtractToDirectory
- uid: System.IO.Compression.ZipFile.Open*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open
  nameWithType: ZipFile.Open
- uid: System.IO.Compression.ZipFile.OpenRead*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: OpenRead
  nameWithType: ZipFile.OpenRead
