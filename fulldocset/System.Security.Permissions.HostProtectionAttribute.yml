### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.HostProtectionAttribute
  id: HostProtectionAttribute
  children:
  - System.Security.Permissions.HostProtectionAttribute.#ctor
  - System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.HostProtectionAttribute.CreatePermission
  - System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  - System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  - System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  - System.Security.Permissions.HostProtectionAttribute.Resources
  - System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  - System.Security.Permissions.HostProtectionAttribute.SharedState
  - System.Security.Permissions.HostProtectionAttribute.Synchronization
  - System.Security.Permissions.HostProtectionAttribute.UI
  langs:
  - csharp
  name: HostProtectionAttribute
  nameWithType: HostProtectionAttribute
  fullName: System.Security.Permissions.HostProtectionAttribute
  type: Class
  summary: "允许使用声明性安全操作来确定宿主保护要求。 此类不能被继承。"
  remarks: "此属性只影响非托管的应用该承载公共语言运行时和实现主机保护，例如 SQL Server。 如果在客户端应用程序或主机受保护的服务器上运行代码，该属性&quot;也就不复存在&quot;;它不是检测到，因此不会应用。 当应用时中的链接要求创建的安全操作结果基于的主机资源类或方法公开。      1> [!IMPORTANT]&1;> 此特性的目的是强制实施特定于宿主的编程模型指导原则，非安全行为。  链接要求会用来与编程模型要求的一致性检查，尽管 HostProtectionAttribute 不是安全权限。       如果主机不具有编程模型要求，链接要求不会发生。       此属性用于标识以下:-方法或类，它们不适合宿主编程模型，但在其他方面良性。      -方法或类，不适合的主机的编程模型，并可能导致服务器托管的用户代码。      -方法或类，它们不适合宿主编程模型，并可能导致不稳定的服务器进程本身。      1> [!NOTE]&1;> 如果要创建的类库，是由可能在受保护的宿主环境中执行的应用程序调用，应将此特性应用于公开的成员<xref:System.Security.Permissions.HostProtectionResource>资源类别。</xref:System.Security.Permissions.HostProtectionResource> 具有此属性的.NET Framework 类库成员会导致仅直接调用方要检查。  您的库成员也必须以相同的方式导致其直接调用方的检查。      1> [!NOTE]&1;> 不使用[Ngen.exe （本机映像生成器）](~/add/includes/ajax-current-ext-md.md)若要创建受 HostProtectionAttribute 的程序集的本机映像。 在完全信任环境中，始终加载映像，而不考虑 HostProtectionAttribute，并且在部分信任环境中的映像不加载。"
  example:
  - "The following code example illustrates the use of the HostProtectionAttribute attribute with a variety of <xref:System.Security.Permissions.HostProtectionResource> values.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/csharp/t-system.security.permis_7_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/cpp/t-system.security.permis_7_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/visualbasic/t-system.security.permis_7_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class HostProtectionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor
  id: '#ctor'
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: HostProtectionAttribute()
  nameWithType: HostProtectionAttribute.HostProtectionAttribute()
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.HostProtectionAttribute&quot;></xref>类使用默认值。"
  remarks: "此构造函数创建<xref:System.Security.Permissions.HostProtectionAttribute>其所有的布尔属性设置为`false`。</xref:System.Security.Permissions.HostProtectionAttribute>"
  syntax:
    content: public HostProtectionAttribute ();
    parameters: []
  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: HostProtectionAttribute(SecurityAction)
  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.HostProtectionAttribute&quot;></xref>使用指定的类<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>值。"
  remarks: "不应使用此构造函数。 它适用于基础结构使用。"
  syntax:
    content: public HostProtectionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "之一<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>值。"
  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>action</code>is not <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: HostProtectionAttribute.CreatePermission()
  fullName: System.Security.Permissions.HostProtectionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "创建并返回一个新宿主保护权限。"
  remarks: "绝不能由应用程序代码，应仅由安全系统中，调用此方法。       在编译时，属性将安全声明转换为元数据中序列化形式。 从对应于此方法返回的属性的权限创建元数据中的声明性安全数据。"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Security.IPermission&quot;> </xref>与当前特性对应。"
  overload: System.Security.Permissions.HostProtectionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  id: ExternalProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否公开外部进程管理。"
  remarks: "公开外部进程管理的代码可以创建或销毁其他进程。"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the ExternalProcessMgmt property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/csharp/p-system.security.permis_2_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/cpp/p-system.security.permis_2_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/visualbasic/p-system.security.permis_2_1.vb)]"
  syntax:
    content: public bool ExternalProcessMgmt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果公开外部进程管理;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  id: ExternalThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否公开外部线程处理。"
  remarks: "公开外部线程处理的代码会创建或操作而不是其自身，这可能是对宿主有害的线程。"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the ExternalThreading property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/csharp/p-system.security.permis_8_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/cpp/p-system.security.permis_8_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/visualbasic/p-system.security.permis_8_1.vb)]"
  syntax:
    content: public bool ExternalThreading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果公开外部线程处理;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  id: MayLeakOnAbort
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否当操作终止时资源可能泄漏内存。"
  remarks: "如果不受安全句柄或某些其他方式来确保资源的释放，则代码可能会导致终止时，资源泄漏。"
  syntax:
    content: public bool MayLeakOnAbort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果资源可能泄漏终止; 上的内存，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.Resources
  id: Resources
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: System.Security.Permissions.HostProtectionAttribute.Resources
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置标志指定可能对宿主有害的功能的类别。"
  remarks: "<xref:System.Security.Permissions.HostProtectionResource>标志指定可能对宿主有害的资源的方法或类公开。</xref:System.Security.Permissions.HostProtectionResource>"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the Resources property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/csharp/p-system.security.permis_17_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/cpp/p-system.security.permis_17_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/visualbasic/p-system.security.permis_17_1.vb)]"
  syntax:
    content: public System.Security.Permissions.HostProtectionResource Resources { get; set; }
    return:
      type: System.Security.Permissions.HostProtectionResource
      description: "按位组合<xref href=&quot;System.Security.Permissions.HostProtectionResource&quot;></xref>值。 默认值是<xref href=&quot;System.Security.Permissions.HostProtectionResource&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.Resources*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  id: SecurityInfrastructure
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否公开安全基础结构。"
  remarks: "使用<xref:System.Security.Principal.WindowsIdentity>要模拟的用户对象是公开安全基础结构的示例。</xref:System.Security.Principal.WindowsIdentity>"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SecurityInfrastructure property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/csharp/p-system.security.permis_19_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/cpp/p-system.security.permis_19_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/visualbasic/p-system.security.permis_19_1.vb)]"
  syntax:
    content: public bool SecurityInfrastructure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果公开安全基础结构;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  id: SelfAffectingProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否公开自影响的进程管理。"
  remarks: "自影响的进程管理代码可能会退出当前过程，终止服务器。"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SelfAffectingProcessMgmt property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/csharp/p-system.security.permis_26_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/cpp/p-system.security.permis_26_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/visualbasic/p-system.security.permis_26_1.vb)]"
  syntax:
    content: public bool SelfAffectingProcessMgmt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果公开自影响的进程管理，则;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  id: SelfAffectingThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否公开自影响的线程处理。"
  remarks: "自影响的线程处理操作中只会影响用户代码的方式的线程。"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SelfAffectingThreading property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_3_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_3_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_3_1.vb)]"
  syntax:
    content: public bool SelfAffectingThreading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果公开自影响的线程处理;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState
  id: SharedState
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: System.Security.Permissions.HostProtectionAttribute.SharedState
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否公开共享的状态。"
  remarks: "SharedState 时`true`，它指示是否公开状态，可能会在线程间共享。"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SharedState property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_15_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_15_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_15_1.vb)]"
  syntax:
    content: public bool SharedState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果公开共享的状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.SharedState*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization
  id: Synchronization
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: System.Security.Permissions.HostProtectionAttribute.Synchronization
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否公开同步。"
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the Synchronization property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/csharp/p-system.security.permis_4_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/cpp/p-system.security.permis_4_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/visualbasic/p-system.security.permis_4_1.vb)]"
  syntax:
    content: public bool Synchronization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果公开同步;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.Synchronization*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.UI
  id: UI
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: System.Security.Permissions.HostProtectionAttribute.UI
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "获取或设置一个值，该值指示是否公开用户界面。"
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the UI property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_12_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_12_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_12_1.vb)]"
  syntax:
    content: public bool UI { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果公开用户界面;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.HostProtectionAttribute.UI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute()
  nameWithType: HostProtectionAttribute.HostProtectionAttribute()
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute()
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute(SecurityAction)
  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: HostProtectionAttribute.CreatePermission()
  fullName: System.Security.Permissions.HostProtectionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
- uid: System.Security.Permissions.HostProtectionAttribute.Resources
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: System.Security.Permissions.HostProtectionAttribute.Resources
- uid: System.Security.Permissions.HostProtectionResource
  parent: System.Security.Permissions
  isExternal: false
  name: HostProtectionResource
  nameWithType: HostProtectionResource
  fullName: System.Security.Permissions.HostProtectionResource
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: System.Security.Permissions.HostProtectionAttribute.SharedState
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: System.Security.Permissions.HostProtectionAttribute.Synchronization
- uid: System.Security.Permissions.HostProtectionAttribute.UI
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: System.Security.Permissions.HostProtectionAttribute.UI
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute
  nameWithType: HostProtectionAttribute.HostProtectionAttribute
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: HostProtectionAttribute.CreatePermission
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
- uid: System.Security.Permissions.HostProtectionAttribute.Resources*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
- uid: System.Security.Permissions.HostProtectionAttribute.UI*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: UI
  nameWithType: HostProtectionAttribute.UI
