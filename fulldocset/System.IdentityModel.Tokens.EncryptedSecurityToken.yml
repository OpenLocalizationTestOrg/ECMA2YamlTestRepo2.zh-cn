### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken
  id: EncryptedSecurityToken
  children:
  - System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials
  - System.IdentityModel.Tokens.EncryptedSecurityToken.Id
  - System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.EncryptedSecurityToken.Token
  - System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo
  langs:
  - csharp
  name: EncryptedSecurityToken
  nameWithType: EncryptedSecurityToken
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken
  type: Class
  summary: "处理的令牌的加密包装令牌的不以本机方式支持它。"
  remarks: "例如，<xref:System.IdentityModel.Tokens.SamlSecurityToken>无法加密本身，才能发出加密的 SAML11 断言，将包装<xref:System.IdentityModel.Tokens.SamlSecurityToken>与 EncryptedSecurityToken 并提供相应<xref:System.IdentityModel.Tokens.EncryptingCredentials>.</xref:System.IdentityModel.Tokens.EncryptingCredentials> </xref:System.IdentityModel.Tokens.SamlSecurityToken> </xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: 'public class EncryptedSecurityToken : System.IdentityModel.Tokens.SecurityToken'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: EncryptedSecurityToken(SecurityToken,EncryptingCredentials)
  nameWithType: EncryptedSecurityToken.EncryptedSecurityToken(SecurityToken,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptedSecurityToken(SecurityToken,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;></xref>通过使用指定的加密凭据指定的标记的类。"
  remarks: "从<xref:System.IdentityModel.Tokens.SecurityToken>.</xref:System.IdentityModel.Tokens.SecurityToken>继承"
  syntax:
    content: public EncryptedSecurityToken (System.IdentityModel.Tokens.SecurityToken token, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "要加密的令牌。"
    - id: encryptingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "要使用对令牌进行加密的凭据。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: EncryptedSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: EncryptedSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "要添加。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials
  id: EncryptingCredentials
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: EncryptingCredentials
  nameWithType: EncryptedSecurityToken.EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取要用于加密的凭据。"
  syntax:
    content: public System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "要用于加密的凭据。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: EncryptedSecurityToken.Id
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取安全令牌的唯一标识符。"
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "安全令牌的唯一标识符。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: EncryptedSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返回一个值，该值指示此实例的密钥标识符能否解析为指定的密钥标识符。"
  remarks: "从<xref:System.IdentityModel.Tokens.SecurityToken>.</xref:System.IdentityModel.Tokens.SecurityToken>继承"
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "要与此实例进行比较的密钥标识符子句。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的密钥标识符子句可以解决此实例;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: EncryptedSecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取指定的密钥标识符子句的密钥。"
  remarks: "从<xref:System.IdentityModel.Tokens.SecurityToken>.</xref:System.IdentityModel.Tokens.SecurityToken>继承"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "若要获取密钥的密钥标识符子句。"
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "键。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: EncryptedSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取与安全令牌相关联的加密密钥。"
  remarks: "从<xref:System.IdentityModel.Tokens.SecurityToken>.</xref:System.IdentityModel.Tokens.SecurityToken>继承"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "与安全令牌相关联的密钥集。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Token
  id: Token
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: Token
  nameWithType: EncryptedSecurityToken.Token
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.Token
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取加密的令牌。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken Token { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "加密的令牌。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.Token*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: EncryptedSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取安全令牌无效的时间的最初时刻。"
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "中的安全令牌有效时间瞬间。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: EncryptedSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "获取的最后时刻安全令牌无效。"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "即时中安全令牌有效时间的最后一个。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: EncryptedSecurityToken(SecurityToken,EncryptingCredentials)
  nameWithType: EncryptedSecurityToken.EncryptedSecurityToken(SecurityToken,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptedSecurityToken(SecurityToken,EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: EncryptedSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: EncryptedSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptedSecurityToken.EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Id
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: Id
  nameWithType: EncryptedSecurityToken.Id
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: EncryptedSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: EncryptedSecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: EncryptedSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Token
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: Token
  nameWithType: EncryptedSecurityToken.Token
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.Token
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: EncryptedSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: EncryptedSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: EncryptedSecurityToken
  nameWithType: EncryptedSecurityToken.EncryptedSecurityToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: EncryptedSecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: EncryptedSecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptedSecurityToken.EncryptingCredentials
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Id*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: Id
  nameWithType: EncryptedSecurityToken.Id
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: EncryptedSecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: ResolveKeyIdentifierClause
  nameWithType: EncryptedSecurityToken.ResolveKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: EncryptedSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Token*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: Token
  nameWithType: EncryptedSecurityToken.Token
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: EncryptedSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.EncryptedSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: EncryptedSecurityToken.ValidTo
