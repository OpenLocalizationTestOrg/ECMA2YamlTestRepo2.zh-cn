### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.MathObject
  id: MathObject
  children:
  - Microsoft.JScript.MathObject.abs(System.Double)
  - Microsoft.JScript.MathObject.acos(System.Double)
  - Microsoft.JScript.MathObject.asin(System.Double)
  - Microsoft.JScript.MathObject.atan(System.Double)
  - Microsoft.JScript.MathObject.atan2(System.Double,System.Double)
  - Microsoft.JScript.MathObject.ceil(System.Double)
  - Microsoft.JScript.MathObject.cos(System.Double)
  - Microsoft.JScript.MathObject.E
  - Microsoft.JScript.MathObject.exp(System.Double)
  - Microsoft.JScript.MathObject.floor(System.Double)
  - Microsoft.JScript.MathObject.LN10
  - Microsoft.JScript.MathObject.LN2
  - Microsoft.JScript.MathObject.log(System.Double)
  - Microsoft.JScript.MathObject.LOG10E
  - Microsoft.JScript.MathObject.LOG2E
  - Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])
  - Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])
  - Microsoft.JScript.MathObject.PI
  - Microsoft.JScript.MathObject.pow(System.Double,System.Double)
  - Microsoft.JScript.MathObject.random
  - Microsoft.JScript.MathObject.round(System.Double)
  - Microsoft.JScript.MathObject.sin(System.Double)
  - Microsoft.JScript.MathObject.sqrt(System.Double)
  - Microsoft.JScript.MathObject.SQRT1_2
  - Microsoft.JScript.MathObject.SQRT2
  - Microsoft.JScript.MathObject.tan(System.Double)
  langs:
  - csharp
  name: MathObject
  nameWithType: MathObject
  fullName: Microsoft.JScript.MathObject
  type: Class
  summary: "为三角函数、 对数函数和其他通用数学函数提供常数和静态方法。 此类所属的内置对象模型类别。"
  syntax:
    content: 'public class MathObject : Microsoft.JScript.JSObject'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.JSObject.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.abs(System.Double)
  id: abs(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: abs(Double)
  nameWithType: MathObject.abs(Double)
  fullName: Microsoft.JScript.MathObject.abs(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数字的绝对值。"
  syntax:
    content: public static double abs (double d);
    parameters:
    - id: d
      type: System.Double
      description: "要计算的绝对值的数值的数字。"
    return:
      type: System.Double
      description: "绝对值的数值的<code> d </code>。"
  overload: Microsoft.JScript.MathObject.abs*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.acos(System.Double)
  id: acos(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: acos(Double)
  nameWithType: MathObject.acos(Double)
  fullName: Microsoft.JScript.MathObject.acos(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数字的反余弦值。"
  syntax:
    content: public static double acos (double x);
    parameters:
    - id: x
      type: System.Double
      description: "要计算的反余弦值的数字。"
    return:
      type: System.Double
      description: "反余弦值<code> x </code>，以弧度为单位。"
  overload: Microsoft.JScript.MathObject.acos*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.asin(System.Double)
  id: asin(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: asin(Double)
  nameWithType: MathObject.asin(Double)
  fullName: Microsoft.JScript.MathObject.asin(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数字的反正弦值。"
  syntax:
    content: public static double asin (double x);
    parameters:
    - id: x
      type: System.Double
      description: "要计算的反正弦值的数字。"
    return:
      type: System.Double
      description: "反正弦值<code> x </code>，以弧度为单位。"
  overload: Microsoft.JScript.MathObject.asin*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.atan(System.Double)
  id: atan(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: atan(Double)
  nameWithType: MathObject.atan(Double)
  fullName: Microsoft.JScript.MathObject.atan(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数的反正切值。"
  syntax:
    content: public static double atan (double x);
    parameters:
    - id: x
      type: System.Double
      description: "要计算的反正切值的数字。"
    return:
      type: System.Double
      description: "反正切值<code> x </code>，以弧度为单位。"
  overload: Microsoft.JScript.MathObject.atan*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.atan2(System.Double,System.Double)
  id: atan2(System.Double,System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: atan2(Double,Double)
  nameWithType: MathObject.atan2(Double,Double)
  fullName: Microsoft.JScript.MathObject.atan2(Double,Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数字的商的反正切值。"
  syntax:
    content: public static double atan2 (double dy, double dx);
    parameters:
    - id: dy
      type: System.Double
      description: "若要计算的反正切值的商的分子。"
    - id: dx
      type: System.Double
      description: "若要计算的反正切值的商的分母。"
    return:
      type: System.Double
      description: "反正切值<code> dy </code> / <code> dx </code>，以弧度为单位。"
  overload: Microsoft.JScript.MathObject.atan2*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.ceil(System.Double)
  id: ceil(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: ceil(Double)
  nameWithType: MathObject.ceil(Double)
  fullName: Microsoft.JScript.MathObject.ceil(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数，大于或等于指定数字的最小整数的上限。"
  syntax:
    content: public static double ceil (double x);
    parameters:
    - id: x
      type: System.Double
      description: "若要计算的上限数。"
    return:
      type: System.Double
      description: "上限<code> x </code>。"
  overload: Microsoft.JScript.MathObject.ceil*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.cos(System.Double)
  id: cos(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: cos(Double)
  nameWithType: MathObject.cos(Double)
  fullName: Microsoft.JScript.MathObject.cos(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定角度的余弦值。"
  syntax:
    content: public static double cos (double x);
    parameters:
    - id: x
      type: System.Double
      description: "以弧度计量的角度。"
    return:
      type: System.Double
      description: "The cosine of <code>x</code>."
  overload: Microsoft.JScript.MathObject.cos*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.E
  id: E
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: E
  nameWithType: MathObject.E
  fullName: Microsoft.JScript.MathObject.E
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "存储一个值，表示欧拉常量，即自然对数底数，由常数 e。"
  syntax:
    content: public const double E = 2.71828182845905;
    return:
      type: System.Double
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.exp(System.Double)
  id: exp(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: exp(Double)
  nameWithType: MathObject.exp(Double)
  fullName: Microsoft.JScript.MathObject.exp(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算数字 e 的指定次幂，其中 e 是欧拉常量，自然对数的底。"
  syntax:
    content: public static double exp (double x);
    parameters:
    - id: x
      type: System.Double
      description: "幂数`e`到。"
    return:
      type: System.Double
      description: "数字 e 的幂<code> x </code>电源。"
  overload: Microsoft.JScript.MathObject.exp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.floor(System.Double)
  id: floor(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: floor(Double)
  nameWithType: MathObject.floor(Double)
  fullName: Microsoft.JScript.MathObject.floor(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数量，这是小于或等于指定数字的最大整数的下限。"
  syntax:
    content: public static double floor (double x);
    parameters:
    - id: x
      type: System.Double
      description: "要计算的下限的数字。"
    return:
      type: System.Double
      description: "The floor of <code>x</code>."
  overload: Microsoft.JScript.MathObject.floor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.LN10
  id: LN10
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: LN10
  nameWithType: MathObject.LN10
  fullName: Microsoft.JScript.MathObject.LN10
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "存储一个值，表示对数底 e，10，10 的自然对数。"
  syntax:
    content: public const double LN10 = 2.30258509299405;
    return:
      type: System.Double
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.LN2
  id: LN2
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: LN2
  nameWithType: MathObject.LN2
  fullName: Microsoft.JScript.MathObject.LN2
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "存储一个值，表示对数底 e，2，2 的自然对数。"
  syntax:
    content: public const double LN2 = 0.693147180559945;
    return:
      type: System.Double
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.log(System.Double)
  id: log(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: log(Double)
  nameWithType: MathObject.log(Double)
  fullName: Microsoft.JScript.MathObject.log(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算对数底数 e 的指定数量，这是指定的数字的自然对数。"
  syntax:
    content: public static double log (double x);
    parameters:
    - id: x
      type: System.Double
      description: "要计算的自然对数的数字。"
    return:
      type: System.Double
      description: "自然对数<code> x </code>。"
  overload: Microsoft.JScript.MathObject.log*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.LOG10E
  id: LOG10E
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: LOG10E
  nameWithType: MathObject.LOG10E
  fullName: Microsoft.JScript.MathObject.LOG10E
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "存储一个值，该值表示对数的底 e，e 常用对数 10。"
  syntax:
    content: public const double LOG10E = 0.434294481903252;
    return:
      type: System.Double
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.LOG2E
  id: LOG2E
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: LOG2E
  nameWithType: MathObject.LOG2E
  fullName: Microsoft.JScript.MathObject.LOG2E
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "存储一个值，该值表示对数的底 e，e 的二进制对数 2。"
  syntax:
    content: public const double LOG2E = 1.44269504088896;
    return:
      type: System.Double
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])
  id: max(System.Object,System.Object,System.Object[])
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: max(Object,Object,Object[])
  nameWithType: MathObject.max(Object,Object,Object[])
  fullName: Microsoft.JScript.MathObject.max(Object,Object,Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "返回两个或多个指定数字的最大值。"
  syntax:
    content: public static double max (object x, object y, object[] args);
    parameters:
    - id: x
      type: System.Object
      description: "要比较的第一个数字。"
    - id: y
      type: System.Object
      description: "要比较的第二个数字。"
    - id: args
      type: System.Object[]
      description: "要比较的其他数字。"
    return:
      type: System.Double
      description: "最大的<code> x </code>， <code> y </code>，和中包含的数字<code> args </code>。"
  overload: Microsoft.JScript.MathObject.max*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])
  id: min(System.Object,System.Object,System.Object[])
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: min(Object,Object,Object[])
  nameWithType: MathObject.min(Object,Object,Object[])
  fullName: Microsoft.JScript.MathObject.min(Object,Object,Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "返回两个或多个指定数字的最小值。"
  syntax:
    content: public static double min (object x, object y, object[] args);
    parameters:
    - id: x
      type: System.Object
      description: "要比较的第一个数字。"
    - id: y
      type: System.Object
      description: "要比较的第二个数字。"
    - id: args
      type: System.Object[]
      description: "要比较的其他数字。"
    return:
      type: System.Double
      description: "最小值<code> x </code>， <code> y </code>，和中包含的数字<code> args </code>。"
  overload: Microsoft.JScript.MathObject.min*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.PI
  id: PI
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: PI
  nameWithType: MathObject.PI
  fullName: Microsoft.JScript.MathObject.PI
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "存储一个值，表示的比率圆的周长与其直径，由常数 π 指定。"
  syntax:
    content: public const double PI = 3.14159265358979;
    return:
      type: System.Double
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.pow(System.Double,System.Double)
  id: pow(System.Double,System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: pow(Double,Double)
  nameWithType: MathObject.pow(Double,Double)
  fullName: Microsoft.JScript.MathObject.pow(Double,Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数字的指定次幂。"
  syntax:
    content: public static double pow (double dx, double dy);
    parameters:
    - id: dx
      type: System.Double
      description: "编号，以将提升为`dy`电源。"
    - id: dy
      type: System.Double
      description: "幂数`dx`到。"
    return:
      type: System.Double
      description: "数<code> dx </code>引发到<code> dy </code>电源。"
  overload: Microsoft.JScript.MathObject.pow*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.random
  id: random
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: random()
  nameWithType: MathObject.random()
  fullName: Microsoft.JScript.MathObject.random()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "生成一个介于 0 和 1 之间的随机数字。 此方法不生成加密性极安全的随机数字。"
  syntax:
    content: public static double random ();
    parameters: []
    return:
      type: System.Double
      description: "一个大于或等于 0，且小于 1 的数字。"
  overload: Microsoft.JScript.MathObject.random*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.round(System.Double)
  id: round(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: round(Double)
  nameWithType: MathObject.round(Double)
  fullName: Microsoft.JScript.MathObject.round(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "将指定的数字舍入向下或向上最接近的整数。"
  syntax:
    content: public static double round (double d);
    parameters:
    - id: d
      type: System.Double
      description: "要舍入的数字。"
    return:
      type: System.Double
      description: "如果的小数部分<code> d </code>为到下一步的整数，小于偶数<code> d </code>向下舍入。 如果的小数部分<code> d </code>二者中的偶数上或更多的下一个整数， <code> d </code>向上舍入。"
  overload: Microsoft.JScript.MathObject.round*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.sin(System.Double)
  id: sin(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: sin(Double)
  nameWithType: MathObject.sin(Double)
  fullName: Microsoft.JScript.MathObject.sin(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定角度的正弦值。"
  syntax:
    content: public static double sin (double x);
    parameters:
    - id: x
      type: System.Double
      description: "以弧度计量的角度。"
    return:
      type: System.Double
      description: "The sine of <code>x</code>."
  overload: Microsoft.JScript.MathObject.sin*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.sqrt(System.Double)
  id: sqrt(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: sqrt(Double)
  nameWithType: MathObject.sqrt(Double)
  fullName: Microsoft.JScript.MathObject.sqrt(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定的数的平方根。"
  syntax:
    content: public static double sqrt (double x);
    parameters:
    - id: x
      type: System.Double
      description: "要计算平方根的数字。"
    return:
      type: System.Double
      description: "平方根<code> x </code>。"
  overload: Microsoft.JScript.MathObject.sqrt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.SQRT1_2
  id: SQRT1_2
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: SQRT1_2
  nameWithType: MathObject.SQRT1_2
  fullName: Microsoft.JScript.MathObject.SQRT1_2
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: '存储一个值，表示以下等效值: (√ 2) / 2，√(½) 和 1/(√2)。'
  syntax:
    content: public const double SQRT1_2 = 0.707106781186548;
    return:
      type: System.Double
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.SQRT2
  id: SQRT2
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: SQRT2
  nameWithType: MathObject.SQRT2
  fullName: Microsoft.JScript.MathObject.SQRT2
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "存储一个值，表示 √&2;。"
  syntax:
    content: public const double SQRT2 = 1.4142135623731;
    return:
      type: System.Double
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.MathObject.tan(System.Double)
  id: tan(System.Double)
  parent: Microsoft.JScript.MathObject
  langs:
  - csharp
  name: tan(Double)
  nameWithType: MathObject.tan(Double)
  fullName: Microsoft.JScript.MathObject.tan(Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "计算指定角度的正切值。"
  syntax:
    content: public static double tan (double x);
    parameters:
    - id: x
      type: System.Double
      description: "以弧度计量的角度。"
    return:
      type: System.Double
      description: "正切值<code> x </code>。"
  overload: Microsoft.JScript.MathObject.tan*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.JSObject
  isExternal: false
  name: Microsoft.JScript.JSObject
- uid: Microsoft.JScript.MathObject.abs(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: abs(Double)
  nameWithType: MathObject.abs(Double)
  fullName: Microsoft.JScript.MathObject.abs(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.JScript.MathObject.acos(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: acos(Double)
  nameWithType: MathObject.acos(Double)
  fullName: Microsoft.JScript.MathObject.acos(Double)
- uid: Microsoft.JScript.MathObject.asin(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: asin(Double)
  nameWithType: MathObject.asin(Double)
  fullName: Microsoft.JScript.MathObject.asin(Double)
- uid: Microsoft.JScript.MathObject.atan(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: atan(Double)
  nameWithType: MathObject.atan(Double)
  fullName: Microsoft.JScript.MathObject.atan(Double)
- uid: Microsoft.JScript.MathObject.atan2(System.Double,System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: atan2(Double,Double)
  nameWithType: MathObject.atan2(Double,Double)
  fullName: Microsoft.JScript.MathObject.atan2(Double,Double)
- uid: Microsoft.JScript.MathObject.ceil(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: ceil(Double)
  nameWithType: MathObject.ceil(Double)
  fullName: Microsoft.JScript.MathObject.ceil(Double)
- uid: Microsoft.JScript.MathObject.cos(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: cos(Double)
  nameWithType: MathObject.cos(Double)
  fullName: Microsoft.JScript.MathObject.cos(Double)
- uid: Microsoft.JScript.MathObject.E
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: E
  nameWithType: MathObject.E
  fullName: Microsoft.JScript.MathObject.E
- uid: Microsoft.JScript.MathObject.exp(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: exp(Double)
  nameWithType: MathObject.exp(Double)
  fullName: Microsoft.JScript.MathObject.exp(Double)
- uid: Microsoft.JScript.MathObject.floor(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: floor(Double)
  nameWithType: MathObject.floor(Double)
  fullName: Microsoft.JScript.MathObject.floor(Double)
- uid: Microsoft.JScript.MathObject.LN10
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: LN10
  nameWithType: MathObject.LN10
  fullName: Microsoft.JScript.MathObject.LN10
- uid: Microsoft.JScript.MathObject.LN2
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: LN2
  nameWithType: MathObject.LN2
  fullName: Microsoft.JScript.MathObject.LN2
- uid: Microsoft.JScript.MathObject.log(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: log(Double)
  nameWithType: MathObject.log(Double)
  fullName: Microsoft.JScript.MathObject.log(Double)
- uid: Microsoft.JScript.MathObject.LOG10E
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: LOG10E
  nameWithType: MathObject.LOG10E
  fullName: Microsoft.JScript.MathObject.LOG10E
- uid: Microsoft.JScript.MathObject.LOG2E
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: LOG2E
  nameWithType: MathObject.LOG2E
  fullName: Microsoft.JScript.MathObject.LOG2E
- uid: Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: max(Object,Object,Object[])
  nameWithType: MathObject.max(Object,Object,Object[])
  fullName: Microsoft.JScript.MathObject.max(Object,Object,Object[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: min(Object,Object,Object[])
  nameWithType: MathObject.min(Object,Object,Object[])
  fullName: Microsoft.JScript.MathObject.min(Object,Object,Object[])
- uid: Microsoft.JScript.MathObject.PI
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: PI
  nameWithType: MathObject.PI
  fullName: Microsoft.JScript.MathObject.PI
- uid: Microsoft.JScript.MathObject.pow(System.Double,System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: pow(Double,Double)
  nameWithType: MathObject.pow(Double,Double)
  fullName: Microsoft.JScript.MathObject.pow(Double,Double)
- uid: Microsoft.JScript.MathObject.random
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: random()
  nameWithType: MathObject.random()
  fullName: Microsoft.JScript.MathObject.random()
- uid: Microsoft.JScript.MathObject.round(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: round(Double)
  nameWithType: MathObject.round(Double)
  fullName: Microsoft.JScript.MathObject.round(Double)
- uid: Microsoft.JScript.MathObject.sin(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: sin(Double)
  nameWithType: MathObject.sin(Double)
  fullName: Microsoft.JScript.MathObject.sin(Double)
- uid: Microsoft.JScript.MathObject.sqrt(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: sqrt(Double)
  nameWithType: MathObject.sqrt(Double)
  fullName: Microsoft.JScript.MathObject.sqrt(Double)
- uid: Microsoft.JScript.MathObject.SQRT1_2
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: SQRT1_2
  nameWithType: MathObject.SQRT1_2
  fullName: Microsoft.JScript.MathObject.SQRT1_2
- uid: Microsoft.JScript.MathObject.SQRT2
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: SQRT2
  nameWithType: MathObject.SQRT2
  fullName: Microsoft.JScript.MathObject.SQRT2
- uid: Microsoft.JScript.MathObject.tan(System.Double)
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: tan(Double)
  nameWithType: MathObject.tan(Double)
  fullName: Microsoft.JScript.MathObject.tan(Double)
- uid: Microsoft.JScript.MathObject.abs*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: abs
  nameWithType: MathObject.abs
- uid: Microsoft.JScript.MathObject.acos*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: acos
  nameWithType: MathObject.acos
- uid: Microsoft.JScript.MathObject.asin*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: asin
  nameWithType: MathObject.asin
- uid: Microsoft.JScript.MathObject.atan*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: atan
  nameWithType: MathObject.atan
- uid: Microsoft.JScript.MathObject.atan2*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: atan2
  nameWithType: MathObject.atan2
- uid: Microsoft.JScript.MathObject.ceil*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: ceil
  nameWithType: MathObject.ceil
- uid: Microsoft.JScript.MathObject.cos*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: cos
  nameWithType: MathObject.cos
- uid: Microsoft.JScript.MathObject.exp*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: exp
  nameWithType: MathObject.exp
- uid: Microsoft.JScript.MathObject.floor*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: floor
  nameWithType: MathObject.floor
- uid: Microsoft.JScript.MathObject.log*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: log
  nameWithType: MathObject.log
- uid: Microsoft.JScript.MathObject.max*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: max
  nameWithType: MathObject.max
- uid: Microsoft.JScript.MathObject.min*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: min
  nameWithType: MathObject.min
- uid: Microsoft.JScript.MathObject.pow*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: pow
  nameWithType: MathObject.pow
- uid: Microsoft.JScript.MathObject.random*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: random
  nameWithType: MathObject.random
- uid: Microsoft.JScript.MathObject.round*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: round
  nameWithType: MathObject.round
- uid: Microsoft.JScript.MathObject.sin*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: sin
  nameWithType: MathObject.sin
- uid: Microsoft.JScript.MathObject.sqrt*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: sqrt
  nameWithType: MathObject.sqrt
- uid: Microsoft.JScript.MathObject.tan*
  parent: Microsoft.JScript.MathObject
  isExternal: false
  name: tan
  nameWithType: MathObject.tan
