### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadStart
  id: ThreadStart
  langs:
  - csharp
  name: ThreadStart
  nameWithType: ThreadStart
  fullName: System.Threading.ThreadStart
  type: Delegate
  summary: "表示在执行的方法<xref href=&quot;System.Threading.Thread&quot;> </xref>。"
  remarks: "创建一个托管的线程时，表示在线程执行的方法由 ThreadStart 委托或<xref:System.Threading.ParameterizedThreadStart>委托传递给<xref:System.Threading.Thread.%23ctor%2A>构造函数。</xref:System.Threading.Thread.%23ctor%2A> </xref:System.Threading.ParameterizedThreadStart> 线程不会开始执行之前<xref:System.Threading.Thread.Start%2A?displayProperty=fullName>调用方法。</xref:System.Threading.Thread.Start%2A?displayProperty=fullName> 执行匹配位置始于 ThreadStart 所表示的方法的第一行或<xref:System.Threading.ParameterizedThreadStart>委派。</xref:System.Threading.ParameterizedThreadStart>      1> [!NOTE]&1;> Visual Basic 和 C# 用户可以省略 ThreadStart 或<xref:System.Threading.ParameterizedThreadStart>委托构造函数创建线程时。</xref:System.Threading.ParameterizedThreadStart> 在 Visual Basic 中，使用`AddressOf`运算符传递到你的方法时<xref:System.Threading.Thread.%23ctor%2A>构造函数; 例如， `Dim t As New Thread(AddressOf ThreadProc)`。</xref:System.Threading.Thread.%23ctor%2A> 在 C# 中，只需指定线程过程的名称。 编译器选择正确的委托构造函数。       [C + +] 1> [!NOTE] 1> 在 2.0 版中的.NET Framework 中，为 c + + 中的静态方法只需要一个参数创建 ThreadStart 委托︰ 回调方法中，由类名称限定的地址。 在早期版本中两个参数均需要时创建的静态方法的委托︰ 零 (null) 和方法的地址。 对于实例方法，所有版本都需要两个参数︰ 实例变量和方法的地址。"
  example:
  - "The following code example shows the syntax for creating and using a ThreadStart delegate with an instance method and with a static method.  \n  \n For another simple example that demonstrates how to create a ThreadStart delegate, see the <xref:System.Threading.Thread.Start?displayProperty=fullName> method overload. For more information about thread creation, see [Creating Threads and Passing Data at Start Time](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Threading.ThreadStart2#1](~/add/codesnippet/cpp/t-system.threading.threa_6_1.cpp)]\n [!code-cs[System.Threading.ThreadStart2#1](~/add/codesnippet/csharp/t-system.threading.threa_6_1.cs)]\n [!code-vb[System.Threading.ThreadStart2#1](~/add/codesnippet/visualbasic/t-system.threading.threa_6_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate void ThreadStart();
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
