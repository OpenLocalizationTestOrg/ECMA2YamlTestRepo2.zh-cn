### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessagePropertyFilter
  id: MessagePropertyFilter
  children:
  - System.Messaging.MessagePropertyFilter.#ctor
  - System.Messaging.MessagePropertyFilter.AcknowledgeType
  - System.Messaging.MessagePropertyFilter.Acknowledgment
  - System.Messaging.MessagePropertyFilter.AdministrationQueue
  - System.Messaging.MessagePropertyFilter.AppSpecific
  - System.Messaging.MessagePropertyFilter.ArrivedTime
  - System.Messaging.MessagePropertyFilter.AttachSenderId
  - System.Messaging.MessagePropertyFilter.Authenticated
  - System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  - System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  - System.Messaging.MessagePropertyFilter.Body
  - System.Messaging.MessagePropertyFilter.ClearAll
  - System.Messaging.MessagePropertyFilter.Clone
  - System.Messaging.MessagePropertyFilter.ConnectorType
  - System.Messaging.MessagePropertyFilter.CorrelationId
  - System.Messaging.MessagePropertyFilter.DefaultBodySize
  - System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  - System.Messaging.MessagePropertyFilter.DefaultLabelSize
  - System.Messaging.MessagePropertyFilter.DestinationQueue
  - System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  - System.Messaging.MessagePropertyFilter.DigitalSignature
  - System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  - System.Messaging.MessagePropertyFilter.Extension
  - System.Messaging.MessagePropertyFilter.HashAlgorithm
  - System.Messaging.MessagePropertyFilter.Id
  - System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  - System.Messaging.MessagePropertyFilter.IsLastInTransaction
  - System.Messaging.MessagePropertyFilter.Label
  - System.Messaging.MessagePropertyFilter.LookupId
  - System.Messaging.MessagePropertyFilter.MessageType
  - System.Messaging.MessagePropertyFilter.Priority
  - System.Messaging.MessagePropertyFilter.Recoverable
  - System.Messaging.MessagePropertyFilter.ResponseQueue
  - System.Messaging.MessagePropertyFilter.SenderCertificate
  - System.Messaging.MessagePropertyFilter.SenderId
  - System.Messaging.MessagePropertyFilter.SenderVersion
  - System.Messaging.MessagePropertyFilter.SentTime
  - System.Messaging.MessagePropertyFilter.SetAll
  - System.Messaging.MessagePropertyFilter.SetDefaults
  - System.Messaging.MessagePropertyFilter.SourceMachine
  - System.Messaging.MessagePropertyFilter.TimeToBeReceived
  - System.Messaging.MessagePropertyFilter.TimeToReachQueue
  - System.Messaging.MessagePropertyFilter.TransactionId
  - System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  - System.Messaging.MessagePropertyFilter.UseAuthentication
  - System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  - System.Messaging.MessagePropertyFilter.UseEncryption
  - System.Messaging.MessagePropertyFilter.UseJournalQueue
  - System.Messaging.MessagePropertyFilter.UseTracing
  langs:
  - csharp
  name: MessagePropertyFilter
  nameWithType: MessagePropertyFilter
  fullName: System.Messaging.MessagePropertyFilter
  type: Class
  summary: "控制，并选择从消息队列扫视或接收消息时，将检索的属性。"
  remarks: "在上设置 MessagePropertyFilter<xref:System.Messaging.MessageQueue>实例控制的扫视或接收消息时，将检索的属性集。</xref:System.Messaging.MessageQueue> 实例上设置筛选器，则<xref:System.Messaging.MessageQueue>检索的消息信息。</xref:System.Messaging.MessageQueue> 当设置 MessagePropertyFilter 布尔值的成员为`false`，防止关联<xref:System.Messaging.Message>从受支持<xref:System.Messaging.MessageQueue>。</xref:System.Messaging.MessageQueue>正在检索的属性</xref:System.Messaging.Message>的信息       有几个不是布尔值的筛选器属性。 获取或设置的默认大小的整数值是它们<xref:System.Messaging.Message.Body%2A?displayProperty=fullName>， <xref:System.Messaging.Message.Extension%2A?displayProperty=fullName>，或<xref:System.Messaging.Message.Label%2A?displayProperty=fullName>。</xref:System.Messaging.Message.Label%2A?displayProperty=fullName> </xref:System.Messaging.Message.Extension%2A?displayProperty=fullName> </xref:System.Messaging.Message.Body%2A?displayProperty=fullName>       检索一组有限的属性，可帮助提高性能，因为较少的数据传输从队列。       当在 MessagePropertyFilter 上设置属性，只指示该属性检索的时接收或查看消息。 您未更改<xref:System.Messaging.Message>.</xref:System.Messaging.Message>的关联的属性值       <xref:System.Messaging.MessagePropertyFilter.%23ctor%2A>构造函数将所有筛选器属性设置为其默认值，即对于布尔值`false`。</xref:System.Messaging.MessagePropertyFilter.%23ctor%2A> 请参阅分配给的整数值的属性的默认值的构造函数主题。"
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/t-system.messaging.messa_1_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_1_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/t-system.messaging.messa_1_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public class MessagePropertyFilter : ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.#ctor
  id: '#ctor'
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: MessagePropertyFilter()
  nameWithType: MessagePropertyFilter.MessagePropertyFilter()
  fullName: System.Messaging.MessagePropertyFilter.MessagePropertyFilter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新实例<xref href=&quot;System.Messaging.MessagePropertyFilter&quot;></xref>类和设置的所有属性的默认值。"
  remarks: "MessagePropertyFilter 构造函数将所有的布尔值设置为`false`并将整数值属性设置为下表中显示的默认值。      |属性 |默认值 |  |--------------|-------------------|  |<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|&1024;年 |  |<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|&255; |  |<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|255|</xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A></xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A></xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Messaging.MessagePropertyFilter> constructor.  \n  \n [!code-cpp[MessagePropertyFilter#40](~/add/codesnippet/cpp/m-system.messaging.messa_23_1.cpp)]\n [!code-cs[MessagePropertyFilter#40](~/add/codesnippet/csharp/m-system.messaging.messa_23_1.cs)]"
  syntax:
    content: public MessagePropertyFilter ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType
  id: AcknowledgeType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
  fullName: System.Messaging.MessagePropertyFilter.AcknowledgeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.AcknowledgeType%2A>属性<xref:System.Messaging.Message>类指定的请求发送应用程序的确认消息的类型。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AcknowledgeType%2A> 确认该类型定义何时返回确认。 设置<xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName>发送消息以请求特定类型的确认之前的属性。</xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the AcknowledgeType property.  \n  \n [!code-cpp[MessagePropertyFilter#1](~/add/codesnippet/cpp/p-system.messaging.messa_82_1.cpp)]\n [!code-cs[MessagePropertyFilter#1](~/add/codesnippet/csharp/p-system.messaging.messa_82_1.cs)]"
  syntax:
    content: public bool AcknowledgeType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AcknowledgeType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment
  id: Acknowledgment
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
  fullName: System.Messaging.MessagePropertyFilter.Acknowledgment
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName>属性<xref:System.Messaging.Message>类指定的确认消息类型确定何时生成确认的管理队列中的系统文章。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName>       确认返回从目标队列，并将其作为消息传递到<xref:System.Messaging.Message.AdministrationQueue%2A>指定原始消息。</xref:System.Messaging.Message.AdministrationQueue%2A> 生成的确认类型取决于内容请求。       读取<xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName>属性接收来自管理队列以验证最初发送到消息队列的消息的状态消息时。</xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName>"
  example:
  - "The following code example sends and receives a message that contains an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_20_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_20_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_20_1.vb)]"
  syntax:
    content: public bool Acknowledgment { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Acknowledgment*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue
  id: AdministrationQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
  fullName: System.Messaging.MessagePropertyFilter.AdministrationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.AdministrationQueue%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.AdministrationQueue%2A>属性<xref:System.Messaging.Message>类指定接收系统生成的确认的队列的名称。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AdministrationQueue%2A>"
  example:
  - "The following code example demonstrates the use of the AdministrationQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#2](~/add/codesnippet/cpp/p-system.messaging.messa_48_1.cpp)]\n [!code-cs[MessagePropertyFilter#2](~/add/codesnippet/csharp/p-system.messaging.messa_48_1.cs)]"
  syntax:
    content: public bool AdministrationQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AdministrationQueue%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AdministrationQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AppSpecific
  id: AppSpecific
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
  fullName: System.Messaging.MessagePropertyFilter.AppSpecific
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.AppSpecific%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.AppSpecific%2A>属性<xref:System.Messaging.Message>类包含、 应用程序特定的附加信息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AppSpecific%2A>"
  example:
  - "The following code example demonstrates the use of the AppSpecific property.  \n  \n [!code-cpp[MessagePropertyFilter#3](~/add/codesnippet/cpp/p-system.messaging.messa_69_1.cpp)]\n [!code-cs[MessagePropertyFilter#3](~/add/codesnippet/csharp/p-system.messaging.messa_69_1.cs)]"
  syntax:
    content: public bool AppSpecific { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AppSpecific%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AppSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime
  id: ArrivedTime
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
  fullName: System.Messaging.MessagePropertyFilter.ArrivedTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.ArrivedTime%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.ArrivedTime%2A>属性<xref:System.Messaging.Message>类指示当消息到达目标队列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.ArrivedTime%2A> 这是调整从格林威治标准时间，在其上检索消息的计算机的本地时间。"
  example:
  - "The following code example demonstrates the use of the ArrivedTime property.  \n  \n [!code-cpp[MessagePropertyFilter#4](~/add/codesnippet/cpp/p-system.messaging.messa_96_1.cpp)]\n [!code-cs[MessagePropertyFilter#4](~/add/codesnippet/csharp/p-system.messaging.messa_96_1.cs)]"
  syntax:
    content: public bool ArrivedTime { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.ArrivedTime%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.ArrivedTime*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId
  id: AttachSenderId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
  fullName: System.Messaging.MessagePropertyFilter.AttachSenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.AttachSenderId%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.AttachSenderId%2A>属性<xref:System.Messaging.Message>类指定是否<xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName>应或已附加到消息。</xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName> </xref:System.Messaging.Message> </xref:System.Messaging.Message.AttachSenderId%2A> <xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName>由消息队列设置，并使用由接收队列管理器来验证发件人是否有权访问队列。</xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the AttachSenderId property.  \n  \n [!code-cpp[MessagePropertyFilter#5](~/add/codesnippet/cpp/p-system.messaging.messa_80_1.cpp)]\n [!code-cs[MessagePropertyFilter#5](~/add/codesnippet/csharp/p-system.messaging.messa_80_1.cs)]"
  syntax:
    content: public bool AttachSenderId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AttachSenderId%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AttachSenderId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Authenticated
  id: Authenticated
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
  fullName: System.Messaging.MessagePropertyFilter.Authenticated
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.Authenticated%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.Authenticated%2A>属性<xref:System.Messaging.Message>类由接收应用程序用来确定是否已请求身份验证。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Authenticated%2A> 如果已请求身份验证，而且此消息在队列中，消息进行身份验证。       不能查看的消息属性，并确定消息是否未通过身份验证。 身份验证失败的消息被丢弃并不会传递到队列。"
  example:
  - "The following code example demonstrates the use of the Authenticated property.  \n  \n [!code-cpp[MessagePropertyFilter#6](~/add/codesnippet/cpp/p-system.messaging.messa_57_1.cpp)]\n [!code-cs[MessagePropertyFilter#6](~/add/codesnippet/csharp/p-system.messaging.messa_57_1.cs)]"
  syntax:
    content: public bool Authenticated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Authenticated%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Authenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  id: AuthenticationProviderName
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.AuthenticationProviderName%2A>属性<xref:System.Messaging.Message>类指定用于生成消息的数字签名的加密提供程序的名称。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AuthenticationProviderName%2A> <xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName>通常在使用外部队列时使用。</xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName>       非 Microsoft 消息队列的队列系统中不存在外队列。 Microsoft 消息队列与此类通过连接器应用程序的队列进行通信。"
  example:
  - "The following code example demonstrates the use of the AuthenticationProviderName property.  \n  \n [!code-cpp[MessagePropertyFilter#7](~/add/codesnippet/cpp/p-system.messaging.messa_70_1.cpp)]\n [!code-cs[MessagePropertyFilter#7](~/add/codesnippet/csharp/p-system.messaging.messa_70_1.cs)]"
  syntax:
    content: public bool AuthenticationProviderName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AuthenticationProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  id: AuthenticationProviderType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.AuthenticationProviderType%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.AuthenticationProviderType%2A>属性<xref:System.Messaging.Message>类指定用于生成消息的数字签名的加密提供程序的类型。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AuthenticationProviderType%2A> <xref:System.Messaging.Message.AuthenticationProviderType%2A>通常在使用外部队列时使用。</xref:System.Messaging.Message.AuthenticationProviderType%2A>       非 Microsoft 消息队列的队列系统中不存在外队列。 Microsoft 消息队列与此类通过连接器应用程序的队列进行通信。"
  example:
  - "The following code example demonstrates the use of the AuthenticationProviderType property.  \n  \n [!code-cpp[MessagePropertyFilter#8](~/add/codesnippet/cpp/p-system.messaging.messa_38_1.cpp)]\n [!code-cs[MessagePropertyFilter#8](~/add/codesnippet/csharp/p-system.messaging.messa_38_1.cs)]"
  syntax:
    content: public bool AuthenticationProviderType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AuthenticationProviderType%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AuthenticationProviderType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Body
  id: Body
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Body
  nameWithType: MessagePropertyFilter.Body
  fullName: System.Messaging.MessagePropertyFilter.Body
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.Body%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.Body%2A>属性<xref:System.Messaging.Message>类表示消息的序列化的内容。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> 正文可以包含最多 4 MB 的数据。"
  example:
  - "The following code example demonstrates the use of the Body property.  \n  \n [!code-cpp[MessagePropertyFilter#9](~/add/codesnippet/cpp/p-system.messaging.messa_91_1.cpp)]\n [!code-cs[MessagePropertyFilter#9](~/add/codesnippet/csharp/p-system.messaging.messa_91_1.cs)]"
  syntax:
    content: public bool Body { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Body%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Body*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ClearAll
  id: ClearAll
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ClearAll()
  nameWithType: MessagePropertyFilter.ClearAll()
  fullName: System.Messaging.MessagePropertyFilter.ClearAll()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "将所有布尔筛选器值设置为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，以便在接收消息时，检索没有消息属性。"
  remarks: "使用 ClearAll 来设置所有<xref:System.Messaging.MessagePropertyFilter>到的布尔属性`false`。</xref:System.Messaging.MessagePropertyFilter> 这将导致没有可在接收消息时检索的消息属性。 ClearAll 不会影响的值<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>， <xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>，或<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>。</xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>       在调用 ClearAll 之后, 有必要将至少一个筛选器属性设置为`true`为了接收与消息相关的数据。 你可以将个别属性设置为`true`，也可以调用<xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A>或<xref:System.Messaging.MessagePropertyFilter.SetAll%2A>。</xref:System.Messaging.MessagePropertyFilter.SetAll%2A> </xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A>"
  example:
  - "The following code example calls the ClearAll method.  \n  \n [!code-cpp[MessagePropertyFilter#37](~/add/codesnippet/cpp/m-system.messaging.messa_12_1.cpp)]\n [!code-cs[MessagePropertyFilter#37](~/add/codesnippet/csharp/m-system.messaging.messa_12_1.cs)]"
  syntax:
    content: public void ClearAll ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.ClearAll*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Clone
  id: Clone
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Clone()
  nameWithType: MessagePropertyFilter.Clone()
  fullName: System.Messaging.MessagePropertyFilter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "创建对象的浅表副本。"
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "A<xref:System.Object>表示的实例<xref href=&quot;System.Messaging.MessagePropertyFilter&quot;></xref>类</xref:System.Object>"
  overload: System.Messaging.MessagePropertyFilter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ConnectorType
  id: ConnectorType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
  fullName: System.Messaging.MessagePropertyFilter.ConnectorType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.ConnectorType%2A>属性<xref:System.Messaging.Message>类时是必需的应用程序设置通常由消息队列设置的消息属性。</xref:System.Messaging.Message> </xref:System.Messaging.Message.ConnectorType%2A> 使用以下两个实例中:-当通过连接器应用程序传递消息<xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName>需要发送和接收应用程序能够解释的消息的安全性和确认属性。</xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName>      -当发送应用程序加密的消息，<xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName>属性通知消息队列使用对称密钥。</xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the ConnectorType property.  \n  \n [!code-cpp[MessagePropertyFilter#10](~/add/codesnippet/cpp/p-system.messaging.messa_36_1.cpp)]\n [!code-cs[MessagePropertyFilter#10](~/add/codesnippet/csharp/p-system.messaging.messa_36_1.cs)]"
  syntax:
    content: public bool ConnectorType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.ConnectorType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.CorrelationId
  id: CorrelationId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
  fullName: System.Messaging.MessagePropertyFilter.CorrelationId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.CorrelationId%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.CorrelationId%2A>属性<xref:System.Messaging.Message>类指定一个确认和报告消息用以引用原始消息的消息标识符。</xref:System.Messaging.Message> </xref:System.Messaging.Message.CorrelationId%2A> 它提供了接收应用程序可用于对邮件进行排序的应用程序定义的标识符。"
  example:
  - "The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_81_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_81_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_81_1.vb)]"
  syntax:
    content: public bool CorrelationId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.CorrelationId%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.CorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize
  id: DefaultBodySize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
  fullName: System.Messaging.MessagePropertyFilter.DefaultBodySize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置大小，以字节为单位的默认正文缓冲区。"
  remarks: "默认正文大小指定要为消息的正文内容分配字节的数。 <xref:System.Messaging.Message.Body%2A>属性<xref:System.Messaging.Message>类表示消息的序列化的内容。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> 正文可以包含最多 4 MB 的数据。 限制正文大小可以提高性能。"
  example:
  - "The following code example demonstrates the use of the DefaultBodySize property.  \n  \n [!code-cpp[MessagePropertyFilter#11](~/add/codesnippet/cpp/p-system.messaging.messa_83_1.cpp)]\n [!code-cs[MessagePropertyFilter#11](~/add/codesnippet/csharp/p-system.messaging.messa_83_1.cs)]"
  syntax:
    content: public int DefaultBodySize { get; set; }
    return:
      type: System.Int32
      description: "要接收消息时创建的默认正文缓冲区大小。 默认值为 1024 个字节。"
  overload: System.Messaging.MessagePropertyFilter.DefaultBodySize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所赋的值为负。"
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  id: DefaultExtensionSize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置大小，以字节为单位的默认扩展缓冲区。"
  remarks: "默认扩展大小指定要为消息的扩展分配字节的数。 <xref:System.Messaging.Message.Extension%2A>属性<xref:System.Messaging.Message>类表示与消息，例如，二进制大型对象关联的、 应用程序定义的附加信息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Extension%2A> 它负责要解释的<xref:System.Messaging.Message.Extension%2A>。</xref:System.Messaging.Message.Extension%2A>内容的应用程序"
  example:
  - "The following code example demonstrates the use of the DefaultExtensionSize property.  \n  \n [!code-cpp[MessagePropertyFilter#12](~/add/codesnippet/cpp/p-system.messaging.messa_94_1.cpp)]\n [!code-cs[MessagePropertyFilter#12](~/add/codesnippet/csharp/p-system.messaging.messa_94_1.cs)]"
  syntax:
    content: public int DefaultExtensionSize { get; set; }
    return:
      type: System.Int32
      description: "要接收消息时创建的默认扩展缓冲区大小。 默认值为 255 个字节。"
  overload: System.Messaging.MessagePropertyFilter.DefaultExtensionSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所赋的值为负。"
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  id: DefaultLabelSize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置大小，以字节为单位，默认标签缓冲区。"
  remarks: "默认标签大小指定要为消息的标签分配字节的数。 <xref:System.Messaging.Message.Label%2A>属性<xref:System.Messaging.Message>类指定消息的标签。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Label%2A>"
  example:
  - "The following code example demonstrates the use of the DefaultLabelSize property.  \n  \n [!code-cpp[MessagePropertyFilter#13](~/add/codesnippet/cpp/p-system.messaging.messa_15_1.cpp)]\n [!code-cs[MessagePropertyFilter#13](~/add/codesnippet/csharp/p-system.messaging.messa_15_1.cs)]"
  syntax:
    content: public int DefaultLabelSize { get; set; }
    return:
      type: System.Int32
      description: "要接收消息时创建的默认标签缓冲区大小。 默认值为 255 个字节。"
  overload: System.Messaging.MessagePropertyFilter.DefaultLabelSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所赋的值为负。"
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue
  id: DestinationQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
  fullName: System.Messaging.MessagePropertyFilter.DestinationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.DestinationQueue%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.DestinationQueue%2A>属性<xref:System.Messaging.Message>类标识消息的原始目标队列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.DestinationQueue%2A> 它通常用于确定在日志或死信队列是一条消息的原始目标。 它还可在时将响应消息发送回响应队列。"
  example:
  - "The following code example demonstrates the use of the DestinationQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#14](~/add/codesnippet/cpp/p-system.messaging.messa_65_1.cpp)]\n [!code-cs[MessagePropertyFilter#14](~/add/codesnippet/csharp/p-system.messaging.messa_65_1.cs)]"
  syntax:
    content: public bool DestinationQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.DestinationQueue%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.DestinationQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  id: DestinationSymmetricKey
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
  fullName: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.DestinationSymmetricKey%2A>属性<xref:System.Messaging.Message>类指定用来加密消息的对称密钥。</xref:System.Messaging.Message> </xref:System.Messaging.Message.DestinationSymmetricKey%2A> 当你发送应用程序加密的消息，或向外队列发送加密的消息时，它是必需的。       非 Microsoft 消息队列的队列系统中不存在外队列。 Microsoft 消息队列与此类通过连接器应用程序的队列进行通信。"
  example:
  - "The following code example demonstrates the use of the DestinationSymmetricKey property.  \n  \n [!code-cpp[MessagePropertyFilter#15](~/add/codesnippet/cpp/p-system.messaging.messa_72_1.cpp)]\n [!code-cs[MessagePropertyFilter#15](~/add/codesnippet/csharp/p-system.messaging.messa_72_1.cs)]"
  syntax:
    content: public bool DestinationSymmetricKey { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature
  id: DigitalSignature
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
  fullName: System.Messaging.MessagePropertyFilter.DigitalSignature
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.DigitalSignature%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.DigitalSignature%2A>属性<xref:System.Messaging.Message>类指定用于对消息进行身份验证的数字签名。</xref:System.Messaging.Message> </xref:System.Messaging.Message.DigitalSignature%2A> 在大多数情况下，它生成并由消息队列设置，当发送应用程序请求身份验证。"
  example:
  - "The following code example demonstrates the use of the DigitalSignature property.  \n  \n [!code-cpp[MessagePropertyFilter#16](~/add/codesnippet/cpp/p-system.messaging.messa_1_1.cpp)]\n [!code-cs[MessagePropertyFilter#16](~/add/codesnippet/csharp/p-system.messaging.messa_1_1.cs)]"
  syntax:
    content: public bool DigitalSignature { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.DigitalSignature%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.DigitalSignature*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  id: EncryptionAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.EncryptionAlgorithm%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "如果消息是私有，则消息前发送和接收时解密被加密。 <xref:System.Messaging.Message.EncryptionAlgorithm%2A>属性<xref:System.Messaging.Message>类指定用于加密私有消息的消息正文的算法。</xref:System.Messaging.Message> </xref:System.Messaging.Message.EncryptionAlgorithm%2A>"
  example:
  - "The following code example demonstrates the use of the EncryptionAlgorithm property.  \n  \n [!code-cpp[MessagePropertyFilter#17](~/add/codesnippet/cpp/p-system.messaging.messa_27_1.cpp)]\n [!code-cs[MessagePropertyFilter#17](~/add/codesnippet/csharp/p-system.messaging.messa_27_1.cs)]"
  syntax:
    content: public bool EncryptionAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.EncryptionAlgorithm%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Extension
  id: Extension
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
  fullName: System.Messaging.MessagePropertyFilter.Extension
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.Extension%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.Extension%2A>属性<xref:System.Messaging.Message>类提供与消息，如大型二进制对象关联的应用程序定义的其他信息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Extension%2A> 它负责接收应用程序可以解释的<xref:System.Messaging.Message.Extension%2A>。</xref:System.Messaging.Message.Extension%2A>内容"
  example:
  - "The following code example demonstrates the use of the Extension property.  \n  \n [!code-cpp[MessagePropertyFilter#18](~/add/codesnippet/cpp/p-system.messaging.messa_37_1.cpp)]\n [!code-cs[MessagePropertyFilter#18](~/add/codesnippet/csharp/p-system.messaging.messa_37_1.cs)]"
  syntax:
    content: public bool Extension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Extension%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Extension*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm
  id: HashAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.HashAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.HashAlgorithm%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.HashAlgorithm%2A>属性<xref:System.Messaging.Message>类标识进行身份验证消息时消息队列使用的哈希算法。</xref:System.Messaging.Message> </xref:System.Messaging.Message.HashAlgorithm%2A> 创建一条消息的数字签名时，也使用的哈希算法。"
  example:
  - "The following code example demonstrates the use of the HashAlgorithm property.  \n  \n [!code-cpp[MessagePropertyFilter#19](~/add/codesnippet/cpp/p-system.messaging.messa_21_1.cpp)]\n [!code-cs[MessagePropertyFilter#19](~/add/codesnippet/csharp/p-system.messaging.messa_21_1.cs)]"
  syntax:
    content: public bool HashAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.HashAlgorithm%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.HashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Id
  id: Id
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Id
  nameWithType: MessagePropertyFilter.Id
  fullName: System.Messaging.MessagePropertyFilter.Id
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.Id%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.Id%2A>属性<xref:System.Messaging.Message>事件类指示消息的消息队列生成的唯一标识符。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Id%2A> 发送消息时，将生成此标识符。"
  example:
  - "The following code example demonstrates the use of the Id property.  \n  \n [!code-cpp[MessagePropertyFilter#20](~/add/codesnippet/cpp/p-system.messaging.messa_6_1.cpp)]\n [!code-cs[MessagePropertyFilter#20](~/add/codesnippet/csharp/p-system.messaging.messa_6_1.cs)]"
  syntax:
    content: public bool Id { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Id%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  id: IsFirstInTransaction
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.IsFirstInTransaction%2A>属性<xref:System.Messaging.Message>类由接收应用程序用来验证消息是否发送到单个队列单个事务中的第一个消息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.IsFirstInTransaction%2A>"
  example:
  - "The following code example demonstrates the use of the IsFirstInTransaction property.  \n  \n [!code-cpp[MessagePropertyFilter#50](~/add/codesnippet/cpp/p-system.messaging.messa_16_1.cpp)]\n [!code-cs[MessagePropertyFilter#50](~/add/codesnippet/csharp/p-system.messaging.messa_16_1.cs)]"
  syntax:
    content: public bool IsFirstInTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.IsFirstInTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  id: IsLastInTransaction
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.IsLastInTransaction%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.IsLastInTransaction%2A>属性<xref:System.Messaging.Message>类由接收应用程序用于验证消息是否是从单个事务发送到单个队列的最后一条消息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.IsLastInTransaction%2A>"
  example:
  - "The following code example demonstrates the use of the IsLastInTransaction property.  \n  \n [!code-cpp[MessagePropertyFilter#51](~/add/codesnippet/cpp/p-system.messaging.messa_89_1.cpp)]\n [!code-cs[MessagePropertyFilter#51](~/add/codesnippet/csharp/p-system.messaging.messa_89_1.cs)]"
  syntax:
    content: public bool IsLastInTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.IsLastInTransaction%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.IsLastInTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Label
  id: Label
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Label
  nameWithType: MessagePropertyFilter.Label
  fullName: System.Messaging.MessagePropertyFilter.Label
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.Label%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.Label%2A>属性<xref:System.Messaging.Message>类指定消息的标签。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Label%2A>"
  example:
  - "The following code example demonstrates the use of the Label property.  \n  \n [!code-cpp[MessagePropertyFilter#21](~/add/codesnippet/cpp/p-system.messaging.messa_99_1.cpp)]\n [!code-cs[MessagePropertyFilter#21](~/add/codesnippet/csharp/p-system.messaging.messa_99_1.cs)]"
  syntax:
    content: public bool Label { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Label%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.LookupId
  id: LookupId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
  fullName: System.Messaging.MessagePropertyFilter.LookupId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索<xref:System.Messaging.Message.LookupId*>接收或查看消息时的属性信息。</xref:System.Messaging.Message.LookupId*>"
  remarks: "<xref:System.Messaging.Message.LookupId%2A>属性<xref:System.Messaging.Message>类指定消息的查找标识符。</xref:System.Messaging.Message> </xref:System.Messaging.Message.LookupId%2A>"
  syntax:
    content: public bool LookupId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收<xref:System.Messaging.Message.LookupId*>属性信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Messaging.Message.LookupId*> 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.LookupId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.MessageType
  id: MessageType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
  fullName: System.Messaging.MessagePropertyFilter.MessageType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.MessageType%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.MessageType%2A>属性<xref:System.Messaging.Message>类标识消息的类型。</xref:System.Messaging.Message> </xref:System.Messaging.Message.MessageType%2A> 一条消息可以是正常消息、 肯定或否定确认消息或报告消息。"
  example:
  - "The following code example demonstrates the use of the MessageType property.  \n  \n [!code-cpp[MessagePropertyFilter#22](~/add/codesnippet/cpp/p-system.messaging.messa_39_1.cpp)]\n [!code-cs[MessagePropertyFilter#22](~/add/codesnippet/csharp/p-system.messaging.messa_39_1.cs)]"
  syntax:
    content: public bool MessageType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.MessageType%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.MessageType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Priority
  id: Priority
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
  fullName: System.Messaging.MessagePropertyFilter.Priority
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.Priority%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.Priority%2A>属性<xref:System.Messaging.Message>类会影响虽然很途中，消息队列处理消息的方式以及位置在到达其目标时，该消息会放在队列中。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Priority%2A>       仅可以为非事务性消息有意义的方式设置消息优先级。 事务性消息的优先级自动设置为零，这会导致事务性消息优先级被忽略。"
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/p-system.messaging.messa_49_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_49_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/p-system.messaging.messa_49_1.cs)]"
  syntax:
    content: public bool Priority { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Priority%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Recoverable
  id: Recoverable
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
  fullName: System.Messaging.MessagePropertyFilter.Recoverable
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.Recoverable%2A>属性<xref:System.Messaging.Message>类指示是否保证消息的传递方式，即使消息启用路由到目标队列的过程中出现计算机故障。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Recoverable%2A>       如果保证消息的传递，消息是本地存储的每一个步骤直到消息成功转发到下一台计算机。 设置<xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName>到`true`对消息可能会影响吞吐量。</xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the Recoverable property.  \n  \n [!code-cpp[MessagePropertyFilter#23](~/add/codesnippet/cpp/p-system.messaging.messa_62_1.cpp)]\n [!code-cs[MessagePropertyFilter#23](~/add/codesnippet/csharp/p-system.messaging.messa_62_1.cs)]"
  syntax:
    content: public bool Recoverable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Recoverable*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue
  id: ResponseQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
  fullName: System.Messaging.MessagePropertyFilter.ResponseQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.ResponseQueue%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.ResponseQueue%2A>属性<xref:System.Messaging.Message>类标识接收发送回发送应用程序接收应用程序的应用程序生成的响应消息的队列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.ResponseQueue%2A> 当应用程序发送其消息时由发送应用程序指定响应队列。 任何可用队列均可指定为响应队列。       返回到响应队列消息是特定于应用程序。 应用程序必须定义中的消息以及什么是收到一条消息时执行的操作。"
  example:
  - "The following code example demonstrates the use of the ResponseQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#24](~/add/codesnippet/cpp/p-system.messaging.messa_64_1.cpp)]\n [!code-cs[MessagePropertyFilter#24](~/add/codesnippet/csharp/p-system.messaging.messa_64_1.cs)]"
  syntax:
    content: public bool ResponseQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.ResponseQueue%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.ResponseQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate
  id: SenderCertificate
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
  fullName: System.Messaging.MessagePropertyFilter.SenderCertificate
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.SenderCertificate%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.SenderCertificate%2A>属性<xref:System.Messaging.Message>类指定用于对消息进行身份验证的安全证书。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SenderCertificate%2A>"
  example:
  - "The following code example demonstrates the use of the SenderCertificate property.  \n  \n [!code-cpp[MessagePropertyFilter#25](~/add/codesnippet/cpp/p-system.messaging.messa_60_1.cpp)]\n [!code-cs[MessagePropertyFilter#25](~/add/codesnippet/csharp/p-system.messaging.messa_60_1.cs)]"
  syntax:
    content: public bool SenderCertificate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SenderCertificate%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SenderCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderId
  id: SenderId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
  fullName: System.Messaging.MessagePropertyFilter.SenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.SenderId%2A>属性<xref:System.Messaging.Message>类主要由接收队列管理器进行身份验证消息时使用。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SenderId%2A> 属性由消息队列设置，并使用的队列管理器来验证发件人消息以及发送方到接收队列的访问权限。"
  example:
  - "The following code example demonstrates the use of the SenderId property.  \n  \n [!code-cpp[MessagePropertyFilter#26](~/add/codesnippet/cpp/p-system.messaging.messa_24_1.cpp)]\n [!code-cs[MessagePropertyFilter#26](~/add/codesnippet/csharp/p-system.messaging.messa_24_1.cs)]"
  syntax:
    content: public bool SenderId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SenderId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderVersion
  id: SenderVersion
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
  fullName: System.Messaging.MessagePropertyFilter.SenderVersion
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.SenderVersion%2A>属性<xref:System.Messaging.Message>类指定的消息队列用于发送消息的版本。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SenderVersion%2A> 属性是重要的使用时应注意事务处理，仅支持由消息队列 2.0 版和更高版本，或数字签名，用于进行身份验证发送版本 1.0 的消息等功能。       <xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName>由发送队列管理器发送消息时设置。</xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the SenderVersion property.  \n  \n [!code-cpp[MessagePropertyFilter#27](~/add/codesnippet/cpp/p-system.messaging.messa_102_1.cpp)]\n [!code-cs[MessagePropertyFilter#27](~/add/codesnippet/csharp/p-system.messaging.messa_102_1.cs)]"
  syntax:
    content: public bool SenderVersion { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SenderVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SentTime
  id: SentTime
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
  fullName: System.Messaging.MessagePropertyFilter.SentTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.SentTime%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.SentTime%2A>属性<xref:System.Messaging.Message>类指示发送计算机的日期和时间时由源队列管理器发送消息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SentTime%2A>"
  example:
  - "The following code example demonstrates the use of the SentTime property.  \n  \n [!code-cpp[MessagePropertyFilter#28](~/add/codesnippet/cpp/p-system.messaging.messa_97_1.cpp)]\n [!code-cs[MessagePropertyFilter#28](~/add/codesnippet/csharp/p-system.messaging.messa_97_1.cs)]"
  syntax:
    content: public bool SentTime { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SentTime%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SentTime*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SetAll
  id: SetAll
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SetAll()
  nameWithType: MessagePropertyFilter.SetAll()
  fullName: System.Messaging.MessagePropertyFilter.SetAll()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "指定要从中接收消息时检索所有消息属性。"
  remarks: "使用 SetAll 来设置所有布尔<xref:System.Messaging.MessagePropertyFilter>属性设置为`true`。</xref:System.Messaging.MessagePropertyFilter> 这将导致在接收消息时要检索的所有消息属性。 SetAll 不会影响的值<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>， <xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>，或<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>。</xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>       在调用 SetAll 之后, 中，你可以将各个筛选器值为`false`以便限制时收到的消息检索的属性。"
  example:
  - "The following code example calls the SetAll method.  \n  \n [!code-cpp[MessagePropertyFilter#39](~/add/codesnippet/cpp/m-system.messaging.messa_48_1.cpp)]\n [!code-cs[MessagePropertyFilter#39](~/add/codesnippet/csharp/m-system.messaging.messa_48_1.cs)]"
  syntax:
    content: public void SetAll ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.SetAll*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SetDefaults
  id: SetDefaults
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SetDefaults()
  nameWithType: MessagePropertyFilter.SetDefaults()
  fullName: System.Messaging.MessagePropertyFilter.SetDefaults()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "设置到常见的消息队列的属性的筛选器值<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和为其默认值的整数值的属性。"
  remarks: "SetDefaults 用于设置以下<xref:System.Messaging.MessagePropertyFilter>布尔值属性设置为`true`。</xref:System.Messaging.MessagePropertyFilter> 这些是最常见属性<xref:System.Messaging.MessageQueue>通常将与以下交互:- <xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A>- <xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A>- <xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A>- <xref:System.Messaging.MessagePropertyFilter.Body%2A>- <xref:System.Messaging.MessagePropertyFilter.Id%2A>- <xref:System.Messaging.MessagePropertyFilter.Label%2A>- <xref:System.Messaging.MessagePropertyFilter.LookupId%2A>- <xref:System.Messaging.MessagePropertyFilter.MessageType%2A>- <xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A>- <xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A>- <xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A>SetDefaults 为其默认值下表中设置的属性。</xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A> </xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A> </xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A> </xref:System.Messaging.MessagePropertyFilter.MessageType%2A> </xref:System.Messaging.MessagePropertyFilter.LookupId%2A> </xref:System.Messaging.MessagePropertyFilter.Label%2A> </xref:System.Messaging.MessagePropertyFilter.Id%2A> </xref:System.Messaging.MessagePropertyFilter.Body%2A> </xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A> </xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A> </xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A> </xref:System.Messaging.MessageQueue>      |属性 |默认值 |  |--------------|-------------------|  |<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|&1024;年 |  |<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|&255; |  |<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|&255; |      <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A?displayProperty=fullName>属性表示<xref:System.Messaging.MessagePropertyFilter>对已调用 SetDefaults。</xref:System.Messaging.MessagePropertyFilter> </xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A?displayProperty=fullName> </xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>"
  example:
  - "The following code example calls the SetDefaults method.  \n  \n [!code-cpp[MessagePropertyFilter#38](~/add/codesnippet/cpp/m-system.messaging.messa_45_1.cpp)]\n [!code-cs[MessagePropertyFilter#38](~/add/codesnippet/csharp/m-system.messaging.messa_45_1.cs)]"
  syntax:
    content: public void SetDefaults ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.SetDefaults*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SourceMachine
  id: SourceMachine
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
  fullName: System.Messaging.MessagePropertyFilter.SourceMachine
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.SourceMachine%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.SourceMachine%2A>属性<xref:System.Messaging.Message>类指定消息的出处的计算机。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SourceMachine%2A>"
  example:
  - "The following code example demonstrates the use of the SourceMachine property.  \n  \n [!code-cpp[MessagePropertyFilter#29](~/add/codesnippet/cpp/p-system.messaging.messa_40_1.cpp)]\n [!code-cs[MessagePropertyFilter#29](~/add/codesnippet/csharp/p-system.messaging.messa_40_1.cs)]"
  syntax:
    content: public bool SourceMachine { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SourceMachine%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SourceMachine*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  id: TimeToBeReceived
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
  fullName: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.TimeToBeReceived%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.TimeToBeReceived%2A>属性<xref:System.Messaging.Message>类指定以秒为单位发送消息要想从目标队列接收的总时间。</xref:System.Messaging.Message> </xref:System.Messaging.Message.TimeToBeReceived%2A> 要从目标队列检索消息了时间限制包括到达目标队列所用的时间以及花费在队列中的等待的时间之前应用程序检索消息。"
  example:
  - "The following code example demonstrates the use of the TimeToBeReceived property.  \n  \n [!code-cpp[MessagePropertyFilter#30](~/add/codesnippet/cpp/p-system.messaging.messa_0_1.cpp)]\n [!code-cs[MessagePropertyFilter#30](~/add/codesnippet/csharp/p-system.messaging.messa_0_1.cs)]"
  syntax:
    content: public bool TimeToBeReceived { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.TimeToBeReceived%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.TimeToBeReceived*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  id: TimeToReachQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
  fullName: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.TimeToReachQueue%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.TimeToReachQueue%2A>属性<xref:System.Messaging.Message>类从才能到达目标队列发送消息的时间的秒数指定的时间限制。</xref:System.Messaging.Message> </xref:System.Messaging.Message.TimeToReachQueue%2A>"
  example:
  - "The following code example demonstrates the use of the TimeToReachQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#31](~/add/codesnippet/cpp/p-system.messaging.messa_51_1.cpp)]\n [!code-cs[MessagePropertyFilter#31](~/add/codesnippet/csharp/p-system.messaging.messa_51_1.cs)]"
  syntax:
    content: public bool TimeToReachQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.TimeToReachQueue%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.TimeToReachQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TransactionId
  id: TransactionId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
  fullName: System.Messaging.MessagePropertyFilter.TransactionId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.TransactionId%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.TransactionId%2A>属性<xref:System.Messaging.Message>类将标识在发送消息的事务。</xref:System.Messaging.Message> </xref:System.Messaging.Message.TransactionId%2A> 使用此属性在接收应用程序以验证消息已发送特定事务的一部分。"
  example:
  - "The following code example demonstrates the use of the TransactionId property.  \n  \n [!code-cpp[MessagePropertyFilter#52](~/add/codesnippet/cpp/p-system.messaging.messa_46_1.cpp)]\n [!code-cs[MessagePropertyFilter#52](~/add/codesnippet/csharp/p-system.messaging.messa_46_1.cs)]"
  syntax:
    content: public bool TransactionId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.TransactionId%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.TransactionId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  id: TransactionStatusQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
  fullName: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.TransactionStatusQueue%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.TransactionStatusQueue%2A>属性<xref:System.Messaging.Message>类将标识在源计算机上的事务状态队列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.TransactionStatusQueue%2A> 属性用于将确认消息发送回给发送应用程序。 接收发送到外部队列的事务性消息时，将通过连接器应用程序使用的事务状态队列。       非 Microsoft 消息队列的队列系统中不存在外队列。 Microsoft 消息队列与此类通过连接器应用程序的队列进行通信。"
  example:
  - "The following code example demonstrates the use of the TransactionStatusQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#53](~/add/codesnippet/cpp/p-system.messaging.messa_29_1.cpp)]\n [!code-cs[MessagePropertyFilter#53](~/add/codesnippet/csharp/p-system.messaging.messa_29_1.cs)]"
  syntax:
    content: public bool TransactionStatusQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.TransactionStatusQueue%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.TransactionStatusQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication
  id: UseAuthentication
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
  fullName: System.Messaging.MessagePropertyFilter.UseAuthentication
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.UseAuthentication%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.UseAuthentication%2A>属性<xref:System.Messaging.Message>类指定是否需要进行身份验证消息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseAuthentication%2A>       不能查看的消息属性，并确定消息是否未通过身份验证。 身份验证失败的消息被丢弃并不会传递到队列。"
  example:
  - "The following code example demonstrates the use of the UseAuthentication property.  \n  \n [!code-cpp[MessagePropertyFilter#32](~/add/codesnippet/cpp/p-system.messaging.messa_34_1.cpp)]\n [!code-cs[MessagePropertyFilter#32](~/add/codesnippet/csharp/p-system.messaging.messa_34_1.cs)]"
  syntax:
    content: public bool UseAuthentication { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseAuthentication%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  id: UseDeadLetterQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
  fullName: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.UseDeadLetterQueue%2A>属性<xref:System.Messaging.Message>类指定是否应将无法传递消息的副本发送到死信队列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseDeadLetterQueue%2A>"
  example:
  - "The following code example demonstrates the use of the UseDeadLetterQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#33](~/add/codesnippet/cpp/p-system.messaging.messa_58_1.cpp)]\n [!code-cs[MessagePropertyFilter#33](~/add/codesnippet/csharp/p-system.messaging.messa_58_1.cs)]"
  syntax:
    content: public bool UseDeadLetterQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseEncryption
  id: UseEncryption
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
  fullName: System.Messaging.MessagePropertyFilter.UseEncryption
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.UseEncryption%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.UseEncryption%2A>属性<xref:System.Messaging.Message>类指定是否对消息进行加密。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseEncryption%2A>"
  example:
  - "The following code example demonstrates the use of the UseEncryption property.  \n  \n [!code-cpp[MessagePropertyFilter#34](~/add/codesnippet/cpp/p-system.messaging.messa_35_1.cpp)]\n [!code-cs[MessagePropertyFilter#34](~/add/codesnippet/csharp/p-system.messaging.messa_35_1.cs)]"
  syntax:
    content: public bool UseEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseEncryption%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseEncryption*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue
  id: UseJournalQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
  fullName: System.Messaging.MessagePropertyFilter.UseJournalQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.UseJournalQueue%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.UseJournalQueue%2A>属性<xref:System.Messaging.Message>类指定的消息副本是否应保存在原始计算机上的计算机日记中。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseJournalQueue%2A>"
  example:
  - "The following code example demonstrates the use of the UseJournalQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#35](~/add/codesnippet/cpp/p-system.messaging.messa_44_1.cpp)]\n [!code-cs[MessagePropertyFilter#35](~/add/codesnippet/csharp/p-system.messaging.messa_44_1.cs)]"
  syntax:
    content: public bool UseJournalQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseJournalQueue%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseJournalQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseTracing
  id: UseTracing
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
  fullName: System.Messaging.MessagePropertyFilter.UseTracing
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置一个值，该值指示是否检索&lt;xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName&gt;接收或查看消息时的属性信息。"
  remarks: "<xref:System.Messaging.Message.UseTracing%2A>属性<xref:System.Messaging.Message>类指定是否向其目标队列移动跟踪消息的路由。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseTracing%2A> 如果`true`，每次通过消息队列的路由服务器的原始消息传递时，消息队列生成的报告消息发送到系统报告队列。       使用跟踪包括设置 Active Directory 和指定报表队列的消息队列企业。 由管理员配置这些设置。"
  example:
  - "The following code example demonstrates the use of the UseTracing property.  \n  \n [!code-cpp[MessagePropertyFilter#36](~/add/codesnippet/cpp/p-system.messaging.messa_14_1.cpp)]\n [!code-cs[MessagePropertyFilter#36](~/add/codesnippet/csharp/p-system.messaging.messa_14_1.cs)]"
  syntax:
    content: public bool UseTracing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName&gt;信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseTracing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Messaging.MessagePropertyFilter.#ctor
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessagePropertyFilter()
  nameWithType: MessagePropertyFilter.MessagePropertyFilter()
  fullName: System.Messaging.MessagePropertyFilter.MessagePropertyFilter()
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
  fullName: System.Messaging.MessagePropertyFilter.AcknowledgeType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
  fullName: System.Messaging.MessagePropertyFilter.Acknowledgment
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
  fullName: System.Messaging.MessagePropertyFilter.AdministrationQueue
- uid: System.Messaging.MessagePropertyFilter.AppSpecific
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
  fullName: System.Messaging.MessagePropertyFilter.AppSpecific
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
  fullName: System.Messaging.MessagePropertyFilter.ArrivedTime
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
  fullName: System.Messaging.MessagePropertyFilter.AttachSenderId
- uid: System.Messaging.MessagePropertyFilter.Authenticated
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
  fullName: System.Messaging.MessagePropertyFilter.Authenticated
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
- uid: System.Messaging.MessagePropertyFilter.Body
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Body
  nameWithType: MessagePropertyFilter.Body
  fullName: System.Messaging.MessagePropertyFilter.Body
- uid: System.Messaging.MessagePropertyFilter.ClearAll
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ClearAll()
  nameWithType: MessagePropertyFilter.ClearAll()
  fullName: System.Messaging.MessagePropertyFilter.ClearAll()
- uid: System.Messaging.MessagePropertyFilter.Clone
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Clone()
  nameWithType: MessagePropertyFilter.Clone()
  fullName: System.Messaging.MessagePropertyFilter.Clone()
- uid: System.Messaging.MessagePropertyFilter.ConnectorType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
  fullName: System.Messaging.MessagePropertyFilter.ConnectorType
- uid: System.Messaging.MessagePropertyFilter.CorrelationId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
  fullName: System.Messaging.MessagePropertyFilter.CorrelationId
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
  fullName: System.Messaging.MessagePropertyFilter.DefaultBodySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultLabelSize
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
  fullName: System.Messaging.MessagePropertyFilter.DestinationQueue
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
  fullName: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
  fullName: System.Messaging.MessagePropertyFilter.DigitalSignature
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Extension
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
  fullName: System.Messaging.MessagePropertyFilter.Extension
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.HashAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Id
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Id
  nameWithType: MessagePropertyFilter.Id
  fullName: System.Messaging.MessagePropertyFilter.Id
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsLastInTransaction
- uid: System.Messaging.MessagePropertyFilter.Label
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Label
  nameWithType: MessagePropertyFilter.Label
  fullName: System.Messaging.MessagePropertyFilter.Label
- uid: System.Messaging.MessagePropertyFilter.LookupId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
  fullName: System.Messaging.MessagePropertyFilter.LookupId
- uid: System.Messaging.MessagePropertyFilter.MessageType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
  fullName: System.Messaging.MessagePropertyFilter.MessageType
- uid: System.Messaging.MessagePropertyFilter.Priority
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
  fullName: System.Messaging.MessagePropertyFilter.Priority
- uid: System.Messaging.MessagePropertyFilter.Recoverable
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
  fullName: System.Messaging.MessagePropertyFilter.Recoverable
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
  fullName: System.Messaging.MessagePropertyFilter.ResponseQueue
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
  fullName: System.Messaging.MessagePropertyFilter.SenderCertificate
- uid: System.Messaging.MessagePropertyFilter.SenderId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
  fullName: System.Messaging.MessagePropertyFilter.SenderId
- uid: System.Messaging.MessagePropertyFilter.SenderVersion
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
  fullName: System.Messaging.MessagePropertyFilter.SenderVersion
- uid: System.Messaging.MessagePropertyFilter.SentTime
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
  fullName: System.Messaging.MessagePropertyFilter.SentTime
- uid: System.Messaging.MessagePropertyFilter.SetAll
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetAll()
  nameWithType: MessagePropertyFilter.SetAll()
  fullName: System.Messaging.MessagePropertyFilter.SetAll()
- uid: System.Messaging.MessagePropertyFilter.SetDefaults
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetDefaults()
  nameWithType: MessagePropertyFilter.SetDefaults()
  fullName: System.Messaging.MessagePropertyFilter.SetDefaults()
- uid: System.Messaging.MessagePropertyFilter.SourceMachine
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
  fullName: System.Messaging.MessagePropertyFilter.SourceMachine
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
  fullName: System.Messaging.MessagePropertyFilter.TimeToBeReceived
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
  fullName: System.Messaging.MessagePropertyFilter.TimeToReachQueue
- uid: System.Messaging.MessagePropertyFilter.TransactionId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
  fullName: System.Messaging.MessagePropertyFilter.TransactionId
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
  fullName: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
  fullName: System.Messaging.MessagePropertyFilter.UseAuthentication
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
  fullName: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
- uid: System.Messaging.MessagePropertyFilter.UseEncryption
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
  fullName: System.Messaging.MessagePropertyFilter.UseEncryption
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
  fullName: System.Messaging.MessagePropertyFilter.UseJournalQueue
- uid: System.Messaging.MessagePropertyFilter.UseTracing
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
  fullName: System.Messaging.MessagePropertyFilter.UseTracing
- uid: System.Messaging.MessagePropertyFilter.#ctor*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessagePropertyFilter
  nameWithType: MessagePropertyFilter.MessagePropertyFilter
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
- uid: System.Messaging.MessagePropertyFilter.AppSpecific*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
- uid: System.Messaging.MessagePropertyFilter.Authenticated*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
- uid: System.Messaging.MessagePropertyFilter.Body*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Body
  nameWithType: MessagePropertyFilter.Body
- uid: System.Messaging.MessagePropertyFilter.ClearAll*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ClearAll
  nameWithType: MessagePropertyFilter.ClearAll
- uid: System.Messaging.MessagePropertyFilter.Clone*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Clone
  nameWithType: MessagePropertyFilter.Clone
- uid: System.Messaging.MessagePropertyFilter.ConnectorType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
- uid: System.Messaging.MessagePropertyFilter.CorrelationId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Extension*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Id*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Id
  nameWithType: MessagePropertyFilter.Id
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
- uid: System.Messaging.MessagePropertyFilter.Label*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Label
  nameWithType: MessagePropertyFilter.Label
- uid: System.Messaging.MessagePropertyFilter.LookupId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
- uid: System.Messaging.MessagePropertyFilter.MessageType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
- uid: System.Messaging.MessagePropertyFilter.Priority*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
- uid: System.Messaging.MessagePropertyFilter.Recoverable*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
- uid: System.Messaging.MessagePropertyFilter.SenderId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
- uid: System.Messaging.MessagePropertyFilter.SenderVersion*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
- uid: System.Messaging.MessagePropertyFilter.SentTime*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
- uid: System.Messaging.MessagePropertyFilter.SetAll*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetAll
  nameWithType: MessagePropertyFilter.SetAll
- uid: System.Messaging.MessagePropertyFilter.SetDefaults*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetDefaults
  nameWithType: MessagePropertyFilter.SetDefaults
- uid: System.Messaging.MessagePropertyFilter.SourceMachine*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
- uid: System.Messaging.MessagePropertyFilter.TransactionId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
- uid: System.Messaging.MessagePropertyFilter.UseEncryption*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
- uid: System.Messaging.MessagePropertyFilter.UseTracing*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
