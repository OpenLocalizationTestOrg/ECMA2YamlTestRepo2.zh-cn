### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey
  id: AsymmetricSecurityKey
  children:
  - System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor
  - System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  - System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  - System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  - System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  - System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey
  langs:
  - csharp
  name: AsymmetricSecurityKey
  nameWithType: AsymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey
  type: Class
  summary: "有关非对称密钥的基类。"
  remarks: "不能使用此类时[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]在部分信任下运行。"
  syntax:
    content: 'public abstract class AsymmetricSecurityKey : System.IdentityModel.Tokens.SecurityKey'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKey
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKey.KeySize
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  langs:
  - csharp
  name: AsymmetricSecurityKey()
  nameWithType: AsymmetricSecurityKey.AsymmetricSecurityKey()
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.AsymmetricSecurityKey()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新实例<xref href=&quot;System.IdentityModel.Tokens.AsymmetricSecurityKey&quot;></xref>类。"
  syntax:
    content: protected AsymmetricSecurityKey ();
    parameters: []
  overload: System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  id: GetAsymmetricAlgorithm(System.String,System.Boolean)
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  langs:
  - csharp
  name: GetAsymmetricAlgorithm(String,Boolean)
  nameWithType: AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "当在派生类中重写，获取指定的非对称加密算法。"
  remarks: "使用的静态字段<xref:System.IdentityModel.Tokens.SecurityAlgorithms>类指定算法。</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public abstract System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);
    parameters:
    - id: algorithm
      type: System.String
      description: "要创建的非对称算法。"
    - id: privateKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>何时需要私钥来创建算法;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "<xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> ，表示指定的非对称加密算法。       通常情况下， <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>传递到<code> privateKey </code>参数，作为私有密钥是解密通常需要。"
  overload: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  id: GetHashAlgorithmForSignature(System.String)
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  langs:
  - csharp
  name: GetHashAlgorithmForSignature(String)
  nameWithType: AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "当在派生类中重写，获取用于生成数字签名的哈希值的加密算法。"
  remarks: "使用的静态字段<xref:System.IdentityModel.Tokens.SecurityAlgorithms>类指定算法。</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public abstract System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "哈希算法。"
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: "A <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> ，用来生成数字签名的哈希值。"
  overload: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  id: GetSignatureDeformatter(System.String)
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  langs:
  - csharp
  name: GetSignatureDeformatter(String)
  nameWithType: AsymmetricSecurityKey.GetSignatureDeformatter(String)
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "当在派生类中重写，获取数字签名的反格式化程序算法。"
  remarks: "签名反格式化程序通常用于验证数字签名。       使用的静态字段<xref:System.IdentityModel.Tokens.SecurityAlgorithms>类指定算法。</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public abstract System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "数字签名的反格式化程序算法。"
    return:
      type: System.Security.Cryptography.AsymmetricSignatureDeformatter
      description: "<xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;> </xref> ，它表示数字签名反格式化程序算法。"
  overload: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  id: GetSignatureFormatter(System.String)
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  langs:
  - csharp
  name: GetSignatureFormatter(String)
  nameWithType: AsymmetricSecurityKey.GetSignatureFormatter(String)
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "当在派生类中重写，获取数字签名的格式化程序算法。"
  remarks: "通常情况下，签名格式化程序用于生成数字签名。       使用的静态字段<xref:System.IdentityModel.Tokens.SecurityAlgorithms>类指定算法。</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public abstract System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "数字签名的格式化程序算法。"
    return:
      type: System.Security.Cryptography.AsymmetricSignatureFormatter
      description: "<xref href=&quot;System.Security.Cryptography.AsymmetricSignatureFormatter&quot;> </xref> ，它表示数字签名的格式化程序算法。"
  overload: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey
  id: HasPrivateKey
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  langs:
  - csharp
  name: HasPrivateKey()
  nameWithType: AsymmetricSecurityKey.HasPrivateKey()
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "当在派生类中重写，获取一个值，该值指示私钥是否可用。"
  syntax:
    content: public abstract bool HasPrivateKey ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>当可用; 私钥时否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKey
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: AsymmetricSecurityKey()
  nameWithType: AsymmetricSecurityKey.AsymmetricSecurityKey()
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.AsymmetricSecurityKey()
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: GetAsymmetricAlgorithm(String,Boolean)
  nameWithType: AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: GetHashAlgorithmForSignature(String)
  nameWithType: AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureDeformatter(String)
  nameWithType: AsymmetricSecurityKey.GetSignatureDeformatter(String)
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(String)
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureFormatter(String)
  nameWithType: AsymmetricSecurityKey.GetSignatureFormatter(String)
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(String)
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: HasPrivateKey()
  nameWithType: AsymmetricSecurityKey.HasPrivateKey()
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey()
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor*
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: AsymmetricSecurityKey
  nameWithType: AsymmetricSecurityKey.AsymmetricSecurityKey
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: GetAsymmetricAlgorithm
  nameWithType: AsymmetricSecurityKey.GetAsymmetricAlgorithm
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature*
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: GetHashAlgorithmForSignature
  nameWithType: AsymmetricSecurityKey.GetHashAlgorithmForSignature
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter*
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureDeformatter
  nameWithType: AsymmetricSecurityKey.GetSignatureDeformatter
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter*
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureFormatter
  nameWithType: AsymmetricSecurityKey.GetSignatureFormatter
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey*
  parent: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: HasPrivateKey
  nameWithType: AsymmetricSecurityKey.HasPrivateKey
