### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IWsdlExportExtension
  id: IWsdlExportExtension
  children:
  - System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  - System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  langs:
  - csharp
  name: IWsdlExportExtension
  nameWithType: IWsdlExportExtension
  fullName: System.ServiceModel.Description.IWsdlExportExtension
  type: Interface
  summary: "定义可以导出自定义元数据的终结点或协定行为。"
  remarks: "若要修改和扩展 Web 服务描述语言 (WSDL) 由导出<xref:System.ServiceModel.Description.WsdlExporter>对象，对终结点、 协定或操作行为实现 IWsdlExportExtension 接口 (实现的对象<xref:System.ServiceModel.Description.IContractBehavior>， <xref:System.ServiceModel.Description.IEndpointBehavior>，或<xref:System.ServiceModel.Description.IOperationBehavior>) 并将行为添加到<xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>， <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>，或<xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A>属性。</xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> </xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> </xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> </xref:System.ServiceModel.Description.IOperationBehavior> </xref:System.ServiceModel.Description.IEndpointBehavior> </xref:System.ServiceModel.Description.IContractBehavior> </xref:System.ServiceModel.Description.WsdlExporter> 此外，还可以实现 IWsdlExportExtension <xref:System.ServiceModel.Channels.BindingElement>。</xref:System.ServiceModel.Channels.BindingElement>      1> [!NOTE]&1;> 如果它们并作为<xref:System.ServiceModel.Description.IServiceBehavior>.</xref:System.ServiceModel.Description.IServiceBehavior>实现，则从不会调用 IWsdlExportExtension 实现       即使 IWsdlExportExtension 不会导出自定义策略断言[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]将自定义绑定策略断言导出到 WSDL 内的相应元素。 如果你想要导出自定义策略断言，实现<xref:System.ServiceModel.Description.IPolicyExportExtension>接口。</xref:System.ServiceModel.Description.IPolicyExportExtension>       元数据发布过程首先通过调用<xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=fullName>从而又会调用<xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=fullName>每个终结点。</xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=fullName>       首先导出其协定导出终结点。导出协定时<xref:System.ServiceModel.Description.WsdlExporter?displayProperty=fullName>调用<xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=fullName>协定和操作行为上的所有 IWsdlExportExtension 实现上实现该协定的方法。</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlExporter?displayProperty=fullName> 中的元数据，不会导出使用通配符操作的操作，因此不会导出这些操作的操作行为上的 IWsdlExportExtension 实现。       导出协定后, 的端口和绑定将导出，并且表达式附加导出的策略。       同时<xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>和<xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>方法提供对访问<xref:System.ServiceModel.Description.WsdlExporter>以便 IWsdlExportExtension 实现可以报告可恢复的错误和警告通过<xref:System.ServiceModel.Description.MetadataExporter.Errors%2A>属性。</xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> </xref:System.ServiceModel.Description.WsdlExporter> </xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> </xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 传递到这两种方法的上下文对象提供从导出的 WSDL 元素到的属性的方便映射<xref:System.ServiceModel.Description.ContractDescription>和<xref:System.ServiceModel.Description.ServiceEndpoint>对象。</xref:System.ServiceModel.Description.ServiceEndpoint> </xref:System.ServiceModel.Description.ContractDescription>       如果 IWsdlExportExtension 实现在导出时引发了异常，生成的元数据处于不一致的状态和<xref:System.ServiceModel.Description.WsdlExporter>对象应被放弃。</xref:System.ServiceModel.Description.WsdlExporter>      1> [!NOTE]&1;> 内置序列化程序填充服务说明之后，必须运行自定义导出扩展。"
  example:
  - "The following code example shows an IWsdlExportExtension that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public interface IWsdlExportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  id: ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  langs:
  - csharp
  name: ExportContract(WsdlExporter,WsdlContractConversionContext)
  nameWithType: IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "将自定义 Web 服务描述语言 (WSDL) 元素写入到生成的 WSDL 协定。"
  remarks: "元数据导出系统导出协定时调用 ExportContract 方法。 唯一的协定和操作行为实现<xref:System.ServiceModel.Description.IWsdlExportExtension>获取 ExportContract 调用。</xref:System.ServiceModel.Description.IWsdlExportExtension> 实现的所有行为<xref:System.ServiceModel.Description.IWsdlExportExtension>获取<xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>调用。</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> </xref:System.ServiceModel.Description.IWsdlExportExtension>       使用`context`参数来修改要导出的 WSDL。 有关示例，请参阅示例部分。"
  example:
  - "The following code example shows an <xref:System.ServiceModel.Description.IWsdlExportExtension> that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.WsdlExporter
      description: "<xref href=&quot;System.ServiceModel.Description.WsdlExporter&quot;> </xref>导出协定信息。"
    - id: context
      type: System.ServiceModel.Description.WsdlContractConversionContext
      description: "提供从导出的 WSDL 元素到协定说明的映射。"
  overload: System.ServiceModel.Description.IWsdlExportExtension.ExportContract*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  id: ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  langs:
  - csharp
  name: ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  nameWithType: IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "将自定义 Web 服务描述语言 (WSDL) 元素写入到生成的 WSDL 的终结点。"
  remarks: "实现 ExportEndpoint 方法可修改的终结点导出的 WSDL。 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>已导出协定后调用此方法"
  example:
  - "The following code example shows an <xref:System.ServiceModel.Description.IWsdlExportExtension> that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.WsdlExporter
      description: "<xref href=&quot;System.ServiceModel.Description.WsdlExporter&quot;> </xref>导出终结点信息。"
    - id: context
      type: System.ServiceModel.Description.WsdlEndpointConversionContext
      description: "提供从导出的 WSDL 元素到终结点说明的映射。"
  overload: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportContract(WsdlExporter,WsdlContractConversionContext)
  nameWithType: IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
- uid: System.ServiceModel.Description.WsdlExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlExporter
  nameWithType: WsdlExporter
  fullName: System.ServiceModel.Description.WsdlExporter
- uid: System.ServiceModel.Description.WsdlContractConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlContractConversionContext
  nameWithType: WsdlContractConversionContext
  fullName: System.ServiceModel.Description.WsdlContractConversionContext
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  nameWithType: IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
- uid: System.ServiceModel.Description.WsdlEndpointConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlEndpointConversionContext
  nameWithType: WsdlEndpointConversionContext
  fullName: System.ServiceModel.Description.WsdlEndpointConversionContext
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract*
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportContract
  nameWithType: IWsdlExportExtension.ExportContract
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint*
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportEndpoint
  nameWithType: IWsdlExportExtension.ExportEndpoint
