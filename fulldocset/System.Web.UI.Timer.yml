### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Timer
  id: Timer
  children:
  - System.Web.UI.Timer.#ctor
  - System.Web.UI.Timer.Enabled
  - System.Web.UI.Timer.GetScriptDescriptors
  - System.Web.UI.Timer.GetScriptReferences
  - System.Web.UI.Timer.Interval
  - System.Web.UI.Timer.OnPreRender(System.EventArgs)
  - System.Web.UI.Timer.OnTick(System.EventArgs)
  - System.Web.UI.Timer.RaisePostBackEvent(System.String)
  - System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors
  - System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences
  - System.Web.UI.Timer.Tick
  - System.Web.UI.Timer.Visible
  langs:
  - csharp
  name: Timer
  nameWithType: Timer
  fullName: System.Web.UI.Timer
  type: Class
  summary: "在定义的时间间隔执行异步或同步网页回发。"
  remarks: "本主题中:-[简介](#introduction)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介计时器控制，你可以指定的时间间隔执行回发。       当你使用的触发器，以作为计时器控件<xref:System.Web.UI.UpdatePanel>控件，<xref:System.Web.UI.UpdatePanel>控件更新通过使用异步、 局部页面更新。</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> 必须包括<xref:System.Web.UI.ScriptManager>网页使用计时器控件中的对象。</xref:System.Web.UI.ScriptManager>       你可以使用计时器控件来更新<xref:System.Web.UI.UpdatePanel>通过内部包含计时器控件<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> 或者，你可以将外部计时器<xref:System.Web.UI.UpdatePanel>控制并将计时器设置为触发器。</xref:System.Web.UI.UpdatePanel>       您还可以通过网页中包括计时器控件并不将其设置为的触发器，以启动一个完整的 Web 页面的完整回发<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel>       计时器间隔已过去通过创建的事件处理程序时，你可以运行服务器代码<xref:System.Web.UI.Timer.Tick>事件。</xref:System.Web.UI.Timer.Tick> 在事件处理程序中，可以包含动态调整计时器控件的行为的代码。       设置<xref:System.Web.UI.Timer.Interval%2A>属性，以指定频率回发的发生。</xref:System.Web.UI.Timer.Interval%2A> 设置<xref:System.Web.UI.Timer.Enabled%2A>属性来打开上的计时器或关闭。</xref:System.Web.UI.Timer.Enabled%2A>      1> [!NOTE]&1;> 当计时器控件回发到 Web 服务器的准确性取决于的 ECMAScript (JavaScript) 的准确性`window.setTimeout`浏览器中运行的函数。       <xref:System.Web.UI.Timer.Interval%2A>以毫秒为单位定义属性。</xref:System.Web.UI.Timer.Interval%2A> 必须设置<xref:System.Web.UI.Timer.Interval%2A>属性允许在至少一个异步回发的值完成之前启动下一步的回发。</xref:System.Web.UI.Timer.Interval%2A> 当计时器控件位于外部<xref:System.Web.UI.UpdatePanel>控件，计时器将继续运行时的内容<xref:System.Web.UI.UpdatePanel>刷新控件。</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> 如果在处理早期回发时，启动新的回发，则第一个回发将被取消。 默认值为 60000 毫秒 （60 秒）。      1> [!NOTE]&1;> 添加具有较小的值中的计时器控件<xref:System.Web.UI.Timer.Interval%2A>属性会生成大量流量与其他 Web 服务器。</xref:System.Web.UI.Timer.Interval%2A> 使用计时器控件以仅必须经常刷新的内容。      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:Timer       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       Interval=&quot;integer&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnTick=&quot;Tick event handler&quot;       OnUnload=&quot;Unload handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Visible=&quot;True|False&quot;   />   ```"
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. The Timer control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds.  \n  \n> [!NOTE]\n>  In this example, the timer interval is set to 10 seconds so that when you run the example, you do not have to wait a long time to see the results. Because each timer interval causes a postback that causes network traffic, in a production application you should set the interval to the longest time that is still practical for your application.  \n  \n [!code-vb[System.Web.UI.Controls.Timer#1](~/add/codesnippet/visualbasic/t-system.web.ui.timer_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer#1](~/add/codesnippet/csharp/t-system.web.ui.timer_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Tick")]

      [System.ComponentModel.DefaultProperty("Interval")]

      [System.ComponentModel.Designer("System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.Timer.bmp")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.SupportsEventValidation]

      public class Timer : System.Web.UI.Control, System.Web.UI.IPostBackEventHandler, System.Web.UI.IScriptControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.IScriptControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.Timer.#ctor
  id: '#ctor'
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: System.Web.UI.Timer.Timer()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.Timer&quot;></xref>类。"
  syntax:
    content: public Timer ();
    parameters: []
  overload: System.Web.UI.Timer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Enabled
  id: Enabled
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: System.Web.UI.Timer.Enabled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件中指定的毫秒数后启动到服务器的回发<xref:System.Web.UI.Timer.Interval*>属性已过。</xref:System.Web.UI.Timer.Interval*>"
  remarks: "使用的 Enabled 属性<xref:System.Web.UI.Timer>上的控件和 off。</xref:System.Web.UI.Timer> 当设置已启用为`true`、<xref:System.Web.UI.Timer>呈现网页时，控件将启动其计时器倒计时。</xref:System.Web.UI.Timer>       在回发时，你可以更改属性值中的 Enabled 属性中，并在浏览器中呈现的网页内容时，将会反映所做的更改。 如果您更改的 Enabled 属性，然后在相同的回发，过程更改回其原始值<xref:System.Web.UI.Timer>控件在运行时就像具有已进行任何更改。</xref:System.Web.UI.Timer>"
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. By default, the <xref:System.Web.UI.Timer> control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds. The user can decide to update the stock price every 10 seconds, every 60 seconds, or not at all. When the user decides not to update the stock price, the Enabled property is set to `false`.  \n  \n [!code-vb[System.Web.UI.Controls.Timer.Interval#1](~/add/codesnippet/visualbasic/p-system.web.ui.timer.en_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer.Interval#1](~/add/codesnippet/csharp/p-system.web.ui.timer.en_1.aspx)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.Timer&quot;></xref>将启动回发; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Timer.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.GetScriptDescriptors
  id: GetScriptDescriptors
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: GetScriptDescriptors()
  nameWithType: Timer.GetScriptDescriptors()
  fullName: System.Web.UI.Timer.GetScriptDescriptors()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索属性从<xref href=&quot;System.Web.UI.Timer&quot;></xref>传递到浏览器中实现计时器逻辑的客户端组件的对象。"
  remarks: "GetScriptDescriptors 方法将添加<xref:System.Web.UI.Timer.Interval%2A>和<xref:System.Web.UI.Timer.Enabled%2A>的实例中的属性<xref:System.Web.UI.Timer>类到<xref:System.Web.UI.ScriptDescriptor>对象。</xref:System.Web.UI.ScriptDescriptor> </xref:System.Web.UI.Timer> </xref:System.Web.UI.Timer.Enabled%2A> </xref:System.Web.UI.Timer.Interval%2A> 客户端组件访问值，并在脚本中设置相应的值。"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor> GetScriptDescriptors ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptDescriptor}
      description: "类型的数组<xref href=&quot;System.Web.UI.ScriptDescriptor&quot;> </xref>。"
  overload: System.Web.UI.Timer.GetScriptDescriptors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.GetScriptReferences
  id: GetScriptReferences
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: GetScriptReferences()
  nameWithType: Timer.GetScriptReferences()
  fullName: System.Web.UI.Timer.GetScriptReferences()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索的客户端脚本<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件。"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference> GetScriptReferences ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptReference}
      description: "A <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref>对象，其中包含的客户端脚本<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件。"
  overload: System.Web.UI.Timer.GetScriptReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Interval
  id: Interval
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Interval
  nameWithType: Timer.Interval
  fullName: System.Web.UI.Timer.Interval
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置在启动回发之前等待的毫秒数。"
  remarks: "间隔属性用于设置频率<xref:System.Web.UI.Timer>控件启动到服务器的回发。</xref:System.Web.UI.Timer> 你可以在服务器代码中的间隔属性的值在后更改回发，如的事件处理程序中<xref:System.Web.UI.Timer.Tick>事件。</xref:System.Web.UI.Timer.Tick> 时的准确性<xref:System.Web.UI.Timer>返回到 Web 服务器控件文章依赖于的 ECMAScript (JavaScript) 的准确性`window.setTimeout`在浏览器中运行的函数。</xref:System.Web.UI.Timer>      1> [!NOTE]&1;> 间隔属性设置为较小的值会生成大量流量与其他 Web 服务器。 使用<xref:System.Web.UI.Timer>控件，用于仅必须经常刷新内容。</xref:System.Web.UI.Timer>       当您更改间隔属性的值时，，浏览器中运行的 ECMAScript 计时代码将重置，呈现更新。"
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. By default, the <xref:System.Web.UI.Timer> control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds. The user can decide to update the stock price every 10 seconds, every 60 seconds, or not at all. The Interval property is set to the user's choice.  \n  \n [!code-vb[System.Web.UI.Controls.Timer.Interval#1](~/add/codesnippet/visualbasic/p-system.web.ui.timer.in_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer.Interval#1](~/add/codesnippet/csharp/p-system.web.ui.timer.in_1.aspx)]"
  syntax:
    content: public int Interval { get; set; }
    return:
      type: System.Int32
      description: "在启动回发之前等待的毫秒数。 默认值为 60000 （60 秒）。"
  overload: System.Web.UI.Timer.Interval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值小于或等于零。"
  platform:
  - net462
- uid: System.Web.UI.Timer.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Timer.OnPreRender(EventArgs)
  fullName: System.Web.UI.Timer.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref>事件<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.Timer.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.OnTick(System.EventArgs)
  id: OnTick(System.EventArgs)
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: System.Web.UI.Timer.OnTick(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Timer.Tick&quot;></xref>事件<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.Timer.Tick>中指定的毫秒数后引发事件<xref:System.Web.UI.Timer.Interval%2A>属性过后由于呈现网页或上次<xref:System.Web.UI.Timer.Tick>事件。</xref:System.Web.UI.Timer.Tick> </xref:System.Web.UI.Timer.Interval%2A> </xref:System.Web.UI.Timer.Tick>"
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. The <xref:System.Web.UI.Timer> control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds. The stock price and the time are set in a handler for the <xref:System.Web.UI.Timer.Tick> event.  \n  \n [!code-vb[System.Web.UI.Controls.Timer#1](~/add/codesnippet/visualbasic/m-system.web.ui.timer.on_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer#1](~/add/codesnippet/csharp/m-system.web.ui.timer.on_1.aspx)]"
  syntax:
    content: protected virtual void OnTick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.Timer.OnTick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Timer.RaisePostBackEvent(String)
  fullName: System.Web.UI.Timer.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "使<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件以引发<xref href=&quot;System.Web.UI.Timer.Tick&quot;></xref>页发到服务器时的事件。"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "带有一个可选自变量传递到事件处理程序的字符串。"
  overload: System.Web.UI.Timer.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Timer.Render(HtmlTextWriter)
  fullName: System.Web.UI.Timer.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "呈现<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件内容写入浏览器使用指定<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>用于呈现的对象<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件内容写入浏览器。"
  overload: System.Web.UI.Timer.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Timer.Tick&quot;></xref>页发到服务器时的事件。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.Timer>实例被强制转换为<xref:System.Web.UI.IPostBackEventHandler>接口。</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.Timer>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "带有一个可选自变量传递到事件处理程序的字符串。"
  overload: System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors
  id: System#Web#UI#IScriptControl#GetScriptDescriptors
  isEii: true
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: System.Web.UI.IScriptControl.GetScriptDescriptors()
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptDescriptors()
  fullName: System.Web.UI.Timer.System.Web.UI.IScriptControl.GetScriptDescriptors()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索属性从<xref href=&quot;System.Web.UI.Timer&quot;></xref>传递给客户端组件的对象。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.Timer>实例被强制转换为<xref:System.Web.UI.IScriptControl>接口。</xref:System.Web.UI.IScriptControl> </xref:System.Web.UI.Timer>       <xref:System.Web.UI.Timer.GetScriptDescriptors%2A>方法将添加<xref:System.Web.UI.Timer.Interval%2A>和<xref:System.Web.UI.Timer.Enabled%2A>的实例中的属性<xref:System.Web.UI.Timer>类到<xref:System.Web.UI.ScriptDescriptor>对象。</xref:System.Web.UI.ScriptDescriptor> </xref:System.Web.UI.Timer> </xref:System.Web.UI.Timer.Enabled%2A> </xref:System.Web.UI.Timer.Interval%2A> </xref:System.Web.UI.Timer.GetScriptDescriptors%2A> 客户端组件检索值，并在脚本中设置相应的值。"
  syntax:
    content: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor> IScriptControl.GetScriptDescriptors ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptDescriptor}
      description: "类型的数组<xref href=&quot;System.Web.UI.ScriptDescriptor&quot;> </xref>。"
  overload: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences
  id: System#Web#UI#IScriptControl#GetScriptReferences
  isEii: true
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: System.Web.UI.IScriptControl.GetScriptReferences()
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptReferences()
  fullName: System.Web.UI.Timer.System.Web.UI.IScriptControl.GetScriptReferences()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索的客户端脚本<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.Timer>实例被强制转换为<xref:System.Web.UI.IScriptControl>接口。</xref:System.Web.UI.IScriptControl> </xref:System.Web.UI.Timer>"
  syntax:
    content: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference> IScriptControl.GetScriptReferences ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptReference}
      description: "A <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref>对象，其中包含的客户端脚本<xref href=&quot;System.Web.UI.Timer&quot;></xref>控件。"
  overload: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Tick
  id: Tick
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Tick
  nameWithType: Timer.Tick
  fullName: System.Web.UI.Timer.Tick
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "在指定的毫秒数则会发生<xref:System.Web.UI.Timer.Interval*>属性已过，并且该页发送到服务器。</xref:System.Web.UI.Timer.Interval*>"
  remarks: "Tick 事件中指定的毫秒数后引发<xref:System.Web.UI.Timer.Interval%2A>属性已过，因为上一次呈现网页或由于以前的 Tick 事件。</xref:System.Web.UI.Timer.Interval%2A> 处理 Tick 事件，你必须在每次回发期间执行操作。"
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. The <xref:System.Web.UI.Timer> control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds. The stock price and the time are set in a handler for the Tick event.  \n  \n [!code-vb[System.Web.UI.Controls.Timer#1](~/add/codesnippet/visualbasic/e-system.web.ui.timer.tick_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer#1](~/add/codesnippet/csharp/e-system.web.ui.timer.tick_1.aspx)]"
  syntax:
    content: public event EventHandler<EventArgs> Tick;
    return:
      type: System.EventHandler{System.EventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Visible
  id: Visible
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Visible
  nameWithType: Timer.Visible
  fullName: System.Web.UI.Timer.Visible
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "重写<xref:System.Web.UI.Control.Visible*>属性<xref href=&quot;System.Web.UI.Control&quot;></xref>类，以防止此值设置。</xref:System.Web.UI.Control.Visible*>"
  remarks: "`Visible`属性被重写，<xref:System.Web.UI.Timer>类以防止设置此属性。</xref:System.Web.UI.Timer> `Visible`属性返回`true`如果客户端组件的<xref:System.Web.UI.Timer>类包括在网页上，即使<xref:System.Web.UI.Timer.Enabled%2A>设置为`false`。</xref:System.Web.UI.Timer.Enabled%2A> </xref:System.Web.UI.Timer> `Visible`属性返回`false`时将其在容器内，如<xref:System.Web.UI.UpdatePanel>控制，其`Visible`属性设置为`false`。</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件是否呈现在页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Timer.Visible*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "一个值分配给`Visible`属性。"
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Web.UI.Timer.#ctor
  parent: System.Web.UI.Timer
  isExternal: false
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: System.Web.UI.Timer.Timer()
- uid: System.Web.UI.Timer.Enabled
  parent: System.Web.UI.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: System.Web.UI.Timer.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Timer.GetScriptDescriptors
  parent: System.Web.UI.Timer
  isExternal: false
  name: GetScriptDescriptors()
  nameWithType: Timer.GetScriptDescriptors()
  fullName: System.Web.UI.Timer.GetScriptDescriptors()
- uid: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptDescriptor}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ScriptDescriptor>
  nameWithType: IEnumerable<ScriptDescriptor>
  fullName: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.UI.ScriptDescriptor>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.ScriptDescriptor
    name: ScriptDescriptor
    nameWithType: ScriptDescriptor
    fullName: ScriptDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.Timer.GetScriptReferences
  parent: System.Web.UI.Timer
  isExternal: false
  name: GetScriptReferences()
  nameWithType: Timer.GetScriptReferences()
  fullName: System.Web.UI.Timer.GetScriptReferences()
- uid: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptReference}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ScriptReference>
  nameWithType: IEnumerable<ScriptReference>
  fullName: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.UI.ScriptReference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.ScriptReference
    name: ScriptReference
    nameWithType: ScriptReference
    fullName: ScriptReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.Timer.Interval
  parent: System.Web.UI.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
  fullName: System.Web.UI.Timer.Interval
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Timer.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Timer
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Timer.OnPreRender(EventArgs)
  fullName: System.Web.UI.Timer.OnPreRender(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Timer.OnTick(System.EventArgs)
  parent: System.Web.UI.Timer
  isExternal: false
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: System.Web.UI.Timer.OnTick(EventArgs)
- uid: System.Web.UI.Timer.RaisePostBackEvent(System.String)
  parent: System.Web.UI.Timer
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Timer.RaisePostBackEvent(String)
  fullName: System.Web.UI.Timer.RaisePostBackEvent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Timer
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Timer.Render(HtmlTextWriter)
  fullName: System.Web.UI.Timer.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IScriptControl.GetScriptDescriptors()
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptDescriptors()
  fullName: System.Web.UI.Timer.System.Web.UI.IScriptControl.GetScriptDescriptors()
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IScriptControl.GetScriptReferences()
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptReferences()
  fullName: System.Web.UI.Timer.System.Web.UI.IScriptControl.GetScriptReferences()
- uid: System.Web.UI.Timer.Tick
  parent: System.Web.UI.Timer
  isExternal: false
  name: Tick
  nameWithType: Timer.Tick
  fullName: System.Web.UI.Timer.Tick
- uid: System.EventHandler{System.EventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.EventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: EventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.Timer.Visible
  parent: System.Web.UI.Timer
  isExternal: false
  name: Visible
  nameWithType: Timer.Visible
  fullName: System.Web.UI.Timer.Visible
- uid: System.Web.UI.Timer.#ctor*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Timer
  nameWithType: Timer.Timer
- uid: System.Web.UI.Timer.Enabled*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
- uid: System.Web.UI.Timer.GetScriptDescriptors*
  parent: System.Web.UI.Timer
  isExternal: false
  name: GetScriptDescriptors
  nameWithType: Timer.GetScriptDescriptors
- uid: System.Web.UI.Timer.GetScriptReferences*
  parent: System.Web.UI.Timer
  isExternal: false
  name: GetScriptReferences
  nameWithType: Timer.GetScriptReferences
- uid: System.Web.UI.Timer.Interval*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
- uid: System.Web.UI.Timer.OnPreRender*
  parent: System.Web.UI.Timer
  isExternal: false
  name: OnPreRender
  nameWithType: Timer.OnPreRender
- uid: System.Web.UI.Timer.OnTick*
  parent: System.Web.UI.Timer
  isExternal: false
  name: OnTick
  nameWithType: Timer.OnTick
- uid: System.Web.UI.Timer.RaisePostBackEvent*
  parent: System.Web.UI.Timer
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Timer.RaisePostBackEvent
- uid: System.Web.UI.Timer.Render*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Render
  nameWithType: Timer.Render
- uid: System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors*
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IScriptControl.GetScriptDescriptors
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptDescriptors
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences*
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IScriptControl.GetScriptReferences
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptReferences
- uid: System.Web.UI.Timer.Visible*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Visible
  nameWithType: Timer.Visible
