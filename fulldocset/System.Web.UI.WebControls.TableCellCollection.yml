### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TableCellCollection
  id: TableCellCollection
  children:
  - System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)
  - System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)
  - System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])
  - System.Web.UI.WebControls.TableCellCollection.Clear
  - System.Web.UI.WebControls.TableCellCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.TableCellCollection.Count
  - System.Web.UI.WebControls.TableCellCollection.GetCellIndex(System.Web.UI.WebControls.TableCell)
  - System.Web.UI.WebControls.TableCellCollection.GetEnumerator
  - System.Web.UI.WebControls.TableCellCollection.IsReadOnly
  - System.Web.UI.WebControls.TableCellCollection.IsSynchronized
  - System.Web.UI.WebControls.TableCellCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)
  - System.Web.UI.WebControls.TableCellCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TableCellCollection.SyncRoot
  - System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TableCellCollection
  nameWithType: TableCellCollection
  fullName: System.Web.UI.WebControls.TableCellCollection
  type: Class
  summary: "封装的集合<xref href=&quot;System.Web.UI.WebControls.TableHeaderCell&quot;></xref>和<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>构成了中的行的对象<xref href=&quot;System.Web.UI.WebControls.Table&quot;></xref>控件。 此类不能被继承。"
  remarks: "此类用于以编程方式管理集合的<xref:System.Web.UI.WebControls.TableCell>构成了中的行的对象<xref:System.Web.UI.WebControls.Table>控件。</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.TableCell> 此类通常用于添加或删除某行中的单元格<xref:System.Web.UI.WebControls.Table>控件。</xref:System.Web.UI.WebControls.Table>      1> [!NOTE]&1;> A<xref:System.Web.UI.WebControls.Table>控件包含<xref:System.Web.UI.WebControls.Table.Rows%2A>表示的集合的集合<xref:System.Web.UI.WebControls.TableRow>对象。</xref:System.Web.UI.WebControls.TableRow> </xref:System.Web.UI.WebControls.Table.Rows%2A> </xref:System.Web.UI.WebControls.Table> 每个<xref:System.Web.UI.WebControls.TableRow>表示表中的单个行，并包含<xref:System.Web.UI.WebControls.TableRow.Cells%2A>表示的集合的集合<xref:System.Web.UI.WebControls.TableCell>对象。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> </xref:System.Web.UI.WebControls.TableRow> 这些<xref:System.Web.UI.WebControls.TableCell>对象表示表中的各个单元格。</xref:System.Web.UI.WebControls.TableCell> 若要获取各个单元格，必须先获取<xref:System.Web.UI.WebControls.TableRow>从<xref:System.Web.UI.WebControls.Table.Rows%2A>集合<xref:System.Web.UI.WebControls.Table>控件。</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table.Rows%2A> </xref:System.Web.UI.WebControls.TableRow> 你可以然后获取<xref:System.Web.UI.WebControls.TableCell>从<xref:System.Web.UI.WebControls.TableRow.Cells%2A><xref:System.Web.UI.WebControls.TableRow>.</xref:System.Web.UI.WebControls.TableRow>的集合</xref:System.Web.UI.WebControls.TableRow.Cells%2A></xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how to programmatically fill a <xref:System.Web.UI.WebControls.Table> control. <xref:System.Web.UI.WebControls.TableCell> objects, which represent individual cells, are added to <xref:System.Web.UI.WebControls.TableRow> objects, which represent the individual rows, through the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property.  \n  \n [!code-cs[Classic TableCellCollection Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_221_1.aspx)]\n [!code-vb[Classic TableCellCollection Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_221_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableCellsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public sealed class TableCellCollection : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)
  id: Add(System.Web.UI.WebControls.TableCell)
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: Add(TableCell)
  nameWithType: TableCellCollection.Add(TableCell)
  fullName: System.Web.UI.WebControls.TableCellCollection.Add(TableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "追加指定<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>到末尾<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  remarks: "使用此方法将添加指定<xref:System.Web.UI.WebControls.TableCell>到的一种<xref:System.Web.UI.WebControls.TableCellCollection>。</xref:System.Web.UI.WebControls.TableCellCollection>末尾</xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how to use the Add method to add a <xref:System.Web.UI.WebControls.TableCell> to a <xref:System.Web.UI.WebControls.TableCellCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.TableRow> is an instance of the <xref:System.Web.UI.WebControls.TableCellCollection> class.  \n  \n [!code-cs[Classic TableCellCollection.Add Example#1](~/add/codesnippet/csharp/ee795911-b57c-473c-a40c-_1.aspx)]\n [!code-vb[Classic TableCellCollection.Add Example#1](~/add/codesnippet/visualbasic/ee795911-b57c-473c-a40c-_1.aspx)]"
  syntax:
    content: public int Add (System.Web.UI.WebControls.TableCell cell);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>要添加到集合。"
    return:
      type: System.Int32
      description: "索引数<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TableCellCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)
  id: AddAt(System.Int32,System.Web.UI.WebControls.TableCell)
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: AddAt(Int32,TableCell)
  nameWithType: TableCellCollection.AddAt(Int32,TableCell)
  fullName: System.Web.UI.WebControls.TableCellCollection.AddAt(Int32,TableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将指定的<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>到<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;></xref>中指定的索引位置。"
  remarks: "使用此方法来插入指定<xref:System.Web.UI.WebControls.TableCell>中<xref:System.Web.UI.WebControls.TableCellCollection>的指定索引处。</xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how to use the AddAt method to add a <xref:System.Web.UI.WebControls.TableCell> to the middle of a <xref:System.Web.UI.WebControls.TableCellCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.TableRow> is an instance of the <xref:System.Web.UI.WebControls.TableCellCollection> class.  \n  \n [!code-cs[Classic TableCellCollection.AddAt Example#1](~/add/codesnippet/csharp/8b5e0b20-2dc9-4b2e-bd0c-_1.aspx)]\n [!code-vb[Classic TableCellCollection.AddAt Example#1](~/add/codesnippet/visualbasic/8b5e0b20-2dc9-4b2e-bd0c-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.TableCell cell);
    parameters:
    - id: index
      type: System.Int32
      description: "中的位置<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;></xref>在其中添加<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>。"
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "The <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref> to add to the <xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.TableCellCollection.AddAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])
  id: AddRange(System.Web.UI.WebControls.TableCell[])
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: AddRange(TableCell[])
  nameWithType: TableCellCollection.AddRange(TableCell[])
  fullName: System.Web.UI.WebControls.TableCellCollection.AddRange(TableCell[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "追加<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>来自指定数组到集合末尾的对象。"
  remarks: "在 AddRange 方法用于追加<xref:System.Web.UI.WebControls.TableCell>来自指定数组到集合的对象。</xref:System.Web.UI.WebControls.TableCell> 当你在构造表的一行，通常使用此方法。 若要构造表的一行，请先创建的数组<xref:System.Web.UI.WebControls.TableCell>对象来表示的行单元格。</xref:System.Web.UI.WebControls.TableCell> 接下来，使用在 AddRange 方法，将数组传递作为自变量，将添加<xref:System.Web.UI.WebControls.TableCell>到集合的对象。</xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how to use the AddRange method to add the <xref:System.Web.UI.WebControls.TableCell> objects from an array to a <xref:System.Web.UI.WebControls.TableCellCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.TableRow> is an instance of the <xref:System.Web.UI.WebControls.TableCellCollection> class.  \n  \n [!code-vb[TableCellCollection_AddRange#1](~/add/codesnippet/visualbasic/cc471817-21c7-41f0-a2b5-_1.aspx)]\n [!code-cs[TableCellCollection_AddRange#1](~/add/codesnippet/csharp/cc471817-21c7-41f0-a2b5-_1.aspx)]"
  syntax:
    content: public void AddRange (System.Web.UI.WebControls.TableCell[] cells);
    parameters:
    - id: cells
      type: System.Web.UI.WebControls.TableCell[]
      description: "该数组包含<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>要添加到集合的对象。"
  overload: System.Web.UI.WebControls.TableCellCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "值<code> cells </code>参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TableCellCollection.Clear()
  fullName: System.Web.UI.WebControls.TableCellCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中删除所有<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>对象从<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  remarks: "此方法用于删除所有<xref:System.Web.UI.WebControls.TableCell>对象从<xref:System.Web.UI.WebControls.TableCellCollection>并设置<xref:System.Web.UI.WebControls.TableCellCollection.Count%2A>属性设为 0。</xref:System.Web.UI.WebControls.TableCellCollection.Count%2A> </xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCell>      1> [!NOTE]&1;> 此方法可以删除<xref:System.Web.UI.WebControls.TableCell>对象从<xref:System.Web.UI.WebControls.TableCellCollection>，但它不会删除<xref:System.Web.UI.WebControls.TableRow>从<xref:System.Web.UI.WebControls.Table>控件。</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.TableRow> </xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCell> 请确保也会删除<xref:System.Web.UI.WebControls.TableRow>如果想要从表中完全删除行。</xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the Clear method to remove all <xref:System.Web.UI.WebControls.TableCell> objects from the center row of the table and replace them with new <xref:System.Web.UI.WebControls.TableCell> objects.  \n  \n [!code-cs[Classic TableCellCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_74_1.aspx)]\n [!code-vb[Classic TableCellCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_74_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.TableCellCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TableCellCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TableCellCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "从项复制<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;></xref>到指定&lt;xref:System.Array?displayProperty=fullName&gt;与中的指定索引开始， &lt;xref:System.Array?displayProperty=fullName&gt;。"
  remarks: "使用此方法的内容复制<xref:System.Web.UI.WebControls.TableCellCollection>到指定<xref:System.Array?displayProperty=fullName>指定索引处开始。</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TableCellCollection>      1> [!NOTE]&1;>`array`参数必须从零开始的<xref:System.Array?displayProperty=fullName>.</xref:System.Array?displayProperty=fullName>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the items from the <xref:System.Web.UI.WebControls.TableCellCollection> into the specified array.  \n  \n [!code-vb[Classic TableCellCollection.CopyTo Example#1](~/add/codesnippet/visualbasic/bdea1b6d-8af6-40aa-a8be-_1.aspx)]\n [!code-cs[Classic TableCellCollection.CopyTo Example#1](~/add/codesnippet/csharp/bdea1b6d-8af6-40aa-a8be-_1.aspx)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "从零开始&lt;xref:System.Array?displayProperty=fullName&gt;接收复制的项从<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
    - id: index
      type: System.Int32
      description: "在指定的第一个索引&lt;xref:System.Array?displayProperty=fullName&gt;中接收项。"
  overload: System.Web.UI.WebControls.TableCellCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: Count
  nameWithType: TableCellCollection.Count
  fullName: System.Web.UI.WebControls.TableCellCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取数<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>中的对象<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  remarks: "使用此属性来确定在<xref:System.Web.UI.WebControls.TableCellCollection>。</xref:System.Web.UI.WebControls.TableCellCollection>的单元格的数目 Count 属性通常用于循环访问集合时确定的上边界。"
  example:
  - "The following example demonstrates how to use the Count property to determine the number of cells in the <xref:System.Web.UI.WebControls.TableCellCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.TableRow> is an instance the <xref:System.Web.UI.WebControls.TableCellCollection> class.  \n  \n [!code-cs[Classic TableCellCollection.Count Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_107_1.cs)]\n [!code-vb[Classic TableCellCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_107_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "数<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>中的对象<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。 默认值为 0。"
  overload: System.Web.UI.WebControls.TableCellCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.GetCellIndex(System.Web.UI.WebControls.TableCell)
  id: GetCellIndex(System.Web.UI.WebControls.TableCell)
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: GetCellIndex(TableCell)
  nameWithType: TableCellCollection.GetCellIndex(TableCell)
  fullName: System.Web.UI.WebControls.TableCellCollection.GetCellIndex(TableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回一个值，表示指定的索引<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>从<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  remarks: "使用此方法来确定指定<xref:System.Web.UI.WebControls.TableCell>的<xref:System.Web.UI.WebControls.TableCellCollection>。</xref:System.Web.UI.WebControls.TableCellCollection></xref:System.Web.UI.WebControls.TableCell>索引 如果指定<xref:System.Web.UI.WebControls.TableCell>是未找到，则返回-1 索引。</xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how to use the GetCellIndex property to display the column index of the selected cell.  \n  \n [!code-cs[Classic TableCellCollection.GetCellIndex Example#1](~/add/codesnippet/csharp/adbcd4ba-a31d-48e3-aca6-_1.aspx)]\n [!code-vb[Classic TableCellCollection.GetCellIndex Example#1](~/add/codesnippet/visualbasic/adbcd4ba-a31d-48e3-aca6-_1.aspx)]"
  syntax:
    content: public int GetCellIndex (System.Web.UI.WebControls.TableCell cell);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>若要获取其索引<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
    return:
      type: System.Int32
      description: "指定的索引<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>内<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。 默认值为-1，指示未找到匹配项。"
  overload: System.Web.UI.WebControls.TableCellCollection.GetCellIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TableCellCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TableCellCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回&lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;实现对象，其中包含所有<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>中的对象<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  remarks: "使用此方法创建的<xref:System.Collections.IEnumerator?displayProperty=fullName>实现，可以循环访问轻松地为获取<xref:System.Web.UI.WebControls.TableCellCollection>.</xref:System.Web.UI.WebControls.TableCellCollection>中的每个项的对象</xref:System.Collections.IEnumerator?displayProperty=fullName>       使用<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>属性当前获取的项集合中指向。</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       使用<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>方法将移动到集合中的下一项。</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>       使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>方法将枚举器移回初始位置。</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      1> [!NOTE]&1;><xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>方法必须在创建之后调用<xref:System.Collections.IEnumerator?displayProperty=fullName>实现对象或之后使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>方法将枚举器移动到集合中的第一项。</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 否则，表示的项<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>属性是不确定。</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  example:
  - "The following example demonstrates how to use the GetEnumerator method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName> implemented object. It is then iterated through to display the items in the selected row.  \n  \n [!code-cs[Classic TableCellCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_188_1.aspx)]\n [!code-vb[Classic TableCellCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_188_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;实现对象，其中包含所有<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>对象内<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TableCellCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TableCellCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.TableCellCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;></xref>是只读的。"
  remarks: "此属性始终返回`false`，则指示<xref:System.Web.UI.WebControls.TableCellCollection>可以在所有情况下写入到。</xref:System.Web.UI.WebControls.TableCellCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>所有用例。"
  overload: System.Web.UI.WebControls.TableCellCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TableCellCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TableCellCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否访问<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;></xref>同步的 （线程安全）。"
  remarks: "此属性派生自<xref:System.Collections.ICollection?displayProperty=fullName>和重写以始终返回`false`。</xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 属性的详细信息，请参阅<xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>属性<xref:System.Collections.ICollection?displayProperty=fullName>接口。</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>所有用例。"
  overload: System.Web.UI.WebControls.TableCellCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TableCellCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TableCellCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>从<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;></xref>的指定索引处。"
  remarks: "使用此索引器来获取个人<xref:System.Web.UI.WebControls.TableCell>中<xref:System.Web.UI.WebControls.TableCellCollection>使用简单的数组表示法的指定索引处。</xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how to use the indexer to get a <xref:System.Web.UI.WebControls.TableCell> from a <xref:System.Web.UI.WebControls.TableCellCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.TableRow> is an instance of the <xref:System.Web.UI.WebControls.TableCellCollection> class.  \n  \n [!code-vb[Classic TableCellCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_965_1.aspx)]\n [!code-cs[Classic TableCellCollection.this Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_965_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableCell this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "指定的序号索引值<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>返回。"
    return:
      type: System.Web.UI.WebControls.TableCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>表示中的某个元素<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TableCellCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)
  id: Remove(System.Web.UI.WebControls.TableCell)
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: Remove(TableCell)
  nameWithType: TableCellCollection.Remove(TableCell)
  fullName: System.Web.UI.WebControls.TableCellCollection.Remove(TableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中移除指定<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>从<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  remarks: "使用此方法指定删除<xref:System.Web.UI.WebControls.TableCell>从一种<xref:System.Web.UI.WebControls.TableCellCollection>。</xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how use the Remove method to remove the center column from the table. Note that in the example, the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.TableRow> is an instance of the <xref:System.Web.UI.WebControls.TableCellCollection> class.  \n  \n [!code-cs[Classic TableCellCollection.Remove Example#1](~/add/codesnippet/csharp/5661f8f5-48f6-4afd-9f95-_1.aspx)]\n [!code-vb[Classic TableCellCollection.Remove Example#1](~/add/codesnippet/visualbasic/5661f8f5-48f6-4afd-9f95-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TableCell cell);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>要从此<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TableCellCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TableCellCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TableCellCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "删除<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>从<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;></xref>的指定索引处。"
  remarks: "此方法用于删除<xref:System.Web.UI.WebControls.TableCell>从<xref:System.Web.UI.WebControls.TableCellCollection>的指定索引处。</xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how use the RemoveAt method to remove the fourth column from the table. Note that in the example, the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.TableRow> is an instance of the <xref:System.Web.UI.WebControls.TableCellCollection> class. Also note that the index of the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> collection is zero-based.  \n  \n [!code-cs[Classic TableCellCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_147_1.aspx)]\n [!code-vb[Classic TableCellCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_147_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>要从此<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TableCellCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TableCellCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TableCellCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取可用于同步访问的对象<xref href=&quot;System.Web.UI.WebControls.TableCellCollection&quot;> </xref>。"
  remarks: "在此实现中返回的对象是<xref:System.Web.UI.WebControls.TableCellCollection>本身。</xref:System.Web.UI.WebControls.TableCellCollection>       SyncRoot 属性的详细信息，请参阅<xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>属性<xref:System.Collections.ICollection?displayProperty=fullName>接口。</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "一个可用于同步对集合的访问的对象。"
  overload: System.Web.UI.WebControls.TableCellCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将对象添加到集合。"
  remarks: "通常情况下，应使用<xref:System.Web.UI.WebControls.TableCellCollection.Add%2A?displayProperty=fullName>方法以将元素添加到<xref:System.Web.UI.WebControls.TableCellCollection>对象。</xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCellCollection.Add%2A?displayProperty=fullName>       IList.Add 方法是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TableCellCollection>实例被强制转换为<xref:System.Collections.IList>接口。</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableCellCollection>"
  syntax:
    content: int IList.Add (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要添加到集合的对象。"
    return:
      type: System.Int32
      description: "对象已添加到集合的索引。"
  overload: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定指定的对象是否包含集合中。"
  remarks: "IList.Contains 方法是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TableCellCollection>实例被强制转换为<xref:System.Collections.IList>接口。</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableCellCollection>"
  syntax:
    content: bool IList.Contains (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要在集合中定位的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对象是集合; 中否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "搜索指定对象并返回集合中的第一个匹配项的从零开始索引。"
  remarks: "通常情况下，应使用<xref:System.Web.UI.WebControls.TableCellCollection.GetCellIndex%2A>方法以获取的索引中的某个元素<xref:System.Web.UI.WebControls.TableCellCollection>对象。</xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCellCollection.GetCellIndex%2A>       IList.IndexOf 方法是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TableCellCollection>实例被强制转换为<xref:System.Collections.IList>接口。</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableCellCollection>"
  syntax:
    content: int IList.IndexOf (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要在集合中定位的对象。"
    return:
      type: System.Int32
      description: "集合中对象的第一个匹配项的从零开始的索引否则为-1 的对象是否不在集合中。"
  overload: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将对象插入到集合中指定索引处。"
  remarks: "通常情况下，应使用<xref:System.Web.UI.WebControls.TableCellCollection.AddAt%2A>方法以将元素添加到<xref:System.Web.UI.WebControls.TableCellCollection>对象。</xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCellCollection.AddAt%2A>       IList.Insert 方法是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TableCellCollection>实例被强制转换为<xref:System.Collections.IList>接口。</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableCellCollection>"
  syntax:
    content: void IList.Insert (int index, object o);
    parameters:
    - id: index
      type: System.Int32
      description: "在插入对象集合中的从零开始索引。"
    - id: o
      type: System.Object
      description: "要插入到集合的对象。"
  overload: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅<xref:System.Collections.IList.IsFixedSize*>。</xref:System.Collections.IList.IsFixedSize*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TableCellCollection>实例被强制转换为<xref:System.Collections.IList>接口。</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableCellCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果列表不包含固定的大小，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "有关此成员的说明，请参阅<xref:System.Collections.IList.Item*>。</xref:System.Collections.IList.Item*>"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TableCellCollection>实例被强制转换为<xref:System.Collections.IList>接口。</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableCellCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "要获取或设置元素的从零开始索引。"
    return:
      type: System.Object
      description: "指定索引处的元素。"
  overload: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "从集合中移除一个对象。"
  remarks: "通常情况下，应使用<xref:System.Web.UI.WebControls.TableCellCollection.Remove%2A?displayProperty=fullName>方法删除从元素<xref:System.Web.UI.WebControls.TableCellCollection>对象。</xref:System.Web.UI.WebControls.TableCellCollection> </xref:System.Web.UI.WebControls.TableCellCollection.Remove%2A?displayProperty=fullName>       IList.Remove 方法是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.TableCellCollection>实例被强制转换为<xref:System.Collections.IList>接口。</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableCellCollection>"
  syntax:
    content: void IList.Remove (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要从集合中移除的对象。"
  overload: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Add(TableCell)
  nameWithType: TableCellCollection.Add(TableCell)
  fullName: System.Web.UI.WebControls.TableCellCollection.Add(TableCell)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: AddAt(Int32,TableCell)
  nameWithType: TableCellCollection.AddAt(Int32,TableCell)
  fullName: System.Web.UI.WebControls.TableCellCollection.AddAt(Int32,TableCell)
- uid: System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: AddRange(TableCell[])
  nameWithType: TableCellCollection.AddRange(TableCell[])
  fullName: System.Web.UI.WebControls.TableCellCollection.AddRange(TableCell[])
- uid: System.Web.UI.WebControls.TableCell[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TableCell
    name: TableCell
    nameWithType: TableCell
    fullName: TableCell[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TableCellCollection.Clear
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Clear()
  nameWithType: TableCellCollection.Clear()
  fullName: System.Web.UI.WebControls.TableCellCollection.Clear()
- uid: System.Web.UI.WebControls.TableCellCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TableCellCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TableCellCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.TableCellCollection.Count
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Count
  nameWithType: TableCellCollection.Count
  fullName: System.Web.UI.WebControls.TableCellCollection.Count
- uid: System.Web.UI.WebControls.TableCellCollection.GetCellIndex(System.Web.UI.WebControls.TableCell)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: GetCellIndex(TableCell)
  nameWithType: TableCellCollection.GetCellIndex(TableCell)
  fullName: System.Web.UI.WebControls.TableCellCollection.GetCellIndex(TableCell)
- uid: System.Web.UI.WebControls.TableCellCollection.GetEnumerator
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TableCellCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TableCellCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.TableCellCollection.IsReadOnly
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableCellCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.TableCellCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TableCellCollection.IsSynchronized
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableCellCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TableCellCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TableCellCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TableCellCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TableCellCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Remove(TableCell)
  nameWithType: TableCellCollection.Remove(TableCell)
  fullName: System.Web.UI.WebControls.TableCellCollection.Remove(TableCell)
- uid: System.Web.UI.WebControls.TableCellCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TableCellCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TableCellCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TableCellCollection.SyncRoot
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableCellCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TableCellCollection.SyncRoot
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.WebControls.TableCellCollection.Add*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Add
  nameWithType: TableCellCollection.Add
- uid: System.Web.UI.WebControls.TableCellCollection.AddAt*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: AddAt
  nameWithType: TableCellCollection.AddAt
- uid: System.Web.UI.WebControls.TableCellCollection.AddRange*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: AddRange
  nameWithType: TableCellCollection.AddRange
- uid: System.Web.UI.WebControls.TableCellCollection.Clear*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Clear
  nameWithType: TableCellCollection.Clear
- uid: System.Web.UI.WebControls.TableCellCollection.CopyTo*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: CopyTo
  nameWithType: TableCellCollection.CopyTo
- uid: System.Web.UI.WebControls.TableCellCollection.Count*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Count
  nameWithType: TableCellCollection.Count
- uid: System.Web.UI.WebControls.TableCellCollection.GetCellIndex*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: GetCellIndex
  nameWithType: TableCellCollection.GetCellIndex
- uid: System.Web.UI.WebControls.TableCellCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TableCellCollection.GetEnumerator
- uid: System.Web.UI.WebControls.TableCellCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableCellCollection.IsReadOnly
- uid: System.Web.UI.WebControls.TableCellCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableCellCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TableCellCollection.Item*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Item
  nameWithType: TableCellCollection.Item
- uid: System.Web.UI.WebControls.TableCellCollection.Remove*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: Remove
  nameWithType: TableCellCollection.Remove
- uid: System.Web.UI.WebControls.TableCellCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TableCellCollection.RemoveAt
- uid: System.Web.UI.WebControls.TableCellCollection.SyncRoot*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableCellCollection.SyncRoot
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Add*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TableCellCollection.System.Collections.IList.Add
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TableCellCollection.System.Collections.IList.Contains
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TableCellCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TableCellCollection.System.Collections.IList.Insert
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Item*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TableCellCollection.System.Collections.IList.Item
- uid: System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.WebControls.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TableCellCollection.System.Collections.IList.Remove
