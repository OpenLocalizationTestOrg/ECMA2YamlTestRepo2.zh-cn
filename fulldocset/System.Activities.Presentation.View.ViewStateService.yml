### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.View.ViewStateService
  id: ViewStateService
  children:
  - System.Activities.Presentation.View.ViewStateService.#ctor
  - System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  - System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  - System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  - System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  - System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
  - System.Activities.Presentation.View.ViewStateService.ViewStateChanged
  langs:
  - csharp
  name: ViewStateService
  nameWithType: ViewStateService
  fullName: System.Activities.Presentation.View.ViewStateService
  type: Class
  summary: "允许保留和访问与工作流应用程序，在工作流应用程序运行的时间在某个特定点的用户交互组件相关联的所有数据值。 ViewStateService 存储模型项的视图状态。"
  remarks: "这是有用的以便可以保持正在检索状态时应用程序的控制进入或离开回发。 ViewStateService 是一个抽象类。 派生的类必须存储视图状态时<xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>调用，并且检索这些值时<xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>称为。</xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> </xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public abstract class ViewStateService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: ViewStateService()
  nameWithType: ViewStateService.ViewStateService()
  fullName: System.Activities.Presentation.View.ViewStateService.ViewStateService()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "启动的新实例<xref href=&quot;System.Activities.Presentation.View.ViewStateService&quot;></xref>类。"
  syntax:
    content: protected ViewStateService ();
    parameters: []
  overload: System.Activities.Presentation.View.ViewStateService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  id: RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: RemoveViewState(ModelItem,String)
  nameWithType: ViewStateService.RemoveViewState(ModelItem,String)
  fullName: System.Activities.Presentation.View.ViewStateService.RemoveViewState(ModelItem,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "在派生类中实现，将移除由指定键表示和与指定的模型项相关联的视图状态。"
  syntax:
    content: public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "工作流活动<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>与当前视图状态相关联。"
    - id: key
      type: System.String
      description: "<xref:System.String>标识存储的视图状态项。</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已删除的视图状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.View.ViewStateService.RemoveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)
  id: RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: RetrieveAllViewState(ModelItem)
  nameWithType: ViewStateService.RetrieveAllViewState(ModelItem)
  fullName: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "返回存储的视图状态的一个方面指定<code> modelItem </code>，匹配指定<code> key </code>。"
  remarks: "调用<xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>以最初存储视图状态信息，使其可供检索。</xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>"
  syntax:
    content: public abstract System.Collections.Generic.Dictionary<string,object> RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>视图状态应用到。"
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "返回&lt;xref:System.Collections.Generic.Dictionary%602&gt;。"
  overload: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  id: RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: RetrieveViewState(ModelItem,String)
  nameWithType: ViewStateService.RetrieveViewState(ModelItem,String)
  fullName: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(ModelItem,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "检索指定的视图状态的一个方面<code> modelItem </code>，匹配指定<code> key </code>。"
  remarks: "调用<xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>以最初存储视图状态信息，使其可供检索。</xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>"
  syntax:
    content: public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "工作流活动<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>与当前视图状态相关联。"
    - id: key
      type: System.String
      description: "<xref:System.String>标识要检索的视图状态。</xref:System.String>"
    return:
      type: System.Object
      description: "视图状态作为方面<xref:System.Object>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Object>"
  overload: System.Activities.Presentation.View.ViewStateService.RetrieveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  id: StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: StoreViewState(ModelItem,String,Object)
  nameWithType: ViewStateService.StoreViewState(ModelItem,String,Object)
  fullName: System.Activities.Presentation.View.ViewStateService.StoreViewState(ModelItem,String,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "将存储指定的视图状态的一个方面<code> modelItem </code>，匹配指定<code> key </code>。"
  remarks: "你可以通过调用来检索存储的对象<xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>并将相同的值传递`modelItem`和`key`。</xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>"
  syntax:
    content: public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>视图状态应用到。"
    - id: key
      type: System.String
      description: "<xref:System.String>标识要存储的视图状态。</xref:System.String>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>要存储。</xref:System.Object>"
  overload: System.Activities.Presentation.View.ViewStateService.StoreViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  id: StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: StoreViewStateWithUndo(ModelItem,String,Object)
  nameWithType: ViewStateService.StoreViewStateWithUndo(ModelItem,String,Object)
  fullName: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(ModelItem,String,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "派生类中实现时，记录，以便它可供撤消操作由指定键表示的项的当前设置。 表示由指定键的项然后存储在指定的模型项的视图状态。"
  remarks: "你可以通过调用来检索存储的对象<xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>并将相同的值传递`modelItem`和`key`。</xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>"
  syntax:
    content: public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>视图状态应用到。"
    - id: key
      type: System.String
      description: "<xref:System.String>标识要存储的视图状态。</xref:System.String> <xref:System.String>标识存储的视图状态项。</xref:System.String>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>要存储。</xref:System.Object>"
  overload: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
  id: UndoableViewStateChanged
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: UndoableViewStateChanged
  nameWithType: ViewStateService.UndoableViewStateChanged
  fullName: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "派生类中实现时，声明事件，用于通知已经对控件的可撤消视图状态中进行更改。"
  syntax:
    content: public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;
    return:
      type: System.Activities.Presentation.View.ViewStateChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.ViewStateChanged
  id: ViewStateChanged
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: ViewStateChanged
  nameWithType: ViewStateService.ViewStateChanged
  fullName: System.Activities.Presentation.View.ViewStateService.ViewStateChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "派生类中实现时，声明事件，用于通知已经对控件的视图状态中进行更改。"
  syntax:
    content: public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;
    return:
      type: System.Activities.Presentation.View.ViewStateChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.View.ViewStateService.#ctor
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: ViewStateService()
  nameWithType: ViewStateService.ViewStateService()
  fullName: System.Activities.Presentation.View.ViewStateService.ViewStateService()
- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RemoveViewState(ModelItem,String)
  nameWithType: ViewStateService.RemoveViewState(ModelItem,String)
  fullName: System.Activities.Presentation.View.ViewStateService.RemoveViewState(ModelItem,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RetrieveAllViewState(ModelItem)
  nameWithType: ViewStateService.RetrieveAllViewState(ModelItem)
  fullName: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(ModelItem)
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RetrieveViewState(ModelItem,String)
  nameWithType: ViewStateService.RetrieveViewState(ModelItem,String)
  fullName: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(ModelItem,String)
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: StoreViewState(ModelItem,String,Object)
  nameWithType: ViewStateService.StoreViewState(ModelItem,String,Object)
  fullName: System.Activities.Presentation.View.ViewStateService.StoreViewState(ModelItem,String,Object)
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: StoreViewStateWithUndo(ModelItem,String,Object)
  nameWithType: ViewStateService.StoreViewStateWithUndo(ModelItem,String,Object)
  fullName: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(ModelItem,String,Object)
- uid: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: UndoableViewStateChanged
  nameWithType: ViewStateService.UndoableViewStateChanged
  fullName: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
- uid: System.Activities.Presentation.View.ViewStateChangedEventHandler
  parent: System.Activities.Presentation.View
  isExternal: false
  name: ViewStateChangedEventHandler
  nameWithType: ViewStateChangedEventHandler
  fullName: System.Activities.Presentation.View.ViewStateChangedEventHandler
- uid: System.Activities.Presentation.View.ViewStateService.ViewStateChanged
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: ViewStateChanged
  nameWithType: ViewStateService.ViewStateChanged
  fullName: System.Activities.Presentation.View.ViewStateService.ViewStateChanged
- uid: System.Activities.Presentation.View.ViewStateService.#ctor*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: ViewStateService
  nameWithType: ViewStateService.ViewStateService
- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RemoveViewState
  nameWithType: ViewStateService.RemoveViewState
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RetrieveAllViewState
  nameWithType: ViewStateService.RetrieveAllViewState
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RetrieveViewState
  nameWithType: ViewStateService.RetrieveViewState
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: StoreViewState
  nameWithType: ViewStateService.StoreViewState
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: StoreViewStateWithUndo
  nameWithType: ViewStateService.StoreViewStateWithUndo
