### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "验证用户凭据，管理用户设置。 此类不能被继承。"
  remarks: "成员资格类用于 ASP.NET 应用程序中验证用户凭据和管理用户设置，例如密码和电子邮件地址。 可以使用成员资格类，在其自身，或结合<xref:System.Web.Security.FormsAuthentication>创建一个完整的系统的 Web 应用程序或站点的用户进行身份验证。</xref:System.Web.Security.FormsAuthentication> <xref:System.Web.UI.WebControls.Login>控件封装成员资格类以提供一个用于验证用户的方便机制。</xref:System.Web.UI.WebControls.Login>      1> [!NOTE]&1;> 如果你不熟悉 ASP.NET 成员资格功能，请参阅[简介成员资格](~/add/includes/ajax-current-ext-md.md)才能继续。 与成员资格相关的其他主题的列表，请参阅[使用成员资格管理用户](~/add/includes/ajax-current-ext-md.md)。       成员资格类提供用于工具:-创建新用户。      -在 Microsoft SQL Server 或备用数据存储区中，则存储成员身份信息 （用户名、 密码、 电子邮件地址和支持的数据）。      -对访问您的网站的用户进行身份验证。 可以验证用户身份以编程方式，或者可以使用<xref:System.Web.UI.WebControls.Login>控件创建一个要求很少或没有代码的完整的身份验证系统。</xref:System.Web.UI.WebControls.Login>      管理密码，这包括创建、 更改、 检索和重置密码，依次类推。 你可以选择配置为需要的密码提示问题和答案忘记密码的用户的密码重置和检索请求进行身份验证的 ASP.NET 成员资格。       尽管 ASP.NET 成员资格是 ASP.NET 为身份验证中的独立功能，但它可以与 ASP.NET 角色管理，以便提供你的站点的授权服务集成。 此外可以与 ASP.NET 用户集成成员资格<xref:System.Web.Profile>向单个用户提供特定于应用程序可以定制的自定义项。</xref:System.Web.Profile> 有关详细信息，请参阅[了解角色管理](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 配置文件属性概述](~/add/includes/ajax-current-ext-md.md)。       成员资格类依赖于成员资格提供程序与数据源进行通信。 .NET Framework 包括<xref:System.Web.Security.SqlMembershipProvider>，它在 Microsoft SQL Server 数据库中，用于存储用户信息和<xref:System.Web.Security.ActiveDirectoryMembershipProvider>，从而使你可以在 Active Directory 或 Active Directory 应用程序模式 (ADAM) 服务器上存储用户信息。</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> 你也可以实现一个自定义成员资格提供程序来与成员资格类可以使用备用数据源进行通信。 自定义成员资格提供程序继承的<xref:System.Web.Security.MembershipProvider>抽象类。</xref:System.Web.Security.MembershipProvider> 有关详细信息，请参阅[实现成员资格提供程序](~/add/includes/ajax-current-ext-md.md)。       默认情况下，已为所有 ASP.NET 应用程序中启用 ASP.NET 成员身份。 默认成员资格提供程序<xref:System.Web.Security.SqlMembershipProvider>和同名的计算机配置中指定`AspNetSqlProvider`。</xref:System.Web.Security.SqlMembershipProvider> 默认实例<xref:System.Web.Security.SqlMembershipProvider>配置为连接到 Microsoft SQL Server 的本地实例。</xref:System.Web.Security.SqlMembershipProvider>       你可以修改默认设置以指定<xref:System.Web.Security.SqlMembershipProvider>以外`AspNetSqlProvider`实例作为默认的提供程序，或为 ASP.NET 应用程序使用 Web.config 文件的默认提供程序指定的自定义提供程序实例。</xref:System.Web.Security.SqlMembershipProvider> Web 应用程序的 Web.config 文件中使用的配置节，可以指定 ASP.NET 成员身份配置。 你可以使用`providers`要指定非默认的提供程序的其他成员资格提供程序的部分的子部分。 例如下, 一节从当前的应用程序配置中移除默认成员资格提供程序并添加新的提供程序名称为`SqlProvider`用于将连接到名为的 SQL Server 实例`AspSqlServer`。      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取或设置应用程序的名称。"
  remarks: "应用程序名称用于标识特定于应用程序的用户。 即，同一用户名称可以存在多个 ASP.NET 应用程序指定不同的应用程序名称的数据库中。 这使多个应用程序能够使用相同的数据库来存储用户信息而不会遇到重复的用户名称冲突。 或者，多个 ASP.NET 应用程序可以通过指定相同的应用程序名称使用相同的用户数据库。 应用程序名称可以在 Web 应用程序配置中以编程方式或以声明方式设置。      1> [!CAUTION]&1;> 由于一个默认成员资格提供程序实例用于所有服务的请求<xref:System.Web.HttpApplication>对象，您可以有多个请求并发执行，并尝试设置的应用程序名称属性值。</xref:System.Web.HttpApplication> 应用程序名称属性不是线程安全的多个写操作，并更改应用程序名称属性值可能导致多个用户的应用程序的意外行为。 我们建议你避免编写代码，除非必要，否则允许用户设置 ApplicationName 属性。 应用程序可能需要设置应用程序名称属性的示例是管理应用程序管理多个应用程序的成员身份数据。 此类应用程序应为单用户应用程序和不是 Web 应用程序。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "应用程序的名称。"
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "将新用户添加到数据存储中。"
  remarks: "CreateUser 将新用户添加到数据存储，并返回<xref:System.Web.Security.MembershipUser>新创建的用户的对象。</xref:System.Web.Security.MembershipUser> 如果用户创建失败，<xref:System.Web.Security.MembershipCreateUserException>引发。</xref:System.Web.Security.MembershipCreateUserException> 你可以检索<xref:System.Web.Security.MembershipCreateStatus>值从<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>属性<xref:System.Web.Security.MembershipCreateUserException>，该值指示用户创建失败的原因。</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       成员资格用户已创建且您拥有对引用<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>应用程序的其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或通过设置属性值的<xref:System.Web.Security.MembershipUser>对象并将它们传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       如果用户已存在于应用程序的数据源，可以获取<xref:System.Web.Security.MembershipUser>与现有的用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       <xref:System.Web.Security.SqlMembershipProvider>提供一个选项以便为每个用户都需要唯一的电子邮件地址。</xref:System.Web.Security.SqlMembershipProvider> 如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>属性是`true`，你将需要使用允许你指定要创建的用户的电子邮件地址的 CreateUser 重载之一。</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> 否则为<xref:System.Web.Security.MembershipCreateUserException>将引发。</xref:System.Web.Security.MembershipCreateUserException>       删除所有参数值的前导和尾随空格。"
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "新用户的用户名。"
    - id: password
      type: System.String
      description: "新用户的密码。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新创建的用户的对象。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "未创建该用户。 检查<xref:System.Web.Security.MembershipCreateUserException.StatusCode*>属性<xref:System.Web.Security.MembershipCreateStatus>值。</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "将指定的电子邮件地址的新用户添加到数据存储中。"
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户的对象。</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> 如果用户创建失败，<xref:System.Web.Security.MembershipCreateUserException>引发。</xref:System.Web.Security.MembershipCreateUserException> 你可以检索<xref:System.Web.Security.MembershipCreateStatus>值从<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>属性<xref:System.Web.Security.MembershipCreateUserException>，该值指示用户创建失败的原因。</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       成员资格用户已创建且您拥有对引用<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>应用程序的其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或通过设置属性值的<xref:System.Web.Security.MembershipUser>对象并将它们传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       如果用户已存在于应用程序的数据源，可以获取<xref:System.Web.Security.MembershipUser>与现有的用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       删除所有参数值的前导和尾随空格。"
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "新用户的用户名。"
    - id: password
      type: System.String
      description: "新用户的密码。"
    - id: email
      type: System.String
      description: "新用户的电子邮件地址。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新创建的用户的对象。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "未创建该用户。 检查<xref:System.Web.Security.MembershipCreateUserException.StatusCode*>属性<xref:System.Web.Security.MembershipCreateStatus>值。</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "将指定的属性值的新用户添加到数据存储并返回一个状态参数，指示已成功创建用户或用户创建失败的原因。"
  remarks: "CreateUser 将新用户添加到数据存储，并返回<xref:System.Web.Security.MembershipUser>新创建的用户的对象。</xref:System.Web.Security.MembershipUser> 如果用户创建失败，则可以检索<xref:System.Web.Security.MembershipCreateStatus>值从`status`输出参数，该值指示用户创建失败的原因。</xref:System.Web.Security.MembershipCreateStatus>       CreateUser 方法将返回`null`如果`password`为空字符串或`null`，`username`为空字符串或`null`或包含逗号 （，）、`passwordQuestion`不`null`和为空字符串，或`passwordAnswer`不`null`和包含一个空字符串。       成员资格用户已创建且您拥有对引用<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，以及设置的属性值<xref:System.Web.Security.MembershipUser>对象，然后将<xref:System.Web.Security.MembershipUser>对象传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       如果用户已存在于应用程序的数据源，可以获取<xref:System.Web.Security.MembershipUser>与现有的用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       删除所有字符串参数值的前导和尾随空格。"
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "新用户的用户名。"
    - id: password
      type: System.String
      description: "新用户的密码。"
    - id: email
      type: System.String
      description: "新用户的电子邮件地址。"
    - id: passwordQuestion
      type: System.String
      description: "成员资格用户的密码问题值。"
    - id: passwordAnswer
      type: System.String
      description: "成员资格用户的密码提示问题答案值。"
    - id: isApproved
      type: System.Boolean
      description: "一个布尔值，该值指示是否已批准的新用户登录。"
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "A <xref:System.Web.Security.MembershipCreateStatus>，该值指示是否已成功创建用户或创建失败的原因。</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新创建的用户的对象。</xref:System.Web.Security.MembershipUser> 如果已创建任何用户，此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "将指定的属性值的新用户和唯一标识符添加到数据存储并返回一个状态参数，指示已成功创建用户或用户创建失败的原因。"
  remarks: "CreateUser 将新用户添加到数据存储，并返回<xref:System.Web.Security.MembershipUser>新创建的用户的对象。</xref:System.Web.Security.MembershipUser> 如果用户创建失败，则可以检索<xref:System.Web.Security.MembershipCreateStatus>值从`status`输出参数，该值指示用户创建失败的原因。</xref:System.Web.Security.MembershipCreateStatus> 你可以通过使用指定的用户，如数据库的主键值的唯一标识符`providerUserKey`参数。       CreateUser 方法将返回`null`如果`password`为空字符串或`null`，`username`为空字符串或`null`或包含逗号 （，）、`passwordQuestion`不`null`和包含空字符串，或`passwordAnswer`不`null`和包含一个空字符串。       成员资格用户已创建且您拥有对引用<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，以及设置的属性值<xref:System.Web.Security.MembershipUser>对象，然后将<xref:System.Web.Security.MembershipUser>对象传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       如果用户已存在于应用程序的数据源，可以获取<xref:System.Web.Security.MembershipUser>与现有的用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       删除所有字符串参数值的前导和尾随空格。"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "新用户的用户名。"
    - id: password
      type: System.String
      description: "新用户的密码。"
    - id: email
      type: System.String
      description: "新用户的电子邮件地址。"
    - id: passwordQuestion
      type: System.String
      description: "成员资格用户的密码问题值。"
    - id: passwordAnswer
      type: System.String
      description: "成员资格用户的密码提示问题答案值。"
    - id: isApproved
      type: System.Boolean
      description: "一个布尔值，该值指示是否已批准的新用户登录。"
    - id: providerUserKey
      type: System.Object
      description: "应在成员资格数据存储中存储用户的用户标识符。"
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "A <xref:System.Web.Security.MembershipCreateStatus>，该值指示用户已成功创建或创建失败的原因。</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新创建的用户的对象。</xref:System.Web.Security.MembershipUser> 如果已创建任何用户，此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "从数据库中删除用户和任何相关的用户数据。"
  remarks: "用户数据存储在数据库中为<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>使用时，则也会删除个性化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>对象用于数据存储。</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "要删除的用户名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户已被删除;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>为空字符串或包含逗号 （，）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "从数据库中删除用户。"
  remarks: "仅删除从数据库中删除的用户从配置`applicationName`。       如果`deleteAllRelatedData`是`true`，存储在数据库中为用户数据<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>使用时，则也会删除个性化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>对象用于数据存储。</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "要删除的用户名称。"
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要删除从数据库中; 与用户相关的数据<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>来保留与数据库中的用户相关的数据。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户已被删除;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>为空字符串或包含逗号 （，）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示当前的成员资格提供程序是否配置为允许用户重置其密码。"
  remarks: "密码重置是指 ASP.NET 成员资格用户忘记其密码或当前的密码将不再有效时替换当前的密码为一个新的用户名称随机生成密码的能力。 这是特别有用的当密码格式设置为<xref:System.Web.Security.MembershipPasswordFormat>，因为用户无法检索经过哈希处理的密码值。</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成员资格提供程序支持密码重置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示当前的成员资格提供程序是否配置为允许用户检索其密码。"
  remarks: "如果 EnablePasswordRetrieval `false`，基础成员资格提供程序可能会引发一种<xref:System.Web.HttpException>。</xref:System.Web.HttpException>       .NET Framework 附带的提供程序支持多个密码格式，以增强密码的安全性。 如果密码格式设置为<xref:System.Web.Security.MembershipPasswordFormat>，则用户将无法从数据库中检索其现有的密码。</xref:System.Web.Security.MembershipPasswordFormat> <xref:System.Web.Security.MembershipPasswordFormat>密码格式提供的密码值的单向编码。</xref:System.Web.Security.MembershipPasswordFormat> 密码是&quot;哈希&quot;，并为身份验证的数据库中存储的值进行比较。 &quot;哈希&quot;值不能为反编码来检索原始密码值。 有关详细信息，请参阅<xref:System.Web.Security.MembershipPasswordFormat>。</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成员资格提供程序支持密码检索;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取成员资格用户集合，这里电子邮件地址包含要匹配的指定的电子邮件地址。"
  remarks: "FindUsersByEmail 返回成员资格用户的列表的电子邮件地址匹配所提供`emailToMatch`已配置的`applicationName`。       <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句针对其搜索`emailToMatch`参数。</xref:System.Web.Security.SqlMembershipProvider> 像子句可以用在 SQL Server 支持任何通配符`emailToMatch`参数值。"
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "要搜索的电子邮件地址。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A<xref:System.Web.Security.MembershipUserCollection>包含匹配的所有用户<code> emailToMatch </code>参数。</xref:System.Web.Security.MembershipUserCollection>       删除前导和尾随空格<code> emailToMatch </code>参数值。"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "在一页数据，这里电子邮件地址包含要匹配的指定的电子邮件地址中获取成员资格用户的集合。"
  remarks: "FindUsersByEmail 返回成员资格用户的列表的电子邮件地址匹配所提供`emailToMatch`已配置的`applicationName`。       <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句针对其搜索`emailToMatch`参数。</xref:System.Web.Security.SqlMembershipProvider> 像子句可以用在 SQL Server 支持任何通配符`emailToMatch`参数值。       FindUsersByEmail 返回的结果都受`pageIndex`和`pageSize`参数。 `pageSize`参数标识<xref:System.Web.Security.MembershipUser>对象以返回处于<xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection></xref:System.Web.Security.MembershipUser>的最大数目 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为匹配的成员资格用户的总数`emailToMatch`值。 例如，如果找到 13 个`emailToMatch`匹配的一部分或整个电子邮件地址，与`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含通过返回的第 10 个用户的第六个。</xref:System.Web.Security.MembershipUserCollection> `totalRecords`将设置为 13。       删除前导和尾随空格`emailToMatch`参数值。"
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "要搜索的电子邮件地址。"
    - id: pageIndex
      type: System.Int32
      description: "要返回的结果页的索引。 `pageIndex`是从零开始。"
    - id: pageSize
      type: System.Int32
      description: "要返回的结果页的大小。"
    - id: totalRecords
      type: System.Int32
      description: "匹配用户的总数。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>，其中包含的页<code> pageSize </code> <xref:System.Web.Security.MembershipUser>对象指定的页面开始<code> pageIndex </code>。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>小于零。       -或-<code>pageSize</code>小于 1。"
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取成员资格用户的集合，其中用户名包含要匹配的指定的用户名称。"
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>返回成员资格用户的列表在用户名与匹配所提供`usernameToMatch`已配置的`applicationName`。</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句针对其搜索`usernameToMatch`参数。</xref:System.Web.Security.SqlMembershipProvider> 像子句可以用在 SQL Server 支持任何通配符`usernameToMatch`参数值。       删除所有参数值的前导和尾随空格。"
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "要搜索的用户名。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A<xref:System.Web.Security.MembershipUserCollection>包含匹配的所有用户<code> usernameToMatch </code>参数。</xref:System.Web.Security.MembershipUserCollection>       删除前导和尾随空格<code> usernameToMatch </code>参数值。"
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>为一个空字符串。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "在一页数据，其中用户名包含要匹配的指定的用户名称中获取成员资格用户的集合。"
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>返回成员资格用户的列表在用户名与匹配所提供`usernameToMatch`已配置的`applicationName`。</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句针对其搜索`usernameToMatch`参数。</xref:System.Web.Security.SqlMembershipProvider> 像子句可以用在 SQL Server 支持任何通配符`usernameToMatch`参数值。       FindUsersByName 返回的结果都受`pageIndex`和`pageSize`参数。 `pageSize`参数标识<xref:System.Web.Security.MembershipUser>对象以返回处于<xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection></xref:System.Web.Security.MembershipUser>的最大数目 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为匹配的成员资格用户的总数`usernameToMatch`值。 例如，如果找到 13 个`usernameToMatch`匹配的一部分或整个的用户名，和`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含通过返回的第 10 个用户的第六个。</xref:System.Web.Security.MembershipUserCollection> `totalRecords`将设置为 13。"
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "要搜索的用户名。"
    - id: pageIndex
      type: System.Int32
      description: "要返回的结果页的索引。 `pageIndex`是从零开始。"
    - id: pageSize
      type: System.Int32
      description: "要返回的结果页的大小。"
    - id: totalRecords
      type: System.Int32
      description: "匹配用户的总数。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>，其中包含的页<code> pageSize </code> <xref:System.Web.Security.MembershipUser>对象指定的页面开始<code> pageIndex </code>。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       删除前导和尾随空格<code> usernameToMatch </code>参数值。"
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>为一个空字符串。       -或-<code>pageIndex</code>小于零。       -或-<code>pageSize</code>小于 1。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "生成指定长度的随机密码。"
  remarks: "GeneratePassword 方法可用于生成随机密码并最常使用的<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法实现的成员资格提供程序的用户密码重置为新的临时密码。</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       生成的密码仅包含字母数字字符和以下标点符号︰ `!@#$%^&*()_-+=[{]};:<>|./?`。 生成的密码中包含没有隐藏或非可打印的控制字符。      1> [!NOTE]&1;> GeneratePassword 方法创建的随机密码不能保证传递中的正则表达式<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>属性。</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> 但是，随机的密码将满足条件由建立<xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>属性和`numberOfNonAlphanumericCharacters`参数。</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "生成的密码中的字符数。 长度必须介于 1 到 128 个字符之间。"
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: '非字母数字字符的最小数 (如 @，#，！，%， &amp;，依次类推) 中生成的密码。'
    return:
      type: System.String
      description: "将指定长度的随机密码。"
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>小于 1 或大于 128-<code>numberOfNonAlphanumericCharacters</code>小于 0 或大于<code>length</code>。"
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "在数据库中获取所有用户的集合。"
  remarks: "GetAllUsers 返回的集合作为应用程序的所有成员资格用户的信息<xref:System.Web.Security.MembershipUser>对象。</xref:System.Web.Security.MembershipUser> 为生成使用非常大型用户数据库 GetAllUsers 方法时要小心<xref:System.Web.Security.MembershipUserCollection>在你的 ASP.NET 页可能会降低你的应用程序的性能。</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A<xref:System.Web.Security.MembershipUserCollection>的<xref:System.Web.Security.MembershipUser>表示的所有数据库中用户的对象。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "在数据库中的数据页中获取所有用户的集合。"
  remarks: "GetAllUsers 返回的结果都受`pageIndex`和`pageSize`参数。 `pageSize`参数标识<xref:System.Web.Security.MembershipUser>对象以返回处于<xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection></xref:System.Web.Security.MembershipUser>的最大数目 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数，它设置为已配置的成员资格用户的总数`applicationName`。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含通过返回的第 10 个用户的第六个。</xref:System.Web.Security.MembershipUserCollection> `totalRecords`将设置为 13。"
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "要返回的结果页的索引。 使用 0 指示的第一页。"
    - id: pageSize
      type: System.Int32
      description: "要返回的结果页的大小。 `pageIndex`是从零开始。"
    - id: totalRecords
      type: System.Int32
      description: "用户总数。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A<xref:System.Web.Security.MembershipUserCollection>的<xref:System.Web.Security.MembershipUser>对象表示已配置的数据库中的所有用户<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>小于零。       -或-<code>pageSize</code>小于 1。"
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取当前正在访问应用程序的用户数。"
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>返回的<xref:System.Web.Security.Membership.ApplicationName%2A>上一次活动日期大于当前时间小于<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A></xref:System.Web.Security.Membership.ApplicationName%2A>当前用户数</xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 上一次活动日期/时间戳更新时通过验证用户凭据的当前日期和时间为<xref:System.Web.Security.Membership.ValidateUser%2A>或<xref:System.Web.Security.Membership.UpdateUser%2A>方法或在调用时<xref:System.Web.Security.Membership.GetUser%2A>采用任何参数或另一个使用重载`userIsOnline`参数来指定应更新的日期/时间戳。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "当前正在访问应用程序的用户数。"
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "从数据源获取的信息和更新上一次活动日期/时间戳，当前登录的成员资格用户。"
  remarks: "GetUser 从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。</xref:System.Web.Security.MembershipUser> 如果你使用不采用 GetUser 重载之一`username`参数，GetUser 返回当前登录的成员资格用户的信息。 由<xref:System.Security.Principal.IIdentity.Name%2A>当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>中的用户的</xref:System.Security.Principal.IIdentity.Name%2A>标识当前的登录的成员资格用户       你还可以指定是否希望 GetUser 若要更新的上一次活动日期/时间戳用户正在检索使用`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`和`GetUser(System.Object)`不这样做。"
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>对象，表示当前登录的用户。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "任何成员资格用户当前不登录。"
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "当前登录的成员资格用户，从数据源获取的信息。 当前登录的成员资格用户，如果指定的更新上一次活动日期/时间戳。"
  remarks: "GetUser 方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。</xref:System.Web.Security.MembershipUser> 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> 由<xref:System.Security.Principal.IIdentity.Name%2A>当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>中的用户的</xref:System.Security.Principal.IIdentity.Name%2A>标识当前的登录的成员资格用户       你还可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳的用户正在检索使用`userIsOnline`参数。</xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`和`GetUser(System.Object)`不这样做。"
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，用于指定用户更新上一次活动日期/时间戳。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>对象，表示当前登录的用户。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "任何成员资格用户当前不登录。"
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "从数据源获取与指定的唯一标识符关联的成员资格用户的信息。"
  remarks: "GetUser 方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。</xref:System.Web.Security.MembershipUser> 从指定使用的数据源使用的唯一标识符标识该用户`providerUserKey`参数。       此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳与正在检索用户`userIsOnline`参数。</xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`和`GetUser(System.Object)`不这样做"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "用户的成员身份数据源中的唯一用户标识符。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>表示与指定的唯一标识符关联的用户对象。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "从数据源获取指定的成员资格用户的信息。"
  remarks: "GetUser 方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。</xref:System.Web.Security.MembershipUser> 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> 由<xref:System.Security.Principal.IIdentity.Name%2A>当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>中的用户的</xref:System.Security.Principal.IIdentity.Name%2A>标识当前的登录的成员资格用户       此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳与正在检索用户`userIsOnline`参数。</xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>隐式用户的更新上一次活动日期/时间戳。</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser 和<xref:System.Web.Security.Membership.GetUser%2A>不这样做。</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "要检索的用户的名称。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>表示指定的用户对象。</xref:System.Web.Security.MembershipUser> 如果<code> username </code>参数不对应于现有用户，此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>包含逗号 （，）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "从数据源获取与指定的唯一标识符关联的成员资格用户的信息。 对于用户，如果指定更新上一次活动日期/时间戳。"
  remarks: "GetUser 方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。</xref:System.Web.Security.MembershipUser> 附带中指定的数据源中的唯一标识符标识该用户`providerUserKey`参数。"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "用户的成员身份数据源中的唯一用户标识符。"
    - id: userIsOnline
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，用于指定用户更新上一次活动日期/时间戳。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>表示与指定的唯一标识符关联的用户对象。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "从数据源获取指定的成员资格用户的信息。 对于用户，如果指定更新上一次活动日期/时间戳。"
  remarks: "GetUser 方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。</xref:System.Web.Security.MembershipUser>       如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> 由<xref:System.Security.Principal.IIdentity.Name%2A>当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>中的用户的</xref:System.Security.Principal.IIdentity.Name%2A>标识当前的登录的成员资格用户       此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳与正在检索用户`userIsOnline`参数。</xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>隐式用户的更新上一次活动日期/时间戳。</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>和<xref:System.Web.Security.Membership.GetUser%2A>不这样做。</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "要检索的用户的名称。"
    - id: userIsOnline
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，用于指定用户更新上一次活动日期/时间戳。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>表示指定的用户对象。</xref:System.Web.Security.MembershipUser> 如果<code> username </code>参数不对应于现有用户，此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>包含逗号 （，）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取用户名的用户的电子邮件地址与指定的电子邮件地址匹配之处。"
  remarks: "GetUserNameByEmail 可以用于检索这种情况，其中用户不知道用户名称，但不能确定其电子邮件地址中的成员资格用户的用户名。 如果数据存储区中的多个用户具有相同的电子邮件地址，则返回遇到的第一个用户名。       删除所有参数值的前导和尾随空格。"
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "要搜索的电子邮件地址。"
    return:
      type: System.String
      description: "其中的用户的电子邮件地址匹配的指定电子邮件地址的用户名。 如果不找到任何匹配项，则<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>返回。"
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "用于哈希密码算法的标识符。"
  remarks: "HashAlgorithmType 属性标识<xref:System.Web.Security.Membership>类</xref:System.Web.Security.Membership>使用的自定义的哈希算法 设置 HashAlgorithmType 属性使用`hashAlgorithmType`元素的特性。       .NET Framework 可以配置自定义加密类使用的元素的配置节。 HashAlgorithmType 属性必须与匹配`name`元素中的元素的属性。 有关详细信息，请参阅[将算法名称映射到加密类](~/add/includes/ajax-current-ext-md.md)。       如果未设置 HashAlgorithmType 属性，<xref:System.Web.Security.Membership>类使用在中设置的哈希算法`validation`元素的特性。</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "使用哈希密码，或为空以使用默认哈希算法的算法标识符。"
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取无效密码或锁定成员资格用户之前允许的密码提示问题答案尝试的次数。"
  remarks: "MaxInvalidPasswordAttempts 属性与结合工作<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性以防止不需要的源使用重复尝试猜测的密码或成员资格用户的密码提示问题答案。</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       如果成员资格用户，在指定的分钟数内是大于或等于 MaxInvalidPasswordAttempts 属性的值的输入数无效密码或密码提示问题答案<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性，则用户从网站注销锁定通过设置<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性`true`直到用户解锁通过调用<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       如果在达到 MaxInvalidPasswordAttempts 属性的值之前提供有效的密码或密码提示问题答案，跟踪的无效尝试次数的计数器是设置为零。       无效的密码和密码提示问题答案尝试分别进行跟踪。 例如，如果 MaxInvalidPasswordAttempts 属性设置为 5，用户带来高达五次尝试来输入正确的密码和最多五个尝试不被锁定的情况下输入正确的密码答案。       在该应用程序配置中设置了 MaxInvalidPasswordAttempts 属性值`maxInvalidPasswordAttempts`配置元素的属性。       如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性是`false`，则不会跟踪无效密码提示问题答案尝试次数。</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "无效密码或锁定成员资格用户之前允许的密码提示问题答案尝试次数。"
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取的最小必须存在有效密码中的特殊字符数。"
  remarks: "MinRequiredNonAlphanumericCharacters 属性返回的最小为在指定的成员资格提供程序创建一个有效的密码时必须输入的特殊、 非字母数字字符数<xref:System.Web.Security.Membership.Provider%2A>属性。</xref:System.Web.Security.Membership.Provider%2A>       在该应用程序配置中设置了 MinRequiredNonAlphanumericCharacters 属性值`minRequiredNonAlphanumericCharacters`配置元素的属性。       非字母数字字符是为其字符<xref:System.Char.IsLetterOrDigit%2A>方法返回`false`。</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "最小必须存在有效密码中的特殊字符数。"
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取密码所需的最小长度。"
  remarks: "MinRequiredPasswordLength 属性获取的最小为在指定的成员资格提供程序创建一个有效的密码时必须输入的字符数<xref:System.Web.Security.Membership.Provider%2A>属性。</xref:System.Web.Security.Membership.Provider%2A>       在该应用程序配置中设置了 MinRequiredPasswordLength 属性值`minRequiredPasswordLength`配置元素的属性。"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "密码所需最小长度。"
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取该时间时间间隔的连续失败进行提供有效的密码或密码提示问题答案尝试次数进行跟踪。"
  remarks: "PasswordAttemptWindow 属性与结合工作<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性，以帮助防止不需要的源猜测的密码或密码提示问题答案的成员资格用户通过反复尝试。</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 当用户尝试登录、 更改或重置他或她的密码时，在指定的时间窗口内只允许一定数量的连续尝试次数。 此时间窗口长度指定 PasswordAttemptWindow 属性中，标识无效尝试之间所允许的分钟数。       如果的用户进行的连续失败尝试次数重置他或她的密码等于中存储的值<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性，且时间自以来所经过最后一次的无效尝试 PasswordAttemptWindow 属性中指定的分钟数小于然后锁定成员资格用户。</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 通过设置锁定用户<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性`true`直到用户解锁通过调用<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       如果当前的失败的尝试和最后一次失败的尝试之间的间隔大于 PasswordAttemptWindow 属性设置，当前的无效尝试将计为第一个。 如果在达到最大允许的无效尝试次数之前提供有效的密码提示问题答案，则的无效密码提示问题答案尝试次数的计数设置为 0 （零）。 如果之前所允许的最大数量无效提供一个有效的密码，则尝试达到的无效密码尝试次数的计数和的无效密码提示问题答案尝试次数的计数设置为 0 （零）。       无效的密码和密码提示问题答案尝试次数累积独立于另一个。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>设置为 5，和三个无效的密码尝试，随后进行了两个无效的密码提示问题答案尝试，两个更多的无效密码尝试 （或三个更多的无效密码提示问题答案尝试） 必须内进行 PasswordAttemptWindow 成员资格用户被锁定。</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       使用在应用程序配置设置 PasswordAttemptWindow 属性值`passwordAttemptWindow`节的配置元素属性。       如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性设置为`false`，则不会跟踪无效密码提示问题答案尝试次数。</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "时间窗口中，以分钟为单位，在此期间连续失败尝试提供有效的密码或密码提示问题答案进行跟踪。 默认值为 10 分钟。 如果当前的失败的尝试和最后一次失败的尝试之间的间隔大于 PasswordAttemptWindow 属性设置，就像它是第一次失败的尝试视为每个失败的尝试。"
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取用于计算密码的正则表达式。"
  remarks: "PasswordStrengthRegularExpression 属性获取用于验证从提供程序中指定的密码复杂性的正则表达式<xref:System.Web.Security.Membership.Provider%2A>属性。</xref:System.Web.Security.Membership.Provider%2A>       在该应用程序配置中设置 PasswordStrengthRegularExpression 属性`passwordStrengthRegularExpression`配置元素的属性。       有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "用来计算密码的正则表达式。"
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取应用程序的默认成员资格提供程序的引用。"
  remarks: "提供程序属性使您能够直接引用应用程序的默认成员资格提供程序。 这通常用于访问自定义成员资格提供程序的成员，它们不属于<xref:System.Web.Security.MembershipProvider>抽象基的类。</xref:System.Web.Security.MembershipProvider>"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "默认成员资格提供程序应用程序公开使用<xref:System.Web.Security.MembershipProvider>抽象基的类。</xref:System.Web.Security.MembershipProvider>"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ASP.NET 应用程序中获取成员资格提供程序的集合。"
  remarks: "提供程序属性引用所有应用程序启用的成员资格提供程序，包括提供程序在应用程序的 Web.config 文件和所有应用程序的 Machine.config 文件中添加。 你可以控制那些成员身份提供程序可用于应用程序中使用`providers`中你的应用程序的配置部分的元素。 例如，下面的示例演示在 Web.config 文件中的应用程序中删除部分<xref:System.Web.Security.SqlMembershipProvider>实例 (`AspNetSqlProvider`) 在计算机配置文件中指定并添加<xref:System.Web.Security.SqlMembershipProvider>实例名为`SqlProvider`为应用程序的默认成员资格提供程序。</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```指定时[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)部分中，你必须指定`defaultProvider`属性。 如果不指定[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)将 web.config 文件，该计算机配置中的值中使用和<xref:System.Web.Security.SqlMembershipProvider>实例名为`AspNetSqlProvider`则在建立作为`defaultProvider`。</xref:System.Web.Security.SqlMembershipProvider>       可以通过按名称索引成员资格提供程序并将它强制转换为所需的类型来获取对提供程序提供程序集合中的强类型化的引用。"
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "A<xref:System.Web.Security.MembershipProviderCollection>成员资格提供程序为 ASP.NET 应用程序配置。</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "获取一个值，该值指示默认成员资格提供程序是否需要用户密码重置和检索时回答密码提示问题。"
  remarks: "需要密码提示问题和答案提供额外的安全性，在检索或重置用户的密码时。 用户可以提供问题和答案创建其用户名称时，他们将可以更高版本使用，以检索或重置忘记了的密码。       检查 RequiresQuestionAndAnswer 时<xref:System.Web.Security.MembershipUser.ResetPassword%2A>或<xref:System.Web.Security.MembershipUser.GetPassword%2A>称为。</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> 提供使用.NET Framework 提供程序会引发<xref:System.NotSupportedException>RequiresQuestionAndAnswer 是否`true`和提供的密码答案`null`。</xref:System.NotSupportedException>       如果<xref:System.Web.Security.Membership.EnablePasswordReset%2A>和<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>都`false`，仍可以使用 RequiresQuestionAndAnswer 实施的问题和答案创建时创建新用户的; 但是，问题和答案将不使用。</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> 你将能够通过使用<xref:System.Web.Security.MembershipUser>类</xref:System.Web.Security.MembershipUser>检索问题       有关详细信息，请参阅<xref:System.Web.Security.MembershipUser.ResetPassword%2A>和<xref:System.Web.Security.MembershipUser.GetPassword%2A>。</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果密码提示问题答案，才能使用密码重置和检索;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "使用指定的用户的信息更新数据库。"
  remarks: "UpdateUser 采用，作为输入，<xref:System.Web.Security.MembershipUser>对象使用成员资格用户的当前信息填充并更新数据源的属性值与<xref:System.Web.Security.MembershipUser>对象。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> 你可以构造一个新<xref:System.Web.Security.MembershipUser>，或检索<xref:System.Web.Security.MembershipUser>对象在数据源中使用的当前值填充，填充<xref:System.Web.Security.Membership.GetUser%2A>， <xref:System.Web.Security.Membership.GetAllUsers%2A>， <xref:System.Web.Security.Membership.FindUsersByName%2A>，或<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法。</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>对象，表示要更新的用户和用户的更新的信息。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定上一次活动日期/时间戳以便用户在此期间用户被视为联机后的分钟数。"
  remarks: "到<xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>。</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>调用期间检查 UserIsOnlineTimeWindow 属性值 如果<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>用户大于当前日期和时间减去 UserIsOnlineTimeWindow 值以分钟为单位，然后用户都可被视为联机。</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 你可以确定成员资格用户是否被视为联机与<xref:System.Web.Security.MembershipUser.IsOnline%2A>属性的<xref:System.Web.Security.MembershipUser>类。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>为用户的凭据成功通过验证后，将更新用户<xref:System.Web.Security.Membership.ValidateUser%2A>方法。</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 你还可以更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>成员资格用户时调用的一个<xref:System.Web.Security.Membership.GetUser%2A>重载。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 如果调用<xref:System.Web.Security.Membership.GetUser%2A>采用重载`userIsOnline`参数，将值指定为`true`更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>用户。</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "最后一个活动之后的分钟数的日期/时间戳以便用户在此期间用户被视为联机。"
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "验证提供的用户名和密码有效。"
  remarks: "验证用户提供验证的用户名和密码从数据源的简单办法。 请注意，如果`username`参数为空或`null`、<xref:System.Web.HttpException>引发。</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "要验证的用户名称。"
    - id: password
      type: System.String
      description: "指定用户的密码。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提供的用户名和密码有效，则为否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "当创建用户、 更改密码，或重置密码时出现。"
  remarks: "<xref:System.Web.Security.MembershipProvider.ValidatingPassword>引发事件时<xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法，<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>方法，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>调用的成员资格提供程序方法。</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       你可以使用<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件来验证密码格式和的成员资格用户的值。</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       你可以取消当前<xref:System.Web.Security.MembershipProvider.CreateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>通过设置的操作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>属性所提供的<xref:System.Web.Security.ValidatePasswordEventArgs>到`true`期间<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       如果通过设置取消当前操作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>属性`true`，你可以设置<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性所提供的<xref:System.Web.Security.ValidatePasswordEventArgs>到描述密码验证失败的原因的异常。</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> 调用的方法将引发异常，<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性设置为。</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> 如果<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性是`null`，调用方将引发一般密码验证失败异常。</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
