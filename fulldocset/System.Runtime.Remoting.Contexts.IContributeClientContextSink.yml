### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.IContributeClientContextSink
  id: IContributeClientContextSink
  children:
  - System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  langs:
  - csharp
  name: IContributeClientContextSink
  nameWithType: IContributeClientContextSink
  fullName: System.Runtime.Remoting.Contexts.IContributeClientContextSink
  type: Interface
  summary: "分配在客户端的远程处理调用的上下文边界上侦听接收器。"
  remarks: "IContributeClientContextSink 接口由中的上下文属性实现<xref:System.Runtime.Remoting.Contexts.Context>想要分配在客户端的远程处理调用的上下文边界上侦听接收器的类。</xref:System.Runtime.Remoting.Contexts.Context>       实现 IContributeClientContextSink，分配通过接收器中的客户端上下文属性组成的客户端上下文链<xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink%2A>方法调用。</xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink%2A> 此证书链会进行缓存以便将来使用。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IContributeClientContextSink
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  id: GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.IContributeClientContextSink
  langs:
  - csharp
  name: GetClientContextSink(IMessageSink)
  nameWithType: IContributeClientContextSink.GetClientContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink(IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "采用目前为止，组成的接收器链中的第一个接收器，然后链接在前面已经形成的链其消息接收器。"
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);
    parameters:
    - id: nextSink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "到目前为止组成的接收链。"
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "复合接收器链中。"
  overload: System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.IContributeClientContextSink
  isExternal: false
  name: GetClientContextSink(IMessageSink)
  nameWithType: IContributeClientContextSink.GetClientContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink(IMessageSink)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink*
  parent: System.Runtime.Remoting.Contexts.IContributeClientContextSink
  isExternal: false
  name: GetClientContextSink
  nameWithType: IContributeClientContextSink.GetClientContextSink
