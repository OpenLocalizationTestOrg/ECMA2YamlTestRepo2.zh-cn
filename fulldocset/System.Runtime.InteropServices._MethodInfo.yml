### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._MethodInfo
  id: _MethodInfo
  children:
  - System.Runtime.InteropServices._MethodInfo.Attributes
  - System.Runtime.InteropServices._MethodInfo.CallingConvention
  - System.Runtime.InteropServices._MethodInfo.DeclaringType
  - System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  - System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  - System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.GetHashCode
  - System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  - System.Runtime.InteropServices._MethodInfo.GetParameters
  - System.Runtime.InteropServices._MethodInfo.GetType
  - System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.IsAbstract
  - System.Runtime.InteropServices._MethodInfo.IsAssembly
  - System.Runtime.InteropServices._MethodInfo.IsConstructor
  - System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.IsFamily
  - System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  - System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  - System.Runtime.InteropServices._MethodInfo.IsFinal
  - System.Runtime.InteropServices._MethodInfo.IsHideBySig
  - System.Runtime.InteropServices._MethodInfo.IsPrivate
  - System.Runtime.InteropServices._MethodInfo.IsPublic
  - System.Runtime.InteropServices._MethodInfo.IsSpecialName
  - System.Runtime.InteropServices._MethodInfo.IsStatic
  - System.Runtime.InteropServices._MethodInfo.IsVirtual
  - System.Runtime.InteropServices._MethodInfo.MemberType
  - System.Runtime.InteropServices._MethodInfo.MethodHandle
  - System.Runtime.InteropServices._MethodInfo.Name
  - System.Runtime.InteropServices._MethodInfo.ReflectedType
  - System.Runtime.InteropServices._MethodInfo.ReturnType
  - System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  - System.Runtime.InteropServices._MethodInfo.ToString
  langs:
  - csharp
  name: _MethodInfo
  nameWithType: _MethodInfo
  fullName: System.Runtime.InteropServices._MethodInfo
  type: Interface
  summary: "公开的公共成员&lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;到非托管代码的类。"
  remarks: "此接口是用于访问到托管类，从非托管代码，不应从托管代码调用。       此接口可保留的 vtable 顺序<xref:System.Reflection.MethodInfo?displayProperty=fullName>类可以访问由非托管 COM 对象的成员。</xref:System.Reflection.MethodInfo?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("FFCC1B5D-ECB8-38DD-9B01-3DC8ABC2AA5F")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodInfo))]

      public interface _MethodInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _MethodInfo.Attributes
  fullName: System.Runtime.InteropServices._MethodInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.Attributes*>属性。</xref:System.Reflection.MethodBase.Attributes*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.Attributes%2A>属性获取与此方法关联的属性。</xref:System.Reflection.MethodBase.Attributes%2A>"
  syntax:
    content: public System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: "之一<xref:System.Reflection.MethodAttributes>值。</xref:System.Reflection.MethodAttributes>"
  overload: System.Runtime.InteropServices._MethodInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
  fullName: System.Runtime.InteropServices._MethodInfo.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.CallingConvention*>属性。</xref:System.Reflection.MethodBase.CallingConvention*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.CallingConvention%2A>属性获取一个值，该值指示此方法的调用约定。</xref:System.Reflection.MethodBase.CallingConvention%2A>"
  syntax:
    content: public System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: "之一<xref:System.Reflection.CallingConventions>值。</xref:System.Reflection.CallingConventions>"
  overload: System.Runtime.InteropServices._MethodInfo.CallingConvention*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
  fullName: System.Runtime.InteropServices._MethodInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.DeclaringType*>属性。</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.DeclaringType%2A>属性获取声明此成员的类。</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>声明此成员的类的对象。"
  overload: System.Runtime.InteropServices._MethodInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _MethodInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Object.Equals*>方法。</xref:System.Object.Equals*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Object.Equals%2A>方法确定是否<xref:System.Object>等于当前<xref:System.Object>.</xref:System.Object></xref:System.Object>指定</xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>要与当前<xref:System.Object>.</xref:System.Object>进行比较</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref:System.Object>等同于当前<xref:System.Object>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._MethodInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  id: GetBaseDefinition
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetBaseDefinition()
  nameWithType: _MethodInfo.GetBaseDefinition()
  fullName: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodInfo.GetBaseDefinition*>方法。</xref:System.Reflection.MethodInfo.GetBaseDefinition*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A>方法返回<xref:System.Reflection.MethodInfo>对象直接或间接基类此实例所表示的方法最初上的方法声明。</xref:System.Reflection.MethodInfo> </xref:System.Reflection.MethodInfo.GetBaseDefinition%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetBaseDefinition ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>第一个实现此方法的对象。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.GetCustomAttributes*>方法。</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法返回包含所有自定义特性的数组。</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>搜索此成员的继承链以查找属性;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object[]
      description: "一个数组，包含所有自定义特性，则包含零 (0) 个元素如果无特性定义为数组。"
  overload: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.GetCustomAttributes*>方法。</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>方法返回包含由<xref:System.Type>.</xref:System.Type>标识的自定义特性的数组</xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "要搜索的属性类型。 返回可分配给此类型的属性。"
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>搜索此成员的继承链以查找属性;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object[]
      description: "包含应用于此成员的自定义特性的数组或包含零 (0) 的元素，如果在不应用任何属性的数组。"
  overload: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _MethodInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Object.GetHashCode*>方法。</xref:System.Object.GetHashCode*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Object.GetHashCode%2A>方法用作特定类型的哈希函数。</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>是适合在哈希算法和数据结构，如哈希表中使用。</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前实例的哈希代码。"
  overload: System.Runtime.InteropServices._MethodInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "将一组名称映射到对应的一组调度标识符。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。 有关详细信息`IDispatch::GetIDsOfNames`，请参阅 MSDN 库。"
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "保留供将来使用。 必须为 IID_NULL。"
    - id: rgszNames
      type: System.IntPtr
      description: "要映射的名称数组。"
    - id: cNames
      type: System.UInt32
      description: "要映射的名称的计数。"
    - id: lcid
      type: System.UInt32
      description: "在其中解释名称的区域设置上下文。"
    - id: rgDispId
      type: System.IntPtr
      description: "由调用方分配的数组，它接收与名称对应的标识符。"
  overload: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: _MethodInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>方法。</xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>成员返回<xref:System.Reflection.MethodImplAttributes>标志。</xref:System.Reflection.MethodImplAttributes> </xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>"
  syntax:
    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: "之一<xref:System.Reflection.MethodImplAttributes>值。</xref:System.Reflection.MethodImplAttributes>"
  overload: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters
  id: GetParameters
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetParameters()
  nameWithType: _MethodInfo.GetParameters()
  fullName: System.Runtime.InteropServices._MethodInfo.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.GetParameters*>方法。</xref:System.Reflection.MethodBase.GetParameters*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.GetParameters%2A>方法中获取指定的方法或构造函数的参数。</xref:System.Reflection.MethodBase.GetParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "类型的数组<xref:System.Reflection.ParameterInfo>包含的方法 （或构造函数） 的签名匹配的信息此实例反射。</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._MethodInfo.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _MethodInfo.GetType()
  fullName: System.Runtime.InteropServices._MethodInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Type.GetType*>方法。</xref:System.Type.GetType*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Type.GetType%2A>方法获取当前实例的类型。</xref:System.Type.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A<xref:System.Type>对象。</xref:System.Type>"
  overload: System.Runtime.InteropServices._MethodInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "检索一个对象，它可以用于获取接口的类型信息的类型信息。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。 有关详细信息`IDispatch::GetTypeInfo`，请参阅 MSDN 库。"
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "要返回的类型信息。"
    - id: lcid
      type: System.UInt32
      description: "类型信息的区域设置标识符。"
    - id: ppTInfo
      type: System.IntPtr
      description: "指向请求的类型信息对象的指针。"
  overload: System.Runtime.InteropServices._MethodInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "检索对象提供 （0 或 1） 的类型信息接口的数量。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。 有关详细信息`IDispatch::GetTypeInfoCount`，请参阅 MSDN 库。"
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "此方法返回时，包含指向接收对象提供的类型信息接口的数量的位置的指针。 此参数传递时未经初始化。"
  overload: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(Object,Object[])
  nameWithType: _MethodInfo.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.Invoke*>方法。</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "<xref:System.Reflection.MethodBase.Invoke%2A>方法调用的方法或此对象，使用指定的参数所表示的构造函数。</xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: "创建的实例，此方法。"
    - id: parameters
      type: System.Object[]
      description: "调用的方法或构造函数参数列表。 这是使用相同的个数、 顺序和类型的对象的数组作为方法或构造函数要调用的参数。 如果没有参数，`parameters`应<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。       如果该方法或构造函数由表示此实例采用<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref>参数 (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，不需要该参数来调用该方法或构造函数使用此函数的任何特殊的特性。 不使用值显式初始化此数组中的任何对象将包含所选对象类型的默认值。 对于引用类型的元素，此值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 对于值类型的元素，此值为 0、 0.0 或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，具体取决于特定的元素类型。"
    return:
      type: System.Object
      description: "使用构造函数相关联的类的实例。"
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.Invoke*>方法。</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.Invoke%2A>方法调用由此反射的构造函数<xref:System.Reflection.ConstructorInfo>对象使用指定的参数，指定的约束下<xref:System.Reflection.Binder>对象。</xref:System.Reflection.Binder> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "创建的实例，此方法。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "之一<xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>指定的绑定类型的值。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref> ，它定义一组属性并启用绑定、 强制自变量类型和成员使用反射调用。 If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "类型的数组<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>用于匹配个数、 顺序和类型的参数的此构造函数的约束下`binder`。 如果此构造函数不需要参数，传递包含零个元素，数组作为 in `Object[] parameters = new Object[0]`。 不使用值显式初始化此数组中的任何对象将包含所选对象类型的默认值。 对于引用类型的元素，此值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 对于值类型的元素，此值为 0、 0.0 或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，具体取决于特定的元素类型。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>对象用于控制类型强制。</xref:System.Globalization.CultureInfo> 如果这是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Globalization.CultureInfo>则使用当前线程。</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "使用构造函数相关联的类的实例。"
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "提供对由对象公开属性和方法访问。"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。 有关详细信息`IDispatch::Invoke`，请参阅 MSDN 库。"
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "成员标识符。"
    - id: riid
      type: System.Guid
      description: "保留供将来使用。 必须为 IID_NULL。"
    - id: lcid
      type: System.UInt32
      description: "在其中解释自变量的区域设置上下文。"
    - id: wFlags
      type: System.Int16
      description: "描述调用的上下文的标志。"
    - id: pDispParams
      type: System.IntPtr
      description: "指向一个包含参数的数组，数组的命名自变量和数组中元素数的计数 dispid 的结构的指针。"
    - id: pVarResult
      type: System.IntPtr
      description: "指向将存储结果的位置的指针。"
    - id: pExcepInfo
      type: System.IntPtr
      description: "指向包含异常信息的结构的指针。"
    - id: puArgErr
      type: System.IntPtr
      description: "出错的第一个参数的索引。"
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
  fullName: System.Runtime.InteropServices._MethodInfo.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsAbstract*>属性。</xref:System.Reflection.MethodBase.IsAbstract*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsAbstract%2A>属性获取一个值，该值指示方法是否为抽象类。</xref:System.Reflection.MethodBase.IsAbstract%2A>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该方法是抽象的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly
  id: IsAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsAssembly*>属性。</xref:System.Reflection.MethodBase.IsAssembly*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsAssembly%2A>属性获取一个值，该值指示是否可以由同一程序集中的其他类中调用此方法</xref:System.Reflection.MethodBase.IsAssembly%2A>"
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法可以由同一程序集; 中的其他类否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor
  id: IsConstructor
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
  fullName: System.Runtime.InteropServices._MethodInfo.IsConstructor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsConstructor*>属性。</xref:System.Reflection.MethodBase.IsConstructor*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsConstructor%2A>属性获取一个值，该值指示方法是否一个构造函数。</xref:System.Reflection.MethodBase.IsConstructor%2A>"
  syntax:
    content: public bool IsConstructor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法是构造函数;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.IsDefined*>方法。</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.IsDefined%2A>成员指示是否的一个或多个实例`attributeType`参数应用于此成员。</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>对象将应用自定义属性。"
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>搜索此成员的继承链以查找属性;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果一个或多个实例<code> attributeType </code>参数是应用于此成员; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily
  id: IsFamily
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsFamily*>属性。</xref:System.Reflection.MethodBase.IsFamily*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsFamily%2A>属性获取一个值，该值指示是否对此方法的访问仅限于类的成员和其派生的类的成员。</xref:System.Reflection.MethodBase.IsFamily%2A>"
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对类访问是只限于类本身的成员和其派生的类; 的成员否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>属性。</xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>属性获取一个值，该值指示此方法可以由类自身的成员，并且派生类，如果它们在同一程序集</xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>"
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法对访问是只限于类本身的成员和同一程序集中; 的派生类的成员否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>属性。</xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>属性获取一个值，该值它们的位置无关，并且由同一程序集中的所有类，是否可以由派生类中调用此方法。</xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>"
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对此方法的访问限制为类本身的成员，派生类的成员是任何位置和相同的程序集; 中的其他类的成员否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal
  id: IsFinal
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
  fullName: System.Runtime.InteropServices._MethodInfo.IsFinal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsFinal*>属性。</xref:System.Reflection.MethodBase.IsFinal*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsFinal%2A>属性获取一个值，该值指示此方法是否`final`。</xref:System.Reflection.MethodBase.IsFinal%2A>"
  syntax:
    content: public bool IsFinal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法<xref uid=&quot;langword_csharp_final&quot; name=&quot;final&quot; href=&quot;&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  id: IsHideBySig
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsHideBySig*>属性。</xref:System.Reflection.MethodBase.IsHideBySig*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsHideBySig%2A>属性获取一个值，该值指示是否在派生类中隐藏只有具有完全相同的签名的相同名称的成员</xref:System.Reflection.MethodBase.IsHideBySig%2A>"
  syntax:
    content: public bool IsHideBySig { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此成员隐藏的签名;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsHideBySig*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate
  id: IsPrivate
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
  fullName: System.Runtime.InteropServices._MethodInfo.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsPrivate*>属性。</xref:System.Reflection.MethodBase.IsPrivate*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsPrivate%2A>属性获取一个值，该值指示此成员私有。</xref:System.Reflection.MethodBase.IsPrivate%2A>"
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对此方法的访问限制为其他成员的类，然后重试。否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
  fullName: System.Runtime.InteropServices._MethodInfo.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsPublic*>属性。</xref:System.Reflection.MethodBase.IsPublic*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsPublic%2A>属性获取一个值，该值指示此方法是否为公共字段。</xref:System.Reflection.MethodBase.IsPublic%2A>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法是公共的则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsSpecialName*>属性。</xref:System.Reflection.MethodBase.IsSpecialName*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsSpecialName%2A>属性获取一个值，该值指示此方法是否具有特殊的名称。</xref:System.Reflection.MethodBase.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法具有特殊的名称;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic
  id: IsStatic
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
  fullName: System.Runtime.InteropServices._MethodInfo.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsStatic*>属性。</xref:System.Reflection.MethodBase.IsStatic*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsStatic%2A>属性获取一个值，该值指示方法是否`static`。</xref:System.Reflection.MethodBase.IsStatic%2A>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual
  id: IsVirtual
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
  fullName: System.Runtime.InteropServices._MethodInfo.IsVirtual
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.IsVirtual*>属性。</xref:System.Reflection.MethodBase.IsVirtual*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.IsVirtual%2A>属性获取一个值，该值指示方法是否`virtual`。</xref:System.Reflection.MethodBase.IsVirtual%2A>"
  syntax:
    content: public bool IsVirtual { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法<xref uid=&quot;langword_csharp_virtual&quot; name=&quot;virtual&quot; href=&quot;&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodInfo.IsVirtual*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _MethodInfo.MemberType
  fullName: System.Runtime.InteropServices._MethodInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.MemberType*>属性。</xref:System.Reflection.MemberInfo.MemberType*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.MemberType%2A>属性可以获取<xref:System.Reflection.MemberTypes>值，该值指示成员的类型-方法、 构造函数、 事件和等等。</xref:System.Reflection.MemberTypes> </xref:System.Reflection.MemberInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "之一<xref href=&quot;System.Reflection.MemberTypes&quot;></xref>值，该值指示成员的类型。"
  overload: System.Runtime.InteropServices._MethodInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle
  id: MethodHandle
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
  fullName: System.Runtime.InteropServices._MethodInfo.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodBase.MethodHandle*>属性。</xref:System.Reflection.MethodBase.MethodHandle*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodBase.MethodHandle%2A>属性获取方法的内部元数据表示的句柄。</xref:System.Reflection.MethodBase.MethodHandle%2A>"
  syntax:
    content: public RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: "A<xref:System.RuntimeMethodHandle>对象。</xref:System.RuntimeMethodHandle>"
  overload: System.Runtime.InteropServices._MethodInfo.MethodHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Name
  nameWithType: _MethodInfo.Name
  fullName: System.Runtime.InteropServices._MethodInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.Name*>属性。</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.Name%2A>属性获取当前成员的名称。</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A<xref:System.String>对象，其中包含此成员的名称。</xref:System.String>"
  overload: System.Runtime.InteropServices._MethodInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
  fullName: System.Runtime.InteropServices._MethodInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MemberInfo.ReflectedType*>属性。</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MemberInfo.ReflectedType%2A>属性获取用于获取此类对象`MemberInfo`对象。</xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>用于获取此对象<xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;></xref>对象。"
  overload: System.Runtime.InteropServices._MethodInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType
  id: ReturnType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodInfo.ReturnType*>属性。</xref:System.Reflection.MethodInfo.ReturnType*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodInfo.ReturnType%2A>属性获取此方法的返回类型。</xref:System.Reflection.MethodInfo.ReturnType%2A>"
  syntax:
    content: public Type ReturnType { get; }
    return:
      type: System.Type
      description: "此方法的返回类型。"
  overload: System.Runtime.InteropServices._MethodInfo.ReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  id: ReturnTypeCustomAttributes
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes*>属性。</xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes*>"
  remarks: "此属性用于访问托管类从非托管代码，不应从托管代码调用。       <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A>属性获取的返回类型的自定义属性。</xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A>"
  syntax:
    content: public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "<xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref>表示的返回类型的自定义属性的对象。"
  overload: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _MethodInfo.ToString()
  fullName: System.Runtime.InteropServices._MethodInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 对象提供独立于版本的访问权限<xref:System.Object.ToString*>方法。</xref:System.Object.ToString*>"
  remarks: "此方法用于访问托管类从非托管代码，不应从托管代码调用。"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个字符串，表示当前<xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._MethodInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._MethodInfo.Attributes
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Attributes
  nameWithType: _MethodInfo.Attributes
  fullName: System.Runtime.InteropServices._MethodInfo.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
  fullName: System.Runtime.InteropServices._MethodInfo.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
  fullName: System.Runtime.InteropServices._MethodInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _MethodInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetBaseDefinition()
  nameWithType: _MethodInfo.GetBaseDefinition()
  fullName: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _MethodInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: _MethodInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetParameters()
  nameWithType: _MethodInfo.GetParameters()
  fullName: System.Runtime.InteropServices._MethodInfo.GetParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodInfo.GetType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetType()
  nameWithType: _MethodInfo.GetType()
  fullName: System.Runtime.InteropServices._MethodInfo.GetType()
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(Object,Object[])
  nameWithType: _MethodInfo.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,Object[])
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
  fullName: System.Runtime.InteropServices._MethodInfo.IsAbstract
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
  fullName: System.Runtime.InteropServices._MethodInfo.IsConstructor
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamily
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
  fullName: System.Runtime.InteropServices._MethodInfo.IsFinal
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodInfo.IsHideBySig
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
  fullName: System.Runtime.InteropServices._MethodInfo.IsPrivate
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
  fullName: System.Runtime.InteropServices._MethodInfo.IsPublic
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodInfo.IsSpecialName
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
  fullName: System.Runtime.InteropServices._MethodInfo.IsStatic
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
  fullName: System.Runtime.InteropServices._MethodInfo.IsVirtual
- uid: System.Runtime.InteropServices._MethodInfo.MemberType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MemberType
  nameWithType: _MethodInfo.MemberType
  fullName: System.Runtime.InteropServices._MethodInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
  fullName: System.Runtime.InteropServices._MethodInfo.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Runtime.InteropServices._MethodInfo.Name
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Name
  nameWithType: _MethodInfo.Name
  fullName: System.Runtime.InteropServices._MethodInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
  fullName: System.Runtime.InteropServices._MethodInfo.ReflectedType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Runtime.InteropServices._MethodInfo.ToString
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ToString()
  nameWithType: _MethodInfo.ToString()
  fullName: System.Runtime.InteropServices._MethodInfo.ToString()
- uid: System.Runtime.InteropServices._MethodInfo.Attributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Attributes
  nameWithType: _MethodInfo.Attributes
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
- uid: System.Runtime.InteropServices._MethodInfo.Equals*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Equals
  nameWithType: _MethodInfo.Equals
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetBaseDefinition
  nameWithType: _MethodInfo.GetBaseDefinition
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _MethodInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _MethodInfo.GetHashCode
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _MethodInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: _MethodInfo.GetMethodImplementationFlags
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetParameters
  nameWithType: _MethodInfo.GetParameters
- uid: System.Runtime.InteropServices._MethodInfo.GetType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetType
  nameWithType: _MethodInfo.GetType
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _MethodInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _MethodInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._MethodInfo.Invoke*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke
  nameWithType: _MethodInfo.Invoke
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsDefined
  nameWithType: _MethodInfo.IsDefined
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
- uid: System.Runtime.InteropServices._MethodInfo.MemberType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MemberType
  nameWithType: _MethodInfo.MemberType
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
- uid: System.Runtime.InteropServices._MethodInfo.Name*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Name
  nameWithType: _MethodInfo.Name
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
- uid: System.Runtime.InteropServices._MethodInfo.ToString*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ToString
  nameWithType: _MethodInfo.ToString
