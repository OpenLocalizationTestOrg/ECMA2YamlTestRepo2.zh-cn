### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleCommandBuilder
  id: OracleCommandBuilder
  children:
  - System.Data.OracleClient.OracleCommandBuilder.#ctor
  - System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)
  - System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.OracleClient.OracleCommandBuilder.CatalogLocation
  - System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator
  - System.Data.OracleClient.OracleCommandBuilder.DataAdapter
  - System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)
  - System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand
  - System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand
  - System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)
  - System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)
  - System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand
  - System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator
  - System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)
  langs:
  - csharp
  name: OracleCommandBuilder
  nameWithType: OracleCommandBuilder
  fullName: System.Data.OracleClient.OracleCommandBuilder
  type: Class
  summary: "自动生成用于协调对所做更改的单表命令<xref href=&quot;System.Data.DataSet&quot;></xref>通过关联的数据库。 此类不能被继承。"
  remarks: "此类型已弃用，将.NET Framework 的未来版本中删除。 有关详细信息，请参阅[Oracle 和 ADO.NET](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Data.OracleClient.OracleDataAdapter>不会自动生成所需进行对帐对所做更改的 SQL 语句<xref:System.Data.DataSet>与数据库关联。</xref:System.Data.DataSet> </xref:System.Data.OracleClient.OracleDataAdapter> 但是，你可以在其中创建 OracleCommandBuilder 对象，它通过设置<xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>属性的<xref:System.Data.OracleClient.OracleDataAdapter>。</xref:System.Data.OracleClient.OracleDataAdapter></xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>生成单表更新的 SQL 语句 然后，OracleCommandBuilder 生成未设置任何其他 SQL 语句。       之间的关系<xref:System.Data.OracleClient.OracleDataAdapter>和其相应 OracleCommandBuilder 始终是一对一。</xref:System.Data.OracleClient.OracleDataAdapter> 若要创建这种对应关系，你可以设置<xref:System.Data.OracleClient.OracleDataAdapter>OracleCommandBuilder 对象属性。</xref:System.Data.OracleClient.OracleDataAdapter> 这将导致 OracleCommandBuilder 将自身注册为侦听器，它将产生的<xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>影响<xref:System.Data.DataSet>.</xref:System.Data.DataSet>的事件</xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>的输出       若要生成 INSERT、 UPDATE 或 DELETE 语句，OracleCommandBuilder 使用<xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>属性，以检索所需的元数据集。</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>       OracleCommandBuilder 还使用<xref:System.Data.OracleClient.OracleCommand.Connection%2A>，和<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>属性引用的<xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> </xref:System.Data.OracleClient.OracleCommand.Transaction%2A> </xref:System.Data.OracleClient.OracleCommand.Connection%2A>       如果调用<xref:System.Data.Common.DbDataAdapter.Dispose%2A>，与关联被断开 OracleCommandBuilder <xref:System.Data.OracleClient.OracleDataAdapter>，并且不再使用所生成的命令。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.Common.DbDataAdapter.Dispose%2A>"
  example:
  - "The following example uses <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataAdapter> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a database. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the database table. The example then creates an OracleCommandBuilder.  \n  \n [Visual Basic]  \n  \n```  \nPrivate Function SelectOracleRows(connection As String, queryString As String, tableName As String) As DataSet  \n  \n   Dim connection As New OracleConnection(connection)  \n   Dim dataAdapter As New OracleDataAdapter()  \n   Dim dataSet As DataSet = New DataSet  \n  \n   dataAdapter.SelectCommand = New OracleCommand(queryString, connection)  \n  \n   Dim cmdBuilder As OracleCommandBuilder = New OracleCommandBuilder(dataAdapter)  \n  \n   connection.Open()  \n   dataAdapter.Fill(dataSet, tableName)  \n      ' Code to modify data in DataSet here   \n      ' Without the OracleCommandBuilder this line would fail.  \n   dataAdapter.Update(dataSet, tableName)  \n   connection.Close()  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static DataSet SelectOracleSrvRows(string myConnection, string mySelectQuery, string myTableName)  \n{  \n   OracleConnection myConn = new OracleConnection(myConnection);  \n   OracleDataAdapter myDataAdapter = new OracleDataAdapter();  \n   myDataAdapter.SelectCommand = new OracleCommand(mySelectQuery, myConn);  \n   OracleCommandBuilder cb = new OracleCommandBuilder(myDataAdapter);  \n  \n   myConn.Open();  \n   DataSet ds = new DataSet();  \n   myDataAdapter.Fill(ds, myTableName);  \n  \n   //Code to modify data in DataSet goes here...  \n  \n   //Without the OracleCommandBuilder this line would fail.  \n   myDataAdapter.Update(ds, myTableName);  \n   myConn.Close();  \n   return ds;  \n}  \n```"
  syntax:
    content: >-
      [System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleCommandBuilder : System.Data.Common.DbCommandBuilder
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: OracleCommandBuilder()
  nameWithType: OracleCommandBuilder.OracleCommandBuilder()
  fullName: System.Data.OracleClient.OracleCommandBuilder.OracleCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "初始化的新实例<xref href=&quot;System.Data.OracleClient.OracleCommandBuilder&quot;> </xref>。"
  remarks: "<xref:System.Data.OracleClient.OracleCommandBuilder>将自己注册为侦听器<xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>由生成的事件<xref:System.Data.OracleClient.OracleDataAdapter>此属性中指定。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> </xref:System.Data.OracleClient.OracleCommandBuilder>       当你创建的新实例<xref:System.Data.OracleClient.OracleCommandBuilder>，任何现有<xref:System.Data.OracleClient.OracleCommandBuilder>与此关联<xref:System.Data.OracleClient.OracleDataAdapter>发布。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.OracleClient.OracleCommandBuilder>"
  syntax:
    content: public OracleCommandBuilder ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)
  id: '#ctor(System.Data.OracleClient.OracleDataAdapter)'
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: OracleCommandBuilder(OracleDataAdapter)
  nameWithType: OracleCommandBuilder.OracleCommandBuilder(OracleDataAdapter)
  fullName: System.Data.OracleClient.OracleCommandBuilder.OracleCommandBuilder(OracleDataAdapter)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "初始化的新实例<xref href=&quot;System.Data.OracleClient.OracleCommandBuilder&quot;></xref>使用关联的类<xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;></xref>对象。"
  remarks: "<xref:System.Data.OracleClient.OracleCommandBuilder>将自己注册为侦听器<xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>由生成的事件<xref:System.Data.OracleClient.OracleDataAdapter>此属性中指定。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> </xref:System.Data.OracleClient.OracleCommandBuilder>       当你创建的新实例<xref:System.Data.OracleClient.OracleCommandBuilder>，任何现有<xref:System.Data.OracleClient.OracleCommandBuilder>与此关联<xref:System.Data.OracleClient.OracleDataAdapter>发布。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.OracleClient.OracleCommandBuilder>"
  syntax:
    content: public OracleCommandBuilder (System.Data.OracleClient.OracleDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.OracleClient.OracleDataAdapter
      description: "<xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref>要与此关联对象<xref href=&quot;System.Data.OracleClient.OracleCommandBuilder&quot;> </xref>。"
  overload: System.Data.OracleClient.OracleCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OracleCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "要添加。"
    - id: datarow
      type: System.Data.DataRow
      description: "要添加。"
    - id: statementType
      type: System.Data.StatementType
      description: "要添加。"
    - id: whereClause
      type: System.Boolean
      description: "要添加。"
  overload: System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.CatalogLocation
  id: CatalogLocation
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: CatalogLocation
  nameWithType: OracleCommandBuilder.CatalogLocation
  fullName: System.Data.OracleClient.OracleCommandBuilder.CatalogLocation
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "设置或获取<xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref>的实例<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>类。"
  syntax:
    content: public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }
    return:
      type: System.Data.Common.CatalogLocation
      description: "A <xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref> object."
  overload: System.Data.OracleClient.OracleCommandBuilder.CatalogLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator
  id: CatalogSeparator
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: CatalogSeparator
  nameWithType: OracleCommandBuilder.CatalogSeparator
  fullName: System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "设置或获取的字符串用作的实例的目录分隔符<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>类。"
  syntax:
    content: public override string CatalogSeparator { get; set; }
    return:
      type: System.String
      description: "一个字符串，指示与实例一起使用的目录分隔符<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>类。"
  overload: System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OracleCommandBuilder.DataAdapter
  fullName: System.Data.OracleClient.OracleCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "获取或设置<xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;></xref>此对象<xref href=&quot;System.Data.OracleClient.OracleCommandBuilder&quot;></xref>对象将生成 SQL 语句。"
  remarks: "<xref:System.Data.OracleClient.OracleCommandBuilder>将自己注册为侦听器<xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>由生成的事件<xref:System.Data.OracleClient.OracleDataAdapter>此属性中指定。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> </xref:System.Data.OracleClient.OracleCommandBuilder>       当你创建的新实例<xref:System.Data.OracleClient.OracleCommandBuilder>，任何现有<xref:System.Data.OracleClient.OracleCommandBuilder>与此关联<xref:System.Data.OracleClient.OracleDataAdapter>发布。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.OracleClient.OracleCommandBuilder>"
  syntax:
    content: public System.Data.OracleClient.OracleDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.OracleClient.OracleDataAdapter
      description: "<xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref>与此关联的对象<xref href=&quot;System.Data.OracleClient.OracleCommandBuilder&quot;> </xref>。"
  overload: System.Data.OracleClient.OracleCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)
  id: DeriveParameters(System.Data.OracleClient.OracleCommand)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OracleCommand)
  nameWithType: OracleCommandBuilder.DeriveParameters(OracleCommand)
  fullName: System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(OracleCommand)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "从存储过程中指定检索参数信息<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>并填充<xref:System.Data.OracleClient.OracleCommand.Parameters*>的指定集合<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>对象。</xref:System.Data.OracleClient.OracleCommand.Parameters*>"
  remarks: "DeriveParameters 覆盖<xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand>任何现有参数信息       DeriveParameters 需要对数据库的额外调用，以获取信息。 如果在提前知道参数信息，则更有效地通过显式设置的信息填充的参数集合。       你可以仅 DeriveParameters 使用存储过程。 你无法使用 DeriveParameters 填充<xref:System.Data.OracleClient.OracleParameterCollection>使用任意 Transact SQL 语句，例如参数化的 SELECT 语句。</xref:System.Data.OracleClient.OracleParameterCollection>       有关详细信息，请参阅[配置参数和参数数据类型](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void DeriveParameters (System.Data.OracleClient.OracleCommand command);
    parameters:
    - id: command
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>引用存储的过程是派生参数信息。 派生的参数添加到<xref:System.Data.OracleClient.OracleCommand.Parameters*>集合<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>。</xref:System.Data.OracleClient.OracleCommand.Parameters*>"
  overload: System.Data.OracleClient.OracleCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "命令文本不是有效的存储的过程名称，或<xref href=&quot;System.Data.CommandType&quot;></xref>指定未<xref href=&quot;System.Data.CommandType&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OracleCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "获取自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>数据库执行删除操作所需的对象。"
  remarks: "你可以为信息性或故障排除目的使用 GetDeleteCommand 方法，因为它返回<xref:System.Data.OracleClient.OracleCommand>要执行对象。</xref:System.Data.OracleClient.OracleCommand>       你还可以用作 GetDeleteCommand 修改命令的基础。 例如，你可能会调用 GetDeleteCommand 和修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，然后显式设置的时间为<xref:System.Data.OracleClient.OracleDataAdapter>。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A>       应用程序调用时，将首先生成 SQL 语句<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetDeleteCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>       有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.OracleClient.OracleCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>执行删除操作所需的对象。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OracleCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "获取自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>数据库执行删除操作所需的对象。"
  remarks: "你可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OracleClient.OracleCommand>要执行对象。</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>       你还可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 例如，你可能在其中调用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，然后显式设置的时间为<xref:System.Data.OracleClient.OracleDataAdapter>。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>       当应用程序调用其中一种<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>。</xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数使你可以强制<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.Common.DbCommandBuilder> 。 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.OracleClient.OracleCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果为 true，则生成匹配列名称，如有可能的参数名称。 如果为 false，则生成@p1， @p2，依次类推。"
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>执行删除操作所需的对象。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OracleCommandBuilder.GetInsertCommand()
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "获取自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>需对数据库执行插入的对象。"
  remarks: "你可以为信息性或故障排除目的使用 GetInsertCommand 方法，因为它返回<xref:System.Data.OracleClient.OracleCommand>要执行对象。</xref:System.Data.OracleClient.OracleCommand>       你还可以用作 GetInsertCommand 修改命令的基础。 例如，你可能会调用 GetInsertCommand 和修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，然后显式设置的时间为<xref:System.Data.OracleClient.OracleDataAdapter>。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A>       应用程序调用时，将首先生成 SQL 语句<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetInsertCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>       有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.OracleClient.OracleCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>执行插入所需的对象。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OracleCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "获取自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>需对数据库执行插入的对象。"
  remarks: "你可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>提供信息或解决方法目的，因为它返回<xref:System.Data.OracleClient.OracleCommand>要执行对象。</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>       你还可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 例如，你可能在其中调用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，然后显式设置的时间为<xref:System.Data.OracleClient.OracleDataAdapter>。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>       当应用程序调用其中一种<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>。</xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数使你可以强制<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.Common.DbCommandBuilder> 。 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.OracleClient.OracleCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果为 true，则生成匹配列名称，如有可能的参数名称。 如果为 false，则生成@p1， @p2，依次类推。"
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>执行插入所需的对象。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OracleCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OracleCommandBuilder.GetParameterName(String)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OracleCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "要添加。"
    return:
      type: System.String
      description: "要添加。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OracleCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "获取自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>数据库上执行更新所需的对象。"
  remarks: "你可以为信息性或故障排除目的使用 GetUpdateCommand 方法，因为它返回<xref:System.Data.OracleClient.OracleCommand>要执行对象。</xref:System.Data.OracleClient.OracleCommand>       你还可以用作 GetUpdateCommand 修改命令的基础。 例如，你可能会调用 GetUpdateCommand 和修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，然后显式设置的时间为<xref:System.Data.OracleClient.OracleDataAdapter>。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A>       应用程序调用时，将首先生成 SQL 语句<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetUpdateCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>       有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.OracleClient.OracleCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>执行更新所需的对象。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OracleCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "获取自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>数据库上执行更新所需的对象。"
  remarks: "你可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OracleClient.OracleCommand>要执行对象。</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>       你还可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 例如，你可能在其中调用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，然后显式设置的时间为<xref:System.Data.OracleClient.OracleDataAdapter>。</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>       当应用程序调用其中一种<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>。</xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>首先生成 SQL 语句       生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。 传递`true`为`useColumnsForParameterNames`参数使你可以强制<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</xref:System.Data.Common.DbCommandBuilder> 。 此操作成功仅当满足以下条件:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.OracleClient.OracleCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果为 true，则生成匹配列名称，如有可能的参数名称。 如果为 false，则生成@p1， @p2，依次类推。"
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "自动生成<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>执行更新所需的对象。"
  overload: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OracleCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "指定在正确的目录的情况下不带引号的标识符，则会返回正确带引号的该标识符，包括正确转义任何在标识符中嵌入的引号的形式。"
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "原始不带引号的标识符。"
    return:
      type: System.String
      description: "带引号的标识符的版本。 适当地转义标识符中嵌入的引号。"
  overload: System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator
  id: SchemaSeparator
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: SchemaSeparator
  nameWithType: OracleCommandBuilder.SchemaSeparator
  fullName: System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "获取或设置要用于架构标识符和任何其他标识符之间的分隔符的字符。"
  remarks: "通常情况下，数据库服务器通过将架构名称与具有某些字符标识符分离指示标识符的架构。 例如，SQL Server 使用冒号，创建完整的标识符，例如，人员︰ CustomerName，其中&quot;Person&quot;是架构名称，&quot;CustomerName&quot;是的标识符。 设置此属性允许开发人员修改此行为。"
  syntax:
    content: public override string SchemaSeparator { get; set; }
    return:
      type: System.String
      description: "要用作架构分隔符的字符。"
  overload: System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OracleCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "要添加。"
  overload: System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.OracleClient.OracleCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OracleCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "给定的带引号的标识符，返回该标识符，包括正确取消转义的正确却未加引号的形式任何嵌入的引号的在标识符中。"
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "将已删除其嵌入的引号的标识符。"
    return:
      type: System.String
      description: "不带引号的标识符，使用嵌入的引号正确取消转义。"
  overload: System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OracleClient.OracleCommandBuilder.#ctor
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: OracleCommandBuilder()
  nameWithType: OracleCommandBuilder.OracleCommandBuilder()
  fullName: System.Data.OracleClient.OracleCommandBuilder.OracleCommandBuilder()
- uid: System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: OracleCommandBuilder(OracleDataAdapter)
  nameWithType: OracleCommandBuilder.OracleCommandBuilder(OracleDataAdapter)
  fullName: System.Data.OracleClient.OracleCommandBuilder.OracleCommandBuilder(OracleDataAdapter)
- uid: System.Data.OracleClient.OracleDataAdapter
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleDataAdapter
  nameWithType: OracleDataAdapter
  fullName: System.Data.OracleClient.OracleDataAdapter
- uid: System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OracleCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleCommandBuilder.CatalogLocation
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: OracleCommandBuilder.CatalogLocation
  fullName: System.Data.OracleClient.OracleCommandBuilder.CatalogLocation
- uid: System.Data.Common.CatalogLocation
  parent: System.Data.Common
  isExternal: false
  name: CatalogLocation
  nameWithType: CatalogLocation
  fullName: System.Data.Common.CatalogLocation
- uid: System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: OracleCommandBuilder.CatalogSeparator
  fullName: System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleCommandBuilder.DataAdapter
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OracleCommandBuilder.DataAdapter
  fullName: System.Data.OracleClient.OracleCommandBuilder.DataAdapter
- uid: System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: DeriveParameters(OracleCommand)
  nameWithType: OracleCommandBuilder.DeriveParameters(OracleCommand)
  fullName: System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(OracleCommand)
- uid: System.Data.OracleClient.OracleCommand
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
- uid: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OracleCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand()
- uid: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OracleCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OracleCommandBuilder.GetInsertCommand()
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand()
- uid: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OracleCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OracleCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetParameterName(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OracleCommandBuilder.GetParameterName(String)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetParameterName(String)
- uid: System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OracleCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OracleCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand()
- uid: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OracleCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OracleCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: OracleCommandBuilder.SchemaSeparator
  fullName: System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator
- uid: System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OracleCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OracleCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.OracleClient.OracleCommandBuilder.#ctor*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: OracleCommandBuilder
  nameWithType: OracleCommandBuilder.OracleCommandBuilder
- uid: System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OracleCommandBuilder.ApplyParameterInfo
- uid: System.Data.OracleClient.OracleCommandBuilder.CatalogLocation*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: OracleCommandBuilder.CatalogLocation
- uid: System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: OracleCommandBuilder.CatalogSeparator
- uid: System.Data.OracleClient.OracleCommandBuilder.DataAdapter*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OracleCommandBuilder.DataAdapter
- uid: System.Data.OracleClient.OracleCommandBuilder.DeriveParameters*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OracleCommandBuilder.DeriveParameters
- uid: System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OracleCommandBuilder.GetDeleteCommand
- uid: System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OracleCommandBuilder.GetInsertCommand
- uid: System.Data.OracleClient.OracleCommandBuilder.GetParameterName*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OracleCommandBuilder.GetParameterName
- uid: System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OracleCommandBuilder.GetParameterPlaceholder
- uid: System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OracleCommandBuilder.GetUpdateCommand
- uid: System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OracleCommandBuilder.QuoteIdentifier
- uid: System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: OracleCommandBuilder.SchemaSeparator
- uid: System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OracleCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier*
  parent: System.Data.OracleClient.OracleCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OracleCommandBuilder.UnquoteIdentifier
