### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SiteMapPath
  id: SiteMapPath
  children:
  - System.Web.UI.WebControls.SiteMapPath.#ctor
  - System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  - System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  - System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  - System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.DataBind
  - System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  - System.Web.UI.WebControls.SiteMapPath.ItemCreated
  - System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  - System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SiteMapPath.NodeStyle
  - System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  - System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  - System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  - System.Web.UI.WebControls.SiteMapPath.PathDirection
  - System.Web.UI.WebControls.SiteMapPath.PathSeparator
  - System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  - System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  - System.Web.UI.WebControls.SiteMapPath.Provider
  - System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  - System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  - System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.SaveViewState
  - System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  - System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  - System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  - System.Web.UI.WebControls.SiteMapPath.TrackViewState
  langs:
  - csharp
  name: SiteMapPath
  nameWithType: SiteMapPath
  fullName: System.Web.UI.WebControls.SiteMapPath
  type: Class
  summary: "显示一组文本或图像的超链接，使用户能够更轻松地浏览网站，同时占用最少量的页面空间。"
  remarks: "本主题中:-[简介](#introduction)      -   [节点](#nodes)      -   [节点外观](#node_appearance)      -   [事件](#events)      -   [自定义说明如何](#customizing_the_sitemappath_control)      -   [可访问性](#accessibility)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介 SiteMapPath 控件是一个反映提供的数据的站点导航控件<xref:System.Web.SiteMap>对象。</xref:System.Web.SiteMap>       它使您能够轻松地导航站点节省空间，并充当其中在当前显示的页面是在站点内的参考点。 此类型的控件通常称为痕迹导航或眉毛导航，因为它将显示提供从当前位置层次结构中的页转义层次结构路径的超链接的页名称。 <xref:System.Web.UI.WebControls.SiteMapDataSource>.</xref:System.Web.UI.WebControls.SiteMapDataSource> SiteMapPath 可用于站点，但又具有深层分层页结构<xref:System.Web.UI.WebControls.TreeView>或<xref:System.Web.UI.WebControls.Menu>可能需要过多页上的空间。</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.TreeView>       说明如何都直接与你的 Web 站点站点地图数据。 如果你使用它在页上不会显示在你的站点代码图中，将不会显示。 有关站点映射的详细信息，请参阅[ASP.NET 站点导航](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;nodes&quot;></a># # SiteMapPath 组成的节点的节点。 在路径中的每个元素都称为一个节点，它由<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象。</xref:System.Web.UI.WebControls.SiteMapNodeItem> 锚定路径并表示的层次结构树的节点称为根节点。 表示当前显示的页的节点是当前节点。 当前节点与根节点之间的任何其他节点是一个父节点。 下表介绍的三个不同的节点类型。      |节点类型 |说明 |  |---------------|-----------------|  | 根 |定位一组分层的节点的节点。 |  | 父 |节点具有一个或多个子节点，但不是当前节点。 |  | 当前 |表示当前显示的页的节点。 |     <a name=&quot;node_appearance&quot;> </a> # # SiteMapPath 所显示的节点外观每个节点是<xref:System.Web.UI.WebControls.HyperLink>或<xref:System.Web.UI.WebControls.Literal>控件，可以应用模板或样式到。</xref:System.Web.UI.WebControls.Literal> </xref:System.Web.UI.WebControls.HyperLink> 模板和样式应用于节点根据两个规则的优先顺序:-如果节点为定义了模板，它将覆盖任何节点定义的样式。      模板和特定于类型的节点的样式重写的常规模板和样式定义的所有节点。       <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>属性应用到所有的节点，而不考虑其节点类型。</xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 如果定义了这两个这些属性，<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>优先。</xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>       <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>属性应用于表示当前显示的页的节点。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>除了定义<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>，它将被忽略。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>除了定义<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>，它会与合并<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>若要创建合并的样式。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 此合并的样式使用的所有元素<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>，加上其他元素的<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>，不与<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>冲突</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>       <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>属性应用于表示站点导航层次结构的根节点。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>除了定义<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>，它将被忽略。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>除了定义<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>，它会与合并<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>若要创建合并的样式。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 此合并的样式使用的所有元素<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>，加上其他元素的<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>未使用<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>不冲突</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 最后，如果在当前显示的页面是站点，<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>并<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>使用而不是<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>根页       说明如何使用由标识站点地图提供商提供<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>作为站点导航信息其数据源的属性。</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> 如果不指定任何提供程序，则它使用默认的提供程序为使站点，在中标识<xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>属性。</xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName> 通常，这是对 ASP.NET、 <xref:System.Web.XmlSiteMapProvider>.</xref:System.Web.XmlSiteMapProvider>默认站点地图提供商提供的实例 说明如何使用在站点内，但没有站点映射的提供程序配置，如果该控件将引发<xref:System.Web.HttpException>异常。</xref:System.Web.HttpException>      <a name=&quot;events&quot;></a># # 事件说明如何还提供了可以编程的事件。 这允许你每次事件发生时运行的自定义的例程。 下表列出说明如何支持的事件。      |事件 |说明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>|首先，说明如何创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>并将其与<xref:System.Web.SiteMapNode>关联时发生。 |  |<xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>|当<xref:System.Web.UI.WebControls.SiteMapNodeItem>绑定到站点地图数据包含的<xref:System.Web.SiteMapNode>时发生。 |     <a name=&quot;customizing_the_sitemappath_control&quot;> </a> # # 自定义派生自 SiteMapPath 替代 SiteMapPath 控件类<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法以自定义<xref:System.Web.UI.WebControls.SiteMapNodeItem>包含导航控件的控件。</xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated> 为了完全控制方式<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象会创建并添加到 SiteMapPath，派生的类重写<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法。</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A> </xref:System.Web.UI.WebControls.SiteMapNodeItem>      <a name=&quot;accessibility&quot;></a># # 有关如何配置此控件，以使其生成符合辅助功能标准的标记辅助功能的信息，请参阅[Visual Studio 和 ASP.NET 中的辅助功能](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 控件和可访问性](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:SiteMapPath       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDataBound=&quot;ItemDataBound event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       ParentLevelsDisplayed=&quot;integer&quot;       PathDirection=&quot;RootToCurrent|CurrentToRoot&quot;       PathSeparator=&quot;string&quot;       RenderCurrentNodeAsLink=&quot;True|False&quot;       runat=&quot;server&quot;       ShowToolTips=&quot;True|False&quot;       SiteMapProvider=&quot;string&quot;       SkinID=&quot;string&quot;       SkipLinkText=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <CurrentNodeStyle />           <CurrentNodeTemplate>               <!-- child controls -->           </CurrentNodeTemplate>           <NodeStyle />           <NodeTemplate>               <!-- child controls -->           </NodeTemplate>           <PathSeparatorStyle />           <PathSeparatorTemplate>               <!-- child controls -->           </PathSeparatorTemplate>           <RootNodeStyle />           <RootNodeTemplate>               <!-- child controls -->           </RootNodeTemplate>   </asp:SiteMapPath>   ```"
  example:
  - "The following code example uses a SiteMapPath control declaratively in a Web Forms page. This example demonstrates some of the rules of precedence that govern the order with which templates and styles are applied to SiteMapPath nodes.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_394_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_394_1.aspx)]  \n  \n The previous example uses the default site map provider and a Web.sitemap file with the following structure.  \n  \n```  \n<siteMap>  \n  <siteMapNode title=\"WebForm1\" description=\"WebForm1\" url=\"WebForm1.aspx\" >  \n    <siteMapNode title=\"WebForm2\" description=\"WebForm2\" url=\"WebForm2.aspx\"/>  \n  </siteMapNode>  \n</siteMap>  \n```  \n  \n The following code example demonstrates extends the SiteMapPath control and adds new functionality to it by overriding the <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> method. The `DropDownSiteMapPath` control adds a <xref:System.Web.UI.WebControls.DropDownList> after the current node, to enable easy navigation to pages that are child nodes of the current page. This example demonstrates how to work with <xref:System.Web.UI.WebControls.SiteMapNodeItem> objects, including checking their <xref:System.Web.UI.WebControls.SiteMapNodeItemType> and calling the <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> method after the items are created.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_394_2.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_394_2.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class SiteMapPath : System.Web.UI.WebControls.CompositeControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.CompositeControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.CompositeControl.Controls
  - System.Web.UI.WebControls.CompositeControl.RecreateChildControls
  - System.Web.UI.WebControls.CompositeControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeControl.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SiteMapPath()
  nameWithType: SiteMapPath.SiteMapPath()
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapPath()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>类。"
  remarks: "使用此构造函数来创建和初始化<xref:System.Web.UI.WebControls.SiteMapPath>类</xref:System.Web.UI.WebControls.SiteMapPath>的新实例 若要动态添加<xref:System.Web.UI.WebControls.SiteMapPath>控件到页中，创建新的<xref:System.Web.UI.WebControls.SiteMapPath>对象、 设置其属性，并将其添加到<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>如<xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder>容器控件的集合</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.SiteMapPath></xref:System.Web.UI.WebControls.SiteMapPath>"
  example:
  - "The following code example demonstrates how to use the SiteMapPath constructor to add a <xref:System.Web.UI.WebControls.SiteMapPath> control to a page. For the example to work, you need to add an image to your root directory and change the image name in the example code from \"myimage.jpg\" to the name of your image file.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_223_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_223_1.aspx)]"
  syntax:
    content: public SiteMapPath ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: SiteMapPath.CreateChildControls()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "清除当前的子控件集合，并通过调用重新生成它<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*>方法。</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*>"
  remarks: "通知使用基于撰写的实现，包括派生的控件的任何控件的 ASP.NET 基础结构调用此方法<xref:System.Web.UI.WebControls.CompositeDataBoundControl>和<xref:System.Web.UI.WebControls.CompositeControl>可以创建任何子它们所包含的控件以准备回发或呈现。</xref:System.Web.UI.WebControls.CompositeControl> </xref:System.Web.UI.WebControls.CompositeDataBoundControl>"
  syntax:
    content: protected override void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  id: CreateControlHierarchy
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CreateControlHierarchy()
  nameWithType: SiteMapPath.CreateControlHierarchy()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "检查提供的站点地图结构<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>并生成子控件集合基于样式和模板定义为功能的节点。</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>"
  remarks: "CreateControlHierarchy 方法创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>控制，将它们与相应关联<xref:System.Web.SiteMapNode>对象从当前站点映射提供程序，并添加到的节点<xref:System.Web.UI.Control.Controls%2A>集合。</xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem>       该方法首先查找<xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName>，然后向上层次结构树的遍历<xref:System.Web.SiteMapNode>对象，创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>之前每个<xref:System.Web.SiteMap.RootNode%2A>为止。</xref:System.Web.SiteMap.RootNode%2A> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName> 在每行后<xref:System.Web.UI.WebControls.SiteMapNodeItem>创建，但之前绑定到其对应<xref:System.Web.SiteMapNode>、<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>调用方法。</xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem> <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法适用的任何模板或定义特定节点类型的样式和创建并初始化任何子控件，<xref:System.Web.UI.WebControls.SiteMapNodeItem>包含。</xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 最后，<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法将添加的子控件<xref:System.Web.UI.WebControls.SiteMapNodeItem>到<xref:System.Web.UI.Control.Controls%2A>集合。</xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>       在每行后<xref:System.Web.UI.WebControls.SiteMapNodeItem>初始化时，<xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A>调用方法。</xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> </xref:System.Web.UI.WebControls.SiteMapNodeItem> 则<xref:System.Web.UI.WebControls.SiteMapNodeItem>绑定到其对应<xref:System.Web.SiteMapNode>，和<xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A>称为。</xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem>       从调用 CreateControlHierarchy 方法<xref:System.Web.UI.WebControls.SiteMapPath.CreateChildControls%2A>方法。</xref:System.Web.UI.WebControls.SiteMapPath.CreateChildControls%2A>       扩展的类<xref:System.Web.UI.WebControls.SiteMapPath>控件重写 CreateControlHierarchy 方法，以便更改如何<xref:System.Web.UI.WebControls.SiteMapNodeItem>创建或添加到控件<xref:System.Web.UI.WebControls.SiteMapPath>控件。</xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath> 在中执行的操作的各个节点项<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法，并扩展的大多数类<xref:System.Web.UI.WebControls.SiteMapPath>重写该方法仅。</xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>"
  syntax:
    content: protected virtual void CreateControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "不<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>可供<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件。</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  id: CurrentNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取用于对当前节点的显示文本的样式。"
  remarks: "CurrentNodeStyle 属性用于控制节点表示在当前显示的页面的导航路径显示文本的外观。 默认情况下，显示文本是在中指定<xref:System.Web.SiteMapNode.Title%2A>属性<xref:System.Web.SiteMapNode>表示页。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Title%2A> 常见样式设置包括自定义的背景色、 前景颜色、 字体属性和节点间距。       有关<xref:System.Web.UI.WebControls.SiteMapPath>节点，样式属性合并到单个样式，顺序如下︰ 1。</xref:System.Web.UI.WebControls.SiteMapPath>  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>2。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  CurrentNodeStyle 或如果当前显示的页是根节点， <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>      1> [!NOTE]&1;> 除非显式设置为，如果节点字体样式设置为带删除线或上划线样式时，不显示节点的默认下划线样式`true`。       如果<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>定义属性，CurrentNodeStyle 属性被忽略。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>"
  example:
  - "The following code example demonstrates how to declaratively set the CurrentNodeStyle of a <xref:System.Web.UI.WebControls.SiteMapPath> control in a Web Forms page.  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_328_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_328_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style CurrentNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>包含的当前节点的显示文本的样式设置<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  id: CurrentNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置控件模板，用于表示当前显示的页站点导航路径的节点。"
  remarks: "设置为 CurrentNodeTemplate<xref:System.Web.UI.ITemplate>对象，用于<xref:System.Web.UI.WebControls.Image>控件或其他控件，如<xref:System.Web.UI.WebControls.Label>，用作当前节点的用户界面元素而不是字符串。</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.ITemplate>       如果设置 CurrentNodeTemplate 属性，该模板覆盖显示的当前导航节点文本和任何<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>应用于它。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 如果当前显示的页，对应于根节点中，但是，<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>使用。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>       你可以以声明方式将 CurrentNodeTemplate 属性设置为任何 Web 服务器控件，并 ASP.NET 基础结构执行必要的步骤来包装为该 Web 服务器控件<xref:System.Web.UI.ITemplate>对象。</xref:System.Web.UI.ITemplate> 但是，Web 服务器控件不实现<xref:System.Web.UI.ITemplate>接口; 因此，当你处理的<xref:System.Web.UI.ITemplate>属性以编程方式，你必须编写<xref:System.Web.UI.ITemplate>包装器的任何模板代码。</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 然后，CurrentNodeTemplate 属性设置为实例<xref:System.Web.UI.ITemplate>包装。</xref:System.Web.UI.ITemplate>"
  example:
  - "The following code example declaratively defines a CurrentNodeTemplate and overrides a defined <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_538_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_538_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate CurrentNodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>实现对象<xref:System.Web.UI.ITemplate.InstantiateIn*>方法，以呈现表示在当前显示的页面的导航路径节点的自定义内容。</xref:System.Web.UI.ITemplate.InstantiateIn*>"
  overload: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: DataBind()
  nameWithType: SiteMapPath.DataBind()
  fullName: System.Web.UI.WebControls.SiteMapPath.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将绑定到数据源<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件及其子控件。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>控件旨在通过使用直接从站点地图提供商提供检索其数据<xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A>属性。</xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A> </xref:System.Web.UI.WebControls.SiteMapPath> 不要使用<xref:System.Web.UI.WebControls.SiteMapPath>控件将绑定到 ASP.NET 数据源控件，并且不显式调用数据绑定方法。</xref:System.Web.UI.WebControls.SiteMapPath>"
  syntax:
    content: public override void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  id: InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: InitializeItem(SiteMapNodeItem)
  nameWithType: SiteMapPath.InitializeItem(SiteMapNodeItem)
  fullName: System.Web.UI.WebControls.SiteMapPath.InitializeItem(SiteMapNodeItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "填充<xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref>，这是 Web 服务器控件表示<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>，与一组基于节点的函数与指定的模板和样式节点的子控件。"
  remarks: "InitializeItem 方法确定该项表示通过检查的节点的功能类型<xref:System.Web.UI.WebControls.SiteMapNodeItemType>，并应用任何模板或为该类型的节点定义的样式。</xref:System.Web.UI.WebControls.SiteMapNodeItemType>       如果<xref:System.Web.UI.WebControls.SiteMapNodeItem>具有<xref:System.Web.UI.WebControls.SiteMapNodeItemType>项目类型，<xref:System.Web.UI.WebControls.HyperLink>创建子控件，与<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>可能应用。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapNodeItem> 如果<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>设置，其<xref:System.Web.UI.ITemplate>应用于该节点。</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 中改为<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>设置，它会与任何定义合并<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>和应用。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 最后，如果未定义任何模板或样式，基本<xref:System.Web.UI.WebControls.HyperLink>控件创建并初始化与该节点的值。</xref:System.Web.UI.WebControls.HyperLink>       如果<xref:System.Web.UI.WebControls.SiteMapNodeItem>具有<xref:System.Web.UI.WebControls.SiteMapNodeItemType>项类型，其中一种<xref:System.Web.UI.WebControls.Literal>或<xref:System.Web.UI.WebControls.HyperLink>创建子控件，具体取决于<xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A>的返回值</xref:System.Web.UI.WebControls.HyperLink></xref:System.Web.UI.WebControls.Literal></xref:System.Web.UI.WebControls.SiteMapNodeItemType></xref:System.Web.UI.WebControls.SiteMapNodeItem> 然后任一<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>可能应用。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 如果<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>设置，其<xref:System.Web.UI.ITemplate>应用于该节点。</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 如果改为<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>设置，它会与任何定义合并<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>和应用。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>       如果<xref:System.Web.UI.WebControls.SiteMapNodeItem>具有<xref:System.Web.UI.WebControls.SiteMapNodeItemType>项目类型，<xref:System.Web.UI.WebControls.HyperLink>创建子控件和<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>可能应用。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapNodeItem> 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>设置，其<xref:System.Web.UI.ITemplate>应用于该节点。</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 如果改为<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>设置，它应用了。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>       最后，如果<xref:System.Web.UI.WebControls.SiteMapNodeItem>具有<xref:System.Web.UI.WebControls.SiteMapNodeItemType>项目类型，<xref:System.Web.UI.WebControls.Literal>创建子控件和<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>为定义的相同常规规则将根据应用<xref:System.Web.UI.WebControls.SiteMapNodeItemType>节点类型。</xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> </xref:System.Web.UI.WebControls.Literal> </xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapNodeItem>       重写 InitializeItem 方法以处理单个<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象。</xref:System.Web.UI.WebControls.SiteMapNodeItem> 如果类的设计需要更多扩展性控制如何<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象会创建并添加到<xref:System.Web.UI.WebControls.SiteMapPath>控制，请重写<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法。</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A> </xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapNodeItem>"
  example:
  - "The following code example demonstrates how to override the InitializeItem method to add functionality to a control that derives from <xref:System.Web.UI.WebControls.SiteMapPath>. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SiteMapPath> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/add/codesnippet/visualbasic/707d474c-b96f-4b62-8a92-_1.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/add/codesnippet/csharp/707d474c-b96f-4b62-8a92-_1.cs)]"
  syntax:
    content: protected virtual void InitializeItem (System.Web.UI.WebControls.SiteMapNodeItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.SiteMapNodeItem
      description: "<xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref>初始化。"
  overload: System.Web.UI.WebControls.SiteMapPath.InitializeItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ItemCreated
  nameWithType: SiteMapPath.ItemCreated
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;></xref>由创建<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>并且与其相应的相关联<xref href=&quot;System.Web.SiteMapNode&quot;> </xref>。 通过将引发此事件<xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated*>方法。</xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated*>"
  remarks: "有关处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemCreated;
    return:
      type: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  id: ItemDataBound
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ItemDataBound
  nameWithType: SiteMapPath.ItemDataBound
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "之后，将会<xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;></xref>已绑定到其基础<xref href=&quot;System.Web.SiteMapNode&quot;></xref>数据<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>。 通过将引发此事件<xref:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*>方法。</xref:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*>"
  remarks: "有关处理事件的详细信息，请参阅[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemDataBound;
    return:
      type: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SiteMapPath.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SiteMapPath.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "从已保存的上一个请求还原视图状态信息<xref:System.Web.UI.WebControls.SiteMapPath.SaveViewState*>方法。</xref:System.Web.UI.WebControls.SiteMapPath.SaveViewState*>"
  remarks: "此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。 但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.UI.WebControls.Login.LoadViewState%2A>方法还原在上一个请求过程中保存的视图状态信息。</xref:System.Web.UI.WebControls.Login.LoadViewState%2A>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>，它表示要还原的控件状态。</xref:System.Object>"
  overload: System.Web.UI.WebControls.SiteMapPath.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  id: NodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取用于对站点导航路径中的所有节点的显示文本的样式。"
  remarks: "使用 NodeStyle 属性来控制由控件呈现的所有导航路径节点的显示文本的外观。 默认情况下，显示文本是在中指定<xref:System.Web.SiteMapNode.Title%2A>属性<xref:System.Web.SiteMapNode>表示页。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Title%2A> 常见样式设置包括自定义的背景色、 前景颜色、 字体属性和节点间距。       有关<xref:System.Web.UI.WebControls.SiteMapPath>节点，样式属性合并到单个样式，顺序如下︰ 1。</xref:System.Web.UI.WebControls.SiteMapPath>  NodeStyle 2。  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>，具体取决于节点类型。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>      1> [!NOTE]&1;> 除非显式设置为，如果节点字体样式设置为带删除线或上划线样式时，不显示节点的默认下划线样式`true`。       如果定义 NodeStyle，则它最初应用于每个节点。 如果为特定类型的节点，如根节点或当前节点中，定义了附加样式此样式取代 NodeStyle 属性中指定的常规样式。 如果为特定类型的节点定义了模板，它所取代该节点的所有已定义的样式。"
  example:
  - "The following code example demonstrates how to define a NodeStyle that is merged with a <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> to demonstrate the order of style precedence for the <xref:System.Web.UI.WebControls.SiteMapPath> nodes.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_510_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_510_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style NodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>包含中的显示文本的样式设置<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.SiteMapPath.NodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  id: NodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置控件模板，以用于站点导航路径的所有功能节点。"
  remarks: "设置为 NodeTemplate<xref:System.Web.UI.ITemplate>对象，用于<xref:System.Web.UI.WebControls.Image>或其他控件，如<xref:System.Web.UI.WebControls.Label>，作为所有导航路径节点的用户界面元素。</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.ITemplate>       如果设置 NodeTemplate 属性，则模板替代显示的导航节点文本和任何<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>应用于它。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 当前和根节点，如果<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>设置，这些模板会重写 NodeTemplate。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>       你可以以声明方式将 NodeTemplate 属性设置为任何 Web 服务器控件，并 ASP.NET 基础结构执行必要的步骤来包装为该 Web 服务器控件<xref:System.Web.UI.ITemplate>对象。</xref:System.Web.UI.ITemplate> 但是，Web 服务器控件不实现<xref:System.Web.UI.ITemplate>接口; 因此，当你处理的<xref:System.Web.UI.ITemplate>属性以编程方式，你必须编写<xref:System.Web.UI.ITemplate>包装器的任何模板代码。</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 然后，<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>属性设置为实例<xref:System.Web.UI.ITemplate>包装。</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>"
  example:
  - "The following code example demonstrates how a NodeTemplate, when one is specified, overrides styles defined for all nodes, including special styles for the root node and current node.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_615_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_615_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate NodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>实现<xref:System.Web.UI.ITemplate.InstantiateIn*>方法，以呈现的导航路径。 每个节点的自定义内容</xref:System.Web.UI.ITemplate.InstantiateIn*>的对象"
  overload: System.Web.UI.WebControls.SiteMapPath.NodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  id: OnDataBinding(System.EventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnDataBinding(EventArgs)
  nameWithType: SiteMapPath.OnDataBinding(EventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重写<xref:System.Web.UI.Control.OnDataBinding*>方法<xref href=&quot;System.Web.UI.WebControls.CompositeControl&quot;></xref>类并引发<xref href=&quot;System.Web.UI.Control.DataBinding&quot;></xref>事件。</xref:System.Web.UI.Control.OnDataBinding*>"
  syntax:
    content: protected override void OnDataBinding (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.SiteMapPath.OnDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  id: OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnItemCreated(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.SiteMapPath.ItemCreated&quot;></xref>事件<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>后引发事件<xref:System.Web.UI.WebControls.SiteMapPath>控件创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>，这是 Web 服务器控件表示<xref:System.Web.SiteMapNode>，并将其关联到<xref:System.Web.SiteMapNode>。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated> OnItemCreated 方法调用之前创建的节点项绑定到其数据。 这使您可以提供一个事件处理方法，就执行自定义例程每当<xref:System.Web.UI.WebControls.SiteMapNodeItem>创建。</xref:System.Web.UI.WebControls.SiteMapNodeItem>       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemCreated 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  example:
  - "The following code example demonstrates how to call the OnItemCreated method after creating a <xref:System.Web.UI.WebControls.SiteMapNodeItem> within the <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> method. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SiteMapPath> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/add/codesnippet/visualbasic/75986b20-78b2-4533-871b-_1.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/add/codesnippet/csharp/75986b20-78b2-4533-871b-_1.cs)]"
  syntax:
    content: protected virtual void OnItemCreated (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItemEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.SiteMapPath.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  id: OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnItemDataBound(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.WebControls.SiteMapPath.ItemDataBound&quot;></xref>事件<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>引发事件时的<xref:System.Web.UI.WebControls.SiteMapPath>控件绑定到数据提供受其支持<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>。</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> </xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound> 这使您可以提供执行自定义的例程，例如更新数据库或显示的内容，每次此事件发生时的事件处理方法。       引发事件时，将调用事件处理程序，通过委托。 有关详细信息，请参阅[NIB︰ 引发事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemDataBound 方法还允许派生的类对事件进行处理而不必附加委托。 这是处理派生类中的事件的首选的技术。"
  syntax:
    content: protected virtual void OnItemDataBound (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItemEventArgs&quot;> </xref>包含事件数据。"
  overload: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  id: ParentLevelsDisplayed
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
  fullName: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置该控件将显示，相对于当前所显示的节点的父节点的级别数。"
  remarks: "ParentLevelsDisplayed 属性控制显示多少个级别的父节点<xref:System.Web.UI.WebControls.SiteMapPath>上方当前上下文节点的控件。</xref:System.Web.UI.WebControls.SiteMapPath> 默认情况下，显示所有父节点和上级节点上面当前上下文节点。       此属性的值存储在视图状态。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public virtual int ParentLevelsDisplayed { get; set; }
    return:
      type: System.Int32
      description: "一个整数，指定显示相对于当前上下文节点的父节点的级别数。 默认值为-1，指示该控件将显示的父级别数没有限制。"
  overload: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ParentLevelsDisplayed 的值是小于-1。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection
  id: PathDirection
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
  fullName: System.Web.UI.WebControls.SiteMapPath.PathDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置在中呈现的导航路径节点的顺序。"
  remarks: "设置为 PathDirection<xref:System.Web.UI.WebControls.PathDirection>如果你想要显示从左到右; 的导航路径的导航路径显示为前进从左到右的站点地图节点。</xref:System.Web.UI.WebControls.PathDirection> 换而言之，在最左边的位置是根节点、 每个后续节点处于右侧下, 一步的位置和当前节点是最右侧的位置。       设置为 PathDirection<xref:System.Web.UI.WebControls.PathDirection>如果你想要显示从右到左的导航路径。</xref:System.Web.UI.WebControls.PathDirection> 换而言之，反转节点顺序，以便在最右边的位置显示的根节点和当前节点显示在左边的位置。 虽然不是很常见，此排序可用于本地化 Web 窗体页面和<xref:System.Web.UI.WebControls.SiteMapPath>控件从右到左阅读的语言的。</xref:System.Web.UI.WebControls.SiteMapPath>       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to declaratively set the PathDirection property of a <xref:System.Web.UI.WebControls.SiteMapPath> in a Web Forms page.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_37_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PathDirection PathDirection { get; set; }
    return:
      type: System.Web.UI.WebControls.PathDirection
      description: "A <xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref> ，该值指示导航节点中呈现的分层顺序。 默认值是<xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref>，这指示节点将呈现到层次结构顺序从最顶层节点当前节点中，从左到右。"
  overload: System.Web.UI.WebControls.SiteMapPath.PathDirection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PathDirection 的值不是基之一<xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  id: PathSeparator
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置分隔的字符串<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>呈现的导航路径中的节点。"
  remarks: "如果<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>是定义，它应用于 PathSeparator 属性。</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> 但是，如果<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>定义属性，则这两个 PathSeparator 和<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>属性会被忽略。</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>       此属性的值存储在视图状态。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to set the PathSeparator property of a <xref:System.Web.UI.WebControls.SiteMapPath> to a string other than the default.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_604_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_604_1.aspx)]"
  syntax:
    content: public virtual string PathSeparator { get; set; }
    return:
      type: System.String
      description: "表示导航路径中的节点的分隔符的字符串。 默认值是&quot; &gt; &quot;，这是从左到右，指向的字符，并且对应于默认值<xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref>，其设置为<xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  id: PathSeparatorStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取用于的样式<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>字符串。</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>"
  remarks: "PathSeparatorStyle 属性用于控制之间导航路径节点显示的路径分隔符的外观。 常见样式设置包括字体属性和由使用的字体的前景颜色<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>属性。</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>       如果<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>定义属性，这两个<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>和 PathSeparatorStyle 属性会被忽略。</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>"
  syntax:
    content: public System.Web.UI.WebControls.Style PathSeparatorStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> ，包含的样式设置<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件的<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>文本。</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>"
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  id: PathSeparatorTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置控件模板，以用于站点导航路径的路径分隔符。"
  remarks: "设置为 PathSeparatorTemplate<xref:System.Web.UI.ITemplate>对象，用于<xref:System.Web.UI.WebControls.Image>或其他控件，如<xref:System.Web.UI.WebControls.Label>，作为而不是导航节点之间的路径分隔符<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>字符串。</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> </xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.ITemplate>       如果 PathSeparatorTemplate 属性设置，该模板将重写这两个<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>显示的文本和任何<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>应用于它。</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>       你可以以声明方式将 PathSeparatorTemplate 属性设置为任何 Web 服务器控件，并 ASP.NET 基础结构执行必要的步骤来包装为<xref:System.Web.UI.ITemplate>。</xref:System.Web.UI.ITemplate>该 Web 服务器控件 但是，Web 服务器控件不实现<xref:System.Web.UI.ITemplate>接口; 因此，当你处理的<xref:System.Web.UI.ITemplate>属性以编程方式，你必须编写<xref:System.Web.UI.ITemplate>包装器的任何模板代码。</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 然后，PathSeparatorTemplate 属性设置为实例<xref:System.Web.UI.ITemplate>包装。</xref:System.Web.UI.ITemplate>"
  example:
  - "The following code example demonstrates how to define an <xref:System.Web.UI.WebControls.Image> as a PathSeparatorTemplate declaratively in a Web Form.  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_835_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_835_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PathSeparatorTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>对象实现的<xref:System.Web.UI.ITemplate.InstantiateIn*>方法，以呈现自定义内容的路径分隔符的导航路径。</xref:System.Web.UI.ITemplate.InstantiateIn*>"
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.Provider
  id: Provider
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: Provider
  nameWithType: SiteMapPath.Provider
  fullName: System.Web.UI.WebControls.SiteMapPath.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> Web 服务器控件与该键相关联。"
  remarks: "提供程序属性指定一个站点映射提供程序来与该控件使用一个实例。 此提供程序可能会与由标识提供程序不同<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>属性，如果设置。</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>"
  syntax:
    content: public System.Web.SiteMapProvider Provider { get; set; }
    return:
      type: System.Web.SiteMapProvider
      description: "A <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>与控件关联的实例。 如果没有提供程序显式设置，则使用默认站点地图提供商提供。"
  overload: System.Web.UI.WebControls.SiteMapPath.Provider*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The provider named by the <xref:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider*> property is not available.  \n  \n \\- or -  \n  \n There is no default provider configured for the site."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: SiteMapPath.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "写入<xref href=&quot;System.Web.UI.WebControls.CompositeControl&quot;></xref>内容写入指定<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象，以便在客户端上显示。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>接收呈现的输出。"
  overload: System.Web.UI.WebControls.SiteMapPath.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: SiteMapPath.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呈现中的节点<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>控件重写 RenderContents 方法来执行其可访问性呈现时，如果<xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A>属性未设置为<xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A> </xref:System.Web.UI.WebControls.SiteMapPath>"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>表示用于向网页写入内容的输出流。"
  overload: System.Web.UI.WebControls.SiteMapPath.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  id: RenderCurrentNodeAsLink
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示是否将站点导航节点表示当前显示的页呈现为超链接。"
  remarks: "表示当前显示的页的节点是<xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName>.</xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName> 其<xref:System.Web.SiteMapNode.Title%2A>属性指定要对当前节点中，显示的文本并将其<xref:System.Web.SiteMapNode.Url%2A>属性用来创建一个超链接。</xref:System.Web.SiteMapNode.Url%2A> </xref:System.Web.SiteMapNode.Title%2A> 默认情况下，为当前页后，可以防止错误窗体发布不呈现任何超链接。       此属性的值存储在视图状态。"
  example:
  - "The following code example demonstrates how to set the RenderCurrentNodeAsLink property to `true` to make the current node a hyperlink when the <xref:System.Web.UI.WebControls.SiteMapPath> control renders its content.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_212_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_212_1.aspx)]"
  syntax:
    content: public virtual bool RenderCurrentNodeAsLink { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果表示当前页的节点呈现为超链接;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  id: RootNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取根节点显示文本的样式。"
  remarks: "RootNodeStyle 属性用于控制显示的导航路径的根节点的文本的外观。 默认情况下，显示文本是在中指定<xref:System.Web.SiteMapNode.Title%2A>属性<xref:System.Web.SiteMapNode>表示页。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Title%2A> 常见样式设置包括自定义的背景色、 前景颜色、 字体属性和节点间距。       有关<xref:System.Web.UI.WebControls.SiteMapPath>节点，样式属性合并到单个样式，顺序如下︰ 1。</xref:System.Web.UI.WebControls.SiteMapPath>  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>2。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>或 RootNodeStyle，具体取决于节点类型。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>      1> [!NOTE]&1;> 除非显式设置为，如果节点字体样式设置为带删除线或上划线样式时，不显示节点的默认下划线样式`true`。       如果<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>定义属性，RootNodeStyle 属性被忽略。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>"
  example:
  - "The following code example demonstrates how to declaratively set the RootNodeStyle attributes on a <xref:System.Web.UI.WebControls.SiteMapPath> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_696_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_696_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style RootNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>包含的样式设置<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控制根节点显示文本。"
  overload: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  id: RootNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置控件模板，以用于站点导航路径的根节点。"
  remarks: "设置为 RootNodeTemplate<xref:System.Web.UI.ITemplate>对象，用于<xref:System.Web.UI.WebControls.Image>控件或其他控件，如<xref:System.Web.UI.WebControls.Label>作为根节点而不是字符串的用户界面元素。</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.ITemplate>       如果设置 RootNodeTemplate 属性，则模板替代显示的根导航节点文本和任何<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>应用于它。</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 模板还将重写<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>属性根页是否在当前显示的页面。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>       你可以以声明方式将 RootNodeTemplate 属性设置为任何 Web 服务器控件，并 ASP.NET 基础结构执行必要的步骤来包装为<xref:System.Web.UI.ITemplate>。</xref:System.Web.UI.ITemplate>该 Web 服务器控件 但是，Web 服务器控件不实现<xref:System.Web.UI.ITemplate>接口; 因此，当你处理的<xref:System.Web.UI.ITemplate>属性以编程方式，你必须编写<xref:System.Web.UI.ITemplate>包装器的任何模板代码。</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 然后，RootNodeTemplate 属性设置为实例<xref:System.Web.UI.ITemplate>包装。</xref:System.Web.UI.ITemplate>"
  example:
  - "The following code example demonstrates how to programmatically define a class that implements the <xref:System.Web.UI.ITemplate> interface to wrap an <xref:System.Web.UI.WebControls.Image> control. Then, the RootNodeTemplate property is set to an instance of the class.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_178_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_178_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate RootNodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>实现<xref:System.Web.UI.ITemplate.InstantiateIn*>方法，以呈现导航路径的根节点的自定义内容</xref:System.Web.UI.ITemplate.InstantiateIn*>的对象"
  overload: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SiteMapPath.SaveViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将视图状态更改保存<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件。"
  remarks: "视图状态是服务器控件的属性的值的累计。 这些值会自动放在服务器控件的<xref:System.Web.UI.Control.ViewState%2A>属性，它是<xref:System.Web.UI.StateBag>类</xref:System.Web.UI.StateBag>的实例</xref:System.Web.UI.Control.ViewState%2A> 保存状态的服务器控件生命周期阶段后，此属性的值随后会保存到一个字符串对象。       视图状态保存时，此字符串对象返回到客户端为存储在一个变量`Hidden`HTML 元素。 在创作自定义服务器控件时，你可以通过重写此方法并修改你的服务器控件的提高效率<xref:System.Web.UI.Control.ViewState%2A>属性。</xref:System.Web.UI.Control.ViewState%2A>"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "返回服务器控件的当前视图状态。 如果没有与控件关联的视图状态，则此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.SiteMapPath.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  id: ShowToolTips
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
  fullName: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件写入超链接的导航节点的附加超链接属性。 这取决于客户端支持，当鼠标悬停于具有额外的属性设置，超链接将显示工具提示。"
  remarks: "最常见情况的情形是`Title`HTML 特性存在 HTML`A Href`超链接。 例如，4.0 及更高版本的 Microsoft Internet Explorer 和 Netscape 6.0 和更高版本实现`Title`为悬停的工具提示，同时 Opera 3.0 和更高版本实现的属性`Title`属性为工具提示和 Opera 的工具栏区域中的标题。 并非所有客户端为其他的超链接属性显示工具提示。       此属性的值存储在视图状态。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to declaratively set the ShowToolTips property to `false` in a Web Forms page.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_861_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_861_1.aspx)]"
  syntax:
    content: public virtual bool ShowToolTips { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应为超链接的导航节点，则编写替换文字否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.SiteMapPath.ShowToolTips*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  id: SiteMapProvider
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的名称<xref href=&quot;System.Web.SiteMapProvider&quot;></xref>用于呈现站点导航控件。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>控件使用<xref:System.Web.SiteMapProvider>作为其呈现站点地图数据源。</xref:System.Web.SiteMapProvider> </xref:System.Web.UI.WebControls.SiteMapPath> 如果 SiteMapProvider 属性未设置，<xref:System.Web.UI.WebControls.SiteMapPath>控件使用由<xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>属性，即<xref:System.Web.SiteMapProvider>为站点配置层次结构，通常的<xref:System.Web.XmlSiteMapProvider>。</xref:System.Web.XmlSiteMapProvider>中定义</xref:System.Web.SiteMapProvider>的默认</xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>标识提供程序</xref:System.Web.UI.WebControls.SiteMapPath> 设置 SiteMapProvider 属性将指示<xref:System.Web.UI.WebControls.SiteMapPath>控件呈现为提供程序定义的站点地图数据。</xref:System.Web.UI.WebControls.SiteMapPath>       <xref:System.Web.UI.WebControls.SiteMapPath>控件的工作方式直接与<xref:System.Web.SiteMapProvider>及其<xref:System.Web.SiteMapNode>要显示站点映射信息的对象。</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapProvider> </xref:System.Web.UI.WebControls.SiteMapPath> 其他控件，如<xref:System.Web.UI.WebControls.Menu>和<xref:System.Web.UI.WebControls.TreeView>，需要提供的数据抽象<xref:System.Web.UI.WebControls.SiteMapDataSource>类中，以显示相同的站点导航信息。</xref:System.Web.UI.WebControls.SiteMapDataSource> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.Menu>       此属性的值存储在视图状态。       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public virtual string SiteMapProvider { get; set; }
    return:
      type: System.String
      description: "名称<xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> ，它定义的导航结构<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>以显示。 中包含所有可用提供程序&lt;xref:System.Web.SiteMap.Providers%2A?displayProperty=fullName&gt;集合，并可以枚举并通过名称使用检索<xref:System.Web.SiteMapProviderCollection.Item*>属性。</xref:System.Web.SiteMapProviderCollection.Item*>"
  overload: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  id: SkipLinkText
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
  fullName: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，用于呈现屏幕阅读器跳过该控件的内容的替换文字。"
  remarks: "SkipLinkText 是属性，可设置为使网页更多或更少的屏幕阅读器的用户可访问。 包含在多个页，如显示站点地图数据的控件重复的内容的网站可以提供一种机制，允许用户的屏幕读取器，以便不读出跳过重复的内容。       <xref:System.Web.UI.WebControls.SiteMapPath>控件提供 SkipLinkText 属性屏幕读取器可以跳过整个控件的方法。</xref:System.Web.UI.WebControls.SiteMapPath>  如果设置 SkipLinkText 属性，则将呈现不可见的图像的替换文字，向用户提供的选项以跳转到内容的末尾。 屏幕读取器读取的替换文字，但映像不会干扰页的可视化流。 默认情况下，这使得屏幕阅读器跳过该控件情况下，该属性设置为&quot;跳过导航链接&quot;。 如果你想要禁用此行为，此属性设置为<xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName>       此属性的值存储在视图状态。       此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  syntax:
    content: public virtual string SkipLinkText { get; set; }
    return:
      type: System.String
      description: "一个字符串， <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>控件呈现为不可见的图像的替换文字作为对屏幕阅读器的提示。 默认值为&quot;跳过导航链接&quot;。"
  overload: System.Web.UI.WebControls.SiteMapPath.SkipLinkText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SiteMapPath.TrackViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "曲目更改到<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>控件的视图状态。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapPath()
  nameWithType: SiteMapPath.SiteMapPath()
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapPath()
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateChildControls()
  nameWithType: SiteMapPath.CreateChildControls()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateChildControls()
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateControlHierarchy()
  nameWithType: SiteMapPath.CreateControlHierarchy()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy()
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: DataBind()
  nameWithType: SiteMapPath.DataBind()
  fullName: System.Web.UI.WebControls.SiteMapPath.DataBind()
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: InitializeItem(SiteMapNodeItem)
  nameWithType: SiteMapPath.InitializeItem(SiteMapNodeItem)
  fullName: System.Web.UI.WebControls.SiteMapPath.InitializeItem(SiteMapNodeItem)
- uid: System.Web.UI.WebControls.SiteMapNodeItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItem
  nameWithType: SiteMapNodeItem
  fullName: System.Web.UI.WebControls.SiteMapNodeItem
- uid: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ItemCreated
  nameWithType: SiteMapPath.ItemCreated
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemCreated
- uid: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItemEventHandler
  nameWithType: SiteMapNodeItemEventHandler
  fullName: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
- uid: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ItemDataBound
  nameWithType: SiteMapPath.ItemDataBound
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SiteMapPath.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SiteMapPath.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnDataBinding(EventArgs)
  nameWithType: SiteMapPath.OnDataBinding(EventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemCreated(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
- uid: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItemEventArgs
  nameWithType: SiteMapNodeItemEventArgs
  fullName: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemDataBound(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
  fullName: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
  fullName: System.Web.UI.WebControls.SiteMapPath.PathDirection
- uid: System.Web.UI.WebControls.PathDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PathDirection
  nameWithType: PathDirection
  fullName: System.Web.UI.WebControls.PathDirection
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.Provider
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Provider
  nameWithType: SiteMapPath.Provider
  fullName: System.Web.UI.WebControls.SiteMapPath.Provider
- uid: System.Web.SiteMapProvider
  parent: System.Web
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapProvider
  fullName: System.Web.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: SiteMapPath.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: SiteMapPath.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SaveViewState()
  nameWithType: SiteMapPath.SaveViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.SaveViewState()
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
  fullName: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
  fullName: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: TrackViewState()
  nameWithType: SiteMapPath.TrackViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.TrackViewState()
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapPath
  nameWithType: SiteMapPath.SiteMapPath
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateChildControls
  nameWithType: SiteMapPath.CreateChildControls
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateControlHierarchy
  nameWithType: SiteMapPath.CreateControlHierarchy
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: DataBind
  nameWithType: SiteMapPath.DataBind
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: InitializeItem
  nameWithType: SiteMapPath.InitializeItem
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: LoadViewState
  nameWithType: SiteMapPath.LoadViewState
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnDataBinding
  nameWithType: SiteMapPath.OnDataBinding
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemCreated
  nameWithType: SiteMapPath.OnItemCreated
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemDataBound
  nameWithType: SiteMapPath.OnItemDataBound
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.Provider*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Provider
  nameWithType: SiteMapPath.Provider
- uid: System.Web.UI.WebControls.SiteMapPath.Render*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Render
  nameWithType: SiteMapPath.Render
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderContents
  nameWithType: SiteMapPath.RenderContents
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SaveViewState
  nameWithType: SiteMapPath.SaveViewState
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: TrackViewState
  nameWithType: SiteMapPath.TrackViewState
