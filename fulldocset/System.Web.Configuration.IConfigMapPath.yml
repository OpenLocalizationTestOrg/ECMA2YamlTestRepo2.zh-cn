### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.IConfigMapPath
  id: IConfigMapPath
  children:
  - System.Web.Configuration.IConfigMapPath.GetAppPathForPath(System.String,System.String)
  - System.Web.Configuration.IConfigMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)
  - System.Web.Configuration.IConfigMapPath.GetMachineConfigFilename
  - System.Web.Configuration.IConfigMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)
  - System.Web.Configuration.IConfigMapPath.GetRootWebConfigFilename
  - System.Web.Configuration.IConfigMapPath.MapPath(System.String,System.String)
  - System.Web.Configuration.IConfigMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)
  langs:
  - csharp
  name: IConfigMapPath
  nameWithType: IConfigMapPath
  fullName: System.Web.Configuration.IConfigMapPath
  type: Interface
  summary: "提供对配置文件之间的映射访问虚拟和物理路径。"
  remarks: "IConfigMapPath 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public interface IConfigMapPath
  implements: []
  platform:
  - net462
- uid: System.Web.Configuration.IConfigMapPath.GetAppPathForPath(System.String,System.String)
  id: GetAppPathForPath(System.String,System.String)
  parent: System.Web.Configuration.IConfigMapPath
  langs:
  - csharp
  name: GetAppPathForPath(String,String)
  nameWithType: IConfigMapPath.GetAppPathForPath(String,String)
  fullName: System.Web.Configuration.IConfigMapPath.GetAppPathForPath(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取与特定站点关联的虚拟目录名称。"
  remarks: "GetAppPathForPath 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string GetAppPathForPath (string siteID, string path);
    parameters:
    - id: siteID
      type: System.String
      description: "站点的唯一标识符。"
    - id: path
      type: System.String
      description: "与站点相关联的 URL。"
    return:
      type: System.String
      description: "<code> siteID </code>必须是唯一的。 没有两个站点共享相同的 id。 <code> siteID </code>区分具有相同名称的站点。"
  overload: System.Web.Configuration.IConfigMapPath.GetAppPathForPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.IConfigMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)
  id: GetDefaultSiteNameAndID(System.String@,System.String@)
  parent: System.Web.Configuration.IConfigMapPath
  langs:
  - csharp
  name: GetDefaultSiteNameAndID(String,String)
  nameWithType: IConfigMapPath.GetDefaultSiteNameAndID(String,String)
  fullName: System.Web.Configuration.IConfigMapPath.GetDefaultSiteNameAndID(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "填充默认站点名称和站点 id。"
  remarks: "GetDefaultSiteNameAndID 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetDefaultSiteNameAndID (out string siteName, out string siteID);
    parameters:
    - id: siteName
      type: System.String
      description: "默认站点名称。"
    - id: siteID
      type: System.String
      description: "站点的唯一标识符。"
  overload: System.Web.Configuration.IConfigMapPath.GetDefaultSiteNameAndID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.IConfigMapPath.GetMachineConfigFilename
  id: GetMachineConfigFilename
  parent: System.Web.Configuration.IConfigMapPath
  langs:
  - csharp
  name: GetMachineConfigFilename()
  nameWithType: IConfigMapPath.GetMachineConfigFilename()
  fullName: System.Web.Configuration.IConfigMapPath.GetMachineConfigFilename()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取计算机配置文件名称。"
  remarks: "GetMachineConfigFilename 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string GetMachineConfigFilename ();
    parameters: []
    return:
      type: System.String
      description: "计算机配置文件的名称。"
  overload: System.Web.Configuration.IConfigMapPath.GetMachineConfigFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.IConfigMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)
  id: GetPathConfigFilename(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Configuration.IConfigMapPath
  langs:
  - csharp
  name: GetPathConfigFilename(String,String,String,String)
  nameWithType: IConfigMapPath.GetPathConfigFilename(String,String,String,String)
  fullName: System.Web.Configuration.IConfigMapPath.GetPathConfigFilename(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "将填充的目录和基于站点 ID 和站点路径上的配置文件名称。"
  remarks: "GetPathConfigFilename 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetPathConfigFilename (string siteID, string path, out string directory, out string baseName);
    parameters:
    - id: siteID
      type: System.String
      description: "站点的唯一标识符。"
    - id: path
      type: System.String
      description: "与站点相关联的 URL。"
    - id: directory
      type: System.String
      description: "配置路径的物理目录。"
    - id: baseName
      type: System.String
      description: "配置文件的名称。"
  overload: System.Web.Configuration.IConfigMapPath.GetPathConfigFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.IConfigMapPath.GetRootWebConfigFilename
  id: GetRootWebConfigFilename
  parent: System.Web.Configuration.IConfigMapPath
  langs:
  - csharp
  name: GetRootWebConfigFilename()
  nameWithType: IConfigMapPath.GetRootWebConfigFilename()
  fullName: System.Web.Configuration.IConfigMapPath.GetRootWebConfigFilename()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取 Web 根处的配置文件的名称。"
  remarks: "GetRootWebConfigFilename 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string GetRootWebConfigFilename ();
    parameters: []
    return:
      type: System.String
      description: "在 Web 根目录的配置文件的名称。"
  overload: System.Web.Configuration.IConfigMapPath.GetRootWebConfigFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.IConfigMapPath.MapPath(System.String,System.String)
  id: MapPath(System.String,System.String)
  parent: System.Web.Configuration.IConfigMapPath
  langs:
  - csharp
  name: MapPath(String,String)
  nameWithType: IConfigMapPath.MapPath(String,String)
  fullName: System.Web.Configuration.IConfigMapPath.MapPath(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "获取基于站点 ID 和与站点关联的 URL 的物理目录路径。"
  remarks: "MapPath 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string MapPath (string siteID, string path);
    parameters:
    - id: siteID
      type: System.String
      description: "站点的唯一标识符。"
    - id: path
      type: System.String
      description: "与站点相关联的 URL。"
    return:
      type: System.String
      description: "物理目录路径中。"
  overload: System.Web.Configuration.IConfigMapPath.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.IConfigMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)
  id: ResolveSiteArgument(System.String,System.String@,System.String@)
  parent: System.Web.Configuration.IConfigMapPath
  langs:
  - csharp
  name: ResolveSiteArgument(String,String,String)
  nameWithType: IConfigMapPath.ResolveSiteArgument(String,String,String)
  fullName: System.Web.Configuration.IConfigMapPath.ResolveSiteArgument(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "将填充的站点名称和基于站点的自变量值的站点 ID。"
  remarks: "如果`siteArgument`是`null`、 等同于默认站点名称，或等同于默认站点标识符，`siteName`和`siteID`使用默认站点值填充。       ResolveSiteArgument 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void ResolveSiteArgument (string siteArgument, out string siteName, out string siteID);
    parameters:
    - id: siteArgument
      type: System.String
      description: "站点名称或站点标识符。"
    - id: siteName
      type: System.String
      description: "默认站点名称。"
    - id: siteID
      type: System.String
      description: "站点的唯一标识符。"
  overload: System.Web.Configuration.IConfigMapPath.ResolveSiteArgument*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Configuration.IConfigMapPath.GetAppPathForPath(System.String,System.String)
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetAppPathForPath(String,String)
  nameWithType: IConfigMapPath.GetAppPathForPath(String,String)
  fullName: System.Web.Configuration.IConfigMapPath.GetAppPathForPath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.IConfigMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetDefaultSiteNameAndID(String,String)
  nameWithType: IConfigMapPath.GetDefaultSiteNameAndID(String,String)
  fullName: System.Web.Configuration.IConfigMapPath.GetDefaultSiteNameAndID(String,String)
- uid: System.Web.Configuration.IConfigMapPath.GetMachineConfigFilename
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetMachineConfigFilename()
  nameWithType: IConfigMapPath.GetMachineConfigFilename()
  fullName: System.Web.Configuration.IConfigMapPath.GetMachineConfigFilename()
- uid: System.Web.Configuration.IConfigMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetPathConfigFilename(String,String,String,String)
  nameWithType: IConfigMapPath.GetPathConfigFilename(String,String,String,String)
  fullName: System.Web.Configuration.IConfigMapPath.GetPathConfigFilename(String,String,String,String)
- uid: System.Web.Configuration.IConfigMapPath.GetRootWebConfigFilename
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetRootWebConfigFilename()
  nameWithType: IConfigMapPath.GetRootWebConfigFilename()
  fullName: System.Web.Configuration.IConfigMapPath.GetRootWebConfigFilename()
- uid: System.Web.Configuration.IConfigMapPath.MapPath(System.String,System.String)
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: MapPath(String,String)
  nameWithType: IConfigMapPath.MapPath(String,String)
  fullName: System.Web.Configuration.IConfigMapPath.MapPath(String,String)
- uid: System.Web.Configuration.IConfigMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: ResolveSiteArgument(String,String,String)
  nameWithType: IConfigMapPath.ResolveSiteArgument(String,String,String)
  fullName: System.Web.Configuration.IConfigMapPath.ResolveSiteArgument(String,String,String)
- uid: System.Web.Configuration.IConfigMapPath.GetAppPathForPath*
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetAppPathForPath
  nameWithType: IConfigMapPath.GetAppPathForPath
- uid: System.Web.Configuration.IConfigMapPath.GetDefaultSiteNameAndID*
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetDefaultSiteNameAndID
  nameWithType: IConfigMapPath.GetDefaultSiteNameAndID
- uid: System.Web.Configuration.IConfigMapPath.GetMachineConfigFilename*
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetMachineConfigFilename
  nameWithType: IConfigMapPath.GetMachineConfigFilename
- uid: System.Web.Configuration.IConfigMapPath.GetPathConfigFilename*
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetPathConfigFilename
  nameWithType: IConfigMapPath.GetPathConfigFilename
- uid: System.Web.Configuration.IConfigMapPath.GetRootWebConfigFilename*
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: GetRootWebConfigFilename
  nameWithType: IConfigMapPath.GetRootWebConfigFilename
- uid: System.Web.Configuration.IConfigMapPath.MapPath*
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: MapPath
  nameWithType: IConfigMapPath.MapPath
- uid: System.Web.Configuration.IConfigMapPath.ResolveSiteArgument*
  parent: System.Web.Configuration.IConfigMapPath
  isExternal: false
  name: ResolveSiteArgument
  nameWithType: IConfigMapPath.ResolveSiteArgument
