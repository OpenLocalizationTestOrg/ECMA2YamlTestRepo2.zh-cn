### YamlMime:ManagedReference
items:
- uid: System.Data.PropertyCollection
  id: PropertyCollection
  children:
  - System.Data.PropertyCollection.#ctor
  - System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.PropertyCollection.Clone
  langs:
  - csharp
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.Data.PropertyCollection
  type: Class
  summary: "表示可以添加到的属性的集合<xref href=&quot;System.Data.DataColumn&quot;> </xref>， <xref href=&quot;System.Data.DataSet&quot;> </xref>，或<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
  remarks: "可以通过访问 PropertyCollection`ExtendedProperties`属性<xref:System.Data.DataColumn>， <xref:System.Data.DataSet>，或<xref:System.Data.DataTable>类。</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataColumn>       添加到自定义属性<xref:System.Data.DataColumn>， <xref:System.Data.DataSet>，或<xref:System.Data.DataTable>对象到 PropertyCollection。</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataColumn> 例如，你可能想要存储到另一个对象的更高版本比较的对象的创建时间。"
  example:
  - "The following example creates a timestamp value for a <xref:System.Data.DataTable> and adds it to the PropertyCollection.  \n  \n [!code-vb[Classic WebData PropertyCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.propertyco_1.vb)]\n [!code-cs[Classic WebData PropertyCollection Example#1](~/add/codesnippet/csharp/t-system.data.propertyco_1.cs)]"
  syntax:
    content: 'public class PropertyCollection : System.Collections.Hashtable'
  inheritance:
  - System.Object
  - System.Collections.Hashtable
  implements: []
  inheritedMembers:
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.comparer
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Hashtable.hcp
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.OnDeserialization(System.Object)
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Hashtable.Values
  platform:
  - net462
- uid: System.Data.PropertyCollection.#ctor
  id: '#ctor'
  parent: System.Data.PropertyCollection
  langs:
  - csharp
  name: PropertyCollection()
  nameWithType: PropertyCollection.PropertyCollection()
  fullName: System.Data.PropertyCollection.PropertyCollection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "初始化的新实例<xref href=&quot;System.Data.PropertyCollection&quot;></xref>类。"
  remarks: "将所有字段都初始化为其默认值。"
  syntax:
    content: public PropertyCollection ();
    parameters: []
  overload: System.Data.PropertyCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Data.PropertyCollection
  langs:
  - csharp
  name: PropertyCollection(SerializationInfo,StreamingContext)
  nameWithType: PropertyCollection.PropertyCollection(SerializationInfo,StreamingContext)
  fullName: System.Data.PropertyCollection.PropertyCollection(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "初始化的新实例<xref href=&quot;System.Data.PropertyCollection&quot;></xref>类。"
  syntax:
    content: protected PropertyCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "要序列化或反序列化对象所需的数据。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "源和给定的序列化流的目标。"
  overload: System.Data.PropertyCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.PropertyCollection.Clone
  id: Clone
  parent: System.Data.PropertyCollection
  langs:
  - csharp
  name: Clone()
  nameWithType: PropertyCollection.Clone()
  fullName: System.Data.PropertyCollection.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "创建的浅表复制<xref href=&quot;System.Data.PropertyCollection&quot;></xref>对象。"
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "返回<xref:System.Object>的浅表复制<xref href=&quot;System.Data.PropertyCollection&quot;></xref>对象。</xref:System.Object>"
  overload: System.Data.PropertyCollection.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.Hashtable
  isExternal: false
  name: System.Collections.Hashtable
- uid: System.Data.PropertyCollection.#ctor
  parent: System.Data.PropertyCollection
  isExternal: false
  name: PropertyCollection()
  nameWithType: PropertyCollection.PropertyCollection()
  fullName: System.Data.PropertyCollection.PropertyCollection()
- uid: System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.PropertyCollection
  isExternal: false
  name: PropertyCollection(SerializationInfo,StreamingContext)
  nameWithType: PropertyCollection.PropertyCollection(SerializationInfo,StreamingContext)
  fullName: System.Data.PropertyCollection.PropertyCollection(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.PropertyCollection.Clone
  parent: System.Data.PropertyCollection
  isExternal: false
  name: Clone()
  nameWithType: PropertyCollection.Clone()
  fullName: System.Data.PropertyCollection.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.PropertyCollection.#ctor*
  parent: System.Data.PropertyCollection
  isExternal: false
  name: PropertyCollection
  nameWithType: PropertyCollection.PropertyCollection
- uid: System.Data.PropertyCollection.Clone*
  parent: System.Data.PropertyCollection
  isExternal: false
  name: Clone
  nameWithType: PropertyCollection.Clone
