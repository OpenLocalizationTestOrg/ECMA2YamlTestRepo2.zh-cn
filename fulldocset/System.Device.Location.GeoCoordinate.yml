### YamlMime:ManagedReference
items:
- uid: System.Device.Location.GeoCoordinate
  id: GeoCoordinate
  children:
  - System.Device.Location.GeoCoordinate.#ctor
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.Altitude
  - System.Device.Location.GeoCoordinate.Course
  - System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.Equals(System.Object)
  - System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.GetHashCode
  - System.Device.Location.GeoCoordinate.HorizontalAccuracy
  - System.Device.Location.GeoCoordinate.IsUnknown
  - System.Device.Location.GeoCoordinate.Latitude
  - System.Device.Location.GeoCoordinate.Longitude
  - System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.Speed
  - System.Device.Location.GeoCoordinate.ToString
  - System.Device.Location.GeoCoordinate.Unknown
  - System.Device.Location.GeoCoordinate.VerticalAccuracy
  langs:
  - csharp
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: System.Device.Location.GeoCoordinate
  type: Class
  summary: "表示由纬度和经度的地理位置坐标。 可能还包括高度、 准确性、 速度和课程信息。"
  syntax:
    content: 'public class GeoCoordinate : IEquatable<System.Device.Location.GeoCoordinate>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Device.Location.GeoCoordinate>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor
  id: '#ctor'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate()
  nameWithType: GeoCoordinate.GeoCoordinate()
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate()
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "初始化的新实例<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> ，其设置没有数据字段。"
  remarks: "所有数据字段都设置为<xref:System.Double.NaN>。</xref:System.Double.NaN>  <xref:System.Device.Location.GeoCoordinate>等效于<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown></xref:System.Device.Location.GeoCoordinate>新实例       此构造函数应该用于序列化。"
  syntax:
    content: public GeoCoordinate ();
    parameters: []
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "初始化的新实例<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>从纬度和经度数据的类。"
  remarks: "纬度和经度值必须对应于地球上的实际位置。"
  syntax:
    content: public GeoCoordinate (double latitude, double longitude);
    parameters:
    - id: latitude
      type: System.Double
      description: "位置的纬度。 范围可以是从-90.0 到 90.0。"
    - id: longitude
      type: System.Double
      description: "位置的经度。 范围可以是 180.0 到 180.0。"
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "纬度或经度超出了范围。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "初始化的新实例<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>从、 纬度和高度的数据的类。"
  remarks: "纬度和经度值必须对应于地球上的实际位置。"
  syntax:
    content: public GeoCoordinate (double latitude, double longitude, double altitude);
    parameters:
    - id: latitude
      type: System.Double
      description: "纬度。 范围可以是从-90.0 到 90.0。"
    - id: longitude
      type: System.Double
      description: "经度。 可能范围 180.0 到 180.0"
    - id: altitude
      type: System.Double
      description: "以米为单位的高度。 可以是负数，0，正、 或<xref:System.Double>，如果未知。</xref:System.Double>"
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>latitude</code><code>longitude</code>，或<code>altitude</code>超出范围。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "初始化的新实例<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>从纬度、 经度、 高度、 水平准确性、 垂直准确性、 速度和过程的类。"
  syntax:
    content: public GeoCoordinate (double latitude, double longitude, double altitude, double horizontalAccuracy, double verticalAccuracy, double speed, double course);
    parameters:
    - id: latitude
      type: System.Double
      description: "位置的纬度。 范围可以是从-90.0 到 90.0。"
    - id: longitude
      type: System.Double
      description: "位置的经度。 范围可以是 180.0 到 180.0。"
    - id: altitude
      type: System.Double
      description: "以米为单位的高度。 可以是负数，0，正、 或<xref:System.Double>，如果未知。</xref:System.Double>"
    - id: horizontalAccuracy
      type: System.Double
      description: "纬度和经度坐标，以米为单位的准确性。 必须大于或等于 0。 如果值为 0 提供给此构造函数，<xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*>属性将设置为<xref:System.Double.NaN>.</xref:System.Double.NaN> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*>"
    - id: verticalAccuracy
      type: System.Double
      description: "高度，以米为单位的准确性。 必须大于或等于 0。 如果值为 0 提供给此构造函数，<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*>属性将设置为<xref:System.Double.NaN>.</xref:System.Double.NaN> </xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*>"
    - id: speed
      type: System.Double
      description: "以每秒的计量单位速度。 可以是负数，0，正、 或<xref:System.Double>，如果未知。</xref:System.Double>  负的速度可以指示反向移动。"
    - id: course
      type: System.Double
      description: "旅行，而不是方向的方向。 此参数的单位为度相对于 true 北部。 必须介于 0 到 360.0，或者是<xref:System.Double>.</xref:System.Double>"
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>latitude</code>, <code>longitude</code>, <code>horizontalAccuracy</code>, <code>verticalAccuracy,</code> or <code>course</code> is out of range."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Altitude
  id: Altitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
  fullName: System.Device.Location.GeoCoordinate.Altitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取的高度<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>，以米为单位。"
  remarks: "相对于 sea 级别提供高度。"
  syntax:
    content: public double Altitude { get; set; }
    return:
      type: System.Double
      description: "高度，以米为单位。"
  overload: System.Device.Location.GeoCoordinate.Altitude*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Course
  id: Course
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Course
  nameWithType: GeoCoordinate.Course
  fullName: System.Device.Location.GeoCoordinate.Course
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取或设置标题以度为单位，相对于 true 北部。"
  remarks: "有效范围还包括到 360.0，值介于 0.0 和`Double.NaN`如果标题未定义。"
  example:
  - "The following example prints the Course and <xref:System.Device.Location.GeoCoordinate.Speed%2A> properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-cs[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/csharp/courseandspeed/courseandspeed.cs#2)]\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/visualbasic/courseandspeed/courseandspeed.vb#2)]"
  syntax:
    content: public double Course { get; set; }
    return:
      type: System.Double
      description: "以度为单位，相对于真北标题。"
  overload: System.Device.Location.GeoCoordinate.Course*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "过程设置的有效范围。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  id: Equals(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Equals(GeoCoordinate)
  nameWithType: GeoCoordinate.Equals(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.Equals(GeoCoordinate)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "确定如果<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>对象等效于基于参数的参数，仅纬度和经度。"
  remarks: "等效<xref:System.Device.Location.GeoCoordinate>对象具有相同<xref:System.Device.Location.GeoCoordinate.Latitude%2A>和<xref:System.Device.Location.GeoCoordinate.Longitude%2A>属性。</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> <xref:System.Device.Location.GeoCoordinate.Altitude%2A>， <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>，和<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>属性未用于确定相等性。</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public bool Equals (System.Device.Location.GeoCoordinate other);
    parameters:
    - id: other
      type: System.Device.Location.GeoCoordinate
      description: "<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>要与调用对象进行比较的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>对象是否相等; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Device.Location.GeoCoordinate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: GeoCoordinate.Equals(Object)
  fullName: System.Device.Location.GeoCoordinate.Equals(Object)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "确定指定<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>等同于当前<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>，仅根据纬度和经度。"
  remarks: "等效<xref:System.Device.Location.GeoCoordinate>对象具有相同<xref:System.Device.Location.GeoCoordinate.Latitude%2A>和<xref:System.Device.Location.GeoCoordinate.Longitude%2A>属性。</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> <xref:System.Device.Location.GeoCoordinate.Altitude%2A>， <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>，和<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>属性未用于确定相等性。</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比较的对象<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>到。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>对象是否相等; 否则为<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>。"
  overload: System.Device.Location.GeoCoordinate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  id: GetDistanceTo(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GetDistanceTo(GeoCoordinate)
  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.GetDistanceTo(GeoCoordinate)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "返回此指定的纬度和经度坐标之间的距离<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>和另一个指定<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>。"
  remarks: "Haversine 公式用于计算的距离。  Haversine 公式地球的弯曲的帐户，但假定球状地球而不是椭圆体。 为远距离 Haversine 公式引入了小于 0.1%错误。       高度不用于计算的距离。"
  syntax:
    content: public double GetDistanceTo (System.Device.Location.GeoCoordinate other);
    parameters:
    - id: other
      type: System.Device.Location.GeoCoordinate
      description: "<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>位置来计算之间的距离。"
    return:
      type: System.Double
      description: "之间的两个坐标，以米为单位的距离。"
  overload: System.Device.Location.GeoCoordinate.GetDistanceTo*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.GetHashCode
  id: GetHashCode
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: GeoCoordinate.GetHashCode()
  fullName: System.Device.Location.GeoCoordinate.GetHashCode()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "用作哈希函数<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>。"
  remarks: "<xref:System.Device.Location.GeoCoordinate>是等效的对象具有相同的哈希代码。</xref:System.Device.Location.GeoCoordinate> 等效<xref:System.Device.Location.GeoCoordinate>对象具有相同<xref:System.Device.Location.GeoCoordinate.Latitude%2A>和<xref:System.Device.Location.GeoCoordinate.Longitude%2A>属性。</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> <xref:System.Device.Location.GeoCoordinate.Altitude%2A>， <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>，和<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>属性未用于确定相等性。</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前的哈希代码<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>。"
  overload: System.Device.Location.GeoCoordinate.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  id: HorizontalAccuracy
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
  fullName: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取或设置的纬度和经度给定的准确性<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>，以米为单位。"
  remarks: "准确性，可以被视为的纬度和经度数据的确定性的半径。  作为为中心的 radius 的纬度和经度坐标的精度格式正确的圆形区域包含的实际位置。"
  syntax:
    content: public double HorizontalAccuracy { get; set; }
    return:
      type: System.Double
      description: "纬度和经度，以米为单位的准确性。"
  overload: System.Device.Location.GeoCoordinate.HorizontalAccuracy*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "HorizontalAccuracy 设置的有效范围。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.IsUnknown
  id: IsUnknown
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
  fullName: System.Device.Location.GeoCoordinate.IsUnknown
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>不包含纬度或经度数据。"
  remarks: "<xref:System.Device.Location.GeoCoordinate>不包含纬度或经度数据等于<xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinate>"
  example:
  - "The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is <xref:System.Device.Location.GeoCoordinate.Unknown> before printing out its latitude and longitude.  \n  \n [!code-cs[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/csharp/getlocationdatasynchandleunknown/getlocationdatasynchandleunknown.cs#1)]\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSyncHandleUnknown/GetLocationDataSyncHandleUnknown.vb#1)]"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>不包含纬度或经度数据; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Device.Location.GeoCoordinate.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Latitude
  id: Latitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
  fullName: System.Device.Location.GeoCoordinate.Latitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取或设置的纬度<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>。"
  remarks: "纬度的范围是从-90.0 到 90.0。 北或从赤道扩展向南，纬度的单位为度。 正值表示赤道以北，负值表示赤道以南。"
  example:
  - "The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]"
  syntax:
    content: public double Latitude { get; set; }
    return:
      type: System.Double
      description: "位置的纬度。"
  overload: System.Device.Location.GeoCoordinate.Latitude*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "纬度设置的有效范围。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Longitude
  id: Longitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
  fullName: System.Device.Location.GeoCoordinate.Longitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取或设置的经度<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>。"
  remarks: "经度的范围是从-180.0 到 180.0。 子午线向东或，经度的单位为度。 值为子午线，以西，正值子午线以东为负。"
  example:
  - "The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]"
  syntax:
    content: public double Longitude { get; set; }
    return:
      type: System.Double
      description: "经度。"
  overload: System.Device.Location.GeoCoordinate.Longitude*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "经度设置的有效范围。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  id: op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: op_Equality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  type: Operator
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "确定两个<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>对象引用相同的位置。"
  remarks: "等效<xref:System.Device.Location.GeoCoordinate>对象具有相同<xref:System.Device.Location.GeoCoordinate.Latitude%2A>和<xref:System.Device.Location.GeoCoordinate.Longitude%2A>属性。</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> <xref:System.Device.Location.GeoCoordinate.Altitude%2A>， <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>，和<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>属性未用于确定相等性。</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public static bool op_Equality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);
    parameters:
    - id: left
      type: System.Device.Location.GeoCoordinate
      description: "第一个<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>进行比较。"
    - id: right
      type: System.Device.Location.GeoCoordinate
      description: "第二个<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>对象确定等效; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Device.Location.GeoCoordinate.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  id: op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: op_Inequality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  type: Operator
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "确定两个<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>对象对应于不同的位置。"
  remarks: "等效<xref:System.Device.Location.GeoCoordinate>对象具有相同<xref:System.Device.Location.GeoCoordinate.Latitude%2A>和<xref:System.Device.Location.GeoCoordinate.Longitude%2A>属性。</xref:System.Device.Location.GeoCoordinate.Longitude%2A> </xref:System.Device.Location.GeoCoordinate.Latitude%2A> </xref:System.Device.Location.GeoCoordinate> <xref:System.Device.Location.GeoCoordinate.Altitude%2A>， <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>，和<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>属性未用于确定相等性。</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A> </xref:System.Device.Location.GeoCoordinate.Altitude%2A>"
  syntax:
    content: public static bool op_Inequality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);
    parameters:
    - id: left
      type: System.Device.Location.GeoCoordinate
      description: "第一个<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>进行比较。"
    - id: right
      type: System.Device.Location.GeoCoordinate
      description: "第二个<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>进行比较。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>对象确定不同; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Device.Location.GeoCoordinate.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Speed
  id: Speed
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Speed
  nameWithType: GeoCoordinate.Speed
  fullName: System.Device.Location.GeoCoordinate.Speed
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取或设置以米为单位每秒的速度。"
  remarks: ''
  example:
  - "The following example prints the <xref:System.Device.Location.GeoCoordinate.Course%2A> and Speed properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-cs[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/csharp/courseandspeed/courseandspeed.cs#2)]\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/visualbasic/courseandspeed/courseandspeed.vb#2)]"
  syntax:
    content: public double Speed { get; set; }
    return:
      type: System.Double
      description: "以米为单位每秒速度。 速度必须为大于或等于零或<xref:System.Double>.</xref:System.Double>"
  overload: System.Device.Location.GeoCoordinate.Speed*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: System.ArgumentOutOfRangeException
    description: "速度设置的有效范围。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.ToString
  id: ToString
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: ToString()
  nameWithType: GeoCoordinate.ToString()
  fullName: System.Device.Location.GeoCoordinate.ToString()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "返回一个字符串，包含的纬度和经度。"
  remarks: "此方法返回的字符串表示仅供调试使用。 此方法不返回任何特定于区域设置格式的纬度和经度。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "包含的纬度和经度，用逗号分隔的字符串。"
  overload: System.Device.Location.GeoCoordinate.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Unknown
  id: Unknown
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Unknown
  nameWithType: GeoCoordinate.Unknown
  fullName: System.Device.Location.GeoCoordinate.Unknown
  type: Field
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "表示<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>具有未知的对象纬度和经度字段。"
  remarks: "<xref:System.Device.Location.GeoCoordinate.IsUnknown%2A>属性可以用于验证是否<xref:System.Device.Location.GeoCoordinate>不包含任何数据。</xref:System.Device.Location.GeoCoordinate> </xref:System.Device.Location.GeoCoordinate.IsUnknown%2A>"
  example:
  - "The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is Unknown before printingout its latitude and longitude.  \n  \n [!code-cs[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/csharp/getlocationdatasynchandleunknown/getlocationdatasynchandleunknown.cs#1)]\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSyncHandleUnknown/GetLocationDataSyncHandleUnknown.vb#1)]"
  syntax:
    content: public static readonly System.Device.Location.GeoCoordinate Unknown;
    return:
      type: System.Device.Location.GeoCoordinate
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy
  id: VerticalAccuracy
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
  fullName: System.Device.Location.GeoCoordinate.VerticalAccuracy
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "获取或设置给定高度的准确性<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>，以米为单位。"
  syntax:
    content: public double VerticalAccuracy { get; set; }
    return:
      type: System.Double
      description: "高度，以米为单位的准确性。"
  overload: System.Device.Location.GeoCoordinate.VerticalAccuracy*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "VerticalAccuracy 设置的有效范围。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Device.Location.GeoCoordinate.#ctor
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate()
  nameWithType: GeoCoordinate.GeoCoordinate()
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate()
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double)
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
- uid: System.Device.Location.GeoCoordinate.Altitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
  fullName: System.Device.Location.GeoCoordinate.Altitude
- uid: System.Device.Location.GeoCoordinate.Course
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Course
  nameWithType: GeoCoordinate.Course
  fullName: System.Device.Location.GeoCoordinate.Course
- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals(GeoCoordinate)
  nameWithType: GeoCoordinate.Equals(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.Equals(GeoCoordinate)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Device.Location.GeoCoordinate
  parent: System.Device.Location
  isExternal: false
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: System.Device.Location.GeoCoordinate
- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals(Object)
  nameWithType: GeoCoordinate.Equals(Object)
  fullName: System.Device.Location.GeoCoordinate.Equals(Object)
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetDistanceTo(GeoCoordinate)
  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.GetDistanceTo(GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.GetHashCode
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetHashCode()
  nameWithType: GeoCoordinate.GetHashCode()
  fullName: System.Device.Location.GeoCoordinate.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
  fullName: System.Device.Location.GeoCoordinate.HorizontalAccuracy
- uid: System.Device.Location.GeoCoordinate.IsUnknown
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
  fullName: System.Device.Location.GeoCoordinate.IsUnknown
- uid: System.Device.Location.GeoCoordinate.Latitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
  fullName: System.Device.Location.GeoCoordinate.Latitude
- uid: System.Device.Location.GeoCoordinate.Longitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
  fullName: System.Device.Location.GeoCoordinate.Longitude
- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Equality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Inequality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.Speed
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Speed
  nameWithType: GeoCoordinate.Speed
  fullName: System.Device.Location.GeoCoordinate.Speed
- uid: System.Device.Location.GeoCoordinate.ToString
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: ToString()
  nameWithType: GeoCoordinate.ToString()
  fullName: System.Device.Location.GeoCoordinate.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Device.Location.GeoCoordinate.Unknown
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Unknown
  nameWithType: GeoCoordinate.Unknown
  fullName: System.Device.Location.GeoCoordinate.Unknown
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
  fullName: System.Device.Location.GeoCoordinate.VerticalAccuracy
- uid: System.Device.Location.GeoCoordinate.#ctor*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate
  nameWithType: GeoCoordinate.GeoCoordinate
- uid: System.Device.Location.GeoCoordinate.Altitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
- uid: System.Device.Location.GeoCoordinate.Course*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Course
  nameWithType: GeoCoordinate.Course
- uid: System.Device.Location.GeoCoordinate.Equals*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals
  nameWithType: GeoCoordinate.Equals
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetDistanceTo
  nameWithType: GeoCoordinate.GetDistanceTo
- uid: System.Device.Location.GeoCoordinate.GetHashCode*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetHashCode
  nameWithType: GeoCoordinate.GetHashCode
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
- uid: System.Device.Location.GeoCoordinate.IsUnknown*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
- uid: System.Device.Location.GeoCoordinate.Latitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
- uid: System.Device.Location.GeoCoordinate.Longitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
- uid: System.Device.Location.GeoCoordinate.op_Equality*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Equality
  nameWithType: GeoCoordinate.op_Equality
- uid: System.Device.Location.GeoCoordinate.op_Inequality*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Inequality
  nameWithType: GeoCoordinate.op_Inequality
- uid: System.Device.Location.GeoCoordinate.Speed*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Speed
  nameWithType: GeoCoordinate.Speed
- uid: System.Device.Location.GeoCoordinate.ToString*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: ToString
  nameWithType: GeoCoordinate.ToString
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
