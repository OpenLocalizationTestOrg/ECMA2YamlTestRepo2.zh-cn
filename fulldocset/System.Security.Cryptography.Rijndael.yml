### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Rijndael
  id: Rijndael
  children:
  - System.Security.Cryptography.Rijndael.#ctor
  - System.Security.Cryptography.Rijndael.Create
  - System.Security.Cryptography.Rijndael.Create(System.String)
  langs:
  - csharp
  name: Rijndael
  nameWithType: Rijndael
  fullName: System.Security.Cryptography.Rijndael
  type: Class
  summary: "表示 Rijndael 对称加密算法的所有实现必须从中都继承的基类。"
  remarks: "此算法支持密钥长度为 128、 192 或 256 位;默认为 256 位。 此算法支持 128、 192 或 256 位; 块大小默认为 128 位 (<xref:System.Security.Cryptography.Aes>-兼容)。</xref:System.Security.Cryptography.Aes>       Rijndael 密钥包装类是前置任务的<xref:System.Security.Cryptography.Aes>算法。</xref:System.Security.Cryptography.Aes> 应使用<xref:System.Security.Cryptography.Aes>而不是 rijndael 密钥包装算法。</xref:System.Security.Cryptography.Aes> 有关详细信息，请参阅文章[Rijndael 之间的差异和 AES](http://go.microsoft.com/fwlink/?LinkId=200932) .NET 安全博客中。"
  example:
  - "The following code example uses the Rijndael class to encrypt and then decrypt data.  \n  \n [!code-cs[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/csharp/t-system.security.crypto_35_1.cs)]\n [!code-vb[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/visualbasic/t-system.security.crypto_35_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Rijndael : System.Security.Cryptography.SymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.Key
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.Rijndael.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Rijndael
  langs:
  - csharp
  name: Rijndael()
  nameWithType: Rijndael.Rijndael()
  fullName: System.Security.Cryptography.Rijndael.Rijndael()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Rijndael&quot;> </xref>。"
  remarks: "无法创建抽象类的实例。 应用程序代码将创建派生类的新实例。       此方法初始化的受保护的字段<xref:System.Security.Cryptography.SymmetricAlgorithm>下表中列出的默认值。</xref:System.Security.Cryptography.SymmetricAlgorithm>      |字段 |默认值 |  |-----------|-------------------|  |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|&256; |  |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|&128; |  |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|128|</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue></xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue></xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>"
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.  \n  \n [!code-cs[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_25_1.cs)]\n [!code-vb[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_25_1.vb)]"
  syntax:
    content: protected Rijndael ();
    parameters: []
  overload: System.Security.Cryptography.Rijndael.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rijndael.Create
  id: Create
  parent: System.Security.Cryptography.Rijndael
  langs:
  - csharp
  name: Create()
  nameWithType: Rijndael.Create()
  fullName: System.Security.Cryptography.Rijndael.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "创建一个加密对象来执行<xref href=&quot;System.Security.Cryptography.Rijndael&quot;></xref>算法。"
  remarks: "默认实现的<xref:System.Security.Cryptography.Rijndael>是<xref:System.Security.Cryptography.RijndaelManaged>.</xref:System.Security.Cryptography.RijndaelManaged> </xref:System.Security.Cryptography.Rijndael>"
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.  \n  \n [!code-cs[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_121_1.cs)]\n [!code-vb[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_121_1.vb)]"
  syntax:
    content: public static System.Security.Cryptography.Rijndael Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.Rijndael
      description: "一个加密对象。"
  overload: System.Security.Cryptography.Rijndael.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "该算法在使用了美国联邦信息处理标准 (FIPS) 模式启用，但 FIPS 不兼容。"
  platform:
  - net462
- uid: System.Security.Cryptography.Rijndael.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.Rijndael
  langs:
  - csharp
  name: Create(String)
  nameWithType: Rijndael.Create(String)
  fullName: System.Security.Cryptography.Rijndael.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "创建一个加密对象来执行的指定的实现的<xref href=&quot;System.Security.Cryptography.Rijndael&quot;></xref>算法。"
  remarks: "可接受的值`algName`参数`Rijndael`和`System.Security.Cryptography.RijndaelManaged`。"
  syntax:
    content: public static System.Security.Cryptography.Rijndael Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "特定实现的名称<xref href=&quot;System.Security.Cryptography.Rijndael&quot;></xref>创建。"
    return:
      type: System.Security.Cryptography.Rijndael
      description: "一个加密对象。"
  overload: System.Security.Cryptography.Rijndael.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "所描述的算法<code> algName </code>参数在使用了美国联邦信息处理标准 (FIPS) 模式启用，但与 fips 不兼容。"
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.Rijndael.#ctor
  parent: System.Security.Cryptography.Rijndael
  isExternal: false
  name: Rijndael()
  nameWithType: Rijndael.Rijndael()
  fullName: System.Security.Cryptography.Rijndael.Rijndael()
- uid: System.Security.Cryptography.Rijndael.Create
  parent: System.Security.Cryptography.Rijndael
  isExternal: false
  name: Create()
  nameWithType: Rijndael.Create()
  fullName: System.Security.Cryptography.Rijndael.Create()
- uid: System.Security.Cryptography.Rijndael
  parent: System.Security.Cryptography
  isExternal: false
  name: Rijndael
  nameWithType: Rijndael
  fullName: System.Security.Cryptography.Rijndael
- uid: System.Security.Cryptography.Rijndael.Create(System.String)
  parent: System.Security.Cryptography.Rijndael
  isExternal: false
  name: Create(String)
  nameWithType: Rijndael.Create(String)
  fullName: System.Security.Cryptography.Rijndael.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Rijndael.#ctor*
  parent: System.Security.Cryptography.Rijndael
  isExternal: false
  name: Rijndael
  nameWithType: Rijndael.Rijndael
- uid: System.Security.Cryptography.Rijndael.Create*
  parent: System.Security.Cryptography.Rijndael
  isExternal: false
  name: Create
  nameWithType: Rijndael.Create
