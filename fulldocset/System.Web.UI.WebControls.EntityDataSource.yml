### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EntityDataSource
  id: EntityDataSource
  children:
  - System.Web.UI.WebControls.EntityDataSource.#ctor
  - System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  - System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  - System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  - System.Web.UI.WebControls.EntityDataSource.AutoPage
  - System.Web.UI.WebControls.EntityDataSource.AutoSort
  - System.Web.UI.WebControls.EntityDataSource.CommandParameters
  - System.Web.UI.WebControls.EntityDataSource.CommandText
  - System.Web.UI.WebControls.EntityDataSource.ConnectionString
  - System.Web.UI.WebControls.EntityDataSource.ContextCreated
  - System.Web.UI.WebControls.EntityDataSource.ContextCreating
  - System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  - System.Web.UI.WebControls.EntityDataSource.ContextType
  - System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  - System.Web.UI.WebControls.EntityDataSource.CreateView
  - System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  - System.Web.UI.WebControls.EntityDataSource.Deleted
  - System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  - System.Web.UI.WebControls.EntityDataSource.Deleting
  - System.Web.UI.WebControls.EntityDataSource.EnableDelete
  - System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  - System.Web.UI.WebControls.EntityDataSource.EnableInsert
  - System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  - System.Web.UI.WebControls.EntityDataSource.EntitySetName
  - System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  - System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  - System.Web.UI.WebControls.EntityDataSource.GetViewNames
  - System.Web.UI.WebControls.EntityDataSource.GroupBy
  - System.Web.UI.WebControls.EntityDataSource.Include
  - System.Web.UI.WebControls.EntityDataSource.Inserted
  - System.Web.UI.WebControls.EntityDataSource.Inserting
  - System.Web.UI.WebControls.EntityDataSource.InsertParameters
  - System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  - System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.EntityDataSource.OrderBy
  - System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  - System.Web.UI.WebControls.EntityDataSource.QueryCreated
  - System.Web.UI.WebControls.EntityDataSource.SaveControlState
  - System.Web.UI.WebControls.EntityDataSource.Select
  - System.Web.UI.WebControls.EntityDataSource.Selected
  - System.Web.UI.WebControls.EntityDataSource.Selecting
  - System.Web.UI.WebControls.EntityDataSource.SelectParameters
  - System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  - System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  - System.Web.UI.WebControls.EntityDataSource.TrackViewState
  - System.Web.UI.WebControls.EntityDataSource.Updated
  - System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  - System.Web.UI.WebControls.EntityDataSource.Updating
  - System.Web.UI.WebControls.EntityDataSource.Where
  - System.Web.UI.WebControls.EntityDataSource.WhereParameters
  langs:
  - csharp
  name: EntityDataSource
  nameWithType: EntityDataSource
  fullName: System.Web.UI.WebControls.EntityDataSource
  type: Class
  summary: "表示实体数据模型 (EDM) 向 ASP.NET 应用程序中的数据绑定控件。"
  remarks: "本主题中:-[简介](#introduction)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 介绍你可以使用 EntityDataSource 控件的数据绑定控件以及从 EDM 中检索数据，若要显示，请编辑，并通过使用很少或没有代码在网页上的数据进行排序。       有关详细信息，请参阅[EntityDataSource Web 服务器控件概述](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:EntityDataSource       AutoGenerateOrderByClause=&quot;True|False&quot;       AutoGenerateWhereClause=&quot;True|False&quot;       AutoPage=&quot;True|False&quot;       AutoSort=&quot;True|False&quot;       CommandText=&quot;string&quot;       ConnectionString=&quot;string&quot;       ContextType=&quot;typed ObjectContext&quot;       ContextTypeName=&quot;string&quot;       DefaultContainerName=&quot;string&quot;       EnableDelete=&quot;True|False&quot;       EnableInsert=&quot;True|False&quot;       EnableUpdate=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       EntitySetName=&quot;string&quot;       EntityTypeFilter=&quot;string&quot;       GroupBy=&quot;string&quot;       Include=&quot;string&quot;       OnContextCreated=&quot;ContextCreated event handler&quot;       OnContextCreating=&quot;ContextCreating event handler&quot;       OnContextDisposing=&quot;ContextDisposing event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleted=&quot;Deleted event handler&quot;       OnDeleting=&quot;Deleting event handler&quot;       OnException=&quot;IDynamicDataSource.Exception event handler&quot;       OnInserted=&quot;Inserted event handler&quot;       OnInserting=&quot;Inserting event handler&quot;       OnSelected=&quot;Selected event handler&quot;       OnSelecting=&quot;Selecting event handler&quot;       OnUpdated=&quot;Updated event handler&quot;       OnUpdating=&quot;Updating event handler&quot;       OrderBy=&quot;string&quot;       runat=&quot;server&quot;       Select=&quot;string&quot;       StoreOriginalValuesInViewState=&quot;True|False&quot;       Where=&quot;string&quot;   >           <CommandParameters />           <DeleteParameters />           <GroupByParameters />           <InsertParameters />           <OrderByParameters />           <SelectParameters />           <UpdateParameters />           <WhereParameters />   </asp:EntityDataSource>   ```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Selecting")]

      [System.ComponentModel.DefaultProperty("EntitySetName")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.EntityDataSource), "EntityDataSource.ico")]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class EntityDataSource : System.Web.UI.DataSourceControl, System.Web.DynamicData.IDynamicDataSource, System.Web.UI.WebControls.IQueryableDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.DataSourceControl
  implements:
  - System.Web.DynamicData.IDynamicDataSource
  - System.Web.UI.WebControls.IQueryableDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityDataSource()
  nameWithType: EntityDataSource.EntityDataSource()
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource()
  type: Constructor
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>类。"
  syntax:
    content: public EntityDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  id: '#ctor(System.Data.EntityClient.EntityConnection)'
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityDataSource(EntityConnection)
  nameWithType: EntityDataSource.EntityDataSource(EntityConnection)
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource(EntityConnection)
  type: Constructor
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>类提供的连接。"
  syntax:
    content: public EntityDataSource (System.Data.EntityClient.EntityConnection connection);
    parameters:
    - id: connection
      type: System.Data.EntityClient.EntityConnection
      description: "<xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>到实体数据模型 (EDM)。"
  overload: System.Web.UI.WebControls.EntityDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  id: AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件动态创建 ORDER BY 子句中的值为基础的<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters*>集合。</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters*>"
  remarks: "时的 AutoGenerateOrderByClause 属性<xref:System.Web.UI.WebControls.EntityDataSource>控件设置为`true`，该控件自动生成 ORDER BY 子句中的参数从<xref:System.Web.UI.WebControls.ParameterCollection>分配给<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> 这消除了需要显式将分配到 ORDER BY 子句<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>       如果 AutoGenerateOrderByClause 属性设置为`true`，你应显式将值赋给<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>"
  example:
  - "The following example automatically generates the ORDER BY clause and uses the value of the `OrderByDropDownList` to set the value of the parameter.  \n  \n```  \n<asp:DropDownList AutoPostBack=\"true\" ID=\"OrderByDropDownList\" runat=\"server\">  \n    <asp:ListItem Value=\"TotalDue\"></asp:ListItem>  \n    <asp:ListItem Value=\"OrderDate\"></asp:ListItem>  \n</asp:DropDownList>  \n  \n<asp:EntityDataSource ID=\"EntityDataSourceWithAutoGenOrderBy\" runat=\"server\"   \nConnectionString=\"name=AdventureWorksEntities\"   \nDefaultContainerName=\"AdventureWorksEntities\"   \nEntitySetName=\"SalesOrderHeaders\"   \nSelect=\"it.SalesOrderID, it.TotalDue, it.OrderDate\"  \nAutoGenerateOrderByClause=\"True\">  \n<OrderByParameters>  \n    <asp:ControlParameter  \n    ControlID=\"OrderByDropDownList\"/>  \n</OrderByParameters>  \n</asp:EntityDataSource>  \n```  \n  \n The following example automatically generates the ORDER BY clause and uses the `DefaultValue` attribute of the `Parameter` element to set the value of the parameter.  \n  \n```  \n<asp:EntityDataSource ID=\"EntityDataSourceWithAutoGenOrderBy\" runat=\"server\"   \nConnectionString=\"name=AdventureWorksEntities\"   \nDefaultContainerName=\"AdventureWorksEntities\"   \nEntitySetName=\"SalesOrderHeaders\"   \nSelect=\"it.SalesOrderID, it.TotalDue, it.OrderDate\"  \nAutoGenerateOrderByClause=\"True\">  \n<OrderByParameters>  \n    <asp:Parameter  \n    DefaultValue=\"TotalDue\"/>  \n</OrderByParameters>  \n</asp:EntityDataSource>  \n```"
  syntax:
    content: public bool AutoGenerateOrderByClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件创建的 ORDER BY 子句; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当 AutoGenerateOrderByClause 属性设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy*>属性不为 null。</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  id: AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件动态创建 WHERE 子句中定义的值为基础的<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters*>集合。</xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters*>"
  remarks: "若要通过使实体类型属性等于表达式筛选查询结果，你可以使用 AutoGenerateWhereClause 属性。 时的 AutoGenerateWhereClause 属性<xref:System.Web.UI.WebControls.EntityDataSource>控件设置为`true`，该控件自动生成`WHERE`子句中的参数从<xref:System.Web.UI.WebControls.ParameterCollection>的<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> <xref:System.Web.UI.WebControls.Parameter.Name%2A>每个参数的属性必须与匹配查询结果中包含的实体类型属性名。</xref:System.Web.UI.WebControls.Parameter.Name%2A> 如果 AutoGenerateWhereClause 属性设置为`true`，您应显式分配`WHERE`子句<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>      ## 示例在下面的示例 AutoGenerateWhereClause 属性设置为`true`。 因此，<xref:System.Web.UI.WebControls.Parameter.Name%2A>的属性必须与匹配查询结果中包含的实体类型属性名。</xref:System.Web.UI.WebControls.Parameter.Name%2A> 查询选择 SalesOrderHeader 实体类型的 SalesOrderID 和 TotalDue 属性。 自动生成`WHERE`子句将通过比较 TotalDue 值与在 TotalDueList 列表框控件中选择的值来筛选查询结果。      ```   <asp:EntityDataSource ID=&quot;SalesOrderHeaderWithAutoParam&quot; runat=&quot;server&quot;       ConnectionString=&quot;name=AdventureWorksEntities&quot;       DefaultContainerName=&quot;AdventureWorksEntities&quot;       EntitySetName=&quot;SalesOrderHeaders&quot;       Select=&quot;it.SalesOrderID, it.TotalDue&quot;       AutoGenerateWhereClause=&quot;True&quot;>       <WhereParameters>           <asp:ControlParameter ControlID=&quot;TotalDueList&quot;               Name=&quot;TotalDue&quot; PropertyName=&quot;SelectedValue&quot; DbType=&quot;Decimal&quot; />       </WhereParameters>   </asp:EntityDataSource>   ```# # 示例︰ 默认情况下，AutoGenerateWhereClause 属性设置为`false`。 这意味着，我们必须提供`WHERE`子句。 在下面的示例中，`WHERE`子句是`Where=&quot;it.TotalDue < @totalDueParam&quot;`和 totalDueParam 是参数名称。      ```   <asp:EntityDataSource ID=&quot;SalesOrderHeaderWithOutAutoParam&quot; runat=&quot;server&quot;       ConnectionString=&quot;name=AdventureWorksEntities&quot;       DefaultContainerName=&quot;AdventureWorksEntities&quot;       EntitySetName=&quot;SalesOrderHeaders&quot;       Where=&quot;it.TotalDue < @totalDueParam&quot;        Select=&quot;it.SalesOrderID, it.TotalDue&quot;>       <WhereParameters>           <asp:ControlParameter ControlID=&quot;TotalDueList&quot;               Name=&quot;totalDueParam&quot; PropertyName=&quot;SelectedValue&quot; DbType=&quot;Decimal&quot; />       </WhereParameters>   </asp:EntityDataSource>   ```"
  syntax:
    content: public bool AutoGenerateWhereClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件创建 WHERE 子句; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当 AutoGenerateWhereClause 属性设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref:System.Web.UI.WebControls.EntityDataSource.Where*>属性不为 null。</xref:System.Web.UI.WebControls.EntityDataSource.Where*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage
  id: AutoPage
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoPage
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件支持在运行时各部分的数据进行导航。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>控件支持自动分页查询返回的数据。</xref:System.Web.UI.WebControls.EntityDataSource> 自动创建数据页属性是布尔值属性，该值指示是否为绑定到数据控件的查询所返回的数据启用了分页。 当此属性设置为`true`、<xref:System.Web.UI.WebControls.EntityDataSource>控件添加到相应的查询生成器方法<xref:System.Data.Objects.ObjectQuery%601>根据的信息提供给<xref:System.Web.UI.WebControls.EntityDataSourceView>由数据绑定控件。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Web.UI.WebControls.EntityDataSource>       自动创建数据页属性的值确定是否<xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceView>支持数据源的控件是`true`或`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>       当使用启用的分页定义投影时，必须定义对结果进行排序依据的属性。 这意味着，当你设置<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>属性来定义投影和具有设置为自动创建的数据页`true`，还必须设置<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>属性来定义的顺序或设置<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>属性`true`和 ORDER BY 将参数添加到<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>集合。</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> </xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>"
  syntax:
    content: public bool AutoPage { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户可以通过数据; 页，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort
  id: AutoSort
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoSort
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件支持对数据进行排序在运行时。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>控件支持自动对查询返回的数据进行排序。</xref:System.Web.UI.WebControls.EntityDataSource> 自动排序属性<xref:System.Web.UI.WebControls.EntityDataSource>控件是布尔值属性，该值指示是否为绑定到数据控件的查询所返回的数据启用排序。</xref:System.Web.UI.WebControls.EntityDataSource> 当此属性设置为`true`、<xref:System.Web.UI.WebControls.EntityDataSource>控件添加到相应的查询生成器方法<xref:System.Data.Objects.ObjectQuery%601>根据的信息提供给<xref:System.Web.UI.WebControls.EntityDataSourceView>由数据绑定控件。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Web.UI.WebControls.EntityDataSource>       自动排序属性的值确定是否<xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>和<xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceView>支持数据源的控件是`true`或`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>"
  syntax:
    content: public bool AutoSort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户可以将数据; 进行排序，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  id: CommandParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取查询的参数集合。"
  remarks: "使用的 CommandParameters 属性访问<xref:System.Web.UI.WebControls.ParameterCollection>到使用指定的显式 Entity SQL 查询传递的参数<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> </xref:System.Web.UI.WebControls.ParameterCollection>"
  example:
  - "The following example supplies Entity SQL command text that returns a collection of Product objects.  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT value p FROM Products AS p  \n        WHERE p.ProductID  \n        BETWEEN @OrderIdMin AND @OrderIdMax\"  \n    ConnectionString=\"name=AdventureWorksEntities\"   \n    DefaultContainerName=\"AdventureWorksEntities\" >  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIdMin\"   \n            ControlID=\"ProductIdMin\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIdMax\"   \n            ControlID=\"ProductIdMax\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The following example returns a projected series of columns:  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  \n         FROM Products AS p   \n         WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax\"   \n         ContextTypeName=\"AdventureWorksModel. AdventureWorksEntities\">  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIDMin\"   \n               ControlID=\"ProductIDMinTextBox\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIDMax\"   \n               ControlID=\"ProductIDMaxTextBox\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection CommandParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>包含传递给查询命令的参数。"
  overload: System.Web.UI.WebControls.EntityDataSource.CommandParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText
  id: CommandText
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CommandText
  nameWithType: EntityDataSource.CommandText
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandText
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置定义查询的 Entity SQL 命令。"
  remarks: "CommandText 属性<xref:System.Web.UI.WebControls.EntityDataSource>控制，你可以指定使用的自定义的 Entity SQL 表达式的查询。</xref:System.Web.UI.WebControls.EntityDataSource> 与 SELECT 语句中，类似 CommandText 创建不是可更新的原始数据的投影。       如果分配 CommandText 属性，将禁用更新、 插入和删除功能。 在此情况下，方法<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>， <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>，和<xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>将相关<xref:System.Web.UI.WebControls.EntityDataSourceView>控件都返回`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>       当设置 CommandText 属性时，将引发异常时<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法由数据绑定到某个控件调用<xref:System.Web.UI.WebControls.EntityDataSource>如果控制的值<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>， <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>，或<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>设置为`true`。</xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>       如果 CommandText 设置为返回的属性投影的查询 (例如，&quot;`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`&quot;)、 一个<xref:System.Data.Common.DbDataRecord>将返回。</xref:System.Data.Common.DbDataRecord>"
  example:
  - "The following example uses the supplied Entity SQL command to returns a collection of Product objects.  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT value p FROM Products AS p  \n        WHERE p.ProductID  \n        BETWEEN @OrderIdMin AND @OrderIdMax\"  \n    ConnectionString=\"name=AdventureWorksEntities\"   \n    DefaultContainerName=\"AdventureWorksEntities\" >  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIdMin\"   \n            ControlID=\"ProductIdMin\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIdMax\"   \n            ControlID=\"ProductIdMax\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The following example returns a projected series of columns:  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  \n          FROM Products AS p   \n          WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax\"   \n          ContextTypeName=\"AdventureWorksModel. AdventureWorksEntities\">  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIDMin\"   \n                ControlID=\"ProductIDMinTextBox\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIDMax\"   \n                ControlID=\"ProductIDMaxTextBox\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public string CommandText { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>是 Entity SQL 查询的值。"
  overload: System.Web.UI.WebControls.EntityDataSource.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  id: ConnectionString
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于执行查询的连接字符串。"
  remarks: "ConnectionString 属性<xref:System.Web.UI.WebControls.EntityDataSource>可以从存储在应用程序配置文件的元素的命名 EDM 连接字符串初始化控件。</xref:System.Web.UI.WebControls.EntityDataSource> EDM 由使用实体数据模型向导创建的是在应用程序配置文件中创建命名的 EDM 连接。 在应用程序配置文件中找到命名的 EDM 连接字符串，则连接时，显示为 EntityDataSource 设计器中配置数据源向导的一个选项。 有关详细信息，请参阅[数据源配置向导 （EntityDataSource 控件）](http://msdn.microsoft.com/en-us/263976a5-2406-47c0-8919-c6af6e76d78e)。       如果<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>未指定属性，这两个的<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>并且 ConnectionString 属性必须设置为控件创建<xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> </xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "查询的连接字符串。"
  overload: System.Web.UI.WebControls.EntityDataSource.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  id: ContextCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextCreated
  nameWithType: EntityDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>已完成创建<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>用于使用实体数据的对象。"
  remarks: "处理此事件以访问<xref:System.Data.Objects.ObjectContext>，它由<xref:System.Web.UI.WebControls.EntityDataSource>控件来执行查询和跟踪更改。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 可存储此上下文对象，并将其用于<xref:System.Web.UI.WebControls.EntityDataSource>.</xref:System.Web.UI.WebControls.EntityDataSource>之外的后续操作 <xref:System.Data.Objects.ObjectContext>从获取<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>ContextCreated 事件返回。</xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> </xref:System.Data.Objects.ObjectContext> 有关详细信息，请参阅[对象上下文生命周期管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)。 有关对象上下文的详细信息，请参阅[标识解析、 状态管理和更改跟踪](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)。       ContextCreated 事件允许您将分配<xref:System.Data.Objects.ObjectContext>给变量<xref:System.Web.UI.WebControls.EntityDataSource>.</xref:System.Web.UI.WebControls.EntityDataSource>之外的后续操作以便创建</xref:System.Data.Objects.ObjectContext> <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>属性包含已在中创建的上下文<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>事件。</xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> </xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName> 如果用户不会分配期间上下文<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>上下文实例中包含的事件，<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>是通过创建<xref:System.Web.UI.WebControls.EntityDataSource>基于<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=fullName>， <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=fullName>，或<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=fullName>属性。</xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> ContextCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  id: ContextCreating
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextCreating
  nameWithType: EntityDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "发生时<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>创建<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>用于使用实体数据的对象。"
  remarks: "处理 ContextCreating 事件，以提供你自己<xref:System.Data.Objects.ObjectContext>而不是让新<xref:System.Data.Objects.ObjectContext>创建。</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext> 如果不处理 ContextCreating 事件或处理程序未提供<xref:System.Data.Objects.ObjectContext>、<xref:System.Web.UI.WebControls.EntityDataSource>将创建一个根据其配置。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 当<xref:System.Data.Objects.ObjectContext>提供给 ContextCreating 事件中，同一个实例分配给`Context`的连续事件的事件对象的属性。</xref:System.Data.Objects.ObjectContext> 有关详细信息，请参阅[对象上下文生命周期管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)。 有关对象上下文的详细信息，请参阅[标识解析、 状态管理和更改跟踪](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)。"
  example:
  - "The following example shows how to create an <xref:System.Data.Objects.ObjectContext> variable of the <xref:System.Web.UI.Page> object and assign it to the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> object.  \n  \n```c#  \npublic partial class _Default : System.Web.UI.Page  \n    {  \n        AdventureWorksModel.AdventureWorksEntities objCtx =  \n            new AdventureWorksModel.AdventureWorksEntities();  \n  \n        protected void EntityDataSource2_ContextCreating(object sender,   \n            EntityDataSourceContextCreatingEventArgs e)  \n        {  \n            e.Context = objCtx;  \n        }  \n    }  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> ContextCreating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  id: ContextDisposing
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextDisposing
  nameWithType: EntityDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "之前发生<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>的释放。"
  remarks: "处理此事件以防止<xref:System.Data.Objects.ObjectContext>由<xref:System.Web.UI.WebControls.EntityDataSource>从正在释放的控件。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 执行此操作时要使用单个<xref:System.Data.Objects.ObjectContext>与多个控件或的实例在页中的实例<xref:System.Web.UI.WebControls.EntityDataSource>控件。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 若要防止<xref:System.Data.Objects.ObjectContext>从正在释放，设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Data.Objects.ObjectContext> 有关详细信息，请参阅[对象上下文生命周期管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)。 有关对象上下文的详细信息，请参阅[标识解析、 状态管理和更改跟踪](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)。"
  example:
  - "To keep an existing <xref:System.Data.Objects.ObjectContext> instance member for future reference cancel the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> event as shown by the following code.  \n  \n```c#  \nprotected void EntityDataSource2_ContextDisposing(object sender,   \n    EntityDataSourceContextDisposingEventArgs e)  \n{  \n    e.Cancel = true;  \n}  \n  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> ContextDisposing;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType
  id: ContextType
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextType
  nameWithType: EntityDataSource.ContextType
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextType
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置类型化<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>由<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  remarks: "<xref:System.Data.Objects.ObjectContext>由<xref:System.Web.UI.WebControls.EntityDataSource>控件从 ContextType 属性进行访问。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 有关详细信息，请参阅[对象上下文生命周期管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)。"
  syntax:
    content: public Type ContextType { get; set; }
    return:
      type: System.Type
      description: "一个对象，派生自<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  id: ContextTypeName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置类型化的完全限定的名称<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref> ，它由<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  remarks: "ContextTypeName 属性<xref:System.Web.UI.WebControls.EntityDataSource>控件是一个字符串，指定的类型化的完全限定的类型名称<xref:System.Data.Objects.ObjectContext>，它由<xref:System.Web.UI.WebControls.EntityDataSource>控件。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource> 如果属性不是 ContextTypeName 指定，<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>并且<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>属性必须设置为要创建<xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext>的控件</xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A></xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>"
  syntax:
    content: public string ContextTypeName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，它是类型的完全限定的名称。</xref:System.String>"
  overload: System.Web.UI.WebControls.EntityDataSource.ContextTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView
  id: CreateView
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CreateView()
  nameWithType: EntityDataSource.CreateView()
  fullName: System.Web.UI.WebControls.EntityDataSource.CreateView()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "创建的新实例<xref href=&quot;System.Web.UI.WebControls.EntityDataSourceView&quot;></xref>与此控件相关联。"
  remarks: "若要提供自定义视图，可以重写此方法在派生类中。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.EntityDataSourceView CreateView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.EntityDataSourceView
      description: "一个充当数据绑定控件的接口的对象。"
  overload: System.Web.UI.WebControls.EntityDataSource.CreateView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  id: DefaultContainerName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
  fullName: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置默认容器名称。"
  remarks: "如果<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>未指定属性，DefaultContainerName 并且<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>属性必须设置为控件创建<xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> </xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>"
  syntax:
    content: public string DefaultContainerName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，它是默认容器名称。</xref:System.String>"
  overload: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Deleted
  nameWithType: EntityDataSource.Deleted
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleted
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "已从数据源中删除对象后发生。"
  remarks: "已删除事件引发之后<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>方法只需成功在调用了<xref:System.Data.Objects.ObjectContext>删除对象。</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.SaveChanges%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象用于访问已删除的对象。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 此对象处于<xref:System.Data.EntityState>状态。</xref:System.Data.EntityState>       如果删除某个对象时，将出现错误，将引发已删除事件，<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>对象设置为返回<xref:System.Exception>，和<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>属性设置为`null`。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> </xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 如果处理已删除事件处理程序中的异常，设置<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 这可防止再次引发异常。 当指定的值`false`为<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>属性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引发异常。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Deleted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取在删除操作过程中使用的参数的集合。"
  remarks: "对于面向 ASP.NET 4 或更早版本的 web 应用程序，属性值存储在视图状态，并自动维护之间回发。 对于 web 应用程序面向 ASP.NET 4.5，该属性值不存储视图状态中，必须设置为每个 HTTP 请求的值。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "在删除操作期间使用的参数。"
  overload: System.Web.UI.WebControls.EntityDataSource.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Deleting
  nameWithType: EntityDataSource.Deleting
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "从数据源中删除一个对象之前发生。"
  remarks: "删除事件之前，将引发<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>方法调用<xref:System.Data.Objects.ObjectContext>删除对象。</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.SaveChanges%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象用于访问要删除的对象。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 此对象的属性不能完全设置。 必须设置仅需标识对象的属性。       若要停止在被删除的对象，设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如果删除引发的对象，删除事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象设置为返回<xref:System.Exception>。</xref:System.Exception></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>准备时出错       在处理中删除事件处理程序的异常时，设置<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 这可防止再次引发异常。 当指定的值`false`为<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>属性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引发异常。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Deleting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  id: EnableDelete
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否可以通过删除对象<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>如果启用了 EnableDelete 属性不能设置。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A`false`上分配给 EnableDelete 属性值<xref:System.Web.UI.WebControls.EntityDataSource>强制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>将相关属性<xref:System.Web.UI.WebControls.EntityDataSourceView>要返回对象`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource> 当 EnableDelete 属性设置为`false`，<xref:System.NotSupportedException>如果数据绑定控件调用<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A><xref:System.Web.UI.WebControls.EntityDataSourceView>.</xref:System.Web.UI.WebControls.EntityDataSourceView>方法</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>引发</xref:System.NotSupportedException>       如果不满足任何条件，可更新性并且 EnableDelete 属性设置为`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引发异常。</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了自动删除操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  id: EnableFlattening
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否要关闭包装器创建。"
  remarks: "当初始化<xref:System.Web.UI.WebControls.EntityDataSource>控件通过使用<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>属性，<xref:System.Web.UI.WebControls.EntityDataSource>将每个实体实例包装的对象中的结果在<xref:System.ComponentModel.ICustomTypeDescriptor>类型。</xref:System.ComponentModel.ICustomTypeDescriptor> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> </xref:System.Web.UI.WebControls.EntityDataSource> 有关详细信息，请参阅[平展对象 (EntityDataSource)](http://msdn.microsoft.com/en-us/08a30ef3-1132-4ac4-856c-5ed3d65eaf16)。"
  syntax:
    content: public bool EnableFlattening { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果将平展属性;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableFlattening*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  id: EnableInsert
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否可以通过添加对象<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>如果 EnableInsert 属性设置为不能设置`true`。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A`false`上分配给 EnableInsert 属性值<xref:System.Web.UI.WebControls.EntityDataSource>强制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>将相关属性<xref:System.Web.UI.WebControls.EntityDataSourceView>要返回对象`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource> 当 EnableInsert 属性设置为`false`，<xref:System.NotSupportedException>如果数据绑定控件调用<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A><xref:System.Web.UI.WebControls.EntityDataSourceView>.</xref:System.Web.UI.WebControls.EntityDataSourceView>方法</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>引发</xref:System.NotSupportedException>       如果不满足任何条件，可更新性并且 EnableInsert 属性设置为`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引发异常。</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableInsert { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了自动插入操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  id: EnableUpdate
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否可以通过修改对象<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>如果 EnableUpdate 属性设置为不能设置`true`。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A`false`值分配给 EnableUpdate 属性强制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>将相关属性<xref:System.Web.UI.WebControls.EntityDataSourceView>要返回对象`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> 当 EnableUpdate 属性设置为`false`，<xref:System.NotSupportedException>如果数据绑定控件调用<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A><xref:System.Web.UI.WebControls.EntityDataSourceView>.</xref:System.Web.UI.WebControls.EntityDataSourceView>方法</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>引发</xref:System.NotSupportedException>       将 EnableUpdate 属性设置为`true`不保证可更新性。       如果不满足任何条件，可更新性并且 EnableUpdate 属性设置为`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引发异常。</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了自动更新操作;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  id: EntitySetName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置使用的实体集的名称<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  remarks: "EntitySetName 属性<xref:System.Web.UI.WebControls.EntityDataSource>控件用于指定由控件访问的对象的类型的实体集。</xref:System.Web.UI.WebControls.EntityDataSource> EntitySetName 属性的值是由该控件的默认选择语句。 如果查询指定为 Entity SQL 表达式，用于提供给不需要的设置<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 有关详细信息，请参阅[自定义命令文本 (EntityDataSource)](http://msdn.microsoft.com/en-us/d42e90d0-1443-474e-8940-53f504d6fc91)。"
  syntax:
    content: public string EntitySetName { get; set; }
    return:
      type: System.String
      description: "实体集名称。"
  overload: System.Web.UI.WebControls.EntityDataSource.EntitySetName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  id: EntityTypeFilter
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置将查询限制为仅特定的派生类型的结果的表达式。"
  remarks: "当<xref:System.Web.UI.WebControls.EntityDataSource>控件必须返回特定的派生的类型、 EntityTypeFilter 属性还必须设置为指定此派生类型的名称。</xref:System.Web.UI.WebControls.EntityDataSource> 如果<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>属性指定的实体集，可以生成多态结果，因此 EntityTypeFilter 属性需要能够编辑数据。</xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> 这具有相同的效果与将应用<xref:System.Data.Objects.ObjectQuery%601.OfType%2A>到<xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601>方法</xref:System.Data.Objects.ObjectQuery%601.OfType%2A> 如果数据绑定是只读的然后 EntityTypeFilter 属性不是必需的。 在这种情况下，由查询返回的对象的属性将这些实体集的默认实体类型。"
  syntax:
    content: public string EntityTypeFilter { get; set; }
    return:
      type: System.String
      description: "筛选器表达式中。"
  overload: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: EntityDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.EntityDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取与数据源控件相关联的已命名的数据源视图。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>控件支持只有一个数据源视图。</xref:System.Web.UI.WebControls.EntityDataSource> 像所有的数据源视图对象一样<xref:System.Web.UI.WebControls.EntityDataSourceView>与数据源控件相关联的对象定义其功能、 执行的所有工作，必须从基础数据库中，检索数据，都执行操作，例如排序、 插入、 删除和更新。</xref:System.Web.UI.WebControls.EntityDataSourceView>"
  syntax:
    content: protected override System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "要检索的视图名称。 因为<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件仅支持一个视图，`viewName`将被忽略。"
    return:
      type: System.Web.UI.DataSourceView
      description: "<xref href=&quot;System.Web.UI.WebControls.EntityDataSourceView&quot;> </xref>关联<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.EntityDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: EntityDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.EntityDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取与关联的名称表示的视图对象的列表集合<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>控件仅支持一个视图针对其基础数据。</xref:System.Web.UI.WebControls.EntityDataSource> GetViewNames 方法返回一个此一个视图名的字符串形式的单个元素集合。"
  syntax:
    content: protected override System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>，它包含与关联的视图名称<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.EntityDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy
  id: GroupBy
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
  fullName: System.Web.UI.WebControls.EntityDataSource.GroupBy
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定如何查询结果进行分组的 Entity SQL 表达式。"
  syntax:
    content: public string GroupBy { get; set; }
    return:
      type: System.String
      description: "GROUP BY 子句中。"
  overload: System.Web.UI.WebControls.EntityDataSource.GroupBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Include
  id: Include
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Include
  nameWithType: EntityDataSource.Include
  fullName: System.Web.UI.WebControls.EntityDataSource.Include
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定要包括在查询结果中的相关的对象的表达式。"
  remarks: "包括属性<xref:System.Web.UI.WebControls.EntityDataSource>控件指定逗号分隔的定义以及专门查询的对象返回对象 thatare 的查询路径列表。</xref:System.Web.UI.WebControls.EntityDataSource> 字符串中的每个以逗号分隔值传递，而不进行修改，作为单独调用<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>通过执行[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]。</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Include%2A> 此查询是通过调整的数据源<xref:System.Web.UI.WebControls.EntityDataSource>控件。</xref:System.Web.UI.WebControls.EntityDataSource> 包括属性是应用于参数<xref:System.Data.Objects.ObjectQuery%601>执行之前。</xref:System.Data.Objects.ObjectQuery%601>       提供到包含属性的字符串使用相同的格式为字符串的字符串传递给<xref:System.Data.Objects.ObjectQuery%601.Include%2A><xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601>方法</xref:System.Data.Objects.ObjectQuery%601.Include%2A> 有关如何使用查询路径以自动加载相关的对象的示例，请参阅[如何︰ 使用查询路径形状结果](http://msdn.microsoft.com/en-us/100bf7f5-00ba-4c17-8e27-7a8a14831093)。       当包含属性用于指定查询路径时，将相关实体的属性可以仅用于只读数据绑定。 如果相关的对象未显式包括在查询路径中，属性描述符仍可用于数据绑定，但属性本身返回 null 值。 在这种情况下，必须显式加载相关的对象以显示其值。 有关详细信息，请参阅[加载相关对象](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)。"
  example:
  - "The following XML markup defines a query path that returns `SalesOrderHeader` objects related to the returned `Contact` object. With each `SalesOrderHeader`, the related `SalesOrderDetail` and `Address` objects are also returned.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `customers`:  \n  \n```  \nObjectQuery<Contact> customers =  \n      context.Contact  \n       .Where(\"it.ContactID = @ContactID\",  \n         new ObjectParameter(\"ContactID\", customerId))  \n        .Include(\"SalesOrderHeader.SalesOrderDetail\")  \n        .Include(\"SalesOrderHeader.Address\");  \n  \n```"
  syntax:
    content: public string Include { get; set; }
    return:
      type: System.String
      description: "查询路径在查询结果中返回以逗号分隔列表。"
  overload: System.Web.UI.WebControls.EntityDataSource.Include*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Inserted
  nameWithType: EntityDataSource.Inserted
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserted
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "在数据源创建一个新的对象后发生。"
  remarks: "添加的对象创建数据源中时，或出现错误的对象数据保留到数据源时，将引发插入事件。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>对象用于访问添加的对象。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>       此对象的属性包含从数据源，包括任何数据源生成的值返回的值。       如果对象持久保留到数据源时，将出现错误，将引发插入事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>对象设置为返回<xref:System.Exception>。</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 如果处理插入事件处理程序中的异常，设置<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 这可防止再次引发异常。 当指定的值`false`为<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>属性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引发异常。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Inserted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Inserting
  nameWithType: EntityDataSource.Inserting
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "一个新的对象保存到数据源之前发生。"
  remarks: "一个新的对象保留到数据源之前，将引发插入事件。 插入事件，可修改或验证所添加的对象、 添加的其他对象或取消该操作。 你可以访问该对象添加从<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 如果提供了另一个对象，用户将负责在中设置正确的实体类型<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>       若要停止从所添加的对象，设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如果创建新对象时出错，将引发插入事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象设置为返回<xref:System.Exception>。</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>       处理插入事件处理程序中的异常时，设置<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 这可防止再次引发异常。 当指定的值`false`为<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>属性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引发异常。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Inserting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取在插入操作过程中使用的参数的集合。"
  remarks: "对于面向 ASP.NET 4 或更早版本的 web 应用程序，属性值存储在视图状态，并自动维护之间回发。 对于 web 应用程序面向 ASP.NET 4.5，该属性值不存储视图状态中，必须设置为每个 HTTP 请求的值。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "在插入操作期间使用的参数。"
  overload: System.Web.UI.WebControls.EntityDataSource.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: EntityDataSource.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.EntityDataSource.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "加载中的属性的状态<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>需要保留的控件。"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>包含状态信息。</xref:System.Object>"
  overload: System.Web.UI.WebControls.EntityDataSource.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: EntityDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "将添加<xref href=&quot;System.Web.UI.Page.LoadComplete&quot;></xref>事件处理程序<xref href=&quot;System.Web.UI.Page&quot;></xref>包含控件<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.EntityDataSource.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: EntityDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "引发<xref href=&quot;System.Web.UI.Control.Unload&quot;></xref>事件。"
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件数据的对象。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.EntityDataSource.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy
  id: OrderBy
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderBy
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定如何查询结果进行排序的 Entity SQL 表达式。"
  remarks: 'OrderBy 属性<xref:System.Web.UI.WebControls.EntityDataSource>控件是一个字符串，表示实体 SQL 查询的表达式。</xref:System.Web.UI.WebControls.EntityDataSource> 此字符串而不进行修改，即传递到<xref:System.Data.Objects.ObjectQuery%601>通过执行[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]。</xref:System.Data.Objects.ObjectQuery%601> 此查询是通过调整的数据源<xref:System.Web.UI.WebControls.EntityDataSource>控件。</xref:System.Web.UI.WebControls.EntityDataSource> 提供给 OrderBy 属性的字符串使用相同的格式为字符串的字符串传递给<xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A><xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601>方法</xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> 有关如何使用对查询结果进行排序的子句的示例，请参阅[如何︰ 对数据进行排序](http://msdn.microsoft.com/en-us/c05f2506-cb9d-4ebc-822b-300042ad53e7)。'
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is equivalent to the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n  \n```"
  syntax:
    content: public string OrderBy { get; set; }
    return:
      type: System.String
      description: "ORDER BY 子句中。"
  overload: System.Web.UI.WebControls.EntityDataSource.OrderBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  id: OrderByParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取用于创建 ORDER BY 子句的参数的集合。"
  remarks: "当<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>属性<xref:System.Web.UI.WebControls.EntityDataSource>控件设置为`true`，该控件自动生成 ORDER BY 子句中的参数从<xref:System.Web.UI.WebControls.ParameterCollection>分配给 OrderByParameters 属性。</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 这消除了需要显式将分配到 ORDER BY 子句<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> 构造从 OrderByParameters 属性的 ORDER BY 子句的要求<xref:System.Web.UI.WebControls.Parameter.Name%2A>集合中参数的属性标识从查询返回的项的单个属性。</xref:System.Web.UI.WebControls.Parameter.Name%2A>"
  example:
  - "The following example automatically generates the ORDER BY clause and uses the value of the `orderByDropDownList` to set the value of the parameter.  \n  \n```  \n<asp:EntityDataSource ID=\"SalesOrderHeader\" runat=\"server\"   \n    ConnectionString=\"name=AdventureWorksEntities\"  \n    DefaultContainerName=\"AdventureWorksEntities\" EnableDelete=\"True\"   \n    EnableInsert=\"True\" EnableUpdate=\"True\" EntitySetName=\"SalesOrderHeader\"   \n    Where=\"it.OnlineOrderFlag = true\" AutoGenerateOrderByClause=\"True\">  \n    <OrderByParameters>  \n        <asp:ControlParameter Name=\"OrderByParameter\"   \n            ControlID=\"orderByDropDownList\" Type=\"String\" />  \n    </OrderByParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "用于创建 ORDER BY 子句的参数。"
  overload: System.Web.UI.WebControls.EntityDataSource.OrderByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  id: QueryCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: QueryCreated
  nameWithType: EntityDataSource.QueryCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "之后，将会<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>创建的配置期间指定的 Entity SQL 查询<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控件。"
  remarks: "有关详细信息，请参阅[到 EntityDataSource 应用 LINQ 查询](http://msdn.microsoft.com/en-us/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38)。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs> QueryCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.QueryCreatedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: EntityDataSource.SaveControlState()
  fullName: System.Web.UI.WebControls.EntityDataSource.SaveControlState()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "保存的状态中的属性<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>需要保留的控件。"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>包含状态信息。</xref:System.Object>"
  overload: System.Web.UI.WebControls.EntityDataSource.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Select
  id: Select
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Select
  nameWithType: EntityDataSource.Select
  fullName: System.Web.UI.WebControls.EntityDataSource.Select
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置投影，用于定义要包括在查询结果中的属性。"
  remarks: "所选属性的<xref:System.Web.UI.WebControls.EntityDataSource>控件包含一个字符串，表示实体 SQL 查询的语句。</xref:System.Web.UI.WebControls.EntityDataSource> 这使你可以预测一组指定的属性从查询返回的对象。       此字符串而不进行修改，即传递到<xref:System.Data.Objects.ObjectQuery%601>通过执行[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]。</xref:System.Data.Objects.ObjectQuery%601> 此查询是通过调整的数据源<xref:System.Web.UI.WebControls.EntityDataSource>控件。</xref:System.Web.UI.WebControls.EntityDataSource> 提供给所选属性的字符串使用相同的格式为字符串的字符串传递给<xref:System.Data.Objects.ObjectQuery%601.Select%2A><xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601>方法</xref:System.Data.Objects.ObjectQuery%601.Select%2A> 有关如何使用子句定义查询投影的示例，请参阅[如何︰ 执行查询该返回匿名类型的对象](http://msdn.microsoft.com/en-us/3b264025-e911-4d73-90ce-992d2b9d189d)。       投影的数据不支持更新。 这意味着当你使用所选属性指定投影，绑定的数据绑定不支持更新。       当使用启用的分页定义投影时，必须定义对结果进行排序依据的属性。 这意味着在你设置定义投影的选择属性，并且具有<xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>设置为`true`，还必须设置<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>属性来定义的顺序或设置<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>属性`true`和 ORDER BY 将参数添加到<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>集合。</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> </xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>       如果不能设置选择<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>， <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>，或<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>已启用。</xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>       如果选择设置为返回的属性投影的查询 (例如， `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`)、 一个<xref:System.Data.Common.DbDataRecord>将返回。</xref:System.Data.Common.DbDataRecord>"
  example:
  - "The following XML markup uses the Select property to specify a projection with six of the properties of the Product type:  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `products`:  \n  \n```  \nObjectQuery<Product> products = context.Product  \n    .Select(it.[ProductID], it.[Name], it.[ListPrice],   \n      it.[Size], it.[Style], it.[Weight])  \n    .OrderBy(\"it.[ProductID]\");  \n  \n```"
  syntax:
    content: public string Select { get; set; }
    return:
      type: System.String
      description: "用于创建 ORDER BY 子句的参数。"
  overload: System.Web.UI.WebControls.EntityDataSource.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当所选属性指定了查询投影和的值<> *1>， <> </> *1>，或<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert*>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Selected
  id: Selected
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Selected
  nameWithType: EntityDataSource.Selected
  fullName: System.Web.UI.WebControls.EntityDataSource.Selected
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "执行查询后发生。"
  remarks: "执行查询并返回数据后，将引发所选事件。 它也会引发如果查询准备或执行期间出错。       <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>对象包含<xref:System.Collections.IEnumerable>的从查询返回的对象。</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> 处理所选事件，以检索并将返回的实体存储在<xref:System.Web.UI.Control.ViewState%2A>.</xref:System.Web.UI.Control.ViewState%2A> 这样做来持久保存在页上的对象更改。       <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>对象显示在所有页中，而不考虑分页的数据绑定控件所传递的值的对象总数。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>是仅检索如果数据绑定控件需要它，如启用分页。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>       如果准备或执行查询时出错，将引发所选事件，<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>对象设置为返回<xref:System.Exception>，和<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>属性设置为`null`。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> </xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A> 如果处理所选事件处理程序中的异常，设置<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A> 这可防止再次引发异常。 当指定的值`false`为<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>属性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引发异常。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> Selected;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Selecting
  nameWithType: EntityDataSource.Selecting
  fullName: System.Web.UI.WebControls.EntityDataSource.Selecting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "构造并执行查询前发生。"
  remarks: "构造并执行查询之前，将引发选择事件。 处理选择事件，以修改的配置<xref:System.Web.UI.WebControls.EntityDataSource>或读取或更改数据绑定控件中的参数，构建并执行查询之前。</xref:System.Web.UI.WebControls.EntityDataSource>       设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>对象传递给`true`以取消查询。</xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 取消选择操作时，没有数据返回到数据绑定控件。       如果`AllowPaging`设置为`true`在数据绑定控件中，<xref:System.Web.UI.WebControls.EntityDataSource>时，将调用<xref:System.Data.Objects.ObjectQuery%601.Skip%2A>和<xref:System.Data.Objects.ObjectQuery%601.Top%2A>上查询生成器方法<xref:System.Data.Objects.ObjectQuery%601>使用的值<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>和<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>属性<xref:System.Web.UI.DataSourceSelectArguments>对象。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> </xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Top%2A> </xref:System.Data.Objects.ObjectQuery%601.Skip%2A> </xref:System.Web.UI.WebControls.EntityDataSource>       如果`AllowSorting`设置为`true`在数据绑定控件中，<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>的<xref:System.Web.UI.DataSourceSelectArguments>处理选择事件时，可以更改对象。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 任何其他查询运算符，如 WHERE 或 ORDER BY、 页面标记中指定的应用后将引发选择事件。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> Selecting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取用于创建投影的参数的集合。"
  remarks: "如<xref:System.Data.Objects.ObjectQuery%601.Select%2A>方法<xref:System.Data.Objects.ObjectQuery%601>类，可以将参数传递到由定义投影<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Select%2A> SelectParameters 属性<xref:System.Web.UI.WebControls.EntityDataSource>控件指定<xref:System.Web.UI.WebControls.ParameterCollection>包含要提供给查询的 SELECT 语句的参数。</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> SelectParameters 属性使用命名自变量来提供给字符串中指定的参数引用<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       如果未设置 SelectParametersproperty，不进行任何参数替换。 在 SELECT 语句中，为前缀的所有参数名称&quot;`@&quot;`符号`,` <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection>中必须有匹配的名称 一种<xref:System.Web.UI.WebControls.ParameterCollection>。</xref:System.Web.UI.WebControls.ParameterCollection>中的参数不允许空值"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "用于创建投影的参数。"
  overload: System.Web.UI.WebControls.EntityDataSource.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  id: StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否应以确保到更新或删除操作之前已由另一个进程不更改数据的视图状态中存储数据源中的数据。"
  remarks: "更改时跟踪更新和删除已启用操作，<xref:System.Web.UI.WebControls.EntityDataSource>控件必须存储在<xref:System.Web.UI.PageStatePersister.ControlState%2A>。</xref:System.Web.UI.PageStatePersister.ControlState%2A>加载对象的原始值有关的信息</xref:System.Web.UI.WebControls.EntityDataSource> 视图状态中存储此所需的信息将增加的页面大小。 你可以禁用 StoreOriginalValuesInViewState 属性设置为视图状态中存储原始值`false`。 如果执行此操作，[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]无法跟踪已更新的对象中的并发。 有关详细信息，请参阅[更新数据 (EntityDataSource)](http://msdn.microsoft.com/en-us/ca153eec-6817-4c1d-b262-efd6d35b0246)。"
  syntax:
    content: public bool StoreOriginalValuesInViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果将视图中存储值的状态;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  id: System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  isEii: true
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  fullName: System.Web.UI.WebControls.EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "通知已更改的参数对象，且在数据绑定控件需要刷新的数据绑定控件。"
  syntax:
    content: void IQueryableDataSource.RaiseViewChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: EntityDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.EntityDataSource.TrackViewState()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "导致服务器控件的视图状态更改跟踪，以便将它们存储在服务器控件的<xref href=&quot;System.Web.UI.StateBag&quot;></xref>对象。 此对象是可通过访问&lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt;属性。"
  remarks: "有关详细信息，请参阅<xref:System.Web.UI.Control.TrackViewState%2A>。</xref:System.Web.UI.Control.TrackViewState%2A>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Updated
  id: Updated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Updated
  nameWithType: EntityDataSource.Updated
  fullName: System.Web.UI.WebControls.EntityDataSource.Updated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "到数据源已保留对对象进行更改后发生。"
  remarks: "对已修改对象的更改保存到数据源时，或如果错误发生在应用更改时，会引发 Updated 事件。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>对象用于访问已修改的对象。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>       此对象的属性包含从数据源，包括任何服务器生成的值返回的值。       如果更改将永久保存到数据源时，将出现错误，将引发更新事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>对象设置为返回<xref:System.Exception>。</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 如果处理已更新事件处理程序中的异常，设置<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 这可防止再次引发异常。 当指定的值`false`为<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>属性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引发异常。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Updated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取在更新操作过程中使用的参数的集合。"
  remarks: "对于面向 ASP.NET 4 或更早版本的 web 应用程序，属性值存储在视图状态，并自动维护之间回发。 对于 web 应用程序面向 ASP.NET 4.5，该属性值不存储视图状态中，必须设置为每个 HTTP 请求的值。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "在更新操作期间使用的参数。"
  overload: System.Web.UI.WebControls.EntityDataSource.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Updating
  id: Updating
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Updating
  nameWithType: EntityDataSource.Updating
  fullName: System.Web.UI.WebControls.EntityDataSource.Updating
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "在对对象的更改保存到数据源之前发生。"
  remarks: "对对象的属性的更改保存到数据源之前，将引发更新事件。 更新事件，可修改或验证对对象的更改、 提供不同的对象，或保留所做的更改之前取消该操作。 你可以访问的已修改的对象从<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 如果提供了另一个对象，用户将负责在中设置正确的实体类型<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>       如果必须修改可处理更新事件<xref:System.Data.Objects.ObjectStateEntry>要设置不同的原始值进行并发控制的对象。</xref:System.Data.Objects.ObjectStateEntry> 有关详细信息，请参阅[保存更改和管理并发](http://msdn.microsoft.com/en-us/b8378601-4f26-4a05-a24a-f50aeb68610e)。       若要停止从保留的更改，设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象传递给`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如果实例化对象时，将发生错误或修改属性，将引发更新事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>对象设置为返回<xref:System.Exception>。</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>       处理更新事件处理程序中的异常时，设置<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 这可防止再次引发异常。 当指定的值`false`为<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>属性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引发异常。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Updating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Where
  id: Where
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Where
  nameWithType: EntityDataSource.Where
  fullName: System.Web.UI.WebControls.EntityDataSource.Where
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取或设置指定如何筛选查询结果的 Entity SQL 表达式。"
  remarks: "Where 属性<xref:System.Web.UI.WebControls.EntityDataSource>控件是一个字符串，表示子句，它是实体 SQL 查询的谓词。</xref:System.Web.UI.WebControls.EntityDataSource> 此字符串而不进行修改，即传递到<xref:System.Data.Objects.ObjectQuery%601>通过执行[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]。</xref:System.Data.Objects.ObjectQuery%601> 此查询是通过调整的数据源<xref:System.Web.UI.WebControls.EntityDataSource>控件。</xref:System.Web.UI.WebControls.EntityDataSource> 提供的字符串属性使用相同的格式 Where，为字符串的字符串传递给<xref:System.Data.Objects.ObjectQuery%601.Where%2A><xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601>方法</xref:System.Data.Objects.ObjectQuery%601.Where%2A> 有关如何使用子句来筛选查询的示例，请参阅[如何︰ 筛选器数据](http://msdn.microsoft.com/en-us/776f8556-3350-4572-804a-b1513515c1b2)。       若要通过使实体类型属性等于表达式筛选查询结果，请参阅信息<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>"
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the Where property.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n```"
  syntax:
    content: public string Where { get; set; }
    return:
      type: System.String
      description: "WHERE 子句中。"
  overload: System.Web.UI.WebControls.EntityDataSource.Where*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  id: WhereParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "获取用于创建 WHERE 子句的参数的集合。"
  remarks: "如<xref:System.Data.Objects.ObjectQuery%601.Where%2A>方法<xref:System.Data.Objects.ObjectQuery%601>类，可以将参数传递到分配给谓词<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Where%2A> WhereParameters 属性<xref:System.Web.UI.WebControls.EntityDataSource>控件指定<xref:System.Web.UI.WebControls.ParameterCollection>包含要提供给查询的 WHERE 子句的参数。</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> WhereParameters 属性使用命名自变量来提供给字符串中指定的参数引用<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>属性。</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>       如果未设置 WhereParametersproperty，不进行任何参数替换。 WHERE 子句中的所有参数名称前面都带有符号&quot;`@&quot;` <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection>中必须有匹配的名称 一种<xref:System.Web.UI.WebControls.ParameterCollection>。</xref:System.Web.UI.WebControls.ParameterCollection>中的参数不允许空值"
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.  \n  \n```  \n<asp:EntityDataSource ID=\"SalesOrderHeader\" runat=\"server\"   \n  ConnectionString=\"name=AdventureWorksEntities\"   \n  DefaultContainerName=\"AdventureWorksEntities\" EnableDelete=\"True\"   \n  EnableInsert=\"True\" EnableUpdate=\"True\" EntitySetName=\"SalesOrderHeader\"   \n  EntityTypeFilter=\"\" OrderBy=\"it.TotalDue DESC\" Select=\"\"   \n   Where=\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\">  \n  <WhereParameters>  \n    <asp:ControlParameter ControlID=\"costLimit\" DbType=\"Int32\"   \n      DefaultValue=\"2500\" Name=\"ordercost\" PropertyName=\"Text\" />  \n  </WhereParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "用于创建 WHERE 子句的参数。"
  overload: System.Web.UI.WebControls.EntityDataSource.WhereParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.DataSourceControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource()
  nameWithType: EntityDataSource.EntityDataSource()
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource()
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource(EntityConnection)
  nameWithType: EntityDataSource.EntityDataSource(EntityConnection)
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource(EntityConnection)
- uid: System.Data.EntityClient.EntityConnection
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoPage
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoSort
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandText
  nameWithType: EntityDataSource.CommandText
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.EntityDataSource.ConnectionString
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextCreated
  nameWithType: EntityDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreated
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextCreatedEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextCreatedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs
    name: EntityDataSourceContextCreatedEventArgs
    nameWithType: EntityDataSourceContextCreatedEventArgs
    fullName: EntityDataSourceContextCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextCreating
  nameWithType: EntityDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreating
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextCreatingEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextCreatingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs
    name: EntityDataSourceContextCreatingEventArgs
    nameWithType: EntityDataSourceContextCreatingEventArgs
    fullName: EntityDataSourceContextCreatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextDisposing
  nameWithType: EntityDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextDisposingEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextDisposingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs
    name: EntityDataSourceContextDisposingEventArgs
    nameWithType: EntityDataSourceContextDisposingEventArgs
    fullName: EntityDataSourceContextDisposingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextType
  nameWithType: EntityDataSource.ContextType
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CreateView()
  nameWithType: EntityDataSource.CreateView()
  fullName: System.Web.UI.WebControls.EntityDataSource.CreateView()
- uid: System.Web.UI.WebControls.EntityDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: EntityDataSourceView
  nameWithType: EntityDataSourceView
  fullName: System.Web.UI.WebControls.EntityDataSourceView
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
  fullName: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
- uid: System.Web.UI.WebControls.EntityDataSource.Deleted
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Deleted
  nameWithType: EntityDataSource.Deleted
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleted
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceChangedEventArgs>
  nameWithType: EventHandler<EntityDataSourceChangedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceChangedEventArgs
    name: EntityDataSourceChangedEventArgs
    nameWithType: EntityDataSourceChangedEventArgs
    fullName: EntityDataSourceChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Deleting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Deleting
  nameWithType: EntityDataSource.Deleting
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleting
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceChangingEventArgs>
  nameWithType: EventHandler<EntityDataSourceChangingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceChangingEventArgs
    name: EntityDataSourceChangingEventArgs
    nameWithType: EntityDataSourceChangingEventArgs
    fullName: EntityDataSourceChangingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableDelete
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableInsert
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.EntityDataSource.EntitySetName
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
- uid: System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: EntityDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.EntityDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: EntityDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.EntityDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
  fullName: System.Web.UI.WebControls.EntityDataSource.GroupBy
- uid: System.Web.UI.WebControls.EntityDataSource.Include
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Include
  nameWithType: EntityDataSource.Include
  fullName: System.Web.UI.WebControls.EntityDataSource.Include
- uid: System.Web.UI.WebControls.EntityDataSource.Inserted
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Inserted
  nameWithType: EntityDataSource.Inserted
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserted
- uid: System.Web.UI.WebControls.EntityDataSource.Inserting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Inserting
  nameWithType: EntityDataSource.Inserting
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserting
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.InsertParameters
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: EntityDataSource.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.EntityDataSource.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: EntityDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: EntityDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderBy
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: QueryCreated
  nameWithType: EntityDataSource.QueryCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.QueryCreated
- uid: System.EventHandler{System.Web.UI.WebControls.QueryCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<QueryCreatedEventArgs>
  nameWithType: EventHandler<QueryCreatedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.QueryCreatedEventArgs
    name: QueryCreatedEventArgs
    nameWithType: QueryCreatedEventArgs
    fullName: QueryCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SaveControlState()
  nameWithType: EntityDataSource.SaveControlState()
  fullName: System.Web.UI.WebControls.EntityDataSource.SaveControlState()
- uid: System.Web.UI.WebControls.EntityDataSource.Select
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Select
  nameWithType: EntityDataSource.Select
  fullName: System.Web.UI.WebControls.EntityDataSource.Select
- uid: System.Web.UI.WebControls.EntityDataSource.Selected
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Selected
  nameWithType: EntityDataSource.Selected
  fullName: System.Web.UI.WebControls.EntityDataSource.Selected
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceSelectedEventArgs>
  nameWithType: EventHandler<EntityDataSourceSelectedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs
    name: EntityDataSourceSelectedEventArgs
    nameWithType: EntityDataSourceSelectedEventArgs
    fullName: EntityDataSourceSelectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.Selecting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Selecting
  nameWithType: EntityDataSource.Selecting
  fullName: System.Web.UI.WebControls.EntityDataSource.Selecting
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceSelectingEventArgs>
  nameWithType: EventHandler<EntityDataSourceSelectingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs
    name: EntityDataSourceSelectingEventArgs
    nameWithType: EntityDataSourceSelectingEventArgs
    fullName: EntityDataSourceSelectingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.SelectParameters
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  fullName: System.Web.UI.WebControls.EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: TrackViewState()
  nameWithType: EntityDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.EntityDataSource.TrackViewState()
- uid: System.Web.UI.WebControls.EntityDataSource.Updated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Updated
  nameWithType: EntityDataSource.Updated
  fullName: System.Web.UI.WebControls.EntityDataSource.Updated
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Updating
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Updating
  nameWithType: EntityDataSource.Updating
  fullName: System.Web.UI.WebControls.EntityDataSource.Updating
- uid: System.Web.UI.WebControls.EntityDataSource.Where
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Where
  nameWithType: EntityDataSource.Where
  fullName: System.Web.UI.WebControls.EntityDataSource.Where
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.WhereParameters
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource
  nameWithType: EntityDataSource.EntityDataSource
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandText
  nameWithType: EntityDataSource.CommandText
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextType
  nameWithType: EntityDataSource.ContextType
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CreateView
  nameWithType: EntityDataSource.CreateView
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
- uid: System.Web.UI.WebControls.EntityDataSource.GetView*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetView
  nameWithType: EntityDataSource.GetView
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: EntityDataSource.GetViewNames
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
- uid: System.Web.UI.WebControls.EntityDataSource.Include*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Include
  nameWithType: EntityDataSource.Include
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: LoadControlState
  nameWithType: EntityDataSource.LoadControlState
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnInit
  nameWithType: EntityDataSource.OnInit
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnUnload
  nameWithType: EntityDataSource.OnUnload
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SaveControlState
  nameWithType: EntityDataSource.SaveControlState
- uid: System.Web.UI.WebControls.EntityDataSource.Select*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Select
  nameWithType: EntityDataSource.Select
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: TrackViewState
  nameWithType: EntityDataSource.TrackViewState
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Where*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Where
  nameWithType: EntityDataSource.Where
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
