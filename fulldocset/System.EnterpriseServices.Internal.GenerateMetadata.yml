### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.GenerateMetadata
  id: GenerateMetadata
  children:
  - System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  - System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  - System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  langs:
  - csharp
  name: GenerateMetadata
  nameWithType: GenerateMetadata
  fullName: System.EnterpriseServices.Internal.GenerateMetadata
  type: Class
  summary: "生成一个在 COM + 组件的公共语言运行时 (CLR) 元数据。"
  remarks: "如有必要，GenerateMetadata 类将生成一个程序集包含指定的类型库的 CLR 元数据。       GenerateMetadata 由.NET Framework 在内部使用。 不需要在代码中直接使用类。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013ff1-730b-45e2-ba24-874b7242c425")]

      public class GenerateMetadata : System.EnterpriseServices.Internal.IComSoapMetadata
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComSoapMetadata
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "初始化的新实例<xref href=&quot;System.EnterpriseServices.Internal.GenerateMetadata&quot;></xref>类。"
  syntax:
    content: public GenerateMetadata ();
    parameters: []
  overload: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  id: Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "生成或定位程序集，该程序集包含指定的类型库所表示的 COM + 组件的公共语言运行时 (CLR) 元数据。"
  remarks: "如有必要，则生成方法将生成该程序集包含指定的类型库的 CLR 元数据。 若要执行此处理，它调用<xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>方法。</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>       不需要直接从代码中调用这些方法方法。"
  syntax:
    content: public string Generate (string strSrcTypeLib, string outPath);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "若要生成的程序集的类型库的名称。"
    - id: outPath
      type: System.String
      description: "在其中生成的程序集或定位现有程序集的文件夹。"
    return:
      type: System.String
      description: "生成的程序集名称中;否则为一个空字符串如果输入无效。"
  overload: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  id: GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "生成或定位程序集，程序集包含指定的类型库所表示的 COM + 组件的公共语言运行时 (CLR) 元数据，使用具有强名称密钥对，对程序集签名并将其安装在全局程序集缓存中。"
  remarks: "如有必要，则 GenerateMetaData 方法将生成该程序集包含指定的类型库的 CLR 元数据。 它不生成程序集，如果字符串中存在的生成的名称的程序集已`outPath`文件夹。       GenerateMetaData 不需要直接从代码中调用。 两个调用<xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>和<xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>方法。</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> </xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>       如果由调用<xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>，GenerateMetaData 还生成具有强名称密钥对，对程序集签名并将其安装在全局程序集缓存。</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>"
  syntax:
    content: public string GenerateMetaData (string strSrcTypeLib, string outPath, byte[] PublicKey, System.Reflection.StrongNameKeyPair KeyPair);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "若要生成的程序集的类型库的名称。"
    - id: outPath
      type: System.String
      description: "在其中生成的程序集或定位现有程序集的文件夹。"
    - id: PublicKey
      type: System.Byte[]
      description: "用于将类型库信息导入到程序集的公共密钥。"
    - id: KeyPair
      type: System.Reflection.StrongNameKeyPair
      description: "具有强名称密钥对用于对生成的程序集进行签名。"
    return:
      type: System.String
      description: "生成的程序集名称中;否则为一个空字符串如果输入无效。"
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  id: GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "生成或定位程序集，程序集包含指定的类型库所表示的 COM + 组件的公共语言运行时 (CLR) 元数据，使用具有强名称密钥对，对程序集签名并将其安装在全局程序集缓存中。"
  remarks: "如有必要，则 GenerateSigned 方法将生成该程序集包含指定的类型库的 CLR 元数据。 它还生成具有强名称密钥对，并对程序集签名。       若要执行此处理，它调用<xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>方法。</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> 不需要直接从代码中调用这些方法方法。       `InstallGac`参数，指示是否将程序集安装在全局程序集缓存中。 但是，实现会忽略此值，并且始终会尝试在全局程序集缓存中安装签名的程序集。"
  syntax:
    content: public string GenerateSigned (string strSrcTypeLib, string outPath, bool InstallGac, out string Error);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "若要生成的程序集的类型库的名称。"
    - id: outPath
      type: System.String
      description: "在其中生成的程序集或定位现有程序集的文件夹。"
    - id: InstallGac
      type: System.Boolean
      description: "忽略。"
    - id: Error
      type: System.String
      description: "可以向其写入一条错误消息字符串。"
    return:
      type: System.String
      description: "生成的程序集名称中;否则为一个空字符串如果输入无效。"
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  id: SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "搜索指定路径中指定的文件。"
  remarks: "有关详细信息，请参阅平台 SDK 文档中的有关在 SearchPath [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)。"
  syntax:
    content: public static int SearchPath (string path, string fileName, string extension, int numBufferChars, string buffer, int[] filePart);
    parameters:
    - id: path
      type: System.String
      description: "要在其中搜索文件的路径。"
    - id: fileName
      type: System.String
      description: "要搜索文件的名称。"
    - id: extension
      type: System.String
      description: "要搜索的文件时要添加到的文件名称的扩展。"
    - id: numBufferChars
      type: System.Int32
      description: "接收有效路径和文件名的缓冲区大小。"
    - id: buffer
      type: System.String
      description: "接收找到的文件的路径和文件名称的缓冲区。"
    - id: filePart
      type: System.Int32[]
      description: "接收有效路径和文件名称的最后一个组件的地址的变量。"
    return:
      type: System.Int32
      description: "如果搜索成功，该返回值将复制到的字符串的长度<code> buffer </code>。 如果搜索失败，返回值为 0。"
  overload: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata
  nameWithType: GenerateMetadata.GenerateMetadata
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate
  nameWithType: GenerateMetadata.Generate
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData
  nameWithType: GenerateMetadata.GenerateMetaData
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned
  nameWithType: GenerateMetadata.GenerateSigned
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath
  nameWithType: GenerateMetadata.SearchPath
