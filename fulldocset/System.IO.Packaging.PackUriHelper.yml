### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackUriHelper
  id: PackUriHelper
  children:
  - System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  - System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.UriSchemePack
  langs:
  - csharp
  name: PackUriHelper
  nameWithType: PackUriHelper
  fullName: System.IO.Packaging.PackUriHelper
  type: Class
  summary: "提供一些实用工具方法来撰写和分析 pack URI 对象。"
  syntax:
    content: public static class PackUriHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  id: ComparePackUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ComparePackUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePackUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePackUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回一个值，该值指示两个包 Uri 是等效的。"
  remarks: "如果这两个`firstPackUri`和`secondPackUri`是`null`，ComparePackUri 返回 0。 当比较包 Uri 时，null URI 将始终小于非 null URI。    用例其中`firstPackUri`和`secondPackUri`是绝对同时包 Uri，ComparePackUri 执行比较。"
  syntax:
    content: public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);
    parameters:
    - id: firstPackUri
      type: System.Uri
      description: "第一个包 URI。"
    - id: secondPackUri
      type: System.Uri
      description: "第二个包 URI。"
    return:
      type: System.Int32
      description: "一个有符号的整数，指示之间的关系<code> firstPackUri </code>和<code> secondPackUri </code>。       <table><thead><tr><th> 值       </th><th> 含义       </th></tr></thead><tbody><tr><td> 小于 0       </td><td><code>firstPackUri</code>is less than <code>secondPackUri</code>.       </td></tr><tr><td> 0       </td><td><code>firstPackUri</code>等效于<code> secondPackUri </code>。       </td></tr><tr><td> 大于 0       </td><td><code>firstPackUri</code>大于<code> secondPackUri </code>。       </td></tr></tbody></table>"
  overload: System.IO.Packaging.PackUriHelper.ComparePackUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Either <code>firstPackUri</code> or <code>secondPackUri</code> is not an absolute [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].       -或-其中任何一个<code> firstPackUri </code>或<code> secondPackUri </code>不始于&quot;pack: / /&quot;方案。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  id: ComparePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ComparePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回一个值，该值指示是否两个包部件[!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)]是等效的。"
  remarks: "如果这两个`firstPartUri`和`secondPartUri`是`null`，ComparePartUri 返回 0。 比较时<xref:System.IO.Packaging.PackagePart>[!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)]，null[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]将始终小于非 null [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。</xref:System.IO.Packaging.PackagePart> 用例其中`firstPartUri`和`secondPartUri`都是相对<xref:System.IO.Packaging.PackagePart>Uri，ComparePartUri 执行比较。</xref:System.IO.Packaging.PackagePart>"
  syntax:
    content: public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);
    parameters:
    - id: firstPartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的第一个<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。"
    - id: secondPartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]第二个<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。"
    return:
      type: System.Int32
      description: "一个值，指示之间的关系<code> firstPartUri </code>和<code> secondPartUri </code>。       <table><thead><tr><th> 值       </th><th> 含义       </th></tr></thead><tbody><tr><td> 小于 0       </td><td><code>firstPartUri</code>is less than <code>secondPartUri</code>.       </td></tr><tr><td> 0       </td><td><code>firstPartUri</code>等效于<code> secondPartUri </code>。       </td></tr><tr><td> 大于 0       </td><td><code>firstPartUri</code>大于<code> secondPartUri </code>。       </td></tr></tbody></table>"
  overload: System.IO.Packaging.PackUriHelper.ComparePartUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>firstPartUri</code>或<code>secondPartUri</code>不是有效的一部分[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]语法。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri)
  id: Create(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri)
  nameWithType: PackUriHelper.Create(Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "创建一个新的包指向包的 URI。"
  remarks: "`packageUri`不能指定为`null`或为空。       下表展示了创建样本事例。      |`packageUri`|返回包 URI |  |------------------|-----------------------|  | http://www.proseware.com/mypackage.pkg | pack://http:、 www.proseware.com、 mypackage.pkg|  | ftp://ftp.proseware.com/packages/mypackage1.abc | pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc|  |file:///d:/packages/mypackage2.pkg| pack://file:、、 d:,packages,mypackage2.pkg|      撰写包 URI 是一个多步骤过程。  例如，构成包 URI 中的一个步骤是将正斜杠 （/） 字符的`packageUri`用逗号 （，）。       字符串转换和包 Uri 的形成方式的详细信息，请参阅附录 A.4&quot;字符串转换示例&quot;和附录 B.3&quot;撰写包 URI&quot;中下载的开放式打包约定规范[规范和许可证下载](http://go.microsoft.com/fwlink/?LinkID=71255)。"
  example:
  - "The following example shows how to use the Create method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri);
    parameters:
    - id: packageUri
      type: System.Uri
      description: "引用的 URI <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>。"
    return:
      type: System.Uri
      description: "包 URI 为<xref href=&quot;System.IO.Packaging.Package&quot;></xref>所引用的给定<code> packageUri </code>。"
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>不是一个绝对 URI。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  id: Create(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri,Uri)
  nameWithType: PackUriHelper.Create(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "创建一个包 URI 给定<xref href=&quot;System.IO.Packaging.Package&quot;> </xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]和[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]包中的部件。"
  remarks: "`packageUri`不能指定为 null 或为空。       如果`partUri`是`null`，返回的包 URI 指向包。       下表说明了创建方法的样本事例。      |`packageUri`|`partUri`|返回包 URI |  |------------------|---------------|-----------------------|  | http://www.proseware.com/mypackage.pkg |/page2.xaml| pack://http:、 www.proseware.com、 mypackage.pkg/page2.xaml|  | http://www.proseware.com/mypackage.pkg |/a/page4.xaml| pack://http:、 www.proseware.com、 mypackage.pkg/a/page4.xaml|  | http://www.proseware.com/mypackage.pkg |/%41/%61.xml| pack://http:、 www.proseware.com、 mypackage.pkg/A/a.xml|  | http://www.proseware.com/mypackage.pkg |/%25XY.xml| pack://http:、 www.proseware.com、 mypackage.pkg/%25XY.xml|  | http://www.proseware.com/mypackage.pkg |**null**| pack://http:、 www.proseware.com、 mypackage.pkg|  | ftp://ftp.proseware.com/packages/mypackage1.abc |/a/mydoc.xaml| pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  |file:///d:/packages/mypackage2.pkg|/a/bar.xaml| pack://file:、、 d:,packages,mypackage2.pkg/a/bar.xaml|      撰写包 URI 是一个多步骤过程。  例如，构成包 URI 中的一个步骤是将正斜杠 （/） 字符的`packageUri`用逗号 （，）。       字符串转换和包 Uri 的形成方式的详细信息，请参阅附录 A.4&quot;字符串转换示例&quot;和附录 B.3&quot;撰写包 URI&quot;中下载的开放式打包约定规范[规范和许可证下载](http://go.microsoft.com/fwlink/?LinkID=71255)。"
  example:
  - "The following example shows how to use the <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri, Uri partUri);
    parameters:
    - id: packageUri
      type: System.Uri
      description: "The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href=&quot;System.IO.Packaging.Package&quot;></xref>."
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>包中。"
    return:
      type: System.Uri
      description: "包 URI 的给定<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。"
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>不是一个绝对 URI。       -或-<code>partUri</code>不是有效的部件 URI 语法。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  id: Create(System.Uri,System.Uri,System.String)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri,Uri,String)
  nameWithType: PackUriHelper.Create(Uri,Uri,String)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "创建一个包 URI 给定<xref href=&quot;System.IO.Packaging.Package&quot;> </xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的包，并要追加的&quot;#&quot;片段中的部件。"
  remarks: "`packageUri`不能指定为`null`或为空。       如果`partUri`是`null`，返回的包 URI 指向包。       `fragment`不能为空字符串，但可以指定为`null`。  如果未指定为`null`、`fragment`字符串必须以 &quot;#&quot; 字符开头。  有关语法的详细信息`fragment`引用，请参阅&quot;片段&quot;3.5 节的[RFC 3986](http://www.ietf.org/rfc/rfc3986.txt)。       下表说明了创建方法的样本事例。      |`packageUri`|`partUri`|`fragment`|返回包 URI |  |------------------|---------------|----------------|-----------------------|  | http://www.proseware.com/mypackage.pkg |/page1.xaml|#intro| pack://http:、 www.proseware.com、 mypackage.pkg/page1.xaml#intro|  | http://www.proseware.com/mypackage.pkg |/page2.xaml|**null**| pack://http:、 www.proseware.com、 mypackage.pkg/page2.xaml|  | http://www.proseware.com/mypackage.pkg |/a/page4.xaml|**null**| pack://http:、 www.proseware.com、 mypackage.pkg/a/page4.xaml|  | http://www.proseware.com/mypackage.pkg |/%41/%61.xml|**null**| pack://http:、 www.proseware.com、 mypackage.pkg/A/a.xml|  | http://www.proseware.com/mypackage.pkg |/%25XY.xml|**null**| pack://http:、 www.proseware.com、 mypackage.pkg/%25XY.xml|  | http://www.proseware.com/mypackage.pkg |/a/page5.xaml|#summary| pack://http:、 www.proseware.com、 mypackage.pkg/a/page5.xaml#summary|  | http://www.proseware.com/packages.aspx?pkg04 |/page1.xaml|#intro| pack://http:、 www.proseware.com、 packages.aspx%3fpkg04/page1.xaml#intro|  | http://www.proseware.com/mypackage.pkg |**null**|**null**| pack://http:、 www.proseware.com、 mypackage.pkg|  | ftp://ftp.proseware.com/packages/mypackage1.abc |/a/mydoc.xaml|**null**| pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  |file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref| pack://file:、、 d:,packages,mypackage2.pkg/a/bar.xaml#xref|      撰写包 URI 是一个多步骤过程。  例如，构成包 URI 中的一个步骤是将正斜杠 （/） 字符的`packageUri`用逗号 （，）。       字符串转换和包 Uri 的形成方式的详细信息，请参阅附录 A.4&quot;字符串转换示例&quot;和附录 B.3&quot;撰写包 URI&quot;中下载的开放式打包约定规范[规范和许可证下载](http://go.microsoft.com/fwlink/?LinkID=71255)。"
  example:
  - "The following example shows how to use the <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri, Uri partUri, string fragment);
    parameters:
    - id: packageUri
      type: System.Uri
      description: "The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href=&quot;System.IO.Packaging.Package&quot;></xref>."
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>包中。"
    - id: fragment
      type: System.String
      description: "&quot;#&quot;引用，用来标识包部件中的元素。"
    return:
      type: System.Uri
      description: "包标识指定的包、 包部件和片段的 URI。"
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>不是一个绝对 URI。       -或-<code>partUri</code>不是有效的部件 URI 语法。       -或-<code>fragment</code>为空或未以&quot;#&quot;开头。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  id: CreatePartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: CreatePartUri(Uri)
  nameWithType: PackUriHelper.CreatePartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "创建一个格式化<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> URI。"
  remarks: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的<xref:System.IO.Packaging.PackagePart>始终从引用<xref:System.IO.Packaging.Package>根。</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.PackagePart>       返回<xref:System.IO.Packaging.PackagePart>URI 是一个绝对路径，它开始时始终具有&quot;/&quot;并且符合在中定义的语法[打开打包约定规范](http://go.microsoft.com/fwlink/?LinkID=71255)。</xref:System.IO.Packaging.PackagePart>       下表展示了 CreatePartUri 样本事例。      |`partUri`|返回部件 URI |  |---------------|-----------------------|  |picture1.jpg|/picture1.jpg|  |/picture2.jpg|/picture2.jpg|  |a/mydoc.xaml|/a/mydoc.xaml|  |/b/bar.xaml|/b/bar.xaml|"
  example:
  - "The following example shows how to use the CreatePartUri method to define relative URIs for <xref:System.IO.Packaging.PackagePart> elements.  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreateparturi)]\n [!code-cs[PackageWrite#PackageWriteCreatePartUri](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreateparturi)]"
  syntax:
    content: public static Uri CreatePartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "URI <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>包内。"
    return:
      type: System.Uri
      description: "一个格式化<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> URI。"
  overload: System.IO.Packaging.PackUriHelper.CreatePartUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  id: GetNormalizedPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetNormalizedPartUri(Uri)
  nameWithType: PackUriHelper.GetNormalizedPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回指定的标准化的形式<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> URI。"
  remarks: "GetNormalizedPartUri 规范化`partUri`通过用例折叠为大写形式 (<xref:System.String.ToUpperInvariant%2A?displayProperty=fullName>) 并返回结果。</xref:System.String.ToUpperInvariant%2A?displayProperty=fullName>"
  syntax:
    content: public static Uri GetNormalizedPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>规范化的 URI。"
    return:
      type: System.Uri
      description: "正常化的表格给定<code> partUri </code>。"
  overload: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  id: GetPackageUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetPackageUri(Uri)
  nameWithType: PackUriHelper.GetPackageUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPackageUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回指向指定包 URI 的整个程序包的内部 URI。"
  remarks: "下表展示了 GetPackageUri 样本事例。      |`packUri`|返回包 URI |  |---------------|--------------------------|  | pack://http:、 www.proseware.com、 mypackage.xyz/a/mydoc.xaml| http://www.proseware.com/mypackage.xyz |  | pack://http:、 www.proseware.com、 packages.aspx%3fmypackage/a/bar.xaml| http://www.proseware.com/packages.aspx?mypackage |  | pack://http:、 www.proseware.com、 mypackage.pkg| http://www.proseware.com/mypackage.pkg |  | pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg| ftp://ftp.proseware.com/packages/mypackage1.abc |  | pack://file:、、 d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/packages/mypackage2.pkg|"
  syntax:
    content: public static Uri GetPackageUri (Uri packUri);
    parameters:
    - id: packUri
      type: System.Uri
      description: "包 URI 从其返回的 URI <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>。"
    return:
      type: System.Uri
      description: "URI <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>从指定<code> packUri </code>。"
  overload: System.IO.Packaging.PackUriHelper.GetPackageUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  id: GetPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetPartUri(Uri)
  nameWithType: PackUriHelper.GetPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回的 URI <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>内指定包 URI。"
  remarks: "返回<xref:System.IO.Packaging.PackagePart>URI 是相对于包根，始终为绝对路径，则会启动与&quot;/&quot;并且符合在中定义的语法[打开打包约定规范](http://go.microsoft.com/fwlink/?LinkID=71255)。</xref:System.IO.Packaging.PackagePart>       下表展示了 GetPartUri 样本事例。      |`packUri`|返回部件 URI |  |---------------|-----------------------|  | pack://http:、 www.proseware.com、 mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  | pack://http:、 www.proseware.com、 packages.aspx%3fmypackage/a/bar.xaml|/a/bar.xaml|  | pack://http:、 www.proseware.com、 mypackage.pkg|null|  | pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/picture.jpg|  | pack://file:、、 d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.xaml|"
  syntax:
    content: public static Uri GetPartUri (Uri packUri);
    parameters:
    - id: packUri
      type: System.Uri
      description: "包 URI 从中返回<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> URI。"
    return:
      type: System.Uri
      description: "The URI of the <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> in the given <code>packUri</code>, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>packUri</code> points to a package instead of a <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>."
  overload: System.IO.Packaging.PackUriHelper.GetPartUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  id: GetRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]关联与指定的关系部件<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。"
  remarks: "`partUri`必须确定是<xref:System.IO.Packaging.Package>（&quot;/&quot;） 或<xref:System.IO.Packaging.PackagePart>，它是不<xref:System.IO.Packaging.PackageRelationship>部件</xref:System.IO.Packaging.PackageRelationship></xref:System.IO.Packaging.PackagePart></xref:System.IO.Packaging.Package>       有关详细信息<xref:System.IO.Packaging.PackageRelationship>部件，请参阅下载打开打包约定规范中的部分 9.3&quot;关系&quot;[规范和许可证下载](http://go.microsoft.com/fwlink/?LinkID=71255)。</xref:System.IO.Packaging.PackageRelationship>"
  example:
  - "[Pack URIs in WPF](~/add/includes/ajax-current-ext-md.md)  \n  \n [Open Packaging Conventions Specification](http://go.microsoft.com/fwlink/?LinkID=71255)"
  syntax:
    content: public static Uri GetRelationshipPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.IO.Packaging.PackagePart.Uri*>的<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>返回关联的 URI <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref>。</xref:System.IO.Packaging.PackagePart.Uri*>"
    return:
      type: System.Uri
      description: "URI <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref>与相关联部件<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>由标识<code> partUri </code>。"
  overload: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>对于包部件 URI 语法无效。       -或-<code>partUri</code>是一个绝对 URI。       -或-<code>partUri</code>引用关系部件。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  id: GetRelativeUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetRelativeUri(Uri,Uri)
  nameWithType: PackUriHelper.GetRelativeUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回相对[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]之间两个指定<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> [!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)]。"
  remarks: "下表展示了 GetRelativeUri 样本事例。      |`sourcePartUri`|`targetPartUri`|返回相对 URI |  |---------------------|---------------------|---------------------------|  |/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  | / mydoc/markup/page.xml|/mydoc/picture.jpg|.../picture.jpg|  | / mydoc/markup/page.xml|/mydoc/images/picture.jpg|.../images/picture.jpg|"
  syntax:
    content: public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的源部分。"
    - id: targetPartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目标部分。"
    return:
      type: System.Uri
      description: "The relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] from <code>sourcePartUri</code> to <code>targetPartUri</code>."
  overload: System.IO.Packaging.PackUriHelper.GetRelativeUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourcePartUri</code>or <code>targetPartUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  id: GetSourcePartUriFromRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetSourcePartUriFromRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回<xref:System.IO.Packaging.PackageRelationship.SourceUri*>从<xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>与指定[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。</xref:System.IO.Packaging.PackageRelationship.SourceUri*>"
  remarks: "<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>关系部件的属性必须确定是<xref:System.IO.Packaging.PackagePart.Package%2A>（&quot;/&quot;） 或一种<xref:System.IO.Packaging.PackagePart>，它是不一<xref:System.IO.Packaging.PackageRelationship>。</xref:System.IO.Packaging.PackageRelationship> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Package%2A> </xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>       例如，如果包部件&quot;/ files/document.xaml&quot;是关系一部分的源所有者&quot;/ files/_rels/document.xaml.rels&quot;，调用与 GetSourcePartUriFromRelationshipPartUri`relationshipPartUri`参数&quot;/ files/_rels/document.xaml.rels&quot;返回<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>的&quot;/ files/document.xaml&quot;。</xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>"
  syntax:
    content: public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);
    parameters:
    - id: relationshipPartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]要返回的关系部件的<xref:System.IO.Packaging.PackageRelationship.SourceUri*>从。</xref:System.IO.Packaging.PackageRelationship.SourceUri*>"
    return:
      type: System.Uri
      description: "<xref:System.IO.Packaging.PackageRelationship.SourceUri*>的<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>从具有指定关系<code> relationshipPartUri </code>。</xref:System.IO.Packaging.PackageRelationship.SourceUri*>"
  overload: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipPartUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipPartUri</code>是绝对[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。       -<code>relationshipPartUri</code>语法无效，不能<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。       -或-<code>relationshipPartUri</code>不引用关系部件。       -或-<xref:System.IO.Packaging.PackageRelationship.SourceUri*>关系的一部分引用另一个关系部分 （不是有效的请参阅备注）。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  id: IsRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: IsRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.IsRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回一个值，该值指示是否指定[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]是[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的<xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>一部分。"
  syntax:
    content: public static bool IsRelationshipPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]检查<xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>一部分。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>partUri</code> identifies a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref> part; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>是绝对[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。       -<code>partUri</code>是一个无效<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>语法。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  id: ResolvePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ResolvePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ResolvePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "返回给定 URI 中的源部分的 URI 一部分和 URI 具有相对路径的目标部件。"
  remarks: "下表展示了 ResolvePartUri 样本事例。      |`sourcePartUri`|`targetUri`|返回 URI |  |---------------------|-----------------|------------------|  |/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  |/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  | / mydoc/markup/page.xml|。/picture.jpg|/mydoc/markup/picture.jpg|  | / mydoc/markup/page.xml|.../picture.jpg|/mydoc/picture.jpg|  | / mydoc/markup/page.xml|.../images/picture.jpg|/mydoc/images/picture.jpg|  |/|images/picture.jpg|/images/picture.jpg|"
  example:
  - "The following example shows how to use the ResolvePartUri method.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: "URI 的源部分中，或&quot;/&quot;以指定<xref href=&quot;System.IO.Packaging.Package&quot;></xref>根。"
    - id: targetUri
      type: System.Uri
      description: "指向目标一部分的相对 URI。"
    return:
      type: System.Uri
      description: "目标部件的 URI 解析之间指定<code> SourcePartUri </code>和<code> targetUri </code>参数。"
  overload: System.IO.Packaging.PackUriHelper.ResolvePartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourcePartUri</code>or <code>targetUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourcePartUri</code>不是有效的部件 URI。       -或-<code>targetUri</code>不是有效的相对 URI。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.UriSchemePack
  id: UriSchemePack
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: UriSchemePack
  nameWithType: PackUriHelper.UriSchemePack
  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack
  type: Field
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "定义 pack URI 方案名称&quot;pack&quot;。"
  syntax:
    content: public static readonly string UriSchemePack;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePackUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePackUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePackUri(Uri,Uri)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri)
  nameWithType: PackUriHelper.Create(Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri,Uri)
  nameWithType: PackUriHelper.Create(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri,Uri,String)
  nameWithType: PackUriHelper.Create(Uri,Uri,String)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: CreatePartUri(Uri)
  nameWithType: PackUriHelper.CreatePartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetNormalizedPartUri(Uri)
  nameWithType: PackUriHelper.GetNormalizedPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPackageUri(Uri)
  nameWithType: PackUriHelper.GetPackageUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPackageUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPartUri(Uri)
  nameWithType: PackUriHelper.GetPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelativeUri(Uri,Uri)
  nameWithType: PackUriHelper.GetRelativeUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetSourcePartUriFromRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: IsRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.IsRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ResolvePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ResolvePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.UriSchemePack
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: UriSchemePack
  nameWithType: PackUriHelper.UriSchemePack
  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePackUri
  nameWithType: PackUriHelper.ComparePackUri
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePartUri
  nameWithType: PackUriHelper.ComparePartUri
- uid: System.IO.Packaging.PackUriHelper.Create*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create
  nameWithType: PackUriHelper.Create
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: CreatePartUri
  nameWithType: PackUriHelper.CreatePartUri
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetNormalizedPartUri
  nameWithType: PackUriHelper.GetNormalizedPartUri
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPackageUri
  nameWithType: PackUriHelper.GetPackageUri
- uid: System.IO.Packaging.PackUriHelper.GetPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPartUri
  nameWithType: PackUriHelper.GetPartUri
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelationshipPartUri
  nameWithType: PackUriHelper.GetRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelativeUri
  nameWithType: PackUriHelper.GetRelativeUri
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetSourcePartUriFromRelationshipPartUri
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: IsRelationshipPartUri
  nameWithType: PackUriHelper.IsRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ResolvePartUri
  nameWithType: PackUriHelper.ResolvePartUri
