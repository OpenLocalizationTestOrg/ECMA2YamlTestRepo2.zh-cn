### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IDesignerFilter
  id: IDesignerFilter
  children:
  - System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  langs:
  - csharp
  name: IDesignerFilter
  nameWithType: IDesignerFilter
  fullName: System.ComponentModel.Design.IDesignerFilter
  type: Interface
  summary: "提供一个接口，使设计器来访问和筛选的字典<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>存储组件设计器可以公开到设计时环境的属性、 属性和事件描述符。"
  remarks: "IDesignerFilter 使设计器来筛选其关联的组件通过一种<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>来公开的属性、 属性和事件描述符集 此接口的方法名称开头`Pre`名称开头的方法之后，立即调用`Post`。       如果你想要添加属性、 事件或属性描述符，使用<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>， <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>，或<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>方法。</xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> </xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A> </xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>       如果你想要更改或删除属性、 事件或属性描述符，使用<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>， <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>，或<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>方法。</xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> </xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A> </xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>"
  example:
  - "The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time. See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the IDesignerFilter interface.  \n  \n [!code-cpp[ControlDesignerExample#2](~/add/codesnippet/cpp/t-system.componentmodel._159_1.cpp)]\n [!code-vb[ControlDesignerExample#2](~/add/codesnippet/visualbasic/t-system.componentmodel._159_1.vb)]\n [!code-cs[ControlDesignerExample#2](~/add/codesnippet/csharp/t-system.componentmodel._159_1.cs)]"
  syntax:
    content: public interface IDesignerFilter
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  id: PostFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PostFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "当在派生类中重写，允许设计器更改或移除项的它通过公开的属性集从<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "此方法提供了一种方法来更改或删除项目在字典中的一种<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>通过来实现此接口的设计器关联的组件公开的属性       属性的字典中的键是属性的类型 Id。 对象属于类型<xref:System.Attribute>.</xref:System.Attribute> 在<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>之后立即调用此方法       属性的类型 ID 可以是任何对象。 默认情况下，<xref:System.Attribute>返回其<xref:System.Type>的值作为其<xref:System.Attribute.TypeId%2A>属性。</xref:System.Attribute.TypeId%2A> </xref:System.Type> </xref:System.Attribute> 你可以检查<xref:System.Attribute.TypeId%2A>与已知等效字典中的特性<xref:System.Attribute.TypeId%2A>属性标识它，或使用<xref:System.Reflection>以确定其自身的属性对象。</xref:System.Reflection> </xref:System.Attribute.TypeId%2A> </xref:System.Attribute.TypeId%2A>       当具有相同的属性<xref:System.Attribute.TypeId%2A>因为现有的或继承的属性添加到某一组件，则新特性将取代旧的属性。</xref:System.Attribute.TypeId%2A> 许多属性而言，对于相同类型的新属性将替换先前类型的所有属性。 但是，某些类型的属性返回<xref:System.Attribute.TypeId%2A>，有选择地区分特性。</xref:System.Attribute.TypeId%2A> 例如，为了提供不同类型的同时处于活动状态的设计器对于类型，如<xref:System.ComponentModel.Design.IRootDesigner>和<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>类返回<xref:System.Attribute.TypeId%2A>唯一标识属性和设计器的基类型均。</xref:System.Attribute.TypeId%2A> </xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.Design.IDesigner> </xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.DesignerAttribute>构造函数，可指定其特定的类型，除了设计器的基本设计器类型和<xref:System.ComponentModel.DesignerAttribute>返回<xref:System.Attribute.TypeId%2A>反映这。</xref:System.Attribute.TypeId%2A> </xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.DesignerAttribute> 因此在添加新<xref:System.ComponentModel.DesignerAttribute>具有与现有的基本设计器类型相同的类型的基本设计器类型<xref:System.ComponentModel.DesignerAttribute>，旧的属性将替换为新属性。</xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.DesignerAttribute>"
  syntax:
    content: public void PostFilterAttributes (System.Collections.IDictionary attributes);
    parameters:
    - id: attributes
      type: System.Collections.IDictionary
      description: "<xref:System.Attribute>对该组件所属的类的对象。</xref:System.Attribute> 中的属性字典的键是<xref:System.Attribute.TypeId*>特性的值。</xref:System.Attribute.TypeId*>"
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  id: PostFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PostFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "当在派生类中重写，允许设计器更改或删除组的事件，通过它来公开项<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "此方法提供了一种方法来更改或删除项目在字典中的一种<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>通过公开的事件       中的事件字典的键是事件的名称。 对象属于类型<xref:System.ComponentModel.EventDescriptor>.</xref:System.ComponentModel.EventDescriptor> 在<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>之后立即调用此方法"
  syntax:
    content: public void PostFilterEvents (System.Collections.IDictionary events);
    parameters:
    - id: events
      type: System.Collections.IDictionary
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>表示组件的类的事件的对象。 中的事件字典的键是事件名称。"
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  id: PostFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PostFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "当在派生类中重写，允许设计器更改或移除项的它通过公开的属性集从<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "此方法提供了一种方法来更改或删除项目在字典中的一种<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>通过公开的属性       属性的字典中的键是属性的名称。 对象属于类型<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 在<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>之后立即调用此方法"
  syntax:
    content: public void PostFilterProperties (System.Collections.IDictionary properties);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>表示组件的类的属性的对象。 属性的字典中的键是属性名称。"
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  id: PreFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PreFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "当在派生类中重写，允许设计器将项添加到的它通过公开的属性集<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "此方法使您能够将项添加到通过一种<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>来实现此接口的设计器关联的组件公开的属性的字典       属性的字典中的键是属性的类型 Id。 对象属于类型<xref:System.Attribute>.</xref:System.Attribute> 紧跟在<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>之前调用此方法       属性的类型 ID 可以是任何对象。 默认情况下，<xref:System.Attribute>返回其<xref:System.Type>的值作为其<xref:System.Attribute.TypeId%2A>属性。</xref:System.Attribute.TypeId%2A> </xref:System.Type> </xref:System.Attribute> 你可以检查<xref:System.Attribute.TypeId%2A>与已知等效字典中的特性<xref:System.Attribute.TypeId%2A>属性标识它，或使用<xref:System.Reflection>以确定其自身的属性对象。</xref:System.Reflection> </xref:System.Attribute.TypeId%2A> </xref:System.Attribute.TypeId%2A>       当具有相同的属性<xref:System.Attribute.TypeId%2A>因为现有的或继承的属性添加到某一组件，则新特性将取代旧的属性。</xref:System.Attribute.TypeId%2A> 许多属性而言，对于相同类型的新属性将替换先前类型的所有属性。 但是，某些类型的属性返回<xref:System.Attribute.TypeId%2A>，有选择地区分特性。</xref:System.Attribute.TypeId%2A> 例如，为了提供不同类型的同时处于活动状态的设计器对于类型，如<xref:System.ComponentModel.Design.IRootDesigner>和<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>类返回<xref:System.Attribute.TypeId%2A>唯一标识属性和设计器的基类型均。</xref:System.Attribute.TypeId%2A> </xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.Design.IDesigner> </xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.DesignerAttribute>构造函数，可指定其特定的类型，除了设计器的基本设计器类型和<xref:System.ComponentModel.DesignerAttribute>返回<xref:System.Attribute.TypeId%2A>反映这。</xref:System.Attribute.TypeId%2A> </xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.DesignerAttribute> 因此在添加新<xref:System.ComponentModel.DesignerAttribute>具有与现有的基本设计器类型相同的类型的基本设计器类型<xref:System.ComponentModel.DesignerAttribute>，旧的属性将替换为新属性。</xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.DesignerAttribute>"
  syntax:
    content: public void PreFilterAttributes (System.Collections.IDictionary attributes);
    parameters:
    - id: attributes
      type: System.Collections.IDictionary
      description: "<xref:System.Attribute>对该组件所属的类的对象。</xref:System.Attribute> 中的属性字典的键是<xref:System.Attribute.TypeId*>特性的值。</xref:System.Attribute.TypeId*>"
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  id: PreFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PreFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "当在派生类中重写，允许设计器将项添加到组的事件，通过它来公开<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "此方法使您能够将项目添加到设计器通过一种<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>来公开的事件字典       中的事件字典的键是事件的名称。 对象属于类型<xref:System.ComponentModel.EventDescriptor>.</xref:System.ComponentModel.EventDescriptor> 紧跟在<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>之前调用此方法"
  syntax:
    content: public void PreFilterEvents (System.Collections.IDictionary events);
    parameters:
    - id: events
      type: System.Collections.IDictionary
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>表示组件的类的事件的对象。 中的事件字典的键是事件名称。"
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  id: PreFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PreFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "当在派生类中重写，允许设计器将项添加到它通过公开的属性集<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>。"
  remarks: "此方法使您能够将项添加到设计器通过一种<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>来公开的属性的字典       属性的字典中的键是属性的名称。 对象属于类型<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 紧跟在<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>之前调用此方法"
  syntax:
    content: public void PreFilterProperties (System.Collections.IDictionary properties);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>表示组件的类的属性的对象。 属性的字典中的键是属性名称。"
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PostFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PostFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PostFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PreFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PreFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PreFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterAttributes
  nameWithType: IDesignerFilter.PostFilterAttributes
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterEvents
  nameWithType: IDesignerFilter.PostFilterEvents
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterProperties
  nameWithType: IDesignerFilter.PostFilterProperties
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterAttributes
  nameWithType: IDesignerFilter.PreFilterAttributes
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterEvents
  nameWithType: IDesignerFilter.PreFilterEvents
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterProperties
  nameWithType: IDesignerFilter.PreFilterProperties
