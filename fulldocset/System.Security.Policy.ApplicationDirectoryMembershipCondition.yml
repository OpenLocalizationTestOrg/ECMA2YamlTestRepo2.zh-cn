### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition
  id: ApplicationDirectoryMembershipCondition
  children:
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml
  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)
  langs:
  - csharp
  name: ApplicationDirectoryMembershipCondition
  nameWithType: ApplicationDirectoryMembershipCondition
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition
  type: Class
  summary: "确定是否该程序集属于的代码组通过测试其应用程序目录。 此类不能被继承。"
  remarks: "ApplicationDirectoryMembershipCondition determines whether an <xref:System.Security.Policy.ApplicationDirectory><xref:System.Security.Policy.ApplicationDirectory.Directory%2A> property contains the assembly URL evidence path. For example, if the <xref:System.Security.Policy.ApplicationDirectory> is C:\\app1, assemblies with URL evidence such as C:\\app1, C:\\app1\\main.aspx, C:\\app1\\folder1, or C:\\app1\\folder1\\main1.aspx match this membership condition. Code that is not in the C:\\app1 directory or in one of its subdirectories fails this membership condition test.  \n  \n Code without either <xref:System.Security.Policy.ApplicationDirectory> or <xref:System.Security.Policy.Url> evidence always fails this membership condition test.  \n  \n> [!NOTE]\n>  The membership condition is determined by the URL evidence for the application. You cannot configure the ApplicationDirectoryMembershipCondition object; it is predetermined by the location of the application."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationDirectoryMembershipCondition
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor
  id: '#ctor'
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: ApplicationDirectoryMembershipCondition()
  nameWithType: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "初始化的新实例<xref href=&quot;System.Security.Policy.ApplicationDirectoryMembershipCondition&quot;></xref>类。"
  remarks: "成员资格条件测试程序集的 URL 证据是否内<xref:System.Security.Policy.ApplicationDirectory>.</xref:System.Security.Policy.ApplicationDirectory>指定的目录的路径"
  syntax:
    content: public ApplicationDirectoryMembershipCondition ();
    parameters: []
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)
  id: Check(System.Security.Policy.Evidence)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: Check(Evidence)
  nameWithType: ApplicationDirectoryMembershipCondition.Check(Evidence)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "确定是否将成员资格条件满足指定的证据的。"
  remarks: "`evidence`参数必须同时包含<xref:System.Security.Policy.ApplicationDirectory>指定运行的应用程序的应用程序目录的证据和<xref:System.Security.Policy.Url>指定基本代码的程序集的证据。</xref:System.Security.Policy.Url> </xref:System.Security.Policy.ApplicationDirectory> 指定代码<xref:System.Security.Policy.Url>证据必须表示在指定的应用程序目录的目录树中的路径<xref:System.Security.Policy.ApplicationDirectory>用于此方法以返回的证据`true`。</xref:System.Security.Policy.ApplicationDirectory> </xref:System.Security.Policy.Url>"
  syntax:
    content: public bool Check (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "设置对其进行测试的证据。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的证据满足成员资格条件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy
  id: Copy
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: Copy()
  nameWithType: ApplicationDirectoryMembershipCondition.Copy()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "创建成员资格条件的等效副本。"
  syntax:
    content: public System.Security.Policy.IMembershipCondition Copy ();
    parameters: []
    return:
      type: System.Security.Policy.IMembershipCondition
      description: "当前的成员资格条件的完全相同的新副本。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ApplicationDirectoryMembershipCondition.Equals(Object)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "确定指定的成员资格条件是否都<xref href=&quot;System.Security.Policy.ApplicationDirectoryMembershipCondition&quot;> </xref>。"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要比较的对象<xref href=&quot;System.Security.Policy.ApplicationDirectoryMembershipCondition&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的成员资格条件为<xref href=&quot;System.Security.Policy.ApplicationDirectoryMembershipCondition&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "重新构造具有指定状态的 XML 编码的安全对象。"
  syntax:
    content: public void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "编码用于重新构造安全对象的 XML。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> e </code>参数不是有效的应用程序目录成员资格条件元素。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: FromXml(SecurityElement,PolicyLevel)
  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "重新构造具有指定状态的 XML 编码的安全对象。"
  syntax:
    content: public void FromXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "编码用于重新构造安全对象的 XML。"
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "策略级别上下文，用于解析命名的权限集引用。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> e </code>参数不是有效的应用程序目录成员资格条件元素。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ApplicationDirectoryMembershipCondition.GetHashCode()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "获取当前的成员资格条件的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前的成员资格条件哈希代码。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString
  id: ToString
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: ToString()
  nameWithType: ApplicationDirectoryMembershipCondition.ToString()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "创建并返回的字符串表示形式的成员资格条件。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字符串表示形式的成员资格条件的状态。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml
  id: ToXml
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: ToXml()
  nameWithType: ApplicationDirectoryMembershipCondition.ToXml()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "创建安全对象及其当前状态的 XML 编码。"
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "安全对象，包括任何状态信息的 XML 编码。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)
  id: ToXml(System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  langs:
  - csharp
  name: ToXml(PolicyLevel)
  nameWithType: ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "创建安全对象具有指定其当前状态的 XML 编码<xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref>。"
  syntax:
    content: public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);
    parameters:
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "解决命名的权限的策略级别上下文设置引用。"
    return:
      type: System.Security.SecurityElement
      description: "安全对象，包括任何状态信息的 XML 编码。"
  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: ApplicationDirectoryMembershipCondition()
  nameWithType: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: Check(Evidence)
  nameWithType: ApplicationDirectoryMembershipCondition.Check(Evidence)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(Evidence)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: Copy()
  nameWithType: ApplicationDirectoryMembershipCondition.Copy()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy()
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: Equals(Object)
  nameWithType: ApplicationDirectoryMembershipCondition.Equals(Object)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(Object)
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: FromXml(SecurityElement,PolicyLevel)
  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: GetHashCode()
  nameWithType: ApplicationDirectoryMembershipCondition.GetHashCode()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: ToString()
  nameWithType: ApplicationDirectoryMembershipCondition.ToString()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: ToXml()
  nameWithType: ApplicationDirectoryMembershipCondition.ToXml()
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml()
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: ToXml(PolicyLevel)
  nameWithType: ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)
  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor*
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: ApplicationDirectoryMembershipCondition
  nameWithType: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check*
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: Check
  nameWithType: ApplicationDirectoryMembershipCondition.Check
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy*
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: Copy
  nameWithType: ApplicationDirectoryMembershipCondition.Copy
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals*
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: Equals
  nameWithType: ApplicationDirectoryMembershipCondition.Equals
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: FromXml
  nameWithType: ApplicationDirectoryMembershipCondition.FromXml
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode*
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: GetHashCode
  nameWithType: ApplicationDirectoryMembershipCondition.GetHashCode
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString*
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: ToString
  nameWithType: ApplicationDirectoryMembershipCondition.ToString
- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*
  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition
  isExternal: false
  name: ToXml
  nameWithType: ApplicationDirectoryMembershipCondition.ToXml
