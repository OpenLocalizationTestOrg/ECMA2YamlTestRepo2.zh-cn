### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.ArcSegment
  id: ArcSegment
  children:
  - System.Windows.Media.ArcSegment.#ctor
  - System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  - System.Windows.Media.ArcSegment.Clone
  - System.Windows.Media.ArcSegment.CloneCurrentValue
  - System.Windows.Media.ArcSegment.CreateInstanceCore
  - System.Windows.Media.ArcSegment.IsLargeArc
  - System.Windows.Media.ArcSegment.IsLargeArcProperty
  - System.Windows.Media.ArcSegment.Point
  - System.Windows.Media.ArcSegment.PointProperty
  - System.Windows.Media.ArcSegment.RotationAngle
  - System.Windows.Media.ArcSegment.RotationAngleProperty
  - System.Windows.Media.ArcSegment.Size
  - System.Windows.Media.ArcSegment.SizeProperty
  - System.Windows.Media.ArcSegment.SweepDirection
  - System.Windows.Media.ArcSegment.SweepDirectionProperty
  langs:
  - csharp
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
  type: Class
  summary: "表示两个点之间的一条椭圆弧。"
  remarks: "使用<xref:System.Windows.Media.PathFigure>要存储 ArcSegment 对象和其他段对象。</xref:System.Windows.Media.PathFigure>       一条椭圆弧由其起点和终点，x 轴半径和 y 的半径，x 轴旋转的比例，值，该值指示弧是否应大于 180 度和一个描述的方向绘制弧将值定义。 ArcSegment 类不包含弧线; 的起始点的属性它仅定义了它所代表的圆弧的终点。 圆弧的起点是当前的点<xref:System.Windows.Media.PathFigure>向其添加 ArcSegment。</xref:System.Windows.Media.PathFigure>       下图演示不同的终结点， <xref:System.Windows.Media.ArcSegment.Size%2A>，和<xref:System.Windows.Media.ArcSegment.RotationAngle%2A>设置。</xref:System.Windows.Media.ArcSegment.RotationAngle%2A> </xref:System.Windows.Media.ArcSegment.Size%2A>       ![具有不同 Point 设置的 Arcsegment](~/add/media/arcsegment-point.png &quot;具有不同 Point 设置的 Arcsegment&quot;)![具有不同 Size 设置的 Arcsegment](~/add/media/arcsegment-size.png &quot;具有不同 Size 设置的 Arcsegment&quot;)![具有不同 RotationAngle 设置的 Arcsegment](~/add/media/arcsegment-rotationangle.png &quot;具有不同 RotationAngle 设置的 Arcsegment&quot;) # # IsLargeArc 和 SweepDirection 对于大多数弧的特定位置、 大小和轮换，有四个不同弧可绘制;<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>和<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>属性指示要使用哪些弧线。</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>                     四个候选弧线扫描，两个表示大弧扫描的 180 度或更高版本，另外两个表示与扫描 180 度或更少的小弧。 如果<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>是**true**，则两个较大弧线扫描之一是选; 否则为如果是**false**、 一个较小弧的选择扫描。</xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> 剩余的两个弧候选每绘制在一个不同的方向︰<xref:System.Windows.Media.SweepDirection>或<xref:System.Windows.Media.SweepDirection>。</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>属性指定要使用哪一种。</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       下图显示了不同<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>和<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>设置。</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       ![具有不同 IsLargeArc 设置的 Arcsegment](~/add/media/arcsegment-islargearc.png &quot;具有不同 IsLargeArc 设置的 Arcsegment&quot;)具有不同 IsLargeArc 设置的 ArcSegment 对象![具有不同 SweepDirection 设置的 Arcsegment](~/add/media/arcsegment-sweepdirection.png &quot;具有不同 SweepDirection 设置的 Arcsegment&quot;)具有不同 SweepDirection 设置的 ArcSegment 对象 # # 可冻结功能 ArcSegment 是一种<xref:System.Windows.Freezable>对象。</xref:System.Windows.Freezable> 璝惠<xref:System.Windows.Freezable>功能，如冻结和克隆，请参阅[可冻结对象概述](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Freezable>"
  syntax:
    content: 'public sealed class ArcSegment : System.Windows.Media.PathSegment'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.PathSegment
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.PathSegment.IsSmoothJoin
  - System.Windows.Media.PathSegment.IsSmoothJoinProperty
  - System.Windows.Media.PathSegment.IsStroked
  - System.Windows.Media.PathSegment.IsStrokedProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.#ctor
  id: '#ctor'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref>类。"
  remarks: "<xref:System.Windows.Media.ArcSegment>类定义只有段弧线，它表示的目标点; 圆弧的起点是当前的点<xref:System.Windows.Media.PathFigure>到其<xref:System.Windows.Media.ArcSegment>添加。</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       对于最椭圆弧的特定位置、 大小和轮换，有四个不同弧可绘制;`largeArc`和`sweepDirection`参数指示要使用哪些弧。       四个候选弧线扫描，两个表示大弧扫描的 180 度或更高版本，另外两个表示与扫描 180 度或更少的小弧。 如果`largeArc`是**true**，则两个较大弧线扫描之一是选; 否则为如果`largeArc`是**false**、 一个较小弧的选择扫描。       如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection>，按正角方向绘制弧。</xref:System.Windows.Media.SweepDirection> 如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection>，按负角方向绘制弧。</xref:System.Windows.Media.SweepDirection>"
  syntax:
    content: public ArcSegment ();
    parameters: []
  overload: System.Windows.Media.ArcSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  id: '#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新实例<xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref>类。"
  remarks: "<xref:System.Windows.Media.ArcSegment>类定义只有段弧线，它表示的目标点; 圆弧的起点是当前的点<xref:System.Windows.Media.PathFigure>到其<xref:System.Windows.Media.ArcSegment>添加。</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       对于最椭圆弧的特定位置、 大小和轮换，有四个不同弧可绘制;`largeArc`和`sweepDirection`参数指示要使用哪些弧。       四个候选弧线扫描，两个表示大弧扫描的 180 度或更高版本，另外两个表示与扫描 180 度或更少的小弧。 如果`largeArc`是**true**，则两个较大弧线扫描之一是选; 否则为如果`largeArc`是**false**、 一个较小弧的选择扫描。       如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection>，按正角方向绘制弧。</xref:System.Windows.Media.SweepDirection> 如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection>，按负角方向绘制弧。</xref:System.Windows.Media.SweepDirection>"
  syntax:
    content: public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "弧; 的目标点弧线的起始点定义的当前点为<xref href=&quot;System.Windows.Media.PathFigure&quot;></xref>到<xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref>添加。"
    - id: size
      type: System.Windows.Size
      description: "圆弧 x 轴半径和 y 轴半径。 X 轴半径由<xref href=&quot;System.Windows.Size&quot;></xref>结构的<> *1> 属性，且 y 轴半径由指定<xref href=&quot;System.Windows.Size&quot;></xref>结构的<> *1> 属性。"
    - id: rotationAngle
      type: System.Double
      description: "椭圆的 x 轴旋转。"
    - id: isLargeArc
      type: System.Boolean
      description: "是否弧应大于 180 度。"
    - id: sweepDirection
      type: System.Windows.Media.SweepDirection
      description: "设置为<xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref>绘制圆弧正角方向; 设置为<xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref>要按负角方向绘制弧。"
    - id: isStroked
      type: System.Boolean
      description: "设置为`true`以绘制圆弧时<xref href=&quot;System.Windows.Media.Pen&quot;> </xref> ; 否则为将使用呈现线段`false`。"
  overload: System.Windows.Media.ArcSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Clone
  id: Clone
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Clone()
  nameWithType: ArcSegment.Clone()
  fullName: System.Windows.Media.ArcSegment.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref>，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定 （但可能不再解析），但不是动画或其当前值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的强类型实现的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.ArcSegment Clone ();
    parameters: []
    return:
      type: System.Windows.Media.ArcSegment
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性将为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.ArcSegment.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: ArcSegment.CloneCurrentValue()
  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref>对象，从而深度复制此对象的当前值。 不复制资源引用、 数据绑定和动画，而其当前值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的强类型实现的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.ArcSegment CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.ArcSegment
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性将为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.ArcSegment.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ArcSegment.CreateInstanceCore()
  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Media.ArcSegment.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  id: IsLargeArc
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置一个值，该值指示弧是否应大于 180 度。"
  remarks: "对于大多数弧的特定位置、 大小和轮换，有四个不同弧可绘制;IsLargeArc 和<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>属性指示要使用哪些弧线。</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       四个候选弧线扫描，两个表示大弧扫描的 180 度或更高版本，另外两个表示与扫描 180 度或更少的小弧。 如果 IsLargeArc **true**，两个较大弧线扫描之一则选; 否则为如果是**false**、 一个较小弧的选择扫描。 剩余的两个弧候选每绘制在一个不同的方向︰<xref:System.Windows.Media.SweepDirection>或<xref:System.Windows.Media.SweepDirection>。</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>属性指定要使用哪一种。</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       下图显示相同除外其 IsLargeArc 设置的两条椭圆弧。       ![具有不同 IsLargeArc 设置的 Arcsegment](~/add/media/arcsegment-islargearc.png &quot;具有不同 IsLargeArc 设置的 Arcsegment&quot;)具有不同 IsLargeArc 设置的 ArcSegment 对象<a name=&quot;dependencyPropertyInfo_IsLargeArc&quot;> </a> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|  |元数据属性设置为**true**|None |</xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>"
  syntax:
    content: public bool IsLargeArc { get; set; }
    return:
      type: System.Boolean
      description: '**true**如果弧应大于 180 度; 否则为**false**。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。'
  overload: System.Windows.Media.ArcSegment.IsLargeArc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  id: IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "标识<xref:System.Windows.Media.ArcSegment.IsLargeArc*>依赖项属性。</xref:System.Windows.Media.ArcSegment.IsLargeArc*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsLargeArcProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Point
  id: Point
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置椭圆弧的终结点。"
  remarks: "<xref:System.Windows.Media.ArcSegment>类定义只有段弧线，它表示的目标点; 圆弧的起点是当前的点<xref:System.Windows.Media.PathFigure>到<xref:System.Windows.Media.ArcSegment>添加。</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       如果圆弧线段的起点和终点都相同的不能绘制弧。       对于大多数弧的特定位置、 大小和轮换，有四个不同弧可绘制;<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>和<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>属性指示要使用哪些弧线。</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       四个候选弧线扫描，两个表示大弧扫描的 180 度或更高版本，另外两个表示与扫描 180 度或更少的小弧。 如果<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>是**true**，则两个较大弧线扫描之一是选; 否则为如果是**false**、 一个较小弧的选择扫描。</xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> 剩余的两个弧候选每绘制在一个不同的方向︰<xref:System.Windows.Media.SweepDirection>或<xref:System.Windows.Media.SweepDirection>。</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>属性指定要使用哪一种。</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       下图显示相同除外其点设置的几条椭圆弧。       ![具有不同 Point 设置的 Arcsegment](~/add/media/arcsegment-point.png &quot;具有不同 Point 设置的 Arcsegment&quot;)具有不同 Point 设置的多个 ArcSegment 对象<a name=&quot;dependencyPropertyInfo_Point&quot;> </a> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.ArcSegment.PointProperty>|  |元数据属性设置为**true**|None |</xref:System.Windows.Media.ArcSegment.PointProperty>"
  syntax:
    content: public System.Windows.Point Point { get; set; }
    return:
      type: System.Windows.Point
      description: "点到绘制弧。 默认值为 (0，0)。"
  overload: System.Windows.Media.ArcSegment.Point*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.PointProperty
  id: PointProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "标识<xref:System.Windows.Media.ArcSegment.Point*>依赖项属性。</xref:System.Windows.Media.ArcSegment.Point*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PointProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.RotationAngle
  id: RotationAngle
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置旋转的量 （以度为单位） 的椭圆围绕 x 轴。"
  remarks: "下图显示相同除外其 RotationAngle 设置的几条椭圆弧。       ![具有不同 RotationAngle 设置的 Arcsegment](~/add/media/arcsegment-rotationangle.png &quot;具有不同 RotationAngle 设置的 Arcsegment&quot;)具有不同 RotationAngle 设置的多个 ArcSegment 对象请注意，是否弧的宽度和高度相同，将此属性设置不起作用。      <a name=&quot;dependencyPropertyInfo_RotationAngle&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|  |元数据属性设置为**true**|None |</xref:System.Windows.Media.ArcSegment.RotationAngleProperty>"
  syntax:
    content: public double RotationAngle { get; set; }
    return:
      type: System.Double
      description: "旋转的量 （以度为单位） 的椭圆围绕 x 轴。 默认值为 0"
  overload: System.Windows.Media.ArcSegment.RotationAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  id: RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "标识<xref:System.Windows.Media.ArcSegment.RotationAngle*>依赖项属性。</xref:System.Windows.Media.ArcSegment.RotationAngle*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RotationAngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Size
  id: Size
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置 x-半径和 y 轴半径作为弧的<xref href=&quot;System.Windows.Size&quot;></xref>结构。"
  remarks: "下图显示相同但其大小设置除外的几条椭圆弧。       ![具有不同 Size 设置的 Arcsegment](~/add/media/arcsegment-size.png &quot;具有不同 Size 设置的 Arcsegment&quot;)具有不同 Size 设置的多个 ArcSegment 对象<a name=&quot;dependencyPropertyInfo_Size&quot;> </a> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.ArcSegment.SizeProperty>|  |元数据属性设置为**true**|None |</xref:System.Windows.Media.ArcSegment.SizeProperty>"
  syntax:
    content: public System.Windows.Size Size { get; set; }
    return:
      type: System.Windows.Size
      description: "A <xref href=&quot;System.Windows.Size&quot;> </xref>描述 x-半径和 y 轴半径椭圆弧的结构。 <xref href=&quot;System.Windows.Size&quot;> </xref>结构的<> *1> 属性指定弧的 x 轴半径; 其<> *1> 属性指定弧的 y 轴半径。 默认值为 0，0。"
  overload: System.Windows.Media.ArcSegment.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SizeProperty
  id: SizeProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "标识<xref:System.Windows.Media.ArcSegment.Size*>依赖项属性。</xref:System.Windows.Media.ArcSegment.Size*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SizeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SweepDirection
  id: SweepDirection
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "获取或设置一个值，指定是否绘制弧<xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref>或<xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref>方向。"
  remarks: "有关<xref:System.Windows.Media.ArcSegment>与给定<xref:System.Windows.Media.ArcSegment.Size%2A>， <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>、 开始点，日期和结束<xref:System.Windows.Media.ArcSegment.Point%2A>，可能会出现四个不同弧。</xref:System.Windows.Media.ArcSegment.Point%2A> </xref:System.Windows.Media.ArcSegment.RotationAngle%2A> </xref:System.Windows.Media.ArcSegment.Size%2A> </xref:System.Windows.Media.ArcSegment> 指定<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>属性可能弧数减少到两个︰ 到末尾从起始点绘制一段弧线<xref:System.Windows.Media.ArcSegment.Point%2A>中<xref:System.Windows.Media.SweepDirection>方向和终结点在从起始点绘制一段弧线<xref:System.Windows.Media.SweepDirection>方向。</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.ArcSegment.Point%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       下图显示相同除外其 SweepDirection 设置的两条椭圆弧。       ![具有不同 SweepDirection 设置的 Arcsegment](~/add/media/arcsegment-sweepdirection.png &quot;具有不同 SweepDirection 设置的 Arcsegment&quot;)具有不同 SweepDirection 设置的 ArcSegment 对象<a name=&quot;dependencyPropertyInfo_SweepDirection&quot;> </a> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|  |元数据属性设置为**true**|None |</xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>"
  syntax:
    content: public System.Windows.Media.SweepDirection SweepDirection { get; set; }
    return:
      type: System.Windows.Media.SweepDirection
      description: "一个值，指定在其中绘制弧的方向。 默认值是<xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref>。"
  overload: System.Windows.Media.ArcSegment.SweepDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  id: SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "标识<xref:System.Windows.Media.ArcSegment.SweepDirection*>依赖项属性。</xref:System.Windows.Media.ArcSegment.SweepDirection*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SweepDirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.PathSegment
  isExternal: false
  name: System.Windows.Media.PathSegment
- uid: System.Windows.Media.ArcSegment.#ctor
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.SweepDirection
  parent: System.Windows.Media
  isExternal: false
  name: SweepDirection
  nameWithType: SweepDirection
  fullName: System.Windows.Media.SweepDirection
- uid: System.Windows.Media.ArcSegment.Clone
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Clone()
  nameWithType: ArcSegment.Clone()
  fullName: System.Windows.Media.ArcSegment.Clone()
- uid: System.Windows.Media.ArcSegment
  parent: System.Windows.Media
  isExternal: false
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: ArcSegment.CloneCurrentValue()
  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ArcSegment.CreateInstanceCore()
  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.ArcSegment.Point
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
- uid: System.Windows.Media.ArcSegment.PointProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
- uid: System.Windows.Media.ArcSegment.RotationAngle
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
- uid: System.Windows.Media.ArcSegment.Size
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
- uid: System.Windows.Media.ArcSegment.SizeProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
- uid: System.Windows.Media.ArcSegment.SweepDirection
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
- uid: System.Windows.Media.ArcSegment.#ctor*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment
  nameWithType: ArcSegment.ArcSegment
- uid: System.Windows.Media.ArcSegment.Clone*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Clone
  nameWithType: ArcSegment.Clone
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CloneCurrentValue
  nameWithType: ArcSegment.CloneCurrentValue
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ArcSegment.CreateInstanceCore
- uid: System.Windows.Media.ArcSegment.IsLargeArc*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
- uid: System.Windows.Media.ArcSegment.Point*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Point
  nameWithType: ArcSegment.Point
- uid: System.Windows.Media.ArcSegment.RotationAngle*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
- uid: System.Windows.Media.ArcSegment.Size*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Size
  nameWithType: ArcSegment.Size
- uid: System.Windows.Media.ArcSegment.SweepDirection*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
