### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  id: XmlSchemaValidationFlags
  children:
  - System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  - System.Xml.Schema.XmlSchemaValidationFlags.None
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  - System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  langs:
  - csharp
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
  type: Enum
  summary: "指定使用的架构验证选项<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>和<xref:System.Xml.XmlReader>类。</xref:System.Xml.XmlReader>"
  remarks: "以下是需要考虑<xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader>使用 XmlSchemaValidationFlags 的值的事项      -XmlSchemaValidationFlags 值定义使用的架构验证的验证选项<xref:System.Xml.XmlReader>执行针对架构的 XML 验证。</xref:System.Xml.XmlReader> 用于验证 XmlSchemaValidationFlags 值<xref:System.Xml.XmlReader>使用指定<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>属性。</xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> </xref:System.Xml.XmlReader>       以下是使用 AllowXmlAttributes 值时要考虑的说明。      1.  当架构不导入的 Xml 命名空间。          1.  如果 AllowXmlAttributes 设置为`true`（默认值） 和实例文档包含的 Xml 属性，则验证引擎将加载默认 Xml 命名空间架构的快照并将其用于验证。 如果默认架构中，找不到实例文档中使用的 Xml 特性，将不会验证文档。          2.  如果 AllowXmlAttributes 设置为`false`并且实例文档包含 Xml 特性，则验证引擎将报告错误。      2.  当架构导入不带位置的 Xml 命名空间。          1.  如果 AllowXmlAttributes 设置为`true`（默认值） 和实例文档包含的 Xml 属性，验证引擎将使用默认 Xml 命名空间架构进行验证。 如果默认架构中，找不到实例文档中使用的 Xml 特性，将不会验证文档。          2.  如果 AllowXmlAttributes 设置为`false`并且实例文档包含未获得显式允许的架构验证引擎将报告错误的 Xml 特性。          3.  如果 AllowXmlAttributes 设置为`false`并且实例文档包含显式允许的架构验证引擎将验证这些特性相同的方式，它会验证其他属性使用的默认 Xml 命名空间架构的 Xml 特性。      3.  当架构导入自定义 Xml 命名空间架构 schemalocation 自定义。          1.  如果 AllowXmlAttributes 设置为`true`（默认值） 和实例文档包含的 Xml 属性，验证引擎将使用自定义 Xml 命名空间架构进行验证。 如果指定的架构中，找不到实例文档中使用的 Xml 特性，将不会验证文档。          2.  如果 AllowXmlAttributes 设置为`false`并且实例文档包含未获得显式允许的架构验证引擎将报告错误的 Xml 特性。          3.  如果 AllowXmlAttributes 设置为`false`并且实例文档包含显式允许的架构验证引擎将验证这些特性相同的方式，它会验证其他属性，使用指定的 Xml 命名空间架构的 Xml 特性。      4.  当架构定义 xml:*具有使用属性 =&quot;required&quot;。        1.以下情况适用时 AllowXmlAttributes 设置为`true`和`false`。必需的 xml:*属性应被视为其他属性，并使用指定的 Xml 命名空间架构进行验证。      5.  当架构定义 xml:*具有使用属性 =&quot;prohibited&quot;。        1.以下情况适用时 AllowXmlAttributes 设置为`true`和`false`。如果实例文档包含的 xml:*属性未显式禁止的架构，则验证引擎将报告错误。      6.  当架构指定属性通配符。          1.  如果实例文档包含一个 Xml 属性，该架构指定与省略或者设置为&quot;strict&quot;processcontents 的限制性属性通配符，则验证引擎将使用<xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet>中存在的 Xml 命名空间架构 如果不指定任何 Xml 命名空间架构，则验证引擎将如下所示。          2.  如果 AllowXmlAttributes 设置为`true`，验证引擎将使用默认 Xml 命名空间架构执行验证。          3.  如果 AllowXmlAttributes 设置为`false`，验证引擎将报告错误。          4.  如果实例文档包含一个 Xml 属性，该架构与 processcontents 的限制性设置为&quot;跳过&quot;指定属性通配符，则验证引擎将跳过属性验证。          5.  如果实例文档包含一个 Xml 属性，并且该架构与 processcontents 的限制性设置为&quot;宽松&quot;指定属性通配符，则验证引擎将使用<xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet>中存在的 Xml 命名空间架构 如果不指定任何 Xml 命名空间架构，则验证引擎将如下所示。          6.  如果 AllowXmlAttributes 设置为`true`，验证引擎将使用默认 Xml 命名空间架构执行验证。          7.  如果 AllowXmlAttributes 设置为`false`，属性验证将不会执行。      7.  在验证简单类型。          1.  当 AllowXmlAttributes 设置为`true`（默认值），将简单类型元素允许 Xml 属性。"
  example:
  - For an example of the XmlSchemaValidationFlags class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.
  syntax:
    content: >-
      [System.Flags]

      public enum XmlSchemaValidationFlags
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  id: AllowXmlAttributes
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: AllowXmlAttributes
  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "允许将 xml: * 属性即使它们未定义架构中。 将基于其数据类型验证属性。"
  syntax:
    content: AllowXmlAttributes
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.None
  id: None
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: None
  nameWithType: XmlSchemaValidationFlags.None
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "不处理标识约束、 内联架构、 架构位置提示或报表架构验证警告。"
  syntax:
    content: None
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  id: ProcessIdentityConstraints
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessIdentityConstraints
  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "处理标识约束 (`xs:ID`， `xs:IDREF`， `xs:key`， `xs:keyref`， `xs:unique`) 在验证期间遇到。"
  syntax:
    content: ProcessIdentityConstraints
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  id: ProcessInlineSchema
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessInlineSchema
  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "在验证期间遇到进程内联架构。"
  syntax:
    content: ProcessInlineSchema
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  id: ProcessSchemaLocation
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessSchemaLocation
  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "处理架构位置提示 (`xsi:schemaLocation`， `xsi:noNamespaceSchemaLocation`) 在验证期间遇到。"
  syntax:
    content: ProcessSchemaLocation
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  id: ReportValidationWarnings
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ReportValidationWarnings
  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "报告验证过程中遇到的架构验证警告。"
  syntax:
    content: ReportValidationWarnings
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: AllowXmlAttributes
  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidationFlags.None
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: None
  nameWithType: XmlSchemaValidationFlags.None
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessIdentityConstraints
  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessInlineSchema
  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessSchemaLocation
  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ReportValidationWarnings
  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
