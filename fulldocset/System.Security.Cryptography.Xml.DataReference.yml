### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.DataReference
  id: DataReference
  children:
  - System.Security.Cryptography.Xml.DataReference.#ctor
  - System.Security.Cryptography.Xml.DataReference.#ctor(System.String)
  - System.Security.Cryptography.Xml.DataReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  langs:
  - csharp
  name: DataReference
  nameWithType: DataReference
  fullName: System.Security.Cryptography.Xml.DataReference
  type: Class
  summary: "表示<xref uid=&quot;langword_csharp_&lt;DataReference&gt;&quot; name=&quot;&lt;DataReference&gt;&quot; href=&quot;&quot;> </xref> XML 加密中使用的元素。 此类不能被继承。"
  remarks: "DataReference 类表示`<DataReference>`包含用于 XML 加密的加密数据的位置的元素。       `<DataReference>`元素用于指`<EncryptedData>`使用封闭中定义的项已加密的元素`<EncryptedKey>`元素。 多个`<DataReference>`如果多个，则会发生元素`<EncryptedData>`元素存在使用相同的密钥进行加密。       有关 XML 加密标准的详细信息，请参阅 http://www.w3.org/TR/xmlenc-core/。"
  example:
  - "The following code example demonstrates how to use the DataReference class to encrypt and decrypt multiple XML elements using different session keys.  \n  \n [!code-cs[Cryptography.XML.DataReference#1](~/add/codesnippet/csharp/t-system.security.crypto_9_1.cs)]\n [!code-vb[Cryptography.XML.DataReference#1](~/add/codesnippet/visualbasic/t-system.security.crypto_9_1.vb)]"
  syntax:
    content: 'public sealed class DataReference : System.Security.Cryptography.Xml.EncryptedReference'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.EncryptedReference
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)
  - System.Security.Cryptography.Xml.EncryptedReference.CacheValid
  - System.Security.Cryptography.Xml.EncryptedReference.GetXml
  - System.Security.Cryptography.Xml.EncryptedReference.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
  - System.Security.Cryptography.Xml.EncryptedReference.TransformChain
  - System.Security.Cryptography.Xml.EncryptedReference.Uri
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataReference.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.DataReference
  langs:
  - csharp
  name: DataReference()
  nameWithType: DataReference.DataReference()
  fullName: System.Security.Cryptography.Xml.DataReference.DataReference()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Xml.DataReference&quot;></xref>类。"
  remarks: "此构造函数创建的新实例<xref:System.Security.Cryptography.Xml.DataReference>类，表示`<DataReference>`元素。</xref:System.Security.Cryptography.Xml.DataReference> `<DataReference>`是的子元素`<ReferenceList>`元素。       有关 XML 加密标准的详细信息，请参阅 http://www.w3.org/TR/xmlenc-core/。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Security.Cryptography.Xml.DataReference> class to encrypt and decrypt multiple XML elements using different session keys.  \n  \n [!code-cs[Cryptography.XML.DataReference#1](~/add/codesnippet/csharp/m-system.security.crypto_67_1.cs)]\n [!code-vb[Cryptography.XML.DataReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_67_1.vb)]"
  syntax:
    content: public DataReference ();
    parameters: []
  overload: System.Security.Cryptography.Xml.DataReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.DataReference
  langs:
  - csharp
  name: DataReference(String)
  nameWithType: DataReference.DataReference(String)
  fullName: System.Security.Cryptography.Xml.DataReference.DataReference(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Xml.DataReference&quot;></xref>类使用指定的统一资源标识符 (URI)。"
  remarks: "此构造函数使用指定的统一资源标识符 (URI) 创建的新实例<xref:System.Security.Cryptography.Xml.DataReference>类，该类表示`<DataReference>`元素。</xref:System.Security.Cryptography.Xml.DataReference> 此 URI 指示加密数据的位置。 `<DataReference>`元素是子元素的`<ReferenceList>`元素。       有关 XML 加密标准的详细信息，请参阅 http://www.w3.org/TR/xmlenc-core/。"
  syntax:
    content: public DataReference (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "指向已加密的数据统一资源标识符 (URI)。"
  overload: System.Security.Cryptography.Xml.DataReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  id: '#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)'
  parent: System.Security.Cryptography.Xml.DataReference
  langs:
  - csharp
  name: DataReference(String,TransformChain)
  nameWithType: DataReference.DataReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.DataReference.DataReference(String,TransformChain)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Xml.DataReference&quot;></xref>类使用指定的统一资源标识符 (URI) 和一个<xref href=&quot;System.Security.Cryptography.Xml.TransformChain&quot;></xref>对象。"
  remarks: "此构造函数使用指定的统一资源标识符 (URI) 和转换链创建的新实例<xref:System.Security.Cryptography.Xml.DataReference>类，该类表示`<DataReference>`元素。</xref:System.Security.Cryptography.Xml.DataReference> 此 URI 指示加密数据的位置和转换链可以包含 XPath 转换、 解压缩转换或如何从文档存储设备中检索加密的数据的信息。 `<DataReference>`是的子元素`<ReferenceList>`元素。       有关 XML 加密标准的详细信息，请参阅 http://www.w3.org/TR/xmlenc-core/。"
  syntax:
    content: public DataReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);
    parameters:
    - id: uri
      type: System.String
      description: "指向已加密的数据统一资源标识符 (URI)。"
    - id: transformChain
      type: System.Security.Cryptography.Xml.TransformChain
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.TransformChain&quot;> </xref>对象，描述对加密数据进行的转换。"
  overload: System.Security.Cryptography.Xml.DataReference.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: System.Security.Cryptography.Xml.EncryptedReference
- uid: System.Security.Cryptography.Xml.DataReference.#ctor
  parent: System.Security.Cryptography.Xml.DataReference
  isExternal: false
  name: DataReference()
  nameWithType: DataReference.DataReference()
  fullName: System.Security.Cryptography.Xml.DataReference.DataReference()
- uid: System.Security.Cryptography.Xml.DataReference.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.DataReference
  isExternal: false
  name: DataReference(String)
  nameWithType: DataReference.DataReference(String)
  fullName: System.Security.Cryptography.Xml.DataReference.DataReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.DataReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  parent: System.Security.Cryptography.Xml.DataReference
  isExternal: false
  name: DataReference(String,TransformChain)
  nameWithType: DataReference.DataReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.DataReference.DataReference(String,TransformChain)
- uid: System.Security.Cryptography.Xml.TransformChain
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: TransformChain
  nameWithType: TransformChain
  fullName: System.Security.Cryptography.Xml.TransformChain
- uid: System.Security.Cryptography.Xml.DataReference.#ctor*
  parent: System.Security.Cryptography.Xml.DataReference
  isExternal: false
  name: DataReference
  nameWithType: DataReference.DataReference
