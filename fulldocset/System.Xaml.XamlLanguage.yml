### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlLanguage
  id: XamlLanguage
  children:
  - System.Xaml.XamlLanguage.AllDirectives
  - System.Xaml.XamlLanguage.AllTypes
  - System.Xaml.XamlLanguage.Arguments
  - System.Xaml.XamlLanguage.Array
  - System.Xaml.XamlLanguage.AsyncRecords
  - System.Xaml.XamlLanguage.Base
  - System.Xaml.XamlLanguage.Boolean
  - System.Xaml.XamlLanguage.Byte
  - System.Xaml.XamlLanguage.Char
  - System.Xaml.XamlLanguage.Class
  - System.Xaml.XamlLanguage.ClassAttributes
  - System.Xaml.XamlLanguage.ClassModifier
  - System.Xaml.XamlLanguage.Code
  - System.Xaml.XamlLanguage.ConnectionId
  - System.Xaml.XamlLanguage.Decimal
  - System.Xaml.XamlLanguage.Double
  - System.Xaml.XamlLanguage.FactoryMethod
  - System.Xaml.XamlLanguage.FieldModifier
  - System.Xaml.XamlLanguage.Initialization
  - System.Xaml.XamlLanguage.Int16
  - System.Xaml.XamlLanguage.Int32
  - System.Xaml.XamlLanguage.Int64
  - System.Xaml.XamlLanguage.Items
  - System.Xaml.XamlLanguage.Key
  - System.Xaml.XamlLanguage.Lang
  - System.Xaml.XamlLanguage.Member
  - System.Xaml.XamlLanguage.Members
  - System.Xaml.XamlLanguage.Name
  - System.Xaml.XamlLanguage.Null
  - System.Xaml.XamlLanguage.Object
  - System.Xaml.XamlLanguage.PositionalParameters
  - System.Xaml.XamlLanguage.Property
  - System.Xaml.XamlLanguage.Reference
  - System.Xaml.XamlLanguage.Shared
  - System.Xaml.XamlLanguage.Single
  - System.Xaml.XamlLanguage.Space
  - System.Xaml.XamlLanguage.Static
  - System.Xaml.XamlLanguage.String
  - System.Xaml.XamlLanguage.Subclass
  - System.Xaml.XamlLanguage.SynchronousMode
  - System.Xaml.XamlLanguage.TimeSpan
  - System.Xaml.XamlLanguage.Type
  - System.Xaml.XamlLanguage.TypeArguments
  - System.Xaml.XamlLanguage.Uid
  - System.Xaml.XamlLanguage.UnknownContent
  - System.Xaml.XamlLanguage.Uri
  - System.Xaml.XamlLanguage.Xaml2006Namespace
  - System.Xaml.XamlLanguage.XamlNamespaces
  - System.Xaml.XamlLanguage.XData
  - System.Xaml.XamlLanguage.Xml1998Namespace
  - System.Xaml.XamlLanguage.XmlNamespaces
  langs:
  - csharp
  name: XamlLanguage
  nameWithType: XamlLanguage
  fullName: System.Xaml.XamlLanguage
  type: Class
  summary: "定义提供字符串或对于 XAML 标记或使用 XAML 类型进行的编程非常有用的对象的常量。 这些字符串或对象是 XAML 语言概念，实现的 XAML 语言概念在.NET Framework XAML 服务，或者对二者同时相关。"
  remarks: "XamlLanguage API 返回查找结果基于保持内部的 XAML 架构上下文。 在此架构上下文，<xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>是`true`。</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> 否则，为.NET Framework XAML 服务及其定义的 XAML 读取器和 XAML 编写器报告为默认值的 XAML 架构上下文使用默认设置。 总体上而言，适用于预定义的 XAML 读取器和 XAML 编写器的 XAML 架构上下文基于同一个<xref:System.Xaml.XamlSchemaContext>实例提供的 Api 的设置或返回一种<xref:System.Xaml.XamlSchemaContext>。</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlSchemaContext> .NET Framework XAML 服务的默认 XAML 架构上下文取决于 CLR 概念和反射。 获取为<xref:System.Xaml.XamlType>和检查<xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A>时</xref:System.Xaml.XamlType>某些 XamlLanguage 属性时，可以找到的默认 CLR 支持的证据 同样，XamlLanguage 属性都<xref:System.Xaml.XamlMember>具有 CLR <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>的基于反射的值</xref:System.Xaml.XamlMember>"
  syntax:
    content: public static class XamlLanguage
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.AllDirectives
  id: AllDirectives
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: AllDirectives
  nameWithType: XamlLanguage.AllDirectives
  fullName: System.Xaml.XamlLanguage.AllDirectives
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取的只读泛型集合，每个<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>由.NET Framework XAML 服务定义的标识符。"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Xaml.XamlDirective> AllDirectives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Xaml.XamlDirective}
      description: "只读泛型集合的每个<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>由.NET Framework XAML 服务定义的标识符。"
  overload: System.Xaml.XamlLanguage.AllDirectives*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.AllTypes
  id: AllTypes
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: AllTypes
  nameWithType: XamlLanguage.AllTypes
  fullName: System.Xaml.XamlLanguage.AllTypes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取单个的只读泛型集合<xref href=&quot;System.Xaml.XamlType&quot;></xref>值相匹配，或别名，XAML 语言内部函数由.NET Framework XAML 服务定义。"
  remarks: "请参阅[ \\[MS-XAML\\] 5.2 部分](http://go.microsoft.com/fwlink/?LinkId=114525)有关内部 XAML 语言的信息项的列表。 请注意，不是所有作为 5.2 子节列出的项作为实现的一种<xref:System.Xaml.XamlType>。</xref:System.Xaml.XamlType> 例如，`x:Code`不是类型。"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Xaml.XamlType> AllTypes { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Xaml.XamlType}
      description: "只读泛型集合的每个<xref href=&quot;System.Xaml.XamlType&quot;></xref>与内部函数的 XAML 语言相匹配。"
  overload: System.Xaml.XamlLanguage.AllTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Arguments
  id: Arguments
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Arguments
  nameWithType: XamlLanguage.Arguments
  fullName: System.Xaml.XamlLanguage.Arguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Arguments&quot; name=&quot;Arguments&quot; href=&quot;&quot;></xref>的工厂方法或泛型的使用情况。"
  remarks: "工厂方法是[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]功能，用于标识构造 XAML 类型的基础类型的另一种方法。 `Arguments`指定的工厂方法的输入和启用在标记中指定该信息。 缺少工厂方法时的默认技术是尝试查找默认构造函数，然后尝试查找类型、 成员或目标类型标识的类型转换器。       对于泛型的用法，`Arguments`包装对象或指定为所需的所有构造输入的初始化文本`TypeArguments`。"
  syntax:
    content: public static System.Xaml.XamlDirective Arguments { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Arguments&quot; name=&quot;Arguments&quot; href=&quot;&quot;></xref>的工厂方法或泛型的使用情况。"
  overload: System.Xaml.XamlLanguage.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Array
  id: Array
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Array
  nameWithType: XamlLanguage.Array
  fullName: System.Xaml.XamlLanguage.Array
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Array&quot; name=&quot;Array&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.18 节](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Array { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Array&quot; name=&quot;Array&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Array*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.AsyncRecords
  id: AsyncRecords
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: AsyncRecords
  nameWithType: XamlLanguage.AsyncRecords
  fullName: System.Xaml.XamlLanguage.AsyncRecords
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_AsyncRecords&quot; name=&quot;AsyncRecords&quot; href=&quot;&quot;></xref>伪成员。"
  remarks: "`AsyncRecords`概念是属于[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]。 请参阅[XAML 2009 语言功能](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.Xaml.XamlDirective AsyncRecords { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_AsyncRecords&quot; name=&quot;AsyncRecords&quot; href=&quot;&quot;></xref>伪成员。"
  overload: System.Xaml.XamlLanguage.AsyncRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Base
  id: Base
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Base
  nameWithType: XamlLanguage.Base
  fullName: System.Xaml.XamlLanguage.Base
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_base&quot; name=&quot;base&quot; href=&quot;&quot;></xref>指令从 XML。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.3.15](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective Base { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_base&quot; name=&quot;base&quot; href=&quot;&quot;></xref>指令从 XML。"
  overload: System.Xaml.XamlLanguage.Base*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Boolean
  id: Boolean
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Boolean
  nameWithType: XamlLanguage.Boolean
  fullName: System.Xaml.XamlLanguage.Boolean
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.17](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Boolean { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Boolean*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Byte
  id: Byte
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Byte
  nameWithType: XamlLanguage.Byte
  fullName: System.Xaml.XamlLanguage.Byte
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.10](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Byte { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Byte*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Char
  id: Char
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Char
  nameWithType: XamlLanguage.Char
  fullName: System.Xaml.XamlLanguage.Char
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.7](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Char { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Char*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Class
  id: Class
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Class
  nameWithType: XamlLanguage.Class
  fullName: System.Xaml.XamlLanguage.Class
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Class&quot; name=&quot;Class&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.3.7](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective Class { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Class&quot; name=&quot;Class&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.Class*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.ClassAttributes
  id: ClassAttributes
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: ClassAttributes
  nameWithType: XamlLanguage.ClassAttributes
  fullName: System.Xaml.XamlLanguage.ClassAttributes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_ClassAttributes&quot; name=&quot;ClassAttributes&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "此指令属于[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]。 请参阅[XAML 2009 语言功能](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.Xaml.XamlDirective ClassAttributes { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_ClassAttributes&quot; name=&quot;ClassAttributes&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.ClassAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.ClassModifier
  id: ClassModifier
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: ClassModifier
  nameWithType: XamlLanguage.ClassModifier
  fullName: System.Xaml.XamlLanguage.ClassModifier
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_ClassModifier&quot; name=&quot;ClassModifier&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.3.9](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective ClassModifier { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_ClassModifier&quot; name=&quot;ClassModifier&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.ClassModifier*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Code
  id: Code
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Code
  nameWithType: XamlLanguage.Code
  fullName: System.Xaml.XamlLanguage.Code
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Code&quot; name=&quot;Code&quot; href=&quot;&quot;></xref>详见 [MS-XAML]。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.22](http://go.microsoft.com/fwlink/?LinkId=114525)，其中`Code`指示为类型; 但是，`Code`作为提供<xref:System.Xaml.XamlDirective>通过此 API。</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public static System.Xaml.XamlDirective Code { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Code&quot; name=&quot;Code&quot; href=&quot;&quot;></xref>详见 [MS-XAML]。"
  overload: System.Xaml.XamlLanguage.Code*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.ConnectionId
  id: ConnectionId
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: ConnectionId
  nameWithType: XamlLanguage.ConnectionId
  fullName: System.Xaml.XamlLanguage.ConnectionId
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>标识用于将事件写入处理程序的连接点。"
  syntax:
    content: public static System.Xaml.XamlDirective ConnectionId { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>标识用于将事件写入处理程序的连接点。"
  overload: System.Xaml.XamlLanguage.ConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Decimal
  id: Decimal
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Decimal
  nameWithType: XamlLanguage.Decimal
  fullName: System.Xaml.XamlLanguage.Decimal
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.14](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Decimal { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Decimal*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Double
  id: Double
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Double
  nameWithType: XamlLanguage.Double
  fullName: System.Xaml.XamlLanguage.Double
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.9](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Double { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Double*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.FactoryMethod
  id: FactoryMethod
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: FactoryMethod
  nameWithType: XamlLanguage.FactoryMethod
  fullName: System.Xaml.XamlLanguage.FactoryMethod
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> XAML 的标识的工厂方法。"
  remarks: "工厂方法是[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]功能，用于标识构造 XAML 类型的基础类型的另一种方法。 默认值的方法的工厂方法不可用，如果是尝试查找默认构造函数，然后再尝试查找类型、 成员或目标类型上标识的类型转换器。"
  syntax:
    content: public static System.Xaml.XamlDirective FactoryMethod { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> XAML 的标识的工厂方法。"
  overload: System.Xaml.XamlLanguage.FactoryMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.FieldModifier
  id: FieldModifier
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: FieldModifier
  nameWithType: XamlLanguage.FieldModifier
  fullName: System.Xaml.XamlLanguage.FieldModifier
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_FieldModifier&quot; name=&quot;FieldModifier&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.3.10](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective FieldModifier { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_FieldModifier&quot; name=&quot;FieldModifier&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.FieldModifier*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Initialization
  id: Initialization
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Initialization
  nameWithType: XamlLanguage.Initialization
  fullName: System.Xaml.XamlLanguage.Initialization
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Initialization&quot; name=&quot;Initialization&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "This directive represents the XAML node or XAML information set representation of initialization text, where a string within an object element supplies the type construction information for the surrounding object element.  \n  \n If you are looking at raw node interpretations or visualizations, `Initialization` is sometimes seen in string form as `_Initialization` (note the leading underscore) and is within the XAML language XAML namespace (as notated by a preceding `Namespace` node). In [MS-XAML], this concept is described under the heading `x:InitializationText`. See [\\[MS-XAML\\] Section 5.3.3](http://go.microsoft.com/fwlink/?LinkId=114525)."
  syntax:
    content: public static System.Xaml.XamlDirective Initialization { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Initialization&quot; name=&quot;Initialization&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.Initialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Int16
  id: Int16
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Int16
  nameWithType: XamlLanguage.Int16
  fullName: System.Xaml.XamlLanguage.Int16
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.11](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Int16 { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Int16*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Int32
  id: Int32
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Int32
  nameWithType: XamlLanguage.Int32
  fullName: System.Xaml.XamlLanguage.Int32
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分第 5.2.12](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Int32 { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Int32*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Int64
  id: Int64
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Int64
  nameWithType: XamlLanguage.Int64
  fullName: System.Xaml.XamlLanguage.Int64
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Int64&quot; name=&quot;Int64&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.13](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Int64 { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Int64&quot; name=&quot;Int64&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Int64*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Items
  id: Items
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Items
  nameWithType: XamlLanguage.Items
  fullName: System.Xaml.XamlLanguage.Items
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "An `Items` directive is a node representation wrapper around multiple object values within a surrounding object. See [\\[MS-XAML\\] Section 5.3.1](http://go.microsoft.com/fwlink/?LinkId=114525).  \n  \n If you examine raw XAML node stream interpretations or visualizations, `Items` is sometimes seen in string form as `_Items` (note the leading underscore) and is within the XAML language XAML namespace (as notated by a preceding `Namespace` node)."
  syntax:
    content: public static System.Xaml.XamlDirective Items { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Key
  id: Key
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Key
  nameWithType: XamlLanguage.Key
  fullName: System.Xaml.XamlLanguage.Key
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Key&quot; name=&quot;Key&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "A`Key`指令用于字典中的对象。 请参阅[ \\[MS-XAML\\]部分 5.3.5](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective Key { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Key&quot; name=&quot;Key&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Lang
  id: Lang
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Lang
  nameWithType: XamlLanguage.Lang
  fullName: System.Xaml.XamlLanguage.Lang
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_lang&quot; name=&quot;lang&quot; href=&quot;&quot;></xref>指令从 XML。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.3.13](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective Lang { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_lang&quot; name=&quot;lang&quot; href=&quot;&quot;></xref>指令从 XML。"
  overload: System.Xaml.XamlLanguage.Lang*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Member
  id: Member
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Member
  nameWithType: XamlLanguage.Member
  fullName: System.Xaml.XamlLanguage.Member
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>是<xref:System.Xaml.XamlLanguage.Members*>.</xref:System.Xaml.XamlLanguage.Members*>的项类型的类型"
  remarks: "在.NET Framework XAML 服务实现中， `Member` <xref:System.Xaml.XamlType>由<xref:System.Windows.Markup.MemberDefinition?displayProperty=fullName>.</xref:System.Windows.Markup.MemberDefinition?displayProperty=fullName>支持</xref:System.Xaml.XamlType>"
  syntax:
    content: public static System.Xaml.XamlType Member { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>是<xref:System.Xaml.XamlLanguage.Members*>.</xref:System.Xaml.XamlLanguage.Members*>的项类型的类型"
  overload: System.Xaml.XamlLanguage.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Members
  id: Members
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Members
  nameWithType: XamlLanguage.Members
  fullName: System.Xaml.XamlLanguage.Members
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Members&quot; name=&quot;Members&quot; href=&quot;&quot;></xref>在 XAML 中的概念。"
  remarks: "`Members`概念 [MS-XAML] 中未专门定义。 `Members`是标记本身，而不是引用后备类型中定义的类型成员的概念。 有关详细信息，请参阅<xref:System.Windows.Markup.PropertyDefinition>。</xref:System.Windows.Markup.PropertyDefinition>"
  syntax:
    content: public static System.Xaml.XamlDirective Members { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Members&quot; name=&quot;Members&quot; href=&quot;&quot;></xref>在 XAML 中的概念。"
  overload: System.Xaml.XamlLanguage.Members*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Name
  id: Name
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Name
  nameWithType: XamlLanguage.Name
  fullName: System.Xaml.XamlLanguage.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "A `Name` directive is used for identifiers of objects in markup. See [\\[MS-XAML\\] Section 5.3.4](http://go.microsoft.com/fwlink/?LinkId=114525).  \n  \n Although this concept of `Name` is not completely consistent with the use that is specified in [MS-XAML], you can typically use the `Name` directive or the `Name` attribute to provide a conceptual connection between XAML objects in markup and the run-time representations that are created by XAML processing of the markup. This use depends on how specific frameworks implement their programming models to integrate XAML into their general object models. For more information, see [x:Name Directive](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Xaml.XamlDirective Name { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Null
  id: "Null"
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: "Null"
  nameWithType: XamlLanguage.Null
  fullName: System.Xaml.XamlLanguage.Null
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Null&quot; name=&quot;Null&quot; href=&quot;&quot;></xref>或<xref uid=&quot;langword_csharp_NullExtension&quot; name=&quot;NullExtension&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "此 XAML 类型提供的标记中的对象值的 null 值。 是 XAML 类型 （或必须） 分配给`MarkupExtension`。 请参阅[ \\[MS-XAML\\]部分 5.2.4](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Null { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> for the <xref uid=&quot;langword_csharp_Null&quot; name=&quot;Null&quot; href=&quot;&quot;></xref>/<xref uid=&quot;langword_csharp_NullExtension&quot; name=&quot;NullExtension&quot; href=&quot;&quot;></xref> XAML language intrinsic."
  overload: System.Xaml.XamlLanguage.Null*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Object
  id: Object
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Object
  nameWithType: XamlLanguage.Object
  fullName: System.Xaml.XamlLanguage.Object
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> XAML 语言概念。"
  remarks: "XAML 指定`x:Object`作为特殊语言概念。 请参阅[ \\[MS-XAML\\]部分 5.2.5](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Object { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> XAML 语言概念。"
  overload: System.Xaml.XamlLanguage.Object*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.PositionalParameters
  id: PositionalParameters
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: PositionalParameters
  nameWithType: XamlLanguage.PositionalParameters
  fullName: System.Xaml.XamlLanguage.PositionalParameters
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_PositionalParameters&quot; name=&quot;PositionalParameters&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "`PositionalParameters` is a directive that wraps the multiple objects that can be specified as a set of object nodes for input of a markup extension. See [\\[MS-XAML\\] Section 6.6.7](http://go.microsoft.com/fwlink/?LinkId=114525).  \n  \n If you are looking at raw node interpretations or visualizations, `PositionalParameters` is sometimes seen in string form as `_PositionalParameters` (note the leading underscore) and is within the XAML language XAML namespace (as notated by a preceding `Namespace` node)."
  syntax:
    content: public static System.Xaml.XamlDirective PositionalParameters { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_PositionalParameters&quot; name=&quot;PositionalParameters&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.PositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Property
  id: Property
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Property
  nameWithType: XamlLanguage.Property
  fullName: System.Xaml.XamlLanguage.Property
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Property&quot; name=&quot;Property&quot; href=&quot;&quot;></xref>在 XAML 中的概念。"
  remarks: '`Property`是一种特殊的形式的被标识为<xref:System.Xaml.XamlLanguage.Member%2A>.</xref:System.Xaml.XamlLanguage.Member%2A>的 XAML 类型'
  syntax:
    content: public static System.Xaml.XamlType Property { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Property&quot; name=&quot;Property&quot; href=&quot;&quot;></xref>在 XAML 中的概念。"
  overload: System.Xaml.XamlLanguage.Property*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Reference
  id: Reference
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Reference
  nameWithType: XamlLanguage.Reference
  fullName: System.Xaml.XamlLanguage.Reference
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>表示<xref uid=&quot;langword_csharp_Reference&quot; name=&quot;Reference&quot; href=&quot;&quot;> </xref> xaml。"
  remarks: '`Reference`是[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]功能，用于引用在标记中的另一个对象节点。 对于.NET Framework XAML 服务实现位于<xref:System.Windows.Markup.Reference?displayProperty=fullName>.</xref:System.Windows.Markup.Reference?displayProperty=fullName>'
  syntax:
    content: public static System.Xaml.XamlType Reference { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>表示<xref uid=&quot;langword_csharp_Reference&quot; name=&quot;Reference&quot; href=&quot;&quot;> </xref> xaml。"
  overload: System.Xaml.XamlLanguage.Reference*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Shared
  id: Shared
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Shared
  nameWithType: XamlLanguage.Shared
  fullName: System.Xaml.XamlLanguage.Shared
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Shared&quot; name=&quot;Shared&quot; href=&quot;&quot;> </xref> xaml 指令。"
  remarks: "A`Shared`指令 (当设置为`true`) 指定当在字典中找到的项，对对象的引用应始终返回而不是的新实例的单一实例。 此行为与，字典可用于作为源的共享的内容或模板机制通过使用 XAML 的特定框架的概念。 `Shared`[MS-XAML] 中未指定但属于`x`定义命名空间 – 行为 XAML 在 WPF 和.NET Framework 版本 3.0 和 3.5 版。"
  syntax:
    content: public static System.Xaml.XamlDirective Shared { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Shared&quot; name=&quot;Shared&quot; href=&quot;&quot;> </xref> xaml 指令。"
  overload: System.Xaml.XamlLanguage.Shared*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Single
  id: Single
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Single
  nameWithType: XamlLanguage.Single
  fullName: System.Xaml.XamlLanguage.Single
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分第 5.2.8](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Single { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.Single*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Space
  id: Space
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Space
  nameWithType: XamlLanguage.Space
  fullName: System.Xaml.XamlLanguage.Space
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_space&quot; name=&quot;space&quot; href=&quot;&quot;></xref>指令从 XML。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.3.14](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective Space { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_space&quot; name=&quot;space&quot; href=&quot;&quot;></xref>指令从 XML。"
  overload: System.Xaml.XamlLanguage.Space*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Static
  id: Static
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Static
  nameWithType: XamlLanguage.Static
  fullName: System.Xaml.XamlLanguage.Static
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref> / <xref uid=&quot;langword_csharp_StaticExtension&quot; name=&quot;StaticExtension&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "此 XAML 类型提供的标记后备成员所在的静态成员的值。 是 XAML 类型 （或必须） 分配给`MarkupExtension`。 请参阅[ \\[MS-XAML\\]部分 5.2.2](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Static { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> for the <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>/<xref uid=&quot;langword_csharp_StaticExtension&quot; name=&quot;StaticExtension&quot; href=&quot;&quot;></xref> XAML language intrinsic."
  overload: System.Xaml.XamlLanguage.Static*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.String
  id: String
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: String
  nameWithType: XamlLanguage.String
  fullName: System.Xaml.XamlLanguage.String
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.6 节](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType String { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  overload: System.Xaml.XamlLanguage.String*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Subclass
  id: Subclass
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Subclass
  nameWithType: XamlLanguage.Subclass
  fullName: System.Xaml.XamlLanguage.Subclass
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Subclass&quot; name=&quot;Subclass&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.3.8](http://go.microsoft.com/fwlink/?LinkId=114525)"
  syntax:
    content: public static System.Xaml.XamlDirective Subclass { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Subclass&quot; name=&quot;Subclass&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.Subclass*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.SynchronousMode
  id: SynchronousMode
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: SynchronousMode
  nameWithType: XamlLanguage.SynchronousMode
  fullName: System.Xaml.XamlLanguage.SynchronousMode
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> ，它使如果 XAML 处理器支持此模式以异步方式加载 XAML。"
  remarks: "A`SynchronousMode`指令 (当设置为`Async`) 用于指定当加载 XAML 文件时，首先处理根节点。 可以插入生成的对象，即使仍在处理其内容。 在此模式下可以跳过从最深节点到根工作的默认 XAML 处理行为。 默认情况下的 XAML 处理逻辑，正在等待的根对象的任何调用方会被阻止，直到完整分析已完成。 `SynchronousMode`[MS-XAML] 中未指定但属于`x`xaml 中.NET Framework 版本 3.5 SP1 （或任何后续的 service pack） 开始的 WPF 的命名空间定义的行为。"
  syntax:
    content: public static System.Xaml.XamlDirective SynchronousMode { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> ，利用它可以通过以异步方式加载 XAML。"
  overload: System.Xaml.XamlLanguage.SynchronousMode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.TimeSpan
  id: TimeSpan
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: TimeSpan
  nameWithType: XamlLanguage.TimeSpan
  fullName: System.Xaml.XamlLanguage.TimeSpan
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_TimeSpan&quot; name=&quot;TimeSpan&quot; href=&quot;&quot;></xref>中 XAML 语言的概念。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.16](http://go.microsoft.com/fwlink/?LinkId=114525)。 `TimeSpan`不是真正的内部函数，但因为它是常用的类型的 XAML 规范中指定。 XAML 规范作者视为有用标准化中派生的词汇的 XAML 表示形式。 另请参阅[常见 XAML 语言基元的内置类型](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.Xaml.XamlType TimeSpan { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_TimeSpan&quot; name=&quot;TimeSpan&quot; href=&quot;&quot;> </xref> XAML 语言概念。"
  overload: System.Xaml.XamlLanguage.TimeSpan*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Type
  id: Type
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Type
  nameWithType: XamlLanguage.Type
  fullName: System.Xaml.XamlLanguage.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> / <xref uid=&quot;langword_csharp_TypeExtension&quot; name=&quot;TypeExtension&quot; href=&quot;&quot;> </xref> XAML 语言内部函数。"
  remarks: "此 XAML 类型提供<xref:System.Xaml.XamlType>使用中，绑定的值和查找到的后备类型系统。</xref:System.Xaml.XamlType> 是 XAML 类型 （或必须） 分配给`MarkupExtension`。 请参阅[ \\[MS-XAML\\]部分 5.2.3](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> for the <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref>/<xref uid=&quot;langword_csharp_TypeExtension&quot; name=&quot;TypeExtension&quot; href=&quot;&quot;></xref> XAML language intrinsic."
  overload: System.Xaml.XamlLanguage.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.TypeArguments
  id: TypeArguments
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlLanguage.TypeArguments
  fullName: System.Xaml.XamlLanguage.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_TypeArguments&quot; name=&quot;TypeArguments&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "A`TypeArguments`指令指定泛型类型约束时泛型指定为一个 XAML 对象。 请参阅[ \\[MS-XAML\\]部分 5.3.11](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective TypeArguments { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_TypeArguments&quot; name=&quot;TypeArguments&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.TypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Uid
  id: Uid
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Uid
  nameWithType: XamlLanguage.Uid
  fullName: System.Xaml.XamlLanguage.Uid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_Uid&quot; name=&quot;Uid&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "A`Uid`指令指定 XAML 标记元素的唯一标识符。 严格地说，此类的唯一标识符可以应用到的 XAML 实现框架内有多种用途。 `Uid`不同于`Name`在于`Name`声明在对象图形输出 XAML 的源中存在的标识符，而 [MS-XAML] 定义中具有特定角色`Uid`具有任何特定的角色。 在使用.NET Framework XAML 服务的现有 XAML 实现框架`Uid`通常用于本地化目的。 请参阅[ \\[MS-XAML\\]部分 5.3.6](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public static System.Xaml.XamlDirective Uid { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_Uid&quot; name=&quot;Uid&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.Uid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.UnknownContent
  id: UnknownContent
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: UnknownContent
  nameWithType: XamlLanguage.UnknownContent
  fullName: System.Xaml.XamlLanguage.UnknownContent
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>为<xref uid=&quot;langword_csharp_UnknownContent&quot; name=&quot;UnknownContent&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  remarks: "`UnknownContent`是一个是一个占位符，以在 XAML 节点集如果读取器遇到未知的值节点的内容中使用的指令或初始化文本 （没有可用的内部函数或文本语法可以将其转换）。       如果你正在寻求通过原始节点解释或可视化效果，`UnknownContent`有时在字符串的形式`_UnknownContent`（请注意前导下划线），并且在 XAML 语言 XAML 命名空间 (前面加来表示`Namespace`节点)。"
  syntax:
    content: public static System.Xaml.XamlDirective UnknownContent { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>为<xref uid=&quot;langword_csharp_UnknownContent&quot; name=&quot;UnknownContent&quot; href=&quot;&quot;></xref>从 XAML 指令。"
  overload: System.Xaml.XamlLanguage.UnknownContent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Uri
  id: Uri
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Uri
  nameWithType: XamlLanguage.Uri
  fullName: System.Xaml.XamlLanguage.Uri
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>为<xref uid=&quot;langword_csharp_Uri&quot; name=&quot;Uri&quot; href=&quot;&quot;> </xref> XAML 语言概念。"
  remarks: "请参阅[ \\[MS-XAML\\]部分 5.2.15](http://go.microsoft.com/fwlink/?LinkId=114525)。 `Uri`不是 true 内部函数，而 XAML 规范中指定，因为它是常用的类型。 XAML 规范作者视为有用标准化中派生的词汇的 XAML 表示形式。 另请参阅[常见 XAML 语言基元的内置类型](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.Xaml.XamlType Uri { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>为<xref uid=&quot;langword_csharp_Uri&quot; name=&quot;Uri&quot; href=&quot;&quot;> </xref> XAML 语言概念。"
  overload: System.Xaml.XamlLanguage.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Xaml2006Namespace
  id: Xaml2006Namespace
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Xaml2006Namespace
  nameWithType: XamlLanguage.Xaml2006Namespace
  fullName: System.Xaml.XamlLanguage.Xaml2006Namespace
  type: Field
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取用于标识在 XAML (2006) 语言命名空间的字符串的字符串值。 该命名空间对应于 XAML (2006)&quot;x&quot;带前缀的命名空间中定义[ \\[MS-XAML\\]第 5.1.1 节](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public const string Xaml2006Namespace;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.XamlNamespaces
  id: XamlNamespaces
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: XamlNamespaces
  nameWithType: XamlLanguage.XamlNamespaces
  fullName: System.Xaml.XamlLanguage.XamlNamespaces
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取 XAML 命名空间标识符的集合。"
  remarks: "当前此集合仅包含<xref:System.Xaml.XamlLanguage.Xaml2006Namespace>值。</xref:System.Xaml.XamlLanguage.Xaml2006Namespace>"
  syntax:
    content: public static System.Collections.Generic.IList<string> XamlNamespaces { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "XAML 命名空间标识符的集合。"
  overload: System.Xaml.XamlLanguage.XamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.XData
  id: XData
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: XData
  nameWithType: XamlLanguage.XData
  fullName: System.Xaml.XamlLanguage.XData
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取<xref href=&quot;System.Xaml.XamlType&quot;></xref>备份的 XAML 类型<xref uid=&quot;langword_csharp_XData&quot; name=&quot;XData&quot; href=&quot;&quot;></xref>阻止在 XAML 中使用。"
  syntax:
    content: public static System.Xaml.XamlType XData { get; }
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>备份的 XAML 类型<xref uid=&quot;langword_csharp_XData&quot; name=&quot;XData&quot; href=&quot;&quot;></xref>块。 请参阅[ \\[MS-XAML\\]部分 5.2.23](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  overload: System.Xaml.XamlLanguage.XData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Xml1998Namespace
  id: Xml1998Namespace
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Xml1998Namespace
  nameWithType: XamlLanguage.Xml1998Namespace
  fullName: System.Xaml.XamlLanguage.Xml1998Namespace
  type: Field
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取标识的 XML (1998) 语言命名空间的字符串的字符串值。 该命名空间对应于中引用的 XML 前缀&quot;xml&quot;命名空间[ \\[MS-XAML\\]部分 5.1.2](http://go.microsoft.com/fwlink/?LinkId=114525)。"
  syntax:
    content: public const string Xml1998Namespace;
    return:
      type: System.String
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.XmlNamespaces
  id: XmlNamespaces
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: XmlNamespaces
  nameWithType: XamlLanguage.XmlNamespaces
  fullName: System.Xaml.XamlLanguage.XmlNamespaces
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "获取 XML 命名空间标识符的集合。"
  remarks: "当前此集合仅包含<xref:System.Xaml.XamlLanguage.Xml1998Namespace>值。</xref:System.Xaml.XamlLanguage.Xml1998Namespace>"
  syntax:
    content: public static System.Collections.Generic.IList<string> XmlNamespaces { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "XML 命名空间标识符的集合。"
  overload: System.Xaml.XamlLanguage.XmlNamespaces*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xaml.XamlLanguage.AllDirectives
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AllDirectives
  nameWithType: XamlLanguage.AllDirectives
  fullName: System.Xaml.XamlLanguage.AllDirectives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Xaml.XamlDirective}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<XamlDirective>
  nameWithType: ReadOnlyCollection<XamlDirective>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Xaml.XamlDirective>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Xaml.XamlDirective>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDirective
    name: XamlDirective
    nameWithType: XamlDirective
    fullName: XamlDirective
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlLanguage.AllTypes
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AllTypes
  nameWithType: XamlLanguage.AllTypes
  fullName: System.Xaml.XamlLanguage.AllTypes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Xaml.XamlType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<XamlType>
  nameWithType: ReadOnlyCollection<XamlType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlLanguage.Arguments
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Arguments
  nameWithType: XamlLanguage.Arguments
  fullName: System.Xaml.XamlLanguage.Arguments
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlLanguage.Array
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Array
  nameWithType: XamlLanguage.Array
  fullName: System.Xaml.XamlLanguage.Array
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlLanguage.AsyncRecords
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AsyncRecords
  nameWithType: XamlLanguage.AsyncRecords
  fullName: System.Xaml.XamlLanguage.AsyncRecords
- uid: System.Xaml.XamlLanguage.Base
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Base
  nameWithType: XamlLanguage.Base
  fullName: System.Xaml.XamlLanguage.Base
- uid: System.Xaml.XamlLanguage.Boolean
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Boolean
  nameWithType: XamlLanguage.Boolean
  fullName: System.Xaml.XamlLanguage.Boolean
- uid: System.Xaml.XamlLanguage.Byte
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Byte
  nameWithType: XamlLanguage.Byte
  fullName: System.Xaml.XamlLanguage.Byte
- uid: System.Xaml.XamlLanguage.Char
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Char
  nameWithType: XamlLanguage.Char
  fullName: System.Xaml.XamlLanguage.Char
- uid: System.Xaml.XamlLanguage.Class
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Class
  nameWithType: XamlLanguage.Class
  fullName: System.Xaml.XamlLanguage.Class
- uid: System.Xaml.XamlLanguage.ClassAttributes
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ClassAttributes
  nameWithType: XamlLanguage.ClassAttributes
  fullName: System.Xaml.XamlLanguage.ClassAttributes
- uid: System.Xaml.XamlLanguage.ClassModifier
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ClassModifier
  nameWithType: XamlLanguage.ClassModifier
  fullName: System.Xaml.XamlLanguage.ClassModifier
- uid: System.Xaml.XamlLanguage.Code
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Code
  nameWithType: XamlLanguage.Code
  fullName: System.Xaml.XamlLanguage.Code
- uid: System.Xaml.XamlLanguage.ConnectionId
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ConnectionId
  nameWithType: XamlLanguage.ConnectionId
  fullName: System.Xaml.XamlLanguage.ConnectionId
- uid: System.Xaml.XamlLanguage.Decimal
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Decimal
  nameWithType: XamlLanguage.Decimal
  fullName: System.Xaml.XamlLanguage.Decimal
- uid: System.Xaml.XamlLanguage.Double
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Double
  nameWithType: XamlLanguage.Double
  fullName: System.Xaml.XamlLanguage.Double
- uid: System.Xaml.XamlLanguage.FactoryMethod
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: FactoryMethod
  nameWithType: XamlLanguage.FactoryMethod
  fullName: System.Xaml.XamlLanguage.FactoryMethod
- uid: System.Xaml.XamlLanguage.FieldModifier
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: FieldModifier
  nameWithType: XamlLanguage.FieldModifier
  fullName: System.Xaml.XamlLanguage.FieldModifier
- uid: System.Xaml.XamlLanguage.Initialization
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Initialization
  nameWithType: XamlLanguage.Initialization
  fullName: System.Xaml.XamlLanguage.Initialization
- uid: System.Xaml.XamlLanguage.Int16
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int16
  nameWithType: XamlLanguage.Int16
  fullName: System.Xaml.XamlLanguage.Int16
- uid: System.Xaml.XamlLanguage.Int32
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int32
  nameWithType: XamlLanguage.Int32
  fullName: System.Xaml.XamlLanguage.Int32
- uid: System.Xaml.XamlLanguage.Int64
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int64
  nameWithType: XamlLanguage.Int64
  fullName: System.Xaml.XamlLanguage.Int64
- uid: System.Xaml.XamlLanguage.Items
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Items
  nameWithType: XamlLanguage.Items
  fullName: System.Xaml.XamlLanguage.Items
- uid: System.Xaml.XamlLanguage.Key
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Key
  nameWithType: XamlLanguage.Key
  fullName: System.Xaml.XamlLanguage.Key
- uid: System.Xaml.XamlLanguage.Lang
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Lang
  nameWithType: XamlLanguage.Lang
  fullName: System.Xaml.XamlLanguage.Lang
- uid: System.Xaml.XamlLanguage.Member
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Member
  nameWithType: XamlLanguage.Member
  fullName: System.Xaml.XamlLanguage.Member
- uid: System.Xaml.XamlLanguage.Members
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Members
  nameWithType: XamlLanguage.Members
  fullName: System.Xaml.XamlLanguage.Members
- uid: System.Xaml.XamlLanguage.Name
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Name
  nameWithType: XamlLanguage.Name
  fullName: System.Xaml.XamlLanguage.Name
- uid: System.Xaml.XamlLanguage.Null
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: "Null"
  nameWithType: XamlLanguage.Null
  fullName: System.Xaml.XamlLanguage.Null
- uid: System.Xaml.XamlLanguage.Object
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Object
  nameWithType: XamlLanguage.Object
  fullName: System.Xaml.XamlLanguage.Object
- uid: System.Xaml.XamlLanguage.PositionalParameters
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: PositionalParameters
  nameWithType: XamlLanguage.PositionalParameters
  fullName: System.Xaml.XamlLanguage.PositionalParameters
- uid: System.Xaml.XamlLanguage.Property
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Property
  nameWithType: XamlLanguage.Property
  fullName: System.Xaml.XamlLanguage.Property
- uid: System.Xaml.XamlLanguage.Reference
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Reference
  nameWithType: XamlLanguage.Reference
  fullName: System.Xaml.XamlLanguage.Reference
- uid: System.Xaml.XamlLanguage.Shared
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Shared
  nameWithType: XamlLanguage.Shared
  fullName: System.Xaml.XamlLanguage.Shared
- uid: System.Xaml.XamlLanguage.Single
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Single
  nameWithType: XamlLanguage.Single
  fullName: System.Xaml.XamlLanguage.Single
- uid: System.Xaml.XamlLanguage.Space
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Space
  nameWithType: XamlLanguage.Space
  fullName: System.Xaml.XamlLanguage.Space
- uid: System.Xaml.XamlLanguage.Static
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Static
  nameWithType: XamlLanguage.Static
  fullName: System.Xaml.XamlLanguage.Static
- uid: System.Xaml.XamlLanguage.String
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: String
  nameWithType: XamlLanguage.String
  fullName: System.Xaml.XamlLanguage.String
- uid: System.Xaml.XamlLanguage.Subclass
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Subclass
  nameWithType: XamlLanguage.Subclass
  fullName: System.Xaml.XamlLanguage.Subclass
- uid: System.Xaml.XamlLanguage.SynchronousMode
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: SynchronousMode
  nameWithType: XamlLanguage.SynchronousMode
  fullName: System.Xaml.XamlLanguage.SynchronousMode
- uid: System.Xaml.XamlLanguage.TimeSpan
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: TimeSpan
  nameWithType: XamlLanguage.TimeSpan
  fullName: System.Xaml.XamlLanguage.TimeSpan
- uid: System.Xaml.XamlLanguage.Type
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Type
  nameWithType: XamlLanguage.Type
  fullName: System.Xaml.XamlLanguage.Type
- uid: System.Xaml.XamlLanguage.TypeArguments
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: TypeArguments
  nameWithType: XamlLanguage.TypeArguments
  fullName: System.Xaml.XamlLanguage.TypeArguments
- uid: System.Xaml.XamlLanguage.Uid
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Uid
  nameWithType: XamlLanguage.Uid
  fullName: System.Xaml.XamlLanguage.Uid
- uid: System.Xaml.XamlLanguage.UnknownContent
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: UnknownContent
  nameWithType: XamlLanguage.UnknownContent
  fullName: System.Xaml.XamlLanguage.UnknownContent
- uid: System.Xaml.XamlLanguage.Uri
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Uri
  nameWithType: XamlLanguage.Uri
  fullName: System.Xaml.XamlLanguage.Uri
- uid: System.Xaml.XamlLanguage.Xaml2006Namespace
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Xaml2006Namespace
  nameWithType: XamlLanguage.Xaml2006Namespace
  fullName: System.Xaml.XamlLanguage.Xaml2006Namespace
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.XamlLanguage.XamlNamespaces
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XamlNamespaces
  nameWithType: XamlLanguage.XamlNamespaces
  fullName: System.Xaml.XamlLanguage.XamlNamespaces
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlLanguage.XData
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XData
  nameWithType: XamlLanguage.XData
  fullName: System.Xaml.XamlLanguage.XData
- uid: System.Xaml.XamlLanguage.Xml1998Namespace
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Xml1998Namespace
  nameWithType: XamlLanguage.Xml1998Namespace
  fullName: System.Xaml.XamlLanguage.Xml1998Namespace
- uid: System.Xaml.XamlLanguage.XmlNamespaces
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XmlNamespaces
  nameWithType: XamlLanguage.XmlNamespaces
  fullName: System.Xaml.XamlLanguage.XmlNamespaces
- uid: System.Xaml.XamlLanguage.AllDirectives*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AllDirectives
  nameWithType: XamlLanguage.AllDirectives
- uid: System.Xaml.XamlLanguage.AllTypes*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AllTypes
  nameWithType: XamlLanguage.AllTypes
- uid: System.Xaml.XamlLanguage.Arguments*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Arguments
  nameWithType: XamlLanguage.Arguments
- uid: System.Xaml.XamlLanguage.Array*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Array
  nameWithType: XamlLanguage.Array
- uid: System.Xaml.XamlLanguage.AsyncRecords*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AsyncRecords
  nameWithType: XamlLanguage.AsyncRecords
- uid: System.Xaml.XamlLanguage.Base*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Base
  nameWithType: XamlLanguage.Base
- uid: System.Xaml.XamlLanguage.Boolean*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Boolean
  nameWithType: XamlLanguage.Boolean
- uid: System.Xaml.XamlLanguage.Byte*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Byte
  nameWithType: XamlLanguage.Byte
- uid: System.Xaml.XamlLanguage.Char*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Char
  nameWithType: XamlLanguage.Char
- uid: System.Xaml.XamlLanguage.Class*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Class
  nameWithType: XamlLanguage.Class
- uid: System.Xaml.XamlLanguage.ClassAttributes*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ClassAttributes
  nameWithType: XamlLanguage.ClassAttributes
- uid: System.Xaml.XamlLanguage.ClassModifier*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ClassModifier
  nameWithType: XamlLanguage.ClassModifier
- uid: System.Xaml.XamlLanguage.Code*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Code
  nameWithType: XamlLanguage.Code
- uid: System.Xaml.XamlLanguage.ConnectionId*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ConnectionId
  nameWithType: XamlLanguage.ConnectionId
- uid: System.Xaml.XamlLanguage.Decimal*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Decimal
  nameWithType: XamlLanguage.Decimal
- uid: System.Xaml.XamlLanguage.Double*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Double
  nameWithType: XamlLanguage.Double
- uid: System.Xaml.XamlLanguage.FactoryMethod*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: FactoryMethod
  nameWithType: XamlLanguage.FactoryMethod
- uid: System.Xaml.XamlLanguage.FieldModifier*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: FieldModifier
  nameWithType: XamlLanguage.FieldModifier
- uid: System.Xaml.XamlLanguage.Initialization*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Initialization
  nameWithType: XamlLanguage.Initialization
- uid: System.Xaml.XamlLanguage.Int16*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int16
  nameWithType: XamlLanguage.Int16
- uid: System.Xaml.XamlLanguage.Int32*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int32
  nameWithType: XamlLanguage.Int32
- uid: System.Xaml.XamlLanguage.Int64*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int64
  nameWithType: XamlLanguage.Int64
- uid: System.Xaml.XamlLanguage.Items*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Items
  nameWithType: XamlLanguage.Items
- uid: System.Xaml.XamlLanguage.Key*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Key
  nameWithType: XamlLanguage.Key
- uid: System.Xaml.XamlLanguage.Lang*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Lang
  nameWithType: XamlLanguage.Lang
- uid: System.Xaml.XamlLanguage.Member*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Member
  nameWithType: XamlLanguage.Member
- uid: System.Xaml.XamlLanguage.Members*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Members
  nameWithType: XamlLanguage.Members
- uid: System.Xaml.XamlLanguage.Name*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Name
  nameWithType: XamlLanguage.Name
- uid: System.Xaml.XamlLanguage.Null*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: "Null"
  nameWithType: XamlLanguage.Null
- uid: System.Xaml.XamlLanguage.Object*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Object
  nameWithType: XamlLanguage.Object
- uid: System.Xaml.XamlLanguage.PositionalParameters*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: PositionalParameters
  nameWithType: XamlLanguage.PositionalParameters
- uid: System.Xaml.XamlLanguage.Property*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Property
  nameWithType: XamlLanguage.Property
- uid: System.Xaml.XamlLanguage.Reference*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Reference
  nameWithType: XamlLanguage.Reference
- uid: System.Xaml.XamlLanguage.Shared*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Shared
  nameWithType: XamlLanguage.Shared
- uid: System.Xaml.XamlLanguage.Single*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Single
  nameWithType: XamlLanguage.Single
- uid: System.Xaml.XamlLanguage.Space*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Space
  nameWithType: XamlLanguage.Space
- uid: System.Xaml.XamlLanguage.Static*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Static
  nameWithType: XamlLanguage.Static
- uid: System.Xaml.XamlLanguage.String*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: String
  nameWithType: XamlLanguage.String
- uid: System.Xaml.XamlLanguage.Subclass*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Subclass
  nameWithType: XamlLanguage.Subclass
- uid: System.Xaml.XamlLanguage.SynchronousMode*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: SynchronousMode
  nameWithType: XamlLanguage.SynchronousMode
- uid: System.Xaml.XamlLanguage.TimeSpan*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: TimeSpan
  nameWithType: XamlLanguage.TimeSpan
- uid: System.Xaml.XamlLanguage.Type*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Type
  nameWithType: XamlLanguage.Type
- uid: System.Xaml.XamlLanguage.TypeArguments*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: TypeArguments
  nameWithType: XamlLanguage.TypeArguments
- uid: System.Xaml.XamlLanguage.Uid*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Uid
  nameWithType: XamlLanguage.Uid
- uid: System.Xaml.XamlLanguage.UnknownContent*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: UnknownContent
  nameWithType: XamlLanguage.UnknownContent
- uid: System.Xaml.XamlLanguage.Uri*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Uri
  nameWithType: XamlLanguage.Uri
- uid: System.Xaml.XamlLanguage.XamlNamespaces*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XamlNamespaces
  nameWithType: XamlLanguage.XamlNamespaces
- uid: System.Xaml.XamlLanguage.XData*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XData
  nameWithType: XamlLanguage.XData
- uid: System.Xaml.XamlLanguage.XmlNamespaces*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XmlNamespaces
  nameWithType: XamlLanguage.XmlNamespaces
