### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.UriSchemeKeyedCollection
  id: UriSchemeKeyedCollection
  children:
  - System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])
  - System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)
  - System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)
  - System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)
  langs:
  - csharp
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
  type: Class
  summary: "提供包含 Uri 由其传输方案名称进行键控的线程安全集合。"
  remarks: "主机使用该集合按照方案名称存储服务基址。"
  syntax:
    content: 'public class UriSchemeKeyedCollection : System.Collections.Generic.SynchronizedKeyedCollection<string,Uri>'
  inheritance:
  - System.Object
  - System.Collections.Generic.SynchronizedCollection`1
  - System.Collections.Generic.SynchronizedKeyedCollection`2
  implements: []
  inheritedMembers:
  - System.Collections.Generic.SynchronizedCollection`1.Add(`0)
  - System.Collections.Generic.SynchronizedCollection`1.Clear
  - System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.Count
  - System.Collections.Generic.SynchronizedCollection`1.GetEnumerator
  - System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)
  - System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.Items
  - System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.SyncRoot
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems
  - System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary
  - System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)
  platform:
  - net462
- uid: System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])
  id: '#ctor(System.Uri[])'
  parent: System.ServiceModel.UriSchemeKeyedCollection
  langs:
  - csharp
  name: UriSchemeKeyedCollection(Uri[])
  nameWithType: UriSchemeKeyedCollection.UriSchemeKeyedCollection(Uri[])
  fullName: System.ServiceModel.UriSchemeKeyedCollection.UriSchemeKeyedCollection(Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;></xref>类。"
  syntax:
    content: public UriSchemeKeyedCollection (Uri[] addresses);
    parameters:
    - id: addresses
      type: System.Uri[]
      description: "可变长度<xref:System.Array>的<xref:System.Uri>用于初始化集合的对象。</xref:System.Uri> </xref:System.Array>"
  overload: System.ServiceModel.UriSchemeKeyedCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>addresses</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)
  id: GetKeyForItem(System.Uri)
  parent: System.ServiceModel.UriSchemeKeyedCollection
  langs:
  - csharp
  name: GetKeyForItem(Uri)
  nameWithType: UriSchemeKeyedCollection.GetKeyForItem(Uri)
  fullName: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "从集合获取指定的 URI 的密钥。"
  syntax:
    content: protected override string GetKeyForItem (Uri item);
    parameters:
    - id: item
      type: System.Uri
      description: "<xref:System.Uri>正在检索其键。</xref:System.Uri>"
    return:
      type: System.String
      description: "从集合指定的 URI 的密钥。"
  overload: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)
  id: InsertItem(System.Int32,System.Uri)
  parent: System.ServiceModel.UriSchemeKeyedCollection
  langs:
  - csharp
  name: InsertItem(Int32,Uri)
  nameWithType: UriSchemeKeyedCollection.InsertItem(Int32,Uri)
  fullName: System.ServiceModel.UriSchemeKeyedCollection.InsertItem(Int32,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "将 URI 插入集合中指定的位置。"
  syntax:
    content: protected override void InsertItem (int index, Uri item);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引，它指定集合中的项的插入位置。"
    - id: item
      type: System.Uri
      description: "<xref:System.Uri>要插入到集合。</xref:System.Uri>"
  overload: System.ServiceModel.UriSchemeKeyedCollection.InsertItem*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>  item </code> URI 不是一个绝对 URI。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>item</code>URI 已经包含一个已在集合中的方案名称。"
  platform:
  - net462
- uid: System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)
  id: SetItem(System.Int32,System.Uri)
  parent: System.ServiceModel.UriSchemeKeyedCollection
  langs:
  - csharp
  name: SetItem(Int32,Uri)
  nameWithType: UriSchemeKeyedCollection.SetItem(Int32,Uri)
  fullName: System.ServiceModel.UriSchemeKeyedCollection.SetItem(Int32,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "用一个新的 URI 替换位于指定位置的集合的 URI。"
  syntax:
    content: protected override void SetItem (int index, Uri item);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引，它指定集合中 URI 的插入位置。"
    - id: item
      type: System.Uri
      description: "<xref:System.Uri>要置于集合。</xref:System.Uri>"
  overload: System.ServiceModel.UriSchemeKeyedCollection.SetItem*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>  item </code> URI 不是一个绝对 URI。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>item</code>URI 已经包含一个已在集合中的方案名称。"
  platform:
  - net462
references:
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: System.Collections.Generic.SynchronizedKeyedCollection<System.String,System.Uri>
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])
  parent: System.ServiceModel.UriSchemeKeyedCollection
  isExternal: false
  name: UriSchemeKeyedCollection(Uri[])
  nameWithType: UriSchemeKeyedCollection.UriSchemeKeyedCollection(Uri[])
  fullName: System.ServiceModel.UriSchemeKeyedCollection.UriSchemeKeyedCollection(Uri[])
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)
  parent: System.ServiceModel.UriSchemeKeyedCollection
  isExternal: false
  name: GetKeyForItem(Uri)
  nameWithType: UriSchemeKeyedCollection.GetKeyForItem(Uri)
  fullName: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(Uri)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)
  parent: System.ServiceModel.UriSchemeKeyedCollection
  isExternal: false
  name: InsertItem(Int32,Uri)
  nameWithType: UriSchemeKeyedCollection.InsertItem(Int32,Uri)
  fullName: System.ServiceModel.UriSchemeKeyedCollection.InsertItem(Int32,Uri)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)
  parent: System.ServiceModel.UriSchemeKeyedCollection
  isExternal: false
  name: SetItem(Int32,Uri)
  nameWithType: UriSchemeKeyedCollection.SetItem(Int32,Uri)
  fullName: System.ServiceModel.UriSchemeKeyedCollection.SetItem(Int32,Uri)
- uid: System.ServiceModel.UriSchemeKeyedCollection.#ctor*
  parent: System.ServiceModel.UriSchemeKeyedCollection
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection.UriSchemeKeyedCollection
- uid: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem*
  parent: System.ServiceModel.UriSchemeKeyedCollection
  isExternal: false
  name: GetKeyForItem
  nameWithType: UriSchemeKeyedCollection.GetKeyForItem
- uid: System.ServiceModel.UriSchemeKeyedCollection.InsertItem*
  parent: System.ServiceModel.UriSchemeKeyedCollection
  isExternal: false
  name: InsertItem
  nameWithType: UriSchemeKeyedCollection.InsertItem
- uid: System.ServiceModel.UriSchemeKeyedCollection.SetItem*
  parent: System.ServiceModel.UriSchemeKeyedCollection
  isExternal: false
  name: SetItem
  nameWithType: UriSchemeKeyedCollection.SetItem
