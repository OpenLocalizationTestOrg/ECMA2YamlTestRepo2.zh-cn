### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  id: GridViewUpdatedEventArgs
  children:
  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows
  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception
  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode
  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys
  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues
  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues
  langs:
  - csharp
  name: GridViewUpdatedEventArgs
  nameWithType: GridViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  type: Class
  summary: "提供有关数据<xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdated&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView>控件都将引发<xref:System.Web.UI.WebControls.GridView.RowUpdated>单击控件中的更新按钮时的事件，但之后<xref:System.Web.UI.WebControls.GridView>控件更新记录。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdated> </xref:System.Web.UI.WebControls.GridView> (的更新按钮控件是的按钮控件`CommandName`属性设置为&quot;更新&quot;。)每次此事件发生时，例如检查更新操作的结果，您可以执行自定义的例程。       GridViewUpdatedEventArgs 对象传递到的事件处理程序，使您能够确定受影响的记录和任何可能发生的异常数。 若要确定受更新操作的记录数，请使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>属性。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> 若要确定是否发生任何异常，请使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>属性。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> 您还可以指示是否处理了该异常在事件处理程序通过设置<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>属性。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>       若要访问已更新记录的键字段值，使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A>属性。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> 你可以通过访问原始的非键字段值<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A>属性。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> 你可以通过访问更新的非键字段值<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A>属性。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A>       默认情况下，<xref:System.Web.UI.WebControls.GridView>控件后更新操作将返回到只读模式。</xref:System.Web.UI.WebControls.GridView> 当处理更新操作过程中发生的异常时，您可以保留<xref:System.Web.UI.WebControls.GridView>控件处于编辑模式，通过设置<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>属性`true`。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.GridView>       有关如何处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       GridViewUpdatedEventArgs 类的实例的初始属性值的列表，请参阅<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A>构造函数。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A>"
  example:
  - "The following example shows how to determine whether an exception occurred during an update operation.  \n  \n [!code-cs[GridViewUpdatedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_223_1.aspx)]\n [!code-vb[GridViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_223_1.aspx)]"
  syntax:
    content: 'public class GridViewUpdatedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  langs:
  - csharp
  name: GridViewUpdatedEventArgs(Int32,Exception)
  nameWithType: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.GridViewUpdatedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.GridViewUpdatedEventArgs&quot;></xref>类。"
  remarks: "下表显示<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>类</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>的实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>|值`affectedRows`参数。 |  |<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>|中包含的<xref:System.Exception?displayProperty=fullName>对象`e`参数。 |  |<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>|初始化为`false`。 |  |<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>|初始化为`false`。 |    &1;> [!NOTE]&1;> 在引发事件时主要由控件开发人员使用此构造函数。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>"
  syntax:
    content: public GridViewUpdatedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "已更新操作所影响的行数。"
    - id: e
      type: System.Exception
      description: "执行更新操作时引发的异常。 如果未不引发任何异常，则使用<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>为此参数。"
  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: GridViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取受该更新操作的行数。"
  remarks: "由于通常更新只有一条记录，此属性通常包含值为 0 或 1。       不会引发异常的更新操作期间可能出现错误。 AffectedRows 属性可用于确保记录已更新。"
  example:
  - "The following example shows how to use the AffectedRows property to verify that a record was updated.  \n  \n [!code-cs[GridViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_300_1.aspx)]\n [!code-vb[GridViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_300_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "已更新操作所影响的行数。"
  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: GridViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取的异常 （如果有） 更新操作过程中引发。"
  remarks: "如果引发了异常，并且你决定在事件处理程序中，设置中处理异常<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>属性`true`。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> 否则，会再次引发异常<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example shows how to determine whether an exception occurred during an update operation.  \n  \n [!code-cs[GridViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_86_1.aspx)]\n [!code-vb[GridViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_86_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "更新操作过程中引发异常。 如果未引发异常，此属性返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: GridViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否更新操作过程中引发的异常处理在事件处理程序。"
  remarks: "当更新操作期间引发了异常时，则使用 ExceptionHandled 属性以指示是否处理该事件处理程序中的异常。 当此属性设置为`true`，处理且不会再次引发该异常被视为<xref:System.Web.UI.WebControls.GridView>控件。</xref:System.Web.UI.WebControls.GridView> 如果此属性设置为`false`，再次引发异常。 若要确定引发哪个异常，请使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>属性。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>"
  example:
  - "The following example shows how to indicate that the exception was handled in the event handler.  \n  \n [!code-cs[GridViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_85_1.aspx)]\n [!code-vb[GridViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_85_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果异常已处理在事件处理程序;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode
  id: KeepInEditMode
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  langs:
  - csharp
  name: KeepInEditMode
  nameWithType: GridViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控件应在执行更新操作后继续处于编辑模式。"
  remarks: "默认情况下，<xref:System.Web.UI.WebControls.GridView>控件后更新操作将返回到只读模式。</xref:System.Web.UI.WebControls.GridView> 若要保留<xref:System.Web.UI.WebControls.GridView>控件处于编辑模式，将 KeepInEditMode 属性设置为`true`。</xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example shows how to keep a <xref:System.Web.UI.WebControls.GridView> control in edit mode when an exception occurs.  \n  \n [!code-cs[GridViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_637_1.aspx)]\n [!code-vb[GridViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_637_1.aspx)]"
  syntax:
    content: public bool KeepInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该控件后更新操作; 将继续处于编辑模式否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys
  id: Keys
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  langs:
  - csharp
  name: Keys
  nameWithType: GridViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个字典，其中包含已更新记录的键字段名称/值对。"
  remarks: "键属性，用于访问已更新记录的键字段的值。 例如，可以使用这些值来记录更新的记录。       键属性，返回实现的对象<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>接口。</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> 对象包含<xref:System.Collections.DictionaryEntry?displayProperty=fullName>表示已更新记录的字段的对象。</xref:System.Collections.DictionaryEntry?displayProperty=fullName>      1> [!NOTE]&1;> 作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.IOrderedDictionary>对象来访问该字段值直接。</xref:System.Collections.Specialized.IOrderedDictionary>"
  example:
  - "The following example shows how to access the values of the key field for an updated record.  \n  \n [!code-cs[GridViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1345_1.aspx)]\n [!code-vb[GridViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1345_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "已更新记录的键字段名称/值对的字典。"
  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues
  id: NewValues
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  langs:
  - csharp
  name: NewValues
  nameWithType: GridViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个字典，其中包含已更新记录的新字段名称/值对。"
  remarks: "使用新值属性来访问已更新记录新的字段值。 例如，可以使用这些值来记录更新的记录。       新值属性返回的对象实现<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>接口。</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> 对象包含<xref:System.Collections.DictionaryEntry?displayProperty=fullName>表示已更新记录的字段的对象。</xref:System.Collections.DictionaryEntry?displayProperty=fullName>      1> [!NOTE]&1;> 作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.IOrderedDictionary>对象来访问该字段值直接。</xref:System.Collections.Specialized.IOrderedDictionary>"
  example:
  - "The following example shows how to access the new values entered by the user for the non-key fields of the updated record.  \n  \n [!code-cs[GridViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1221_1.aspx)]\n [!code-vb[GridViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1221_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "已更新记录的新字段名称/值对的字典。"
  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues
  id: OldValues
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  langs:
  - csharp
  name: OldValues
  nameWithType: GridViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取一个字典，其中包含已更新记录的原始字段名称/值对。"
  remarks: "使用它属性访问更新的记录的原始字段值。 例如，可以使用这些值来记录更新的记录。       它属性返回的对象实现<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>接口。</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> 对象包含<xref:System.Collections.DictionaryEntry?displayProperty=fullName>表示其原始值的已更新记录的字段的对象。</xref:System.Collections.DictionaryEntry?displayProperty=fullName>      1> [!NOTE]&1;> 作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.IOrderedDictionary>对象来访问该字段值直接。</xref:System.Collections.Specialized.IOrderedDictionary>"
  example:
  - "The following example shows how to access the original values of the non-key fields for the updated record.  \n  \n [!code-cs[GridViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1217_1.aspx)]\n [!code-vb[GridViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1217_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "已更新记录的原始字段名称/值对的字典。"
  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: GridViewUpdatedEventArgs(Int32,Exception)
  nameWithType: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.GridViewUpdatedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: GridViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: GridViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: GridViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: GridViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: GridViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: GridViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: GridViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: GridViewUpdatedEventArgs
  nameWithType: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: GridViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception*
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: GridViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: GridViewUpdatedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode*
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: GridViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys*
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: GridViewUpdatedEventArgs.Keys
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues*
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: GridViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues*
  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: GridViewUpdatedEventArgs.OldValues
