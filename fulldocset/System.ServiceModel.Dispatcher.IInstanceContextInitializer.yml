### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  id: IInstanceContextInitializer
  children:
  - System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  langs:
  - csharp
  name: IInstanceContextInitializer
  nameWithType: IInstanceContextInitializer
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  type: Interface
  summary: "定义检查或修改的创建所需的方法<xref:System.ServiceModel.InstanceContext>对象在需要时。</xref:System.ServiceModel.InstanceContext>"
  remarks: "若要检查或修改<xref:System.ServiceModel.InstanceContext>时创建它们的对象实现 IInstanceContextInitializer 接口，并使用<xref:System.ServiceModel.Description.IContractBehavior>将它添加到<xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A>属性。</xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> </xref:System.ServiceModel.Description.IContractBehavior> </xref:System.ServiceModel.InstanceContext>       可以有任意数量的服务的上下文初始值设定项。 通常情况下，添加 IInstanceContextInitializer 要附加的扩展<xref:System.ServiceModel.InstanceContext>对象作为传递整个应用程序数据的机制。</xref:System.ServiceModel.InstanceContext>       如果你想要参与提供或选择的<xref:System.ServiceModel.InstanceContext>对象，用于处理一条消息，请参阅<xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName>。</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName> </xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public interface IInstanceContextInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  id: Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  langs:
  - csharp
  name: Initialize(InstanceContext,Message)
  nameWithType: IInstanceContextInitializer.Initialize(InstanceContext,Message)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(InstanceContext,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "提供修改新创建的能力<xref:System.ServiceModel.InstanceContext>对象。</xref:System.ServiceModel.InstanceContext>"
  remarks: "Initialize 方法调用时<xref:System.ServiceModel.InstanceContext>创建对象。</xref:System.ServiceModel.InstanceContext> 通常，此方法用于附加扩展，以便可以在应用程序访问自定义数据。"
  syntax:
    content: public void Initialize (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "系统提供的实例上下文中。"
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "触发的创建的实例上下文的消息。"
  overload: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  isExternal: false
  name: Initialize(InstanceContext,Message)
  nameWithType: IInstanceContextInitializer.Initialize(InstanceContext,Message)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(InstanceContext,Message)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize*
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  isExternal: false
  name: Initialize
  nameWithType: IInstanceContextInitializer.Initialize
