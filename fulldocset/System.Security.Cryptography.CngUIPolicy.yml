### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngUIPolicy
  id: CngUIPolicy
  children:
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.CreationTitle
  - System.Security.Cryptography.CngUIPolicy.Description
  - System.Security.Cryptography.CngUIPolicy.FriendlyName
  - System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  - System.Security.Cryptography.CngUIPolicy.UseContext
  langs:
  - csharp
  name: CngUIPolicy
  nameWithType: CngUIPolicy
  fullName: System.Security.Cryptography.CngUIPolicy
  type: Class
  summary: "封装访问受保护的密钥时，将显示下一代加密技术 (CNG) 的用户界面 (UI) 的可选配置参数。"
  remarks: "此类，可创建以显示有关密钥的操作，如智能卡 PIN 提示提示 UI 策略。 它还使您能够强制用户以交互方式访问密钥，即使密钥存储在软件密钥存储提供程序 (KSP) 而不是智能卡中。 CNG 访问受保护的密钥时，会对 ui 显示这些配置参数。"
  syntax:
    content: public sealed class CngUIPolicy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;></xref>通过使用指定的保护级别的类。"
  remarks: "此构造函数设置 UI 提示方案中的密钥的保护级别。"
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "指定的保护级别的枚举值的按位组合。"
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;></xref>类通过使用指定的保护级别和友好名称。"
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel, string friendlyName);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "指定的保护级别的枚举值的按位组合。"
    - id: friendlyName
      type: System.String
      description: "用于在 UI 提示中的密钥友好名称。 指定要使用的默认名称的 null 字符串。"
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;></xref>类通过使用指定的保护级别、 友好名称和说明。"
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel, string friendlyName, string description);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "指定的保护级别的枚举值的按位组合。"
    - id: friendlyName
      type: System.String
      description: "用于在 UI 提示中的密钥友好名称。 指定要使用的默认名称的 null 字符串。"
    - id: description
      type: System.String
      description: "参数的完整文本描述。 指定要使用的默认说明的 null 字符串。"
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels,String,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;></xref>类通过使用指定的保护级别、 友好名称、 描述字符串，并使用上下文。"
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel, string friendlyName, string description, string useContext);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "指定的保护级别的枚举值的按位组合。"
    - id: friendlyName
      type: System.String
      description: "用于在 UI 提示中的密钥友好名称。 指定要使用的默认名称的 null 字符串。"
    - id: description
      type: System.String
      description: "参数的完整文本描述。 指定要使用的默认说明的 null 字符串。"
    - id: useContext
      type: System.String
      description: "密钥的使用方式的说明。 指定要使用的默认说明的 null 字符串。"
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;></xref>通过使用指定的保护级别、 友好名称、 描述字符串，使用上下文和标题的类。"
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel, string friendlyName, string description, string useContext, string creationTitle);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "指定的保护级别的枚举值的按位组合。"
    - id: friendlyName
      type: System.String
      description: "用于在 UI 提示中的密钥友好名称。 指定要使用的默认名称的 null 字符串。"
    - id: description
      type: System.String
      description: "参数的完整文本描述。 指定要使用的默认说明的 null 字符串。"
    - id: useContext
      type: System.String
      description: "密钥的使用方式的说明。 指定要使用的默认说明的 null 字符串。"
    - id: creationTitle
      type: System.String
      description: "提供 UI 提示对话框标题。 指定要使用的默认标题的 null 字符串。"
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.CreationTitle
  id: CreationTitle
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CreationTitle
  nameWithType: CngUIPolicy.CreationTitle
  fullName: System.Security.Cryptography.CngUIPolicy.CreationTitle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取提示由 UI 显示的标题。"
  syntax:
    content: public string CreationTitle { get; }
    return:
      type: System.String
      description: "访问密钥时出现的对话框中的标题。"
  overload: System.Security.Cryptography.CngUIPolicy.CreationTitle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.Description
  id: Description
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: Description
  nameWithType: CngUIPolicy.Description
  fullName: System.Security.Cryptography.CngUIPolicy.Description
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取由 UI 显示的说明字符串提示。"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "访问密钥时出现的对话框中说明文本。"
  overload: System.Security.Cryptography.CngUIPolicy.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: FriendlyName
  nameWithType: CngUIPolicy.FriendlyName
  fullName: System.Security.Cryptography.CngUIPolicy.FriendlyName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取由 UI 显示的友好名称的提示。"
  syntax:
    content: public string FriendlyName { get; }
    return:
      type: System.String
      description: "用于描述中访问密钥时出现的对话框中的密钥友好名称。"
  overload: System.Security.Cryptography.CngUIPolicy.FriendlyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  id: ProtectionLevel
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: ProtectionLevel
  nameWithType: CngUIPolicy.ProtectionLevel
  fullName: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取密钥的用户界面保护级别。"
  syntax:
    content: public System.Security.Cryptography.CngUIProtectionLevels ProtectionLevel { get; }
    return:
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "一个对象，描述的将应用于密钥的用户界面保护级别。"
  overload: System.Security.Cryptography.CngUIPolicy.ProtectionLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.UseContext
  id: UseContext
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: UseContext
  nameWithType: CngUIPolicy.UseContext
  fullName: System.Security.Cryptography.CngUIPolicy.UseContext
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "获取密钥的使用方式的说明。"
  syntax:
    content: public string UseContext { get; }
    return:
      type: System.String
      description: "密钥的使用方式的说明。"
  overload: System.Security.Cryptography.CngUIPolicy.UseContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
- uid: System.Security.Cryptography.CngUIProtectionLevels
  parent: System.Security.Cryptography
  isExternal: false
  name: CngUIProtectionLevels
  nameWithType: CngUIProtectionLevels
  fullName: System.Security.Cryptography.CngUIProtectionLevels
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String)
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels,String,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String)
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
- uid: System.Security.Cryptography.CngUIPolicy.CreationTitle
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CreationTitle
  nameWithType: CngUIPolicy.CreationTitle
  fullName: System.Security.Cryptography.CngUIPolicy.CreationTitle
- uid: System.Security.Cryptography.CngUIPolicy.Description
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: Description
  nameWithType: CngUIPolicy.Description
  fullName: System.Security.Cryptography.CngUIPolicy.Description
- uid: System.Security.Cryptography.CngUIPolicy.FriendlyName
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: FriendlyName
  nameWithType: CngUIPolicy.FriendlyName
  fullName: System.Security.Cryptography.CngUIPolicy.FriendlyName
- uid: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: ProtectionLevel
  nameWithType: CngUIPolicy.ProtectionLevel
  fullName: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
- uid: System.Security.Cryptography.CngUIPolicy.UseContext
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: UseContext
  nameWithType: CngUIPolicy.UseContext
  fullName: System.Security.Cryptography.CngUIPolicy.UseContext
- uid: System.Security.Cryptography.CngUIPolicy.#ctor*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy
  nameWithType: CngUIPolicy.CngUIPolicy
- uid: System.Security.Cryptography.CngUIPolicy.CreationTitle*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CreationTitle
  nameWithType: CngUIPolicy.CreationTitle
- uid: System.Security.Cryptography.CngUIPolicy.Description*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: Description
  nameWithType: CngUIPolicy.Description
- uid: System.Security.Cryptography.CngUIPolicy.FriendlyName*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: FriendlyName
  nameWithType: CngUIPolicy.FriendlyName
- uid: System.Security.Cryptography.CngUIPolicy.ProtectionLevel*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: ProtectionLevel
  nameWithType: CngUIPolicy.ProtectionLevel
- uid: System.Security.Cryptography.CngUIPolicy.UseContext*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: UseContext
  nameWithType: CngUIPolicy.UseContext
