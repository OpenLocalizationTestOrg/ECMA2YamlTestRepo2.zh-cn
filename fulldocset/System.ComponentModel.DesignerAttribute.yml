### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DesignerAttribute
  id: DesignerAttribute
  children:
  - System.ComponentModel.DesignerAttribute.#ctor(System.String)
  - System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  - System.ComponentModel.DesignerAttribute.DesignerTypeName
  - System.ComponentModel.DesignerAttribute.Equals(System.Object)
  - System.ComponentModel.DesignerAttribute.GetHashCode
  - System.ComponentModel.DesignerAttribute.TypeId
  langs:
  - csharp
  name: DesignerAttribute
  nameWithType: DesignerAttribute
  fullName: System.ComponentModel.DesignerAttribute
  type: Class
  summary: "指定用于实现组件的设计时服务的类。"
  remarks: "你为设计时服务使用的类必须实现<xref:System.ComponentModel.Design.IDesigner>接口。</xref:System.ComponentModel.Design.IDesigner>       使用<xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A>属性来查找设计器的基类型。</xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> 使用<xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A>属性获取与此成员关联的设计器的类型的名称。</xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A>       有关详细信息，请参阅[属性](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a class called `MyForm`. `MyForm` has two attributes, a DesignerAttribute that specifies this class uses the <xref:System.Windows.Forms.Design.DocumentDesigner>, and a <xref:System.ComponentModel.DesignerCategoryAttribute> that specifies the <xref:System.ComponentModel.DesignerCategoryAttribute.Form> category.  \n  \n [!code-cpp[Classic DesignerAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._157_1.cpp)]\n [!code-vb[Classic DesignerAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._157_1.vb)]\n [!code-cs[Classic DesignerAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._157_1.cs)]  \n  \n The next example creates an instance of `MyForm`. Then it gets the attributes for the class, extracts the DesignerAttribute, and prints the name of the designer.  \n  \n [!code-cpp[Classic DesignerAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._157_2.cpp)]\n [!code-vb[Classic DesignerAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._157_2.vb)]\n [!code-cs[Classic DesignerAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._157_2.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      public sealed class DesignerAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String)
  nameWithType: DesignerAttribute.DesignerAttribute(String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.DesignerAttribute&quot;></xref>类使用的类型提供设计时服务的名称。"
  remarks: "你为设计时服务使用的类必须实现<xref:System.ComponentModel.Design.IDesigner>接口。</xref:System.ComponentModel.Design.IDesigner>"
  syntax:
    content: public DesignerAttribute (string designerTypeName);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "提供此特性的组件的设计时服务的类型的完全限定名称的串联绑定到和此类型驻留的程序集的名称。"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.DesignerAttribute&quot;></xref>类提供设计时服务的类型。"
  remarks: "你为设计时服务使用的类必须实现<xref:System.ComponentModel.Design.IDesigner>接口。</xref:System.ComponentModel.Design.IDesigner>"
  syntax:
    content: public DesignerAttribute (Type designerType);
    parameters:
    - id: designerType
      type: System.Type
      description: "A<xref:System.Type>表示的提供此属性的组件的设计时服务的类的绑定到。</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String,String)
  nameWithType: DesignerAttribute.DesignerAttribute(String,String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.DesignerAttribute&quot;></xref>类设计器使用设计器的类型和类的基类。"
  remarks: "你为设计时服务使用的类必须实现<xref:System.ComponentModel.Design.IDesigner>接口。</xref:System.ComponentModel.Design.IDesigner>       `designerBaseTypeName`参数使你可以将附加的设计器中为给定类的多个类型。"
  syntax:
    content: public DesignerAttribute (string designerTypeName, string designerBaseTypeName);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "提供此特性的组件的设计时服务的类型的完全限定名称的串联绑定到和此类型驻留的程序集的名称。"
    - id: designerBaseTypeName
      type: System.String
      description: "要与设计器类关联的基本类完全限定的名称。"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(String,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.DesignerAttribute&quot;></xref>类，设计器使用设计器的类和基类的名称。"
  remarks: "你为设计时服务使用的类必须实现<xref:System.ComponentModel.Design.IDesigner>接口。</xref:System.ComponentModel.Design.IDesigner>       `designerBaseType`参数使你可以将附加的设计器中为给定类的多个类型。"
  syntax:
    content: public DesignerAttribute (string designerTypeName, Type designerBaseType);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "提供此特性的组件的设计时服务的类型的完全限定名称的串联绑定到和此类型驻留的程序集的名称。"
    - id: designerBaseType
      type: System.Type
      description: "A <xref:System.Type>，它表示要与关联的基类`designerTypeName`。</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(Type,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.DesignerAttribute&quot;></xref>类使用的设计器和设计器的基类的类型。"
  remarks: "你为设计时服务使用的类必须实现<xref:System.ComponentModel.Design.IDesigner>接口。</xref:System.ComponentModel.Design.IDesigner>       `designerBaseType`参数使你可以将附加的设计器中为给定类的多个类型。"
  syntax:
    content: public DesignerAttribute (Type designerType, Type designerBaseType);
    parameters:
    - id: designerType
      type: System.Type
      description: "A<xref:System.Type>表示的提供此属性的组件的设计时服务的类的绑定到。</xref:System.Type>"
    - id: designerBaseType
      type: System.Type
      description: "A <xref:System.Type>，它表示要与关联的基类`designerType`。</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  id: DesignerBaseTypeName
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取此设计器的基类型的名称。"
  syntax:
    content: public string DesignerBaseTypeName { get; }
    return:
      type: System.String
      description: "此设计器的基类型的名称。"
  overload: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName
  id: DesignerTypeName
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取与此设计器的属性关联的设计器类型的名称。"
  syntax:
    content: public string DesignerTypeName { get; }
    return:
      type: System.String
      description: "与此设计器的属性关联的设计器类型名称。"
  overload: System.ComponentModel.DesignerAttribute.DesignerTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DesignerAttribute.Equals(Object)
  fullName: System.ComponentModel.DesignerAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回给定对象的值是否等于当前<xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref>。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要测试的值相等性的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果给定的对象的值是否等于当前;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DesignerAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DesignerAttribute.GetHashCode()
  fullName: System.ComponentModel.DesignerAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回此实例的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.ComponentModel.DesignerAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
  fullName: System.ComponentModel.DesignerAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取此特性类型的唯一 ID。"
  remarks: "它用于通过筛选算法标识具有相同的类型的两个属性。 对于大多数属性，这只返回<xref:System.Type>属性的实例。</xref:System.Type> <xref:System.ComponentModel.DesignerAttribute>重写此特性以包含设计器的基类型的类型。</xref:System.ComponentModel.DesignerAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "此特性类型唯一 ID。"
  overload: System.ComponentModel.DesignerAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String)
  nameWithType: DesignerAttribute.DesignerAttribute(String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String,String)
  nameWithType: DesignerAttribute.DesignerAttribute(String,String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,String)
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(String,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,Type)
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(Type,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type,Type)
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerTypeName
- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: DesignerAttribute.Equals(Object)
  fullName: System.ComponentModel.DesignerAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.DesignerAttribute.GetHashCode
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: DesignerAttribute.GetHashCode()
  fullName: System.ComponentModel.DesignerAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DesignerAttribute.TypeId
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
  fullName: System.ComponentModel.DesignerAttribute.TypeId
- uid: System.ComponentModel.DesignerAttribute.#ctor*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute
  nameWithType: DesignerAttribute.DesignerAttribute
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
- uid: System.ComponentModel.DesignerAttribute.Equals*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: Equals
  nameWithType: DesignerAttribute.Equals
- uid: System.ComponentModel.DesignerAttribute.GetHashCode*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: DesignerAttribute.GetHashCode
- uid: System.ComponentModel.DesignerAttribute.TypeId*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
