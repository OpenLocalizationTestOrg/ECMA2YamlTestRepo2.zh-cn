### YamlMime:ManagedReference
items:
- uid: System.Messaging.Trustee
  id: Trustee
  children:
  - System.Messaging.Trustee.#ctor
  - System.Messaging.Trustee.#ctor(System.String)
  - System.Messaging.Trustee.#ctor(System.String,System.String)
  - System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  - System.Messaging.Trustee.Name
  - System.Messaging.Trustee.SystemName
  - System.Messaging.Trustee.TrusteeType
  langs:
  - csharp
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
  type: Class
  summary: "指定用户帐户、 组帐户或将应用的访问控制项的登录会话。"
  remarks: "受信者是要向其授予或拒绝其访问权限时创建的访问控制项的实体。 设置<xref:System.Messaging.Trustee.TrusteeType%2A>成员 (直接或使用<xref:System.Messaging.Trustee.%23ctor%2A>构造函数) 来指定受信者是用户、 计算机或其他类型。</xref:System.Messaging.Trustee.%23ctor%2A> </xref:System.Messaging.Trustee.TrusteeType%2A> 如果未设置的权限的受信者之前指定受信者类型，类型将默认为`Unknown`。       必须指定的值<xref:System.Messaging.Trustee.Name%2A>之前使用受信者设置权限的属性。</xref:System.Messaging.Trustee.Name%2A> <xref:System.Messaging.Trustee.Name%2A>包含要向其分配新的访问权限的用户、 组或计算机帐户的名称。</xref:System.Messaging.Trustee.Name%2A> （可选） 你可以设置<xref:System.Messaging.Trustee.SystemName%2A>属性来标识在其的受信者帐户查找来解析该名称的安全标识符的系统的名称。</xref:System.Messaging.Trustee.SystemName%2A> 如果未指定的值<xref:System.Messaging.Trustee.SystemName%2A>，本地计算机查找帐户名称。</xref:System.Messaging.Trustee.SystemName%2A>"
  syntax:
    content: public class Trustee
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor
  id: '#ctor'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee()
  nameWithType: Trustee.Trustee()
  fullName: System.Messaging.Trustee.Trustee()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新实例<xref href=&quot;System.Messaging.Trustee&quot;></xref>而无需设置任何其读/写属性的类。"
  remarks: "必须指定的值<xref:System.Messaging.Trustee.Name%2A>之前使用的属性<xref:System.Messaging.Trustee>实例来设置权限。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.Name%2A> （可选） 你可以设置<xref:System.Messaging.Trustee.SystemName%2A>属性来标识在其的受信者帐户查找来解析该名称的安全标识符的系统的名称。</xref:System.Messaging.Trustee.SystemName%2A> 如果未指定的值<xref:System.Messaging.Trustee.SystemName%2A>，本地计算机查找帐户名称。</xref:System.Messaging.Trustee.SystemName%2A>"
  syntax:
    content: public Trustee ();
    parameters: []
  overload: System.Messaging.Trustee.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String)
  nameWithType: Trustee.Trustee(String)
  fullName: System.Messaging.Trustee.Trustee(String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新实例<xref href=&quot;System.Messaging.Trustee&quot;></xref>类型类<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>，则设置<> *1> 属性设置为指定的值，与<> *1> 到<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  remarks: "使用此重载设置受信者帐户并指定使用本地计算机以查找该帐户。 <xref:System.Messaging.Trustee.TrusteeType%2A>属性设置为`Unknown`，但你可以使用的此实例之前修改该值<xref:System.Messaging.Trustee>设置权限。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.TrusteeType%2A>"
  syntax:
    content: public Trustee (string name);
    parameters:
    - id: name
      type: System.String
      description: "要分配给值<xref:System.Messaging.Trustee.Name*>属性。</xref:System.Messaging.Trustee.Name*>"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String,String)
  nameWithType: Trustee.Trustee(String,String)
  fullName: System.Messaging.Trustee.Trustee(String,String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新实例<xref href=&quot;System.Messaging.Trustee&quot;></xref>类型类<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>，则设置<xref:System.Messaging.Trustee.Name*>和<xref uid=&quot;langword_csharp_SystemName&quot; name=&quot;SystemName&quot; href=&quot;&quot;></xref>为指定的值的属性。</xref:System.Messaging.Trustee.Name*>"
  remarks: "使用此重载设置受信者帐户并指定使用网络计算机，来查找该帐户。 <xref:System.Messaging.Trustee.TrusteeType%2A>属性设置为`Unknown`，但你可以使用的此实例之前修改该值<xref:System.Messaging.Trustee>设置权限。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.TrusteeType%2A>"
  syntax:
    content: public Trustee (string name, string systemName);
    parameters:
    - id: name
      type: System.String
      description: "要分配给值<xref:System.Messaging.Trustee.Name*>属性。</xref:System.Messaging.Trustee.Name*>"
    - id: systemName
      type: System.String
      description: "要分配给值<xref:System.Messaging.Trustee.SystemName*>属性。</xref:System.Messaging.Trustee.SystemName*>"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  id: '#ctor(System.String,System.String,System.Messaging.TrusteeType)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String,String,TrusteeType)
  nameWithType: Trustee.Trustee(String,String,TrusteeType)
  fullName: System.Messaging.Trustee.Trustee(String,String,TrusteeType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新实例<xref href=&quot;System.Messaging.Trustee&quot;></xref>设置的指定类型的类<> *1> 和<> *1> 为指定的值的属性。"
  remarks: "受信者类型知道要设置受信者帐户并指定要用于查找该帐户的网络计算机时，请使用此重载。       此重载设置<xref:System.Messaging.Trustee.TrusteeType%2A>属性构造，但您可以修改该值，然后才能使用此实例<xref:System.Messaging.Trustee>设置权限。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.TrusteeType%2A> `Unknown`仅当你不知道的正在使用，但知道它是有效的信任类型时，应使用受信者类型 （其他重载构造函数的默认设置）。"
  syntax:
    content: public Trustee (string name, string systemName, System.Messaging.TrusteeType trusteeType);
    parameters:
    - id: name
      type: System.String
      description: "要分配给值<xref:System.Messaging.Trustee.Name*>属性。</xref:System.Messaging.Trustee.Name*>"
    - id: systemName
      type: System.String
      description: "要分配给值<xref:System.Messaging.Trustee.SystemName*>属性。</xref:System.Messaging.Trustee.SystemName*>"
    - id: trusteeType
      type: System.Messaging.TrusteeType
      description: "A <xref href=&quot;System.Messaging.TrusteeType&quot;> </xref> ，该值指示受信者的帐户类型。"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.Name
  id: Name
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Name
  nameWithType: Trustee.Name
  fullName: System.Messaging.Trustee.Name
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置受信者的名称。"
  remarks: "你必须指定名称属性的值，然后再使用<xref:System.Messaging.Trustee>设置权限。</xref:System.Messaging.Trustee> 名称包含的用户、 组或要向其分配新的访问权限的计算机帐户的名称。       如果未指定的值<xref:System.Messaging.Trustee.SystemName%2A>本地计算机上查找属性，你在名称属性中标识的帐户。</xref:System.Messaging.Trustee.SystemName%2A> 如果没有指定<xref:System.Messaging.Trustee.SystemName%2A>，你指定的计算机上查找该帐户。</xref:System.Messaging.Trustee.SystemName%2A>       如果你未连接到网络 （例如，如果你在工作组模式下），Name 属性可以为任何本地用户或组。 在这种情况下，不应指定任何值<xref:System.Messaging.Trustee.SystemName%2A>，如工作组模式是本地的定义。</xref:System.Messaging.Trustee.SystemName%2A>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "要向其分配的新权限的帐户的名称。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.Trustee.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Name 属性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Messaging.Trustee.SystemName
  id: SystemName
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: System.Messaging.Trustee.SystemName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置要查找的受信者帐户在其计算机。"
  remarks: "必须指定的值<xref:System.Messaging.Trustee.Name%2A>使用的此实例之前<xref:System.Messaging.Trustee>设置权限，但系统名称是可选的。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.Name%2A> 如果你离开系统名称`null`，使用本地计算机以查找在指定的帐户<xref:System.Messaging.Trustee.Name%2A>属性。</xref:System.Messaging.Trustee.Name%2A>"
  syntax:
    content: public string SystemName { get; set; }
    return:
      type: System.String
      description: "该帐户所在的本地或远程计算机。 默认值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示将本地计算机上查找名称。"
  overload: System.Messaging.Trustee.SystemName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Trustee.TrusteeType
  id: TrusteeType
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: System.Messaging.Trustee.TrusteeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "获取或设置的受信者，标识是否受信者为用户、 组、 计算机、 域或别名的类型。"
  remarks: "TrusteeType 指示哪种类型帐户的受信者与相关联的域控制器上或在本地计算机上。 例如，这可以是用户帐户、 组帐户或计算机帐户。       如果在指定的预定义的组名称<xref:System.Messaging.Trustee.Name%2A>属性，如每个人，TrusteeType 是`Group`，而不是`Alias`。</xref:System.Messaging.Trustee.Name%2A>"
  syntax:
    content: public System.Messaging.TrusteeType TrusteeType { get; set; }
    return:
      type: System.Messaging.TrusteeType
      description: "A <xref href=&quot;System.Messaging.TrusteeType&quot;> </xref> ，该值指示哪种类型的帐户对系统的受信者。 默认值是<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.Trustee.TrusteeType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定的受信者类型不是之一<xref href=&quot;System.Messaging.TrusteeType&quot;></xref>枚举成员。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.Trustee.#ctor
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee()
  nameWithType: Trustee.Trustee()
  fullName: System.Messaging.Trustee.Trustee()
- uid: System.Messaging.Trustee.#ctor(System.String)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String)
  nameWithType: Trustee.Trustee(String)
  fullName: System.Messaging.Trustee.Trustee(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.Trustee.#ctor(System.String,System.String)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String,String)
  nameWithType: Trustee.Trustee(String,String)
  fullName: System.Messaging.Trustee.Trustee(String,String)
- uid: System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String,String,TrusteeType)
  nameWithType: Trustee.Trustee(String,String,TrusteeType)
  fullName: System.Messaging.Trustee.Trustee(String,String,TrusteeType)
- uid: System.Messaging.TrusteeType
  parent: System.Messaging
  isExternal: false
  name: TrusteeType
  nameWithType: TrusteeType
  fullName: System.Messaging.TrusteeType
- uid: System.Messaging.Trustee.Name
  parent: System.Messaging.Trustee
  isExternal: false
  name: Name
  nameWithType: Trustee.Name
  fullName: System.Messaging.Trustee.Name
- uid: System.Messaging.Trustee.SystemName
  parent: System.Messaging.Trustee
  isExternal: false
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: System.Messaging.Trustee.SystemName
- uid: System.Messaging.Trustee.TrusteeType
  parent: System.Messaging.Trustee
  isExternal: false
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: System.Messaging.Trustee.TrusteeType
- uid: System.Messaging.Trustee.#ctor*
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee
  nameWithType: Trustee.Trustee
- uid: System.Messaging.Trustee.Name*
  parent: System.Messaging.Trustee
  isExternal: false
  name: Name
  nameWithType: Trustee.Name
- uid: System.Messaging.Trustee.SystemName*
  parent: System.Messaging.Trustee
  isExternal: false
  name: SystemName
  nameWithType: Trustee.SystemName
- uid: System.Messaging.Trustee.TrusteeType*
  parent: System.Messaging.Trustee
  isExternal: false
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
