### YamlMime:ManagedReference
items:
- uid: System.Globalization.KoreanLunisolarCalendar
  id: KoreanLunisolarCalendar
  children:
  - System.Globalization.KoreanLunisolarCalendar.#ctor
  - System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.KoreanLunisolarCalendar.Eras
  - System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  - System.Globalization.KoreanLunisolarCalendar.GregorianEra
  - System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  - System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  langs:
  - csharp
  name: KoreanLunisolarCalendar
  nameWithType: KoreanLunisolarCalendar
  fullName: System.Globalization.KoreanLunisolarCalendar
  type: Class
  summary: "表示部门，如月、 日和年中的时间。 年被计算公历，而日和月阴阳历计算。"
  remarks: "KoreanLunisolarCalendar 类派生自<xref:System.Globalization.EastAsianLunisolarCalendar>类，该类表示阴阳历。</xref:System.Globalization.EastAsianLunisolarCalendar> <xref:System.Globalization.EastAsianLunisolarCalendar>类支持甲子年循环 （重复每隔 60 年） 除了太阳年和阴历月。</xref:System.Globalization.EastAsianLunisolarCalendar> 日历中每个阳历年为关联甲子年、 天干，与地面分支，并且这些日历只能有一年中的任何月后的闰月。      1> [!NOTE]&1;> 在.NET Framework 中使用 KoreanLunisolarCalendar 类和其他日历类的信息，请参阅[使用日历](~/add/includes/ajax-current-ext-md.md)。       KoreanLunisolarCalendar 类计算年使用的公历日历和日期和月份使用<xref:System.Globalization.EastAsianLunisolarCalendar>类。</xref:System.Globalization.EastAsianLunisolarCalendar>       后一年中的任何月份中，可能会发生闰月。 例如，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>方法返回一个数字，介于 1 和 13，该值指示指定的日期与关联的月份。</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> 如果一年中，在第八个和第 9 个月之间存在闰月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法闰第八个月的 9 和 10 第 9 个月的第八个月份返回 8。</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       当前，KoreanLunisolarCalendar 未使用的任何<xref:System.Globalization.CultureInfo>类。</xref:System.Globalization.CultureInfo>支持的区域性 因此，此类仅用于计算中朝鲜阴阳历的日期。       每个<xref:System.Globalization.CultureInfo>支持一组的日历。</xref:System.Globalization.CultureInfo> <xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历和<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>属性返回一个包含所有支持的区域性的日历数组。</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> 若要更改使用的<xref:System.Globalization.CultureInfo>，应用程序应设置此<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>为新的<xref:System.Globalization.Calendar>。</xref:System.Globalization.Calendar></xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName></xref:System.Globalization.DateTimeFormatInfo.Calendar%2A></xref:System.Globalization.CultureInfo>的日历"
  syntax:
    content: 'public class KoreanLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'
  inheritance:
  - System.Globalization.Calendar
  - System.Globalization.EastAsianLunisolarCalendar
  implements: []
  inheritedMembers:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: KoreanLunisolarCalendar()
  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "初始化的新实例<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>类。"
  syntax:
    content: public KoreanLunisolarCalendar ();
    parameters: []
  overload: System.Globalization.KoreanLunisolarCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取中之前所指定的年份的年份的天数<xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>属性。</xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>"
  remarks: "此属性返回 384 的常量值。"
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "中之前所指定的<xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>.</xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>年份的年份的天数"
  overload: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.Eras
  id: Eras
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: KoreanLunisolarCalendar.Eras
  fullName: System.Globalization.KoreanLunisolarCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取对应于日期和时间由当前支持的范围的纪元<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>对象。"
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "指定相关的纪元的 32 位有符号整数数组。 返回值<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>对象始终是数组，其中包含一个元素等于<xref href=&quot;System.Globalization.KoreanLunisolarCalendar.GregorianEra&quot;></xref>值。"
  overload: System.Globalization.KoreanLunisolarCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "检索对应于指定<xref:System.DateTime>.</xref:System.DateTime>纪元"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>读取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "一个整数，表示指定纪元<code> time </code>参数。 返回值<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>对象始终是<xref href=&quot;System.Globalization.KoreanLunisolarCalendar.GregorianEra&quot;></xref>值。"
  overload: System.Globalization.KoreanLunisolarCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>表示日期和时间小于<xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>或大于<xref:System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*>。"
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  id: GregorianEra
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: GregorianEra
  nameWithType: KoreanLunisolarCalendar.GregorianEra
  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定对应于当前的公历纪元<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>对象。"
  remarks: "此字段的值为 1。       <xref:System.Globalization.KoreanLunisolarCalendar>类只识别当前纪元。</xref:System.Globalization.KoreanLunisolarCalendar>"
  syntax:
    content: public const int GregorianEra = 1;
    return:
      type: System.Int32
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取的最大日期和时间受<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>类。"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最新的日期和时间受<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>类，这等同于的 2051 年 2 月 10，那一刻 在公历日历中。"
  overload: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "获取的最小日期和时间受<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>类。"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最早的日期和时间受<xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;></xref>类，该类是等效的 918 年 2 月 14，那一刻到 在公历日历中。"
  overload: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: System.Globalization.EastAsianLunisolarCalendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Globalization.KoreanLunisolarCalendar.#ctor
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: KoreanLunisolarCalendar()
  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()
- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.KoreanLunisolarCalendar.Eras
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanLunisolarCalendar.Eras
  fullName: System.Globalization.KoreanLunisolarCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: GregorianEra
  nameWithType: KoreanLunisolarCalendar.GregorianEra
  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra
- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
- uid: System.Globalization.KoreanLunisolarCalendar.#ctor*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: KoreanLunisolarCalendar
  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar
- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.KoreanLunisolarCalendar.Eras*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanLunisolarCalendar.Eras
- uid: System.Globalization.KoreanLunisolarCalendar.GetEra*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: GetEra
  nameWithType: KoreanLunisolarCalendar.GetEra
- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime
