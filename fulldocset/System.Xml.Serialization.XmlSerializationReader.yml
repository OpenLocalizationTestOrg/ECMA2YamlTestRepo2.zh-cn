### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationReader
  id: XmlSerializationReader
  children:
  - System.Xml.Serialization.XmlSerializationReader.#ctor
  - System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  - System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  - System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  - System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  - System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.DecodeName
  - System.Xml.Serialization.XmlSerializationReader.Document
  - System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  - System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  - System.Xml.Serialization.XmlSerializationReader.GetXsiType
  - System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  - System.Xml.Serialization.XmlSerializationReader.InitIDs
  - System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  - System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  - System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  - System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  - System.Xml.Serialization.XmlSerializationReader.Reader
  - System.Xml.Serialization.XmlSerializationReader.ReaderCount
  - System.Xml.Serialization.XmlSerializationReader.ReadNull
  - System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  - System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  - System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  - System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  - System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  langs:
  - csharp
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader
  fullName: System.Xml.Serialization.XmlSerializationReader
  type: Class
  summary: "控件反序列化的<xref:System.Xml.Serialization.XmlSerializer>类。</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "在初始化，过程.NET Framework XML 序列化基础结构动态生成并编译的临时类派生自抽象 XmlSerializationReader 类的反序列化。 在反序列化的 XML 文档转换为.NET Framework 内还实现 XmlSerializationReader<xref:System.Web.Services.Discovery.DiscoveryDocument>和<xref:System.Web.Services.Description.ServiceDescription>对象。</xref:System.Web.Services.Description.ServiceDescription> </xref:System.Web.Services.Discovery.DiscoveryDocument>       您不应从 XmlSerializationReader 派生类。 而应调用之一<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>"
  syntax:
    content: 'public abstract class XmlSerializationReader : System.Xml.Serialization.XmlSerializationGeneratedCode'
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新实例<xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;></xref>类。"
  syntax:
    content: protected XmlSerializationReader ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  id: AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddFixup(XmlSerializationReader+CollectionFixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  syntax:
    content: protected void AddFixup (System.Xml.Serialization.XmlSerializationReader.CollectionFixup fixup);
    parameters:
    - id: fixup
      type: System.Xml.Serialization.XmlSerializationReader.CollectionFixup
      description: "要添加。"
  overload: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  id: AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddFixup(XmlSerializationReader+Fixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  syntax:
    content: protected void AddFixup (System.Xml.Serialization.XmlSerializationReader.Fixup fixup);
    parameters:
    - id: fixup
      type: System.Xml.Serialization.XmlSerializationReader.Fixup
      description: "要添加。"
  overload: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  id: AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  nameWithType: XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "将存储的实现<xref href=&quot;System.Xml.Serialization.XmlSerializationReadCallback&quot;></xref>委托和更高版本调用其输入的数据。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       在初始化过程，.NET Framework XML 序列化基础结构动态生成并编译派生自<xref:System.Xml.Serialization.XmlSerializationReader>.</xref:System.Xml.Serialization.XmlSerializationReader>的反序列化的临时类 在此过程中，.NET Framework 生成实现的读取的方法<xref:System.Xml.Serialization.XmlSerializationReadCallback>委派。</xref:System.Xml.Serialization.XmlSerializationReadCallback> 它会因此对于某些.NET Framework 类型和 XML 数据类型，通过 SOAP 编码的 XML 序列并且不是根元素之间的映射。 接下来，根据需要，在反序列化过程中调用读取的方法。       不应直接创建<xref:System.Xml.Serialization.XmlSerializationReadCallback>类</xref:System.Xml.Serialization.XmlSerializationReadCallback>的实例"
  syntax:
    content: protected void AddReadCallback (string name, string ns, Type type, System.Xml.Serialization.XmlSerializationReadCallback read);
    parameters:
    - id: name
      type: System.String
      description: "要反序列化的.NET Framework 类型的名称。"
    - id: ns
      type: System.String
      description: "要反序列化的.NET Framework 类型的命名空间。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>要反序列化。</xref:System.Type>"
    - id: read
      type: System.Xml.Serialization.XmlSerializationReadCallback
      description: "<xref href=&quot;System.Xml.Serialization.XmlSerializationReadCallback&quot;> </xref>委托。"
  overload: System.Xml.Serialization.XmlSerializationReader.AddReadCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  id: AddTarget(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddTarget(String,Object)
  nameWithType: XmlSerializationReader.AddTarget(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddTarget(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "存储从 SOAP 编码反序列化的对象<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>元素以供以后访问通过<xref:System.Xml.Serialization.XmlSerializationReader.GetTarget*>方法。</xref:System.Xml.Serialization.XmlSerializationReader.GetTarget*>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可由引用多次`ref`属性 (或`href`SOAP 1.1 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected void AddTarget (string id, object o);
    parameters:
    - id: id
      type: System.String
      description: "值<xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;></xref>属性<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>标识的元素的元素。"
    - id: o
      type: System.Object
      description: "从 XML 元素进行反序列化对象。"
  overload: System.Xml.Serialization.XmlSerializationReader.AddTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  id: CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CheckReaderCount(Int32,Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(Int32,Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "检查是否具有高级反序列化程序。"
  remarks: "The method is used by generated classes and should not be directly invoked.  \n  \n The CheckReaderCount method is used when the `checkDeserializerAdvances` attribute of the `<xmlSerializer>` configuration element is set to `true`. For more information, see [\\&lt;xmlSerializer\\&gt; Element](../Topic/%3CxmlSerializer%3E%20Element.md)."
  syntax:
    content: protected void CheckReaderCount (ref int whileIterations, ref int readerCount);
    parameters:
    - id: whileIterations
      type: System.Int32
      description: "当前<xref uid=&quot;langword_csharp_count&quot; name=&quot;count&quot; href=&quot;&quot;></xref>在一段时间循环。"
    - id: readerCount
      type: System.Int32
      description: "当前<xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>.</xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>"
  overload: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>不具有高级。</xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>"
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  id: CollapseWhitespace(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CollapseWhitespace(String)
  nameWithType: XmlSerializationReader.CollapseWhitespace(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "从的开头和结尾的指定字符串中移除空白字符的所有匹配项。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string CollapseWhitespace (string value);
    parameters:
    - id: value
      type: System.String
      description: "将具有移除其空白字符串。"
    return:
      type: System.String
      description: "裁剪后的字符串。"
  overload: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  id: CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateAbstractTypeException(String,String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidOperationException>，该值指示反序列化的对象应为抽象。</xref:System.InvalidOperationException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>旨在仅供使用的.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateAbstractTypeException (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "抽象类型的名称。"
    - id: ns
      type: System.String
      description: "抽象类型的.NET Framework 命名空间。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  id: CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateBadDerivationException(String,String,String,String,String,String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "填充的对象，其 XML 表示形式的当前位置处<xref:System.Xml.XmlReader>，用于读取元素的内部的选项。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateBadDerivationException (string xsdDerived, string nsDerived, string xsdBase, string nsBase, string clrDerived, string clrBase);
    parameters:
    - id: xsdDerived
      type: System.String
      description: "派生的 XML 架构数据类型的本地名称。"
    - id: nsDerived
      type: System.String
      description: "派生的 XML 架构数据类型的命名空间。"
    - id: xsdBase
      type: System.String
      description: "基的 XML 架构数据类型的本地名称。"
    - id: nsBase
      type: System.String
      description: "基的 XML 架构数据类型的命名空间。"
    - id: clrDerived
      type: System.String
      description: "派生的.NET Framework 类型的命名空间。"
    - id: clrBase
      type: System.String
      description: "基的.NET Framework 类型的名称。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  id: CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidOperationException>，该值指示反序列化的对象不能实例化，因为在构造函数引发安全异常。</xref:System.InvalidOperationException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateCtorHasSecurityException (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "类型的名称。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  id: CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidOperationException>，该值指示反序列化的对象不能实例化，因为没有可用的构造函数。</xref:System.InvalidOperationException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInaccessibleConstructorException (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "类型的名称。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  id: CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInvalidCastException(Type,Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidCastException>，该值指示使显式引用转换失败。</xref:System.InvalidCastException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInvalidCastException (Type type, object value);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>对象不能强制转换为。</xref:System.Type> 此类型将合并到异常消息。"
    - id: value
      type: System.Object
      description: "不能强制转换对象。 此对象将合并到异常消息。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidCastException>异常。</xref:System.InvalidCastException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  id: CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInvalidCastException(Type,Object,String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidCastException>，该值指示使显式引用转换失败。</xref:System.InvalidCastException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInvalidCastException (Type type, object value, string id);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>对象不能强制转换为。</xref:System.Type> 此类型将合并到异常消息。"
    - id: value
      type: System.Object
      description: "不能强制转换对象。 此对象将合并到异常消息。"
    - id: id
      type: System.String
      description: "一个字符串标识符。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidCastException>异常。</xref:System.InvalidCastException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  id: CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateMissingIXmlSerializableType(String,String,String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidOperationException>，该值指示一种映射到 XML 架构数据类型的派生的类型不能为所在。</xref:System.InvalidOperationException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateMissingIXmlSerializableType (string name, string ns, string clrType);
    parameters:
    - id: name
      type: System.String
      description: "映射到不可用的派生类型的 XML 架构数据类型的本地名称。"
    - id: ns
      type: System.String
      description: "映射到不可用的派生类型的 XML 架构数据类型的命名空间。"
    - id: clrType
      type: System.String
      description: "为其派生的类型不能为所在的.NET Framework 基类型的全名。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  id: CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidOperationException>，该值指示 SOAP 编码集合类型不能修改和它的值不能为 filled in.</xref:System.InvalidOperationException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateReadOnlyCollectionException (string name);
    parameters:
    - id: name
      type: System.String
      description: "映射的.NET Framework 类型的完全限定的名称。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  id: CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownConstantException(String,Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidOperationException>，该值指示一个枚举值无效。</xref:System.InvalidOperationException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownConstantException (string value, Type enumType);
    parameters:
    - id: value
      type: System.String
      description: "不是有效的枚举值。"
    - id: enumType
      type: System.Type
      description: "枚举类型中。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  id: CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidOperationException>该异常指示的当前位置<xref:System.Xml.XmlReader>表示未知的 XML 节点。</xref:System.Xml.XmlReader> </xref:System.InvalidOperationException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownNodeException ();
    parameters: []
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  id: CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "创建<xref:System.InvalidOperationException>，该值指示类型是否未知。</xref:System.InvalidOperationException>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownTypeException (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>，它表示未知类型的名称。</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>异常。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName
  id: DecodeName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
  fullName: System.Xml.Serialization.XmlSerializationReader.DecodeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取或设置一个值，确定是否将 XML 字符串转换成有效的.NET Framework 类型名称。"
  remarks: "<xref:System.Xml.XmlConvert.EncodeName%2A>方法从无效的源写入有效的 XML。</xref:System.Xml.XmlConvert.EncodeName%2A> 例如，<xref:System.Data.DataColumn.ColumnName%2A>属性<xref:System.Data.DataColumn>类可以包含空格，作为 XML 无效。</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Xml.XmlConvert.DecodeName%2A>读取编码的 XML 并将其还原到原始值。</xref:System.Xml.XmlConvert.DecodeName%2A> 但是，<xref:System.Xml.Schema.XmlSchema.Read%2A>方法<xref:System.Xml.Schema.XmlSchema>类不能读取如经过编码的 XML。</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema.Read%2A> 在这种情况下，设置<xref:System.Xml.Serialization.XmlSerializationWriter.EscapeName%2A>属性`false`禁用 XML 编码。</xref:System.Xml.Serialization.XmlSerializationWriter.EscapeName%2A>"
  syntax:
    content: protected bool DecodeName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 XML 字符串都是已解码为有效的.NET Framework 类型名称;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.DecodeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Document
  id: Document
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Document
  nameWithType: XmlSerializationReader.Document
  fullName: System.Xml.Serialization.XmlSerializationReader.Document
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取在其中的 XML 文档反序列化的 XML 文档对象。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlDocument Document { get; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref>表示反序列化<xref href=&quot;System.Xml.XmlDocument&quot;></xref>数据。"
  overload: System.Xml.Serialization.XmlSerializationReader.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  id: EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: EnsureArrayIndex(Array,Int32,Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "确保给定的数组或副本，大到足以包含指定的索引。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Array EnsureArrayIndex (Array a, int index, Type elementType);
    parameters:
    - id: a
      type: System.Array
      description: "<xref:System.Array>正在检查。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "所需的索引。"
    - id: elementType
      type: System.Type
      description: "<xref:System.Type>的数组的元素。</xref:System.Type>"
    return:
      type: System.Array
      description: "现有<xref:System.Array>，如果已足够大; 否则为新的、 更大的数组，其中包含原始数组的元素。</xref:System.Array>"
  overload: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  id: FixupArrayRefs(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: FixupArrayRefs(Object)
  nameWithType: XmlSerializationReader.FixupArrayRefs(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "在其数据类型映射到.NET Framework 引用类型的 SOAP 编码的数组的值填充。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       FixupArrayRefs 方法实现<xref:System.Xml.Serialization.XmlSerializationFixupCallback>SOAP 编码的 XML 数据反序列化的委托。</xref:System.Xml.Serialization.XmlSerializationFixupCallback>       当反 XML 文档序列化到.NET Framework 对象，.NET Framework XML 序列化基础结构动态创建针对 SOAP 编码的数组，其数据类型映射到.NET Framework 引用类型的 FixupArrayRefs 方法的实例。 方法然后调用<xref:System.Xml.Serialization.XmlSerializationFixupCallback>来填充数组中的对象。</xref:System.Xml.Serialization.XmlSerializationFixupCallback>       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected void FixupArrayRefs (object fixup);
    parameters:
    - id: fixup
      type: System.Object
      description: "一个包含填充其值的数组的对象。"
  overload: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  id: GetArrayLength(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetArrayLength(String,String)
  nameWithType: XmlSerializationReader.GetArrayLength(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取 SOAP 编码数组的长度其中<xref:System.Xml.XmlReader>当前所处。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       GetArrayLength 方法适用于`arrayType`是与 SOAP 编码使用，并且用命名空间&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;指定的属性。"
  syntax:
    content: protected int GetArrayLength (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "数组应具有本地名称。"
    - id: ns
      type: System.String
      description: "数组应具有命名空间。"
    return:
      type: System.Int32
      description: "SOAP 数组的长度。"
  overload: System.Xml.Serialization.XmlSerializationReader.GetArrayLength*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  id: GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "确定是否 XML 元素其中<xref:System.Xml.XmlReader>当前所处具有 null 属性设置为值<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool GetNullAttr ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Xml.XmlReader>当前置于其上具有值 null 属性<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  id: GetTarget(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetTarget(String)
  nameWithType: XmlSerializationReader.GetTarget(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetTarget(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取要反序列化的对象从 SOAP 编码<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>元素，而存储前面通过<xref:System.Xml.Serialization.XmlSerializationReader.AddTarget*>.</xref:System.Xml.Serialization.XmlSerializationReader.AddTarget*>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。 SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected object GetTarget (string id);
    parameters:
    - id: id
      type: System.String
      description: "值<xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;></xref>属性<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>标识的元素的元素。"
    return:
      type: System.Object
      description: "要从 SOAP 编码反序列化的对象<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>元素。"
  overload: System.Xml.Serialization.XmlSerializationReader.GetTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  id: GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取的值<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置的 XML 元素的属性"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       `type`从 XML 架构命名空间的实例的属性显式指定的 XML 元素的数据类型。"
  syntax:
    content: protected System.Xml.XmlQualifiedName GetXsiType ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "XML 限定的名称，该值指示 XML 元素的数据类型。"
  overload: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化填充映射到 SOAP 编码的 XML 数据的对象的回叫方法。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       在初始化过程，.NET Framework XML 序列化基础结构动态生成并编译反序列化从<xref:System.Xml.Serialization.XmlSerializationReader>.</xref:System.Xml.Serialization.XmlSerializationReader>派生的临时类 在此过程中，.NET Framework 生成实现的读取的方法<xref:System.Xml.Serialization.XmlSerializationReadCallback>委派。</xref:System.Xml.Serialization.XmlSerializationReadCallback> 它会因此对于某些.NET Framework 类型和 XML 数据类型，通过 SOAP 编码的 XML 序列并且不是根元素之间的映射。 接下来，根据需要，在反序列化过程中调用读取的方法。       抽象 InitCallbacks 方法是临时的派生的类中创建的实例并初始化读取回叫方法。       不应直接创建实例<xref:System.Xml.Serialization.XmlSerializationReadCallback>。</xref:System.Xml.Serialization.XmlSerializationReadCallback>       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected abstract void InitCallbacks ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  id: InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "将存储中的元素和属性名称<xref:System.Xml.NameTable>对象。</xref:System.Xml.NameTable>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       InitIDs 方法为抽象类。"
  syntax:
    content: protected abstract void InitIDs ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  id: IsReturnValue
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
  fullName: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取或设置一个值，应为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>针对 SOAP 1.1 返回值。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool IsReturnValue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值为一个返回值。"
  overload: System.Xml.Serialization.XmlSerializationReader.IsReturnValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  id: IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "确定的 XML 属性名称是否表示一个 XML 命名空间。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       属性名称指示 XML 命名空间，如果它采用的形式`xmlns:``key`，其中&quot;密钥&quot;是命名空间名称。"
  syntax:
    content: protected bool IsXmlnsAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "XML 属性的名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>如果 XML 属性名称指示 XML 命名空间;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  id: ParseWsdlArrayType(System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ParseWsdlArrayType(XmlAttribute)
  nameWithType: XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "如果它是类型设置 XML 属性的值<xref uid=&quot;langword_csharp_arrayType&quot; name=&quot;arrayType&quot; href=&quot;&quot;></xref>从 Web 服务描述语言 (WSDL) 命名空间。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       WSDL 使用命名空间&quot;http://schemas.xmlsoap.org/wsdl/&quot;。"
  syntax:
    content: protected void ParseWsdlArrayType (System.Xml.XmlAttribute attr);
    parameters:
    - id: attr
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> ，可能具有类型<xref uid=&quot;langword_csharp_wsdl:array&quot; name=&quot;wsdl:array&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  id: ReadElementQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadElementQualifiedName()
  nameWithType: XmlSerializationReader.ReadElementQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "使<xref:System.Xml.XmlReader>读取当前位于元素的完全限定的名称。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ReadElementQualifiedName ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "当前的 XML 元素的完全限定的名称。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  id: ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "使<xref:System.Xml.XmlReader>读取 XML 结束标记。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected void ReadEndElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  id: Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取<xref:System.Xml.XmlReader>正在使用的对象<xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref>。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlReader Reader { get; }
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>，正由<xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref>。</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.Reader*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  id: ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>的当前计数"
  remarks: "方法使用由生成的类，并且不应直接调用。       <xref:System.Xml.Serialization.XmlSerializationReader>使用的是实例<xref:System.Xml.XmlReader>类计数读取的操作发生时。</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializationReader> 每次读取器调用适当的方法，例如增加的计数<xref:System.Xml.XmlReader.Read%2A>方法或<xref:System.Xml.XmlReader.ReadElementString%2A>方法。</xref:System.Xml.XmlReader.ReadElementString%2A> </xref:System.Xml.XmlReader.Read%2A>"
  syntax:
    content: protected int ReaderCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前计数"
  overload: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  id: ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>读取当前 XML 元素，如果元素具有值 true 的 null 属性。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool ReadNull ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果元素具有**null =&quot;true&quot;**属性值并且已被读取; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  id: ReadNullableQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNullableQualifiedName()
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>读取当前位于元素的完全限定的名称。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ReadNullableQualifiedName ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "A<xref:System.Xml.XmlQualifiedName>表示的完全限定名的当前的 XML 元素; 否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果**null =&quot;true&quot;**属性值是否存在。</xref:System.Xml.XmlQualifiedName>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  id: ReadNullableString
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNullableString()
  nameWithType: XmlSerializationReader.ReadNullableString()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>读取可能是一个简单、 纯文本 XML 元素<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string ReadNullableString ();
    parameters: []
    return:
      type: System.String
      description: "字符串值，则为否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNullableString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  id: ReadReference(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReference(String)
  nameWithType: XmlSerializationReader.ReadReference(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReference(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "读取值<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>属性 (<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> SOAP 1.2 的属性)，用于引用一个 XML 元素中 SOAP 编码。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       打开`#`从中提取出来符号`href`属性值。       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected bool ReadReference (out string fixupReference);
    parameters:
    - id: fixupReference
      type: System.String
      description: "到其中的输出字符串<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>读取属性值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已读取的值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReference*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  id: ReadReferencedElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElement()
  nameWithType: XmlSerializationReader.ReadReferencedElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "反序列化的对象，SOAP 编码<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML 元素。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       此 ReadReferencedElement 方法通过阅读获取 XML 架构数据类型`xsi:type`属性`multiRef`元素。 前缀`xsi`指 XML 架构命名空间的实例。       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected object ReadReferencedElement ();
    parameters: []
    return:
      type: System.Object
      description: "在文档中引用的元素的值。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  id: ReadReferencedElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElement(String,String)
  nameWithType: XmlSerializationReader.ReadReferencedElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "反序列化的对象，SOAP 编码<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML 元素。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       此签名<xref:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement%2A>方法获取的 XML 架构数据类型`multiRef`元素从方法参数而不是通过读取`xsi:type`属性。</xref:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement%2A> 前缀`xsi`指 XML 架构命名空间的实例。       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected object ReadReferencedElement (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "元素的 XML 架构数据类型的本地名称。"
    - id: ns
      type: System.String
      description: "元素的 XML 架构数据类型的命名空间。"
    return:
      type: System.Object
      description: "在文档中引用的元素的值。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  id: ReadReferencedElements
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElements()
  nameWithType: XmlSerializationReader.ReadReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "反序列化对象从 SOAP 编码<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> SOAP 消息中的元素。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected void ReadReferencedElements ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  id: ReadReferencingElement(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "反序列化的对象从一个 XML 元素中包含的引用的 SOAP 消息<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>元素。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected object ReadReferencingElement (out string fixupReference);
    parameters:
    - id: fixupReference
      type: System.String
      description: "到其中的输出字符串<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>读取属性值。"
    return:
      type: System.Object
      description: "反序列化的对象。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  id: ReadReferencingElement(System.String,System.String,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String,String,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "反序列化的对象从一个 XML 元素中包含的引用的 SOAP 消息<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>元素。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected object ReadReferencingElement (string name, string ns, out string fixupReference);
    parameters:
    - id: name
      type: System.String
      description: "元素的 XML 架构数据类型的本地名称。"
    - id: ns
      type: System.String
      description: "元素的 XML 架构数据类型的命名空间。"
    - id: fixupReference
      type: System.String
      description: "到其中的输出字符串<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>读取属性值。"
    return:
      type: System.Object
      description: "反序列化的对象。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  id: ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String,String,Boolean,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "反序列化的对象从一个 XML 元素中包含的引用的 SOAP 消息<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>元素。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected object ReadReferencingElement (string name, string ns, bool elementCanBeType, out string fixupReference);
    parameters:
    - id: name
      type: System.String
      description: "元素的 XML 架构数据类型的本地名称。"
    - id: ns
      type: System.String
      description: "元素的 XML 架构数据类型的命名空间。"
    - id: elementCanBeType
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果元素名称也是 XML 架构数据类型名称;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: fixupReference
      type: System.String
      description: "到其中的输出字符串的值<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>读取的属性。"
    return:
      type: System.Object
      description: "反序列化的对象。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "填充<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置其 XML 表示形式中的对象"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.Serialization.IXmlSerializable ReadSerializable (System.Xml.Serialization.IXmlSerializable serializable);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "<xref:System.Xml.Serialization.IXmlSerializable>它对应于<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>的当前位置</xref:System.Xml.Serialization.IXmlSerializable>"
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "实现<xref:System.Xml.Serialization.IXmlSerializable>从<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>位置填充其成员的接口</xref:System.Xml.Serialization.IXmlSerializable>的对象"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadSerializable(IXmlSerializable,Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "此方法支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: protected System.Xml.Serialization.IXmlSerializable ReadSerializable (System.Xml.Serialization.IXmlSerializable serializable, bool wrappedAny);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "IXmlSerializable 对象对应的 XMLReader 的当前位置。"
    - id: wrappedAny
      type: System.Boolean
      description: "指定是否包装的可序列化的对象。"
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "与从 XmlReader 的位置填充其成员实现 IXmlSerializable 接口的对象。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  id: ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "产生的结果是对的调用<xref:System.Xml.XmlReader.ReadString*>追加到输入值的方法。</xref:System.Xml.XmlReader.ReadString*>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string ReadString (string value);
    parameters:
    - id: value
      type: System.String
      description: "前缀为调用的结果字符串<xref:System.Xml.XmlReader.ReadString*>方法。</xref:System.Xml.XmlReader.ReadString*>"
    return:
      type: System.String
      description: "调用的结果<xref:System.Xml.XmlReader.ReadString*>追加到输入值的方法。</xref:System.Xml.XmlReader.ReadString*>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  id: ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadString(String,Boolean)
  nameWithType: XmlSerializationReader.ReadString(String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "返回到调用的结果<xref:System.Xml.XmlReader.ReadString*>方法<xref:System.Xml.XmlReader>类，如果需要并且向输入值追加修剪的空白区域。</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.ReadString*>"
  syntax:
    content: protected string ReadString (string value, bool trim);
    parameters:
    - id: value
      type: System.String
      description: "将追加到一个字符串。"
    - id: trim
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应删除读取操作的结果;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "追加到输入值读取操作的结果。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  id: ReadTypedNull(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadTypedNull(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "读取允许 null 值的 XML 元素 (<xref uid=&quot;langword_csharp_xsi:nil = &quot;true&quot;&quot; name=&quot;xsi:nil = &quot;true&quot;&quot; href=&quot;&quot;></xref>) 并返回泛型&lt;xref:System.Nullable%601&gt;值。"
  syntax:
    content: protected object ReadTypedNull (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示当前位置的<xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader>的简单数据类型</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Object
      description: "泛型&lt;xref:System.Nullable%601&gt;表示 null 的 XML 值。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  id: ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadTypedPrimitive(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取 XML 节点的值在其处<xref:System.Xml.XmlReader>当前所处。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected object ReadTypedPrimitive (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示当前位置的<xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader>的简单数据类型</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Object
      description: "为.NET Framework 值类型，如果值是简单的 XML 架构数据类型节点的值。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  id: ReadXmlDocument(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadXmlDocument(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlDocument(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>读取 XML 文档根元素在当前位置。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlDocument ReadXmlDocument (bool wrapped);
    parameters:
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果只在读取元素的开始元素; 之后，该方法应读取内容否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> ，包含已读取的根元素。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  id: ReadXmlNode(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadXmlNode(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlNode(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>读取在当前位置的 XML 节点。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlNode ReadXmlNode (bool wrapped);
    parameters:
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要仅在读取元素的开始元素; 之后读取内容否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref>表示已读取的 XML 节点。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  id: Referenced(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Referenced(Object)
  nameWithType: XmlSerializationReader.Referenced(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.Referenced(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "将存储的对象要反序列化从 SOAP 编码<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>元素。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 编码允许唯一的 XML 元素作为 SOAP 消息中出现一次`multiRef`标识元素`id`属性。 `id`值可以是引用的多次使用`href`属性 (或`ref`SOAP 1.2 中的属性) 替换元素中。       SOAP 1.1 规范第 5 节中介绍了 SOAP 编码。"
  syntax:
    content: protected void Referenced (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要反序列化的对象。"
  overload: System.Xml.Serialization.XmlSerializationReader.Referenced*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  id: ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "按名称获取动态生成的程序集。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ResolveDynamicAssembly 方法是静态的。"
  syntax:
    content: protected static System.Reflection.Assembly ResolveDynamicAssembly (string assemblyFullName);
    parameters:
    - id: assemblyFullName
      type: System.String
      description: "程序集的完整名称。"
    return:
      type: System.Reflection.Assembly
      description: "动态生成的<xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly>"
  overload: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  id: ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ShrinkArray(Array,Int32,Type,Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "确保给定的数组或副本，不大于指定长度。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Array ShrinkArray (Array a, int length, Type elementType, bool isNullable);
    parameters:
    - id: a
      type: System.Array
      description: "正在检查数组。"
    - id: length
      type: System.Int32
      description: "数组的最大长度。"
    - id: elementType
      type: System.Type
      description: "<xref:System.Type>的数组的元素。</xref:System.Type>"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>的数组，如果存在输入数组，可返回; 否则为较小的新数组。"
    return:
      type: System.Array
      description: "现有<xref:System.Array>，如果已经足够小; 否则，新的、 较小的数组，其中包含多大小的原始数组的元素<code> length</code>。</xref:System.Array>"
  overload: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  id: ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>读取在当前位置的字符串值，并将其返回为 base&64; 字节数组。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected byte[] ToByteArrayBase64 (bool isNull);
    parameters:
    - id: isNull
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>返回 base&64; 字节数组。"
    return:
      type: System.Byte[]
      description: "Base&64; 字节数组;否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果的值<code> isNull </code>参数是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  id: ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "生成输入字符串中的一个 base&64; 字节数组。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ToByteArrayBase64 方法是静态的。"
  syntax:
    content: protected static byte[] ToByteArrayBase64 (string value);
    parameters:
    - id: value
      type: System.String
      description: "要转换为 base&64; 字节数组的字符串。"
    return:
      type: System.Byte[]
      description: "Base&64; 字节数组。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  id: ToByteArrayHex(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayHex(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayHex(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>读取在当前位置的字符串值，并将其返回作为十六进制的字节数组。</xref:System.Xml.XmlReader>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected byte[] ToByteArrayHex (bool isNull);
    parameters:
    - id: isNull
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>返回十六进制的字节数组。"
    return:
      type: System.Byte[]
      description: "十六进制的字节数组;否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果的值<code> isNull </code>参数是**true**。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  id: ToByteArrayHex(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayHex(String)
  nameWithType: XmlSerializationReader.ToByteArrayHex(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "生成输入字符串中一个十六进制的字节数组。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ToByteArrayHex 方法是静态的。"
  syntax:
    content: protected static byte[] ToByteArrayHex (string value);
    parameters:
    - id: value
      type: System.String
      description: "要转换为十六进制的字节数组的字符串。"
    return:
      type: System.Byte[]
      description: "一个十六进制的字节数组。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  id: ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "生成<xref:System.Char>输入字符串中的对象。</xref:System.Char>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ToChar 方法是静态的。"
  syntax:
    content: protected static char ToChar (string value);
    parameters:
    - id: value
      type: System.String
      description: "要转换为字符串<xref:System.Char>对象。</xref:System.Char>"
    return:
      type: System.Char
      description: "A<xref:System.Char>对象。</xref:System.Char>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToChar*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  id: ToDate(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToDate(String)
  nameWithType: XmlSerializationReader.ToDate(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDate(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "生成<xref:System.DateTime>输入字符串中的对象。</xref:System.DateTime>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ToDate 方法是静态的。"
  syntax:
    content: protected static DateTime ToDate (string value);
    parameters:
    - id: value
      type: System.String
      description: "要转换为字符串<xref:System.DateTime>类对象。</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>对象。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToDate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  id: ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "生成<xref:System.DateTime>输入字符串中的对象。</xref:System.DateTime>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       都传递是静态的。"
  syntax:
    content: protected static DateTime ToDateTime (string value);
    parameters:
    - id: value
      type: System.String
      description: "要转换为字符串<xref:System.DateTime>对象。</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>对象。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  id: ToEnum(System.String,System.Collections.Hashtable,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToEnum(String,Hashtable,String)
  nameWithType: XmlSerializationReader.ToEnum(String,Hashtable,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToEnum(String,Hashtable,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "生成数值的枚举值从包含分隔标识符表示常量的枚举数列表的字符串。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ToEnum 方法是静态的。"
  syntax:
    content: protected static long ToEnum (string value, System.Collections.Hashtable h, string typeName);
    parameters:
    - id: value
      type: System.String
      description: "组成的字符串分隔其中每个标识符的集枚举数列表表示常量的标识符。"
    - id: h
      type: System.Collections.Hashtable
      description: "A <xref href=&quot;System.Collections.Hashtable&quot;> </xref>包含作为键的标识符和作为整数常量。"
    - id: typeName
      type: System.String
      description: "枚举类型的名称。"
    return:
      type: System.Int64
      description: "一个长值组成的枚举值为一系列的按位<xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;></xref>操作。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  id: ToTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToTime(String)
  nameWithType: XmlSerializationReader.ToTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToTime(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "生成<xref:System.DateTime>从字符串，表示的时间。</xref:System.DateTime>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ToTime 方法是静态的。"
  syntax:
    content: protected static DateTime ToTime (string value);
    parameters:
    - id: value
      type: System.String
      description: "要转换为字符串<xref:System.DateTime>对象。</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>对象。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  id: ToXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlName(String)
  nameWithType: XmlSerializationReader.ToXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "对 XML 名称进行解码。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlName 方法是静态的。       ToXmlName 将 4 位十六进制 ucs-2 代码转换为 Unicode。"
  syntax:
    content: protected static string ToXmlName (string value);
    parameters:
    - id: value
      type: System.String
      description: "要解码的 XML 名称。"
    return:
      type: System.String
      description: "已解码的字符串。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  id: ToXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNCName(String)
  nameWithType: XmlSerializationReader.ToXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "对 XML 名称进行解码。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNCName 方法是静态的。       ToXmlNCName 将 4 位十六进制 ucs-2 代码转换为 Unicode。"
  syntax:
    content: protected static string ToXmlNCName (string value);
    parameters:
    - id: value
      type: System.String
      description: "要解码的 XML 名称。"
    return:
      type: System.String
      description: "已解码的字符串。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  id: ToXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNmToken(String)
  nameWithType: XmlSerializationReader.ToXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "对 XML 名称进行解码。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>只适合由.NET Framework XML 序列化基础结构在内部使用的派生类使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNmToken 方法是静态的。       ToXmlNmToken 将 4 位十六进制 ucs-2 代码转换为 Unicode。"
  syntax:
    content: protected static string ToXmlNmToken (string value);
    parameters:
    - id: value
      type: System.String
      description: "要解码的 XML 名称。"
    return:
      type: System.String
      description: "已解码的字符串。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  id: ToXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNmTokens(String)
  nameWithType: XmlSerializationReader.ToXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "对 XML 名称进行解码。"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>仅供内部使用.NET Framework XML 序列化基础结构内的派生类使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNmTokens 方法是静态的。       ToXmlNmTokens 将 4 位十六进制 ucs-2 代码转换为 Unicode。"
  syntax:
    content: protected static string ToXmlNmTokens (string value);
    parameters:
    - id: value
      type: System.String
      description: "要解码的 XML 名称。"
    return:
      type: System.String
      description: "已解码的字符串。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  id: ToXmlQualifiedName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlQualifiedName(String)
  nameWithType: XmlSerializationReader.ToXmlQualifiedName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "获取<xref:System.Xml.XmlQualifiedName>从可能包含前缀的名称。</xref:System.Xml.XmlQualifiedName>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       如果存在前缀，则 ToXmlQualifiedName 方法查找当前的 XML 文档关联的命名空间，并将中的值<xref:System.Xml.XmlQualifiedName>对象。</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ToXmlQualifiedName (string value);
    parameters:
    - id: value
      type: System.String
      description: "可能包含前缀的名称。"
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示命名空间限定的 XML 名称。</xref:System.Xml.XmlQualifiedName>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  id: UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownAttribute(Object,XmlAttribute)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引发<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>事件的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置</xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       将处理程序方法添加到 UnknownAttribute 方法以处理未知的属性，而<xref:System.Xml.Serialization.XmlSerializer>正在执行其<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> </xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: protected void UnknownAttribute (object o, System.Xml.XmlAttribute attr);
    parameters:
    - id: o
      type: System.Object
      description: "一个对象，<xref:System.Xml.Serialization.XmlSerializer>尝试反序列化，随后可通过访问<xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>属性。</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: attr
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>表示的相关属性。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  id: UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownAttribute(Object,XmlAttribute,String)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引发<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>事件的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置</xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>"
  syntax:
    content: protected void UnknownAttribute (object o, System.Xml.XmlAttribute attr, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "一个对象，<xref:System.Xml.Serialization.XmlSerializer>尝试反序列化，随后可通过访问<xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>属性。</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: attr
      type: System.Xml.XmlAttribute
      description: "A <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>表示的相关属性。"
    - id: qnames
      type: System.String
      description: "以逗号分隔列表的 XML 限定名。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  id: UnknownElement(System.Object,System.Xml.XmlElement)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownElement(Object,XmlElement)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引发<xref:System.Xml.Serialization.XmlSerializer.UnknownElement>事件的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置</xref:System.Xml.Serialization.XmlSerializer.UnknownElement>"
  syntax:
    content: protected void UnknownElement (object o, System.Xml.XmlElement elem);
    parameters:
    - id: o
      type: System.Object
      description: "<xref:System.Object>，反序列化。</xref:System.Object>"
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>为引发一个事件。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  id: UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownElement(Object,XmlElement,String)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引发<xref:System.Xml.Serialization.XmlSerializer.UnknownElement>事件的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置</xref:System.Xml.Serialization.XmlSerializer.UnknownElement>"
  syntax:
    content: protected void UnknownElement (object o, System.Xml.XmlElement elem, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "一个对象，<xref:System.Xml.Serialization.XmlSerializer>尝试反序列化，随后可通过访问<xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>属性。</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>为引发一个事件。"
    - id: qnames
      type: System.String
      description: "以逗号分隔列表的 XML 限定名。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  id: UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引发<xref:System.Xml.Serialization.XmlSerializer.UnknownNode>事件的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置</xref:System.Xml.Serialization.XmlSerializer.UnknownNode>"
  syntax:
    content: protected void UnknownNode (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要反序列化对象。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  id: UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownNode(Object,String)
  nameWithType: XmlSerializationReader.UnknownNode(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引发<xref:System.Xml.Serialization.XmlSerializer.UnknownNode>事件的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置</xref:System.Xml.Serialization.XmlSerializer.UnknownNode>"
  syntax:
    content: protected void UnknownNode (object o, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "要反序列化对象。"
    - id: qnames
      type: System.String
      description: "以逗号分隔列表的 XML 限定名。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  id: UnreferencedObject(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnreferencedObject(String,Object)
  nameWithType: XmlSerializationReader.UnreferencedObject(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引发<xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>事件的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>当前位置</xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>"
  remarks: "受保护的成员<xref:System.Xml.Serialization.XmlSerializationReader>专门用于仅由.NET Framework XML 序列化基础结构在内部使用的派生类。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 编码，作为中指定的 SOAP 1.1 规范中，第 5 部分允许多次引用 SOAP 消息中的元素 (或 （可选），只需一次) 以引用的`href`中的主消息属性。 <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>事件发生时将出现此类元素，但没有任何`href`引用了该页。</xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>       添加到处理程序方法<xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>提供的未引用的对象，而自定义处理<xref:System.Xml.Serialization.XmlSerializer>执行其<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> </xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>"
  syntax:
    content: protected void UnreferencedObject (string id, object o);
    parameters:
    - id: id
      type: System.String
      description: "用于标识未引用的对象，随后可通过访问的唯一字符串<xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId*>属性。</xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId*>"
    - id: o
      type: System.Object
      description: "一个对象，<xref:System.Xml.Serialization.XmlSerializer>尝试反序列化，随后可通过访问<xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject*>属性。</xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject*> </xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  isExternal: false
  name: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup(XmlSerializationReader+CollectionFixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
- uid: System.Xml.Serialization.XmlSerializationReader.CollectionFixup
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReader+CollectionFixup
  nameWithType: XmlSerializationReader+CollectionFixup
  fullName: System.Xml.Serialization.XmlSerializationReader+CollectionFixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup(XmlSerializationReader+Fixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
- uid: System.Xml.Serialization.XmlSerializationReader.Fixup
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReader+Fixup
  nameWithType: XmlSerializationReader+Fixup
  fullName: System.Xml.Serialization.XmlSerializationReader+Fixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  nameWithType: XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializationReadCallback
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReadCallback
  nameWithType: XmlSerializationReadCallback
  fullName: System.Xml.Serialization.XmlSerializationReadCallback
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddTarget(String,Object)
  nameWithType: XmlSerializationReader.AddTarget(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddTarget(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CheckReaderCount(Int32,Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(Int32,Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CollapseWhitespace(String)
  nameWithType: XmlSerializationReader.CollapseWhitespace(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateAbstractTypeException(String,String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(String,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateBadDerivationException(String,String,String,String,String,String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException(Type,Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException(Type,Object,String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateMissingIXmlSerializableType(String,String,String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownConstantException(String,Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(String,Type)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
  fullName: System.Xml.Serialization.XmlSerializationReader.DecodeName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializationReader.Document
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Document
  nameWithType: XmlSerializationReader.Document
  fullName: System.Xml.Serialization.XmlSerializationReader.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: EnsureArrayIndex(Array,Int32,Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: FixupArrayRefs(Object)
  nameWithType: XmlSerializationReader.FixupArrayRefs(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetArrayLength(String,String)
  nameWithType: XmlSerializationReader.GetArrayLength(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetTarget(String)
  nameWithType: XmlSerializationReader.GetTarget(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetTarget(String)
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
  fullName: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ParseWsdlArrayType(XmlAttribute)
  nameWithType: XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadElementQualifiedName()
  nameWithType: XmlSerializationReader.ReadElementQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableQualifiedName()
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableString()
  nameWithType: XmlSerializationReader.ReadNullableString()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableString()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReference(String)
  nameWithType: XmlSerializationReader.ReadReference(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReference(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement()
  nameWithType: XmlSerializationReader.ReadReferencedElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement(String,String)
  nameWithType: XmlSerializationReader.ReadReferencedElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElements()
  nameWithType: XmlSerializationReader.ReadReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String,String,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String,String,Boolean,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable)
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable(IXmlSerializable,Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString(String,Boolean)
  nameWithType: XmlSerializationReader.ReadString(String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedNull(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedPrimitive(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlDocument(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlDocument(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlNode(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlNode(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Referenced(Object)
  nameWithType: XmlSerializationReader.Referenced(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.Referenced(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ShrinkArray(Array,Int32,Type,Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayHex(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex(String)
  nameWithType: XmlSerializationReader.ToByteArrayHex(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(String)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDate(String)
  nameWithType: XmlSerializationReader.ToDate(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDate(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToEnum(String,Hashtable,String)
  nameWithType: XmlSerializationReader.ToEnum(String,Hashtable,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToEnum(String,Hashtable,String)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToTime(String)
  nameWithType: XmlSerializationReader.ToTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToTime(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlName(String)
  nameWithType: XmlSerializationReader.ToXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNCName(String)
  nameWithType: XmlSerializationReader.ToXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmToken(String)
  nameWithType: XmlSerializationReader.ToXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmTokens(String)
  nameWithType: XmlSerializationReader.ToXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlQualifiedName(String)
  nameWithType: XmlSerializationReader.ToXmlQualifiedName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute(Object,XmlAttribute)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute(Object,XmlAttribute,String)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement(Object,XmlElement)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement(Object,XmlElement,String)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode(Object,String)
  nameWithType: XmlSerializationReader.UnknownNode(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnreferencedObject(String,Object)
  nameWithType: XmlSerializationReader.UnreferencedObject(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(String,Object)
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader.XmlSerializationReader
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup
  nameWithType: XmlSerializationReader.AddFixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddReadCallback
  nameWithType: XmlSerializationReader.AddReadCallback
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddTarget
  nameWithType: XmlSerializationReader.AddTarget
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CheckReaderCount
  nameWithType: XmlSerializationReader.CheckReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CollapseWhitespace
  nameWithType: XmlSerializationReader.CollapseWhitespace
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateAbstractTypeException
  nameWithType: XmlSerializationReader.CreateAbstractTypeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateBadDerivationException
  nameWithType: XmlSerializationReader.CreateBadDerivationException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateCtorHasSecurityException
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInaccessibleConstructorException
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException
  nameWithType: XmlSerializationReader.CreateInvalidCastException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateMissingIXmlSerializableType
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateReadOnlyCollectionException
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownConstantException
  nameWithType: XmlSerializationReader.CreateUnknownConstantException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownNodeException
  nameWithType: XmlSerializationReader.CreateUnknownNodeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationReader.CreateUnknownTypeException
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
- uid: System.Xml.Serialization.XmlSerializationReader.Document*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Document
  nameWithType: XmlSerializationReader.Document
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: EnsureArrayIndex
  nameWithType: XmlSerializationReader.EnsureArrayIndex
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: FixupArrayRefs
  nameWithType: XmlSerializationReader.FixupArrayRefs
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetArrayLength
  nameWithType: XmlSerializationReader.GetArrayLength
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetNullAttr
  nameWithType: XmlSerializationReader.GetNullAttr
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetTarget
  nameWithType: XmlSerializationReader.GetTarget
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetXsiType
  nameWithType: XmlSerializationReader.GetXsiType
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitCallbacks
  nameWithType: XmlSerializationReader.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitIDs
  nameWithType: XmlSerializationReader.InitIDs
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsXmlnsAttribute
  nameWithType: XmlSerializationReader.IsXmlnsAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ParseWsdlArrayType
  nameWithType: XmlSerializationReader.ParseWsdlArrayType
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadElementQualifiedName
  nameWithType: XmlSerializationReader.ReadElementQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadEndElement
  nameWithType: XmlSerializationReader.ReadEndElement
- uid: System.Xml.Serialization.XmlSerializationReader.Reader*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Reader
  nameWithType: XmlSerializationReader.Reader
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNull
  nameWithType: XmlSerializationReader.ReadNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableQualifiedName
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableString
  nameWithType: XmlSerializationReader.ReadNullableString
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReference
  nameWithType: XmlSerializationReader.ReadReference
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement
  nameWithType: XmlSerializationReader.ReadReferencedElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElements
  nameWithType: XmlSerializationReader.ReadReferencedElements
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement
  nameWithType: XmlSerializationReader.ReadReferencingElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable
  nameWithType: XmlSerializationReader.ReadSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString
  nameWithType: XmlSerializationReader.ReadString
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedNull
  nameWithType: XmlSerializationReader.ReadTypedNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedPrimitive
  nameWithType: XmlSerializationReader.ReadTypedPrimitive
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlDocument
  nameWithType: XmlSerializationReader.ReadXmlDocument
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlNode
  nameWithType: XmlSerializationReader.ReadXmlNode
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Referenced
  nameWithType: XmlSerializationReader.Referenced
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ResolveDynamicAssembly
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ShrinkArray
  nameWithType: XmlSerializationReader.ShrinkArray
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64
  nameWithType: XmlSerializationReader.ToByteArrayBase64
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex
  nameWithType: XmlSerializationReader.ToByteArrayHex
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToChar
  nameWithType: XmlSerializationReader.ToChar
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDate
  nameWithType: XmlSerializationReader.ToDate
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDateTime
  nameWithType: XmlSerializationReader.ToDateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToEnum
  nameWithType: XmlSerializationReader.ToEnum
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToTime
  nameWithType: XmlSerializationReader.ToTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlName
  nameWithType: XmlSerializationReader.ToXmlName
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNCName
  nameWithType: XmlSerializationReader.ToXmlNCName
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmToken
  nameWithType: XmlSerializationReader.ToXmlNmToken
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmTokens
  nameWithType: XmlSerializationReader.ToXmlNmTokens
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlQualifiedName
  nameWithType: XmlSerializationReader.ToXmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute
  nameWithType: XmlSerializationReader.UnknownAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement
  nameWithType: XmlSerializationReader.UnknownElement
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode
  nameWithType: XmlSerializationReader.UnknownNode
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnreferencedObject
  nameWithType: XmlSerializationReader.UnreferencedObject
