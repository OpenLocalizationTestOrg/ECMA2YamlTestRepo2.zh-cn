### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.ColorPalette
  id: ColorPalette
  children:
  - System.Drawing.Imaging.ColorPalette.Entries
  - System.Drawing.Imaging.ColorPalette.Flags
  langs:
  - csharp
  name: ColorPalette
  nameWithType: ColorPalette
  fullName: System.Drawing.Imaging.ColorPalette
  type: Class
  summary: "定义构成调色板的颜色的数组。 颜色是 32 位 ARGB 颜色。 不可继承。"
  remarks: "不允许你直接构造 ColorPalette 对象。 如果你创建 ColorPalette 对象，就可以操作的特定映像，这不允许的调色板大小。 使用<xref:System.Drawing.Image.Palette%2A?displayProperty=fullName>若要获取 ColorPalette 对象的属性。</xref:System.Drawing.Image.Palette%2A?displayProperty=fullName>       调色板中的颜色仅限于 32 位 ARGB 颜色。 32 位 ARGB 颜色具有各 8 位 alpha、 红色、 绿色和蓝色值。 最低的 8 位构成的蓝色位、 的下一步的 8 位均为绿色，接下来的 8 位有红色、 和的最重要的 8 位均为字母。 这意味着每个组件可能会因 0 到 255 之间。 完全为 255，并且完全关闭时为 0。 Alpha 用于使颜色值变为透明 (字母 = 0) 或不透明 (字母 = 255)。 在图中的强度级别数可以增加而无需增加使用的颜色数。 此过程将创建所谓的半色调，并提供提高的对比度，但降低分辨率为代价。"
  syntax:
    content: public sealed class ColorPalette
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ColorPalette.Entries
  id: Entries
  parent: System.Drawing.Imaging.ColorPalette
  langs:
  - csharp
  name: Entries
  nameWithType: ColorPalette.Entries
  fullName: System.Drawing.Imaging.ColorPalette.Entries
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "获取一个数组<xref href=&quot;System.Drawing.Color&quot;></xref>结构。"
  syntax:
    content: public System.Drawing.Color[] Entries { get; }
    return:
      type: System.Drawing.Color[]
      description: "数组<xref href=&quot;System.Drawing.Color&quot;></xref>结构组成此<xref href=&quot;System.Drawing.Imaging.ColorPalette&quot;> </xref>。"
  overload: System.Drawing.Imaging.ColorPalette.Entries*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ColorPalette.Flags
  id: Flags
  parent: System.Drawing.Imaging.ColorPalette
  langs:
  - csharp
  name: Flags
  nameWithType: ColorPalette.Flags
  fullName: System.Drawing.Imaging.ColorPalette.Flags
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "获取一个值，指定如何解释数组中的颜色的颜色信息。"
  syntax:
    content: public int Flags { get; }
    return:
      type: System.Int32
      description: "下面的标志值是有效︰ 0x00000001 颜色值数组中包含 alpha 信息。       0x00000002 数组中的颜色是灰度值。       0x00000004 数组中的颜色是半色调值。"
  overload: System.Drawing.Imaging.ColorPalette.Flags*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.Imaging.ColorPalette.Entries
  parent: System.Drawing.Imaging.ColorPalette
  isExternal: false
  name: Entries
  nameWithType: ColorPalette.Entries
  fullName: System.Drawing.Imaging.ColorPalette.Entries
- uid: System.Drawing.Color[]
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color[]
  spec.csharp:
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: Color[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.ColorPalette.Flags
  parent: System.Drawing.Imaging.ColorPalette
  isExternal: false
  name: Flags
  nameWithType: ColorPalette.Flags
  fullName: System.Drawing.Imaging.ColorPalette.Flags
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Imaging.ColorPalette.Entries*
  parent: System.Drawing.Imaging.ColorPalette
  isExternal: false
  name: Entries
  nameWithType: ColorPalette.Entries
- uid: System.Drawing.Imaging.ColorPalette.Flags*
  parent: System.Drawing.Imaging.ColorPalette
  isExternal: false
  name: Flags
  nameWithType: ColorPalette.Flags
