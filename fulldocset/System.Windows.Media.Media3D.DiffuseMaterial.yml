### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Media3D.DiffuseMaterial
  id: DiffuseMaterial
  children:
  - System.Windows.Media.Media3D.DiffuseMaterial.#ctor
  - System.Windows.Media.Media3D.DiffuseMaterial.#ctor(System.Windows.Media.Brush)
  - System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor
  - System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorProperty
  - System.Windows.Media.Media3D.DiffuseMaterial.Brush
  - System.Windows.Media.Media3D.DiffuseMaterial.BrushProperty
  - System.Windows.Media.Media3D.DiffuseMaterial.Clone
  - System.Windows.Media.Media3D.DiffuseMaterial.CloneCurrentValue
  - System.Windows.Media.Media3D.DiffuseMaterial.Color
  - System.Windows.Media.Media3D.DiffuseMaterial.ColorProperty
  - System.Windows.Media.Media3D.DiffuseMaterial.CreateInstanceCore
  langs:
  - csharp
  name: DiffuseMaterial
  nameWithType: DiffuseMaterial
  fullName: System.Windows.Media.Media3D.DiffuseMaterial
  type: Class
  summary: "允许的应用程序[!INCLUDE[TLA#tla_2d](~/add/includes/tlasharptla-2d-md.md)]画笔，如<xref href=&quot;System.Windows.Media.SolidColorBrush&quot;></xref>或<xref href=&quot;System.Windows.Media.TileBrush&quot;></xref>到漫射照明[!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)]模型。"
  syntax:
    content: 'public sealed class DiffuseMaterial : System.Windows.Media.Media3D.Material'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Media3D.Material
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Material.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.Media3D.Material.ToString
  - System.Windows.Media.Media3D.Material.ToString(System.IFormatProvider)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: DiffuseMaterial()
  nameWithType: DiffuseMaterial.DiffuseMaterial()
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.DiffuseMaterial()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "构造 DiffuseMaterial。"
  syntax:
    content: public DiffuseMaterial ();
    parameters: []
  overload: System.Windows.Media.Media3D.DiffuseMaterial.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.#ctor(System.Windows.Media.Brush)
  id: '#ctor(System.Windows.Media.Brush)'
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: DiffuseMaterial(Brush)
  nameWithType: DiffuseMaterial.DiffuseMaterial(Brush)
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.DiffuseMaterial(Brush)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "构造带指定 Brush 属性的 DiffuseMaterial。"
  syntax:
    content: public DiffuseMaterial (System.Windows.Media.Brush brush);
    parameters:
    - id: brush
      type: System.Windows.Media.Brush
      description: "新材料的画笔。"
  overload: System.Windows.Media.Media3D.DiffuseMaterial.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor
  id: AmbientColor
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: AmbientColor
  nameWithType: DiffuseMaterial.AmbientColor
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "获取或设置表示材料如何反映颜色<xref href=&quot;System.Windows.Media.Media3D.AmbientLight&quot;> </xref>。"
  remarks: "环境光线照明不是由引起直接射线从特定的光源。 在真实的场景中，光线来自于光从环境中的表面的反射。 如果没有环境光线阴影中的对象将完全黑色。       所有其他灯控制通过<xref:System.Windows.Media.Media3D.DiffuseMaterial.Color%2A>属性。</xref:System.Windows.Media.Media3D.DiffuseMaterial.Color%2A>      <a name=&quot;dependencyPropertyInfo_AmbientColor&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorProperty>"
  syntax:
    content: public System.Windows.Media.Color AmbientColor { get; set; }
    return:
      type: System.Windows.Media.Color
      description: "反射了由三维对象的环境光线的颜色。 默认值为 `#FFFFFF`。"
  overload: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorProperty
  id: AmbientColorProperty
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: AmbientColorProperty
  nameWithType: DiffuseMaterial.AmbientColorProperty
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "标识<xref:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor*>依赖项属性。</xref:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AmbientColorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Brush
  id: Brush
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: Brush
  nameWithType: DiffuseMaterial.Brush
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.Brush
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "<xref href=&quot;System.Windows.Media.Brush&quot;></xref>作为应用<xref href=&quot;System.Windows.Media.Media3D.Material&quot;></xref>到[!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)]模型。"
  remarks: "如果没有纹理坐标为指定<xref:System.Windows.Media.Media3D.MeshGeometry3D>，其材料可能无法按预期。</xref:System.Windows.Media.Media3D.MeshGeometry3D>  唯一的例外情况是当材料的画笔属性指定 SolidColorBrush;在这种情况下，将使用一组默认的纹理坐标呈现材料。"
  syntax:
    content: public System.Windows.Media.Brush Brush { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "<xref href=&quot;System.Windows.Media.Brush&quot;></xref>要将应用。"
  overload: System.Windows.Media.Media3D.DiffuseMaterial.Brush*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.BrushProperty
  id: BrushProperty
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: BrushProperty
  nameWithType: DiffuseMaterial.BrushProperty
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.BrushProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "标识<xref:System.Windows.Media.Media3D.DiffuseMaterial.Brush*>依赖项属性。</xref:System.Windows.Media.Media3D.DiffuseMaterial.Brush*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BrushProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Clone
  id: Clone
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: Clone()
  nameWithType: DiffuseMaterial.Clone()
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.Media3D.DiffuseMaterial&quot;> </xref>，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定 （但可能不再解析），但不是动画或其当前值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的强类型实现的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Media3D.DiffuseMaterial Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Media3D.DiffuseMaterial
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性将为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Media3D.DiffuseMaterial.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: DiffuseMaterial.CloneCurrentValue()
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "创建的可修改复本<xref href=&quot;System.Windows.Media.Media3D.DiffuseMaterial&quot;></xref>对象，从而深度复制此对象的当前值。 不复制资源引用、 数据绑定和动画，而其当前值。"
  remarks: "此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 为方便起见，此方法将隐藏继承的强类型实现的版本。       有关详细信息，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Media3D.DiffuseMaterial CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Media3D.DiffuseMaterial
      description: "当前对象的可修改复本。 克隆的对象<> *1> 属性将为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使源的<> *1> 属性<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Media3D.DiffuseMaterial.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Color
  id: Color
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: Color
  nameWithType: DiffuseMaterial.Color
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.Color
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "获取或设置材料纹理的颜色筛选器。"
  remarks: "颜色属性是纹理上的筛选器。       设置<xref:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor%2A>属性控制材料环境光线的反射。</xref:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor%2A>      <a name=&quot;dependencyPropertyInfo_Color&quot;></a># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |<xref:System.Windows.Media.Media3D.DiffuseMaterial.ColorProperty>|  |元数据属性设置为`true`|None |</xref:System.Windows.Media.Media3D.DiffuseMaterial.ColorProperty>"
  syntax:
    content: public System.Windows.Media.Color Color { get; set; }
    return:
      type: System.Windows.Media.Color
      description: "颜色筛选器<xref href=&quot;System.Windows.Media.Media3D.Material&quot;> </xref>。 默认值为 `#FFFFFF`。 由于所有颜色都构成白色，所有的颜色为默认情况下可见。"
  overload: System.Windows.Media.Media3D.DiffuseMaterial.Color*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.ColorProperty
  id: ColorProperty
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: ColorProperty
  nameWithType: DiffuseMaterial.ColorProperty
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.ColorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "标识<xref:System.Windows.Media.Media3D.DiffuseMaterial.Color*>依赖项属性。</xref:System.Windows.Media.Media3D.DiffuseMaterial.Color*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ColorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DiffuseMaterial.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: DiffuseMaterial.CreateInstanceCore()
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "要添加。"
  overload: System.Windows.Media.Media3D.DiffuseMaterial.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Media3D.Material
  isExternal: false
  name: System.Windows.Media.Media3D.Material
- uid: System.Windows.Media.Media3D.DiffuseMaterial.#ctor
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: DiffuseMaterial()
  nameWithType: DiffuseMaterial.DiffuseMaterial()
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.DiffuseMaterial()
- uid: System.Windows.Media.Media3D.DiffuseMaterial.#ctor(System.Windows.Media.Brush)
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: DiffuseMaterial(Brush)
  nameWithType: DiffuseMaterial.DiffuseMaterial(Brush)
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.DiffuseMaterial(Brush)
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: AmbientColor
  nameWithType: DiffuseMaterial.AmbientColor
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor
- uid: System.Windows.Media.Color
  parent: System.Windows.Media
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Windows.Media.Color
- uid: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorProperty
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: AmbientColorProperty
  nameWithType: DiffuseMaterial.AmbientColorProperty
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Brush
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: Brush
  nameWithType: DiffuseMaterial.Brush
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.Brush
- uid: System.Windows.Media.Media3D.DiffuseMaterial.BrushProperty
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: BrushProperty
  nameWithType: DiffuseMaterial.BrushProperty
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.BrushProperty
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Clone
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: Clone()
  nameWithType: DiffuseMaterial.Clone()
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.Clone()
- uid: System.Windows.Media.Media3D.DiffuseMaterial
  parent: System.Windows.Media.Media3D
  isExternal: false
  name: DiffuseMaterial
  nameWithType: DiffuseMaterial
  fullName: System.Windows.Media.Media3D.DiffuseMaterial
- uid: System.Windows.Media.Media3D.DiffuseMaterial.CloneCurrentValue
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: DiffuseMaterial.CloneCurrentValue()
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.CloneCurrentValue()
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Color
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: Color
  nameWithType: DiffuseMaterial.Color
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.Color
- uid: System.Windows.Media.Media3D.DiffuseMaterial.ColorProperty
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: ColorProperty
  nameWithType: DiffuseMaterial.ColorProperty
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.ColorProperty
- uid: System.Windows.Media.Media3D.DiffuseMaterial.CreateInstanceCore
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: DiffuseMaterial.CreateInstanceCore()
  fullName: System.Windows.Media.Media3D.DiffuseMaterial.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Media3D.DiffuseMaterial.#ctor*
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: DiffuseMaterial
  nameWithType: DiffuseMaterial.DiffuseMaterial
- uid: System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor*
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: AmbientColor
  nameWithType: DiffuseMaterial.AmbientColor
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Brush*
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: Brush
  nameWithType: DiffuseMaterial.Brush
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Clone*
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: Clone
  nameWithType: DiffuseMaterial.Clone
- uid: System.Windows.Media.Media3D.DiffuseMaterial.CloneCurrentValue*
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: CloneCurrentValue
  nameWithType: DiffuseMaterial.CloneCurrentValue
- uid: System.Windows.Media.Media3D.DiffuseMaterial.Color*
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: Color
  nameWithType: DiffuseMaterial.Color
- uid: System.Windows.Media.Media3D.DiffuseMaterial.CreateInstanceCore*
  parent: System.Windows.Media.Media3D.DiffuseMaterial
  isExternal: false
  name: CreateInstanceCore
  nameWithType: DiffuseMaterial.CreateInstanceCore
