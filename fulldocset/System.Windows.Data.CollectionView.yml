### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.CollectionView
  id: CollectionView
  children:
  - System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)
  - System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  - System.Windows.Data.CollectionView.CanFilter
  - System.Windows.Data.CollectionView.CanGroup
  - System.Windows.Data.CollectionView.CanSort
  - System.Windows.Data.CollectionView.ClearChangeLog
  - System.Windows.Data.CollectionView.ClearPendingChanges
  - System.Windows.Data.CollectionView.CollectionChanged
  - System.Windows.Data.CollectionView.Comparer
  - System.Windows.Data.CollectionView.Contains(System.Object)
  - System.Windows.Data.CollectionView.Count
  - System.Windows.Data.CollectionView.Culture
  - System.Windows.Data.CollectionView.CurrentChanged
  - System.Windows.Data.CollectionView.CurrentChanging
  - System.Windows.Data.CollectionView.CurrentItem
  - System.Windows.Data.CollectionView.CurrentPosition
  - System.Windows.Data.CollectionView.DeferRefresh
  - System.Windows.Data.CollectionView.DetachFromSourceCollection
  - System.Windows.Data.CollectionView.Filter
  - System.Windows.Data.CollectionView.GetEnumerator
  - System.Windows.Data.CollectionView.GetItemAt(System.Int32)
  - System.Windows.Data.CollectionView.GroupDescriptions
  - System.Windows.Data.CollectionView.Groups
  - System.Windows.Data.CollectionView.IndexOf(System.Object)
  - System.Windows.Data.CollectionView.IsCurrentAfterLast
  - System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  - System.Windows.Data.CollectionView.IsCurrentInSync
  - System.Windows.Data.CollectionView.IsDynamic
  - System.Windows.Data.CollectionView.IsEmpty
  - System.Windows.Data.CollectionView.IsInUse
  - System.Windows.Data.CollectionView.IsRefreshDeferred
  - System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)
  - System.Windows.Data.CollectionView.MoveCurrentToFirst
  - System.Windows.Data.CollectionView.MoveCurrentToLast
  - System.Windows.Data.CollectionView.MoveCurrentToNext
  - System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)
  - System.Windows.Data.CollectionView.MoveCurrentToPrevious
  - System.Windows.Data.CollectionView.NeedsRefresh
  - System.Windows.Data.CollectionView.NewItemPlaceholder
  - System.Windows.Data.CollectionView.OKToChangeCurrent
  - System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged
  - System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.OnCurrentChanged
  - System.Windows.Data.CollectionView.OnCurrentChanging
  - System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  - System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Data.CollectionView.PassesFilter(System.Object)
  - System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.ProcessPendingChanges
  - System.Windows.Data.CollectionView.PropertyChanged
  - System.Windows.Data.CollectionView.Refresh
  - System.Windows.Data.CollectionView.RefreshOrDefer
  - System.Windows.Data.CollectionView.RefreshOverride
  - System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)
  - System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)
  - System.Windows.Data.CollectionView.SortDescriptions
  - System.Windows.Data.CollectionView.SourceCollection
  - System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  langs:
  - csharp
  name: CollectionView
  nameWithType: CollectionView
  fullName: System.Windows.Data.CollectionView
  type: Class
  summary: "表示分组、 排序、 筛选和导航数据收集的视图。"
  remarks: "不应在代码中创建此类的对象。 若要创建一个集合，其中仅实现的集合视图<xref:System.Collections.IEnumerable>，创建<xref:System.Windows.Data.CollectionViewSource>对象，将添加到你的集合<xref:System.Windows.Data.CollectionViewSource.Source%2A>属性，并获取从查看集合<xref:System.Windows.Data.CollectionViewSource.View%2A>属性。</xref:System.Windows.Data.CollectionViewSource.View%2A> </xref:System.Windows.Data.CollectionViewSource.Source%2A> </xref:System.Windows.Data.CollectionViewSource> </xref:System.Collections.IEnumerable>       可以将集合视图视为绑定源集合，可用于导航和显示基于排序、 筛选和分组查询，而无需操作基础源集合本身所有的集合的一个层。 如果源集合实现<xref:System.Collections.Specialized.INotifyCollectionChanged>接口，所引发的更改<xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>事件传播到视图的视图。</xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> </xref:System.Collections.Specialized.INotifyCollectionChanged>       视图不会更改基础源集合，因为源集合可具有与之关联的多个视图。 通过使用视图，你可以在不同的方式显示相同的数据。 例如，可以使用两个视图的集合的`Task`要显示的任务对象按优先级别的页的一个部分排序，并按在页面上的另一个部分区域分组。       在[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]应用程序，所有集合都具有关联的默认集合视图。 而不是直接使用集合，绑定引擎始终通过关联的视图访问集合。 若要获取的默认视图，请使用<xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A?displayProperty=fullName>方法。</xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A?displayProperty=fullName> 基于导航的内部类是实现仅<xref:System.Collections.IEnumerable>.</xref:System.Collections.IEnumerable>的集合的默认视图 <xref:System.Windows.Data.ListCollectionView>是实现<xref:System.Collections.IList>.</xref:System.Collections.IList>的集合的默认视图</xref:System.Windows.Data.ListCollectionView> <xref:System.Windows.Data.BindingListCollectionView>是实现<xref:System.ComponentModel.IBindingListView>或<xref:System.ComponentModel.IBindingList>。</xref:System.ComponentModel.IBindingList></xref:System.ComponentModel.IBindingListView>的集合的默认视图</xref:System.Windows.Data.BindingListCollectionView>       或者，可以创建你的集合中的视图[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]使用<xref:System.Windows.Data.CollectionViewSource>类，然后将控件绑定到该视图。</xref:System.Windows.Data.CollectionViewSource> <xref:System.Windows.Data.CollectionViewSource>类是[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]表示形式导航类</xref:System.Windows.Data.CollectionViewSource> 有关示例，请参阅[How to︰ 排序和组数据使用 XAML 中的一个视图](~/add/includes/ajax-current-ext-md.md)。       有关详细信息，请参阅&quot;绑定到集合&quot;[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。       在中设置视图[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，使用<xref:System.Windows.Data.CollectionViewSource>类。</xref:System.Windows.Data.CollectionViewSource> <xref:System.Windows.Data.CollectionViewSource>是[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]表示形式导航类中，并公开的导航类最常用的成员。</xref:System.Windows.Data.CollectionViewSource>      <a name=&quot;xamlTextUsage_CollectionView&quot;></a># # XAML 文本使用情况，请参阅备注"
  syntax:
    content: 'public class CollectionView : System.Windows.Threading.DispatcherObject, System.Collections.IEnumerable, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.ICollectionView, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.ICollectionView
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)
  id: '#ctor(System.Collections.IEnumerable)'
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CollectionView(IEnumerable)
  nameWithType: CollectionView.CollectionView(IEnumerable)
  fullName: System.Windows.Data.CollectionView.CollectionView(IEnumerable)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "初始化的新实例<xref href=&quot;System.Windows.Data.CollectionView&quot;></xref>表示指定的集合的视图的类。"
  remarks: "实例<xref:System.Windows.Data.CollectionView>绑定到[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]线程调度程序的此构造函数的调用方。</xref:System.Windows.Data.CollectionView>"
  syntax:
    content: public CollectionView (System.Collections.IEnumerable collection);
    parameters:
    - id: collection
      type: System.Collections.IEnumerable
      description: "基础集合。"
  overload: System.Windows.Data.CollectionView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  id: AllowsCrossThreadChanges
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: AllowsCrossThreadChanges
  nameWithType: CollectionView.AllowsCrossThreadChanges
  fullName: System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否与不同的线程，创建<xref href=&quot;System.Windows.Data.CollectionView&quot;></xref>可以更改<xref:System.Windows.Data.CollectionView.SourceCollection*>.</xref:System.Windows.Data.CollectionView.SourceCollection*>"
  syntax:
    content: protected bool AllowsCrossThreadChanges { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果创建的线程<xref href=&quot;System.Windows.Data.CollectionView&quot;></xref>可以更改<xref:System.Windows.Data.CollectionView.SourceCollection*>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.SourceCollection*>"
  overload: System.Windows.Data.CollectionView.AllowsCrossThreadChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CanFilter
  id: CanFilter
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CanFilter
  nameWithType: CollectionView.CanFilter
  fullName: System.Windows.Data.CollectionView.CanFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示视图是否支持筛选。"
  remarks: "如果此属性返回`false`，则设置<xref:System.Windows.Data.CollectionView.Filter%2A>属性引发异常。</xref:System.Windows.Data.CollectionView.Filter%2A>"
  syntax:
    content: public virtual bool CanFilter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果视图支持筛选，则，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.CanFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CanGroup
  id: CanGroup
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CanGroup
  nameWithType: CollectionView.CanGroup
  fullName: System.Windows.Data.CollectionView.CanGroup
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示视图是否支持分组。"
  remarks: "使用此属性可添加<xref:System.Windows.Data.CollectionView.GroupDescriptions%2A>.</xref:System.Windows.Data.CollectionView.GroupDescriptions%2A>之前 派生的类重写此属性以指示它们是否支持分组。"
  syntax:
    content: public virtual bool CanGroup { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Windows.Data.CollectionView.CanGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CanSort
  id: CanSort
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CanSort
  nameWithType: CollectionView.CanSort
  fullName: System.Windows.Data.CollectionView.CanSort
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示视图是否支持排序。"
  remarks: "使用此属性可添加<xref:System.Windows.Data.CollectionView.SortDescriptions%2A>.</xref:System.Windows.Data.CollectionView.SortDescriptions%2A>之前 派生的类重写此属性以指示其是否支持排序。"
  syntax:
    content: public virtual bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Windows.Data.CollectionView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.ClearChangeLog
  id: ClearChangeLog
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: ClearChangeLog()
  nameWithType: CollectionView.ClearChangeLog()
  fullName: System.Windows.Data.CollectionView.ClearChangeLog()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "清除任何挂起的更改从更改日志。"
  syntax:
    content: protected void ClearChangeLog ();
    parameters: []
  overload: System.Windows.Data.CollectionView.ClearChangeLog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.ClearPendingChanges
  id: ClearPendingChanges
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: ClearPendingChanges()
  nameWithType: CollectionView.ClearPendingChanges()
  fullName: System.Windows.Data.CollectionView.ClearPendingChanges()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "清除未处理的更改到集合。"
  syntax:
    content: protected void ClearPendingChanges ();
    parameters: []
  overload: System.Windows.Data.CollectionView.ClearPendingChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: CollectionView.CollectionChanged
  fullName: System.Windows.Data.CollectionView.CollectionChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "该视图已更改时发生。"
  syntax:
    content: protected virtual event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Comparer
  id: Comparer
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Comparer
  nameWithType: CollectionView.Comparer
  fullName: System.Windows.Data.CollectionView.Comparer
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回一个对象，你可以使用比较视图中的项。"
  syntax:
    content: public virtual System.Collections.IComparer Comparer { get; }
    return:
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>对象，你可以使用比较视图中的项。</xref:System.Collections.IComparer>"
  overload: System.Windows.Data.CollectionView.Comparer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: CollectionView.Contains(Object)
  fullName: System.Windows.Data.CollectionView.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回一个值，该值指示指定的项是否属于该视图。"
  remarks: "此方法不会不进行任何假设项是否属于基础集合。 如果调用方知道该项属于基础集合，它会更加高效调用<xref:System.Windows.Data.CollectionView.PassesFilter%2A>方法。</xref:System.Windows.Data.CollectionView.PassesFilter%2A>"
  syntax:
    content: public virtual bool Contains (object item);
    parameters:
    - id: item
      type: System.Object
      description: "要检查的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该项属于视图;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Count
  id: Count
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Count
  nameWithType: CollectionView.Count
  fullName: System.Windows.Data.CollectionView.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取视图中的记录数。"
  remarks: "如果设置筛选器，此属性的值仅包括传递的筛选器的项。 如果基础集合的类型是<xref:System.Collections.IEnumerable>，这是一项 o （n） 操作。</xref:System.Collections.IEnumerable> 集合更改之前，此值将缓存。"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "中的视图或为-1 的记录数是否未知的记录数。"
  overload: System.Windows.Data.CollectionView.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Culture
  id: Culture
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Culture
  nameWithType: CollectionView.Culture
  fullName: System.Windows.Data.CollectionView.Culture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置要在排序过程中使用的区域性信息。"
  syntax:
    content: public virtual System.Globalization.CultureInfo Culture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "要在排序过程中使用的区域性信息。"
  overload: System.Windows.Data.CollectionView.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CurrentChanged
  id: CurrentChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CurrentChanged
  nameWithType: CollectionView.CurrentChanged
  fullName: System.Windows.Data.CollectionView.CurrentChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "之后，将会<xref:System.Windows.Data.CollectionView.CurrentItem*>已更改。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  syntax:
    content: public virtual event EventHandler CurrentChanged;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CurrentChanging
  id: CurrentChanging
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CurrentChanging
  nameWithType: CollectionView.CurrentChanging
  fullName: System.Windows.Data.CollectionView.CurrentChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "发生时<xref:System.Windows.Data.CollectionView.CurrentItem*>正在更改。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  syntax:
    content: public virtual event System.ComponentModel.CurrentChangingEventHandler CurrentChanging;
    return:
      type: System.ComponentModel.CurrentChangingEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CurrentItem
  id: CurrentItem
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CurrentItem
  nameWithType: CollectionView.CurrentItem
  fullName: System.Windows.Data.CollectionView.CurrentItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取视图中的当前项。"
  remarks: "集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。       请注意，将当前记录指针移有任何排序或筛选与某些交互操作应用于集合中。 排序保留当前记录指针上的最新记录选择，但集合视图是围绕重构它。 （所选的记录可能已在之前，列表的开头，但现在所选的记录可能在中间的某个位置。）如果所选内容视图中筛选后，仍然筛选保留所选的记录。 否则，将当前记录指针设置为筛选的集合视图的第一个记录。       集合的当前项绑定到自动如果绑定的目标是单一实例值。 如果目标是<xref:System.Windows.Controls.ItemsControl>，与所选的项同步的当前项。</xref:System.Windows.Controls.ItemsControl> 例如，如果一个列表框绑定到集合中，将同步 CurrentItem 当前选定项。"
  syntax:
    content: public virtual object CurrentItem { get; }
    return:
      type: System.Object
      description: "当前视图的项。 默认情况下，集合的第一项作为当前项启动。"
  overload: System.Windows.Data.CollectionView.CurrentItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CurrentPosition
  id: CurrentPosition
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CurrentPosition
  nameWithType: CollectionView.CurrentPosition
  fullName: System.Windows.Data.CollectionView.CurrentPosition
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取的序号位置<xref:System.Windows.Data.CollectionView.CurrentItem*>（根据需要排序和筛选） 视图中。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  syntax:
    content: public virtual int CurrentPosition { get; }
    return:
      type: System.Int32
      description: "序号位置<xref:System.Windows.Data.CollectionView.CurrentItem*>（根据需要排序和筛选） 视图中。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.CurrentPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.DeferRefresh
  id: DeferRefresh
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: DeferRefresh()
  nameWithType: CollectionView.DeferRefresh()
  fullName: System.Windows.Data.CollectionView.DeferRefresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "进入延迟循环，该循环可用于将更改合并到视图并延迟自动刷新。"
  remarks: "典型用法就是创建`using`作用域与此方法，然后将多个视图更改调用放在范围内。 这会延迟自动刷新，直到退出延迟循环循环。"
  syntax:
    content: public virtual IDisposable DeferRefresh ();
    parameters: []
    return:
      type: System.IDisposable
      description: "<xref:System.IDisposable>可用于释放调用对象的对象。</xref:System.IDisposable>"
  overload: System.Windows.Data.CollectionView.DeferRefresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.DetachFromSourceCollection
  id: DetachFromSourceCollection
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: DetachFromSourceCollection()
  nameWithType: CollectionView.DetachFromSourceCollection()
  fullName: System.Windows.Data.CollectionView.DetachFromSourceCollection()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "移除从基础集合的引用<xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>。"
  remarks: "使用此方法来取消对基础集合上的事件订阅，并让<xref:System.Windows.Data.CollectionView>进行垃圾回收。</xref:System.Windows.Data.CollectionView>"
  syntax:
    content: public virtual void DetachFromSourceCollection ();
    parameters: []
  overload: System.Windows.Data.CollectionView.DetachFromSourceCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Filter
  id: Filter
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Filter
  nameWithType: CollectionView.Filter
  fullName: System.Windows.Data.CollectionView.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取或设置用于确定某个项是否适合包含在视图中的方法。"
  remarks: "不支持筛选，并引发一种<xref:System.NotSupportedException>。</xref:System.NotSupportedException>较简单的实现 使用<xref:System.Windows.Data.CollectionView.CanFilter%2A>属性以测试是否支持筛选以分配此属性与非 null 值之前。</xref:System.Windows.Data.CollectionView.CanFilter%2A>"
  syntax:
    content: public virtual Predicate<object> Filter { get; set; }
    return:
      type: System.Predicate{System.Object}
      description: "一个委托，表示用于确定某个项是否适合包含在视图的方法。"
  overload: System.Windows.Data.CollectionView.Filter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "当前实现不支持筛选。"
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: CollectionView.GetEnumerator()
  fullName: System.Windows.Data.CollectionView.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回一个可用于枚举在视图中的项的对象。"
  syntax:
    content: protected virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>对象可用于枚举在视图中的项。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Data.CollectionView.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.GetItemAt(System.Int32)
  id: GetItemAt(System.Int32)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: GetItemAt(Int32)
  nameWithType: CollectionView.GetItemAt(Int32)
  fullName: System.Windows.Data.CollectionView.GetItemAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "检索位于指定的从零开始索引视图中的项。"
  remarks: "此方法的计算结果的索引与任何<xref:System.Windows.Data.CollectionView.SortDescriptions%2A>或<xref:System.Windows.Data.CollectionView.Filter%2A>视图设置的属性值。</xref:System.Windows.Data.CollectionView.Filter%2A> </xref:System.Windows.Data.CollectionView.SortDescriptions%2A>       如果基础集合的类型是<xref:System.Collections.IEnumerable>，这是一项 o （n） 操作。</xref:System.Collections.IEnumerable>"
  syntax:
    content: public virtual object GetItemAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要检索的项的从零开始的索引。"
    return:
      type: System.Object
      description: "在视图中指定的从零开始索引处的项。"
  overload: System.Windows.Data.CollectionView.GetItemAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小于 0。"
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.GroupDescriptions
  id: GroupDescriptions
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: GroupDescriptions
  nameWithType: CollectionView.GroupDescriptions
  fullName: System.Windows.Data.CollectionView.GroupDescriptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取的集合<xref href=&quot;System.ComponentModel.GroupDescription&quot;></xref>对象描述集合中的项在视图中的分组方式。"
  remarks: "此属性的值始终是`null`因为<xref:System.Windows.Data.CollectionView>类不支持对其基础集合的分组。</xref:System.Windows.Data.CollectionView> 派生的类<xref:System.Windows.Data.ListCollectionView>和<xref:System.Windows.Data.BindingListCollectionView>支持分组。</xref:System.Windows.Data.BindingListCollectionView> </xref:System.Windows.Data.ListCollectionView>"
  syntax:
    content: public virtual System.Collections.ObjectModel.ObservableCollection<System.ComponentModel.GroupDescription> GroupDescriptions { get; }
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.ComponentModel.GroupDescription}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Windows.Data.CollectionView.GroupDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Groups
  id: Groups
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Groups
  nameWithType: CollectionView.Groups
  fullName: System.Windows.Data.CollectionView.Groups
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取顶级组，则构造基于的集合<xref:System.Windows.Data.CollectionView.GroupDescriptions*>属性。</xref:System.Windows.Data.CollectionView.GroupDescriptions*>"
  remarks: "此属性的值始终是`null`因为<xref:System.Windows.Data.CollectionView>类不支持对其基础集合的分组。</xref:System.Windows.Data.CollectionView> 派生的类<xref:System.Windows.Data.ListCollectionView>和<xref:System.Windows.Data.BindingListCollectionView>支持分组。</xref:System.Windows.Data.BindingListCollectionView> </xref:System.Windows.Data.ListCollectionView>"
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyObservableCollection<object> Groups { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Windows.Data.CollectionView.Groups*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: CollectionView.IndexOf(Object)
  fullName: System.Windows.Data.CollectionView.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回指定的项所在的索引。"
  remarks: "如果此方法返回而-1 索引，它必须始终为 true，该视图 [索引&1;] < item=&quot;&quot;> <= view[index],=&quot;&quot; where=&quot;&quot; the=&quot;&quot; comparisons=&quot;&quot; are=&quot;&quot; done=&quot;&quot; using=&quot;&quot; the=&quot;&quot;></=> <xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName>视图，如果存在的方法。</xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName>       此特定行为的方法使用一些<xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>事件处理程序来加快对插入和删除反应。</xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> 如果派生的类不重写此方法，侦听器将执行二进制搜索使用<xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName>方法。</xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName>"
  syntax:
    content: public virtual int IndexOf (object item);
    parameters:
    - id: item
      type: System.Object
      description: "要查找的项。"
    return:
      type: System.Int32
      description: "索引指定的项所在位置，或为-1 如果该项是未知。"
  overload: System.Windows.Data.CollectionView.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsCurrentAfterLast
  id: IsCurrentAfterLast
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsCurrentAfterLast
  nameWithType: CollectionView.IsCurrentAfterLast
  fullName: System.Windows.Data.CollectionView.IsCurrentAfterLast
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否<xref:System.Windows.Data.CollectionView.CurrentItem*>视图是否超出集合的末尾。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。"
  syntax:
    content: public virtual bool IsCurrentAfterLast { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Windows.Data.CollectionView.CurrentItem*>的视图是超出末尾的集合; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.IsCurrentAfterLast*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  id: IsCurrentBeforeFirst
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsCurrentBeforeFirst
  nameWithType: CollectionView.IsCurrentBeforeFirst
  fullName: System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否<xref:System.Windows.Data.CollectionView.CurrentItem*>的视图是在集合开头之前。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。"
  syntax:
    content: public virtual bool IsCurrentBeforeFirst { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Windows.Data.CollectionView.CurrentItem*>视图的是集合; 开头之前否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.IsCurrentBeforeFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsCurrentInSync
  id: IsCurrentInSync
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsCurrentInSync
  nameWithType: CollectionView.IsCurrentInSync
  fullName: System.Windows.Data.CollectionView.IsCurrentInSync
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否<> *1> 位于<> *1>。"
  syntax:
    content: protected bool IsCurrentInSync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<> *1> 视图中，在<> *1>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.IsCurrentInSync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsDynamic
  id: IsDynamic
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsDynamic
  nameWithType: CollectionView.IsDynamic
  fullName: System.Windows.Data.CollectionView.IsDynamic
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否对基础集合提供了更改通知。"
  syntax:
    content: protected bool IsDynamic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果基础集合提供更改通知;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.IsDynamic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsEmpty
  id: IsEmpty
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsEmpty
  nameWithType: CollectionView.IsEmpty
  fullName: System.Windows.Data.CollectionView.IsEmpty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否生成 （已筛选） 视图为空。"
  syntax:
    content: public virtual bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果获得的视图为空;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsInUse
  id: IsInUse
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsInUse
  nameWithType: CollectionView.IsInUse
  fullName: System.Windows.Data.CollectionView.IsInUse
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否任何对象订阅此事件<xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>。"
  syntax:
    content: public virtual bool IsInUse { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果任何对象订阅此事件<xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.IsInUse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsRefreshDeferred
  id: IsRefreshDeferred
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsRefreshDeferred
  nameWithType: CollectionView.IsRefreshDeferred
  fullName: System.Windows.Data.CollectionView.IsRefreshDeferred
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否存在某个未完成<xref:System.Windows.Data.CollectionView.DeferRefresh*>中使用。</xref:System.Windows.Data.CollectionView.DeferRefresh*>"
  syntax:
    content: protected bool IsRefreshDeferred { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果没有未完成<xref:System.Windows.Data.CollectionView.DeferRefresh*>中使用; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.DeferRefresh*>"
  overload: System.Windows.Data.CollectionView.IsRefreshDeferred*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)
  id: MoveCurrentTo(System.Object)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentTo(Object)
  nameWithType: CollectionView.MoveCurrentTo(Object)
  fullName: System.Windows.Data.CollectionView.MoveCurrentTo(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将指定的项设置<xref:System.Windows.Data.CollectionView.CurrentItem*>视图中。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "如果找不到指定的项，该方法返回`false`和<xref:System.Windows.Data.CollectionView.CurrentItem%2A>位于视图中的集合开头之前。</xref:System.Windows.Data.CollectionView.CurrentItem%2A>       集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。 有关详细信息，请参阅&quot;绑定到集合&quot;[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。       有关视图的当前项的详细信息，请参阅<xref:System.Windows.Data.CollectionView.CurrentItem%2A>。</xref:System.Windows.Data.CollectionView.CurrentItem%2A>"
  example:
  - "The following example demonstrates the use of this method.  \n  \n [!code-cs[Colors#NewColor](~/add/codesnippet/csharp/Colors/Colors.xaml.cs#newcolor)]\n [!code-vb[Colors#NewColor](~/add/codesnippet/visualbasic/colors/colors.xaml.vb#newcolor)]"
  syntax:
    content: public virtual bool MoveCurrentTo (object item);
    parameters:
    - id: item
      type: System.Object
      description: "要将设置为<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>的项"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果生成<xref:System.Windows.Data.CollectionView.CurrentItem*>位于视图; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToFirst
  id: MoveCurrentToFirst
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToFirst()
  nameWithType: CollectionView.MoveCurrentToFirst()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToFirst()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "视图中的第一项设置为<xref:System.Windows.Data.CollectionView.CurrentItem*>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。 有关详细信息，请参阅&quot;绑定到集合&quot;[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToFirst ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果生成<xref:System.Windows.Data.CollectionView.CurrentItem*>是一项在视图中; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToLast
  id: MoveCurrentToLast
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToLast()
  nameWithType: CollectionView.MoveCurrentToLast()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToLast()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "视图中的最后一项设置为<xref:System.Windows.Data.CollectionView.CurrentItem*>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。 有关详细信息，请参阅&quot;绑定到集合&quot;[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToLast ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果生成<xref:System.Windows.Data.CollectionView.CurrentItem*>是一项在视图中; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToLast*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToNext
  id: MoveCurrentToNext
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToNext()
  nameWithType: CollectionView.MoveCurrentToNext()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToNext()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "之后的项设置<> *1> 在视图中作为<> *1>。"
  remarks: "集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。 有关详细信息，请参阅&quot;绑定到集合&quot;[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果生成<xref:System.Windows.Data.CollectionView.CurrentItem*>是一项在视图中; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToNext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)
  id: MoveCurrentToPosition(System.Int32)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToPosition(Int32)
  nameWithType: CollectionView.MoveCurrentToPosition(Int32)
  fullName: System.Windows.Data.CollectionView.MoveCurrentToPosition(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "设置指定索引处的项<xref:System.Windows.Data.CollectionView.CurrentItem*>视图中。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。 有关详细信息，请参阅&quot;绑定到集合&quot;[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToPosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "要设置的索引<xref:System.Windows.Data.CollectionView.CurrentItem*>到。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果生成<xref:System.Windows.Data.CollectionView.CurrentItem*>是一项在视图中; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToPrevious
  id: MoveCurrentToPrevious
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToPrevious()
  nameWithType: CollectionView.MoveCurrentToPrevious()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToPrevious()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "之前的项设置<> *1> 在视图中作为<> *1>。"
  remarks: "集合视图支持当前的记录指针的概念。 浏览集合视图中的对象时，你在移动一个记录指针，它允许您检索存在于集合中的特定位置的对象。 有关详细信息，请参阅&quot;绑定到集合&quot;[数据绑定概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToPrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果生成<xref:System.Windows.Data.CollectionView.CurrentItem*>是一项在视图中; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToPrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.NeedsRefresh
  id: NeedsRefresh
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: NeedsRefresh
  nameWithType: CollectionView.NeedsRefresh
  fullName: System.Windows.Data.CollectionView.NeedsRefresh
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否需要刷新视图。"
  remarks: "此属性指示是否视图的内部状态发生更改，并需要<xref:System.Windows.Data.CollectionView.Refresh%2A>方法调用。</xref:System.Windows.Data.CollectionView.Refresh%2A> 典型情况是如果<xref:System.ComponentModel.SortDescription>或类似项已添加到视图时的视图是在延迟的刷新周期 (请参阅<xref:System.Windows.Data.CollectionView.DeferRefresh%2A>)。</xref:System.Windows.Data.CollectionView.DeferRefresh%2A> </xref:System.ComponentModel.SortDescription> 在此方案中，不需要显式调用<xref:System.Windows.Data.CollectionView.Refresh%2A>需要; 只要延迟的刷新周期结束，该视图将自动调用刷新。</xref:System.Windows.Data.CollectionView.Refresh%2A>"
  syntax:
    content: public virtual bool NeedsRefresh { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果需要刷新，则视图，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.NeedsRefresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.NewItemPlaceholder
  id: NewItemPlaceholder
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: NewItemPlaceholder
  nameWithType: CollectionView.NewItemPlaceholder
  fullName: System.Windows.Data.CollectionView.NewItemPlaceholder
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取集合中要表示新项的对象。"
  remarks: "当<xref:System.Windows.Data.CollectionView>实现<xref:System.ComponentModel.IEditableCollectionView>具有<xref:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition%2A>设置为<xref:System.ComponentModel.NewItemPlaceholderPosition>或<xref:System.ComponentModel.NewItemPlaceholderPosition>，NewItemPlaceholder 添加到集合。</xref:System.ComponentModel.NewItemPlaceholderPosition> </xref:System.ComponentModel.NewItemPlaceholderPosition> </xref:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition%2A> </xref:System.ComponentModel.IEditableCollectionView> </xref:System.Windows.Data.CollectionView>  NewItemPlaceholder 始终显示集合中的它不参与分组、 排序或筛选。       <xref:System.Windows.Data.CollectionView.CurrentItem%2A>不能为 NewItemPlaceholder。</xref:System.Windows.Data.CollectionView.CurrentItem%2A> 方法执行相对导航窗格中，如<xref:System.Windows.Data.CollectionView.MoveCurrentToNext%2A>，跳过 NewItemPlaceholder。</xref:System.Windows.Data.CollectionView.MoveCurrentToNext%2A>  <xref:System.Windows.Data.CollectionView.MoveCurrentToFirst%2A>和<xref:System.Windows.Data.CollectionView.MoveCurrentToLast%2A>如果跳过 NewItemPlaceholder<xref:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition%2A>设置为<xref:System.ComponentModel.NewItemPlaceholderPosition>或<xref:System.ComponentModel.NewItemPlaceholderPosition>分别。</xref:System.ComponentModel.NewItemPlaceholderPosition> </xref:System.ComponentModel.NewItemPlaceholderPosition> </xref:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition%2A> </xref:System.Windows.Data.CollectionView.MoveCurrentToLast%2A></xref:System.Windows.Data.CollectionView.MoveCurrentToFirst%2A> 执行绝对导航窗格中的，如<xref:System.Windows.Data.CollectionView.MoveCurrentToPosition%2A>、 不执行任何操作如果 NewItemPlaceholder 将<xref:System.Windows.Data.CollectionView.CurrentItem%2A>.</xref:System.Windows.Data.CollectionView.CurrentItem%2A></xref:System.Windows.Data.CollectionView.MoveCurrentToPosition%2A>方法"
  syntax:
    content: public static object NewItemPlaceholder { get; }
    return:
      type: System.Object
      description: "在集合以表示新项的对象。"
  overload: System.Windows.Data.CollectionView.NewItemPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OKToChangeCurrent
  id: OKToChangeCurrent
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OKToChangeCurrent()
  nameWithType: CollectionView.OKToChangeCurrent()
  fullName: System.Windows.Data.CollectionView.OKToChangeCurrent()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回一个值，该值指示视图是否可以更改的项是<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  syntax:
    content: protected bool OKToChangeCurrent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果侦听器取消更改，则为否则为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.OKToChangeCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged
  id: OnAllowsCrossThreadChangesChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnAllowsCrossThreadChangesChanged()
  nameWithType: CollectionView.OnAllowsCrossThreadChangesChanged()
  fullName: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "发生时<xref:System.Windows.Data.CollectionView.AllowsCrossThreadChanges*>属性更改。</xref:System.Windows.Data.CollectionView.AllowsCrossThreadChanges*>"
  syntax:
    content: protected virtual void OnAllowsCrossThreadChangesChanged ();
    parameters: []
  overload: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "由基类来通知派生类调用&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged?displayProperty=fullName&gt;事件已发送到消息队列。"
  syntax:
    content: protected virtual void OnBeginChangeLogging (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "<xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>对象，它将添加到更改日志。</xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>"
  overload: System.Windows.Data.CollectionView.OnBeginChangeLogging*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>args</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引发<xref href=&quot;System.Windows.Data.CollectionView.CollectionChanged&quot;></xref>事件。"
  remarks: "执行任何排序、 筛选或分组在调用此方法来引发之前考虑的条件<xref:System.Windows.Data.CollectionView.CollectionChanged>事件。</xref:System.Windows.Data.CollectionView.CollectionChanged>"
  syntax:
    content: protected virtual void OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "<xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>要传递给事件处理程序对象。</xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>"
  overload: System.Windows.Data.CollectionView.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引发<xref href=&quot;System.Windows.Data.CollectionView.CollectionChanged&quot;></xref>事件。"
  remarks: "此方法调用<xref:System.Windows.Data.CollectionView.ProcessCollectionChanged%2A>是否位于正确[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]线程调度程序和已永远不会更新来自另一个线程，或将更改发送到正确的线程上对其进行处理的调度程序。</xref:System.Windows.Data.CollectionView.ProcessCollectionChanged%2A>"
  syntax:
    content: protected void OnCollectionChanged (object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: sender
      type: System.Object
      description: "事件的发件人。"
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "<xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>要传递给事件处理程序对象。</xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>"
  overload: System.Windows.Data.CollectionView.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCurrentChanged
  id: OnCurrentChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCurrentChanged()
  nameWithType: CollectionView.OnCurrentChanged()
  fullName: System.Windows.Data.CollectionView.OnCurrentChanged()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引发<xref href=&quot;System.Windows.Data.CollectionView.CurrentChanged&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnCurrentChanged ();
    parameters: []
  overload: System.Windows.Data.CollectionView.OnCurrentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCurrentChanging
  id: OnCurrentChanging
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCurrentChanging()
  nameWithType: CollectionView.OnCurrentChanging()
  fullName: System.Windows.Data.CollectionView.OnCurrentChanging()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引发<xref href=&quot;System.Windows.Data.CollectionView.CurrentChanging&quot;></xref>不是可取消的事件。"
  remarks: "此方法会设置<xref:System.Windows.Data.CollectionView.CurrentPosition%2A>为 –&1;。</xref:System.Windows.Data.CollectionView.CurrentPosition%2A> 集合更改影响<xref:System.Windows.Data.CollectionView.CurrentItem%2A>.</xref:System.Windows.Data.CollectionView.CurrentItem%2A>调用此方法"
  syntax:
    content: protected void OnCurrentChanging ();
    parameters: []
  overload: System.Windows.Data.CollectionView.OnCurrentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  id: OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCurrentChanging(CurrentChangingEventArgs)
  nameWithType: CollectionView.OnCurrentChanging(CurrentChangingEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCurrentChanging(CurrentChangingEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引发<xref href=&quot;System.Windows.Data.CollectionView.CurrentChanging&quot;></xref>带指定参数的事件。"
  syntax:
    content: protected virtual void OnCurrentChanging (System.ComponentModel.CurrentChangingEventArgs args);
    parameters:
    - id: args
      type: System.ComponentModel.CurrentChangingEventArgs
      description: "有关事件的信息。"
  overload: System.Windows.Data.CollectionView.OnCurrentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: CollectionView.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnPropertyChanged(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引发<xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>使用指定的参数的事件。</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  syntax:
    content: protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "要引发事件的参数。"
  overload: System.Windows.Data.CollectionView.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.PassesFilter(System.Object)
  id: PassesFilter(System.Object)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: PassesFilter(Object)
  nameWithType: CollectionView.PassesFilter(Object)
  fullName: System.Windows.Data.CollectionView.PassesFilter(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回一个值，该值指示基础集合中的指定的项是否属于该视图。"
  remarks: "与不同<xref:System.Windows.Data.CollectionView.Contains%2A>方法，此方法假定指定的项属于基础集合。</xref:System.Windows.Data.CollectionView.Contains%2A> 此方法将筛选器考虑在内。 通常情况下，你使用此方法在集合更改通知过程来确定是否添加或移除的项需要处理。"
  syntax:
    content: public virtual bool PassesFilter (object item);
    parameters:
    - id: item
      type: System.Object
      description: "要检查的项。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的项属于视图，或如果未设置集合视图; 筛选器否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.PassesFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "当在派生类中重写，在处理单个更改[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]线程。"
  syntax:
    content: protected virtual void ProcessCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "<xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>对象到进程。</xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>"
  overload: System.Windows.Data.CollectionView.ProcessCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.ProcessPendingChanges
  id: ProcessPendingChanges
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: ProcessPendingChanges()
  nameWithType: CollectionView.ProcessPendingChanges()
  fullName: System.Windows.Data.CollectionView.ProcessPendingChanges()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "确保已提交到集合的所有挂起的更改。"
  syntax:
    content: protected void ProcessPendingChanges ();
    parameters: []
  overload: System.Windows.Data.CollectionView.ProcessPendingChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.PropertyChanged
  id: PropertyChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: CollectionView.PropertyChanged
  fullName: System.Windows.Data.CollectionView.PropertyChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "属性值更改时发生。"
  syntax:
    content: protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Refresh
  id: Refresh
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Refresh()
  nameWithType: CollectionView.Refresh()
  fullName: System.Windows.Data.CollectionView.Refresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "重新创建视图。"
  remarks: "当你将设置<xref:System.Windows.Data.CollectionView.Filter%2A>， <xref:System.Windows.Data.CollectionView.SortDescriptions%2A>，或<xref:System.Windows.Data.CollectionView.GroupDescriptions%2A>属性; 刷新时发生。</xref:System.Windows.Data.CollectionView.GroupDescriptions%2A> </xref:System.Windows.Data.CollectionView.SortDescriptions%2A> </xref:System.Windows.Data.CollectionView.Filter%2A>  不需要设置这些属性之一后立即调用 Refresh 方法。 璝惠 延迟自动刷新，请参阅<xref:System.Windows.Data.CollectionView.DeferRefresh%2A>。</xref:System.Windows.Data.CollectionView.DeferRefresh%2A>       派生的类使用受保护<xref:System.Windows.Data.CollectionView.RefreshOverride%2A>方法重写此方法的行为。</xref:System.Windows.Data.CollectionView.RefreshOverride%2A>"
  syntax:
    content: public virtual void Refresh ();
    parameters: []
  overload: System.Windows.Data.CollectionView.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.RefreshOrDefer
  id: RefreshOrDefer
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: RefreshOrDefer()
  nameWithType: CollectionView.RefreshOrDefer()
  fullName: System.Windows.Data.CollectionView.RefreshOrDefer()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "刷新视图或指定视图需要延迟循环循环完成时刷新。"
  syntax:
    content: protected void RefreshOrDefer ();
    parameters: []
  overload: System.Windows.Data.CollectionView.RefreshOrDefer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.RefreshOverride
  id: RefreshOverride
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: RefreshOverride()
  nameWithType: CollectionView.RefreshOverride()
  fullName: System.Windows.Data.CollectionView.RefreshOverride()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "重新创建视图。"
  syntax:
    content: protected virtual void RefreshOverride ();
    parameters: []
  overload: System.Windows.Data.CollectionView.RefreshOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)
  id: SetCurrent(System.Object,System.Int32)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: SetCurrent(Object,Int32)
  nameWithType: CollectionView.SetCurrent(Object,Int32)
  fullName: System.Windows.Data.CollectionView.SetCurrent(Object,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将指定的项和索引设置的值为<> *1> 和<> *1> 属性。"
  syntax:
    content: protected void SetCurrent (object newItem, int newPosition);
    parameters:
    - id: newItem
      type: System.Object
      description: "要将设置为<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>的项"
    - id: newPosition
      type: System.Int32
      description: "值将设置为<xref:System.Windows.Data.CollectionView.CurrentPosition*>属性值。</xref:System.Windows.Data.CollectionView.CurrentPosition*>"
  overload: System.Windows.Data.CollectionView.SetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)
  id: SetCurrent(System.Object,System.Int32,System.Int32)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: SetCurrent(Object,Int32,Int32)
  nameWithType: CollectionView.SetCurrent(Object,Int32,Int32)
  fullName: System.Windows.Data.CollectionView.SetCurrent(Object,Int32,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "将指定的项和索引设置的值为<> *1> 和<> *1> 属性。 从派生类的构造函数可以调用此方法。"
  remarks: "从派生类的构造函数中调用此重载。  不要将传递<xref:System.Windows.Data.CollectionView.Count%2A>属性，它是虚拟的属性，作为`count`。</xref:System.Windows.Data.CollectionView.Count%2A> 相反，传递的内部计数<xref:System.Collections.IList>表示的集合。</xref:System.Collections.IList>       SetCurrent 是.NET Framework 3.5 版中引入的。  有关详细信息，请参阅[版本和依赖关系](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected void SetCurrent (object newItem, int newPosition, int count);
    parameters:
    - id: newItem
      type: System.Object
      description: "要将设置为<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>的项"
    - id: newPosition
      type: System.Int32
      description: "值将设置为<xref:System.Windows.Data.CollectionView.CurrentPosition*>属性值。</xref:System.Windows.Data.CollectionView.CurrentPosition*>"
    - id: count
      type: System.Int32
      description: "中的项的数目<xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.SetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.SortDescriptions
  id: SortDescriptions
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: SortDescriptions
  nameWithType: CollectionView.SortDescriptions
  fullName: System.Windows.Data.CollectionView.SortDescriptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取的集合<xref href=&quot;System.ComponentModel.SortDescription&quot;></xref>结构描述集合中的项在视图中的排序方式。"
  remarks: "无法添加<xref:System.ComponentModel.SortDescription>所返回的 （空） 集合因为基类<xref:System.Windows.Data.CollectionView>不支持排序。</xref:System.Windows.Data.CollectionView> </xref:System.ComponentModel.SortDescription> 请改用派生的类<xref:System.Windows.Data.ListCollectionView>和<xref:System.Windows.Data.BindingListCollectionView>支持排序。</xref:System.Windows.Data.BindingListCollectionView> </xref:System.Windows.Data.ListCollectionView> 另外，请检查<xref:System.Windows.Data.CollectionView.CanSort%2A>之前添加或删除属性<xref:System.ComponentModel.SortDescription>对象以避免异常。</xref:System.ComponentModel.SortDescription> </xref:System.Windows.Data.CollectionView.CanSort%2A>"
  syntax:
    content: public virtual System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }
    return:
      type: System.ComponentModel.SortDescriptionCollection
      description: "一个空<xref href=&quot;System.ComponentModel.SortDescriptionCollection&quot;></xref>在所有情况下。"
  overload: System.Windows.Data.CollectionView.SortDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.SourceCollection
  id: SourceCollection
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: SourceCollection
  nameWithType: CollectionView.SourceCollection
  fullName: System.Windows.Data.CollectionView.SourceCollection
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回基础未筛选的集合。"
  syntax:
    content: public virtual System.Collections.IEnumerable SourceCollection { get; }
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>属于基础集合的对象。</xref:System.Collections.IEnumerable>"
  overload: System.Windows.Data.CollectionView.SourceCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: CollectionView.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Data.CollectionView.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "返回<xref:System.Collections.IEnumerator>对象可用于枚举在视图中的项。</xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>对象可用于枚举在视图中的项。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  id: UpdatedOutsideDispatcher
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: UpdatedOutsideDispatcher
  nameWithType: CollectionView.UpdatedOutsideDispatcher
  fullName: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "获取一个值，该值指示是否已进行更新更改日志，因为所需<xref href=&quot;System.Windows.Data.CollectionView.CollectionChanged&quot;></xref>通知的安全提供程序已在另一个线程收到而无需第一个输入[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]线程调度程序。"
  syntax:
    content: protected bool UpdatedOutsideDispatcher { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果它已更新更改日志，因为所需<xref href=&quot;System.Windows.Data.CollectionView.CollectionChanged&quot;></xref>通知的安全提供程序已在另一个线程收到而无需第一个输入[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]线程调度程序; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CollectionView(IEnumerable)
  nameWithType: CollectionView.CollectionView(IEnumerable)
  fullName: System.Windows.Data.CollectionView.CollectionView(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: AllowsCrossThreadChanges
  nameWithType: CollectionView.AllowsCrossThreadChanges
  fullName: System.Windows.Data.CollectionView.AllowsCrossThreadChanges
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.CollectionView.CanFilter
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanFilter
  nameWithType: CollectionView.CanFilter
  fullName: System.Windows.Data.CollectionView.CanFilter
- uid: System.Windows.Data.CollectionView.CanGroup
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanGroup
  nameWithType: CollectionView.CanGroup
  fullName: System.Windows.Data.CollectionView.CanGroup
- uid: System.Windows.Data.CollectionView.CanSort
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanSort
  nameWithType: CollectionView.CanSort
  fullName: System.Windows.Data.CollectionView.CanSort
- uid: System.Windows.Data.CollectionView.ClearChangeLog
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ClearChangeLog()
  nameWithType: CollectionView.ClearChangeLog()
  fullName: System.Windows.Data.CollectionView.ClearChangeLog()
- uid: System.Windows.Data.CollectionView.ClearPendingChanges
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ClearPendingChanges()
  nameWithType: CollectionView.ClearPendingChanges()
  fullName: System.Windows.Data.CollectionView.ClearPendingChanges()
- uid: System.Windows.Data.CollectionView.CollectionChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CollectionChanged
  nameWithType: CollectionView.CollectionChanged
  fullName: System.Windows.Data.CollectionView.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.Windows.Data.CollectionView.Comparer
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Comparer
  nameWithType: CollectionView.Comparer
  fullName: System.Windows.Data.CollectionView.Comparer
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Windows.Data.CollectionView.Contains(System.Object)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Contains(Object)
  nameWithType: CollectionView.Contains(Object)
  fullName: System.Windows.Data.CollectionView.Contains(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.CollectionView.Count
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Count
  nameWithType: CollectionView.Count
  fullName: System.Windows.Data.CollectionView.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.CollectionView.Culture
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Culture
  nameWithType: CollectionView.Culture
  fullName: System.Windows.Data.CollectionView.Culture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.CollectionView.CurrentChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentChanged
  nameWithType: CollectionView.CurrentChanged
  fullName: System.Windows.Data.CollectionView.CurrentChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Data.CollectionView.CurrentChanging
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentChanging
  nameWithType: CollectionView.CurrentChanging
  fullName: System.Windows.Data.CollectionView.CurrentChanging
- uid: System.ComponentModel.CurrentChangingEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CurrentChangingEventHandler
  nameWithType: CurrentChangingEventHandler
  fullName: System.ComponentModel.CurrentChangingEventHandler
- uid: System.Windows.Data.CollectionView.CurrentItem
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentItem
  nameWithType: CollectionView.CurrentItem
  fullName: System.Windows.Data.CollectionView.CurrentItem
- uid: System.Windows.Data.CollectionView.CurrentPosition
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentPosition
  nameWithType: CollectionView.CurrentPosition
  fullName: System.Windows.Data.CollectionView.CurrentPosition
- uid: System.Windows.Data.CollectionView.DeferRefresh
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: DeferRefresh()
  nameWithType: CollectionView.DeferRefresh()
  fullName: System.Windows.Data.CollectionView.DeferRefresh()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Windows.Data.CollectionView.DetachFromSourceCollection
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: DetachFromSourceCollection()
  nameWithType: CollectionView.DetachFromSourceCollection()
  fullName: System.Windows.Data.CollectionView.DetachFromSourceCollection()
- uid: System.Windows.Data.CollectionView.Filter
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Filter
  nameWithType: CollectionView.Filter
  fullName: System.Windows.Data.CollectionView.Filter
- uid: System.Predicate{System.Object}
  parent: System
  isExternal: true
  name: Predicate<Object>
  nameWithType: Predicate<Object>
  fullName: System.Predicate<System.Object>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.CollectionView.GetEnumerator
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GetEnumerator()
  nameWithType: CollectionView.GetEnumerator()
  fullName: System.Windows.Data.CollectionView.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Data.CollectionView.GetItemAt(System.Int32)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GetItemAt(Int32)
  nameWithType: CollectionView.GetItemAt(Int32)
  fullName: System.Windows.Data.CollectionView.GetItemAt(Int32)
- uid: System.Windows.Data.CollectionView.GroupDescriptions
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GroupDescriptions
  nameWithType: CollectionView.GroupDescriptions
  fullName: System.Windows.Data.CollectionView.GroupDescriptions
- uid: System.Collections.ObjectModel.ObservableCollection{System.ComponentModel.GroupDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ObservableCollection<GroupDescription>
  nameWithType: ObservableCollection<GroupDescription>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.ComponentModel.GroupDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection<System.ComponentModel.GroupDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.GroupDescription
    name: GroupDescription
    nameWithType: GroupDescription
    fullName: GroupDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.CollectionView.Groups
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Groups
  nameWithType: CollectionView.Groups
  fullName: System.Windows.Data.CollectionView.Groups
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyObservableCollection<Object>
  nameWithType: ReadOnlyObservableCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Object>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: ReadOnlyObservableCollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.CollectionView.IndexOf(System.Object)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IndexOf(Object)
  nameWithType: CollectionView.IndexOf(Object)
  fullName: System.Windows.Data.CollectionView.IndexOf(Object)
- uid: System.Windows.Data.CollectionView.IsCurrentAfterLast
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentAfterLast
  nameWithType: CollectionView.IsCurrentAfterLast
  fullName: System.Windows.Data.CollectionView.IsCurrentAfterLast
- uid: System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentBeforeFirst
  nameWithType: CollectionView.IsCurrentBeforeFirst
  fullName: System.Windows.Data.CollectionView.IsCurrentBeforeFirst
- uid: System.Windows.Data.CollectionView.IsCurrentInSync
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentInSync
  nameWithType: CollectionView.IsCurrentInSync
  fullName: System.Windows.Data.CollectionView.IsCurrentInSync
- uid: System.Windows.Data.CollectionView.IsDynamic
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsDynamic
  nameWithType: CollectionView.IsDynamic
  fullName: System.Windows.Data.CollectionView.IsDynamic
- uid: System.Windows.Data.CollectionView.IsEmpty
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsEmpty
  nameWithType: CollectionView.IsEmpty
  fullName: System.Windows.Data.CollectionView.IsEmpty
- uid: System.Windows.Data.CollectionView.IsInUse
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsInUse
  nameWithType: CollectionView.IsInUse
  fullName: System.Windows.Data.CollectionView.IsInUse
- uid: System.Windows.Data.CollectionView.IsRefreshDeferred
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsRefreshDeferred
  nameWithType: CollectionView.IsRefreshDeferred
  fullName: System.Windows.Data.CollectionView.IsRefreshDeferred
- uid: System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentTo(Object)
  nameWithType: CollectionView.MoveCurrentTo(Object)
  fullName: System.Windows.Data.CollectionView.MoveCurrentTo(Object)
- uid: System.Windows.Data.CollectionView.MoveCurrentToFirst
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToFirst()
  nameWithType: CollectionView.MoveCurrentToFirst()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToFirst()
- uid: System.Windows.Data.CollectionView.MoveCurrentToLast
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToLast()
  nameWithType: CollectionView.MoveCurrentToLast()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToLast()
- uid: System.Windows.Data.CollectionView.MoveCurrentToNext
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToNext()
  nameWithType: CollectionView.MoveCurrentToNext()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToNext()
- uid: System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToPosition(Int32)
  nameWithType: CollectionView.MoveCurrentToPosition(Int32)
  fullName: System.Windows.Data.CollectionView.MoveCurrentToPosition(Int32)
- uid: System.Windows.Data.CollectionView.MoveCurrentToPrevious
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToPrevious()
  nameWithType: CollectionView.MoveCurrentToPrevious()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToPrevious()
- uid: System.Windows.Data.CollectionView.NeedsRefresh
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: NeedsRefresh
  nameWithType: CollectionView.NeedsRefresh
  fullName: System.Windows.Data.CollectionView.NeedsRefresh
- uid: System.Windows.Data.CollectionView.NewItemPlaceholder
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: NewItemPlaceholder
  nameWithType: CollectionView.NewItemPlaceholder
  fullName: System.Windows.Data.CollectionView.NewItemPlaceholder
- uid: System.Windows.Data.CollectionView.OKToChangeCurrent
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OKToChangeCurrent()
  nameWithType: CollectionView.OKToChangeCurrent()
  fullName: System.Windows.Data.CollectionView.OKToChangeCurrent()
- uid: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnAllowsCrossThreadChangesChanged()
  nameWithType: CollectionView.OnAllowsCrossThreadChangesChanged()
  fullName: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged()
- uid: System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs)
- uid: System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
- uid: System.Windows.Data.CollectionView.OnCurrentChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanged()
  nameWithType: CollectionView.OnCurrentChanged()
  fullName: System.Windows.Data.CollectionView.OnCurrentChanged()
- uid: System.Windows.Data.CollectionView.OnCurrentChanging
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanging()
  nameWithType: CollectionView.OnCurrentChanging()
  fullName: System.Windows.Data.CollectionView.OnCurrentChanging()
- uid: System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanging(CurrentChangingEventArgs)
  nameWithType: CollectionView.OnCurrentChanging(CurrentChangingEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCurrentChanging(CurrentChangingEventArgs)
- uid: System.ComponentModel.CurrentChangingEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CurrentChangingEventArgs
  nameWithType: CurrentChangingEventArgs
  fullName: System.ComponentModel.CurrentChangingEventArgs
- uid: System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: CollectionView.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnPropertyChanged(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Windows.Data.CollectionView.PassesFilter(System.Object)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: PassesFilter(Object)
  nameWithType: CollectionView.PassesFilter(Object)
  fullName: System.Windows.Data.CollectionView.PassesFilter(Object)
- uid: System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
- uid: System.Windows.Data.CollectionView.ProcessPendingChanges
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ProcessPendingChanges()
  nameWithType: CollectionView.ProcessPendingChanges()
  fullName: System.Windows.Data.CollectionView.ProcessPendingChanges()
- uid: System.Windows.Data.CollectionView.PropertyChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: PropertyChanged
  nameWithType: CollectionView.PropertyChanged
  fullName: System.Windows.Data.CollectionView.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Windows.Data.CollectionView.Refresh
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Refresh()
  nameWithType: CollectionView.Refresh()
  fullName: System.Windows.Data.CollectionView.Refresh()
- uid: System.Windows.Data.CollectionView.RefreshOrDefer
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: RefreshOrDefer()
  nameWithType: CollectionView.RefreshOrDefer()
  fullName: System.Windows.Data.CollectionView.RefreshOrDefer()
- uid: System.Windows.Data.CollectionView.RefreshOverride
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: RefreshOverride()
  nameWithType: CollectionView.RefreshOverride()
  fullName: System.Windows.Data.CollectionView.RefreshOverride()
- uid: System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SetCurrent(Object,Int32)
  nameWithType: CollectionView.SetCurrent(Object,Int32)
  fullName: System.Windows.Data.CollectionView.SetCurrent(Object,Int32)
- uid: System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SetCurrent(Object,Int32,Int32)
  nameWithType: CollectionView.SetCurrent(Object,Int32,Int32)
  fullName: System.Windows.Data.CollectionView.SetCurrent(Object,Int32,Int32)
- uid: System.Windows.Data.CollectionView.SortDescriptions
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SortDescriptions
  nameWithType: CollectionView.SortDescriptions
  fullName: System.Windows.Data.CollectionView.SortDescriptions
- uid: System.ComponentModel.SortDescriptionCollection
  parent: System.ComponentModel
  isExternal: false
  name: SortDescriptionCollection
  nameWithType: SortDescriptionCollection
  fullName: System.ComponentModel.SortDescriptionCollection
- uid: System.Windows.Data.CollectionView.SourceCollection
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SourceCollection
  nameWithType: CollectionView.SourceCollection
  fullName: System.Windows.Data.CollectionView.SourceCollection
- uid: System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: CollectionView.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Data.CollectionView.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: UpdatedOutsideDispatcher
  nameWithType: CollectionView.UpdatedOutsideDispatcher
  fullName: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
- uid: System.Windows.Data.CollectionView.#ctor*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CollectionView
  nameWithType: CollectionView.CollectionView
- uid: System.Windows.Data.CollectionView.AllowsCrossThreadChanges*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: AllowsCrossThreadChanges
  nameWithType: CollectionView.AllowsCrossThreadChanges
- uid: System.Windows.Data.CollectionView.CanFilter*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanFilter
  nameWithType: CollectionView.CanFilter
- uid: System.Windows.Data.CollectionView.CanGroup*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanGroup
  nameWithType: CollectionView.CanGroup
- uid: System.Windows.Data.CollectionView.CanSort*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanSort
  nameWithType: CollectionView.CanSort
- uid: System.Windows.Data.CollectionView.ClearChangeLog*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ClearChangeLog
  nameWithType: CollectionView.ClearChangeLog
- uid: System.Windows.Data.CollectionView.ClearPendingChanges*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ClearPendingChanges
  nameWithType: CollectionView.ClearPendingChanges
- uid: System.Windows.Data.CollectionView.Comparer*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Comparer
  nameWithType: CollectionView.Comparer
- uid: System.Windows.Data.CollectionView.Contains*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Contains
  nameWithType: CollectionView.Contains
- uid: System.Windows.Data.CollectionView.Count*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Count
  nameWithType: CollectionView.Count
- uid: System.Windows.Data.CollectionView.Culture*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Culture
  nameWithType: CollectionView.Culture
- uid: System.Windows.Data.CollectionView.CurrentItem*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentItem
  nameWithType: CollectionView.CurrentItem
- uid: System.Windows.Data.CollectionView.CurrentPosition*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentPosition
  nameWithType: CollectionView.CurrentPosition
- uid: System.Windows.Data.CollectionView.DeferRefresh*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: DeferRefresh
  nameWithType: CollectionView.DeferRefresh
- uid: System.Windows.Data.CollectionView.DetachFromSourceCollection*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: DetachFromSourceCollection
  nameWithType: CollectionView.DetachFromSourceCollection
- uid: System.Windows.Data.CollectionView.Filter*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Filter
  nameWithType: CollectionView.Filter
- uid: System.Windows.Data.CollectionView.GetEnumerator*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GetEnumerator
  nameWithType: CollectionView.GetEnumerator
- uid: System.Windows.Data.CollectionView.GetItemAt*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GetItemAt
  nameWithType: CollectionView.GetItemAt
- uid: System.Windows.Data.CollectionView.GroupDescriptions*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GroupDescriptions
  nameWithType: CollectionView.GroupDescriptions
- uid: System.Windows.Data.CollectionView.Groups*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Groups
  nameWithType: CollectionView.Groups
- uid: System.Windows.Data.CollectionView.IndexOf*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IndexOf
  nameWithType: CollectionView.IndexOf
- uid: System.Windows.Data.CollectionView.IsCurrentAfterLast*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentAfterLast
  nameWithType: CollectionView.IsCurrentAfterLast
- uid: System.Windows.Data.CollectionView.IsCurrentBeforeFirst*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentBeforeFirst
  nameWithType: CollectionView.IsCurrentBeforeFirst
- uid: System.Windows.Data.CollectionView.IsCurrentInSync*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentInSync
  nameWithType: CollectionView.IsCurrentInSync
- uid: System.Windows.Data.CollectionView.IsDynamic*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsDynamic
  nameWithType: CollectionView.IsDynamic
- uid: System.Windows.Data.CollectionView.IsEmpty*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsEmpty
  nameWithType: CollectionView.IsEmpty
- uid: System.Windows.Data.CollectionView.IsInUse*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsInUse
  nameWithType: CollectionView.IsInUse
- uid: System.Windows.Data.CollectionView.IsRefreshDeferred*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsRefreshDeferred
  nameWithType: CollectionView.IsRefreshDeferred
- uid: System.Windows.Data.CollectionView.MoveCurrentTo*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentTo
  nameWithType: CollectionView.MoveCurrentTo
- uid: System.Windows.Data.CollectionView.MoveCurrentToFirst*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToFirst
  nameWithType: CollectionView.MoveCurrentToFirst
- uid: System.Windows.Data.CollectionView.MoveCurrentToLast*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToLast
  nameWithType: CollectionView.MoveCurrentToLast
- uid: System.Windows.Data.CollectionView.MoveCurrentToNext*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToNext
  nameWithType: CollectionView.MoveCurrentToNext
- uid: System.Windows.Data.CollectionView.MoveCurrentToPosition*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToPosition
  nameWithType: CollectionView.MoveCurrentToPosition
- uid: System.Windows.Data.CollectionView.MoveCurrentToPrevious*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToPrevious
  nameWithType: CollectionView.MoveCurrentToPrevious
- uid: System.Windows.Data.CollectionView.NeedsRefresh*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: NeedsRefresh
  nameWithType: CollectionView.NeedsRefresh
- uid: System.Windows.Data.CollectionView.NewItemPlaceholder*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: NewItemPlaceholder
  nameWithType: CollectionView.NewItemPlaceholder
- uid: System.Windows.Data.CollectionView.OKToChangeCurrent*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OKToChangeCurrent
  nameWithType: CollectionView.OKToChangeCurrent
- uid: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnAllowsCrossThreadChangesChanged
  nameWithType: CollectionView.OnAllowsCrossThreadChangesChanged
- uid: System.Windows.Data.CollectionView.OnBeginChangeLogging*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnBeginChangeLogging
  nameWithType: CollectionView.OnBeginChangeLogging
- uid: System.Windows.Data.CollectionView.OnCollectionChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCollectionChanged
  nameWithType: CollectionView.OnCollectionChanged
- uid: System.Windows.Data.CollectionView.OnCurrentChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanged
  nameWithType: CollectionView.OnCurrentChanged
- uid: System.Windows.Data.CollectionView.OnCurrentChanging*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanging
  nameWithType: CollectionView.OnCurrentChanging
- uid: System.Windows.Data.CollectionView.OnPropertyChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnPropertyChanged
  nameWithType: CollectionView.OnPropertyChanged
- uid: System.Windows.Data.CollectionView.PassesFilter*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: PassesFilter
  nameWithType: CollectionView.PassesFilter
- uid: System.Windows.Data.CollectionView.ProcessCollectionChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ProcessCollectionChanged
  nameWithType: CollectionView.ProcessCollectionChanged
- uid: System.Windows.Data.CollectionView.ProcessPendingChanges*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ProcessPendingChanges
  nameWithType: CollectionView.ProcessPendingChanges
- uid: System.Windows.Data.CollectionView.Refresh*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Refresh
  nameWithType: CollectionView.Refresh
- uid: System.Windows.Data.CollectionView.RefreshOrDefer*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: RefreshOrDefer
  nameWithType: CollectionView.RefreshOrDefer
- uid: System.Windows.Data.CollectionView.RefreshOverride*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: RefreshOverride
  nameWithType: CollectionView.RefreshOverride
- uid: System.Windows.Data.CollectionView.SetCurrent*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SetCurrent
  nameWithType: CollectionView.SetCurrent
- uid: System.Windows.Data.CollectionView.SortDescriptions*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SortDescriptions
  nameWithType: CollectionView.SortDescriptions
- uid: System.Windows.Data.CollectionView.SourceCollection*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SourceCollection
  nameWithType: CollectionView.SourceCollection
- uid: System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: CollectionView.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: UpdatedOutsideDispatcher
  nameWithType: CollectionView.UpdatedOutsideDispatcher
