### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptionMethod
  id: EncryptionMethod
  children:
  - System.Security.Cryptography.Xml.EncryptionMethod.#ctor
  - System.Security.Cryptography.Xml.EncryptionMethod.#ctor(System.String)
  - System.Security.Cryptography.Xml.EncryptionMethod.GetXml
  - System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
  - System.Security.Cryptography.Xml.EncryptionMethod.KeySize
  - System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(System.Xml.XmlElement)
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptionMethod
  type: Class
  summary: "封装 XML 加密所用的加密算法。"
  remarks: "`<EncryptionMethod>`标记使用统一资源标识符 (URI) 来标识必须使用 XML 数据进行解密的加密算法。  EncryptionMethod 类封装`<EncryptionMethod>`World Wide Web 联合会 XML 加密规范所定义的标记位于 http://www.w3.org/TR/xmlenc-core/。       EncryptionMethod 类用于标识与相关联的加密算法<xref:System.Security.Cryptography.Xml.EncryptedData>元素或<xref:System.Security.Cryptography.Xml.EncryptedKey>元素。</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData>       使用一个位于 http://www.w3.org/TR/xmlenc-core/ World Wide Web 联合会 XML 加密规范所定义的 URI 标识符。  URI 的所有标识符都都可以访问为静态字段的<xref:System.Security.Cryptography.Xml.EncryptedXml>类。</xref:System.Security.Cryptography.Xml.EncryptedXml>"
  example:
  - "The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.  \n  \n [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/cpp/t-system.security.crypto_113_1.cpp)]\n [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_113_1.vb)]\n [!code-cs[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/csharp/t-system.security.crypto_113_1.cs)]  \n  \n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/t-system.security.crypto_113_2.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/t-system.security.crypto_113_2.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/t-system.security.crypto_113_2.cs)]"
  syntax:
    content: public class EncryptionMethod
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: EncryptionMethod()
  nameWithType: EncryptionMethod.EncryptionMethod()
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.EncryptionMethod()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;></xref>类。"
  remarks: "此构造函数初始化的新实例<xref:System.Security.Cryptography.Xml.EncryptionMethod>类而不指定加密算法的统一资源标识符 (URI)。</xref:System.Security.Cryptography.Xml.EncryptionMethod>"
  syntax:
    content: public EncryptionMethod ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptionMethod.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: EncryptionMethod(String)
  nameWithType: EncryptionMethod.EncryptionMethod(String)
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.EncryptionMethod(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;></xref>指定统一资源标识符 (URI) 的算法的类。"
  remarks: "此构造函数初始化的新实例<xref:System.Security.Cryptography.Xml.EncryptionMethod>类使用的加密算法的 URI。</xref:System.Security.Cryptography.Xml.EncryptionMethod>       使用一个位于 http://www.w3.org/TR/xmlenc-core/ World Wide Web 联合会 XML 加密规范所定义的 URI 标识符。  URI 的所有标识符都都可以访问为静态字段的<xref:System.Security.Cryptography.Xml.EncryptedXml>类。</xref:System.Security.Cryptography.Xml.EncryptedXml>"
  example:
  - "The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.  \n  \n [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/cpp/m-system.security.crypto_76_1.cpp)]\n [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/visualbasic/m-system.security.crypto_76_1.vb)]\n [!code-cs[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/csharp/m-system.security.crypto_76_1.cs)]  \n  \n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/m-system.security.crypto_76_2.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/m-system.security.crypto_76_2.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/m-system.security.crypto_76_2.cs)]"
  syntax:
    content: public EncryptionMethod (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "描述由的实例表示的算法的统一资源标识符 (URI) <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref>类。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptionMethod.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "返回<xref href=&quot;System.Xml.XmlElement&quot;></xref>封装的实例的对象<xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;></xref>类。"
  remarks: "GetXml 方法返回的表示形式`<EncryptionMethod>`元素。"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>封装的实例的对象<xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;></xref>类。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
  id: KeyAlgorithm
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: KeyAlgorithm
  nameWithType: EncryptionMethod.KeyAlgorithm
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "获取或设置一个统一资源标识符 (URI)，描述要使用 XML 加密的算法。"
  remarks: "KeyAlgorithm 属性描述用于使用关联的数据进行加密的加密算法的统一资源标识符 (URI)<xref:System.Security.Cryptography.Xml.EncryptedData>元素或<xref:System.Security.Cryptography.Xml.EncryptedKey>元素。</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData>       使用一个位于 http://www.w3.org/TR/xmlenc-core/ World Wide Web 联合会 XML 加密规范所定义的 URI 标识符。  URI 的所有标识符都都可以访问为静态字段的<xref:System.Security.Cryptography.Xml.EncryptedXml>类。</xref:System.Security.Cryptography.Xml.EncryptedXml>"
  syntax:
    content: public string KeyAlgorithm { get; set; }
    return:
      type: System.String
      description: "描述要使用 XML 加密的算法统一资源标识符 (URI)。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeySize
  id: KeySize
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: KeySize
  nameWithType: EncryptionMethod.KeySize
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.KeySize
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "获取或设置 XML 加密所用的算法密钥大小。"
  remarks: "KeySize 属性描述用于使用关联的数据进行加密的加密算法的密钥大小<xref:System.Security.Cryptography.Xml.EncryptedData>元素或<xref:System.Security.Cryptography.Xml.EncryptedKey>元素。</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData>"
  syntax:
    content: public int KeySize { get; set; }
    return:
      type: System.Int32
      description: "算法密钥的大小，以位为单位，XML 加密所用。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.KeySize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "KeySize 属性设置为小于 0 的值。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptionMethod.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "分析指定<xref href=&quot;System.Xml.XmlElement&quot;></xref>对象和配置的内部状态<xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;></xref>相匹配的对象。"
  remarks: "LoadXml 方法配置<xref:System.Security.Cryptography.Xml.EncryptionMethod>相匹配的状态的对象<xref:System.Xml.XmlElement>对象。</xref:System.Xml.XmlElement> </xref:System.Security.Cryptography.Xml.EncryptionMethod>"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>要分析的对象。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "中表示的密钥大小<code> value </code>参数为小于 0。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: EncryptionMethod()
  nameWithType: EncryptionMethod.EncryptionMethod()
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.EncryptionMethod()
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: EncryptionMethod(String)
  nameWithType: EncryptionMethod.EncryptionMethod(String)
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.EncryptionMethod(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptionMethod.GetXml
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: GetXml()
  nameWithType: EncryptionMethod.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: KeyAlgorithm
  nameWithType: EncryptionMethod.KeyAlgorithm
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeySize
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: KeySize
  nameWithType: EncryptionMethod.KeySize
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptionMethod.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptionMethod.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptionMethod.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: GetXml
  nameWithType: EncryptionMethod.GetXml
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: KeyAlgorithm
  nameWithType: EncryptionMethod.KeyAlgorithm
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeySize*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: KeySize
  nameWithType: EncryptionMethod.KeySize
- uid: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: LoadXml
  nameWithType: EncryptionMethod.LoadXml
