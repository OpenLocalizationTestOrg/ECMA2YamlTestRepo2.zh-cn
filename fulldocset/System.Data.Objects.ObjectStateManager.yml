### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectStateManager
  id: ObjectStateManager
  children:
  - System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  - System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  - System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  - System.Data.Objects.ObjectStateManager.MetadataWorkspace
  - System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  langs:
  - csharp
  name: ObjectStateManager
  nameWithType: ObjectStateManager
  fullName: System.Data.Objects.ObjectStateManager
  type: Class
  summary: "维护实体类型实例和关系实例的对象状态和标识管理。"
  remarks: "ObjectStateManager 跟踪查询结果，并提供逻辑来合并多个重叠的查询结果。 它还执行内存中时，更改跟踪用户插入、 删除或修改对象，并提供为更新设置的更改。 此变更集由更改处理器用于保存修改。       此类通常由<xref:System.Data.Objects.ObjectContext>，不直接在应用程序。</xref:System.Data.Objects.ObjectContext>"
  example:
  - "These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The following example gets the ObjectStateManager from the <xref:System.Data.Objects.ObjectContext> and uses the state manager to access an object in the context.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> method on the returned ObjectStateManager to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public class ObjectStateManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace)'
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "初始化的新实例<xref href=&quot;System.Data.Objects.ObjectStateManager&quot;></xref>类。"
  syntax:
    content: public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);
    parameters:
    - id: metadataWorkspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>，其中提供映射和元数据信息。"
  overload: System.Data.Objects.ObjectStateManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  id: ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "更改状态<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>对于到指定的特定对象<code> entityState </code>。"
  remarks: "调用 ChangeObjectState 方法的对象的状态更改<xref:System.Data.EntityState>要删除约束关系中不会导致相关的对象。</xref:System.Data.EntityState>       更改对象的状态不影响对象关系图中的相关的对象。       当你更改<xref:System.Data.EntityState>到的实体对象项<xref:System.Data.EntityState>，该对象的所有属性都标记为已修改，而不考虑当前或原始值。</xref:System.Data.EntityState> </xref:System.Data.EntityState>       当<xref:System.Data.EntityState>化实体对象条目更改为<xref:System.Data.EntityState>， <xref:System.Data.EntityState>，或<xref:System.Data.EntityState>，也将更新对象的关系项。</xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);
    parameters:
    - id: entity
      type: System.Object
      description: "必须为其更改状态的对象。"
    - id: entityState
      type: System.Data.EntityState
      description: "对象的新状态。"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "The <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref> for the supplied <code>entity</code>."
  overload: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当对象不是分离，并在状态管理器中没有条目。       -或-当你尝试将状态更改为<xref href=&quot;System.Data.EntityState&quot;></xref>从任何其他<xref:System.Data.EntityState.>-或-当<code> state </code>不是有效<xref href=&quot;System.Data.EntityState&quot;></xref>值。</xref:System.Data.EntityState.>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "更改指定的两个实体对象之间的关系的状态根据两个相关的对象和导航属性的名称。"
  remarks: "在两个指定的关系端对象的项必须存在于<xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>      1> [!NOTE]&1;> 对于基于外键关联的关系不支持此方法。"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "对象实例或<xref href=&quot;System.Data.EntityKey&quot;></xref>某一端的关系的源实体。"
    - id: targetEntity
      type: System.Object
      description: "对象实例或<xref href=&quot;System.Data.EntityKey&quot;></xref>关系另一端的目标实体。"
    - id: navigationProperty
      type: System.String
      description: "上的导航属性的名称`source`，返回指定`target`。"
    - id: relationshipState
      type: System.Data.EntityState
      description: "请求<xref href=&quot;System.Data.EntityState&quot;></xref>指定关系。"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref>已更改的关系。"
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尝试以外将关系的状态更改为状态时<xref href=&quot;System.Data.EntityState&quot;></xref>或<xref href=&quot;System.Data.EntityState&quot;></xref>时任一<code> source </code>或<code> target </code>处于<xref href=&quot;System.Data.EntityState&quot;></xref>状态。       -或-当你尝试关系的状态更改为状态以外<xref href=&quot;System.Data.EntityState&quot;></xref>或<xref href=&quot;System.Data.EntityState&quot;></xref>时任一<code> source </code>或<code> target </code>处于<xref href=&quot;System.Data.EntityState&quot;></xref>状态。       -或-当<code> state </code>不是有效<xref href=&quot;System.Data.EntityState&quot;></xref>值。"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "更改指定的两个实体对象之间的关系的状态根据两个相关的对象和关系的属性。"
  remarks: "在两个指定的关系端对象的项必须存在于<xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>      1> [!NOTE]&1;> 对于基于外键关联的关系不支持此方法。 有关详细信息，请参阅[定义和管理关系](http://msdn.microsoft.com/en-us/2c92c097-56bd-4145-989e-16d92475ecda)"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "对象实例或<xref href=&quot;System.Data.EntityKey&quot;></xref>某一端的关系的源实体。"
    - id: targetEntity
      type: System.Object
      description: "对象实例或<xref href=&quot;System.Data.EntityKey&quot;></xref>关系另一端的目标实体。"
    - id: relationshipName
      type: System.String
      description: "关系的名称。"
    - id: targetRoleName
      type: System.String
      description: "角色名称`target`关系一端。"
    - id: relationshipState
      type: System.Data.EntityState
      description: "请求<xref href=&quot;System.Data.EntityState&quot;></xref>指定关系。"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref>已更改的关系。"
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当你尝试关系的状态更改为状态以外<xref href=&quot;System.Data.EntityState&quot;></xref>或<xref href=&quot;System.Data.EntityState&quot;></xref>时任一<code> source </code>或<code> target </code>处于<xref href=&quot;System.Data.EntityState&quot;></xref>状态。       -或-当你尝试关系的状态更改为状态以外<xref href=&quot;System.Data.EntityState&quot;></xref>或<xref href=&quot;System.Data.EntityState&quot;></xref>时任一<code> source </code>或<code> target </code>处于<xref href=&quot;System.Data.EntityState&quot;></xref>状态。       -或-当<code> state </code>不是有效<xref href=&quot;System.Data.EntityState&quot;></xref>值。"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  id: ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: 'public System.Data.Objects.ObjectStateEntry ChangeRelationshipState<TEntity> (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression<Func<TEntity,object>> navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;'
    parameters:
    - id: sourceEntity
      type: TEntity
      description: "要添加。"
    - id: targetEntity
      type: System.Object
      description: "要添加。"
    - id: navigationPropertySelector
      type: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
      description: "要添加。"
    - id: relationshipState
      type: System.Data.EntityState
      description: "要添加。"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "要添加。"
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  id: GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回的集合<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>具有给定状态的对象或关系的对象。"
  remarks: "<xref:System.Data.EntityState>是一个位字段，因此可以在一次调用中检索多个状态的状态条目，通过执行按位或的多个<xref:System.Data.EntityState>值。</xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry> GetObjectStateEntries (System.Data.EntityState state);
    parameters:
    - id: state
      type: System.Data.EntityState
      description: "<xref href=&quot;System.Data.EntityState&quot;> </xref>用于筛选返回<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>对象。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
      description: "集合<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>中的对象给定<xref href=&quot;System.Data.EntityState&quot;> </xref>。"
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "When <code>state</code> is <xref href=&quot;System.Data.EntityState&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  id: GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>与指定的键的对象或关系项。"
  remarks: "使用<xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>方法以返回<xref:System.Data.Objects.ObjectStateEntry>对象而无需处理<xref:System.InvalidOperationException>GetObjectStateEntry 方法引发。</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example gets the <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>. Then it gets the current value of the `SalesOrderHeader.PurchaseOrderNumber` property, changes the property's value, and enumerates through the collection of modified properties.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstateentry)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstateentry)]"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "The <xref href=&quot;System.Data.EntityKey&quot;></xref>."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "相应<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>为给定<xref href=&quot;System.Data.EntityKey&quot;> </xref>。"
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "当指定<code> key </code>无法在状态管理器中找到。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "使用指定的任何实体<xref href=&quot;System.Data.EntityKey&quot;></xref>中存在<xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  id: GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>指定的对象。"
  remarks: "使用<xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>方法以返回<xref:System.Data.Objects.ObjectStateEntry>对象而无需处理<xref:System.InvalidOperationException>GetObjectStateEntry 方法引发。</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "<xref:System.Object>与其检索<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>所属。</xref:System.Object>"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "相应<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>给定<xref:System.Object>。</xref:System.Object>"
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定没有实体<xref:System.Object>中存在<xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>。</xref:System.Object>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  id: GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;></xref>由指定的对象。"
  remarks: "调用 GetRelationshipManager 方法是调用相同<xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>方法，只不过此方法将引发异常而不是返回`false`。</xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>       调用<xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>方法可避免处理<xref:System.InvalidOperationException>发生这种情况时<xref:System.Data.Objects.DataClasses.RelationshipManager>无法返回提供的实体。</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>"
  syntax:
    content: public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "为其返回对象<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>。"
    return:
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>指定的对象。"
  overload: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "当<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;></xref>无法返回有关指定<code> entity </code>。"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  id: MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "获取<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;></xref>与此状态管理器相关联。"
  remarks: "<xref:System.Data.Metadata.Edm.MetadataWorkspace>类是作为中心编程接口，可以使用与实体数据模型 (EDM) 元数据在运行时和应用程序的上下文中进行交互。</xref:System.Data.Metadata.Edm.MetadataWorkspace>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>与此关联<xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>。"
  overload: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  id: ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  type: Event
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "实体将添加到或从状态管理器中删除时发生。"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "尝试检索相应<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>对象或使用指定的关系<xref href=&quot;System.Data.EntityKey&quot;> </xref>。"
  remarks: "使用 TryGetObjectStateEntry 返回<xref:System.Data.Objects.ObjectStateEntry>而无需处理<xref:System.InvalidOperationException>引起<xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>方法。</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  example:
  - "The examples in this topic are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The example attempts to retrieve the corresponding <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the TryGetObjectStateEntry method on the returned <xref:System.Data.Objects.ObjectStateManager> to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "给定<xref href=&quot;System.Data.EntityKey&quot;> </xref>。"
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "此方法返回时，包含<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>为给定<xref href=&quot;System.Data.EntityKey&quot;></xref>此参数未经初始化即被传递。"
    return:
      type: System.Boolean
      description: "一个布尔值，是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果没有相应<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>为给定<xref href=&quot;System.Data.EntityKey&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中) 为提供值<code> key </code>。"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "尝试检索相应<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>指定<xref:System.Object>。</xref:System.Object>"
  remarks: "TryGetObjectStateEntry 方法用于返回<xref:System.Data.Objects.ObjectStateEntry>而无需处理<xref:System.InvalidOperationException>由引发<xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>方法。</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  syntax:
    content: public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: entity
      type: System.Object
      description: "<xref:System.Object>与其检索<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>所属。</xref:System.Object>"
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "此方法返回时，包含<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>为给定<xref href=&quot;System.Data.EntityKey&quot;></xref>此参数未经初始化即被传递。"
    return:
      type: System.Boolean
      description: "一个布尔值，是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果没有相应<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref>给定的对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  id: TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "返回<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;></xref>由指定的对象。"
  remarks: "<xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>方法用于获取<xref:System.Data.Objects.DataClasses.RelationshipManager>的对象的持久性未知。</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> 当对象实现<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>或从其继承<xref:System.Data.Objects.DataClasses.EntityObject>、<xref:System.Data.Objects.DataClasses.RelationshipManager>从访问<xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A>属性。</xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> </xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.DataClasses.EntityObject> </xref:System.Data.Objects.DataClasses.IEntityWithRelationships>       <xref:System.Data.Objects.DataClasses.RelationshipManager>时的对象处于不能返回<xref:System.Data.EntityState>状态。</xref:System.Data.EntityState> </xref:System.Data.Objects.DataClasses.RelationshipManager>       调用 TryGetRelationshipManager 方法是调用相同<xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>方法，只不过此方法返回`false`而不是引发异常。</xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>"
  syntax:
    content: public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);
    parameters:
    - id: entity
      type: System.Object
      description: "为其返回对象<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>。"
    - id: relationshipManager
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "此方法返回时，包含<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;></xref>为`entity`。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;></xref>返回实例为所提供<code> entity </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
- uid: System.Data.Objects.ObjectStateEntry
  parent: System.Data.Objects
  isExternal: false
  name: ObjectStateEntry
  nameWithType: ObjectStateEntry
  fullName: System.Data.Objects.ObjectStateEntry
- uid: System.Data.EntityState
  parent: System.Data
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: System.Data.EntityState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TEntity,Object>>
  nameWithType: Expression<Func<TEntity,Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity,System.Object>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TEntity,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TEntity,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
- uid: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ObjectStateEntry>
  nameWithType: IEnumerable<ObjectStateEntry>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Objects.ObjectStateEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Objects.ObjectStateEntry
    name: ObjectStateEntry
    nameWithType: ObjectStateEntry
    fullName: ObjectStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
- uid: System.Data.EntityKey
  parent: System.Data
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
- uid: System.Data.Objects.DataClasses.RelationshipManager
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: RelationshipManager
  nameWithType: RelationshipManager
  fullName: System.Data.Objects.DataClasses.RelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
- uid: System.Data.Objects.ObjectStateManager.#ctor*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager
  nameWithType: ObjectStateManager.ObjectStateManager
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState
  nameWithType: ObjectStateManager.ChangeObjectState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState
  nameWithType: ObjectStateManager.ChangeRelationshipState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState<TEntity>
  nameWithType: ObjectStateManager.ChangeRelationshipState<TEntity>
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries
  nameWithType: ObjectStateManager.GetObjectStateEntries
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry
  nameWithType: ObjectStateManager.GetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager
  nameWithType: ObjectStateManager.GetRelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry
  nameWithType: ObjectStateManager.TryGetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager
  nameWithType: ObjectStateManager.TryGetRelationshipManager
