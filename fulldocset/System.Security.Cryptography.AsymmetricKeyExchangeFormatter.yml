### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  id: AsymmetricKeyExchangeFormatter
  children:
  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor
  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])
  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)
  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters
  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  langs:
  - csharp
  name: AsymmetricKeyExchangeFormatter
  nameWithType: AsymmetricKeyExchangeFormatter
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  type: Class
  summary: "表示从中派生所有非对称密钥交换格式化程序的基类。"
  remarks: "非对称密钥交换格式化程序加密密钥交换数据。       密钥交换允许发件人创建机密信息，如随机数据，可用作一种对称加密算法中的键和使用加密来将其发送到的目标接收方。      1> [!CAUTION]&1;> 强烈建议你不尝试创建您自己的密钥交换方法从提供的基本功能，因为密钥交换，若要成功，必须谨慎地执行操作的许多详细信息。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class AsymmetricKeyExchangeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  langs:
  - csharp
  name: AsymmetricKeyExchangeFormatter()
  nameWithType: AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.AsymmetricKeyExchangeFormatter&quot;> </xref>。"
  remarks: "无法创建抽象类的实例。 应用程序代码将创建派生类的新实例。       用于<xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey%2A>设置在调用<xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A>.</xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A>之前的密钥</xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey%2A>"
  syntax:
    content: protected AsymmetricKeyExchangeFormatter ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])
  id: CreateKeyExchange(System.Byte[])
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  langs:
  - csharp
  name: CreateKeyExchange(Byte[])
  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "当在派生类中重写，从指定的输入数据创建加密密钥交换数据。"
  remarks: "仅可以由用于加密数据的公钥相对应的私钥的持有者解释此数据。 这可帮助确保只有预期的收件人可以访问的机密信息。"
  syntax:
    content: public abstract byte[] CreateKeyExchange (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要在密钥交换中传递的机密信息。"
    return:
      type: System.Byte[]
      description: "发送到的目标接收方加密的密钥交换数据。"
  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)
  id: CreateKeyExchange(System.Byte[],System.Type)
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  langs:
  - csharp
  name: CreateKeyExchange(Byte[],Type)
  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "当在派生类中重写，从指定的输入数据创建加密密钥交换数据。"
  remarks: "仅可以由用于加密数据的公钥相对应的私钥的持有者解释此数据。 这可帮助确保只有预期的收件人可以访问的机密信息。"
  syntax:
    content: public abstract byte[] CreateKeyExchange (byte[] data, Type symAlgType);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要在密钥交换中传递的机密信息。"
    - id: symAlgType
      type: System.Type
      description: "当前版本中不使用此参数。"
    return:
      type: System.Byte[]
      description: "发送到的目标接收方加密的密钥交换数据。"
  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters
  id: Parameters
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  langs:
  - csharp
  name: Parameters
  nameWithType: AsymmetricKeyExchangeFormatter.Parameters
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "当在派生类中重写，获取非对称密钥交换的参数。"
  syntax:
    content: public abstract string Parameters { get; }
    return:
      type: System.String
      description: "中包含非对称密钥交换操作的参数的 XML 格式的字符串。"
  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "当在派生类中重写，设置要用于加密的机密信息的公钥。"
  remarks: "你必须设置一个项之前调用<xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A>实现。</xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A>"
  syntax:
    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "实现的实例<xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;></xref>包含公钥。"
  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: AsymmetricKeyExchangeFormatter()
  nameWithType: AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: CreateKeyExchange(Byte[])
  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: CreateKeyExchange(Byte[],Type)
  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: Parameters
  nameWithType: AsymmetricKeyExchangeFormatter.Parameters
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor*
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: AsymmetricKeyExchangeFormatter
  nameWithType: AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: CreateKeyExchange
  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters*
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: Parameters
  nameWithType: AsymmetricKeyExchangeFormatter.Parameters
- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey*
  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
  isExternal: false
  name: SetKey
  nameWithType: AsymmetricKeyExchangeFormatter.SetKey
