### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.ModelItemCollection
  id: ModelItemCollection
  children:
  - System.Activities.Presentation.Model.ModelItemCollection.#ctor
  - System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.Clear
  - System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  - System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.Count
  - System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  - System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  - System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  - System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  - System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  - System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: ModelItemCollection
  nameWithType: ModelItemCollection
  fullName: System.Activities.Presentation.Model.ModelItemCollection
  type: Class
  summary: "表示可按照索引单独访问的模型项的集合。"
  remarks: "如果更改期间向该项目集合的编辑范围，如范围内将进行拖放操作中，<xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A>编辑范围完成之前，将不会更新属性。</xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A>"
  syntax:
    content: 'public abstract class ModelItemCollection : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IList<System.Activities.Presentation.Model.ModelItem>, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged'
  inheritance:
  - System.Object
  - System.Activities.Presentation.Model.ModelItem
  implements:
  - System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.Generic.IList<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.IList
  - System.Collections.Specialized.INotifyCollectionChanged
  inheritedMembers:
  - System.Activities.Presentation.Model.ModelItem.Attributes
  - System.Activities.Presentation.Model.ModelItem.BeginEdit
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.Content
  - System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  - System.Activities.Presentation.Model.ModelItem.ItemType
  - System.Activities.Presentation.Model.ModelItem.Name
  - System.Activities.Presentation.Model.ModelItem.Parent
  - System.Activities.Presentation.Model.ModelItem.Parents
  - System.Activities.Presentation.Model.ModelItem.Properties
  - System.Activities.Presentation.Model.ModelItem.PropertyChanged
  - System.Activities.Presentation.Model.ModelItem.Root
  - System.Activities.Presentation.Model.ModelItem.Source
  - System.Activities.Presentation.Model.ModelItem.Sources
  - System.Activities.Presentation.Model.ModelItem.ToString
  - System.Activities.Presentation.Model.ModelItem.View
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: ModelItemCollection()
  nameWithType: ModelItemCollection.ModelItemCollection()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ModelItemCollection()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "创建的新实例<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
  syntax:
    content: protected ModelItemCollection ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  id: Add(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Add(ModelItem)
  nameWithType: ModelItemCollection.Add(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将模型项添加到末尾<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
  syntax:
    content: public abstract void Add (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "要添加到集合的模型项。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Add(Object)
  nameWithType: ModelItemCollection.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将模型项添加到末尾<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
  remarks: "将存储对象，作为一种<xref:System.Activities.Presentation.Model.ModelItem>。</xref:System.Activities.Presentation.Model.ModelItem>"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加到集合的对象。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <code>value</code> wrapped in a <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear
  id: Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ModelItemCollection.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Clear()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "移除所有元素从<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
  syntax:
    content: public abstract void Clear ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: ModelItemCollection.CollectionChanged
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "当集合更改时发生。"
  syntax:
    content: public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  id: Contains(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Contains(ModelItem)
  nameWithType: ModelItemCollection.Contains(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "确定是否<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>包含指定的元素。"
  syntax:
    content: public abstract bool Contains (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "要在集合中定位的值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>包含的元素，具有指定的值; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ModelItemCollection.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "确定是否<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>包含指定的元素。"
  syntax:
    content: public abstract bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在集合中定位的值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>包含的元素，具有指定的值; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  id: CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: CopyTo(ModelItem[],Int32)
  nameWithType: ModelItemCollection.CopyTo(ModelItem[],Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(ModelItem[],Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将集合的内容复制到给定数组。"
  syntax:
    content: public abstract void CopyTo (System.Activities.Presentation.Model.ModelItem[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Activities.Presentation.Model.ModelItem[]
      description: "要复制到集合的数组。"
    - id: arrayIndex
      type: System.Int32
      description: "要开始复制的位置的数组中的索引。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>arrayIndex</code>超出范围，或要存放集合的内容的数组中没有足够的空间。"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count
  id: Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Count
  nameWithType: ModelItemCollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Count
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "返回集合中的项的计数。"
  remarks: "此值不更新期间<xref:System.Activities.Presentation.EditingContext>会话。</xref:System.Activities.Presentation.EditingContext> 如果一个对象添加到<xref:System.Activities.Presentation.Model.ModelItemCollection>会话期间的计数值将不会更新直到会话退出。</xref:System.Activities.Presentation.Model.ModelItemCollection>"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "返回<xref:System.Int32>集合中项的计数。</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ModelItemCollection.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取循环访问的枚举器<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<System.Activities.Presentation.Model.ModelItem> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Activities.Presentation.Model.ModelItem}
      description: "返回&lt;xref:System.Collections.Generic.IEnumerator%601&gt;为<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  id: IndexOf(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IndexOf(ModelItem)
  nameWithType: ModelItemCollection.IndexOf(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "返回中的值的第一个匹配项的从零开始索引<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
  syntax:
    content: public abstract int IndexOf (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "要在集合中定位的对象。"
    return:
      type: System.Int32
      description: "第一个匹配项的从零开始索引<code> item </code>在整个<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>，如果找到; 否则为-1。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  id: Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Insert(Int32,ModelItem)
  nameWithType: ModelItemCollection.Insert(Int32,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将元素插入<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>的指定索引处。"
  syntax:
    content: public abstract void Insert (int index, System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引位置`item`应插入。"
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "要插入的模型项。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: ModelItemCollection.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将元素插入<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>的指定索引处。"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引位置`value`应插入。"
    - id: value
      type: System.Object
      description: "要插入的对象。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <code>value</code> wrapped in a <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取一个值，该值指示集合是否具有固定的大小。"
  remarks: "默认实现返回`true`如果该集合为只读的。"
  syntax:
    content: protected virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该集合为固定的大小，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取一个值，该值指示集合是否是只读的。"
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合不能更改;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取一个值，该值指示是否同步对集合的访问 （线程安全）。"
  syntax:
    content: protected virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对集合的访问是同步的 （线程安全）;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ModelItemCollection.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取或设置集合中的给定索引处的项。"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "集合的从零开始的索引。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  id: ItemProperty
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: ItemProperty
  nameWithType: ModelItemCollection.ItemProperty
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  type: Field
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "标识 Item 依赖项属性。"
  remarks: "Item 属性表示集合中的所有项，并定义为类型<xref:System.Activities.Presentation.Model.ModelItem>.</xref:System.Activities.Presentation.Model.ModelItem> Item 属性指向<xref:System.Activities.Presentation.Model.ModelItemCollection>本身。</xref:System.Activities.Presentation.Model.ModelItemCollection>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ItemProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  id: Move(System.Int32,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Move(Int32,Int32)
  nameWithType: ModelItemCollection.Move(Int32,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Move(Int32,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将集合中的项移到另一个索引。"
  syntax:
    content: public abstract void Move (int fromIndex, int toIndex);
    parameters:
    - id: fromIndex
      type: System.Int32
      description: "要移动之前的项的索引。"
    - id: toIndex
      type: System.Int32
      description: "移动之后项的索引。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Move*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "任一<code> fromIndex </code>或<code> toIndex </code>为负数或大于或等于<xref:System.Activities.Presentation.Model.ModelItemCollection.Count*>.</xref:System.Activities.Presentation.Model.ModelItemCollection.Count*>"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  id: Remove(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Remove(ModelItem)
  nameWithType: ModelItemCollection.Remove(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "删除<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>从集合。"
  syntax:
    content: public abstract bool Remove (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "The <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>从集合中移除; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ModelItemCollection.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "从集合中移除的值。"
  syntax:
    content: public abstract bool Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果从集合中; 中删除值否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ModelItemCollection.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "移除位于给定索引处的项。"
  syntax:
    content: public abstract void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "项的索引。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  id: SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取可用于同步对集合的访问的对象。"
  syntax:
    content: protected virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "返回<xref:System.Object>.</xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "元素复制<xref:System.Collections.ICollection>到<xref:System.Array>特定处开始，<xref:System.Array>索引。</xref:System.Array> </xref:System.Array> </xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>这是从<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>复制的元素的目标</xref:System.Array>的一维 <xref:System.Array>必须具有从零开始的索引。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "中的从零开始索引`array`复制开始处。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取集合中包含的元素数。"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "返回<xref:System.Int32>值，该值是集合中包含的元素数。</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "中包含的元素数<xref:System.Collections.ICollection>是同步的 （线程安全）。</xref:System.Collections.ICollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果访问<xref:System.Collections.ICollection>是同步的 （线程安全）; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.ICollection>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取可用于同步对<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>访问的对象"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "返回<xref:System.Object>可用于同步对<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>访问</xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "返回循环访问集合的枚举。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "返回<xref:System.Collections.IEnumerator>可用于循环访问集合。</xref:System.Collections.IEnumerator>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将模型项添加到末尾<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加到集合的对象。"
    return:
      type: System.Int32
      description: "返回新添加的对象的索引。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: ModelItemCollection.System.Collections.IList.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "从<xref:System.Collections.IList>.</xref:System.Collections.IList>中移除所有项"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "确定是否<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>包含指定的元素。"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在中找到的对象<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>包含的元素，具有指定的值; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "确定<xref:System.Collections.IList>.</xref:System.Collections.IList>中特定项的索引"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>要在<xref:System.Collections.IList>.</xref:System.Collections.IList>中查找</xref:System.Object>"
    return:
      type: System.Int32
      description: "返回<xref:System.Int32>索引<code> value </code>如果在列表中找到; 否则为-1。</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "将元素插入<xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;></xref>的指定索引处。"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引位置`value`应插入。"
    - id: value
      type: System.Object
      description: "要插入的对象。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取一个值，该值指示是否<xref:System.Collections.IList>具有固定的大小。</xref:System.Collections.IList>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IList>具有固定大小; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IList>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取一个值，该值指示是否<xref:System.Collections.IList>是只读的。</xref:System.Collections.IList>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IList>只读的; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IList>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "获取或设置指定索引处的元素。"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "要获取或设置元素的从零开始索引。"
    return:
      type: System.Object
      description: "指定索引处的元素。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "从<xref:System.Collections.IList>.</xref:System.Collections.IList>中删除特定对象的第一个匹配项"
  remarks: "在由连续的元素，如列表，集合中移除的元素下面的元素的元素将上移以占据空出的位置。 如果集合具有索引，则移动的元素的索引也将更新。 此行为不适用于元素按概念划分为不同存储桶，如哈希表的集合。 如果`value`中找不到<xref:System.Collections.IList>、<xref:System.Collections.IList>保持不变且不引发异常。</xref:System.Collections.IList> </xref:System.Collections.IList>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>若要删除<xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "删除<xref:System.Collections.IList>的指定索引处的项。</xref:System.Collections.IList>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要移除的项的从零开始的索引。"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: System.Activities.Presentation.Model.ModelItem
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ModelItemCollection()
  nameWithType: ModelItemCollection.ModelItemCollection()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ModelItemCollection()
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add(ModelItem)
  nameWithType: ModelItemCollection.Add(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add(Object)
  nameWithType: ModelItemCollection.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Clear()
  nameWithType: ModelItemCollection.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Clear()
- uid: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: ModelItemCollection.CollectionChanged
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains(ModelItem)
  nameWithType: ModelItemCollection.Contains(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(ModelItem)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: ModelItemCollection.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CopyTo(ModelItem[],Int32)
  nameWithType: ModelItemCollection.CopyTo(ModelItem[],Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(ModelItem[],Int32)
- uid: System.Activities.Presentation.Model.ModelItem[]
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem[]
  spec.csharp:
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Count
  nameWithType: ModelItemCollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ModelItemCollection.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ModelItem>
  nameWithType: IEnumerator<ModelItem>
  fullName: System.Collections.Generic.IEnumerator<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IndexOf(ModelItem)
  nameWithType: ModelItemCollection.IndexOf(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert(Int32,ModelItem)
  nameWithType: ModelItemCollection.Insert(Int32,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: ModelItemCollection.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ModelItemCollection.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Item(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ItemProperty
  nameWithType: ModelItemCollection.ItemProperty
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Move(Int32,Int32)
  nameWithType: ModelItemCollection.Move(Int32,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Move(Int32,Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove(ModelItem)
  nameWithType: ModelItemCollection.Remove(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove(Object)
  nameWithType: ModelItemCollection.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ModelItemCollection.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Add(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: ModelItemCollection.System.Collections.IList.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Clear()
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Contains(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Item(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Remove(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ModelItemCollection
  nameWithType: ModelItemCollection.ModelItemCollection
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add
  nameWithType: ModelItemCollection.Add
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Clear
  nameWithType: ModelItemCollection.Clear
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains
  nameWithType: ModelItemCollection.Contains
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CopyTo
  nameWithType: ModelItemCollection.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Count
  nameWithType: ModelItemCollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ModelItemCollection.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IndexOf
  nameWithType: ModelItemCollection.IndexOf
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert
  nameWithType: ModelItemCollection.Insert
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Item
  nameWithType: ModelItemCollection.Item
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Move
  nameWithType: ModelItemCollection.Move
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove
  nameWithType: ModelItemCollection.Remove
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ModelItemCollection.RemoveAt
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ModelItemCollection.System.Collections.IList.Add
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: ModelItemCollection.System.Collections.IList.Clear
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ModelItemCollection.System.Collections.IList.Contains
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ModelItemCollection.System.Collections.IList.Insert
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ModelItemCollection.System.Collections.IList.Item
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ModelItemCollection.System.Collections.IList.Remove
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt
