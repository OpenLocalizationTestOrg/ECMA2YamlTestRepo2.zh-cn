### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  id: IAccessor
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)
  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)
  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)
  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)
  langs:
  - csharp
  name: IAccessor
  nameWithType: IAccessor
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  type: Interface
  summary: "提供的 OLE DB 实现<xref uid=&quot;langword_csharp_IAccessor&quot; name=&quot;IAccessor&quot; href=&quot;&quot;></xref>供从 Visual Basic 6.0 升级的应用程序使用的接口。"
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: >-
      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      [System.Runtime.InteropServices.Guid("0c733a8c-2a1c-11ce-ade5-00aa0044773d")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IAccessor
  implements: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)
  id: AddRefAccessor(System.Int32,System.Int32@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  langs:
  - csharp
  name: AddRefAccessor(Int32,Int32)
  nameWithType: IAccessor.AddRefAccessor(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "将引用计数添加到现有的访问器。"
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public void AddRefAccessor (int hAccessor, out int cRefCount);
    parameters:
    - id: hAccessor
      type: System.Int32
      description: "要递增引用计数的访问器句柄。"
    - id: cRefCount
      type: System.Int32
      description: "指向要返回的访问器句柄的引用计数在其中的内存的指针。 如果`cRefCount`是 null 指针，返回没有引用计数。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)
  id: CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  langs:
  - csharp
  name: CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  nameWithType: IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "从一组绑定创建一个访问器。"
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public void CreateAccessor (int accessorFlags, int cBindings, Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, int cbRowSize, out int hAccessor, IntPtr pBindStatus);
    parameters:
    - id: accessorFlags
      type: System.Int32
      description: "描述的属性访问器以及如何使用一个位屏蔽。"
    - id: cBindings
      type: System.Int32
      description: "访问器中的绑定数。"
    - id: bindings
      type: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]
      description: "数组<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.DBBINDING&quot;></xref>结构。"
    - id: cbRowSize
      type: System.Int32
      description: "为使用者的缓冲区中的参数或条件值的一组分配的字节数。"
    - id: hAccessor
      type: System.Int32
      description: "指向要返回的创建访问器句柄在其中的内存的指针。"
    - id: pBindStatus
      type: System.IntPtr
      description: "指向数组的指针<xref uid=&quot;langword_csharp_DBBINDSTATUS&quot; name=&quot;DBBINDSTATUS&quot; href=&quot;&quot;></xref>值。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)
  id: GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  langs:
  - csharp
  name: GetBindings(Int32,Int32,Int32,IntPtr)
  nameWithType: IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "访问器中返回的绑定。"
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public void GetBindings (int hAccessor, out int accessorFlags, out int cBindings, out IntPtr rgBindings);
    parameters:
    - id: hAccessor
      type: System.Int32
      description: "要返回其绑定的访问器句柄。"
    - id: accessorFlags
      type: System.Int32
      description: "描述的属性访问器和如何它旨在用于指向在其中返回一个位屏蔽的内存的指针。"
    - id: cBindings
      type: System.Int32
      description: "指向内存中用于访问器中返回绑定数的指针。"
    - id: rgBindings
      type: System.IntPtr
      description: "指向内存中要返回的数组的指针<xref uid=&quot;langword_csharp_DBBINDSTATUS&quot; name=&quot;DBBINDSTATUS&quot; href=&quot;&quot;></xref>结构。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)
  id: ReleaseAccessor(System.Int32,System.Int32@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  langs:
  - csharp
  name: ReleaseAccessor(Int32,Int32)
  nameWithType: IAccessor.ReleaseAccessor(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "释放访问器。"
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public void ReleaseAccessor (int hAccessor, out int cRefCount);
    parameters:
    - id: hAccessor
      type: System.Int32
      description: "要释放的访问器句柄。"
    - id: cRefCount
      type: System.Int32
      description: "指向要返回的访问器句柄剩余的引用计数在其中的内存的指针。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: AddRefAccessor(Int32,Int32)
  nameWithType: IAccessor.AddRefAccessor(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  nameWithType: IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
- uid: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]
  parent: Microsoft.VisualBasic.Compatibility.VB6
  isExternal: false
  name: DBBINDING
  nameWithType: DBBINDING
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]
  spec.csharp:
  - uid: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING
    name: DBBINDING
    nameWithType: DBBINDING
    fullName: DBBINDING[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: GetBindings(Int32,Int32,Int32,IntPtr)
  nameWithType: IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: ReleaseAccessor(Int32,Int32)
  nameWithType: IAccessor.ReleaseAccessor(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(Int32,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: AddRefAccessor
  nameWithType: IAccessor.AddRefAccessor
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: CreateAccessor
  nameWithType: IAccessor.CreateAccessor
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: GetBindings
  nameWithType: IAccessor.GetBindings
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: ReleaseAccessor
  nameWithType: IAccessor.ReleaseAccessor
