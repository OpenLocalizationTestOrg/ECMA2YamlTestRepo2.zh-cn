### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeArgumentReferenceExpression
  id: CodeArgumentReferenceExpression
  children:
  - System.CodeDom.CodeArgumentReferenceExpression.#ctor
  - System.CodeDom.CodeArgumentReferenceExpression.#ctor(System.String)
  - System.CodeDom.CodeArgumentReferenceExpression.ParameterName
  langs:
  - csharp
  name: CodeArgumentReferenceExpression
  nameWithType: CodeArgumentReferenceExpression
  fullName: System.CodeDom.CodeArgumentReferenceExpression
  type: Class
  summary: "表示传递给方法的参数的值的引用。"
  remarks: "CodeArgumentReferenceExpression 可以在方法中，用于引用传递给方法的参数的值。       <xref:System.CodeDom.CodeArgumentReferenceExpression.ParameterName%2A>属性指定要引用的参数的名称。</xref:System.CodeDom.CodeArgumentReferenceExpression.ParameterName%2A>"
  example:
  - "The following example code defines a method that invokes `Console.WriteLine` to output the string parameter passed to the method. A CodeArgumentReferenceExpression references the argument passed to the method by method parameter name.  \n  \n [!code-cs[CodeArgumentReferenceExpressionExample#2](~/add/codesnippet/csharp/t-system.codedom.codearg_1.cs)]\n [!code-cpp[CodeArgumentReferenceExpressionExample#2](~/add/codesnippet/cpp/t-system.codedom.codearg_1.cpp)]\n [!code-vb[CodeArgumentReferenceExpressionExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codearg_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeArgumentReferenceExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeArgumentReferenceExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeArgumentReferenceExpression
  langs:
  - csharp
  name: CodeArgumentReferenceExpression()
  nameWithType: CodeArgumentReferenceExpression.CodeArgumentReferenceExpression()
  fullName: System.CodeDom.CodeArgumentReferenceExpression.CodeArgumentReferenceExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeArgumentReferenceExpression&quot;></xref>类。"
  syntax:
    content: public CodeArgumentReferenceExpression ();
    parameters: []
  overload: System.CodeDom.CodeArgumentReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeArgumentReferenceExpression.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeArgumentReferenceExpression
  langs:
  - csharp
  name: CodeArgumentReferenceExpression(String)
  nameWithType: CodeArgumentReferenceExpression.CodeArgumentReferenceExpression(String)
  fullName: System.CodeDom.CodeArgumentReferenceExpression.CodeArgumentReferenceExpression(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "初始化的新实例<xref href=&quot;System.CodeDom.CodeArgumentReferenceExpression&quot;></xref>类使用指定的参数名称。"
  syntax:
    content: public CodeArgumentReferenceExpression (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "要引用的参数名称。"
  overload: System.CodeDom.CodeArgumentReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeArgumentReferenceExpression.ParameterName
  id: ParameterName
  parent: System.CodeDom.CodeArgumentReferenceExpression
  langs:
  - csharp
  name: ParameterName
  nameWithType: CodeArgumentReferenceExpression.ParameterName
  fullName: System.CodeDom.CodeArgumentReferenceExpression.ParameterName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "获取或设置此表达式引用参数的名称。"
  syntax:
    content: public string ParameterName { get; set; }
    return:
      type: System.String
      description: "要引用的参数名称。"
  overload: System.CodeDom.CodeArgumentReferenceExpression.ParameterName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeArgumentReferenceExpression.#ctor
  parent: System.CodeDom.CodeArgumentReferenceExpression
  isExternal: false
  name: CodeArgumentReferenceExpression()
  nameWithType: CodeArgumentReferenceExpression.CodeArgumentReferenceExpression()
  fullName: System.CodeDom.CodeArgumentReferenceExpression.CodeArgumentReferenceExpression()
- uid: System.CodeDom.CodeArgumentReferenceExpression.#ctor(System.String)
  parent: System.CodeDom.CodeArgumentReferenceExpression
  isExternal: false
  name: CodeArgumentReferenceExpression(String)
  nameWithType: CodeArgumentReferenceExpression.CodeArgumentReferenceExpression(String)
  fullName: System.CodeDom.CodeArgumentReferenceExpression.CodeArgumentReferenceExpression(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeArgumentReferenceExpression.ParameterName
  parent: System.CodeDom.CodeArgumentReferenceExpression
  isExternal: false
  name: ParameterName
  nameWithType: CodeArgumentReferenceExpression.ParameterName
  fullName: System.CodeDom.CodeArgumentReferenceExpression.ParameterName
- uid: System.CodeDom.CodeArgumentReferenceExpression.#ctor*
  parent: System.CodeDom.CodeArgumentReferenceExpression
  isExternal: false
  name: CodeArgumentReferenceExpression
  nameWithType: CodeArgumentReferenceExpression.CodeArgumentReferenceExpression
- uid: System.CodeDom.CodeArgumentReferenceExpression.ParameterName*
  parent: System.CodeDom.CodeArgumentReferenceExpression
  isExternal: false
  name: ParameterName
  nameWithType: CodeArgumentReferenceExpression.ParameterName
