### YamlMime:ManagedReference
items:
- uid: System.Reflection.TargetException
  id: TargetException
  children:
  - System.Reflection.TargetException.#ctor
  - System.Reflection.TargetException.#ctor(System.String)
  - System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.TargetException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: TargetException
  nameWithType: TargetException
  fullName: System.Reflection.TargetException
  type: Class
  summary: "表示当尝试调用无效目标时引发的异常。"
  remarks: "A`TargetException`当尝试调用非静态方法对 null 对象时引发。 这可能是因为调用方没有访问成员，或者因为目标不会定义的成员，等等。      1> [!NOTE]&1;> 此异常未包含在[.NET for Windows Store 应用](http://go.microsoft.com/fwlink/?LinkID=247912)或的详细信息，但它将引发的某些成员。 若要在这种情况下捕获异常，编写`catch`语句<xref:System.Exception>相反。</xref:System.Exception>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TargetException : ApplicationException
  inheritance:
  - System.Exception
  - System.ApplicationException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor
  id: '#ctor'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "初始化的新实例<xref href=&quot;System.Reflection.TargetException&quot;></xref>使用空的消息和异常的根本原因的类。"
  remarks: "`InnerException`属性设置为`null`和 HRESULT 错误代码设置为 COR_E_TARGET。       `TargetException`继承自<xref:System.Exception>.</xref:System.Exception> 此构造函数设置的属性`Exception`对象下表中所示。      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`|  |<xref:System.Exception.Message%2A>|空字符串 (&quot;&quot;)。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException ();
    parameters: []
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "初始化的新实例<xref href=&quot;System.Reflection.TargetException&quot;></xref>使用给定的消息和根的类会导致异常。"
  remarks: "`TargetException`继承自<xref:System.Exception>.</xref:System.Exception> 此构造函数设置的属性`Exception`对象下表中所示。      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`|  |<xref:System.Exception.Message%2A>|消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>描述该异常发生的原因。"
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "初始化的新实例<xref href=&quot;System.Reflection.TargetException&quot;></xref>使用指定的序列化和上下文信息的类。"
  syntax:
    content: protected TargetException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "用于序列化或反序列化对象数据。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "源和目标对象。"
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "初始化的新实例<xref href=&quot;System.Reflection.TargetException&quot;></xref>使用指定的错误消息和对导致此异常的内部异常的引用的类。"
  remarks: "前一个异常的直接结果应包含中的前一个异常的引用引发的异常，<xref:System.Exception.InnerException%2A>属性。</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>属性返回相同的值传递到构造函数中，或`null`如果<xref:System.Exception.InnerException%2A>属性不会提供给构造函数的内部异常值。</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       下表显示<xref:System.Reflection.TargetException>.</xref:System.Reflection.TargetException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|内部异常引用。 |  |<xref:System.Exception.Message%2A>|错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "解释异常原因的错误消息。"
    - id: inner
      type: System.Exception
      description: "导致当前异常的异常。 如果`inner`参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>中, 引发当前异常<xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;></xref>处理内部异常的块。"
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ApplicationException
  isExternal: false
  name: System.ApplicationException
- uid: System.Reflection.TargetException.#ctor
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
- uid: System.Reflection.TargetException.#ctor(System.String)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Reflection.TargetException.#ctor*
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException
  nameWithType: TargetException.TargetException
