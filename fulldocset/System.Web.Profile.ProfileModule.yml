### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileModule
  id: ProfileModule
  children:
  - System.Web.Profile.ProfileModule.#ctor
  - System.Web.Profile.ProfileModule.Dispose
  - System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  - System.Web.Profile.ProfileModule.MigrateAnonymous
  - System.Web.Profile.ProfileModule.Personalize
  - System.Web.Profile.ProfileModule.ProfileAutoSaving
  langs:
  - csharp
  name: ProfileModule
  nameWithType: ProfileModule
  fullName: System.Web.Profile.ProfileModule
  type: Class
  summary: "管理用户配置文件和配置文件事件的创建。 此类不能被继承。"
  remarks: "启用用户配置文件后，ASP.NET 将使用 ProfileModule 创建用户配置文件并将其存储在<xref:System.Web.HttpContext.Profile%2A>当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>属性</xref:System.Web.HttpContext.Profile%2A>       ProfileModule 公开可以处理在你的应用程序中配置身份验证的以下事件:-<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件，若要迁移到经过身份验证的配置文件时匿名用户日志英寸的匿名配置文件从配置文件设置</xref:System.Web.Profile.ProfileModule.MigrateAnonymous>      -<xref:System.Web.Profile.ProfileModule.Personalize>事件，以自定义用户配置文件的创建方式。</xref:System.Web.Profile.ProfileModule.Personalize>      -<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件，来控制时的用户配置文件的保存方式<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性设置为`true`。</xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> </xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>       有关启用的用户配置文件的信息，请参阅[配置文件元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)。"
  example:
  - "The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"AspNetSqlProvider\">  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"CityAndState\" allowAnonymous=\"true\" />  \n        <add name=\"StockSymbols\" type=\"System.Collections.ArrayList\" allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event included in the Global.asax file for an ASP.NET application. The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event copies profile property values from the anonymous profile to the profile for the current user.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_13_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/t-system.web.profile.pro_13_1.asax)]"
  syntax:
    content: 'public sealed class ProfileModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: ProfileModule()
  nameWithType: ProfileModule.ProfileModule()
  fullName: System.Web.Profile.ProfileModule.ProfileModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "初始化的新实例<xref href=&quot;System.Web.Profile.ProfileModule&quot;></xref>类。"
  remarks: "此构造函数不应从应用程序代码中调用。       <xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>调用<xref:System.Web.Profile.ProfileModule>构造函数来创建<xref:System.Web.Profile.ProfileModule>应用程序。</xref:System.Web.Profile.ProfileModule> </xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> <xref:System.Web.Profile.ProfileModule>应用程序配置中指定。</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public ProfileModule ();
    parameters: []
  overload: System.Web.Profile.ProfileModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Dispose
  id: Dispose
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: ProfileModule.Dispose()
  fullName: System.Web.Profile.ProfileModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "释放使用的所有资源<xref href=&quot;System.Web.Profile.ProfileModule&quot;> </xref>。"
  remarks: "此方法不应从应用程序代码中调用。       <xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>创建并初始化<xref:System.Web.Profile.ProfileModule>应用程序和释放的对象时调用的 Dispose 方法。</xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> <xref:System.Web.Profile.ProfileModule>应用程序配置中指定。</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Profile.ProfileModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: ProfileModule.Init(HttpApplication)
  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "调用初始化的代码时<xref href=&quot;System.Web.Profile.ProfileModule&quot;></xref>创建对象。"
  remarks: "此方法不应从应用程序代码中调用。       <xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>调用 Init 方法，在创建时<xref:System.Web.Profile.ProfileModule>应用程序。</xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> <xref:System.Web.Profile.ProfileModule>应用程序配置中指定。</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "当前应用程序。"
  overload: System.Web.Profile.ProfileModule.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.MigrateAnonymous
  id: MigrateAnonymous
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: MigrateAnonymous
  nameWithType: ProfileModule.MigrateAnonymous
  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "当在配置文件的匿名用户登录时出现。"
  remarks: "你可以访问的 MigrateAnonymous 事件<xref:System.Web.Profile.ProfileModule>通过使用 ASP.NET 应用程序的 Global.asax 文件中类`Profile_MigrateAnonymous`全局事件，如本主题的示例中所示。</xref:System.Web.Profile.ProfileModule>       MigrateAnonymous 事件可用于将配置文件属性值从匿名配置文件复制到经过身份验证配置文件，当以匿名方式使用你的应用程序的用户登录时。       ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，继承<xref:System.Web.Profile.ProfileBase>类。</xref:System.Web.Profile.ProfileBase> 强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。 A`GetProfile`方法使你能够检索`ProfileCommon`对象基于用户名称。 你可以使用`GetProfile`要检索的匿名配置文件的属性值的当前、 经过身份验证配置文件的方法。 然后，匿名属性值可以复制到经过身份验证的用户的当前配置文件中。"
  example:
  - "The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"AspNetSqlProvider\">  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"CityAndState\" allowAnonymous=\"true\" />  \n        <add name=\"StockSymbols\" type=\"System.Collections.ArrayList\" allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the MigrateAnonymous event included in the Global.asax file for an ASP.NET application. The MigrateAnonymous event copies profile property values from the anonymous profile to the profile for the current user.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/e-system.web.profile.pro_0_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/e-system.web.profile.pro_0_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;
    return:
      type: System.Web.Profile.ProfileMigrateEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Personalize
  id: Personalize
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Personalize
  nameWithType: ProfileModule.Personalize
  fullName: System.Web.Profile.ProfileModule.Personalize
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "创建用户配置文件之前发生。"
  remarks: "个性化事件期间引发<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>事件。</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> 你可以访问的个性化事件<xref:System.Web.Profile.ProfileModule>ASP.NET 应用程序使用的 Global.asax 文件中类`Profile_Personalize`全局事件，如本主题的示例中所示。</xref:System.Web.Profile.ProfileModule>       个性化事件可用于指定自定义用户配置文件。 如果<xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>为指定的属性值<xref:System.Web.Profile.ProfileEventHandler>进行个性化设置事件的事件处理程序设置为一个值，不是`null`时进行个性化设置事件即结束，则<xref:System.Web.Profile.ProfileModule>将使用指定的值的<xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>属性<xref:System.Web.HttpContext.Profile%2A>的当前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>属性</xref:System.Web.HttpContext.Profile%2A>的值作为</xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName></xref:System.Web.Profile.ProfileModule></xref:System.Web.Profile.ProfileEventHandler></xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>"
  example:
  - "The following code example shows the Personalize event declared in the Global.asax file for an application. The event code loads a user profile for a user based on role membership.  \n  \n [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/visualbasic/e-system.web.profile.pro_1_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/csharp/e-system.web.profile.pro_1_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileEventHandler Personalize;
    return:
      type: System.Web.Profile.ProfileEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving
  id: ProfileAutoSaving
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: ProfileAutoSaving
  nameWithType: ProfileModule.ProfileAutoSaving
  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "如果启用自动配置文件保存在页执行结束时发生。"
  remarks: "ProfileAutoSaving 引发该事件在页执行末尾如果<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName>属性是`true`。</xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName> 你可以访问的 ProfileAutoSaving 事件<xref:System.Web.Profile.ProfileModule>ASP.NET 应用程序使用的 Global.asax 文件中类`Profile_ProfileAutoSaving`全局事件，如本主题的示例中所示。</xref:System.Web.Profile.ProfileModule>       <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName>方法检查<xref:System.Configuration.SettingsPropertyValue.IsDirty%2A>每个属性值<xref:System.Configuration.SettingsPropertyValue>中的用户配置文件，以确定属性是否组成基元类型、 字符串或<xref:System.DateTime>对象已更改。</xref:System.DateTime> </xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> </xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName> <xref:System.Configuration.SettingsBase.Save%2A>方法无法明确确定是否已更改的自定义类。</xref:System.Configuration.SettingsBase.Save%2A> 若要确定是否已更改自定义对象，然后请继续进行自动将保存已修改的对象或取消自动保存，如果任何对象进行了不修改，你可以使用 ProfileAutoSaving 事件。       若要取消保存操作的自动配置文件，请设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性`false`中 ProfileAutoSaving 事件中; 否则，设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性`true`。</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> </xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>       可能有多个订阅服务器到 ProfileAutoSaving 事件。 <xref:System.Web.Profile.ProfileModule>将使用最后一个值，<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性设置为。</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> </xref:System.Web.Profile.ProfileModule> 因此，建议显式设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>ProfileAutoSaving 事件中的属性是否要取消或继续进行自动保存，因为你可能需要覆盖以前的订户设置的值。</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>"
  example:
  - "The following code example shows the ProfileAutoSaving event included in the Global.asax file for an ASP.NET application.  \n  \n [!code-cs[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/csharp/e-system.web.profile.pro_2_1.asax)]\n [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/visualbasic/e-system.web.profile.pro_2_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;
    return:
      type: System.Web.Profile.ProfileAutoSaveEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Profile.ProfileModule.#ctor
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileModule()
  nameWithType: ProfileModule.ProfileModule()
  fullName: System.Web.Profile.ProfileModule.ProfileModule()
- uid: System.Web.Profile.ProfileModule.Dispose
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Dispose()
  nameWithType: ProfileModule.Dispose()
  fullName: System.Web.Profile.ProfileModule.Dispose()
- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: ProfileModule.Init(HttpApplication)
  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Profile.ProfileModule.MigrateAnonymous
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: MigrateAnonymous
  nameWithType: ProfileModule.MigrateAnonymous
  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous
- uid: System.Web.Profile.ProfileMigrateEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileMigrateEventHandler
  nameWithType: ProfileMigrateEventHandler
  fullName: System.Web.Profile.ProfileMigrateEventHandler
- uid: System.Web.Profile.ProfileModule.Personalize
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Personalize
  nameWithType: ProfileModule.Personalize
  fullName: System.Web.Profile.ProfileModule.Personalize
- uid: System.Web.Profile.ProfileEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileEventHandler
  nameWithType: ProfileEventHandler
  fullName: System.Web.Profile.ProfileEventHandler
- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileAutoSaving
  nameWithType: ProfileModule.ProfileAutoSaving
  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving
- uid: System.Web.Profile.ProfileAutoSaveEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAutoSaveEventHandler
  nameWithType: ProfileAutoSaveEventHandler
  fullName: System.Web.Profile.ProfileAutoSaveEventHandler
- uid: System.Web.Profile.ProfileModule.#ctor*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileModule
  nameWithType: ProfileModule.ProfileModule
- uid: System.Web.Profile.ProfileModule.Dispose*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Dispose
  nameWithType: ProfileModule.Dispose
- uid: System.Web.Profile.ProfileModule.Init*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Init
  nameWithType: ProfileModule.Init
