### YamlMime:ManagedReference
items:
- uid: System.GenericUriParser
  id: GenericUriParser
  children:
  - System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  langs:
  - csharp
  name: GenericUriParser
  nameWithType: GenericUriParser
  fullName: System.GenericUriParser
  type: Class
  summary: "可自定义解析器对分层的 URI。"
  remarks: "如果你想要创建一个分析器基于已知的方案，请使用<xref:System.HttpStyleUriParser>， <xref:System.FtpStyleUriParser>， <xref:System.GopherStyleUriParser>， <xref:System.LdapStyleUriParser>，或<xref:System.NewsStyleUriParser>。</xref:System.NewsStyleUriParser> </xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FtpStyleUriParser> </xref:System.HttpStyleUriParser>       在创建可自定义的分析器，通过传递中提供的值的按位组合指定分析器的行为<xref:System.GenericUriParserOptions?displayProperty=fullName>GenericUriParser 构造函数的枚举。</xref:System.GenericUriParserOptions?displayProperty=fullName>       现有<xref:System.Uri?displayProperty=fullName>类已进行了扩展，以提供对国际资源标识符 (IRI) 和国际化域名 (IDN) 的支持。</xref:System.Uri?displayProperty=fullName> 除非它们具体地说就是启用 IRI，当前用户看不到从.NET Framework 2.0 行为进行任何更改。 这可确保与以前版本的.NET Framework 的应用程序兼容性。       从 GenericUriParser 派生的所有分析器不会都获得 IRI 和 IDN 支持默认情况下。 <xref:System.GenericUriParserOptions>选项不包括 IRI 和 IDN 支持。</xref:System.GenericUriParserOptions> 两个新值添加到<xref:System.GenericUriParserOptions?displayProperty=fullName>枚举，以指示自定义的解析器是否支持 IRI 和 IDN。</xref:System.GenericUriParserOptions?displayProperty=fullName>       有关详细信息 IRI 和 IDN 支持，请参阅<xref:System.Uri?displayProperty=fullName>类</xref:System.Uri?displayProperty=fullName>的备注部分"
  syntax:
    content: 'public class GenericUriParser : UriParser'
  inheritance:
  - System.Object
  - System.UriParser
  implements: []
  inheritedMembers:
  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  - System.UriParser.IsBaseOf(System.Uri,System.Uri)
  - System.UriParser.IsKnownScheme(System.String)
  - System.UriParser.IsWellFormedOriginalString(System.Uri)
  - System.UriParser.OnNewUri
  - System.UriParser.OnRegister(System.String,System.Int32)
  - System.UriParser.Register(System.UriParser,System.String,System.Int32)
  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  platform:
  - net462
- uid: System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  id: '#ctor(System.GenericUriParserOptions)'
  parent: System.GenericUriParser
  langs:
  - csharp
  name: GenericUriParser(GenericUriParserOptions)
  nameWithType: GenericUriParser.GenericUriParser(GenericUriParserOptions)
  fullName: System.GenericUriParser.GenericUriParser(GenericUriParserOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: "为层次结构的 URI 创建一个可自定义的分析器。"
  remarks: "使用此构造函数的自变量作为<xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>如果你想要创建一个分析器基于已知的方案，请使用<xref:System.HttpStyleUriParser>， <xref:System.FtpStyleUriParser>， <xref:System.GopherStyleUriParser>， <xref:System.LdapStyleUriParser>，或<xref:System.NewsStyleUriParser>。</xref:System.NewsStyleUriParser> </xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FtpStyleUriParser> </xref:System.HttpStyleUriParser> </xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>       在创建可自定义的分析器，通过传递中提供的值的按位组合指定分析器的行为<xref:System.GenericUriParserOptions?displayProperty=fullName>枚举<xref:System.GenericUriParser>构造函数。</xref:System.GenericUriParser> </xref:System.GenericUriParserOptions?displayProperty=fullName>       现有<xref:System.Uri?displayProperty=fullName>类已进行了扩展，以提供对国际资源标识符 (IRI) 和国际化域名 (IDN) 的支持。</xref:System.Uri?displayProperty=fullName> 除非它们具体地说就是启用 IRI，当前用户看不到从.NET Framework 2.0 行为进行任何更改。 这可确保与以前版本的.NET Framework 的应用程序兼容性。       所有分析器都派生自<xref:System.GenericUriParser>不会默认情况下获得 IRI 和 IDN 支持。</xref:System.GenericUriParser> <xref:System.GenericUriParserOptions>选项不包括 IRI 和 IDN 支持。</xref:System.GenericUriParserOptions> 两个新值添加到<xref:System.GenericUriParserOptions?displayProperty=fullName>枚举，以指示自定义的解析器是否支持 IRI 和 IDN。</xref:System.GenericUriParserOptions?displayProperty=fullName>       <xref:System.GenericUriParserOptions>类型指示分析器支持 RFC 3987 中指定国际资源标识符 (IRI) 分析规则。</xref:System.GenericUriParserOptions> 是否使用 IRI 所述配置值。       <xref:System.GenericUriParserOptions>类型指示分析器支持国际化域名 (IDN) 分析 (IDN) 的主机名。</xref:System.GenericUriParserOptions> 是否使用 IDN 所述配置值。       用于<xref:System.Configuration.IdnElement?displayProperty=fullName>由<xref:System.Configuration.IriParsingElement?displayProperty=fullName>配置设置控制在<xref:System.Uri?displayProperty=fullName>类</xref:System.Uri?displayProperty=fullName>中处理的 IRI</xref:System.Configuration.IriParsingElement?displayProperty=fullName>间接控制</xref:System.Configuration.IdnElement?displayProperty=fullName>的配置设置 必须为 IDN 处理为可能启用 IRI 处理。 如果 IRI 处理处于禁用状态，则 IDN 处理将设置为其中的.NET Framework 2.0 行为用于实现兼容性和不使用 IDN 名称的默认设置。       国际化域名 (IDN) 属性仅控制 IDN 处理。 默认情况下执行所有其他 IRI 处理 （例如字符规范化）。       有关详细信息 IRI 和 IDN 支持，请参阅<xref:System.Uri?displayProperty=fullName>类</xref:System.Uri?displayProperty=fullName>的备注部分"
  syntax:
    content: public GenericUriParser (GenericUriParserOptions options);
    parameters:
    - id: options
      type: System.GenericUriParserOptions
      description: "指定此选项<xref href=&quot;System.GenericUriParser&quot;> </xref>。"
  overload: System.GenericUriParser.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.UriParser
  isExternal: false
  name: System.UriParser
- uid: System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  parent: System.GenericUriParser
  isExternal: false
  name: GenericUriParser(GenericUriParserOptions)
  nameWithType: GenericUriParser.GenericUriParser(GenericUriParserOptions)
  fullName: System.GenericUriParser.GenericUriParser(GenericUriParserOptions)
- uid: System.GenericUriParserOptions
  parent: System
  isExternal: false
  name: GenericUriParserOptions
  nameWithType: GenericUriParserOptions
  fullName: System.GenericUriParserOptions
- uid: System.GenericUriParser.#ctor*
  parent: System.GenericUriParser
  isExternal: false
  name: GenericUriParser
  nameWithType: GenericUriParser.GenericUriParser
