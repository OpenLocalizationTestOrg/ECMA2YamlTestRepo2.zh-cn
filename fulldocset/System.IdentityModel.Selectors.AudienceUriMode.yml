### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.AudienceUriMode
  id: AudienceUriMode
  children:
  - System.IdentityModel.Selectors.AudienceUriMode.Always
  - System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly
  - System.IdentityModel.Selectors.AudienceUriMode.Never
  langs:
  - csharp
  name: AudienceUriMode
  nameWithType: AudienceUriMode
  fullName: System.IdentityModel.Selectors.AudienceUriMode
  type: Enum
  summary: "指定是否<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全令牌的<xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref>应验证。"
  remarks: "在利用颁发安全令牌服务 (STS) 的联合应用程序中使用 AudienceUriMode 属性<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全令牌。</xref:System.IdentityModel.Tokens.SamlSecurityToken> 当 STS 颁发安全令牌时，它可以指定为其安全令牌的目标通过添加 Web 服务的 URI<xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition>到安全令牌。</xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> 这样<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>接收方的 Web 服务，以验证颁发的安全令牌适用于此 Web 服务通过指定应采用以下方式执行此检查:-设置<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A>属性设置为始终或 BearerKeyOnly。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>      -通过将添加到 Uri 指定的有效 Uri 集<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>集合。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>       （可选） 重写<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>方法，以指定要用于允许的 URI 的验证算法。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>"
  syntax:
    content: public enum AudienceUriMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IdentityModel.Selectors.AudienceUriMode.Always
  id: Always
  parent: System.IdentityModel.Selectors.AudienceUriMode
  langs:
  - csharp
  name: Always
  nameWithType: AudienceUriMode.Always
  fullName: System.IdentityModel.Selectors.AudienceUriMode.Always
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "始终。"
  syntax:
    content: Always
    return:
      type: System.IdentityModel.Selectors.AudienceUriMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly
  id: BearerKeyOnly
  parent: System.IdentityModel.Selectors.AudienceUriMode
  langs:
  - csharp
  name: BearerKeyOnly
  nameWithType: AudienceUriMode.BearerKeyOnly
  fullName: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "仅当安全令牌的密钥为类型为 BearerKey 并且没有安全令牌中拥有密钥没有证明。"
  syntax:
    content: BearerKeyOnly
    return:
      type: System.IdentityModel.Selectors.AudienceUriMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.AudienceUriMode.Never
  id: Never
  parent: System.IdentityModel.Selectors.AudienceUriMode
  langs:
  - csharp
  name: Never
  nameWithType: AudienceUriMode.Never
  fullName: System.IdentityModel.Selectors.AudienceUriMode.Never
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "永远不会。"
  syntax:
    content: Never
    return:
      type: System.IdentityModel.Selectors.AudienceUriMode
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IdentityModel.Selectors.AudienceUriMode.Always
  parent: System.IdentityModel.Selectors.AudienceUriMode
  isExternal: false
  name: Always
  nameWithType: AudienceUriMode.Always
  fullName: System.IdentityModel.Selectors.AudienceUriMode.Always
- uid: System.IdentityModel.Selectors.AudienceUriMode
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: AudienceUriMode
  nameWithType: AudienceUriMode
  fullName: System.IdentityModel.Selectors.AudienceUriMode
- uid: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly
  parent: System.IdentityModel.Selectors.AudienceUriMode
  isExternal: false
  name: BearerKeyOnly
  nameWithType: AudienceUriMode.BearerKeyOnly
  fullName: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly
- uid: System.IdentityModel.Selectors.AudienceUriMode.Never
  parent: System.IdentityModel.Selectors.AudienceUriMode
  isExternal: false
  name: Never
  nameWithType: AudienceUriMode.Never
  fullName: System.IdentityModel.Selectors.AudienceUriMode.Never
