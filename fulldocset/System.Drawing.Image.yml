### YamlMime:ManagedReference
items:
- uid: System.Drawing.Image
  id: Image
  children:
  - System.Drawing.Image.Clone
  - System.Drawing.Image.Dispose
  - System.Drawing.Image.Dispose(System.Boolean)
  - System.Drawing.Image.Finalize
  - System.Drawing.Image.Flags
  - System.Drawing.Image.FrameDimensionsList
  - System.Drawing.Image.FromFile(System.String)
  - System.Drawing.Image.FromFile(System.String,System.Boolean)
  - System.Drawing.Image.FromHbitmap(System.IntPtr)
  - System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  - System.Drawing.Image.FromStream(System.IO.Stream)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  - System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  - System.Drawing.Image.GetEncoderParameterList(System.Guid)
  - System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  - System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.GetPropertyItem(System.Int32)
  - System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  - System.Drawing.Image.Height
  - System.Drawing.Image.HorizontalResolution
  - System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.Palette
  - System.Drawing.Image.PhysicalDimension
  - System.Drawing.Image.PixelFormat
  - System.Drawing.Image.PropertyIdList
  - System.Drawing.Image.PropertyItems
  - System.Drawing.Image.RawFormat
  - System.Drawing.Image.RemovePropertyItem(System.Int32)
  - System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  - System.Drawing.Image.Save(System.String)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  - System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  - System.Drawing.Image.Size
  - System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Image.Tag
  - System.Drawing.Image.VerticalResolution
  - System.Drawing.Image.Width
  langs:
  - csharp
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
  type: Class
  summary: "一个抽象基类，它提供的功能<xref href=&quot;System.Drawing.Bitmap&quot;></xref>和<xref href=&quot;System.Drawing.Imaging.Metafile&quot;></xref>继承类。"
  remarks: "若要在 Windows 窗体上绘制图像，应使用一种<xref:System.Drawing.Graphics.DrawImage%2A>方法。</xref:System.Drawing.Graphics.DrawImage%2A>"
  example:
  - "The following code example is designed for use with Windows Forms. It is a handler for the <xref:System.Windows.Forms.Control.Paint> event. A <xref:System.Drawing.Graphics> object is passed to the event and is used to draw the image on the form. The code performs the following actions:  \n  \n-   Creates an image from a file named SampImag.jpg. This file must be located in the same folder as the application executable file.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image on the form.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/cpp/t-system.drawing.image_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/csharp/t-system.drawing.image_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/visualbasic/t-system.drawing.image_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.ImageEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.ImmutableObject(true)]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Image.Clone
  id: Clone
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Clone()
  nameWithType: Image.Clone()
  fullName: System.Drawing.Image.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建此的精确副本<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>此方法创建的、 强制转换为对象。"
  overload: System.Drawing.Image.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Dispose
  id: Dispose
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: System.Drawing.Image.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "释放所有资源由此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "调用的 Dispose 方法允许使用的资源<xref:System.Drawing.Image>可以重新分配用于其他目的。</xref:System.Drawing.Image>       在完成使用<xref:System.Drawing.Image>.</xref:System.Drawing.Image>时调用的 Dispose Dispose 方法离开<xref:System.Drawing.Image>中不可用状态。</xref:System.Drawing.Image> 调用 Dispose 后，必须释放对所有引用<xref:System.Drawing.Image>以便垃圾回收器才能回收的内存，<xref:System.Drawing.Image>占用。</xref:System.Drawing.Image> </xref:System.Drawing.Image> 有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 始终调用释放在发布到<xref:System.Drawing.Image>。</xref:System.Drawing.Image>最后一个引用之前 否则，它所使用的资源之前，不会释放垃圾回收器调用<xref:System.Drawing.Image>对象的`Finalize`方法。</xref:System.Drawing.Image>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: System.Drawing.Image.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "释放由非托管的资源<xref href=&quot;System.Drawing.Image&quot;> </xref> ，还可以释放托管的资源。"
  remarks: >-
    > [!NOTE]

    >  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Finalize
  id: Finalize
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: System.Drawing.Image.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "允许该对象尝试释放资源并在被垃圾回收回收之前执行其他清理操作。"
  syntax:
    content: ~Image ();
    parameters: []
  overload: System.Drawing.Image.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Flags
  id: Flags
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Flags
  nameWithType: Image.Flags
  fullName: System.Drawing.Image.Flags
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取属性的像素数据的这标志<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "此方法返回的整数值将对应于的总和<xref:System.Drawing.Imaging.ImageFlags>下, 表中所述。</xref:System.Drawing.Imaging.ImageFlags>      |ImageFlag 值 |表示整数 |  |---------------------|----------------------------|  |`ImageFlagsNone`|0|  |`ImageFlagsScalable`|1|  |`ImageFlagsHasAlpha`|2|  |`ImageFlagsHasTranslucent`|4|  |`ImageFlagsPartiallyScalable`|8|  |`ImageFlagsColorSpaceRGB`|16|  |`ImageFlagsColorSpaceCMYK`|32|  |`ImageFlagsColorSpaceGRAY`|64|  |`ImageFlagsColorSpaceYCBCR`|128|  |`ImageFlagsColorSpaceYCCK`|256|  |`ImageFlagsHasRealDPI`|4096|  |`ImageFlagsHasRealPixelSize`|8192|  |`ImageFlagsReadOnly`| 65536 |  |`ImageFlagsCaching`| 131072 |      例如，如果映像标志属性返回 77960，<xref:System.Drawing.Imaging.ImageFlags>图像很<xref:System.Drawing.Imaging.ImageFlags>， <xref:System.Drawing.Imaging.ImageFlags>， <xref:System.Drawing.Imaging.ImageFlags>， <xref:System.Drawing.Imaging.ImageFlags>，和<xref:System.Drawing.Imaging.ImageFlags>。</xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags>"
  syntax:
    content: public int Flags { get; }
    return:
      type: System.Int32
      description: "表示的按位组合的整数<xref href=&quot;System.Drawing.Imaging.ImageFlags&quot;></xref>此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FrameDimensionsList
  id: FrameDimensionsList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: System.Drawing.Image.FrameDimensionsList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取用于表示在此帧的维度的 Guid 数组<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "此方法返回采取两种样式的多帧图像的相关信息︰ 多个页面和多个解决方法。       多页映像是包含多个映像的映像。 每页包含单个映像 （或段）。 连续生成动画的序列，如动态的.gif 文件通常显示这些页 （或映像或帧）。       多个高分辨率图像是映像的包含多个副本在不同的解决方法的映像。 这是通常由使用 MIP 映射其中显示的图像大小将确定用于绘制图像的分辨率。 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]可以支持任意数目的页 （或映像，或者帧），以及任意数量的解决方法。 定义的维度是<xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension>的属性"
  syntax:
    content: public Guid[] FrameDimensionsList { get; }
    return:
      type: System.Guid[]
      description: "指定在此帧的维度的 Guid 数组<xref href=&quot;System.Drawing.Image&quot;></xref>从最高到最低有效有效。"
  overload: System.Drawing.Image.FrameDimensionsList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromFile(System.String)
  id: FromFile(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: System.Drawing.Image.FromFile(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建<xref href=&quot;System.Drawing.Image&quot;></xref>从指定的文件。"
  remarks: "托管 GDI + 具有内置编码器和解码器支持以下文件类型:-BMP-GIF-JPEG-PNG-TIFF 文件将保持锁定状态，直到<xref:System.Drawing.Image>已释放。</xref:System.Drawing.Image>       如果该文件没有有效的图像格式或如果[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]不支持像素格式的文件，此方法将引发<xref:System.OutOfMemoryException>异常。</xref:System.OutOfMemoryException>      1> [!NOTE]&1;><xref:System.Drawing.Image>类在位图中不支持 alpha 透明度。</xref:System.Drawing.Image> 若要启用 alpha 透明度，且每个像素的 32 位使用 PNG 图像。"
  example:
  - "The following code example demonstrates how to use the FromFile<xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.f_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.f_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.f_0_1.vb)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "包含从中创建文件的名称的字符串<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>此方法创建。"
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "该文件没有有效的图像格式。       -或-[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]不支持的文件的像素格式。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件不存在。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>is a <xref:System.Uri>."
  platform:
  - net462
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  id: FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String,Boolean)
  nameWithType: Image.FromFile(String,Boolean)
  fullName: System.Drawing.Image.FromFile(String,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建<xref href=&quot;System.Drawing.Image&quot;></xref>从指定的文件使用嵌入的颜色管理信息在该文件中。"
  remarks: "托管 GDI + 具有内置编码器和解码器支持以下文件类型:-BMP-GIF-JPEG-PNG-TIFF 如果文件没有有效的图像格式或[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]不支持像素格式的文件，此方法将引发<xref:System.OutOfMemoryException>异常。</xref:System.OutOfMemoryException>       该文件将保持锁定状态，直到<xref:System.Drawing.Image>已释放。</xref:System.Drawing.Image>       `useEmbeddedColorManagement`参数指定是否新<xref:System.Drawing.Image>应用颜色校正根据嵌入图像文件中的颜色管理信息。</xref:System.Drawing.Image> 国际色彩联合会 (ICC) 配置文件、 伽玛值和色度信息可以包括嵌入的信息。      1> [!NOTE]&1;><xref:System.Drawing.Image>类在位图中不支持 alpha 透明度。</xref:System.Drawing.Image> 若要启用 alpha 透明度，且每个像素的 32 位使用 PNG 图像。"
  example:
  - "The following code example demonstrates how to obtain a new bitmap using the FromFile method. It also demonstrates a <xref:System.Drawing.TextureBrush>.  \n  \n This example is designed to be used with Windows Forms. Create a form containing a button named `Button2`. Paste the code into the form and associate the `Button2_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#2](~/add/codesnippet/csharp/m-system.drawing.image.f_1_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#2](~/add/codesnippet/cpp/m-system.drawing.image.f_1_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#2](~/add/codesnippet/visualbasic/m-system.drawing.image.f_1_1.vb)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);
    parameters:
    - id: filename
      type: System.String
      description: "包含从中创建文件的名称的字符串<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "设置为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>使用颜色管理信息嵌入图像文件中; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>此方法创建。"
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "该文件没有有效的图像格式。       -或-[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]不支持的文件的像素格式。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的文件不存在。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>is a <xref:System.Uri>."
  platform:
  - net462
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  id: FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建<xref href=&quot;System.Drawing.Bitmap&quot;></xref>从 GDI 位图的句柄。"
  remarks: "FromHbitmap 方法创建的副本[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]位图; 因此，你可以释放传入[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]位图使用[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]`DeleteObject`方法创建新的<xref:System.Drawing.Image>。</xref:System.Drawing.Image>后立即"
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: "[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]从中创建的位图句柄<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>。"
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>此方法创建。"
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  id: FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr,IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr,IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建<xref href=&quot;System.Drawing.Bitmap&quot;></xref>从 GDI 位图和 GDI 调色板的句柄的句柄。"
  remarks: "FromHbitmap 方法创建的副本[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]位图; 因此，你可以释放传入[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]位图使用[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]`DeleteObject`方法创建新的<xref:System.Drawing.Image>。</xref:System.Drawing.Image>后立即"
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: "[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]从中创建的位图句柄<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>。"
    - id: hpalette
      type: System.IntPtr
      description: "句柄[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]用于定义位图颜色，如果在指定位图的调色板`hBitmap`参数不是独立于设备的位图 (DIB)。"
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>此方法创建。"
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  id: FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: System.Drawing.Image.FromStream(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建<xref href=&quot;System.Drawing.Image&quot;></xref>从指定的数据流。"
  remarks: "你必须保持流打开<xref:System.Drawing.Image>.</xref:System.Drawing.Image>的生存期       流是重置为零，如果用相同的流连续调用此方法。      1> [!NOTE]&1;><xref:System.Drawing.Image>类在位图中不支持 alpha 透明度。</xref:System.Drawing.Image> 若要启用 alpha 透明度，且每个像素的 32 位使用 PNG 图像。"
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>此包含数据<xref href=&quot;System.Drawing.Image&quot;> </xref>。</xref:System.IO.Stream>"
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>此方法创建。"
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "流不是有效的图像格式- <code> stream </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建<xref href=&quot;System.Drawing.Image&quot;></xref>从指定的数据流，（可选） 使用嵌入的颜色管理信息在该流中。"
  remarks: "你必须保持流打开<xref:System.Drawing.Image>.</xref:System.Drawing.Image>的生存期       `useEmbeddedColorManagement`参数指定是否新<xref:System.Drawing.Image>应用颜色校正根据数据流中嵌入的颜色管理信息。</xref:System.Drawing.Image> 国际色彩联合会 (ICC) 配置文件、 伽玛值和色度信息可以包括嵌入的信息。       流是重置为零，如果用相同的流连续调用此方法。      1> [!NOTE]&1;><xref:System.Drawing.Image>类在位图中不支持 alpha 透明度。</xref:System.Drawing.Image> 若要启用 alpha 透明度，且每个像素的 32 位使用 PNG 图像。"
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>此包含数据<xref href=&quot;System.Drawing.Image&quot;> </xref>。</xref:System.IO.Stream>"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用数据流; 中嵌入的颜色管理信息否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>此方法创建。"
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "流不是有效的图像格式- <code> stream </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream,Boolean,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "创建<xref href=&quot;System.Drawing.Image&quot;></xref>从指定的数据流，（可选） 使用嵌入的颜色管理信息和验证图像数据。"
  remarks: "`useEmbeddedColorManagement`参数指定是否新<xref:System.Drawing.Image>应用颜色校正根据数据流中嵌入的颜色管理信息。</xref:System.Drawing.Image> 国际色彩联合会 (ICC) 配置文件、 伽玛值和色度信息可以包括嵌入的信息。      1> [!NOTE]&1;><xref:System.Drawing.Image>类在位图中不支持 alpha 透明度。</xref:System.Drawing.Image> 若要启用 alpha 透明度，且每个像素的 32 位使用 PNG 图像。"
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>此包含数据<xref href=&quot;System.Drawing.Image&quot;> </xref>。</xref:System.IO.Stream>"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用数据流; 中嵌入的颜色管理信息否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: validateImageData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要验证的映像数据;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>此方法创建。"
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "流不是有效的图像格式。"
  platform:
  - net462
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  id: GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: System.Drawing.Image.GetBounds(GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "以指定的单位获取图像的界限。"
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle, using the <xref:System.Drawing.GraphicsUnit> enumeration, and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/m-system.drawing.image.g_1_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/m-system.drawing.image.g_1_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/m-system.drawing.image.g_1_1.cpp)]"
  syntax:
    content: public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);
    parameters:
    - id: pageUnit
      type: System.Drawing.GraphicsUnit
      description: "之一<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>值，该值指示的边界的矩形的度量单位。"
    return:
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>表示的映像，以指定的单位的边界。"
  overload: System.Drawing.Image.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  id: GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: System.Drawing.Image.GetEncoderParameterList(Guid)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返回有关指定的图像编码器所支持的参数信息。"
  syntax:
    content: public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);
    parameters:
    - id: encoder
      type: System.Guid
      description: "指定的图像编码器的 GUID。"
    return:
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref>包含的数组<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>对象。 每个<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>包含有关指定的图像编码器所支持的参数之一的信息。"
  overload: System.Drawing.Image.GetEncoderParameterList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  id: GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: System.Drawing.Image.GetFrameCount(FrameDimension)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返回指定维度的帧数。"
  remarks: "此方法返回采取两种样式的多帧图像的相关信息︰ 多个页面和多个解决方法。       多页映像是包含多个映像的映像。 每页包含单个映像 （或段）。 连续生成动画的序列，如动态的.gif 文件通常显示这些页 （或映像或帧）。       多个高分辨率图像是映像的包含多个副本在不同的解决方法的映像。 这是通常由使用 MIP 映射其中显示的图像大小将确定用于绘制图像的分辨率。 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]可以支持任意数目的页 （或映像，或者帧），以及任意数量的解决方法。 定义的维度是<xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension>的属性"
  syntax:
    content: public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: "A <xref href=&quot;System.Drawing.Imaging.FrameDimension&quot;> </xref>指定维度类型标识。"
    return:
      type: System.Int32
      description: "指定维中的帧数。"
  overload: System.Drawing.Image.GetFrameCount*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  id: GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: System.Drawing.Image.GetPixelFormatSize(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返回的颜色深度中的指定的像素格式，它的每像素位数。"
  syntax:
    content: public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>成员，用于指定要查找其大小的格式。"
    return:
      type: System.Int32
      description: "指定的像素格式的颜色深度。"
  overload: System.Drawing.Image.GetPixelFormatSize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  id: GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: System.Drawing.Image.GetPropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取指定的属性项从此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "属性项 Id 和的详细信息的链接的列表，请参阅<xref:System.Drawing.Imaging.PropertyItem.Id%2A>。</xref:System.Drawing.Imaging.PropertyItem.Id%2A>       因为很难设置属性项<xref:System.Drawing.Imaging.PropertyItem>类具有没有公共构造函数。</xref:System.Drawing.Imaging.PropertyItem> 若要解决此限制的一种方法是获取<xref:System.Drawing.Imaging.PropertyItem>通过检索<xref:System.Drawing.Image.PropertyItems%2A>属性值或调用的 GetPropertyItem 方法<xref:System.Drawing.Image>已具有属性项。</xref:System.Drawing.Image> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> 然后，可以将设置<xref:System.Drawing.Imaging.PropertyItem>和将其传递到<xref:System.Drawing.Image.SetPropertyItem%2A>.</xref:System.Drawing.Image.SetPropertyItem%2A></xref:System.Drawing.Imaging.PropertyItem>字段"
  example:
  - "The following code example demonstrates how to use the GetPropertyItem and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example calls GetPropertyItem passing an ID value. For a list of ID values see, <xref:System.Drawing.Imaging.PropertyItem.Id%2A>. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.g_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.g_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.g_0_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: "要获取的属性项的 ID。"
    return:
      type: System.Drawing.Imaging.PropertyItem
      description: "<xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref>此方法中获取。"
  overload: System.Drawing.Image.GetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "此图像的图像格式不支持属性项。"
  platform:
  - net462
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  id: GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  fullName: System.Drawing.Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);
    parameters:
    - id: thumbWidth
      type: System.Int32
      description: "要添加。"
    - id: thumbHeight
      type: System.Int32
      description: "要添加。"
    - id: callback
      type: System.Drawing.Image.GetThumbnailImageAbort
      description: "要添加。"
    - id: callbackData
      type: System.IntPtr
      description: "要添加。"
    return:
      type: System.Drawing.Image
      description: "要添加。"
  overload: System.Drawing.Image.GetThumbnailImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Height
  id: Height
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Height
  nameWithType: Image.Height
  fullName: System.Drawing.Image.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取的高度，以像素为单位，此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> and Height properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.h_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.h_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.h_1.vb)]"
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "高度，以像素为单位，此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.HorizontalResolution
  id: HorizontalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: System.Drawing.Image.HorizontalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取以每英寸的像素为单位的水平分辨率<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  syntax:
    content: public float HorizontalResolution { get; }
    return:
      type: System.Single
      description: "水平分辨率，以像素为单位，每英寸点数，此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.HorizontalResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsAlphaPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返回一个值，该值指示是否像素格式，此<xref href=&quot;System.Drawing.Image&quot;></xref>包含 alpha 信息。"
  syntax:
    content: public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>测试。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> pixfmt </code>包含 alpha 信息; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Image.IsAlphaPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsCanonicalPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返回一个值，该值指示像素格式是否为每个像素的 32 位。"
  remarks: "规范的像素格式，它指示一种像素格式的 32 位 / 像素。 此格式指定 24 位颜色深度和一个 8 位 alpha 通道。"
  syntax:
    content: public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>测试。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> pixfmt </code>规范; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Image.IsCanonicalPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsExtendedPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返回一个值，该值指示该像素格式是否为每个像素 64 位。"
  syntax:
    content: public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>枚举，以测试。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>pixfmt</code> is extended; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Image.IsExtendedPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Palette
  id: Palette
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Palette
  nameWithType: Image.Palette
  fullName: System.Drawing.Image.Palette
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取或设置用于此目的的颜色调色板<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "此属性返回<xref:System.Drawing.Imaging.ColorPalette>对象由此<xref:System.Drawing.Image>。</xref:System.Drawing.Image></xref:System.Drawing.Imaging.ColorPalette>的副本"
  syntax:
    content: public System.Drawing.Imaging.ColorPalette Palette { get; set; }
    return:
      type: System.Drawing.Imaging.ColorPalette
      description: "A <xref href=&quot;System.Drawing.Imaging.ColorPalette&quot;> </xref> ，它表示用于此目的的调色板<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.Palette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PhysicalDimension
  id: PhysicalDimension
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: System.Drawing.Image.PhysicalDimension
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取的宽度和高度的此映像。"
  remarks: "如果图像是一个位图，以像素为单位返回的宽度和高度。 如果图像，图元文件的宽度和高度返回以 0.01 毫米为单位。"
  syntax:
    content: public System.Drawing.SizeF PhysicalDimension { get; }
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref>结构，它表示的宽度和高度这<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.PhysicalDimension*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PixelFormat
  id: PixelFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: System.Drawing.Image.PixelFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取像素格式，此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the PixelFormat property.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.p_1_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.p_1_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.p_1_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PixelFormat PixelFormat { get; }
    return:
      type: System.Drawing.Imaging.PixelFormat
      description: "A <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>像素格式，它表示此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.PixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PropertyIdList
  id: PropertyIdList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: System.Drawing.Image.PropertyIdList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取存储在此属性项的 Id <xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "如果该图像没有属性项或图像格式不支持属性项，PropertyIdList 属性将返回一个空数组 （即，长度为零的数组）。"
  syntax:
    content: public int[] PropertyIdList { get; }
    return:
      type: System.Int32[]
      description: "属性 Id，一个用于此图像中存储每个属性项的数组。"
  overload: System.Drawing.Image.PropertyIdList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PropertyItems
  id: PropertyItems
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: System.Drawing.Image.PropertyItems
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取所有属性项 （片段的元数据） 存储在此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "如果该图像没有属性项或图像格式不支持属性项，PropertyItems 将返回一个空数组 （即，长度为零的数组）。"
  example:
  - "The following code example demonstrates how to read and display the metadata in an image file using the <xref:System.Drawing.Imaging.PropertyItem?displayProperty=fullName> class and the PropertyItems property.  \n  \n This example is designed to be used a Windows Form that imports the <xref:System.Drawing.Imaging?displayProperty=fullName> namespace. Paste the code into the form and change the path to `fakePhoto.jpg` to point to an image file on your system. Call the `ExtractMetaData` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#6](~/add/codesnippet/csharp/p-system.drawing.image.p_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#6](~/add/codesnippet/cpp/p-system.drawing.image.p_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#6](~/add/codesnippet/visualbasic/p-system.drawing.image.p_0_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }
    return:
      type: System.Drawing.Imaging.PropertyItem[]
      description: "数组<xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;></xref>对象、 一个用于每个项存储在映像中的属性。"
  overload: System.Drawing.Image.PropertyItems*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.RawFormat
  id: RawFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: System.Drawing.Image.RawFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取此文件格式<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  syntax:
    content: public System.Drawing.Imaging.ImageFormat RawFormat { get; }
    return:
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref> ，表示此文件格式<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.RawFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  id: RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: System.Drawing.Image.RemovePropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "从这中移除指定的属性项<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "因为很难设置属性项<xref:System.Drawing.Imaging.PropertyItem>类具有没有公共构造函数。</xref:System.Drawing.Imaging.PropertyItem> 若要解决此限制的一种方法是获取<xref:System.Drawing.Imaging.PropertyItem>通过检索<xref:System.Drawing.Image.PropertyItems%2A>属性值或调用<xref:System.Drawing.Image.GetPropertyItem%2A>方法<xref:System.Drawing.Image>已具有属性项。</xref:System.Drawing.Image> </xref:System.Drawing.Image.GetPropertyItem%2A> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> 然后，可以将设置<xref:System.Drawing.Imaging.PropertyItem>和将其传递到<xref:System.Drawing.Image.SetPropertyItem%2A>.</xref:System.Drawing.Image.SetPropertyItem%2A></xref:System.Drawing.Imaging.PropertyItem>字段"
  syntax:
    content: public void RemovePropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: "要删除的属性项的 ID。"
  overload: System.Drawing.Image.RemovePropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "映像不包含请求的属性项。       -或者-此图像的图像格式不支持属性项。"
  platform:
  - net462
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  id: RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: System.Drawing.Image.RotateFlip(RotateFlipType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "旋转、 翻转，或旋转和翻转<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "RotateFlip 方法将轮换顺时针旋转的映像。       如果你想要在图像上绘制，已旋转后，你应始终检索新的图形对象从映像，否则，将出现异常。"
  example:
  - "The following code example demonstrates how to call the RotateFlip method on an <xref:System.Drawing.Image> and the <xref:System.Drawing.RotateFlipType> enumeration.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.PictureBox> named `PictureBox1` and a button named `Button1`. Paste the code into a form, call `InitializeBitmap` from the form's constructor, and associate `Button1_Click` with the button's <xref:System.Windows.Forms.Control.Click> event. Ensure the file path to the bitmap is valid on your system.  \n  \n [!code-cs[System.Drawing.BitmapMembers#3](~/add/codesnippet/csharp/m-system.drawing.image.r_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#3](~/add/codesnippet/visualbasic/m-system.drawing.image.r_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#3](~/add/codesnippet/cpp/m-system.drawing.image.r_1.cpp)]"
  syntax:
    content: public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);
    parameters:
    - id: rotateFlipType
      type: System.Drawing.RotateFlipType
      description: "A <xref href=&quot;System.Drawing.RotateFlipType&quot;> </xref>指定旋转和反向地应用于映像的类型的成员。"
  overload: System.Drawing.Image.RotateFlip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String)
  id: Save(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: System.Drawing.Image.Save(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "这将保存<xref href=&quot;System.Drawing.Image&quot;></xref>写入指定的文件或流。"
  remarks: "如果编码器不存在的映像的文件格式，则使用可移植网络图形 (PNG) 编码器。 当你使用 Save 方法将一幅图像另存为一个 Windows 图元文件格式 (WMF) 或增强型图元文件格式 (EMF) 文件时，则会将生成的文件另存为可移植网络图形 (PNG) 文件。 出现此行为是因为[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]组件的[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]没有可用于将文件另存为.wmf 或.emf 文件的编码器。       将图像保存到同一个文件从构造不允许，并引发异常。"
  example:
  - "The following code example demonstrates how to call the Save method. This example is designed to be used with Windows Forms. Create a form that contains a button named `Button5`. Paste the code into the form, and associate the method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#5](~/add/codesnippet/csharp/m-system.drawing.image.s_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#5](~/add/codesnippet/cpp/m-system.drawing.image.s_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#5](~/add/codesnippet/visualbasic/m-system.drawing.image.s_0_1.vb)]"
  syntax:
    content: public void Save (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "包含要将此文件保存到文件的名称的字符串<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "映像已具有错误的图像格式保存。       -或者-映像已保存到从中创建它的相同文件。"
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream,ImageFormat)
  nameWithType: Image.Save(Stream,ImageFormat)
  fullName: System.Drawing.Image.Save(Stream,ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "将此图像保存到指定的流中指定的格式。"
  remarks: "应避免将图像保存到同一个流中用于构造。 这样可能会损坏流。       必须将图像保存到流中的零偏移量。 如果在保存映像之前中任何其他数据已写入到流，将损坏流中的图像数据。"
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>映像将保存于其中。</xref:System.IO.Stream>"
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref>该指定的格式保存的图像。"
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>format</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "包含错误的图像格式保存图像"
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  id: Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String,ImageFormat)
  nameWithType: Image.Save(String,ImageFormat)
  fullName: System.Drawing.Image.Save(String,ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "这将保存<xref href=&quot;System.Drawing.Image&quot;></xref>到指定的文件中指定的格式。"
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a bitmap from a type, and how to use the Save method. To run this example, paste the code into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event, and call the `ConstructFromResourceSaveAsGif` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>  \n  \n [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/cpp/m-system.drawing.image.s_1_1.cpp)]\n [!code-cs[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/csharp/m-system.drawing.image.s_1_1.cs)]\n [!code-vb[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/visualbasic/m-system.drawing.image.s_1_1.vb)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: filename
      type: System.String
      description: "包含要将此文件保存到文件的名称的字符串<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>or <code>format</code> is<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "映像已具有错误的图像格式保存。       -或者-映像已保存到从中创建它的相同文件。"
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "将此图像保存到指定的流，使用指定的编码器和图像编码器参数。"
  remarks: "不将图像保存到同一个用来构造该图像的流。 这样可能会损坏流。       必须将图像保存到流中的零偏移量。 如果在保存映像之前中任何其他数据已写入到流，将损坏流中的图像数据。"
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>映像将保存于其中。</xref:System.IO.Stream>"
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> ，它指定的图像编码器所使用参数。"
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "映像已具有错误的图像格式保存。"
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(String,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(String,ImageCodecInfo,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "这将保存<xref href=&quot;System.Drawing.Image&quot;></xref>到指定的文件，使用指定编码器和图像编码器参数。"
  remarks: "将图像保存到同一个文件从构造不允许，并引发异常。"
  example:
  - "The following example creates a <xref:System.Drawing.Bitmap> object from a BMP file. The code saves the bitmap to three JPEG files, each with a different quality level.  \n  \n [!code-cs[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/csharp/e093e484-33cc-46d5-936c-_1.cs)]\n [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/visualbasic/e093e484-33cc-46d5-936c-_1.vb)]\n [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/cpp/e093e484-33cc-46d5-936c-_1.cpp)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: filename
      type: System.String
      description: "包含要将此文件保存到文件的名称的字符串<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "An <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;></xref> to use for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>or <code>encoder</code> is<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "映像已具有错误的图像格式保存。       -或者-映像已保存到从中创建它的相同文件。"
  platform:
  - net462
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "将帧添加到文件或流中的以前调用指定<xref:System.Drawing.Image.Save*>方法。</xref:System.Drawing.Image.Save*> 使用此方法将多帧图像的选定的帧保存到另一个多帧图像。"
  syntax:
    content: public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref>包含所需的图像编码器所使用的参数保存-添加操作。"
  overload: System.Drawing.Image.SaveAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(Image,EncoderParameters)
  nameWithType: Image.SaveAdd(Image,EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(Image,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "将帧添加到文件或流中的以前调用指定<xref:System.Drawing.Image.Save*>方法。</xref:System.Drawing.Image.Save*>"
  syntax:
    content: public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>包含要添加的帧。"
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref>包含所需的图像编码器所使用的参数保存-添加操作。"
  overload: System.Drawing.Image.SaveAdd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  id: SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SelectActiveFrame(FrameDimension,Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension,Int32)
  fullName: System.Drawing.Image.SelectActiveFrame(FrameDimension,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "选择由维度和索引指定的帧。"
  remarks: "可能值`dimensionID`参数是<xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension>的属性 可以使用这些来按其时间、 解决方法或页号标识图像。       调用此方法会导致要放弃对上一个帧所做的所有更改。 选择另一个帧之前, 保存到当前的框架，包括对像素值和属性的更改所做的所有更改。 如果对 SelectActiveFrame 方法的调用是成功 （没有发生的异常），该方法将返回 0。"
  syntax:
    content: public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: "A <xref href=&quot;System.Drawing.Imaging.FrameDimension&quot;> </xref>指定维度类型标识。"
    - id: frameIndex
      type: System.Int32
      description: "活动帧的索引。"
    return:
      type: System.Int32
      description: "始终返回 0。"
  overload: System.Drawing.Image.SelectActiveFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  id: SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: System.Drawing.Image.SetPropertyItem(PropertyItem)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "将属性项 （段元数据） 存储在此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "如果图像格式不支持属性项，此方法将引发<xref:System.ArgumentException>并显示消息&quot;属性不受支持。&quot;</xref:System.ArgumentException> 如果图像格式支持属性项，但不支持您尝试设置的特定属性，此方法将忽略此尝试，但不会引发异常。       因为很难设置属性项<xref:System.Drawing.Imaging.PropertyItem>类具有没有公共构造函数。</xref:System.Drawing.Imaging.PropertyItem> 若要解决此限制的一种方法是获取<xref:System.Drawing.Imaging.PropertyItem>通过检索<xref:System.Drawing.Image.PropertyItems%2A>属性值或调用<xref:System.Drawing.Image.GetPropertyItem%2A>方法<xref:System.Drawing.Image>已具有属性项。</xref:System.Drawing.Image> </xref:System.Drawing.Image.GetPropertyItem%2A> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> 然后，可以将设置的字段<xref:System.Drawing.Imaging.PropertyItem>并将它传递给 SetPropertyItem。</xref:System.Drawing.Imaging.PropertyItem>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.GetPropertyItem%2A> and SetPropertyItem methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.s_2_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.s_2_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.s_2_1.vb)]"
  syntax:
    content: public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);
    parameters:
    - id: propitem
      type: System.Drawing.Imaging.PropertyItem
      description: "<xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref>要存储。"
  overload: System.Drawing.Image.SetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "此图像的图像格式不支持属性项。"
  platform:
  - net462
- uid: System.Drawing.Image.Size
  id: Size
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Size
  nameWithType: Image.Size
  fullName: System.Drawing.Image.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取以像素为单位，此图像的宽度和高度。"
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>结构，它表示的宽度和高度，以像素为单位，此映像。"
  overload: System.Drawing.Image.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Image
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填充<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>序列化目标对象所需的数据。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>要填充数据。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "目标 (请参阅<xref:System.Runtime.Serialization.StreamingContext>) 此序列化。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Tag
  id: Tag
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Tag
  nameWithType: Image.Tag
  fullName: System.Drawing.Image.Tag
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取或设置一个对象，提供有关图像的其他数据。"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>，它提供有关图像的其他数据。</xref:System.Object>"
  overload: System.Drawing.Image.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.VerticalResolution
  id: VerticalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: System.Drawing.Image.VerticalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取以每英寸的像素为单位的垂直分辨率<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  syntax:
    content: public float VerticalResolution { get; }
    return:
      type: System.Single
      description: "垂直分辨率，以像素为单位，每英寸点数，此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.VerticalResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Width
  id: Width
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Width
  nameWithType: Image.Width
  fullName: System.Drawing.Image.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "获取的宽度，以像素为单位，此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new <xref:System.Drawing.Bitmap> from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A>, Width, and <xref:System.Drawing.Image.Height%2A> properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1` and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.w_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.w_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.w_1.vb)]"
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "宽度，以像素为单位，此<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Image.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.InteropServices.ExternalException
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ExternalException
  nameWithType: ExternalException
  fullName: System.Runtime.InteropServices.ExternalException
- uid: System.Drawing.Image.Clone
  parent: System.Drawing.Image
  isExternal: false
  name: Clone()
  nameWithType: Image.Clone()
  fullName: System.Drawing.Image.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Image.Dispose
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: System.Drawing.Image.Dispose()
- uid: System.Drawing.Image.Dispose(System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: System.Drawing.Image.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Image.Finalize
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: System.Drawing.Image.Finalize()
- uid: System.Drawing.Image.Flags
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
  fullName: System.Drawing.Image.Flags
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Image.FrameDimensionsList
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: System.Drawing.Image.FrameDimensionsList
- uid: System.Guid[]
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid[]
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.FromFile(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: System.Drawing.Image.FromFile(String)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String,Boolean)
  nameWithType: Image.FromFile(String,Boolean)
  fullName: System.Drawing.Image.FromFile(String,Boolean)
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr,IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr,IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr,IntPtr)
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: System.Drawing.Image.FromStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean)
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream,Boolean,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean,Boolean)
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: System.Drawing.Image.GetBounds(GraphicsUnit)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: System.Drawing.Image.GetEncoderParameterList(Guid)
- uid: System.Drawing.Imaging.EncoderParameters
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameters
  nameWithType: EncoderParameters
  fullName: System.Drawing.Imaging.EncoderParameters
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: System.Drawing.Image.GetFrameCount(FrameDimension)
- uid: System.Drawing.Imaging.FrameDimension
  parent: System.Drawing.Imaging
  isExternal: false
  name: FrameDimension
  nameWithType: FrameDimension
  fullName: System.Drawing.Imaging.FrameDimension
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: System.Drawing.Image.GetPixelFormatSize(PixelFormat)
- uid: System.Drawing.Imaging.PixelFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Drawing.Imaging.PixelFormat
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: System.Drawing.Image.GetPropertyItem(Int32)
- uid: System.Drawing.Imaging.PropertyItem
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  fullName: System.Drawing.Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
- uid: System.Drawing.Image.GetThumbnailImageAbort
  parent: System.Drawing
  isExternal: false
  name: Image+GetThumbnailImageAbort
  nameWithType: Image+GetThumbnailImageAbort
  fullName: System.Drawing.Image+GetThumbnailImageAbort
- uid: System.Drawing.Image.Height
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
  fullName: System.Drawing.Image.Height
- uid: System.Drawing.Image.HorizontalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: System.Drawing.Image.HorizontalResolution
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsAlphaPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsCanonicalPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsExtendedPixelFormat(PixelFormat)
- uid: System.Drawing.Image.Palette
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
  fullName: System.Drawing.Image.Palette
- uid: System.Drawing.Imaging.ColorPalette
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorPalette
  nameWithType: ColorPalette
  fullName: System.Drawing.Imaging.ColorPalette
- uid: System.Drawing.Image.PhysicalDimension
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: System.Drawing.Image.PhysicalDimension
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Image.PixelFormat
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: System.Drawing.Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: System.Drawing.Image.PropertyIdList
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.PropertyItems
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: System.Drawing.Image.PropertyItems
- uid: System.Drawing.Imaging.PropertyItem[]
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem[]
  spec.csharp:
  - uid: System.Drawing.Imaging.PropertyItem
    name: PropertyItem
    nameWithType: PropertyItem
    fullName: PropertyItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.RawFormat
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: System.Drawing.Image.RawFormat
- uid: System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: System.Drawing.Image.RemovePropertyItem(Int32)
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: System.Drawing.Image.RotateFlip(RotateFlipType)
- uid: System.Drawing.RotateFlipType
  parent: System.Drawing
  isExternal: false
  name: RotateFlipType
  nameWithType: RotateFlipType
  fullName: System.Drawing.RotateFlipType
- uid: System.Drawing.Image.Save(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: System.Drawing.Image.Save(String)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream,ImageFormat)
  nameWithType: Image.Save(Stream,ImageFormat)
  fullName: System.Drawing.Image.Save(Stream,ImageFormat)
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String,ImageFormat)
  nameWithType: Image.Save(String,ImageFormat)
  fullName: System.Drawing.Image.Save(String,ImageFormat)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(Stream,ImageCodecInfo,EncoderParameters)
- uid: System.Drawing.Imaging.ImageCodecInfo
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageCodecInfo
  nameWithType: ImageCodecInfo
  fullName: System.Drawing.Imaging.ImageCodecInfo
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(String,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(String,ImageCodecInfo,EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(Image,EncoderParameters)
  nameWithType: Image.SaveAdd(Image,EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(Image,EncoderParameters)
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame(FrameDimension,Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension,Int32)
  fullName: System.Drawing.Image.SelectActiveFrame(FrameDimension,Int32)
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: System.Drawing.Image.SetPropertyItem(PropertyItem)
- uid: System.Drawing.Image.Size
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
  fullName: System.Drawing.Image.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Image.Tag
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
  fullName: System.Drawing.Image.Tag
- uid: System.Drawing.Image.VerticalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: System.Drawing.Image.VerticalResolution
- uid: System.Drawing.Image.Width
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
  fullName: System.Drawing.Image.Width
- uid: System.Drawing.Image.Clone*
  parent: System.Drawing.Image
  isExternal: false
  name: Clone
  nameWithType: Image.Clone
- uid: System.Drawing.Image.Dispose*
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose
  nameWithType: Image.Dispose
- uid: System.Drawing.Image.Finalize*
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize
  nameWithType: Image.Finalize
- uid: System.Drawing.Image.Flags*
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
- uid: System.Drawing.Image.FrameDimensionsList*
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
- uid: System.Drawing.Image.FromFile*
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile
  nameWithType: Image.FromFile
- uid: System.Drawing.Image.FromHbitmap*
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap
  nameWithType: Image.FromHbitmap
- uid: System.Drawing.Image.FromStream*
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream
  nameWithType: Image.FromStream
- uid: System.Drawing.Image.GetBounds*
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds
  nameWithType: Image.GetBounds
- uid: System.Drawing.Image.GetEncoderParameterList*
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList
  nameWithType: Image.GetEncoderParameterList
- uid: System.Drawing.Image.GetFrameCount*
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount
  nameWithType: Image.GetFrameCount
- uid: System.Drawing.Image.GetPixelFormatSize*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize
  nameWithType: Image.GetPixelFormatSize
- uid: System.Drawing.Image.GetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem
  nameWithType: Image.GetPropertyItem
- uid: System.Drawing.Image.GetThumbnailImage*
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage
  nameWithType: Image.GetThumbnailImage
- uid: System.Drawing.Image.Height*
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
- uid: System.Drawing.Image.HorizontalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
- uid: System.Drawing.Image.IsAlphaPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat
  nameWithType: Image.IsAlphaPixelFormat
- uid: System.Drawing.Image.IsCanonicalPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat
  nameWithType: Image.IsCanonicalPixelFormat
- uid: System.Drawing.Image.IsExtendedPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat
  nameWithType: Image.IsExtendedPixelFormat
- uid: System.Drawing.Image.Palette*
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
- uid: System.Drawing.Image.PhysicalDimension*
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
- uid: System.Drawing.Image.PixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
- uid: System.Drawing.Image.PropertyItems*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
- uid: System.Drawing.Image.RawFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
- uid: System.Drawing.Image.RemovePropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem
  nameWithType: Image.RemovePropertyItem
- uid: System.Drawing.Image.RotateFlip*
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip
  nameWithType: Image.RotateFlip
- uid: System.Drawing.Image.Save*
  parent: System.Drawing.Image
  isExternal: false
  name: Save
  nameWithType: Image.Save
- uid: System.Drawing.Image.SaveAdd*
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd
  nameWithType: Image.SaveAdd
- uid: System.Drawing.Image.SelectActiveFrame*
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame
  nameWithType: Image.SelectActiveFrame
- uid: System.Drawing.Image.SetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem
  nameWithType: Image.SetPropertyItem
- uid: System.Drawing.Image.Size*
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Image.Tag*
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
- uid: System.Drawing.Image.VerticalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
- uid: System.Drawing.Image.Width*
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
