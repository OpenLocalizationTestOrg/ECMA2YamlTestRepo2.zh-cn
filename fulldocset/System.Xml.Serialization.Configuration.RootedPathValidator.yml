### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.Configuration.RootedPathValidator
  id: RootedPathValidator
  children:
  - System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  - System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  - System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  langs:
  - csharp
  name: RootedPathValidator
  nameWithType: RootedPathValidator
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator
  type: Class
  summary: "验证管理使用的规则`tempFilesLocation`配置开关。"
  remarks: "添加时`WebReference`到中的 Web 服务的对象[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]，Web 服务发现过程来创建文件。       Web 服务客户端了解在哪里可以找到 Web 服务说明 (WSDL) 文档通过添加`WebReference`对象。 Web 服务客户端然后将已发现的文档保存到磁盘，通过使用`WriteAll`方法。 例如，发现的文档可能.xsd 架构文件或服务说明。 在过程结束时，客户端中删除文件。 你可以通过更改临时文件夹中的文件的默认位置`tempFilesLocation`切入`<xmlSerializer>`在 Machine.config 配置文件中，如以下示例所示指定的元素。      ```   <configuration>     <system.web>     <system.xml.serialization>       <xmlSerializer tempFilesLocation=&quot;..&quot;/>     </system.xml.serialization>   </configuration>   ```值`tempFilesLocation`必须是绝对路径。 如果指定的路径不是绝对的[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]生成<xref:System.Configuration.ConfigurationErrorsException>引用的配置节时出现异常。</xref:System.Configuration.ConfigurationErrorsException>       属性的值的截断以移除前导空格和尾随空格。       如果值`tempFilesLocation`属性组成的空白区域，默认 %TMP%位置用于编译。 相同的默认行为发生未`tempFilesLocation`指定开关。       <xref:System.Xml.Serialization.XmlSerializer>不会检查以查看该路径是否存在。</xref:System.Xml.Serialization.XmlSerializer> 如果不是，请<xref:System.IO.DirectoryNotFoundException>生成。</xref:System.IO.DirectoryNotFoundException> 这是默认行为的相同`XmlSerializer`如果 %TMP%路径不存在。"
  syntax:
    content: 'public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Xml.Serialization.Configuration.RootedPathValidator&quot;></xref>类。"
  syntax:
    content: public RootedPathValidator ();
    parameters: []
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "确定是否可以验证的对象类型。"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "对象的类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> type </code>参数与匹配有效<xref uid=&quot;langword_csharp_XMLSerializer&quot; name=&quot;XMLSerializer&quot; href=&quot;&quot;></xref>对象; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "确定对象的值是否有效。"
  remarks: "`XmlSerializer`对象以验证传递的参数`Validate`方法。"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "对象的值。"
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator
  nameWithType: RootedPathValidator.RootedPathValidator
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate
  nameWithType: RootedPathValidator.CanValidate
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate
  nameWithType: RootedPathValidator.Validate
