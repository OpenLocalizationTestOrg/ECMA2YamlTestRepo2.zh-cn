### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaObject
  id: XmlSchemaObject
  children:
  - System.Xml.Schema.XmlSchemaObject.#ctor
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  langs:
  - csharp
  name: XmlSchemaObject
  nameWithType: XmlSchemaObject
  fullName: System.Xml.Schema.XmlSchemaObject
  type: Class
  summary: "表示 Xml 架构对象模型层次结构的根类和用作基类的类，例如<xref:System.Xml.Schema.XmlSchema>类。</xref:System.Xml.Schema.XmlSchema>"
  remarks: ''
  example:
  - "The following example displays each schema object.  \n  \n [!code-cs[Classic WebData XmlSchemaObject Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_13_1.cs)]\n [!code-cpp[Classic WebData XmlSchemaObject Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_13_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaObject Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_13_1.vb)]  \n  \n The example uses the `example.xsd` file as input.  \n  \n [!code-xml[Classic WebData XmlSchemaObject Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_13_2.xsd)]"
  syntax:
    content: public abstract class XmlSchemaObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaObject.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaObject
  langs:
  - csharp
  name: XmlSchemaObject()
  nameWithType: XmlSchemaObject.XmlSchemaObject()
  fullName: System.Xml.Schema.XmlSchemaObject.XmlSchemaObject()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的新实例<xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref>类。"
  remarks: "派生的类构造函数来初始化此类型中的状态将调用此构造函数。"
  syntax:
    content: protected XmlSchemaObject ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaObject.LineNumber
  id: LineNumber
  parent: System.Xml.Schema.XmlSchemaObject
  langs:
  - csharp
  name: LineNumber
  nameWithType: XmlSchemaObject.LineNumber
  fullName: System.Xml.Schema.XmlSchemaObject.LineNumber
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取或设置到的文件中的行号<xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref>元素引用。"
  remarks: '`LineNumber`用于从文件读取架构时存储的行号。 这通过报告<xref:System.Xml.Schema.XmlSchemaException>进行错误处理。</xref:System.Xml.Schema.XmlSchemaException>'
  syntax:
    content: public int LineNumber { get; set; }
    return:
      type: System.Int32
      description: "行号。"
  overload: System.Xml.Schema.XmlSchemaObject.LineNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaObject.LinePosition
  id: LinePosition
  parent: System.Xml.Schema.XmlSchemaObject
  langs:
  - csharp
  name: LinePosition
  nameWithType: XmlSchemaObject.LinePosition
  fullName: System.Xml.Schema.XmlSchemaObject.LinePosition
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取或设置文件中的行位置到<xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref>元素引用。"
  remarks: "这用于从文件读取架构时存储的行位置。 这通过报告<xref:System.Xml.Schema.XmlSchemaException>进行错误处理。</xref:System.Xml.Schema.XmlSchemaException>"
  syntax:
    content: public int LinePosition { get; set; }
    return:
      type: System.Int32
      description: "行位置中。"
  overload: System.Xml.Schema.XmlSchemaObject.LinePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaObject.Namespaces
  id: Namespaces
  parent: System.Xml.Schema.XmlSchemaObject
  langs:
  - csharp
  name: Namespaces
  nameWithType: XmlSchemaObject.Namespaces
  fullName: System.Xml.Schema.XmlSchemaObject.Namespaces
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取或设置<xref:System.Xml.Serialization.XmlSerializerNamespaces>要用于此架构对象。</xref:System.Xml.Serialization.XmlSerializerNamespaces>"
  remarks: "这样，架构对象模型 (SOM) 添加 xmlns 声明的能力。 当你想要声明要导入的架构从限定声明或 xs:selector 元素的 xpath 特性中使用的前缀，这非常有用。       你还可以使用命名空间属性来更改架构中的命名空间前缀。 例如，您可以更改由架构，用于从 xs 的 W3C XML 架构命名空间为 xsd，如下面的示例所示的前缀。      ```vb#   Dim namespaces As XmlSerializerNamespaces = New XmlSerializerNamespaces()   namespaces.Add(&quot;myChangedPrefix&quot;, &quot;myImportNamespace&quot;);   s.Namespaces = namespaces;   ```      ```c#   XmlSerializerNamespaces namespaces = new XmlSerializerNamespaces();   namespaces.Add(&quot;myChangedPrefix&quot;, &quot;myImportNamespace&quot;);   s.Namespaces = namespaces;   ```"
  example:
  - "In the following example, the prefix myImpPrefix is added at the schema element level. The prefix is then used to qualify definitions that are imported from myImportNamespace.  \n  \n [!code-cpp[Classic WebData XmlSchemaObject.Namespaces Example#1](~/add/codesnippet/cpp/p-system.xml.schema.xmls_7_1.cpp)]\n [!code-cs[Classic WebData XmlSchemaObject.Namespaces Example#1](~/add/codesnippet/csharp/p-system.xml.schema.xmls_7_1.cs)]\n [!code-vb[Classic WebData XmlSchemaObject.Namespaces Example#1](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_7_1.vb)]  \n  \n The example produces the following XML.  \n  \n [!code-xml[Classic WebData XmlSchemaObject.Namespaces Example#2](~/add/codesnippet/xml/p-system.xml.schema.xmls_7_2.xml)]"
  syntax:
    content: public System.Xml.Serialization.XmlSerializerNamespaces Namespaces { get; set; }
    return:
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "<xref:System.Xml.Serialization.XmlSerializerNamespaces>架构对象的属性。</xref:System.Xml.Serialization.XmlSerializerNamespaces>"
  overload: System.Xml.Schema.XmlSchemaObject.Namespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaObject.Parent
  id: Parent
  parent: System.Xml.Schema.XmlSchemaObject
  langs:
  - csharp
  name: Parent
  nameWithType: XmlSchemaObject.Parent
  fullName: System.Xml.Schema.XmlSchemaObject.Parent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取或设置此父<xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref>。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaObject Parent { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaObject
      description: "The parent <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref> of this <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaObject.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaObject.SourceUri
  id: SourceUri
  parent: System.Xml.Schema.XmlSchemaObject
  langs:
  - csharp
  name: SourceUri
  nameWithType: XmlSchemaObject.SourceUri
  fullName: System.Xml.Schema.XmlSchemaObject.SourceUri
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取或设置加载的架构文件的源位置。"
  remarks: "提供用于异常处理的信息。"
  syntax:
    content: public string SourceUri { get; set; }
    return:
      type: System.String
      description: "文件源位置 (URI)。"
  overload: System.Xml.Schema.XmlSchemaObject.SourceUri*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Schema.XmlSchemaObject.#ctor
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: XmlSchemaObject()
  nameWithType: XmlSchemaObject.XmlSchemaObject()
  fullName: System.Xml.Schema.XmlSchemaObject.XmlSchemaObject()
- uid: System.Xml.Schema.XmlSchemaObject.LineNumber
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: LineNumber
  nameWithType: XmlSchemaObject.LineNumber
  fullName: System.Xml.Schema.XmlSchemaObject.LineNumber
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlSchemaObject.LinePosition
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: LinePosition
  nameWithType: XmlSchemaObject.LinePosition
  fullName: System.Xml.Schema.XmlSchemaObject.LinePosition
- uid: System.Xml.Schema.XmlSchemaObject.Namespaces
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: Namespaces
  nameWithType: XmlSchemaObject.Namespaces
  fullName: System.Xml.Schema.XmlSchemaObject.Namespaces
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializerNamespaces
  nameWithType: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
- uid: System.Xml.Schema.XmlSchemaObject.Parent
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: Parent
  nameWithType: XmlSchemaObject.Parent
  fullName: System.Xml.Schema.XmlSchemaObject.Parent
- uid: System.Xml.Schema.XmlSchemaObject
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObject
  nameWithType: XmlSchemaObject
  fullName: System.Xml.Schema.XmlSchemaObject
- uid: System.Xml.Schema.XmlSchemaObject.SourceUri
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaObject.SourceUri
  fullName: System.Xml.Schema.XmlSchemaObject.SourceUri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaObject.#ctor*
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: XmlSchemaObject
  nameWithType: XmlSchemaObject.XmlSchemaObject
- uid: System.Xml.Schema.XmlSchemaObject.LineNumber*
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: LineNumber
  nameWithType: XmlSchemaObject.LineNumber
- uid: System.Xml.Schema.XmlSchemaObject.LinePosition*
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: LinePosition
  nameWithType: XmlSchemaObject.LinePosition
- uid: System.Xml.Schema.XmlSchemaObject.Namespaces*
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: Namespaces
  nameWithType: XmlSchemaObject.Namespaces
- uid: System.Xml.Schema.XmlSchemaObject.Parent*
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: Parent
  nameWithType: XmlSchemaObject.Parent
- uid: System.Xml.Schema.XmlSchemaObject.SourceUri*
  parent: System.Xml.Schema.XmlSchemaObject
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaObject.SourceUri
