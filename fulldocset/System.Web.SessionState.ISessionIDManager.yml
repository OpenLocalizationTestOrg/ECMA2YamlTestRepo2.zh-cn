### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.ISessionIDManager
  id: ISessionIDManager
  children:
  - System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.Initialize
  - System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: ISessionIDManager
  nameWithType: ISessionIDManager
  fullName: System.Web.SessionState.ISessionIDManager
  type: Interface
  summary: "定义自定义会话状态标识符管理器必须实现的协定。"
  remarks: "ISessionIDManager 接口标识为创建用于会话标识符值的自定义管理器必须实现的方法。 ISessionIDManager 接口实现创建并验证会话标识符值和管理来自 HTTP 请求的 HTTP 响应中的会话标识符的存储以及检索的会话标识符值。 启用使用自定义的会话 ID manager`sessionIDManagerType`属性[sessionState 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素。       如果你 ISessionIDManager 接口的实现将支持无 cookie 会话标识符，将需要实现用于发送和检索的 URL，例如 ISAPI 筛选器中的会话标识符的解决方案。       如果你只想要提供自定义的会话标识符值用于 ASP.NET 会话状态，则可以创建继承的类<xref:System.Web.SessionState.SessionIDManager>类并重写仅<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>与自定义实现的方法。</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> 这使你可以依赖于基时提供你自己的会话标识符的值，<xref:System.Web.SessionState.SessionIDManager>类，从而将值存储到 HTTP 响应，并从 HTTP 请求检索值。</xref:System.Web.SessionState.SessionIDManager> 有关重写<xref:System.Web.SessionState.SessionIDManager>类并实现这些方法，请参阅提供<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>的<xref:System.Web.SessionState.SessionIDManager>类</xref:System.Web.SessionState.SessionIDManager>的方法</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>的示例</xref:System.Web.SessionState.SessionIDManager>的示例"
  example:
  - "The following code example shows a class that implements a cookie-based session-ID manager.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_1_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/csharp/t-system.web.sessionstat_1_1.cs)]"
  syntax:
    content: public interface ISessionIDManager
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "创建唯一的会话标识符。"
  remarks: "CreateSessionID 方法用于生成唯一的会话标识符，<xref:System.Web.SessionState.SessionStateModule>对象将用于标识新会话。</xref:System.Web.SessionState.SessionStateModule> CreateSessionID 返回的值必须是唯一的并且必须包含可以存储在一个 HTTP 响应和请求的有效字符。 如果它是可能由您 CreateSessionID 的实现返回的值包含在 HTTP 响应或请求中无效的字符，则应使用<xref:System.Web.HttpUtility.UrlEncode%2A>方法进行编码中的会话标识符值你<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法实现与<xref:System.Web.HttpUtility.UrlDecode%2A>方法进行解码中的会话标识符值你<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法实现。</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A>"
  example:
  - "The following code example implements the CreateSessionID method. The method creates a new <xref:System.Guid> to be used as a session identifier.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/visualbasic/873b6fcc-0b1f-453f-806c-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/csharp/873b6fcc-0b1f-453f-806c-_1.cs)]"
  syntax:
    content: public string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "当前<xref href=&quot;System.Web.HttpContext&quot;></xref>引用服务器对象的对象用于处理 HTTP 请求 (例如， <> </> *1> 和<> *1> 属性)。"
    return:
      type: System.String
      description: "唯一的会话标识符。"
  overload: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "从当前 HTTP 请求的上下文中获取的会话标识符。"
  remarks: "调用 GetSessionID 方法<xref:System.Web.SessionState.SessionStateModule>期间<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>和<xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName>事件。</xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName> </xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> 如果无法从 HTTP 请求来检索有效的会话标识符，返回`null`。 如果<xref:System.Web.SessionState.SessionStateModule>接收`null`从 GetSessionID 方法，它将调用<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>方法来为新的会话中获取新的会话标识符。</xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       如果有可能返回的值你<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>实现包含在 HTTP 响应或请求中无效的字符，则应使用<xref:System.Web.HttpUtility.UrlEncode%2A>方法进行编码中的会话标识符值你<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法实现与<xref:System.Web.HttpUtility.UrlDecode%2A>方法进行解码 GetSessionID 方法实现中的会话标识符值。</xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented GetSessionID method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/visualbasic/m-system.web.sessionstat_10_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/csharp/m-system.web.sessionstat_10_1.cs)]"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "当前<xref href=&quot;System.Web.HttpContext&quot;></xref>引用服务器对象的对象用于处理 HTTP 请求 (例如， <> </> *1> 和<> *1> 属性)。"
    return:
      type: System.String
      description: "使用 HTTP 请求发送的当前会话标识符。"
  overload: System.Web.SessionState.ISessionIDManager.GetSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "初始化<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>对象。"
  remarks: "Initialize 方法用于初始化<xref:System.Web.SessionState.ISessionIDManager>对象。</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.ISessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "执行的每个请求初始化<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>对象。"
  remarks: "由每个请求将为调用 InitializeRequest 方法<xref:System.Web.SessionState.ISessionIDManager>对象。</xref:System.Web.SessionState.ISessionIDManager> 使用 InitializeRequest 方法初始化每个请求数据<xref:System.Web.SessionState.SessionIDManager>对象。</xref:System.Web.SessionState.SessionIDManager>       当`suppressAutoDetectRedirect`参数是`true`、<xref:System.Web.SessionState.ISessionIDManager>对象不应使用重定向来确定浏览器是否支持 cookie。</xref:System.Web.SessionState.ISessionIDManager>       `supportSessionIDReissue`参数应返回`false`如果 cookie 用于会话标识; 否则，返回`true`如果你<xref:System.Web.SessionState.ISessionIDManager>实现支持重新颁发会话 Id。</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>对象，其中包含有关当前请求的信息。"
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果会话 ID 管理器应将重定向来确定 cookie 支持;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>若要取消自动重定向来确定 cookie 支持。"
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "此方法返回时，包含一个布尔值，该值指示是否<xref href=&quot;System.Web.SessionState.ISessionIDManager&quot;></xref>过期原始 ID 时，对象支持发出新的会话 Id。 此参数传递时未经初始化。       重复使用会话 ID 时相应的会话状态 ID 进行 url 编码和可能存在用于共享或通过电子邮件发送的 URL。       如果通过虚拟路径的自定义会话状态实现分区 cookie，则同样应支持会话状态。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示初始化执行了重定向;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "从 cookie 或从 URL 中删除的会话标识符。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>调用<xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>方法期间<xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName>事件移除中的会话标识符<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>如果新的会话已创建但未使用的集合。</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> </xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - "The following code example implements the RemoveSessionID method.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/visualbasic/ee24c797-ce26-45a5-8119-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/csharp/ee24c797-ce26-45a5-8119-_1.cs)]"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "当前<xref href=&quot;System.Web.HttpContext&quot;></xref>引用服务器对象的对象用于处理 HTTP 请求 (例如， <> </> *1> 和<> *1> 属性)。"
  overload: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "将新创建的会话标识符保存到 HTTP 响应。"
  remarks: "调用 SaveSessionID 方法<xref:System.Web.SessionState.SessionStateModule>对象期间<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>事件。</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> SaveSessionID 方法中的 URL （使用无 cookie 会话状态） 时或未过期的会话 cookie 中存储的会话标识符。       如果有可能从返回的值你<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>实现包含在 HTTP 响应或请求中无效的字符，则应使用<xref:System.Web.HttpUtility.UrlEncode%2A>方法进行编码 SaveSessionID 方法实现中的会话标识符值和<xref:System.Web.HttpUtility.UrlDecode%2A>方法进行解码中的会话标识符值你<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法实现。</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/visualbasic/c9e7b38d-d963-4c81-9ebb-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/csharp/c9e7b38d-d963-4c81-9ebb-_1.cs)]"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "当前<xref href=&quot;System.Web.HttpContext&quot;></xref>引用服务器对象的对象用于处理 HTTP 请求 (例如， <> </> *1> 和<> *1> 属性)。"
    - id: id
      type: System.String
      description: "会话的标识符。"
    - id: redirected
      type: System.Boolean
      description: "此方法返回时，包含一个布尔值，是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>响应是否重定向到添加到的 URL 的会话标识符与当前的 URL; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: cookieAdded
      type: System.Boolean
      description: "此方法返回时，包含一个布尔值，是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 cookie 已被添加到 HTTP 响应; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "确认提供的会话标识符无效。"
  remarks: "Validate 方法验证提供`id`是有效的会话标识符。       你<xref:System.Web.SessionState.ISessionIDManager>实现应调用验证方法中的，从<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法时从 HTTP 请求来确保提供的会话标识符的格式正确检索会话标识符。</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.SessionState.ISessionIDManager>"
  example:
  - "The following code example implements the Validate method and ensures the session-identifier value is a valid <xref:System.Guid>.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/visualbasic/m-system.web.sessionstat_0_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/csharp/m-system.web.sessionstat_0_1.cs)]"
  syntax:
    content: public bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "要验证的会话标识符。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果会话标识符是否有效;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.ISessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: ISessionIDManager.CreateSessionID
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: ISessionIDManager.GetSessionID
- uid: System.Web.SessionState.ISessionIDManager.Initialize*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: ISessionIDManager.Initialize
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: ISessionIDManager.InitializeRequest
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: ISessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: ISessionIDManager.SaveSessionID
- uid: System.Web.SessionState.ISessionIDManager.Validate*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate
  nameWithType: ISessionIDManager.Validate
