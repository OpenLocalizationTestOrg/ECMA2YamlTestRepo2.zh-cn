### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType
  id: AuthorizedType
  children:
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  langs:
  - csharp
  name: AuthorizedType
  nameWithType: AuthorizedType
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType
  type: Class
  summary: "表示一组允许或不允许在编译的工作流中的工作流编译器的类型 (具体取决于值<xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*>属性)。</xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*> 此类不能被继承。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]在工作流编译的验证阶段，如果它或伴随规则文件直接引用了授权的类型列表上不存在任何.NET Framework 类型，则拒绝的工作流源文档。 授权的类型列表是一个 XML 文档，其中每个条目指示`Assembly`、 `Namespace`、 `TypeName`，和授权 {`true`|`false`} 指示器。 此类对应于列表中的条目。 另请注意，通配符字符，允许指定要包含或排除完整的命名空间。 例如，使用`Type=”System.*”`包括中的所有类型<xref:System>，包括子命名空间中包含的类型。</xref:System>       授权的类型列表的使用受<xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler>选项`&quot;/checktypes&quot;`</xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Xml.Serialization.XmlType("authorizedType")]

      public sealed class AuthorizedType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: AuthorizedType()
  nameWithType: AuthorizedType.AuthorizedType()
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.AuthorizedType()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "初始化的新实例<xref href=&quot;System.Workflow.ComponentModel.Compiler.AuthorizedType&quot;></xref>类。"
  syntax:
    content: public AuthorizedType ();
    parameters: []
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  id: Assembly
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Assembly
  nameWithType: AuthorizedType.Assembly
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "获取或设置包含由此类表示的类型的程序集的名称。"
  syntax:
    content: public string Assembly { get; set; }
    return:
      type: System.String
      description: "程序集的名称。"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  id: Authorized
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Authorized
  nameWithType: AuthorizedType.Authorized
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "获取或设置值，该值指示是否授权此类指定的类型参与工作流编译。"
  syntax:
    content: public string Authorized { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果授权参与工作流编译;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  id: Namespace
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Namespace
  nameWithType: AuthorizedType.Namespace
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "获取或设置此实例中表示的类型的命名空间的名称。"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "命名空间的名称<xref:System.Type>此实例中表示。</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  id: RegularExpression
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "获取<xref:System.Text.RegularExpressions.Regex>与此实例关联。</xref:System.Text.RegularExpressions.Regex>"
  remarks: "由于支持通配符命名，则没有隐式创建<xref:System.Text.RegularExpressions.Regex>使用通配符命名时。</xref:System.Text.RegularExpressions.Regex> 此属性提供直接访问该<xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>权限"
  syntax:
    content: public System.Text.RegularExpressions.Regex RegularExpression { get; }
    return:
      type: System.Text.RegularExpressions.Regex
      description: "与此实例关联的正则表达式。"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  id: TypeName
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: TypeName
  nameWithType: AuthorizedType.TypeName
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "获取或设置此实例所表示的类型的名称。"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "名称<xref:System.Type>由此实例表示。</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: AuthorizedType()
  nameWithType: AuthorizedType.AuthorizedType()
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.AuthorizedType()
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Assembly
  nameWithType: AuthorizedType.Assembly
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Authorized
  nameWithType: AuthorizedType.Authorized
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Namespace
  nameWithType: AuthorizedType.Namespace
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: TypeName
  nameWithType: AuthorizedType.TypeName
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: AuthorizedType
  nameWithType: AuthorizedType.AuthorizedType
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Assembly
  nameWithType: AuthorizedType.Assembly
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Authorized
  nameWithType: AuthorizedType.Authorized
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Namespace
  nameWithType: AuthorizedType.Namespace
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: TypeName
  nameWithType: AuthorizedType.TypeName
