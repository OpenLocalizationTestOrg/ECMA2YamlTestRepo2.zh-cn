### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.Publisher
  id: Publisher
  children:
  - System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Policy.Publisher.Certificate
  - System.Security.Policy.Publisher.Clone
  - System.Security.Policy.Publisher.Copy
  - System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)
  - System.Security.Policy.Publisher.Equals(System.Object)
  - System.Security.Policy.Publisher.GetHashCode
  - System.Security.Policy.Publisher.ToString
  langs:
  - csharp
  name: Publisher
  nameWithType: Publisher
  fullName: System.Security.Policy.Publisher
  type: Class
  summary: "提供作为用于策略评估的证据的代码程序集的验证码 X.509v3 数字签名。 此类不能被继承。"
  remarks: "发布服务器证据是否存在生成<xref:System.Security.Permissions.PublisherIdentityPermission>的授予集。</xref:System.Security.Permissions.PublisherIdentityPermission> 如果没有<xref:System.Security.CodeAccessPermission.Demand%2A>为<xref:System.Security.Permissions.PublisherIdentityPermission>、<xref:System.Security.Permissions.PublisherIdentityPermission>相对应的证据将与要求的权限进行比较的发布服务器。</xref:System.Security.Permissions.PublisherIdentityPermission> </xref:System.Security.Permissions.PublisherIdentityPermission> </xref:System.Security.CodeAccessPermission.Demand%2A>       发布服务器证据基于 Authenticode X.509v3 签名。       默认情况下，代码访问安全性 (CAS) 不会检查有发布服务器的情况。 除非你的计算机拥有基于的自定义代码组<xref:System.Security.Policy.PublisherMembershipCondition>类，你可以通过跳过验证码签名验证提高性能。</xref:System.Security.Policy.PublisherMembershipCondition> 这是通过配置运行时不提供对于 CA 的发布服务器证据实现的。 有关如何配置此选项以及详细信息的应用程序可以使用它，请参阅元素。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class Publisher : System.Security.Policy.EvidenceBase, System.Security.Policy.IIdentityPermissionFactory
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements:
  - System.Security.Policy.IIdentityPermissionFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Policy.Publisher
  langs:
  - csharp
  name: Publisher(X509Certificate)
  nameWithType: Publisher.Publisher(X509Certificate)
  fullName: System.Security.Policy.Publisher.Publisher(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "初始化的新实例<xref href=&quot;System.Security.Policy.Publisher&quot;></xref>类包含发布服务器的公钥的 Authenticode X.509v3 证书。"
  syntax:
    content: public Publisher (System.Security.Cryptography.X509Certificates.X509Certificate cert);
    parameters:
    - id: cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref>包含软件发布者的公钥。"
  overload: System.Security.Policy.Publisher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>cert</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.Publisher.Certificate
  id: Certificate
  parent: System.Security.Policy.Publisher
  langs:
  - csharp
  name: Certificate
  nameWithType: Publisher.Certificate
  fullName: System.Security.Policy.Publisher.Certificate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "获取发布服务器的 Authenticode X.509v3 证书。"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "发布服务器的<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref>。"
  overload: System.Security.Policy.Publisher.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Publisher.Clone
  id: Clone
  parent: System.Security.Policy.Publisher
  langs:
  - csharp
  name: Clone()
  nameWithType: Publisher.Clone()
  fullName: System.Security.Policy.Publisher.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "创建当前实例副本的新对象。"
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "此实例副本的新对象。"
  overload: System.Security.Policy.Publisher.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Publisher.Copy
  id: Copy
  parent: System.Security.Policy.Publisher
  langs:
  - csharp
  name: Copy()
  nameWithType: Publisher.Copy()
  fullName: System.Security.Policy.Publisher.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "创建的等效副本<xref href=&quot;System.Security.Policy.Publisher&quot;> </xref>。"
  syntax:
    content: public object Copy ();
    parameters: []
    return:
      type: System.Object
      description: "完全相同的新副本<xref href=&quot;System.Security.Policy.Publisher&quot;> </xref>。"
  overload: System.Security.Policy.Publisher.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)
  id: CreateIdentityPermission(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Publisher
  langs:
  - csharp
  name: CreateIdentityPermission(Evidence)
  nameWithType: Publisher.CreateIdentityPermission(Evidence)
  fullName: System.Security.Policy.Publisher.CreateIdentityPermission(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "创建对应的当前实例的标识权限<xref href=&quot;System.Security.Policy.Publisher&quot;></xref>类。"
  syntax:
    content: public System.Security.IPermission CreateIdentityPermission (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>从中构造标识权限。"
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;> </xref>指定<xref href=&quot;System.Security.Policy.Publisher&quot;> </xref>。"
  overload: System.Security.Policy.Publisher.CreateIdentityPermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Publisher.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.Publisher
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Publisher.Equals(Object)
  fullName: System.Security.Policy.Publisher.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "比较当前<xref href=&quot;System.Security.Policy.Publisher&quot;></xref>到为等效的指定对象。"
  remarks: "<xref:System.Security.Policy.Publisher>如果它们指定相同的软件发行者证书，则对象相等。</xref:System.Security.Policy.Publisher>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Security.Policy.Publisher&quot;> </xref>要与当前对象的等效性测试。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果两个实例<xref href=&quot;System.Security.Policy.Publisher&quot;></xref>类都相等; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Policy.Publisher.Equals*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> o </code>参数不是<xref href=&quot;System.Security.Policy.Publisher&quot;></xref>对象。"
  platform:
  - net462
- uid: System.Security.Policy.Publisher.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.Publisher
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Publisher.GetHashCode()
  fullName: System.Security.Policy.Publisher.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "获取当前<xref:System.Security.Policy.Publisher.Certificate*>.</xref:System.Security.Policy.Publisher.Certificate*>哈希代码"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "当前<xref:System.Security.Policy.Publisher.Certificate*>.</xref:System.Security.Policy.Publisher.Certificate*>哈希代码"
  overload: System.Security.Policy.Publisher.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Publisher.ToString
  id: ToString
  parent: System.Security.Policy.Publisher
  langs:
  - csharp
  name: ToString()
  nameWithType: Publisher.ToString()
  fullName: System.Security.Policy.Publisher.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "返回当前的字符串表示<xref href=&quot;System.Security.Policy.Publisher&quot;> </xref>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示形式当前<xref href=&quot;System.Security.Policy.Publisher&quot;> </xref>。"
  overload: System.Security.Policy.Publisher.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Publisher(X509Certificate)
  nameWithType: Publisher.Publisher(X509Certificate)
  fullName: System.Security.Policy.Publisher.Publisher(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Policy.Publisher.Certificate
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Certificate
  nameWithType: Publisher.Certificate
  fullName: System.Security.Policy.Publisher.Certificate
- uid: System.Security.Policy.Publisher.Clone
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Clone()
  nameWithType: Publisher.Clone()
  fullName: System.Security.Policy.Publisher.Clone()
- uid: System.Security.Policy.Publisher.Copy
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Copy()
  nameWithType: Publisher.Copy()
  fullName: System.Security.Policy.Publisher.Copy()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: CreateIdentityPermission(Evidence)
  nameWithType: Publisher.CreateIdentityPermission(Evidence)
  fullName: System.Security.Policy.Publisher.CreateIdentityPermission(Evidence)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.Publisher.Equals(System.Object)
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Equals(Object)
  nameWithType: Publisher.Equals(Object)
  fullName: System.Security.Policy.Publisher.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.Publisher.GetHashCode
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: GetHashCode()
  nameWithType: Publisher.GetHashCode()
  fullName: System.Security.Policy.Publisher.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.Publisher.ToString
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: ToString()
  nameWithType: Publisher.ToString()
  fullName: System.Security.Policy.Publisher.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.Publisher.#ctor*
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Publisher
  nameWithType: Publisher.Publisher
- uid: System.Security.Policy.Publisher.Certificate*
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Certificate
  nameWithType: Publisher.Certificate
- uid: System.Security.Policy.Publisher.Clone*
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Clone
  nameWithType: Publisher.Clone
- uid: System.Security.Policy.Publisher.Copy*
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Copy
  nameWithType: Publisher.Copy
- uid: System.Security.Policy.Publisher.CreateIdentityPermission*
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: CreateIdentityPermission
  nameWithType: Publisher.CreateIdentityPermission
- uid: System.Security.Policy.Publisher.Equals*
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: Equals
  nameWithType: Publisher.Equals
- uid: System.Security.Policy.Publisher.GetHashCode*
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: GetHashCode
  nameWithType: Publisher.GetHashCode
- uid: System.Security.Policy.Publisher.ToString*
  parent: System.Security.Policy.Publisher
  isExternal: false
  name: ToString
  nameWithType: Publisher.ToString
