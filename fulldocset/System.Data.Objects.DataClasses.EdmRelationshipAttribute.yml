### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  id: EdmRelationshipAttribute
  children:
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
  langs:
  - csharp
  name: EdmRelationshipAttribute
  nameWithType: EdmRelationshipAttribute
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  type: Class
  summary: "定义基于概念模型中的关联的两个实体类型之间的关系。"
  remarks: "此属性以程序集级别应用于的每个关联的一个实例。 可以有多个属性，此类型的程序集。       特定关联中实体类型的角色的详细信息应匹配概念性架构中定义的关联。       关联不会定义角色的任何排序。 这意味着可以按任何顺序来定义用于定义的相关的端关联的属性。"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)]

      public sealed class EdmRelationshipAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)
  id: '#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)'
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "创建的实例<xref href=&quot;System.Data.Objects.DataClasses.EdmRelationshipAttribute&quot;></xref>类。"
  remarks: "`typeof`运算符 (`GetType`在 Visual Basic 中) 用于返回<xref:System.Type>对象的对象。</xref:System.Type>"
  syntax:
    content: public EdmRelationshipAttribute (string relationshipNamespaceName, string relationshipName, string role1Name, System.Data.Metadata.Edm.RelationshipMultiplicity role1Multiplicity, Type role1Type, string role2Name, System.Data.Metadata.Edm.RelationshipMultiplicity role2Multiplicity, Type role2Type);
    parameters:
    - id: relationshipNamespaceName
      type: System.String
      description: "此实体所参与的关联的命名空间名称。"
    - id: relationshipName
      type: System.String
      description: "此实体所参与的关系的名称。"
    - id: role1Name
      type: System.String
      description: "某一端的关联的类型的角色名称。"
    - id: role1Multiplicity
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "值为<xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> ，该值指示某一端的关联，例如一个或多个多重性。"
    - id: role1Type
      type: System.Type
      description: "在关联的另一端的实体类型。"
    - id: role2Name
      type: System.String
      description: "关联另一端的类型的角色名称。"
    - id: role2Multiplicity
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "值为<xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> ，该值指示在另一端的关联，例如一或多个多重性。"
    - id: role2Type
      type: System.Type
      description: "关联另一端的实体类型。"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)'
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "初始化的新实例<xref href=&quot;System.Data.Objects.DataClasses.EdmRelationshipAttribute&quot;></xref>类。"
  syntax:
    content: public EdmRelationshipAttribute (string relationshipNamespaceName, string relationshipName, string role1Name, System.Data.Metadata.Edm.RelationshipMultiplicity role1Multiplicity, Type role1Type, string role2Name, System.Data.Metadata.Edm.RelationshipMultiplicity role2Multiplicity, Type role2Type, bool isForeignKey);
    parameters:
    - id: relationshipNamespaceName
      type: System.String
      description: "此实体所参与的关联的命名空间名称。"
    - id: relationshipName
      type: System.String
      description: "此实体所参与的关系的名称。"
    - id: role1Name
      type: System.String
      description: "某一端的关联的类型的角色名称。"
    - id: role1Multiplicity
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "值为<xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> ，该值指示某一端的关联，例如一个或多个多重性。"
    - id: role1Type
      type: System.Type
      description: "在关联的另一端的实体类型。"
    - id: role2Name
      type: System.String
      description: "关联另一端的类型的角色名称。"
    - id: role2Multiplicity
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "值为<xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> ，该值指示在另一端的关联，例如一或多个多重性。"
    - id: role2Type
      type: System.Type
      description: "关联另一端的实体类型。"
    - id: isForeignKey
      type: System.Boolean
      description: "一个值，该值指示关系基于外键值。"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
  id: IsForeignKey
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: IsForeignKey
  nameWithType: EdmRelationshipAttribute.IsForeignKey
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "获取一个布尔值，该值指示关系基于外键值。"
  syntax:
    content: public bool IsForeignKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果关系基于外键值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
  id: RelationshipName
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: RelationshipName
  nameWithType: EdmRelationshipAttribute.RelationshipName
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "关系的名称。"
  remarks: "关系的名称由指定`Name`属性`Association`概念模型中定义此关系的元素。 有关详细信息，请参阅[CSDL、 SSDL 和 MSL 规范](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string RelationshipName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>，它是定义此关系的名称<xref href=&quot;System.Data.Objects.DataClasses.EdmRelationshipAttribute&quot;> </xref>。</xref:System.String>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
  id: RelationshipNamespaceName
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: RelationshipNamespaceName
  nameWithType: EdmRelationshipAttribute.RelationshipNamespaceName
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "命名空间中的关系。"
  remarks: "指定关系的命名空间`Namespace`属性`Schema`包含概念模型中定义此关系的关联的元素。 有关详细信息，请参阅[CSDL、 SSDL 和 MSL 规范](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string RelationshipNamespaceName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>，它是关系的命名空间。</xref:System.String>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
  id: Role1Multiplicity
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role1Multiplicity
  nameWithType: EdmRelationshipAttribute.Role1Multiplicity
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "关系的另一端的重数。"
  remarks: "可以按任何顺序定义定义关联的相关的端的属性。       通过指定多重性`Multiplicity`属性`End`概念模型中定义此关系的关联中的元素。 有关详细信息，请参阅[CSDL、 SSDL 和 MSL 规范](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipMultiplicity Role1Multiplicity { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref>值，该值指示重数。"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
  id: Role1Name
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role1Name
  nameWithType: EdmRelationshipAttribute.Role1Name
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "关系的另一端的角色名称。"
  remarks: "角色名称由指定`Role`属性`End`概念模型中定义此关系的关联中的元素。 有关详细信息，请参阅[CSDL、 SSDL 和 MSL 规范](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string Role1Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>，它是角色的名称。</xref:System.String>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
  id: Role1Type
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role1Type
  nameWithType: EdmRelationshipAttribute.Role1Type
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "关系的另一端的实体的类型。"
  remarks: "可以按任何顺序定义定义关联的相关的端的属性。       类型名称由指定`Type`属性`End`概念模型中定义此关系的关联中的元素。 有关详细信息，请参阅[CSDL、 SSDL 和 MSL 规范](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public Type Role1Type { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>类型关联的这一端的对象。</xref:System.Type>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
  id: Role2Multiplicity
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role2Multiplicity
  nameWithType: EdmRelationshipAttribute.Role2Multiplicity
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "关系另一端的重数。"
  remarks: "可以按任何顺序定义定义关联的相关的端的属性。       通过指定多重性`Multiplicity`属性`End`概念模型中定义此关系的关联中的元素。 有关详细信息，请参阅[CSDL、 SSDL 和 MSL 规范](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipMultiplicity Role2Multiplicity { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref>值，该值指示重数。"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
  id: Role2Name
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role2Name
  nameWithType: EdmRelationshipAttribute.Role2Name
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "关系另一端的角色名称。"
  remarks: "可以按任何顺序定义定义关联的相关的端的属性。       角色名称由指定`Role`属性`End`概念模型中定义此关系的关联中的元素。 有关详细信息，请参阅[CSDL、 SSDL 和 MSL 规范](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string Role2Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>，它是角色的名称。</xref:System.String>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
  id: Role2Type
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role2Type
  nameWithType: EdmRelationshipAttribute.Role2Type
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "关系另一端的实体的类型。"
  remarks: "可以按任何顺序定义定义关联的相关的端的属性。       类型名称由指定`Type`属性`End`概念模型中定义此关系的关联中的元素。 有关详细信息，请参阅[CSDL、 SSDL 和 MSL 规范](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public Type Role2Type { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>类型 t 的关联另一端的对象。</xref:System.Type>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.RelationshipMultiplicity
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipMultiplicity
  nameWithType: RelationshipMultiplicity
  fullName: System.Data.Metadata.Edm.RelationshipMultiplicity
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: IsForeignKey
  nameWithType: EdmRelationshipAttribute.IsForeignKey
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: RelationshipName
  nameWithType: EdmRelationshipAttribute.RelationshipName
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: RelationshipNamespaceName
  nameWithType: EdmRelationshipAttribute.RelationshipNamespaceName
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Multiplicity
  nameWithType: EdmRelationshipAttribute.Role1Multiplicity
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Name
  nameWithType: EdmRelationshipAttribute.Role1Name
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Type
  nameWithType: EdmRelationshipAttribute.Role1Type
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Multiplicity
  nameWithType: EdmRelationshipAttribute.Role2Multiplicity
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Name
  nameWithType: EdmRelationshipAttribute.Role2Name
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Type
  nameWithType: EdmRelationshipAttribute.Role2Type
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: EdmRelationshipAttribute
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: IsForeignKey
  nameWithType: EdmRelationshipAttribute.IsForeignKey
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: RelationshipName
  nameWithType: EdmRelationshipAttribute.RelationshipName
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: RelationshipNamespaceName
  nameWithType: EdmRelationshipAttribute.RelationshipNamespaceName
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Multiplicity
  nameWithType: EdmRelationshipAttribute.Role1Multiplicity
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Name
  nameWithType: EdmRelationshipAttribute.Role1Name
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Type
  nameWithType: EdmRelationshipAttribute.Role1Type
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Multiplicity
  nameWithType: EdmRelationshipAttribute.Role2Multiplicity
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Name
  nameWithType: EdmRelationshipAttribute.Role2Name
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Type
  nameWithType: EdmRelationshipAttribute.Role2Type
