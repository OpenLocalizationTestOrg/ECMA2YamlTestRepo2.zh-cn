### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ITypeLibConverter
  id: ITypeLibConverter
  children:
  - System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  - System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  - System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  - System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  langs:
  - csharp
  name: ITypeLibConverter
  nameWithType: ITypeLibConverter
  fullName: System.Runtime.InteropServices.ITypeLibConverter
  type: Interface
  summary: "提供一组转换为 COM 类型库，反之亦然的托管程序集的服务。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("F1C3BF78-C3E4-11d3-88E7-00902754C43A")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface ITypeLibConverter
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  id: ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  parent: System.Runtime.InteropServices.ITypeLibConverter
  langs:
  - csharp
  name: ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  nameWithType: ITypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  fullName: System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "将程序集转换到 COM 类型库。"
  remarks: "有关详细信息`ITypeLib`，请参阅 MSDN 库中的其现有文档。"
  syntax:
    content: public object ConvertAssemblyToTypeLib (System.Reflection.Assembly assembly, string typeLibName, System.Runtime.InteropServices.TypeLibExporterFlags flags, System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "要转换的程序集。"
    - id: typeLibName
      type: System.String
      description: "生成的类型库的文件名称。"
    - id: flags
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: "A <xref href=&quot;System.Runtime.InteropServices.TypeLibExporterFlags&quot;> </xref>值，该值指示任何特殊的设置。"
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibExporterNotifySink
      description: "<xref href=&quot;System.Runtime.InteropServices.ITypeLibExporterNotifySink&quot;> </xref>由调用方实现接口。"
    return:
      type: System.Object
      description: "实现的对象<xref uid=&quot;langword_csharp_ITypeLib&quot; name=&quot;ITypeLib&quot; href=&quot;&quot;></xref>接口。"
  overload: System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  id: ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  parent: System.Runtime.InteropServices.ITypeLibConverter
  langs:
  - csharp
  name: ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  nameWithType: ITypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  fullName: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "将 COM 类型库转换为程序集。"
  remarks: "有关详细信息`ITypeLib`，请参阅 MSDN 库中的其现有文档。"
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces);
    parameters:
    - id: typeLib
      type: System.Object
      description: "实现的对象<xref uid=&quot;langword_csharp_ITypeLib&quot; name=&quot;ITypeLib&quot; href=&quot;&quot;></xref>接口。"
    - id: asmFileName
      type: System.String
      description: "生成的程序集的文件名称。"
    - id: flags
      type: System.Int32
      description: "A <xref href=&quot;System.Runtime.InteropServices.TypeLibImporterFlags&quot;> </xref>值，该值指示任何特殊的设置。"
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibImporterNotifySink
      description: "<xref href=&quot;System.Runtime.InteropServices.ITypeLibImporterNotifySink&quot;></xref>由调用方实现的接口。"
    - id: publicKey
      type: System.Byte[]
      description: "A <xref uid=&quot;langword_csharp_byte&quot; name=&quot;byte&quot; href=&quot;&quot;> </xref>数组，其中包含的公共密钥。"
    - id: keyPair
      type: System.Reflection.StrongNameKeyPair
      description: "A <xref href=&quot;System.Reflection.StrongNameKeyPair&quot;> </xref>对象，其中包含公钥和私钥的加密密钥对。"
    - id: unsafeInterfaces
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，则接口要求在链接时检查<xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;></xref>权限。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，则接口要求在需要堆栈的运行的时检查审核且更加昂贵，但帮助提供更好的保护。"
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "<xref:System.Reflection.Emit.AssemblyBuilder>对象，其中包含已转换的类型库。</xref:System.Reflection.Emit.AssemblyBuilder>"
  overload: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  id: ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  parent: System.Runtime.InteropServices.ITypeLibConverter
  langs:
  - csharp
  name: ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  nameWithType: ITypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  fullName: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "将 COM 类型库转换为程序集。"
  remarks: "有关详细信息`ITypeLib`，请参阅 MSDN 库中的其现有文档。"
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, System.Runtime.InteropServices.TypeLibImporterFlags flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);
    parameters:
    - id: typeLib
      type: System.Object
      description: "实现的对象<xref uid=&quot;langword_csharp_ITypeLib&quot; name=&quot;ITypeLib&quot; href=&quot;&quot;></xref>接口。"
    - id: asmFileName
      type: System.String
      description: "生成的程序集的文件名称。"
    - id: flags
      type: System.Runtime.InteropServices.TypeLibImporterFlags
      description: "A <xref href=&quot;System.Runtime.InteropServices.TypeLibImporterFlags&quot;> </xref>值，该值指示任何特殊的设置。"
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibImporterNotifySink
      description: "<xref href=&quot;System.Runtime.InteropServices.ITypeLibImporterNotifySink&quot;></xref>由调用方实现的接口。"
    - id: publicKey
      type: System.Byte[]
      description: "A <xref uid=&quot;langword_csharp_byte&quot; name=&quot;byte&quot; href=&quot;&quot;> </xref>数组，其中包含的公共密钥。"
    - id: keyPair
      type: System.Reflection.StrongNameKeyPair
      description: "A <xref href=&quot;System.Reflection.StrongNameKeyPair&quot;> </xref>对象，其中包含公钥和私钥的加密密钥对。"
    - id: asmNamespace
      type: System.String
      description: "生成的程序集的命名空间。"
    - id: asmVersion
      type: System.Version
      description: "生成的程序集的版本。 如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，使用类型库的版本。"
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "<xref:System.Reflection.Emit.AssemblyBuilder>对象，其中包含已转换的类型库。</xref:System.Reflection.Emit.AssemblyBuilder>"
  overload: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  id: GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  parent: System.Runtime.InteropServices.ITypeLibConverter
  langs:
  - csharp
  name: GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  nameWithType: ITypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  fullName: System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "获取的名称和代码基的指定的类型库的主互操作程序集。"
  syntax:
    content: public bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);
    parameters:
    - id: g
      type: System.Guid
      description: "类型库的 GUID。"
    - id: major
      type: System.Int32
      description: "主版本号，类型库。"
    - id: minor
      type: System.Int32
      description: "类型库次版本号。"
    - id: lcid
      type: System.Int32
      description: "类型库的 LCID。"
    - id: asmName
      type: System.String
      description: "在成功返回时，主互操作程序集的名称与`g`。"
    - id: asmCodeBase
      type: System.String
      description: "在成功返回时，与关联的主互操作程序集的基本代码`g`。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在注册表中; 找到的主互操作程序集否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  parent: System.Runtime.InteropServices.ITypeLibConverter
  isExternal: false
  name: ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  nameWithType: ITypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  fullName: System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.TypeLibExporterFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: TypeLibExporterFlags
  nameWithType: TypeLibExporterFlags
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags
- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ITypeLibExporterNotifySink
  nameWithType: ITypeLibExporterNotifySink
  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink
- uid: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  parent: System.Runtime.InteropServices.ITypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  nameWithType: ITypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  fullName: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
- uid: System.Reflection.Emit.AssemblyBuilder
  parent: System.Reflection.Emit
  isExternal: true
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ITypeLibImporterNotifySink
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ITypeLibImporterNotifySink
  nameWithType: ITypeLibImporterNotifySink
  fullName: System.Runtime.InteropServices.ITypeLibImporterNotifySink
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  parent: System.Runtime.InteropServices.ITypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  nameWithType: ITypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  fullName: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
- uid: System.Runtime.InteropServices.TypeLibImporterFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: TypeLibImporterFlags
  nameWithType: TypeLibImporterFlags
  fullName: System.Runtime.InteropServices.TypeLibImporterFlags
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  parent: System.Runtime.InteropServices.ITypeLibConverter
  isExternal: false
  name: GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  nameWithType: ITypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  fullName: System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib*
  parent: System.Runtime.InteropServices.ITypeLibConverter
  isExternal: false
  name: ConvertAssemblyToTypeLib
  nameWithType: ITypeLibConverter.ConvertAssemblyToTypeLib
- uid: System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly*
  parent: System.Runtime.InteropServices.ITypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly
  nameWithType: ITypeLibConverter.ConvertTypeLibToAssembly
- uid: System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly*
  parent: System.Runtime.InteropServices.ITypeLibConverter
  isExternal: false
  name: GetPrimaryInteropAssembly
  nameWithType: ITypeLibConverter.GetPrimaryInteropAssembly
