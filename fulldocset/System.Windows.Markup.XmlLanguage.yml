### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XmlLanguage
  id: XmlLanguage
  children:
  - System.Windows.Markup.XmlLanguage.Empty
  - System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  - System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  - System.Windows.Markup.XmlLanguage.GetSpecificCulture
  - System.Windows.Markup.XmlLanguage.IetfLanguageTag
  - System.Windows.Markup.XmlLanguage.ToString
  langs:
  - csharp
  name: XmlLanguage
  nameWithType: XmlLanguage
  fullName: System.Windows.Markup.XmlLanguage
  type: Class
  summary: "表示在 XAML 标记中使用的语言标记。"
  remarks: "语言标记可能或可能没有注册<xref:System.Globalization.CultureInfo>XAML 在其中被解释为系统上存在。</xref:System.Globalization.CultureInfo>       此类可用于处理值表示使用`xml:lang`在 XML 中。       在两个字符窗体或窗体连字符的语言区域设置中，可以指定语言标记。 请参阅[RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454)。       请注意，XML 规范允许的空字符串`xml:lang`，不过，不允许使用 RFC 3066; 因此，XmlLanguage 类型允许&quot;&quot;（空属性字符串）。 默认构造 XmlLanguage 行为就像使用构造&quot;&quot;（空字符串）。      <a name=&quot;xamlAttributeUsage_XmlLanguage&quot;></a># # XAML 属性用法```   <object property=&quot;prefix&quot;/>   - or -   <object property=&quot;prefix-subcode&quot;/>   ``` <a name=&quot;xamlValues_XmlLanguage&quot;> </a> # # XAML 值*前缀*语言前缀，使用的 ISO 639-1 语言前缀值。       例如&quot;en&quot;或者&quot;此&quot;。 大写的值接受并转换为小写形式。 这也可能是空的属性，&quot;&quot;。       *子代码*如果提供，前面必须是一个连字符。 然后，由 RFC 3066 定义子代码。 最常见的用法，这是最有可能正确映射到一个<xref:System.Globalization.CultureInfo>，是国家或地区代码，如&quot;-我们&quot;或&quot;-hk&quot;。</xref:System.Globalization.CultureInfo> 大写的值接受并转换为小写形式。"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.XmlLanguageConverter))]

      public class XmlLanguage
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.Empty
  id: Empty
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: Empty
  nameWithType: XmlLanguage.Empty
  fullName: System.Windows.Markup.XmlLanguage.Empty
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "获取静态<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>实例将通过创建<xref:System.Windows.Markup.XmlLanguage.GetLanguage*>具有空的特性字符串作为语言标记。</xref:System.Windows.Markup.XmlLanguage.GetLanguage*>"
  remarks: "此值是有效<xref:System.Windows.Markup.XmlLanguage>对应于<xref:System.String.Empty?displayProperty=fullName>，其<xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A>结果是<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> </xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.Windows.Markup.XmlLanguage>"
  syntax:
    content: public static System.Windows.Markup.XmlLanguage Empty { get; }
    return:
      type: System.Windows.Markup.XmlLanguage
      description: "空语言标记版本<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>，比较操作中使用。"
  overload: System.Windows.Markup.XmlLanguage.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  id: GetEquivalentCulture
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetEquivalentCulture()
  nameWithType: XmlLanguage.GetEquivalentCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetEquivalentCulture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "返回合适的等效<xref:System.Globalization.CultureInfo>此<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>，当且仅当此类<xref:System.Globalization.CultureInfo>为注册<xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>的值<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref> </xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo>"
  remarks: "如果没有等效项<xref:System.Globalization.CultureInfo>可以是生成，此方法将引发异常。</xref:System.Globalization.CultureInfo> 如果你不希望处理的异常，调用<xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A>相反。</xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A>"
  syntax:
    content: public System.Globalization.CultureInfo GetEquivalentCulture ();
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，可以用于采用该类型作为自变量的本地化全球化 API 调用。</xref:System.Globalization.CultureInfo>"
  overload: System.Windows.Markup.XmlLanguage.GetEquivalentCulture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已注册<xref:System.Globalization.CultureInfo>所提供<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>存在，由<xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag*>.</xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag*>调用</xref:System.Globalization.CultureInfo>"
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  id: GetLanguage(System.String)
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetLanguage(String)
  nameWithType: XmlLanguage.GetLanguage(String)
  fullName: System.Windows.Markup.XmlLanguage.GetLanguage(String)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "返回<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>基于一个表示按 RFC 3066 语言的字符串的实例。"
  remarks: "此方法实际上是构造函数。       语言字符串可以为空，否则必须符合[RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454)规则︰ 的第一个子标记必须仅包含[!INCLUDE[TLA#tla_ascii](~/add/includes/tlasharptla-ascii-md.md)]字母。      -其他子标记必须包含[!INCLUDE[TLA#tla_ascii](~/add/includes/tlasharptla-ascii-md.md)]字母或数字。      的由一个连字符分隔子标记。      -每子标记必须是 1 到 8 个字符长。      -允许使用无前导或尾随连字符。"
  syntax:
    content: public static System.Windows.Markup.XmlLanguage GetLanguage (string ietfLanguageTag);
    parameters:
    - id: ietfLanguageTag
      type: System.String
      description: "RFC 3066 语言字符串或空字符串。"
    return:
      type: System.Windows.Markup.XmlLanguage
      description: "一个新<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>与提供的字符串作为其<xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>值。</xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>"
  overload: System.Windows.Markup.XmlLanguage.GetLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ietfLanguageTag</code>参数不能为 null。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ietfLanguageTag</code>参数非空，但不是符合 RFC 3066 中指定的语法。 请参阅备注。"
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture
  id: GetSpecificCulture
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetSpecificCulture()
  nameWithType: XmlLanguage.GetSpecificCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetSpecificCulture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "返回密切相关非特定于<xref:System.Globalization.CultureInfo>此<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>。</xref:System.Globalization.CultureInfo>"
  remarks: "如果此<xref:System.Windows.Markup.XmlLanguage>等于<xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=fullName>则此方法将返回<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> </xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=fullName> </xref:System.Windows.Markup.XmlLanguage>       此方法查找<xref:System.Globalization.CultureInfo>匹配此<xref:System.Windows.Markup.XmlLanguage>。</xref:System.Windows.Markup.XmlLanguage>的最长可能前缀</xref:System.Globalization.CultureInfo>的已注册 如果已注册<xref:System.Globalization.CultureInfo>是非特定 (<xref:System.Globalization.CultureInfo.IsNeutralCulture%2A>是`true`)，然后在调用此方法依靠<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>以便从中映射非特定于<xref:System.Globalization.CultureInfo>到一台特定。</xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> </xref:System.Globalization.CultureInfo.IsNeutralCulture%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: public System.Globalization.CultureInfo GetSpecificCulture ();
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，可以用于本地化全球化[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]采用该类型作为自变量的调用。</xref:System.Globalization.CultureInfo>"
  overload: System.Windows.Markup.XmlLanguage.GetSpecificCulture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "没有相关非特定于<xref:System.Globalization.CultureInfo>注册当前<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref> <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>.</xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*> </xref:System.Globalization.CultureInfo>"
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  id: IetfLanguageTag
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
  fullName: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "获取语言标记的字符串表示。"
  remarks: "此属性可能会返回最初指定的字符串的规范化的版本提供到<xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>。</xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>       此属性也可能返回<xref:System.String.Empty>空字符串如果提供给<xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>.</xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A> </xref:System.String.Empty>"
  syntax:
    content: public string IetfLanguageTag { get; }
    return:
      type: System.String
      description: "语言标记的字符串表示形式。"
  overload: System.Windows.Markup.XmlLanguage.IetfLanguageTag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.ToString
  id: ToString
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: ToString()
  nameWithType: XmlLanguage.ToString()
  fullName: System.Windows.Markup.XmlLanguage.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "返回<xref:System.String>，表示当前<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>。</xref:System.String>"
  remarks: "这将返回<xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A>值的当前<xref:System.Windows.Markup.XmlLanguage>.</xref:System.Windows.Markup.XmlLanguage> </xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>，表示当前<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>。</xref:System.String>"
  overload: System.Windows.Markup.XmlLanguage.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Markup.XmlLanguage.Empty
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: Empty
  nameWithType: XmlLanguage.Empty
  fullName: System.Windows.Markup.XmlLanguage.Empty
- uid: System.Windows.Markup.XmlLanguage
  parent: System.Windows.Markup
  isExternal: false
  name: XmlLanguage
  nameWithType: XmlLanguage
  fullName: System.Windows.Markup.XmlLanguage
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetEquivalentCulture()
  nameWithType: XmlLanguage.GetEquivalentCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetEquivalentCulture()
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetLanguage(String)
  nameWithType: XmlLanguage.GetLanguage(String)
  fullName: System.Windows.Markup.XmlLanguage.GetLanguage(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetSpecificCulture()
  nameWithType: XmlLanguage.GetSpecificCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetSpecificCulture()
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
  fullName: System.Windows.Markup.XmlLanguage.IetfLanguageTag
- uid: System.Windows.Markup.XmlLanguage.ToString
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: ToString()
  nameWithType: XmlLanguage.ToString()
  fullName: System.Windows.Markup.XmlLanguage.ToString()
- uid: System.Windows.Markup.XmlLanguage.Empty*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: Empty
  nameWithType: XmlLanguage.Empty
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetEquivalentCulture
  nameWithType: XmlLanguage.GetEquivalentCulture
- uid: System.Windows.Markup.XmlLanguage.GetLanguage*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetLanguage
  nameWithType: XmlLanguage.GetLanguage
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetSpecificCulture
  nameWithType: XmlLanguage.GetSpecificCulture
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
- uid: System.Windows.Markup.XmlLanguage.ToString*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: ToString
  nameWithType: XmlLanguage.ToString
