### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  id: X509CertificateRecipientClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  langs:
  - csharp
  name: X509CertificateRecipientClientCredential
  nameWithType: X509CertificateRecipientClientCredential
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  type: Class
  summary: "表示客户端用来验证使用 SSL 身份验证服务所出示的证书的设置。 它还包含用于加密发送到使用消息安全的服务的消息客户端显式配置的服务的所有证书。"
  remarks: "此类使用的<xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A><xref:System.ServiceModel.Description.ClientCredentials>类</xref:System.ServiceModel.Description.ClientCredentials>中的属性</xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>"
  example:
  - "This code shows one way to create an instance of this class.  \n  \n [!code-vb[c_CreateSTS#18](~/add/codesnippet/visualbasic/t-system.servicemodel.se_15_1.vb)]\n [!code-cs[c_CreateSTS#18](~/add/codesnippet/csharp/t-system.servicemodel.se_15_1.cs)]"
  syntax:
    content: public sealed class X509CertificateRecipientClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取用于验证使用 SSL 身份验证获得的服务证书的设置。"
  remarks: "<xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>类表示客户端代理用于验证使用 SSL/TLS 协商获取的服务证书的设置。</xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>"
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#21](~/add/codesnippet/csharp/d04fd5a9-6333-4d5a-92f2-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "用于验证使用 SSL 身份验证获得的服务证书的设置。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  id: DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置要用于服务的默认证书。"
  remarks: "对于使用基于证书的消息安全的绑定，此证书用于加密到服务的消息，并预计到客户端的应答进行签名服务使用。"
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#24](~/add/codesnippet/csharp/3f3eeba7-32c2-4573-9477-_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "要用于服务的默认证书。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "试图在凭据为只读时设置。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  id: ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取用于表示服务客户端与之通信的作用域的证书。"
  remarks: "此属性使客户端配置要使用的服务证书根据与它通信的服务的 URL。 这是在已颁发令牌的情况下，客户端可以与多个服务 （终端服务以及中间的安全令牌服务） 进行通信特别有用。 对于使用基于证书的消息安全的绑定，此证书用于加密发送到服务，消息，并预计到客户端的应答进行签名服务使用。       如果绑定需要服务证书，并且在中找到服务 URL 的特定证书`ScopedCertificates`，则使用默认证书。"
  example:
  - "This code shows how to set this property.  \n  \n [!code-cs[c_CreateSTS#33](~/add/codesnippet/csharp/bcde5385-8f2b-4da9-a779-_1.cs)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<Uri,System.Security.Cryptography.X509Certificates.X509Certificate2> ScopedCertificates { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "要使用用于表示客户端与之通信的服务的作用域的证书。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "试图在凭据为只读时设置。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "指定要用于服务的默认证书。 对于使用基于证书的消息安全的绑定，此证书用于加密到服务的消息，并预计到客户端的应答进行签名服务使用。"
  remarks: "此方法从相匹配的指定位置中的存储区获取证书`subjectName`参数。       值为`storeLocation`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreLocation>枚举:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 分配给本地计算机的证书存储。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 使用当前用户 （默认值） 的证书存储区。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       如果系统帐户下运行应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 如果在用户帐户下运行应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       值为`storeName`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreName>枚举。</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#23](~/add/codesnippet/csharp/1bf14924-d231-4bf6-a178-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "使用者可分辨的名称。"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "服务用于获取服务证书的证书存储区位置。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "X.509 证书的名称要打开存储区。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "试图在凭据为只读时设置。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "指定要用于服务的默认证书。 对于使用基于证书的消息安全的绑定，此证书用于加密到服务的消息，并预计到客户端的应答进行签名服务使用。"
  remarks: "此方法从相匹配的指定位置中的存储区获取证书`findType`和`findValue`参数。       值为`storeLocation`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreLocation>枚举:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 分配给本地计算机的证书存储。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 使用当前用户 （默认值） 的证书存储区。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       如果系统帐户下运行应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 如果在用户帐户下运行应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       值为`storeName`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreName>枚举。</xref:System.Security.Cryptography.X509Certificates.StoreName>       值为`findType`都将纳入<xref:System.Security.Cryptography.X509Certificates.X509FindType>枚举。</xref:System.Security.Cryptography.X509Certificates.X509FindType>       最常使用的枚举是<xref:System.Security.Cryptography.X509Certificates.X509FindType>，执行对指定存储区中的证书的使用者名称执行不区分大小写的搜索。</xref:System.Security.Cryptography.X509Certificates.X509FindType> 这可能是不精确的搜索。 如果找到任何证书或多个与条件匹配的证书，<xref:System.InvalidOperationException>引发。</xref:System.InvalidOperationException>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#22](~/add/codesnippet/csharp/7f0910fb-b496-4487-b49c-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "用于获取服务证书的证书存储区服务位置。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "X.509 证书的名称要打开存储区。"
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "要执行的 X.509 搜索的类型。"
    - id: findValue
      type: System.Object
      description: "要在 X.509 证书存储区中搜索的值。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>findValue</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "试图在凭据为只读时设置。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  id: SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "设置证书的使用者名称、 证书存储位置和证书存储名称，并将其存储在集合以用于设置的作用域的 URL。"
  remarks: "值为`storeLocation`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreLocation>枚举:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 分配给本地计算机的证书存储。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 使用当前用户 （默认值） 的证书存储区。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       如果系统帐户下运行应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 如果在用户帐户下运行应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       值为`storeName`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreName>枚举。</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-cs[c_CreateSTS#25](~/add/codesnippet/csharp/7ddc79f9-f97b-42fb-ab5a-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);
    parameters:
    - id: subjectName
      type: System.String
      description: "完全限定的使用者名称中。"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "服务用于获取服务证书的证书存储区位置。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "X.509 证书的名称要打开存储区。"
    - id: targetService
      type: System.Uri
      description: "设置的作用域的 URL。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "试图在凭据为只读时设置。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  id: SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "设置证书的证书存储位置、 证书存储名称、 类型的 X.509 搜索和值来进行搜索，并将其存储在集合以用于设置的作用域的 URL。"
  remarks: "值为`storeLocation`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreLocation>枚举:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 分配给本地计算机的证书存储。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 使用当前用户 （默认值） 的证书存储区。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       如果系统帐户下运行应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 如果在用户帐户下运行应用程序，然后证书通常是在<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       值为`storeName`都将纳入<xref:System.Security.Cryptography.X509Certificates.StoreName>枚举。</xref:System.Security.Cryptography.X509Certificates.StoreName>       值为`findType`都将纳入<xref:System.Security.Cryptography.X509Certificates.X509FindType>枚举。</xref:System.Security.Cryptography.X509Certificates.X509FindType>       最常使用的枚举是<xref:System.Security.Cryptography.X509Certificates.X509FindType>，执行对指定存储区中的证书的使用者名称执行不区分大小写的搜索。</xref:System.Security.Cryptography.X509Certificates.X509FindType> 这可能是不精确的搜索。 如果找到任何证书或多个与条件匹配的证书，<xref:System.InvalidOperationException>将引发。</xref:System.InvalidOperationException>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-vb[c_CreateSTS#20](~/add/codesnippet/visualbasic/75f932c5-822c-4f8b-9c16-_1.vb)]\n [!code-cs[c_CreateSTS#20](~/add/codesnippet/csharp/75f932c5-822c-4f8b-9c16-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "服务用于获取服务证书的证书存储区位置。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "X.509 证书的名称要打开存储区。"
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "要执行的 X.509 搜索的类型。"
    - id: findValue
      type: System.Object
      description: "要在 X.509 证书存储区中搜索的值。"
    - id: targetService
      type: System.Uri
      description: "设置的作用域的 URL。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "试图在凭据为只读时设置。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  id: SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "获取或设置要使用的 SSL 证书验证程序。"
  remarks: "此属性，可使用 WCF X509CertificateValidator 来验证 WCF 客户端上的服务器证书。"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "A <xref href=&quot;System.ServiceModel.Security.X509ServiceCertificateAuthentication&quot;> </xref>实例。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ServiceCertificateAuthentication
  nameWithType: X509ServiceCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Uri,X509Certificate2>
  nameWithType: Dictionary<Uri,X509Certificate2>
  fullName: System.Collections.Generic.Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
