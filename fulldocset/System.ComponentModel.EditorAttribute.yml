### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EditorAttribute
  id: EditorAttribute
  children:
  - System.ComponentModel.EditorAttribute.#ctor
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.EditorAttribute.EditorBaseTypeName
  - System.ComponentModel.EditorAttribute.EditorTypeName
  - System.ComponentModel.EditorAttribute.Equals(System.Object)
  - System.ComponentModel.EditorAttribute.GetHashCode
  - System.ComponentModel.EditorAttribute.TypeId
  langs:
  - csharp
  name: EditorAttribute
  nameWithType: EditorAttribute
  fullName: System.ComponentModel.EditorAttribute
  type: Class
  summary: "指定要使用的属性进行更改的编辑器。 此类不能被继承。"
  remarks: "当编辑属性时，可视化设计器中应创建指定编辑器对话框中或下拉窗口中的新的实例。       使用<xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A>属性来查找此编辑器的基类型。</xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> 唯一可用的基类型是<xref:System.Drawing.Design.UITypeEditor>.</xref:System.Drawing.Design.UITypeEditor>       使用<xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>属性获取与此属性关联的编辑器的类型的名称。</xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>       有关使用属性的一般信息。 请参阅[属性](~/add/includes/ajax-current-ext-md.md)。 设计时特性的详细信息，请参阅[特性和设计时支持](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example creates the `MyImage` class. The class is marked with an EditorAttribute that specifies the <xref:System.Drawing.Design.ImageEditor> as its editor.  \n  \n [!code-cs[Classic EditorAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._81_1.cs)]\n [!code-cpp[Classic EditorAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._81_1.cpp)]\n [!code-vb[Classic EditorAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._81_1.vb)]  \n  \n The following code example creates an instance of the `MyImage` class, gets the attributes for the class, and then prints the name of the editor used by `myNewImage`.  \n  \n [!code-cs[Classic EditorAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._81_2.cs)]\n [!code-cpp[Classic EditorAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._81_2.cpp)]\n [!code-vb[Classic EditorAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._81_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=true)]

      public sealed class EditorAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.EditorAttribute&quot;></xref>使用默认编辑器，这是没有编辑器的类。"
  syntax:
    content: public EditorAttribute ();
    parameters: []
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.EditorAttribute&quot;></xref>类的类型名称和的编辑器基类型名称。"
  remarks: "`typeName`参数必须采用<xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>格式。</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       <xref:System.Type>由`typeName`参数必须派生自或实现基的类。</xref:System.Type>       <xref:System.Type>由`baseTypeName`参数用于作为键查找特定的编辑器，因为数据类型可以有多个与其关联的编辑器</xref:System.Type> 这可以是任何类，但通常是<xref:System.Drawing.Design.UITypeEditor>或<xref:System.ComponentModel.ComponentEditor>.</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public EditorAttribute (string typeName, string baseTypeName);
    parameters:
    - id: typeName
      type: System.String
      description: "编辑器的完全限定的类型名称。"
    - id: baseTypeName
      type: System.String
      description: "基类或接口将用作查找键编辑器的完全限定的类型名称。 此类必须是或派生自<xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>。"
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.EditorAttribute&quot;></xref>具有类型名称和基类型的类。"
  remarks: "`typeName`参数必须采用<xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>格式。</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       <xref:System.Type>由`typeName`必须派生自或实现基的类。</xref:System.Type>       `baseType`参数用于作为键查找特定的编辑器，因为数据类型可以有多个与之关联的编辑器。"
  syntax:
    content: public EditorAttribute (string typeName, Type baseType);
    parameters:
    - id: typeName
      type: System.String
      description: "编辑器的完全限定的类型名称。"
    - id: baseType
      type: System.Type
      description: "<xref:System.Type>的基类或接口使用编辑器作为查找键。</xref:System.Type> 此类必须是或派生自<xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>。"
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.EditorAttribute&quot;></xref>类的类型和基类型。"
  remarks: "<xref:System.Type>由`type`参数必须派生自或实现基的类。</xref:System.Type>       `baseType`参数用于作为键查找特定的编辑器，因为数据类型可以有多个与之关联的编辑器。"
  syntax:
    content: public EditorAttribute (Type type, Type baseType);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>表示类型的编辑器。</xref:System.Type>"
    - id: baseType
      type: System.Type
      description: "<xref:System.Type>的基类或接口使用编辑器作为查找键。</xref:System.Type> 此类必须是或派生自<xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>。"
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  id: EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取作为此编辑器查找键的接口的基类的名称。"
  remarks: "EditorBaseTypeName 属性是程序集限定的类型名称。 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]提供<xref:System.Drawing.Design.UITypeEditor>和<xref:System.ComponentModel.ComponentEditor>为有效的基类，但任何值都是有效。</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public string EditorBaseTypeName { get; }
    return:
      type: System.String
      description: "基类或接口作为此编辑器查找键名称。"
  overload: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  id: EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取名称中的编辑器类&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt;格式。"
  syntax:
    content: public string EditorTypeName { get; }
    return:
      type: System.String
      description: "中的编辑器类的名称&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt;格式。"
  overload: System.ComponentModel.EditorAttribute.EditorTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回给定对象的值是否等于当前<xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref>。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要测试的值相等性的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果给定的对象的值是否等于当前对象;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.EditorAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回此实例的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.ComponentModel.EditorAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取此特性类型的唯一 ID。"
  remarks: "TypeId 属性通过筛选算法用于标识具有相同的类型的两个特性。 对于大多数属性，这只返回<xref:System.Type>属性的实例。</xref:System.Type> <xref:System.ComponentModel.EditorAttribute>重写此特性以包含编辑器基类型的类型。</xref:System.ComponentModel.EditorAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "此特性类型唯一 ID。"
  overload: System.ComponentModel.EditorAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.EditorAttribute.#ctor
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.EditorAttribute.TypeId
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
- uid: System.ComponentModel.EditorAttribute.#ctor*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute
  nameWithType: EditorAttribute.EditorAttribute
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals
  nameWithType: EditorAttribute.Equals
- uid: System.ComponentModel.EditorAttribute.GetHashCode*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: EditorAttribute.GetHashCode
- uid: System.ComponentModel.EditorAttribute.TypeId*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
