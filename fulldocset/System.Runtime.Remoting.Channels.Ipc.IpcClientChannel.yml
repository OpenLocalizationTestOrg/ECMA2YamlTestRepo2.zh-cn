### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  id: IpcClientChannel
  children:
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)
  langs:
  - csharp
  name: IpcClientChannel
  nameWithType: IpcClientChannel
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  type: Class
  summary: "实现客户端通道使用 IPC 协议传输消息的远程调用。"
  remarks: ".Net Framework 远程处理基础结构使用的通道用于传输远程调用。 当客户端调用远程对象时，则会将调用序列化到一条消息是由客户端通道发送和接收的服务器信道。 收到的消息后，它是反序列化和处理。 任何返回的值是由服务器通道传输和接收的客户端通道。       IpcClientChannel 类使用同一台计算机上的应用程序域之间传输消息的 Windows 进程间通信 (IPC) 系统。 同一台计算机上的应用程序域之间进行通信，IPC 通道时，TCP 或 HTTP 通道比快得多。       若要执行其他处理的消息在客户端中，你可以指定的实现<xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>通过 IpcClientChannel 对象处理完所有消息都传递接口。</xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>       默认情况下，IpcClientChannel 类使用二进制格式化程序来序列化所有消息。       对象有关联的配置属性，可以在设置 IpcClientChannel 运行时在配置文件 (通过调用静态<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName>方法) 或以编程方式 (通过将传递<xref:System.Collections.IDictionary>集合到<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A>构造函数)。</xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> </xref:System.Collections.IDictionary> </xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> 有关这些配置属性的列表，请参阅的文档<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A>构造函数。</xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A>"
  example:
  - "The following code example shows how to use the IpcClientChannel class.  \n  \n [!code-cs[Remoting_Ipc#20](~/add/codesnippet/csharp/t-system.runtime.remotin_5_1.cs)]\n [!code-cpp[Remoting_Ipc#20](~/add/codesnippet/cpp/t-system.runtime.remotin_5_1.cpp)]  \n  \n The preceding code uses the following remote object.  \n  \n [!code-cpp[Remoting_Ipc#0](~/add/codesnippet/cpp/t-system.runtime.remotin_5_2.cpp)]\n [!code-cs[Remoting_Ipc#0](~/add/codesnippet/csharp/t-system.runtime.remotin_5_2.cs)]  \n  \n For an example of a server that exposes this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>."
  syntax:
    content: 'public class IpcClientChannel : System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelSender
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: IpcClientChannel()
  nameWithType: IpcClientChannel.IpcClientChannel()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;></xref>类。"
  remarks: "配置属性<xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>实例返回此构造函数的所有设置为其默认值。</xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 下表显示每个配置属性的默认值。      |配置属性 |说明 |  |----------------------------|-----------------|  |`name`|默认名称为&quot;ipc 客户端&quot;。 每个通道都必须具有唯一的名称。 |  |`priority`|默认优先级为 1。 |"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cs[Remoting_Ipc#21](~/add/codesnippet/csharp/m-system.runtime.remotin_34_1.cs)]\n [!code-cpp[Remoting_Ipc#21](~/add/codesnippet/cpp/m-system.runtime.remotin_34_1.cpp)]"
  syntax:
    content: public IpcClientChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  nameWithType: IpcClientChannel.IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcClientChannel&quot;></xref>使用指定的配置属性和接收器的类。"
  remarks: "有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。       如果不需要接收器功能，设置`sinkProvider`参数`null`。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/add/codesnippet/cpp/e5e9822a-6bc5-4440-94c1-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/add/codesnippet/csharp/e5e9822a-6bc5-4440-94c1-_1.cs)]"
  syntax:
    content: public IpcClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>集合，它指定要使用的通道的配置属性的值。</xref:System.Collections.IDictionary>"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>要由通道实现。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  id: '#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: IpcClientChannel(String,IClientChannelSinkProvider)
  nameWithType: IpcClientChannel.IpcClientChannel(String,IClientChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel(String,IClientChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "初始化的新实例<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcClientChannel&quot;></xref>具有指定的名称和接收器的类。"
  remarks: "此构造函数设置<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A>属性使用`name`参数。</xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> 如果你想要注册多个通道，每个通道都必须具有唯一的名称。       如果不需要接收器功能，设置`sinkProvider`参数`null`。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/add/codesnippet/cpp/c7989d9c-5253-4e00-b8ab-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/add/codesnippet/csharp/c7989d9c-5253-4e00-b8ab-_1.cs)]"
  syntax:
    content: public IpcClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: "通道的名称。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IClientChannelSinkProvider&quot;> </xref>要由通道实现。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IpcClientChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "获取当前通道的名称。"
  remarks: "每个已注册的通道具有一个唯一名称。 该名称用于检索特定通道时调用<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=fullName>方法。</xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=fullName> 默认名称为&quot;ipc 客户端&quot;。"
  example:
  - "The following code example shows how to use the ChannelName property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/add/codesnippet/csharp/p-system.runtime.remotin_26_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/add/codesnippet/cpp/p-system.runtime.remotin_26_1.cpp)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>实例，其中包含的通道的名称。</xref:System.String>"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IpcClientChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "获取当前通道的优先级。"
  remarks: "优先级控制在其中竞争的客户端连接到给定的终结点; 顺序更高的优先级通道之前较低的优先级通道连接。 默认优先级为 1;允许负的优先级。"
  example:
  - "The following code example shows how to use the ChannelPriority property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/add/codesnippet/csharp/p-system.runtime.remotin_86_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/add/codesnippet/cpp/p-system.runtime.remotin_86_1.cpp)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "一个整数，指示指定给通道的优先级。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  id: CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: CreateMessageSink(String,Object,String)
  nameWithType: IpcClientChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(String,Object,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "返回将消息传送到指定的 URL 或通道数据对象的通道消息接收器。"
  remarks: "CreateMessageSink 方法返回的通道消息接收器将消息传送到指定的 URL 或通道数据对象。 如果`uri`参数是`null`，`remoteChannelData`用作接收器的目标。 请`url`或`remoteChannelData`参数可以是`null`，但不是两者。"
  example:
  - "The following code example shows how to use the CreateMessageSink method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/add/codesnippet/csharp/26558359-cde8-4500-9c80-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/add/codesnippet/cpp/26558359-cde8-4500-9c80-_1.cpp)]"
  syntax:
    content: public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "新的接收器将消息传送 URL。 此参数可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: remoteChannelData
      type: System.Object
      description: "远程主机新接收器将将消息传递到通道数据对象。 此参数可以为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: objectURI
      type: System.String
      description: "此方法返回时，包含新的通道消息接收器将消息传送到指定的 URL 或通道数据对象的 URI。 此参数传递时未经初始化。"
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "通道消息接收器将消息传送到指定的 URL 或通道数据对象。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "未实现提供的接收器<xref href=&quot;System.Runtime.Remoting.Messaging.IMessageSink&quot;> </xref>。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: IpcClientChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "获取或设置一个布尔值，该值指示当前的通道是否安全。"
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示当前实例是否安全。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: IpcClientChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "从指定的 URL 中提取的通道 URI 和远程的已知对象 URI。"
  remarks: ''
  example:
  - "The following code example shows how to use the Parse method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/add/codesnippet/csharp/a3ba2658-4290-43bf-abd5-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/add/codesnippet/cpp/a3ba2658-4290-43bf-abd5-_1.cpp)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "要从中提取对象 URI URL。"
    - id: objectURI
      type: System.String
      description: "此方法返回时，<xref:System.String>实例，保存远程的已知对象的 URI。</xref:System.String> 此参数传递时未经初始化。"
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含的通道 URI。</xref:System.String>"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IpcClientChannel()
  nameWithType: IpcClientChannel.IpcClientChannel()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel()
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  nameWithType: IpcClientChannel.IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel(IDictionary,IClientChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IClientChannelSinkProvider
  nameWithType: IClientChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IpcClientChannel(String,IClientChannelSinkProvider)
  nameWithType: IpcClientChannel.IpcClientChannel(String,IClientChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel(String,IClientChannelSinkProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcClientChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcClientChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: CreateMessageSink(String,Object,String)
  nameWithType: IpcClientChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(String,Object,String)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcClientChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: IpcClientChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IpcClientChannel
  nameWithType: IpcClientChannel.IpcClientChannel
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcClientChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcClientChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: CreateMessageSink
  nameWithType: IpcClientChannel.CreateMessageSink
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcClientChannel.IsSecured
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: Parse
  nameWithType: IpcClientChannel.Parse
