### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.IAssemblyPostProcessor
  id: IAssemblyPostProcessor
  children:
  - System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  langs:
  - csharp
  name: IAssemblyPostProcessor
  nameWithType: IAssemblyPostProcessor
  fullName: System.Web.Compilation.IAssemblyPostProcessor
  type: Interface
  summary: "定义一个类可实现来处理后生成的程序集的程序集的方法。"
  remarks: "在已编译之后，实现此接口的类可以访问程序集。 <xref:System.Web.Compilation.AssemblyBuilder>类编译的程序集，然后检查以查看是否已在 Web 配置文件中注册 IAssemblyPostProcessor 接口。</xref:System.Web.Compilation.AssemblyBuilder> 如果是这样，<xref:System.Web.Compilation.AssemblyBuilder>实例调用<xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>IAssemblyPostProcessor 接口执行任何操作之后编译和之前加载程序集的方法。</xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> </xref:System.Web.Compilation.AssemblyBuilder> 例如，探查器工具可以实现此接口可建立在程序集中的探测。       注册 IAssemblyPostProcessor 接口时，ASP.NET 应用程序和其程序集将始终编译在调试模式下。"
  example:
  - "The following code example demonstrates how to create an implementation of the IAssemblyPostProcessor interface, and register it in the Web.config file of a Web application.  \n  \n The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the IAssemblyPostProcessor interface. This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.  \n  \n [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/visualbasic/t-system.web.compilation_8_1.vb)]\n [!code-cs[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/csharp/t-system.web.compilation_8_1.cs)]  \n  \n Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`. Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.  \n  \n```  \n<compilation debug=\"true\" assemblyPostProcessorType=\"Samples.Process.postProcessTest\" />  \n```  \n  \n When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\\compile."
  syntax:
    content: 'public interface IAssemblyPostProcessor : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  id: PostProcessAssembly(System.String)
  parent: System.Web.Compilation.IAssemblyPostProcessor
  langs:
  - csharp
  name: PostProcessAssembly(String)
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly(String)
  fullName: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "程序集加载以允许实现的类来修改程序集之前调用。"
  remarks: "<xref:System.Web.Compilation.AssemblyBuilder>类调用此方法已编译的程序集之后。</xref:System.Web.Compilation.AssemblyBuilder> 加载程序集应包括在此方法之前，先要执行任何操作。"
  example:
  - "The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.  \n  \n The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface. This class performs the simple action of writing a file when the PostProcessAssembly method is called.  \n  \n [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/visualbasic/30b129b5-63b2-48bd-ad9f-_1.vb)]\n [!code-cs[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/csharp/30b129b5-63b2-48bd-ad9f-_1.cs)]  \n  \n Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`. Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.  \n  \n```  \n<compilation debug=\"true\" assemblyPostProcessorType=\"Samples.Process.postProcessTest\" />  \n```  \n  \n When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\\compile."
  syntax:
    content: public void PostProcessAssembly (string path);
    parameters:
    - id: path
      type: System.String
      description: "程序集的路径。"
  overload: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  parent: System.Web.Compilation.IAssemblyPostProcessor
  isExternal: false
  name: PostProcessAssembly(String)
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly(String)
  fullName: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly*
  parent: System.Web.Compilation.IAssemblyPostProcessor
  isExternal: false
  name: PostProcessAssembly
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly
