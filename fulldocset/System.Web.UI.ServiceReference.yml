### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ServiceReference
  id: ServiceReference
  children:
  - System.Web.UI.ServiceReference.#ctor
  - System.Web.UI.ServiceReference.#ctor(System.String)
  - System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  - System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  - System.Web.UI.ServiceReference.InlineScript
  - System.Web.UI.ServiceReference.Path
  - System.Web.UI.ServiceReference.ToString
  langs:
  - csharp
  name: ServiceReference
  nameWithType: ServiceReference
  fullName: System.Web.UI.ServiceReference
  type: Class
  summary: "在网页中注册 Web 服务以供使用。"
  remarks: "若要从 ECMAScript (JavaScript) 调用 Web 服务方法，你必须在 ASP.NET 页中包含的服务引用，并将应用<xref:System.Web.Script.Services.ScriptServiceAttribute>属性设为 Web 服务类定义。</xref:System.Web.Script.Services.ScriptServiceAttribute> 如果包括对中的 Web 服务的服务引用<xref:System.Web.UI.ScriptManager>或<xref:System.Web.UI.ScriptManagerProxy>ASP.NET 页中，对象将在浏览器中实例化的 JavaScript 控件。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>       代理对象将用于执行以下操作:-请异步请求在 JavaScript 中的对 Web 服务方法，-初始化实例的代理的服务器数据类型，尤其是有关使用作为输入的参数调用 Web 方法。      1> [!NOTE]&1;> ServiceReference 控件仅用于相同的域中的服务。       你可以通过添加以声明方式定义的 Web 服务位置`<asp:ServiceReference>`元素`<Services>`内的元素`<asp:ScriptManager>`元素上的页上，然后设置其<xref:System.Web.UI.ServiceReference.Path%2A>特性，如下面的示例中所示。</xref:System.Web.UI.ServiceReference.Path%2A>      ```   <asp:ScriptManager runat=&quot;server&quot; ID=&quot;scriptManager&quot;>     <Services>       <asp:ServiceReference Path=&quot;~/WebServices/SimpleWebService.asmx&quot; />     </Services>   </asp:ScriptManager>   ```你可以使用<xref:System.Web.UI.ServiceReference.InlineScript%2A>属性指示是否将代理生成脚本包含在作为内联脚本块页中或通过单独的请求获取。</xref:System.Web.UI.ServiceReference.InlineScript%2A>       你可以以编程方式添加 ServiceReference 对象，通过<xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName>或<xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName>通过使用<xref:System.Collections.ObjectModel.Collection%601.Add%2A><xref:System.Web.UI.ServiceReferenceCollection>类</xref:System.Web.UI.ServiceReferenceCollection>的方法</xref:System.Collections.ObjectModel.Collection%601.Add%2A>的集合</xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName></xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName>"
  example:
  - "The following example demonstrates how to add a reference to a Web service in the page markup to call the Web service methods from script.  \n  \n [!code-vb[System.Web.Script.Services.ScriptMethodAttribute#5](~/add/codesnippet/visualbasic/t-system.web.ui.servicer_1.aspx)]\n [!code-cs[System.Web.Script.Services.ScriptMethodAttribute#5](~/add/codesnippet/csharp/t-system.web.ui.servicer_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      public class ServiceReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.#ctor
  id: '#ctor'
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ServiceReference()
  nameWithType: ServiceReference.ServiceReference()
  fullName: System.Web.UI.ServiceReference.ServiceReference()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.ServiceReference&quot;></xref>类。"
  syntax:
    content: public ServiceReference ();
    parameters: []
  overload: System.Web.UI.ServiceReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ServiceReference(String)
  nameWithType: ServiceReference.ServiceReference(String)
  fullName: System.Web.UI.ServiceReference.ServiceReference(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.ServiceReference&quot;></xref>使用指定路径的类。"
  syntax:
    content: public ServiceReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "Web 服务的位置。"
  overload: System.Web.UI.ServiceReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  id: GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: GetProxyScript(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyScript(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyScript(ScriptManager,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "提供了来自派生的代理脚本<xref href=&quot;System.Web.UI.ServiceReference&quot;></xref>可以作为自定义项中被重写的对象。"
  remarks: "`containingControl`参数是<xref:System.Web.UI.ScriptManager>对象或<xref:System.Web.UI.ScriptManagerProxy>对象在其上的<xref:System.Web.UI.ServiceReference>定义对象。</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> 相对 URL 解析，应作为基础使用它。"
  syntax:
    content: protected virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "<xref href=&quot;System.Web.UI.ScriptManager&quot;> </xref>页上的控件。"
    - id: containingControl
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
    return:
      type: System.String
      description: "代理服务器脚本中。"
  overload: System.Web.UI.ServiceReference.GetProxyScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  id: GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: GetProxyUrl(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyUrl(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyUrl(ScriptManager,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "提供来自派生的代理 URL <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref>对象可以重写为自定义项。"
  remarks: "`containingControl`参数是<xref:System.Web.UI.ScriptManager>对象或<xref:System.Web.UI.ScriptManagerProxy>对象在其上的<xref:System.Web.UI.ServiceReference>对象定义和应用于相对 URL 解析为基础。</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: protected virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "<xref href=&quot;System.Web.UI.ScriptManager&quot;> </xref>页上的控件。"
    - id: containingControl
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
    return:
      type: System.String
      description: "代理 URL。"
  overload: System.Web.UI.ServiceReference.GetProxyUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.InlineScript
  id: InlineScript
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
  fullName: System.Web.UI.ServiceReference.InlineScript
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示代理生成脚本是否包含在作为内联脚本块页中获取通过单独的请求。"
  remarks: "InlineScript 属性未声明，默认值时， `false`。       当 InlineScript 设置为`false`，用于生成 ECMAScript (JavaScript) 代理脚本为单独的脚本文件下载到服务器的其他请求的。 如果你使用浏览器缓存，则此选项很有用，当多个网页使用相同的服务引用。       当 InlineScript 设置为`true`、 脚本时，作为内联脚本块在页中包含在代理生成。 通过减少的网络请求数，尤其是在页中有多个服务引用，而其他页不引用相同的服务，这可以提高服务器性能。 此外，<xref:System.Web.UI.ServiceReference.Path%2A>时 InlineScript 设置为属性必须设置为相对路径`true`。</xref:System.Web.UI.ServiceReference.Path%2A>"
  syntax:
    content: public virtual bool InlineScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果代理生成脚本时，包含作为内联脚本块中页;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果代理生成脚本获取通过单独的请求。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ServiceReference.InlineScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.Path
  id: Path
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: Path
  nameWithType: ServiceReference.Path
  fullName: System.Web.UI.ServiceReference.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置所引用的 Web 服务的路径。"
  remarks: "路径属性仅指向本地 Web 服务。 换而言之，此属性仅可以指向与启用了 AJAX 的 ASP.NET Web 应用程序相同的域中的 Web 服务。 路径可以是相对、 相对于应用程序、 域相对或绝对路径。       如果<xref:System.Web.UI.ServiceReference.InlineScript%2A>属性设置为`true`，则必须使用指向相同的 Web 应用程序作为包含的页的相对路径<xref:System.Web.UI.ServiceReference>实例。</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ServiceReference.InlineScript%2A>"
  syntax:
    content: public virtual string Path { get; set; }
    return:
      type: System.String
      description: "所引用的 Web 服务的路径。"
  overload: System.Web.UI.ServiceReference.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.ToString
  id: ToString
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ToString()
  nameWithType: ServiceReference.ToString()
  fullName: System.Web.UI.ServiceReference.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "返回表示的值的字符串<xref:System.Web.UI.ServiceReference.Path*>属性或类型名称。</xref:System.Web.UI.ServiceReference.Path*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "值<> *1> 属性，如果定义; 否则为值<> *1> 类属性。"
  overload: System.Web.UI.ServiceReference.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.ServiceReference.#ctor
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference()
  nameWithType: ServiceReference.ServiceReference()
  fullName: System.Web.UI.ServiceReference.ServiceReference()
- uid: System.Web.UI.ServiceReference.#ctor(System.String)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference(String)
  nameWithType: ServiceReference.ServiceReference(String)
  fullName: System.Web.UI.ServiceReference.ServiceReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyScript(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyScript(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyScript(ScriptManager,Control)
- uid: System.Web.UI.ScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyUrl(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyUrl(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyUrl(ScriptManager,Control)
- uid: System.Web.UI.ServiceReference.InlineScript
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
  fullName: System.Web.UI.ServiceReference.InlineScript
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ServiceReference.Path
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: Path
  nameWithType: ServiceReference.Path
  fullName: System.Web.UI.ServiceReference.Path
- uid: System.Web.UI.ServiceReference.ToString
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ToString()
  nameWithType: ServiceReference.ToString()
  fullName: System.Web.UI.ServiceReference.ToString()
- uid: System.Web.UI.ServiceReference.#ctor*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference
  nameWithType: ServiceReference.ServiceReference
- uid: System.Web.UI.ServiceReference.GetProxyScript*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyScript
  nameWithType: ServiceReference.GetProxyScript
- uid: System.Web.UI.ServiceReference.GetProxyUrl*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyUrl
  nameWithType: ServiceReference.GetProxyUrl
- uid: System.Web.UI.ServiceReference.InlineScript*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
- uid: System.Web.UI.ServiceReference.Path*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: Path
  nameWithType: ServiceReference.Path
- uid: System.Web.UI.ServiceReference.ToString*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ToString
  nameWithType: ServiceReference.ToString
