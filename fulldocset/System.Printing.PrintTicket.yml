### YamlMime:ManagedReference
items:
- uid: System.Printing.PrintTicket
  id: PrintTicket
  children:
  - System.Printing.PrintTicket.#ctor
  - System.Printing.PrintTicket.#ctor(System.IO.Stream)
  - System.Printing.PrintTicket.Clone
  - System.Printing.PrintTicket.Collation
  - System.Printing.PrintTicket.CopyCount
  - System.Printing.PrintTicket.DeviceFontSubstitution
  - System.Printing.PrintTicket.Duplexing
  - System.Printing.PrintTicket.GetXmlStream
  - System.Printing.PrintTicket.InputBin
  - System.Printing.PrintTicket.OutputColor
  - System.Printing.PrintTicket.OutputQuality
  - System.Printing.PrintTicket.PageBorderless
  - System.Printing.PrintTicket.PageMediaSize
  - System.Printing.PrintTicket.PageMediaType
  - System.Printing.PrintTicket.PageOrder
  - System.Printing.PrintTicket.PageOrientation
  - System.Printing.PrintTicket.PageResolution
  - System.Printing.PrintTicket.PageScalingFactor
  - System.Printing.PrintTicket.PagesPerSheet
  - System.Printing.PrintTicket.PagesPerSheetDirection
  - System.Printing.PrintTicket.PhotoPrintingIntent
  - System.Printing.PrintTicket.PropertyChanged
  - System.Printing.PrintTicket.SaveTo(System.IO.Stream)
  - System.Printing.PrintTicket.Stapling
  - System.Printing.PrintTicket.TrueTypeFontMode
  langs:
  - csharp
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
  type: Class
  summary: "定义打印作业的设置。"
  remarks: "PrintTicket 对象是某种类型的调用的 XML 文档的轻松-到-工作的带有表示*PrintTicket 文档*。 后者是一组指令告知如何设置其各种功能 （如分页和装订，双工技术） 的打印机。 例如，若要指示打印机以打开其装订和装订左上角的打印作业，该文档应具有`<JobStapleAllDocuments … >`指定的元素**StapleTopLeft**。 元素，反过来，由表示<xref:System.Printing.PrintTicket.Stapling%2A>PrintTicket 对象属性。</xref:System.Printing.PrintTicket.Stapling%2A> PrintTicket 文档必须符合[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)。       PrintTicket 类使你的应用程序配置打印机的功能而无需进行的任何直接编写 XML<xref:System.IO.Stream>对象。</xref:System.IO.Stream>       家庭和企业的文件和照片打印机的最常用功能的所有由 PrintTicket 类的属性表示。 但是[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)定义多，通常，不功能和它可以进行扩展以便处理 specialty 打印设备的功能。 因此，尽管 PrintTicket 和<xref:System.Printing.PrintCapabilities>类不能被继承，可以扩展[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)能够识别并不表示 PrintTicket 中的打印设备功能或<xref:System.Printing.PrintCapabilities>类。</xref:System.Printing.PrintCapabilities> </xref:System.Printing.PrintCapabilities> 有关详细信息请参阅[NOTINBUILD︰ 如何︰ 打印架构和创建新的打印系统类扩展](http://msdn.microsoft.com/en-us/a3600218-1ea5-478a-9853-6560464f2885)。       **请注意**了采用 PrintTicket 文档的构造函数创建时 PrintTicket 对象 (作为<xref:System.IO.Stream>) 参数，该整个文档存储在中的对象，包括 express 不由任何 PrintTicket 类的公共属性表示的不太常见功能的 XML 元素中的非公共字段</xref:System.IO.Stream> 事实上，如果生成 PrintTicket 文档驱动程序正在使用的专用扩展[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)、 的私人定义标记也存储为非公共 PrintTicket 文档的一部分。      1> [!CAUTION]&1;> 类内<xref:System.Printing>命名空间不支持的 Windows 服务或 ASP.NET 应用程序或服务中的使用。</xref:System.Printing> 尝试使用这些应用程序类型之一中的这些类可能会产生意外的问题，如降低服务性能和运行时异常。       如果你想要从 Windows 窗体应用程序打印，请参阅<xref:System.Drawing.Printing>命名空间。</xref:System.Drawing.Printing>"
  example:
  - "The following example shows how to determine the capabilities of a specific printer and how to configure a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: 'public sealed class PrintTicket : System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers: []
  platform:
  - net462
- uid: System.Printing.PrintTicket.#ctor
  id: '#ctor'
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PrintTicket()
  nameWithType: PrintTicket.PrintTicket()
  fullName: System.Printing.PrintTicket.PrintTicket()
  type: Constructor
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "初始化的新实例<xref href=&quot;System.Printing.PrintTicket&quot;></xref>类。"
  remarks: ''
  example:
  - "The following example shows how to use this constructor while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public PrintTicket ();
    parameters: []
  overload: System.Printing.PrintTicket.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintTicket.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PrintTicket(Stream)
  nameWithType: PrintTicket.PrintTicket(Stream)
  fullName: System.Printing.PrintTicket.PrintTicket(Stream)
  type: Constructor
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "初始化的新实例<xref href=&quot;System.Printing.PrintTicket&quot;></xref>类使用 XML 流 （即包含 PrintTicket 文档） 符合用 XML[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)。"
  remarks: "构造函数不流的读写位置重置回其原始位置。 相应地，你应该重置它调用的构造函数后立即。       整个 PrintTicket 文档存储在中的对象，包括 express 不由任何<xref:System.Printing.PrintTicket>类</xref:System.Printing.PrintTicket>的公共属性表示的不太常见功能的 XML 元素中的非公共字段 事实上，如果生成 PrintTicket 文档驱动程序正在使用的专用扩展[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)、 的私人定义标记也存储为非公共 PrintTicket 文档的一部分。       的文档中，如果有的话，将不验证私有部分由构造函数中，但所有**打印架构**-定义的部分进行验证，包括未由任何<xref:System.Printing.PrintTicket>类</xref:System.Printing.PrintTicket>的公共属性的部分 相应地，<xref:System.FormatException>可能即使所有的公共属性对应的 XML 标记无效时引发。</xref:System.FormatException>       当任何一个的属性时<xref:System.Printing.PrintTicket>写入到，此非公共 PrintTicket 文档也会更改。</xref:System.Printing.PrintTicket>       它是返回的此非公共 PrintTicket 文档<xref:System.Printing.PrintTicket.GetXmlStream%2A>和<xref:System.Printing.PrintTicket.SaveTo%2A>方法。</xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket.GetXmlStream%2A>"
  syntax:
    content: public PrintTicket (System.IO.Stream xmlStream);
    parameters:
    - id: xmlStream
      type: System.IO.Stream
      description: "XML 流，用于描述打印作业并符合打印架构。"
  overload: System.Printing.PrintTicket.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>xmlStream</code>不是有效的 XML。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.Clone
  id: Clone
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: Clone()
  nameWithType: PrintTicket.Clone()
  fullName: System.Printing.PrintTicket.Clone()
  type: Method
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "创建的可修改复本<xref href=&quot;System.Printing.PrintTicket&quot;> </xref>，从而深度复制此对象的值。"
  syntax:
    content: public System.Printing.PrintTicket Clone ();
    parameters: []
    return:
      type: System.Printing.PrintTicket
      description: "当前对象的可修改复本。"
  overload: System.Printing.PrintTicket.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintTicket.Collation
  id: Collation
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: Collation
  nameWithType: PrintTicket.Collation
  fullName: System.Printing.PrintTicket.Collation
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值是否打印机逐份打印其输出。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`DocumentCollate`关键字，不`JobCollateAllDocuments`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.CollationCapability%2A>属性。</xref:System.Printing.PrintCapabilities.CollationCapability%2A>"
  example:
  - "The following example shows how to use this property when testing a printer's capabilities and configuring a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public Nullable<System.Printing.Collation> Collation { get; set; }
    return:
      type: System.Nullable{System.Printing.Collation}
      description: "A <xref href=&quot;System.Printing.Collation&quot;> </xref>值，该值指示是否打印机逐份打印其输出。"
  overload: System.Printing.PrintTicket.Collation*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.Collation&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.CopyCount
  id: CopyCount
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: CopyCount
  nameWithType: PrintTicket.CopyCount
  fullName: System.Printing.PrintTicket.CopyCount
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置针对打印作业的副本数。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`JobCopiesAllDocuments`关键字，不`DocumentCopiesAllPages`关键字，或`PageCopies`关键字。       你可以对其进行测试对打印机的最大使用<xref:System.Printing.PrintCapabilities.MaxCopyCount%2A>属性。</xref:System.Printing.PrintCapabilities.MaxCopyCount%2A>"
  syntax:
    content: public Nullable<int> CopyCount { get; set; }
    return:
      type: System.Nullable{System.Int32}
      description: "可以为 null<xref:System.Int32>值，指定将打印的份数</xref:System.Int32>"
  overload: System.Printing.PrintTicket.CopyCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为小于 1 的值。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.DeviceFontSubstitution
  id: DeviceFontSubstitution
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: DeviceFontSubstitution
  nameWithType: PrintTicket.DeviceFontSubstitution
  fullName: System.Printing.PrintTicket.DeviceFontSubstitution
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值打印机是否用基于设备的基于计算机的上打印作业的字体的字体替换。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageDeviceFontSubstitution`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability%2A>属性。</xref:System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.DeviceFontSubstitution> DeviceFontSubstitution { get; set; }
    return:
      type: System.Nullable{System.Printing.DeviceFontSubstitution}
      description: "A <xref href=&quot;System.Printing.DeviceFontSubstitution&quot;> </xref>值，该值指示设备是否用基于设备的基于计算机的当前打印作业的字体的字体替换。"
  overload: System.Printing.PrintTicket.DeviceFontSubstitution*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.DeviceFontSubstitution&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.Duplexing
  id: Duplexing
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: Duplexing
  nameWithType: PrintTicket.Duplexing
  fullName: System.Printing.PrintTicket.Duplexing
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值哪种类型的双侧打印，如果有的话，打印机时使用的打印作业。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`JobDuplexAllDocumentsContiguously`关键字，不`DocumentDuplex`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.DuplexingCapability%2A>属性。</xref:System.Printing.PrintCapabilities.DuplexingCapability%2A>"
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public Nullable<System.Printing.Duplexing> Duplexing { get; set; }
    return:
      type: System.Nullable{System.Printing.Duplexing}
      description: "A <xref href=&quot;System.Printing.Duplexing&quot;> </xref>值，该值指示什么样的双侧打印，如果有的话，打印机时使用的打印作业。"
  overload: System.Printing.PrintTicket.Duplexing*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.Duplexing&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.GetXmlStream
  id: GetXmlStream
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: GetXmlStream()
  nameWithType: PrintTicket.GetXmlStream()
  fullName: System.Printing.PrintTicket.GetXmlStream()
  type: Method
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "返回<xref:System.IO.MemoryStream>表示的属性值的对象<xref href=&quot;System.Printing.PrintTicket&quot;></xref>作为符合 XML 流[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)。</xref:System.IO.MemoryStream>"
  remarks: "如果任何属性<xref:System.Printing.PrintTicket>是`null`，它们将只需不包含在 XML 标记。</xref:System.Printing.PrintTicket>       如果<xref:System.Printing.PrintTicket>对象使用包含标记元素不表示任何 PrintTicket 文档构造<xref:System.Printing.PrintTicket>类的公共属性，这些元素将包含在此方法返回 PrintTicket 文档。</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintTicket>"
  syntax:
    content: public System.IO.MemoryStream GetXmlStream ();
    parameters: []
    return:
      type: System.IO.MemoryStream
      description: "A<xref:System.IO.MemoryStream>对象，描述与符合 XML 的打印票证[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)。</xref:System.IO.MemoryStream>"
  overload: System.Printing.PrintTicket.GetXmlStream*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintTicket.InputBin
  id: InputBin
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: InputBin
  nameWithType: PrintTicket.InputBin
  fullName: System.Printing.PrintTicket.InputBin
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值哪些输入的 bin （纸盒） 使用。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket> 即，将有没有标记[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的功能`JobInputBin`， `DocumentInputBin`，或`PageInputBin`。       当此属性不是`null`，它将具有以下关系中定义的功能[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)。      -如果 XML 形式<xref:System.Printing.PrintTicket>包含`JobInputBin`，则此属性的值与相同`JobInputBin`(无论是否还有`DocumentInputBin`或`PageInputBin`。</xref:System.Printing.PrintTicket> 中的 XML 版本的标记<xref:System.Printing.PrintTicket>)。</xref:System.Printing.PrintTicket>      -如果没有任何`JobInputBin`标记，但没有`DocumentInputBin`，则此属性的值与相同`DocumentInputBin`(无论是否还有`PageInputBin`标记) 存在。      -如果既无`JobInputBin`也不`DocumentInputBin`标记，但没有`PageInputBin`标记，则此属性具有相同的值`PageInputBin`。       当此属性设置为任何<xref:System.Printing.InputBin>值，然后匹配`JobInputBin`标记将添加到 XML 的打印票证和任何`DocumentInputBin`和`PageInputBin`将删除已存在的标记。</xref:System.Printing.InputBin>       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.InputBinCapability%2A>属性。</xref:System.Printing.PrintCapabilities.InputBinCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.InputBin> InputBin { get; set; }
    return:
      type: System.Nullable{System.Printing.InputBin}
      description: "<xref href=&quot;System.Printing.InputBin&quot;> </xref>值，该值指示使用哪些输入的栏和是否选择了手动或自动。"
  overload: System.Printing.PrintTicket.InputBin*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.InputBin&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.OutputColor
  id: OutputColor
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: OutputColor
  nameWithType: PrintTicket.OutputColor
  fullName: System.Printing.PrintTicket.OutputColor
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值打印机如何处理具有颜色或灰色阴影的内容。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageOutputColor`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.OutputColorCapability%2A>属性。</xref:System.Printing.PrintCapabilities.OutputColorCapability%2A>"
  example:
  - "The following example shows how to use this property to configure a print job.  \n  \n [!code-cs[XpsPrint#OutputColorAndPageOrientation](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#outputcolorandpageorientation)]\n [!code-vb[XpsPrint#OutputColorAndPageOrientation](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#outputcolorandpageorientation)]"
  syntax:
    content: public Nullable<System.Printing.OutputColor> OutputColor { get; set; }
    return:
      type: System.Nullable{System.Printing.OutputColor}
      description: "<xref href=&quot;System.Printing.OutputColor&quot;> </xref>值，该值指示打印机如何处理具有颜色或灰色阴影的内容。"
  overload: System.Printing.PrintTicket.OutputColor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.OutputColor&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.OutputQuality
  id: OutputQuality
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: OutputQuality
  nameWithType: PrintTicket.OutputQuality
  fullName: System.Printing.PrintTicket.OutputQuality
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值为打印作业的输出的质量。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageOutputQuality`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.OutputQualityCapability%2A>属性。</xref:System.Printing.PrintCapabilities.OutputQualityCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.OutputQuality> OutputQuality { get; set; }
    return:
      type: System.Nullable{System.Printing.OutputQuality}
      description: "<xref href=&quot;System.Printing.OutputQuality&quot;> </xref>值，该值指定所需的级别的质量。"
  overload: System.Printing.PrintTicket.OutputQuality*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.OutputQuality&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PageBorderless
  id: PageBorderless
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PageBorderless
  nameWithType: PrintTicket.PageBorderless
  fullName: System.Printing.PrintTicket.PageBorderless
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，指示设备是否将内容打印到介质的边缘或离开边缘周围有的边距。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageBorderless`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PageBorderlessCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PageBorderlessCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.PageBorderless> PageBorderless { get; set; }
    return:
      type: System.Nullable{System.Printing.PageBorderless}
      description: "A <xref href=&quot;System.Printing.PageBorderless&quot;> </xref>值，该值指定打印机是否使用边框打印。"
  overload: System.Printing.PrintTicket.PageBorderless*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.PageBorderless&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PageMediaSize
  id: PageMediaSize
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PageMediaSize
  nameWithType: PrintTicket.PageMediaSize
  fullName: System.Printing.PrintTicket.PageMediaSize
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置用于纸 （或其他媒体） 的打印机是使用为打印作业的页大小。"
  remarks: "此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageMediaSize`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PageMediaSizeCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PageMediaSizeCapability%2A>"
  example:
  - "The following example shows how to use this property to scale a visual element to fit within the margins of the paper on which it is to print.  \n  \n [!code-cs[XpsPrint#PageMediaSize](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#pagemediasize)]\n [!code-vb[XpsPrint#PageMediaSize](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#pagemediasize)]"
  syntax:
    content: public System.Printing.PageMediaSize PageMediaSize { get; set; }
    return:
      type: System.Printing.PageMediaSize
      description: "A <xref href=&quot;System.Printing.PageMediaSize&quot;> </xref>使用名称和 / 或维度，表示页大小的对象。"
  overload: System.Printing.PrintTicket.PageMediaSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Calling code has attempted to set the property with a <xref href=\"System.Printing.PageMediaSize\"></xref> object that has at least one <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> property.  \n  \n \\- or -  \n  \n Calling code has attempted to set the property with a <xref href=\"System.Printing.PageMediaSize\"></xref> object whose <xref:System.Printing.PageMediaSize.PageMediaSizeName*> property is set to a value that is not in the <xref href=\"System.Printing.PageMediaSizeName\"></xref> enumeration.  \n  \n \\- or -  \n  \n Calling code has attempted to set the property with a <xref href=\"System.Printing.PageMediaSize\"></xref> object whose <xref:System.Printing.PageMediaSize.Width*> or <xref:System.Printing.PageMediaSize.Height*> property is set to a value less than 1."
  platform:
  - net462
- uid: System.Printing.PrintTicket.PageMediaType
  id: PageMediaType
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PageMediaType
  nameWithType: PrintTicket.PageMediaType
  fullName: System.Printing.PrintTicket.PageMediaType
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值什么样的纸张或打印机时使用的打印作业的介质。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageMediaType`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PageMediaTypeCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PageMediaTypeCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.PageMediaType> PageMediaType { get; set; }
    return:
      type: System.Nullable{System.Printing.PageMediaType}
      description: "A <xref href=&quot;System.Printing.PageMediaType&quot;> </xref>值，该值指定的打印媒体，如卡片纸、 标签、 无格式、 或照片。"
  overload: System.Printing.PrintTicket.PageMediaType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.PageMediaType&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PageOrder
  id: PageOrder
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PageOrder
  nameWithType: PrintTicket.PageOrder
  fullName: System.Printing.PrintTicket.PageOrder
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值是否打印机上打印后到前或前端到后端的多个页。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`JobPageOrder`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PageOrderCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PageOrderCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.PageOrder> PageOrder { get; set; }
    return:
      type: System.Nullable{System.Printing.PageOrder}
      description: "A <xref href=&quot;System.Printing.PageOrder&quot;> </xref>值，该值指定上一次页先打印或第一页先打印。"
  overload: System.Printing.PrintTicket.PageOrder*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.PageOrder&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PageOrientation
  id: PageOrientation
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PageOrientation
  nameWithType: PrintTicket.PageOrientation
  fullName: System.Printing.PrintTicket.PageOrientation
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值面向打印页面内容的方式。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageOrientation`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PageOrientationCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PageOrientationCapability%2A>"
  example:
  - "The following example shows how to use this property to configure a print job.  \n  \n [!code-cs[XpsPrint#OutputColorAndPageOrientation](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#outputcolorandpageorientation)]\n [!code-vb[XpsPrint#OutputColorAndPageOrientation](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#outputcolorandpageorientation)]"
  syntax:
    content: public Nullable<System.Printing.PageOrientation> PageOrientation { get; set; }
    return:
      type: System.Nullable{System.Printing.PageOrientation}
      description: "A <xref href=&quot;System.Printing.PageOrientation&quot;> </xref>值，该值指定如何页面内容的方向，例如， <xref href=&quot;System.Printing.PageOrientation&quot;> </xref>或<xref href=&quot;System.Printing.PageOrientation&quot;> </xref>。"
  overload: System.Printing.PrintTicket.PageOrientation*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.PageOrientation&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PageResolution
  id: PageResolution
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PageResolution
  nameWithType: PrintTicket.PageResolution
  fullName: System.Printing.PrintTicket.PageResolution
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置打印机时使用的打印作业的页面分辨率的级别。"
  remarks: "<xref:System.Printing.PageResolution>类具有可以在其中指定 X 和 Y 维度的每英寸点数的属性和属性可以为提供分辨率定性表达式。</xref:System.Printing.PageResolution>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageResolution`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PageResolutionCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PageResolutionCapability%2A>"
  syntax:
    content: public System.Printing.PageResolution PageResolution { get; set; }
    return:
      type: System.Printing.PageResolution
      description: "A <xref href=&quot;System.Printing.PageResolution&quot;> </xref>作为定性值和 / 或每英寸点数值，该值代表分辨率的值。"
  overload: System.Printing.PrintTicket.PageResolution*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Calling code has attempted to set the property with a <xref href=\"System.Printing.PageResolution\"></xref> object that has at least one <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> property.  \n  \n \\- or -  \n  \n Calling code has attempted to set the property with a <xref href=\"System.Printing.PageMediaSize\"></xref> object whose <xref:System.Printing.PageResolution.QualitativeResolution*> property is set to a value that is not in the <xref href=\"System.Printing.PageQualitativeResolution\"></xref> enumeration.  \n  \n \\- or -  \n  \n Calling code has attempted to set the property with a <xref href=\"System.Printing.PageResolution\"></xref> object whose <xref:System.Printing.PageResolution.X*> or <xref:System.Printing.PageResolution.Y*> property is set to a value less than 1."
  platform:
  - net462
- uid: System.Printing.PrintTicket.PageScalingFactor
  id: PageScalingFactor
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PageScalingFactor
  nameWithType: PrintTicket.PageScalingFactor
  fullName: System.Printing.PrintTicket.PageScalingFactor
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置依据打印机放大或缩小页上打印的图像的百分比。"
  remarks: "打印机可以缩放的最大和最小限制。 你可以通过使用<xref:System.Printing.PrintCapabilities.PageScalingFactorRange%2A>。</xref:System.Printing.PrintCapabilities.PageScalingFactorRange%2A>测试规模限制       A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此 PageScalingFactor 属性通常表示**缩放**`ScoredProperty`的[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageScaling`关键字。 但有一些复杂性，如下所示。       在读取 PageScalingFactor 属性时，该属性的行为，如下所示。      -如果 PrintTicket XML 文档具有`PageScaling`功能设置为**CustomSquare**选项，与**CustomSquare**选项的**缩放**值是正值，则返回的值。      -如果 PrintTicket XML 文档具有`PageScaling`功能设置为**自定义**选项，与**自定义**选项的**ScaleWidth**值是正值，则返回的值。      -在所有其他情况下，`null`返回。       设置 PageScalingFactor 属性时，该属性的行为，如下所示。      -如果设置为`null`，则`PageScaling`从 PrintTicket XML 文档中删除标记。      -否则为`PageScaling`PrintTicket XML 文档中的功能设置为**CustomSquare**和**CustomSquare**选项的**缩放**值设置为传递的值。 (请参阅**异常**如果属性设置为小于 1 的值将发生什么情况。)"
  syntax:
    content: public Nullable<int> PageScalingFactor { get; set; }
    return:
      type: System.Nullable{System.Int32}
      description: "<xref:System.Int32>表示百分比的值。</xref:System.Int32>"
  overload: System.Printing.PrintTicket.PageScalingFactor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个小于 1 的值。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PagesPerSheet
  id: PagesPerSheet
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PagesPerSheet
  nameWithType: PrintTicket.PagesPerSheet
  fullName: System.Printing.PrintTicket.PagesPerSheet
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置在每个打印一端一张纸打印的页面数。"
  remarks: "大多数打印机仅支持有限的范围的特定的可能性，如 1、 2、 4、 6、 8 和一面。 你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PagesPerSheetCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PagesPerSheetCapability%2A>       A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于**PagesPerSheet** `ScoredProperty`的[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`JobNUpAllDocumentsContiguously`关键字，不`DocumentNUp`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PagesPerSheetCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PagesPerSheetCapability%2A>"
  syntax:
    content: public Nullable<int> PagesPerSheet { get; set; }
    return:
      type: System.Nullable{System.Int32}
      description: "可以为 null<xref:System.Int32>打印表示每个打印的页面数的值的一端一张纸。</xref:System.Int32>"
  overload: System.Printing.PrintTicket.PagesPerSheet*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个小于 1 的值。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PagesPerSheetDirection
  id: PagesPerSheetDirection
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PagesPerSheetDirection
  nameWithType: PrintTicket.PagesPerSheetDirection
  fullName: System.Printing.PrintTicket.PagesPerSheetDirection
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值打印机如何排列在每个边一张纸打印的多个页面。"
  remarks: "例如，打印机可以呈现页中从左到右行与行堆积上到。       A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于**PresentationDirection** subfeature 的[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`JobNUpAllDocumentsContiguously`关键字，不`DocumentNUp`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.PagesPerSheetDirection> PagesPerSheetDirection { get; set; }
    return:
      type: System.Nullable{System.Printing.PagesPerSheetDirection}
      description: "A <xref href=&quot;System.Printing.PagesPerSheetDirection&quot;> </xref>值，该值指示打印机在每个表的多个页上呈现的方式。"
  overload: System.Printing.PrintTicket.PagesPerSheetDirection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.PagesPerSheetDirection&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PhotoPrintingIntent
  id: PhotoPrintingIntent
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PhotoPrintingIntent
  nameWithType: PrintTicket.PhotoPrintingIntent
  fullName: System.Printing.PrintTicket.PhotoPrintingIntent
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值指示在定性术语中的打印机使用打印面部照片的质量级别。"
  remarks: "照片打印机驱动程序定性将表达式转换在此属性为特定分辨率和其他因素的定量值。       A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PagePhotoPrintingIntent`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.PhotoPrintingIntentCapability%2A>属性。</xref:System.Printing.PrintCapabilities.PhotoPrintingIntentCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.PhotoPrintingIntent> PhotoPrintingIntent { get; set; }
    return:
      type: System.Nullable{System.Printing.PhotoPrintingIntent}
      description: "A <xref href=&quot;System.Printing.PhotoPrintingIntent&quot;> </xref>值，该值指示的照片质量级别。"
  overload: System.Printing.PrintTicket.PhotoPrintingIntent*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.PhotoPrintingIntent&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.PropertyChanged
  id: PropertyChanged
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: PrintTicket.PropertyChanged
  fullName: System.Printing.PrintTicket.PropertyChanged
  type: Event
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "时发生任何属性<xref href=&quot;System.Printing.PrintTicket&quot;></xref>更改。"
  syntax:
    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintTicket.SaveTo(System.IO.Stream)
  id: SaveTo(System.IO.Stream)
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: SaveTo(Stream)
  nameWithType: PrintTicket.SaveTo(Stream)
  fullName: System.Printing.PrintTicket.SaveTo(Stream)
  type: Method
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "将保存<xref href=&quot;System.Printing.PrintTicket&quot;></xref>设置应用于<xref:System.IO.Stream>使用符合 XML 格式的对象[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)。</xref:System.IO.Stream>"
  remarks: "此方法不流的读写位置重置回其原始位置。 你应之后重置立即调用此方法。       如果任何属性<xref:System.Printing.PrintTicket>是`null`，它们将只需不包含在 XML 标记。</xref:System.Printing.PrintTicket>       如果<xref:System.Printing.PrintTicket>对象使用包含标记元素不表示任何 PrintTicket 文档构造<xref:System.Printing.PrintTicket>类的公共属性，这些元素将包含在此方法由保存 PrintTicket 文档。</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintTicket>"
  syntax:
    content: public void SaveTo (System.IO.Stream outStream);
    parameters:
    - id: outStream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>保存保存<xref href=&quot;System.Printing.PrintTicket&quot;> </xref>。</xref:System.IO.Stream>"
  overload: System.Printing.PrintTicket.SaveTo*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintTicket.Stapling
  id: Stapling
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: Stapling
  nameWithType: PrintTicket.Stapling
  fullName: System.Printing.PrintTicket.Stapling
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值是否，以及在何处，打印机装订多个页。"
  remarks: "例如，打印机可以将两个日常用品放置一张纸或在左上角的一个装订的左边缘。       A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`JobStapleAllDocuments`关键字，不`DocumentStaple`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.StaplingCapability%2A>属性。</xref:System.Printing.PrintCapabilities.StaplingCapability%2A>"
  example:
  - "The following example shows how to use this property when testing a printer's capabilities and configuring a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public Nullable<System.Printing.Stapling> Stapling { get; set; }
    return:
      type: System.Nullable{System.Printing.Stapling}
      description: "A <xref href=&quot;System.Printing.Stapling&quot;> </xref>值，该值指定如何打印机装订输出。"
  overload: System.Printing.PrintTicket.Stapling*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.Stapling&quot;></xref>枚举。"
  platform:
  - net462
- uid: System.Printing.PrintTicket.TrueTypeFontMode
  id: TrueTypeFontMode
  parent: System.Printing.PrintTicket
  langs:
  - csharp
  name: TrueTypeFontMode
  nameWithType: PrintTicket.TrueTypeFontMode
  fullName: System.Printing.PrintTicket.TrueTypeFontMode
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "获取或设置一个值，该值打印机如何处理使用 TrueType 字体的文本。"
  remarks: "A`null`此属性表示未指定此功能设置的值。 此外，当值是`null`，XML 版本的<xref:System.Printing.PrintTicket>(请参阅<xref:System.Printing.PrintTicket.SaveTo%2A>和<xref:System.Printing.PrintTicket.GetXmlStream%2A>) 将不包含此功能的任何标记。</xref:System.Printing.PrintTicket.GetXmlStream%2A> </xref:System.Printing.PrintTicket.SaveTo%2A> </xref:System.Printing.PrintTicket>       此属性对应于[打印架构](http://go.microsoft.com/fwlink/?LinkId=186397)的`PageTrueTypeFontMode`关键字。       你可以测试打印机支持通过选项<xref:System.Printing.PrintCapabilities.TrueTypeFontModeCapability%2A>属性。</xref:System.Printing.PrintCapabilities.TrueTypeFontModeCapability%2A>"
  syntax:
    content: public Nullable<System.Printing.TrueTypeFontMode> TrueTypeFontMode { get; set; }
    return:
      type: System.Nullable{System.Printing.TrueTypeFontMode}
      description: "A <xref href=&quot;System.Printing.TrueTypeFontMode&quot;> </xref>值，该值指定如何打印机处理 TrueType 字体。"
  overload: System.Printing.PrintTicket.TrueTypeFontMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "调用代码已尝试将属性设置为一个值，将不在<xref href=&quot;System.Printing.TrueTypeFontMode&quot;></xref>枚举。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Printing.PrintTicket.#ctor
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PrintTicket()
  nameWithType: PrintTicket.PrintTicket()
  fullName: System.Printing.PrintTicket.PrintTicket()
- uid: System.Printing.PrintTicket.#ctor(System.IO.Stream)
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PrintTicket(Stream)
  nameWithType: PrintTicket.PrintTicket(Stream)
  fullName: System.Printing.PrintTicket.PrintTicket(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Printing.PrintTicket.Clone
  parent: System.Printing.PrintTicket
  isExternal: false
  name: Clone()
  nameWithType: PrintTicket.Clone()
  fullName: System.Printing.PrintTicket.Clone()
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Printing.PrintTicket.Collation
  parent: System.Printing.PrintTicket
  isExternal: false
  name: Collation
  nameWithType: PrintTicket.Collation
  fullName: System.Printing.PrintTicket.Collation
- uid: System.Nullable{System.Printing.Collation}
  parent: System
  isExternal: true
  name: Nullable<Collation>
  nameWithType: Nullable<Collation>
  fullName: System.Nullable<System.Printing.Collation>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.Collation>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.Collation
    name: Collation
    nameWithType: Collation
    fullName: Collation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.CopyCount
  parent: System.Printing.PrintTicket
  isExternal: false
  name: CopyCount
  nameWithType: PrintTicket.CopyCount
  fullName: System.Printing.PrintTicket.CopyCount
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.DeviceFontSubstitution
  parent: System.Printing.PrintTicket
  isExternal: false
  name: DeviceFontSubstitution
  nameWithType: PrintTicket.DeviceFontSubstitution
  fullName: System.Printing.PrintTicket.DeviceFontSubstitution
- uid: System.Nullable{System.Printing.DeviceFontSubstitution}
  parent: System
  isExternal: true
  name: Nullable<DeviceFontSubstitution>
  nameWithType: Nullable<DeviceFontSubstitution>
  fullName: System.Nullable<System.Printing.DeviceFontSubstitution>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.DeviceFontSubstitution>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.DeviceFontSubstitution
    name: DeviceFontSubstitution
    nameWithType: DeviceFontSubstitution
    fullName: DeviceFontSubstitution
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.Duplexing
  parent: System.Printing.PrintTicket
  isExternal: false
  name: Duplexing
  nameWithType: PrintTicket.Duplexing
  fullName: System.Printing.PrintTicket.Duplexing
- uid: System.Nullable{System.Printing.Duplexing}
  parent: System
  isExternal: true
  name: Nullable<Duplexing>
  nameWithType: Nullable<Duplexing>
  fullName: System.Nullable<System.Printing.Duplexing>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.Duplexing>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.Duplexing
    name: Duplexing
    nameWithType: Duplexing
    fullName: Duplexing
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.GetXmlStream
  parent: System.Printing.PrintTicket
  isExternal: false
  name: GetXmlStream()
  nameWithType: PrintTicket.GetXmlStream()
  fullName: System.Printing.PrintTicket.GetXmlStream()
- uid: System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.Printing.PrintTicket.InputBin
  parent: System.Printing.PrintTicket
  isExternal: false
  name: InputBin
  nameWithType: PrintTicket.InputBin
  fullName: System.Printing.PrintTicket.InputBin
- uid: System.Nullable{System.Printing.InputBin}
  parent: System
  isExternal: true
  name: Nullable<InputBin>
  nameWithType: Nullable<InputBin>
  fullName: System.Nullable<System.Printing.InputBin>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.InputBin>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.InputBin
    name: InputBin
    nameWithType: InputBin
    fullName: InputBin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.OutputColor
  parent: System.Printing.PrintTicket
  isExternal: false
  name: OutputColor
  nameWithType: PrintTicket.OutputColor
  fullName: System.Printing.PrintTicket.OutputColor
- uid: System.Nullable{System.Printing.OutputColor}
  parent: System
  isExternal: true
  name: Nullable<OutputColor>
  nameWithType: Nullable<OutputColor>
  fullName: System.Nullable<System.Printing.OutputColor>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.OutputColor>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.OutputColor
    name: OutputColor
    nameWithType: OutputColor
    fullName: OutputColor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.OutputQuality
  parent: System.Printing.PrintTicket
  isExternal: false
  name: OutputQuality
  nameWithType: PrintTicket.OutputQuality
  fullName: System.Printing.PrintTicket.OutputQuality
- uid: System.Nullable{System.Printing.OutputQuality}
  parent: System
  isExternal: true
  name: Nullable<OutputQuality>
  nameWithType: Nullable<OutputQuality>
  fullName: System.Nullable<System.Printing.OutputQuality>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.OutputQuality>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.OutputQuality
    name: OutputQuality
    nameWithType: OutputQuality
    fullName: OutputQuality
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.PageBorderless
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageBorderless
  nameWithType: PrintTicket.PageBorderless
  fullName: System.Printing.PrintTicket.PageBorderless
- uid: System.Nullable{System.Printing.PageBorderless}
  parent: System
  isExternal: true
  name: Nullable<PageBorderless>
  nameWithType: Nullable<PageBorderless>
  fullName: System.Nullable<System.Printing.PageBorderless>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.PageBorderless>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageBorderless
    name: PageBorderless
    nameWithType: PageBorderless
    fullName: PageBorderless
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.PageMediaSize
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageMediaSize
  nameWithType: PrintTicket.PageMediaSize
  fullName: System.Printing.PrintTicket.PageMediaSize
- uid: System.Printing.PageMediaSize
  parent: System.Printing
  isExternal: false
  name: PageMediaSize
  nameWithType: PageMediaSize
  fullName: System.Printing.PageMediaSize
- uid: System.Printing.PrintTicket.PageMediaType
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageMediaType
  nameWithType: PrintTicket.PageMediaType
  fullName: System.Printing.PrintTicket.PageMediaType
- uid: System.Nullable{System.Printing.PageMediaType}
  parent: System
  isExternal: true
  name: Nullable<PageMediaType>
  nameWithType: Nullable<PageMediaType>
  fullName: System.Nullable<System.Printing.PageMediaType>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.PageMediaType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageMediaType
    name: PageMediaType
    nameWithType: PageMediaType
    fullName: PageMediaType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.PageOrder
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageOrder
  nameWithType: PrintTicket.PageOrder
  fullName: System.Printing.PrintTicket.PageOrder
- uid: System.Nullable{System.Printing.PageOrder}
  parent: System
  isExternal: true
  name: Nullable<PageOrder>
  nameWithType: Nullable<PageOrder>
  fullName: System.Nullable<System.Printing.PageOrder>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.PageOrder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageOrder
    name: PageOrder
    nameWithType: PageOrder
    fullName: PageOrder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.PageOrientation
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageOrientation
  nameWithType: PrintTicket.PageOrientation
  fullName: System.Printing.PrintTicket.PageOrientation
- uid: System.Nullable{System.Printing.PageOrientation}
  parent: System
  isExternal: true
  name: Nullable<PageOrientation>
  nameWithType: Nullable<PageOrientation>
  fullName: System.Nullable<System.Printing.PageOrientation>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.PageOrientation>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageOrientation
    name: PageOrientation
    nameWithType: PageOrientation
    fullName: PageOrientation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.PageResolution
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageResolution
  nameWithType: PrintTicket.PageResolution
  fullName: System.Printing.PrintTicket.PageResolution
- uid: System.Printing.PageResolution
  parent: System.Printing
  isExternal: false
  name: PageResolution
  nameWithType: PageResolution
  fullName: System.Printing.PageResolution
- uid: System.Printing.PrintTicket.PageScalingFactor
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageScalingFactor
  nameWithType: PrintTicket.PageScalingFactor
  fullName: System.Printing.PrintTicket.PageScalingFactor
- uid: System.Printing.PrintTicket.PagesPerSheet
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PagesPerSheet
  nameWithType: PrintTicket.PagesPerSheet
  fullName: System.Printing.PrintTicket.PagesPerSheet
- uid: System.Printing.PrintTicket.PagesPerSheetDirection
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PagesPerSheetDirection
  nameWithType: PrintTicket.PagesPerSheetDirection
  fullName: System.Printing.PrintTicket.PagesPerSheetDirection
- uid: System.Nullable{System.Printing.PagesPerSheetDirection}
  parent: System
  isExternal: true
  name: Nullable<PagesPerSheetDirection>
  nameWithType: Nullable<PagesPerSheetDirection>
  fullName: System.Nullable<System.Printing.PagesPerSheetDirection>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.PagesPerSheetDirection>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PagesPerSheetDirection
    name: PagesPerSheetDirection
    nameWithType: PagesPerSheetDirection
    fullName: PagesPerSheetDirection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.PhotoPrintingIntent
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PhotoPrintingIntent
  nameWithType: PrintTicket.PhotoPrintingIntent
  fullName: System.Printing.PrintTicket.PhotoPrintingIntent
- uid: System.Nullable{System.Printing.PhotoPrintingIntent}
  parent: System
  isExternal: true
  name: Nullable<PhotoPrintingIntent>
  nameWithType: Nullable<PhotoPrintingIntent>
  fullName: System.Nullable<System.Printing.PhotoPrintingIntent>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.PhotoPrintingIntent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PhotoPrintingIntent
    name: PhotoPrintingIntent
    nameWithType: PhotoPrintingIntent
    fullName: PhotoPrintingIntent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.PropertyChanged
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PropertyChanged
  nameWithType: PrintTicket.PropertyChanged
  fullName: System.Printing.PrintTicket.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Printing.PrintTicket.SaveTo(System.IO.Stream)
  parent: System.Printing.PrintTicket
  isExternal: false
  name: SaveTo(Stream)
  nameWithType: PrintTicket.SaveTo(Stream)
  fullName: System.Printing.PrintTicket.SaveTo(Stream)
- uid: System.Printing.PrintTicket.Stapling
  parent: System.Printing.PrintTicket
  isExternal: false
  name: Stapling
  nameWithType: PrintTicket.Stapling
  fullName: System.Printing.PrintTicket.Stapling
- uid: System.Nullable{System.Printing.Stapling}
  parent: System
  isExternal: true
  name: Nullable<Stapling>
  nameWithType: Nullable<Stapling>
  fullName: System.Nullable<System.Printing.Stapling>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.Stapling>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.Stapling
    name: Stapling
    nameWithType: Stapling
    fullName: Stapling
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.TrueTypeFontMode
  parent: System.Printing.PrintTicket
  isExternal: false
  name: TrueTypeFontMode
  nameWithType: PrintTicket.TrueTypeFontMode
  fullName: System.Printing.PrintTicket.TrueTypeFontMode
- uid: System.Nullable{System.Printing.TrueTypeFontMode}
  parent: System
  isExternal: true
  name: Nullable<TrueTypeFontMode>
  nameWithType: Nullable<TrueTypeFontMode>
  fullName: System.Nullable<System.Printing.TrueTypeFontMode>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Printing.TrueTypeFontMode>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.TrueTypeFontMode
    name: TrueTypeFontMode
    nameWithType: TrueTypeFontMode
    fullName: TrueTypeFontMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintTicket.#ctor*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket.PrintTicket
- uid: System.Printing.PrintTicket.Clone*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: Clone
  nameWithType: PrintTicket.Clone
- uid: System.Printing.PrintTicket.Collation*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: Collation
  nameWithType: PrintTicket.Collation
- uid: System.Printing.PrintTicket.CopyCount*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: CopyCount
  nameWithType: PrintTicket.CopyCount
- uid: System.Printing.PrintTicket.DeviceFontSubstitution*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: DeviceFontSubstitution
  nameWithType: PrintTicket.DeviceFontSubstitution
- uid: System.Printing.PrintTicket.Duplexing*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: Duplexing
  nameWithType: PrintTicket.Duplexing
- uid: System.Printing.PrintTicket.GetXmlStream*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: GetXmlStream
  nameWithType: PrintTicket.GetXmlStream
- uid: System.Printing.PrintTicket.InputBin*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: InputBin
  nameWithType: PrintTicket.InputBin
- uid: System.Printing.PrintTicket.OutputColor*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: OutputColor
  nameWithType: PrintTicket.OutputColor
- uid: System.Printing.PrintTicket.OutputQuality*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: OutputQuality
  nameWithType: PrintTicket.OutputQuality
- uid: System.Printing.PrintTicket.PageBorderless*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageBorderless
  nameWithType: PrintTicket.PageBorderless
- uid: System.Printing.PrintTicket.PageMediaSize*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageMediaSize
  nameWithType: PrintTicket.PageMediaSize
- uid: System.Printing.PrintTicket.PageMediaType*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageMediaType
  nameWithType: PrintTicket.PageMediaType
- uid: System.Printing.PrintTicket.PageOrder*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageOrder
  nameWithType: PrintTicket.PageOrder
- uid: System.Printing.PrintTicket.PageOrientation*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageOrientation
  nameWithType: PrintTicket.PageOrientation
- uid: System.Printing.PrintTicket.PageResolution*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageResolution
  nameWithType: PrintTicket.PageResolution
- uid: System.Printing.PrintTicket.PageScalingFactor*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PageScalingFactor
  nameWithType: PrintTicket.PageScalingFactor
- uid: System.Printing.PrintTicket.PagesPerSheet*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PagesPerSheet
  nameWithType: PrintTicket.PagesPerSheet
- uid: System.Printing.PrintTicket.PagesPerSheetDirection*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PagesPerSheetDirection
  nameWithType: PrintTicket.PagesPerSheetDirection
- uid: System.Printing.PrintTicket.PhotoPrintingIntent*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: PhotoPrintingIntent
  nameWithType: PrintTicket.PhotoPrintingIntent
- uid: System.Printing.PrintTicket.SaveTo*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: SaveTo
  nameWithType: PrintTicket.SaveTo
- uid: System.Printing.PrintTicket.Stapling*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: Stapling
  nameWithType: PrintTicket.Stapling
- uid: System.Printing.PrintTicket.TrueTypeFontMode*
  parent: System.Printing.PrintTicket
  isExternal: false
  name: TrueTypeFontMode
  nameWithType: PrintTicket.TrueTypeFontMode
