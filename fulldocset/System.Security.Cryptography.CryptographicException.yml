### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CryptographicException
  id: CryptographicException
  children:
  - System.Security.Cryptography.CryptographicException.#ctor
  - System.Security.Cryptography.CryptographicException.#ctor(System.Int32)
  - System.Security.Cryptography.CryptographicException.#ctor(System.String)
  - System.Security.Cryptography.CryptographicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.CryptographicException.#ctor(System.String,System.Exception)
  - System.Security.Cryptography.CryptographicException.#ctor(System.String,System.String)
  langs:
  - csharp
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  type: Class
  summary: "当加密操作中发生错误时引发的异常。"
  remarks: "CryptographicException 使用 HRESULT CORSEC_E_CRYPTO，除非指定备用的错误代码。       CryptographicException 的实例的初始属性值的列表，请参阅构造函数。"
  example:
  - "The following code example demonstrates how to use members of the CryptographicException class.  \n  \n [!code-cs[System.Security.Cryptography.CryptographicException#2](~/add/codesnippet/csharp/t-system.security.crypto_115_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptographicException#2](~/add/codesnippet/visualbasic/t-system.security.crypto_115_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptographicException#2](~/add/codesnippet/cpp/t-system.security.crypto_115_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CryptographicException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptographicException.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException()
  nameWithType: CryptographicException.CryptographicException()
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref>使用默认属性的类。"
  remarks: "下表显示<xref:System.Security.Cryptography.CryptographicException>.</xref:System.Security.Cryptography.CryptographicException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|本地化的错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> with no parameters. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptographicException#1](~/add/codesnippet/csharp/m-system.security.crypto_47_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptographicException#1](~/add/codesnippet/visualbasic/m-system.security.crypto_47_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptographicException#1](~/add/codesnippet/cpp/m-system.security.crypto_47_1.cpp)]"
  syntax:
    content: public CryptographicException ();
    parameters: []
  overload: System.Security.Cryptography.CryptographicException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(Int32)
  nameWithType: CryptographicException.CryptographicException(Int32)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref>使用指定的类<xref uid=&quot;langword_csharp_HRESULT&quot; name=&quot;HRESULT&quot; href=&quot;&quot;></xref>错误代码。"
  remarks: "CryptographicException 构造函数接受一个系统`HRESULT`错误代码和集<xref:System.Exception.Message%2A>属性对应的本地化消息`HRESULT`。</xref:System.Exception.Message%2A>       下表显示<xref:System.Security.Cryptography.CryptographicException>.</xref:System.Security.Cryptography.CryptographicException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|本地化的错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> using an error code for an <xref:System.Security.Cryptography.CryptographicUnexpectedOperationException>. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptographicException#3](~/add/codesnippet/csharp/m-system.security.crypto_36_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptographicException#3](~/add/codesnippet/visualbasic/m-system.security.crypto_36_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptographicException#3](~/add/codesnippet/cpp/m-system.security.crypto_36_1.cpp)]"
  syntax:
    content: public CryptographicException (int hr);
    parameters:
    - id: hr
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_HRESULT&quot; name=&quot;HRESULT&quot; href=&quot;&quot;> </xref>错误代码。"
  overload: System.Security.Cryptography.CryptographicException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(String)
  nameWithType: CryptographicException.CryptographicException(String)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref>与指定的错误消息的类。"
  remarks: "下表显示<xref:System.Security.Cryptography.CryptographicException>.</xref:System.Security.Cryptography.CryptographicException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> using a custom error message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptographicException#4](~/add/codesnippet/csharp/m-system.security.crypto_116_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptographicException#4](~/add/codesnippet/visualbasic/m-system.security.crypto_116_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptographicException#4](~/add/codesnippet/cpp/m-system.security.crypto_116_1.cpp)]"
  syntax:
    content: public CryptographicException (string message);
    parameters:
    - id: message
      type: System.String
      description: "解释异常原因的错误消息。"
  overload: System.Security.Cryptography.CryptographicException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(SerializationInfo,StreamingContext)
  nameWithType: CryptographicException.CryptographicException(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref>用序列化数据的类。"
  remarks: "在反序列化，以便重建通过流传输的异常对象过程中调用此构造函数。"
  syntax:
    content: protected CryptographicException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "承载序列化的对象数据的对象。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "有关源或目标的上下文信息。"
  overload: System.Security.Cryptography.CryptographicException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(String,Exception)
  nameWithType: CryptographicException.CryptographicException(String,Exception)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref>使用指定的错误消息和对导致此异常的内部异常的引用的类。"
  remarks: "前一个异常的直接结果应包含中的前一个异常的引用引发的异常，<xref:System.Exception.InnerException%2A>属性。</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>属性返回相同的值传递到构造函数中，或`null`如果<xref:System.Exception.InnerException%2A>属性不会提供给构造函数的内部异常值。</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       下表显示<xref:System.Security.Cryptography.CryptographicException>.</xref:System.Security.Cryptography.CryptographicException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|内部异常引用。 |  |<xref:System.Exception.Message%2A>|错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> using a custom error message and an inner exception. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptographicException#5](~/add/codesnippet/csharp/d23f33f8-33a5-45ad-932a-_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptographicException#5](~/add/codesnippet/visualbasic/d23f33f8-33a5-45ad-932a-_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptographicException#5](~/add/codesnippet/cpp/d23f33f8-33a5-45ad-932a-_1.cpp)]"
  syntax:
    content: public CryptographicException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "解释异常原因的错误消息。"
    - id: inner
      type: System.Exception
      description: "导致当前异常的异常。 如果`inner`参数不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>中, 引发当前异常<xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;></xref>处理内部异常的块。"
  overload: System.Security.Cryptography.CryptographicException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(String,String)
  nameWithType: CryptographicException.CryptographicException(String,String)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新实例<xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref>类指定的错误消息中指定的格式。"
  remarks: "下表显示<xref:System.Security.Cryptography.CryptographicException>.</xref:System.Security.Cryptography.CryptographicException>实例的初始属性的值      |属性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|错误消息字符串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> using a time format and the current date. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptographicException#6](~/add/codesnippet/csharp/b79fae48-8bdf-49eb-8d86-_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptographicException#6](~/add/codesnippet/visualbasic/b79fae48-8bdf-49eb-8d86-_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptographicException#6](~/add/codesnippet/cpp/b79fae48-8bdf-49eb-8d86-_1.cpp)]"
  syntax:
    content: public CryptographicException (string format, string insert);
    parameters:
    - id: format
      type: System.String
      description: "用于输出的错误消息的格式。"
    - id: insert
      type: System.String
      description: "解释异常原因的错误消息。"
  overload: System.Security.Cryptography.CryptographicException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Security.Cryptography.CryptographicException.#ctor
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException()
  nameWithType: CryptographicException.CryptographicException()
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException()
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.Int32)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(Int32)
  nameWithType: CryptographicException.CryptographicException(Int32)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(String)
  nameWithType: CryptographicException.CryptographicException(String)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(SerializationInfo,StreamingContext)
  nameWithType: CryptographicException.CryptographicException(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String,System.Exception)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(String,Exception)
  nameWithType: CryptographicException.CryptographicException(String,Exception)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(String,String)
  nameWithType: CryptographicException.CryptographicException(String,String)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String,String)
- uid: System.Security.Cryptography.CryptographicException.#ctor*
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException.CryptographicException
