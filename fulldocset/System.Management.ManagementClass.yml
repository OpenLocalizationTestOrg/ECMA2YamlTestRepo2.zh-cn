### YamlMime:ManagedReference
items:
- uid: System.Management.ManagementClass
  id: ManagementClass
  children:
  - System.Management.ManagementClass.#ctor
  - System.Management.ManagementClass.#ctor(System.Management.ManagementPath)
  - System.Management.ManagementClass.#ctor(System.String)
  - System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)
  - System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)
  - System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)
  - System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)
  - System.Management.ManagementClass.Clone
  - System.Management.ManagementClass.CreateInstance
  - System.Management.ManagementClass.Derivation
  - System.Management.ManagementClass.Derive(System.String)
  - System.Management.ManagementClass.GetInstances
  - System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)
  - System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Management.ManagementClass.GetRelatedClasses
  - System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)
  - System.Management.ManagementClass.GetRelatedClasses(System.String)
  - System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetRelationshipClasses
  - System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)
  - System.Management.ManagementClass.GetRelationshipClasses(System.String)
  - System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  - System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  - System.Management.ManagementClass.GetSubclasses
  - System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)
  - System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.Methods
  - System.Management.ManagementClass.Path
  langs:
  - csharp
  name: ManagementClass
  nameWithType: ManagementClass
  fullName: System.Management.ManagementClass
  type: Class
  summary: "表示的通用信息模型 (CIM) 管理类。 管理类是 WMI 类，如**Win32_LogicalDisk**，该类型可表示一个磁盘驱动器，和**Win32_Process**，这表示如 Notepad.exe 的进程。 此类的成员，可以访问使用特定的 WMI 类路径的 WMI 数据。 有关详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  syntax:
    content: 'public class ManagementClass : System.Management.ManagementObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Management.ManagementBaseObject
  - System.Management.ManagementObject
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)
  - System.Management.ManagementBaseObject.Equals(System.Object)
  - System.Management.ManagementBaseObject.GetHashCode
  - System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)
  - System.Management.ManagementBaseObject.GetPropertyValue(System.String)
  - System.Management.ManagementBaseObject.GetQualifierValue(System.String)
  - System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)
  - System.Management.ManagementBaseObject.Item(System.String)
  - System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject to System.IntPtr)
  - System.Management.ManagementBaseObject.Properties
  - System.Management.ManagementBaseObject.Qualifiers
  - System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)
  - System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)
  - System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)
  - System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Management.ManagementBaseObject.SystemProperties
  - System.Management.ManagementObject.ClassPath
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)
  - System.Management.ManagementObject.CopyTo(System.String)
  - System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)
  - System.Management.ManagementObject.Delete
  - System.Management.ManagementObject.Delete(System.Management.DeleteOptions)
  - System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)
  - System.Management.ManagementObject.Dispose
  - System.Management.ManagementObject.Get
  - System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.GetMethodParameters(System.String)
  - System.Management.ManagementObject.GetRelated
  - System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  - System.Management.ManagementObject.GetRelated(System.String)
  - System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  - System.Management.ManagementObject.GetRelationships
  - System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  - System.Management.ManagementObject.GetRelationships(System.String)
  - System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  - System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)
  - System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])
  - System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)
  - System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])
  - System.Management.ManagementObject.Options
  - System.Management.ManagementObject.Put
  - System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)
  - System.Management.ManagementObject.Put(System.Management.PutOptions)
  - System.Management.ManagementObject.Scope
  - System.Management.ManagementObject.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Management.ManagementClass.#ctor
  id: '#ctor'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass()
  nameWithType: ManagementClass.ManagementClass()
  fullName: System.Management.ManagementClass.ManagementClass()
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementClass&quot;></xref>类。 这是默认构造函数。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example is an example of how to initialize a <xref:System.Management.ManagementClass> variable with the <xref:System.Management.ManagementClass> default constructor. The example lists the methods, properties, and qualifiers for the created class.  \n  \n [!code-vb[wminet_ManagementClass()#1](~/add/codesnippet/visualbasic/m-system.management.mana_24_1.vb)]\n [!code-cs[wminet_ManagementClass()#1](~/add/codesnippet/csharp/m-system.management.mana_24_1.cs)]"
  syntax:
    content: public ManagementClass ();
    parameters: []
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementPath)
  id: '#ctor(System.Management.ManagementPath)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(ManagementPath)
  nameWithType: ManagementClass.ManagementClass(ManagementPath)
  fullName: System.Management.ManagementClass.ManagementClass(ManagementPath)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementClass&quot;></xref>类。 类从 WMI 表示通用信息模型 (CIM) 管理类如**Win32_LogicalDisk**，该类型可表示一个磁盘驱动器，和**Win32_Process**，这表示如 Notepad.exe 的进程。 有关详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  remarks: "`path`参数必须指定 WMI 类路径。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example is an example of how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers for the created class.  \n  \n [!code-vb[wminet_ManagementClass(M)#1](~/add/codesnippet/visualbasic/m-system.management.mana_4_1.vb)]\n [!code-cs[wminet_ManagementClass(M)#1](~/add/codesnippet/csharp/m-system.management.mana_4_1.cs)]"
  syntax:
    content: public ManagementClass (System.Management.ManagementPath path);
    parameters:
    - id: path
      type: System.Management.ManagementPath
      description: "A <xref href=&quot;System.Management.ManagementPath&quot;> </xref>指定要将绑定到的 WMI 类。 参数必须指定 WMI 类路径。 类表示从 WMI CIM 管理类。 CIM 类表示包括硬件、 软件、 过程和等等的管理信息。 有关 Windows 中可用的 CIM 类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(String)
  nameWithType: ManagementClass.ManagementClass(String)
  fullName: System.Management.ManagementClass.ManagementClass(String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementClass&quot;></xref>初始化为给定路径的类。 类从 WMI 表示通用信息模型 (CIM) 管理类如**Win32_LogicalDisk**，该类型可表示一个磁盘驱动器，和**Win32_Process**，这表示如 Notepad.exe 的进程。 有关详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers for the created class.  \n  \n [!code-cs[wminet_ManagementClass(S)#1](~/add/codesnippet/csharp/m-system.management.mana_23_1.cs)]\n [!code-vb[wminet_ManagementClass(S)#1](~/add/codesnippet/visualbasic/m-system.management.mana_23_1.vb)]"
  syntax:
    content: public ManagementClass (string path);
    parameters:
    - id: path
      type: System.String
      description: "WMI 类的路径。 类表示从 WMI CIM 管理类。 CIM 类表示包括硬件、 软件、 过程和等等的管理信息。 有关 Windows 中可用的 CIM 类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)
  id: '#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(ManagementPath,ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(ManagementPath,ObjectGetOptions)
  fullName: System.Management.ManagementClass.ManagementClass(ManagementPath,ObjectGetOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementClass&quot;></xref>类初始化为给定的 WMI 类路径以使用指定的选项。 类从 WMI 表示通用信息模型 (CIM) 管理类如**Win32_LogicalDisk**，该类型可表示一个磁盘驱动器，和**Win32_Process**，这表示如 Notepad.exe 的进程。 有关详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example is an example of how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers (including the amended qualifiers) for the created class.  \n  \n [!code-vb[wminet_ManagementClass(M_O)#1](~/add/codesnippet/visualbasic/11c3ffdf-3388-4484-9ff5-_1.vb)]\n [!code-cs[wminet_ManagementClass(M_O)#1](~/add/codesnippet/csharp/11c3ffdf-3388-4484-9ff5-_1.cs)]"
  syntax:
    content: public ManagementClass (System.Management.ManagementPath path, System.Management.ObjectGetOptions options);
    parameters:
    - id: path
      type: System.Management.ManagementPath
      description: "A <xref href=&quot;System.Management.ManagementPath&quot;> </xref>实例表示的 WMI 类路径。 类表示从 WMI CIM 管理类。 CIM 类表示包括硬件、 软件、 过程和等等的管理信息。 有关 Windows 中可用的 CIM 类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
    - id: options
      type: System.Management.ObjectGetOptions
      description: "<xref href=&quot;System.Management.ObjectGetOptions&quot;> </xref>表示检索此类时要使用的选项。"
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(SerializationInfo,StreamingContext)
  nameWithType: ManagementClass.ManagementClass(SerializationInfo,StreamingContext)
  fullName: System.Management.ManagementClass.ManagementClass(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementClass&quot;></xref>类的指定实例<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>和<xref:System.Runtime.Serialization.StreamingContext>类。</xref:System.Runtime.Serialization.StreamingContext>"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected ManagementClass (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "实例<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>包含序列化新所必需的信息的类<xref href=&quot;System.Management.ManagementClass&quot;> </xref>。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "实例<xref:System.Runtime.Serialization.StreamingContext>包含与新关联的序列化流的源类<xref href=&quot;System.Management.ManagementClass&quot;> </xref>。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)
  id: '#ctor(System.String,System.Management.ObjectGetOptions)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(String,ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(String,ObjectGetOptions)
  fullName: System.Management.ManagementClass.ManagementClass(String,ObjectGetOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementClass&quot;></xref>类初始化为给定的 WMI 类路径以使用指定的选项。 类从 WMI 表示通用信息模型 (CIM) 管理类如**Win32_LogicalDisk**，该类型可表示一个磁盘驱动器，和**Win32_Process**，这表示如 Notepad.exe 的进程。 有关详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers (including the amended qualifiers) for the created class.  \n  \n [!code-vb[wminet_ManagementClass(S_O)#1](~/add/codesnippet/visualbasic/fba2eb5c-08c4-4bd1-89dc-_1.vb)]\n [!code-cs[wminet_ManagementClass(S_O)#1](~/add/codesnippet/csharp/fba2eb5c-08c4-4bd1-89dc-_1.cs)]"
  syntax:
    content: public ManagementClass (string path, System.Management.ObjectGetOptions options);
    parameters:
    - id: path
      type: System.String
      description: "WMI 类的路径。 类表示从 WMI CIM 管理类。 CIM 类表示包括硬件、 软件、 过程和等等的管理信息。 有关 Windows 中可用的 CIM 类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
    - id: options
      type: System.Management.ObjectGetOptions
      description: "<xref href=&quot;System.Management.ObjectGetOptions&quot;> </xref>表示检索 WMI 类时要使用的选项。"
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)
  id: '#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(ManagementScope,ManagementPath,ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(ManagementScope,ManagementPath,ObjectGetOptions)
  fullName: System.Management.ManagementClass.ManagementClass(ManagementScope,ManagementPath,ObjectGetOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementClass&quot;></xref>指定的 WMI 类指定作用域，并且具有指定的选项的。 类从 WMI 表示通用信息模型 (CIM) 管理类如**Win32_LogicalDisk**，该类型可表示一个磁盘驱动器，和**Win32_Process**，这表示如 Notepad.exe 的进程。 有关详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  remarks: "路径可以指定为完整路径 （包括服务器和命名空间）。 但是，如果已指定的范围，它将替代的完整路径的第一个部分。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example is an example of how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers (including the amended qualifiers) for the created class. You must change the scope (namespace) in the code for the example to run correctly on your computer.  \n  \n [!code-cs[wminet_ManagementClass(M_M_O)#1](~/add/codesnippet/csharp/3fa78a6d-b9d9-4649-8611-_1.cs)]\n [!code-vb[wminet_ManagementClass(M_M_O)#1](~/add/codesnippet/visualbasic/3fa78a6d-b9d9-4649-8611-_1.vb)]"
  syntax:
    content: public ManagementClass (System.Management.ManagementScope scope, System.Management.ManagementPath path, System.Management.ObjectGetOptions options);
    parameters:
    - id: scope
      type: System.Management.ManagementScope
      description: "A <xref href=&quot;System.Management.ManagementScope&quot;> </xref> ，它指定的作用域 （服务器和命名空间） 的 WMI 类所在的位置。"
    - id: path
      type: System.Management.ManagementPath
      description: "A <xref href=&quot;System.Management.ManagementPath&quot;> </xref> ，对指定的作用域中的 WMI 类表示的路径。 类表示从 WMI CIM 管理类。 CIM 类表示包括硬件、 软件、 过程和等等的管理信息。 有关 Windows 中可用的 CIM 类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
    - id: options
      type: System.Management.ObjectGetOptions
      description: "<xref href=&quot;System.Management.ObjectGetOptions&quot;> </xref> ，它指定要检索 WMI 类时使用的选项。"
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)
  id: '#ctor(System.String,System.String,System.Management.ObjectGetOptions)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(String,String,ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(String,String,ObjectGetOptions)
  fullName: System.Management.ManagementClass.ManagementClass(String,String,ObjectGetOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化的新实例<xref href=&quot;System.Management.ManagementClass&quot;></xref>指定 WMI 类，在指定的作用域，并使用指定的选项的。 类从 WMI 表示通用信息模型 (CIM) 管理类如**Win32_LogicalDisk**，该类型可表示一个磁盘驱动器，和**Win32_Process**，这表示如 Notepad.exe 的进程。 有关详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
  remarks: "路径可以指定为完整路径 （包括服务器和命名空间）。 但是，如果已指定的范围，它将替代的完整路径的第一个部分。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers (including the amended qualifiers) for the created class. You must change the scope (namespace) in the code for the example to run correctly on your computer.  \n  \n [!code-vb[wminet_ManagementClass(S_S_O)#1](~/add/codesnippet/visualbasic/a6494137-cfc5-4043-a04e-_1.vb)]\n [!code-cs[wminet_ManagementClass(S_S_O)#1](~/add/codesnippet/csharp/a6494137-cfc5-4043-a04e-_1.cs)]"
  syntax:
    content: public ManagementClass (string scope, string path, System.Management.ObjectGetOptions options);
    parameters:
    - id: scope
      type: System.String
      description: "WMI 类驻留在其中的范围。"
    - id: path
      type: System.String
      description: "指定范围内的 WMI 类路径。 类表示从 WMI CIM 管理类。 CIM 类表示包括硬件、 软件、 过程和等等的管理信息。 有关 Windows 中可用的 CIM 类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;Win32 类&quot;。"
    - id: options
      type: System.Management.ObjectGetOptions
      description: "<xref href=&quot;System.Management.ObjectGetOptions&quot;> </xref> ，它指定要检索 WMI 类时使用的选项。"
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.Clone
  id: Clone
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Clone()
  nameWithType: ManagementClass.Clone()
  fullName: System.Management.ManagementClass.Clone()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "返回对象的副本。"
  remarks: "请注意这不会创建 WMI 类; 的副本创建仅其他表示形式。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "克隆的对象。"
  overload: System.Management.ManagementClass.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.CreateInstance
  id: CreateInstance
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: CreateInstance()
  nameWithType: ManagementClass.CreateInstance()
  fullName: System.Management.ManagementClass.CreateInstance()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "初始化 WMI 类的新实例。"
  remarks: "请注意，新的实例才会提交直到<xref:System.Management.ManagementObject.Put%2A>(~ / add/includes/ajax-current-ext-md.md) 调用方法。</xref:System.Management.ManagementObject.Put%2A> 然后再提交它，必须指定键的属性。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then create a new instance of a WMI class.  \n  \n [!code-vb[wminet_ManagementClass_CreateInstance#1](~/add/codesnippet/visualbasic/m-system.management.mana_1_1.vb)]\n [!code-cs[wminet_ManagementClass_CreateInstance#1](~/add/codesnippet/csharp/m-system.management.mana_1_1.cs)]"
  syntax:
    content: public System.Management.ManagementObject CreateInstance ();
    parameters: []
    return:
      type: System.Management.ManagementObject
      description: "A <xref href=&quot;System.Management.ManagementObject&quot;> </xref>表示 WMI 类的新实例。"
  overload: System.Management.ManagementClass.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.Derivation
  id: Derivation
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Derivation
  nameWithType: ManagementClass.Derivation
  fullName: System.Management.ManagementClass.Derivation
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取包含层次结构的顶部从此类继承层次结构中的所有 WMI 类的数组。"
  remarks: "此属性是只读的。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the classes in the inheritance hierarchy from the WMI class passed into the constructor, to the top of the hierarchy.  \n  \n [!code-cs[wminet_ManagementClass_Derivation#1](~/add/codesnippet/csharp/p-system.management.mana_1_1.cs)]\n [!code-vb[wminet_ManagementClass_Derivation#1](~/add/codesnippet/visualbasic/p-system.management.mana_1_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection Derivation { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "包含的所有继承层次结构中的此类的 WMI 类名称的字符串集合。"
  overload: System.Management.ManagementClass.Derivation*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.Derive(System.String)
  id: Derive(System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Derive(String)
  nameWithType: ManagementClass.Derive(String)
  fullName: System.Management.ManagementClass.Derive(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "从此类派生新类。"
  remarks: "请注意，新返回的类尚未提交直到<xref:System.Management.ManagementObject.Put%2A>(~ / add/includes/ajax-current-ext-md.md) 显式调用方法。</xref:System.Management.ManagementObject.Put%2A>      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then create a derived instance of a WMI class.  \n  \n [!code-cs[wminet_ManagementClass_Derive#1](~/add/codesnippet/csharp/m-system.management.mana_13_1.cs)]\n [!code-vb[wminet_ManagementClass_Derive#1](~/add/codesnippet/visualbasic/m-system.management.mana_13_1.vb)]"
  syntax:
    content: public System.Management.ManagementClass Derive (string newClassName);
    parameters:
    - id: newClassName
      type: System.String
      description: "要派生的新类的名称。"
    return:
      type: System.Management.ManagementClass
      description: "一个新<xref href=&quot;System.Management.ManagementClass&quot;> </xref> ，它表示从原始类派生的新 WMI 类。"
  overload: System.Management.ManagementClass.Derive*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetInstances
  id: GetInstances
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetInstances()
  nameWithType: ManagementClass.GetInstances()
  fullName: System.Management.ManagementClass.GetInstances()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "返回的类的所有实例的集合。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the instances of a WMI class.  \n  \n [!code-cs[wminet_ManagementClass_GetInstances()#1](~/add/codesnippet/csharp/m-system.management.mana_22_1.cs)]\n [!code-vb[wminet_ManagementClass_GetInstances()#1](~/add/codesnippet/visualbasic/m-system.management.mana_22_1.vb)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetInstances ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection
      description: "集合<xref href=&quot;System.Management.ManagementObject&quot;></xref>表示类的实例的对象。"
  overload: System.Management.ManagementClass.GetInstances*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)
  id: GetInstances(System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetInstances(EnumerationOptions)
  nameWithType: ManagementClass.GetInstances(EnumerationOptions)
  fullName: System.Management.ManagementClass.GetInstances(EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "返回使用指定的选项的类的所有实例的集合。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the instances of a WMI class and its subclasses.  \n  \n [!code-cs[wminet_ManagementClass_GetInstances(E)#1](~/add/codesnippet/csharp/81cdb3f9-bf1f-4718-a02d-_1.cs)]\n [!code-vb[wminet_ManagementClass_GetInstances(E)#1](~/add/codesnippet/visualbasic/81cdb3f9-bf1f-4718-a02d-_1.vb)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetInstances (System.Management.EnumerationOptions options);
    parameters:
    - id: options
      type: System.Management.EnumerationOptions
      description: "其他操作的选项。"
    return:
      type: System.Management.ManagementObjectCollection
      description: "集合<xref href=&quot;System.Management.ManagementObject&quot;></xref>对象表示的实例的类中，根据指定的选项。"
  overload: System.Management.ManagementClass.GetInstances*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)
  id: GetInstances(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetInstances(ManagementOperationObserver)
  nameWithType: ManagementClass.GetInstances(ManagementOperationObserver)
  fullName: System.Management.ManagementClass.GetInstances(ManagementOperationObserver)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "以异步方式返回的类的所有实例的集合。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the instances of a WMI class asynchronously.  \n  \n [!code-vb[wminet_ManagementClass_GetInstances(M)#1](~/add/codesnippet/visualbasic/cd7029ef-7621-45b0-ba07-_1.vb)]\n [!code-cs[wminet_ManagementClass_GetInstances(M)#1](~/add/codesnippet/csharp/cd7029ef-7621-45b0-ba07-_1.cs)]"
  syntax:
    content: public void GetInstances (System.Management.ManagementOperationObserver watcher);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "要处理异步操作的进度的对象。"
  overload: System.Management.ManagementClass.GetInstances*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  id: GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetInstances(ManagementOperationObserver,EnumerationOptions)
  nameWithType: ManagementClass.GetInstances(ManagementOperationObserver,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetInstances(ManagementOperationObserver,EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "使用指定的选项以异步方式，返回的类，所有实例的集合。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetInstances (System.Management.ManagementOperationObserver watcher, System.Management.EnumerationOptions options);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "要处理异步操作的进度的对象。"
    - id: options
      type: System.Management.EnumerationOptions
      description: "指定其他选项可用来获取实例。"
  overload: System.Management.ManagementClass.GetInstances*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ManagementClass.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Management.ManagementClass.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "填充<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>与所需进行反序列化此实例所表示的字段的数据。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "要用序列化信息填充的对象。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "将存储和检索序列化的数据的位置。"
  overload: System.Management.ManagementClass.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelatedClasses
  id: GetRelatedClasses
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses()
  nameWithType: ManagementClass.GetRelatedClasses()
  fullName: System.Management.ManagementClass.GetRelatedClasses()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与 WMI 类相关的类。"
  remarks: "该方法会查询所有可能关联的 WMI 类可能会与其他类，或在极少数情况下，实例的 WMI 架构。 有关相关的类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;联系的语句&quot;。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then list all the classes related to the WMI class passed into the constructor.  \n  \n [!code-vb[wminet_ManagementClass_GetRelatedClasses()#1](~/add/codesnippet/visualbasic/m-system.management.mana_30_1.vb)]\n [!code-cs[wminet_ManagementClass_GetRelatedClasses()#1](~/add/codesnippet/csharp/m-system.management.mana_30_1.cs)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelatedClasses ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection
      description: "集合<xref href=&quot;System.Management.ManagementClass&quot;></xref>或<xref href=&quot;System.Management.ManagementObject&quot;></xref>表示 WMI 类或实例的对象相关的 WMI 类。"
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)
  id: GetRelatedClasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver)
  fullName: System.Management.ManagementClass.GetRelatedClasses(ManagementOperationObserver)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与 WMI 类，以异步方式相关的类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "要处理异步操作的进度的对象。"
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelatedClasses(System.String)
  id: GetRelatedClasses(System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(String)
  nameWithType: ManagementClass.GetRelatedClasses(String)
  fullName: System.Management.ManagementClass.GetRelatedClasses(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与 WMI 类相关的类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelatedClasses (string relatedClass);
    parameters:
    - id: relatedClass
      type: System.String
      description: "生成的类必须从中派生的类。"
    return:
      type: System.Management.ManagementObjectCollection
      description: "与此类相关的类的集合。"
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  id: GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(ManagementOperationObserver,String)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver,String)
  fullName: System.Management.ManagementClass.GetRelatedClasses(ManagementOperationObserver,String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与 WMI 类，以异步方式，给定的相关的类名相关的类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher, string relatedClass);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "要处理异步操作的进度的对象。"
    - id: relatedClass
      type: System.String
      description: "相关类的名称。"
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  id: GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(String,String,String,String,String,String,EnumerationOptions)
  nameWithType: ManagementClass.GetRelatedClasses(String,String,String,String,String,String,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetRelatedClasses(String,String,String,String,String,String,EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与基于指定的选项的 WMI 类相关的类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example uses the GetRelatedClasses method to list the related classes to the **CIM_LogicalDisk** class. For more information, see \"CIM_LogicalDisk\" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-cs[wminet_ManagementClass_GetRelatedClasses(7)#1](~/add/codesnippet/csharp/0463e881-4c0d-47cc-8d85-_1.cs)]\n [!code-vb[wminet_ManagementClass_GetRelatedClasses(7)#1](~/add/codesnippet/visualbasic/0463e881-4c0d-47cc-8d85-_1.vb)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelatedClasses (string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, System.Management.EnumerationOptions options);
    parameters:
    - id: relatedClass
      type: System.String
      description: "生成的类必须从中派生的类。"
    - id: relationshipClass
      type: System.String
      description: "关系类型，其生成的类必须具有与源类。"
    - id: relationshipQualifier
      type: System.String
      description: "此限定符上必须存在关系。"
    - id: relatedQualifier
      type: System.String
      description: "此限定符上必须存在的生成类。"
    - id: relatedRole
      type: System.String
      description: "在关系中，所产生的类必须具有此角色。"
    - id: thisRole
      type: System.String
      description: "在关系中，源类必须具有此角色。"
    - id: options
      type: System.Management.EnumerationOptions
      description: "有关检索这些生成类的选项。"
    return:
      type: System.Management.ManagementObjectCollection
      description: "与此类相关的类的集合。"
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  id: GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(ManagementOperationObserver,String,String,String,String,String,String,EnumerationOptions)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver,String,String,String,String,String,String,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetRelatedClasses(ManagementOperationObserver,String,String,String,String,String,String,EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与相关的类的 WMI 类，以异步方式，使用指定的选项。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher, string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, System.Management.EnumerationOptions options);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "了解进度和结果的异步操作的处理程序。"
    - id: relatedClass
      type: System.String
      description: "生成的类必须从中派生的类。"
    - id: relationshipClass
      type: System.String
      description: "关系类型，其生成的类必须具有与源类。"
    - id: relationshipQualifier
      type: System.String
      description: "此限定符上必须存在关系。"
    - id: relatedQualifier
      type: System.String
      description: "此限定符上必须存在的生成类。"
    - id: relatedRole
      type: System.String
      description: "在关系中，所产生的类必须具有此角色。"
    - id: thisRole
      type: System.String
      description: "在关系中，源类必须具有此角色。"
    - id: options
      type: System.Management.EnumerationOptions
      description: "有关检索这些生成类的选项。"
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelationshipClasses
  id: GetRelationshipClasses
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses()
  nameWithType: ManagementClass.GetRelationshipClasses()
  fullName: System.Management.ManagementClass.GetRelationshipClasses()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与类的关系类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example uses the GetRelationshipClasses method to list the relationship classes to the **CIM_LogicalDisk** class. For more information, see \"CIM_LogicalDisk\" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-cs[wminet_ManagementClass_GetRelationshipClasses()#1](~/add/codesnippet/csharp/m-system.management.mana_26_1.cs)]\n [!code-vb[wminet_ManagementClass_GetRelationshipClasses()#1](~/add/codesnippet/visualbasic/m-system.management.mana_26_1.vb)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelationshipClasses ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection
      description: "集合*关联类*与类相关的任何其他类。"
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)
  id: GetRelationshipClasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(ManagementOperationObserver)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索关系类以异步方式与其他人，相关类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "要处理异步操作的进度的对象。"
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.String)
  id: GetRelationshipClasses(System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(String)
  nameWithType: ManagementClass.GetRelationshipClasses(String)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索关系类与类相关的其他人，其中该终结点类是指定的类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelationshipClasses (string relationshipClass);
    parameters:
    - id: relationshipClass
      type: System.String
      description: "返回的所有关系类的终结点类。"
    return:
      type: System.Management.ManagementObjectCollection
      description: "集合*关联类*使类与指定的类相关。 有关关系类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;联系的语句&quot;。"
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  id: GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(ManagementOperationObserver,String)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver,String)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(ManagementOperationObserver,String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与指定的 WMI 类，以异步方式相关类的关系类。"
  remarks: "有关关系类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;联系的语句&quot;。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher, string relationshipClass);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "要处理异步操作的进度的对象。"
    - id: relationshipClass
      type: System.String
      description: "应指向所有返回的关系的 WMI 类。"
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  id: GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(String,String,String,EnumerationOptions)
  nameWithType: ManagementClass.GetRelationshipClasses(String,String,String,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(String,String,String,EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索与此类，根据指定的选项的关系类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelationshipClasses (string relationshipClass, string relationshipQualifier, string thisRole, System.Management.EnumerationOptions options);
    parameters:
    - id: relationshipClass
      type: System.String
      description: "所有生成的关系类必须派生自此类。"
    - id: relationshipQualifier
      type: System.String
      description: "产生的关系类必须具有此限定符。"
    - id: thisRole
      type: System.String
      description: "源类必须具有此角色中产生的关系类。"
    - id: options
      type: System.Management.EnumerationOptions
      description: "指定用于检索结果的选项。"
    return:
      type: System.Management.ManagementObjectCollection
      description: "集合*关联类*，使此类与其他人，根据指定的选项。 有关关系类的详细信息，请参阅 http://msdn.microsoft.com/library 上 MSDN 库中的 Windows Management Instrumentation 文档中的&quot;联系的语句&quot;。"
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  id: GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(ManagementOperationObserver,String,String,String,EnumerationOptions)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver,String,String,String,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(ManagementOperationObserver,String,String,String,EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索使根据指定的选项，此类以异步方式相关的关系类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher, string relationshipClass, string relationshipQualifier, string thisRole, System.Management.EnumerationOptions options);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "了解进度和结果的异步操作处理程序。"
    - id: relationshipClass
      type: System.String
      description: "所有生成的关系类必须从中派生的类。"
    - id: relationshipQualifier
      type: System.String
      description: "限定符，其必须具有所产生的关系类。"
    - id: thisRole
      type: System.String
      description: "其源类必须具有在产生的关系类中的角色。"
    - id: options
      type: System.Management.EnumerationOptions
      description: "有关检索结果的选项。"
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  id: GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetStronglyTypedClassCode(Boolean,Boolean)
  nameWithType: ManagementClass.GetStronglyTypedClassCode(Boolean,Boolean)
  fullName: System.Management.ManagementClass.GetStronglyTypedClassCode(Boolean,Boolean)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "生成给定的 WMI 类的强类型类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example generates a strongly-typed class for the **Win32_LogicalDisk** class. The generated code is produced in C# or Visual Basic .NET.  \n  \n [!code-cs[wminet_ManagementClass_GetStronglyTypedClassCode(2)#1](~/add/codesnippet/csharp/b09eaa07-37c2-41ae-8e2b-_1.cs)]\n [!code-vb[wminet_ManagementClass_GetStronglyTypedClassCode(2)#1](~/add/codesnippet/visualbasic/b09eaa07-37c2-41ae-8e2b-_1.vb)]"
  syntax:
    content: public System.CodeDom.CodeTypeDeclaration GetStronglyTypedClassCode (bool includeSystemClassInClassDef, bool systemPropertyClass);
    parameters:
    - id: includeSystemClassInClassDef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>包括用于管理系统属性，为类否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: systemPropertyClass
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要生成的类将管理系统属性︰否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: "A <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref>表示强类型类的声明。"
  overload: System.Management.ManagementClass.GetStronglyTypedClassCode*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  id: GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetStronglyTypedClassCode(CodeLanguage,String,String)
  nameWithType: ManagementClass.GetStronglyTypedClassCode(CodeLanguage,String,String)
  fullName: System.Management.ManagementClass.GetStronglyTypedClassCode(CodeLanguage,String,String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "生成给定的 WMI 类的强类型类。 具体取决于输入参数情况下，此函数生成为 Visual Basic、 C#、 JScript、 J# 或 c + + 的代码。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example generates a strongly-typed class for the **Win32_LogicalDisk** class. The generated code is in C# for the C# example and Visual Basic .NET for the Visual Basic .NET example.  \n  \n [!code-cs[wminet_ManagementClass_GetStronglyTypedClassCode(3)#1](~/add/codesnippet/csharp/a8422609-381c-4b86-827a-_1.cs)]\n [!code-vb[wminet_ManagementClass_GetStronglyTypedClassCode(3)#1](~/add/codesnippet/visualbasic/a8422609-381c-4b86-827a-_1.vb)]"
  syntax:
    content: public bool GetStronglyTypedClassCode (System.Management.CodeLanguage lang, string filePath, string classNamespace);
    parameters:
    - id: lang
      type: System.Management.CodeLanguage
      description: "要生成的代码的语言。 此代码语言来自<xref href=&quot;System.Management.CodeLanguage&quot;></xref>枚举。"
    - id: filePath
      type: System.String
      description: "其中的代码是要写入文件的路径。"
    - id: classNamespace
      type: System.String
      description: "应在其中生成类的.net 命名空间。 这是否为空，则将从 WMI 命名空间生成命名空间。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果方法成功;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Management.ManagementClass.GetStronglyTypedClassCode*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetSubclasses
  id: GetSubclasses
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetSubclasses()
  nameWithType: ManagementClass.GetSubclasses()
  fullName: System.Management.ManagementClass.GetSubclasses()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "返回所有子类的类的集合。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example uses the GetSubclasses method to list the subclasses to the **CIM_LogicalDisk** class. For more information, see \"CIM_LogicalDisk\" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-cs[wminet_ManagementClass_GetSubClasses()#1](~/add/codesnippet/csharp/m-system.management.mana_17_1.cs)]\n [!code-vb[wminet_ManagementClass_GetSubClasses()#1](~/add/codesnippet/visualbasic/m-system.management.mana_17_1.vb)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetSubclasses ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection
      description: "集合<xref href=&quot;System.Management.ManagementObject&quot;></xref>表示 WMI 类的子类的对象。"
  overload: System.Management.ManagementClass.GetSubclasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)
  id: GetSubclasses(System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetSubclasses(EnumerationOptions)
  nameWithType: ManagementClass.GetSubclasses(EnumerationOptions)
  fullName: System.Management.ManagementClass.GetSubclasses(EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索指定的选项使用的类的子类。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then receive the subclasses of the WMI class passed into the constructor.  \n  \n [!code-cs[wminet_ManagementClass_GetSubClasses(E)#1](~/add/codesnippet/csharp/609a0b14-78f7-4fa0-8f73-_1.cs)]\n [!code-vb[wminet_ManagementClass_GetSubClasses(E)#1](~/add/codesnippet/visualbasic/609a0b14-78f7-4fa0-8f73-_1.vb)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetSubclasses (System.Management.EnumerationOptions options);
    parameters:
    - id: options
      type: System.Management.EnumerationOptions
      description: "指定其他选项来检索类的子类。"
    return:
      type: System.Management.ManagementObjectCollection
      description: "集合<xref href=&quot;System.Management.ManagementObject&quot;></xref>类对象表示 WMI 的子类，根据指定的选项。"
  overload: System.Management.ManagementClass.GetSubclasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)
  id: GetSubclasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetSubclasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetSubclasses(ManagementOperationObserver)
  fullName: System.Management.ManagementClass.GetSubclasses(ManagementOperationObserver)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "返回的所有类派生自此类，以异步方式的集合。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetSubclasses (System.Management.ManagementOperationObserver watcher);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "要处理异步操作的进度的对象。"
  overload: System.Management.ManagementClass.GetSubclasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  id: GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetSubclasses(ManagementOperationObserver,EnumerationOptions)
  nameWithType: ManagementClass.GetSubclasses(ManagementOperationObserver,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetSubclasses(ManagementOperationObserver,EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "检索所有类以异步方式派生自此类，使用指定的选项。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void GetSubclasses (System.Management.ManagementOperationObserver watcher, System.Management.EnumerationOptions options);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: "要处理异步操作的进度的对象。"
    - id: options
      type: System.Management.EnumerationOptions
      description: "要使用的派生的类检索中的指定其他选项。"
  overload: System.Management.ManagementClass.GetSubclasses*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.Methods
  id: Methods
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Methods
  nameWithType: ManagementClass.Methods
  fullName: System.Management.ManagementClass.Methods
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取或设置的集合<xref href=&quot;System.Management.MethodData&quot;></xref>表示 WMI 类中定义的方法的对象。"
  remarks: "##.NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the methods in the WMI class passed into the constructor.  \n  \n [!code-vb[wminet_ManagementClass_Methods#1](~/add/codesnippet/visualbasic/p-system.management.mana_12_1.vb)]\n [!code-cs[wminet_ManagementClass_Methods#1](~/add/codesnippet/csharp/p-system.management.mana_12_1.cs)]"
  syntax:
    content: public System.Management.MethodDataCollection Methods { get; }
    return:
      type: System.Management.MethodDataCollection
      description: "A <xref href=&quot;System.Management.MethodDataCollection&quot;> </xref>表示 WMI 类中定义的方法。"
  overload: System.Management.ManagementClass.Methods*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementClass.Path
  id: Path
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Path
  nameWithType: ManagementClass.Path
  fullName: System.Management.ManagementClass.Path
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "获取或设置到的 WMI 类的路径<xref href=&quot;System.Management.ManagementClass&quot;></xref>对象都绑定。"
  remarks: "当属性设置为新值，<xref:System.Management.ManagementClass>将断开任何以前绑定 WMI 类。</xref:System.Management.ManagementClass> 重新连接到新的 WMI 类路径。      ## .NET framework 安全完全信任直接调用方。 此成员不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the methods in the WMI class passed into the constructor.  \n  \n [!code-vb[wminet_ManagementClass_Path#1](~/add/codesnippet/visualbasic/p-system.management.mana_11_1.vb)]\n [!code-cs[wminet_ManagementClass_Path#1](~/add/codesnippet/csharp/p-system.management.mana_11_1.cs)]"
  syntax:
    content: public override System.Management.ManagementPath Path { get; set; }
    return:
      type: System.Management.ManagementPath
      description: "对象的类的路径。"
  overload: System.Management.ManagementClass.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Management.ManagementObject
  isExternal: false
  name: System.Management.ManagementObject
- uid: System.Management.ManagementClass.#ctor
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass()
  nameWithType: ManagementClass.ManagementClass()
  fullName: System.Management.ManagementClass.ManagementClass()
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementPath)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(ManagementPath)
  nameWithType: ManagementClass.ManagementClass(ManagementPath)
  fullName: System.Management.ManagementClass.ManagementClass(ManagementPath)
- uid: System.Management.ManagementPath
  parent: System.Management
  isExternal: false
  name: ManagementPath
  nameWithType: ManagementPath
  fullName: System.Management.ManagementPath
- uid: System.Management.ManagementClass.#ctor(System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(String)
  nameWithType: ManagementClass.ManagementClass(String)
  fullName: System.Management.ManagementClass.ManagementClass(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(ManagementPath,ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(ManagementPath,ObjectGetOptions)
  fullName: System.Management.ManagementClass.ManagementClass(ManagementPath,ObjectGetOptions)
- uid: System.Management.ObjectGetOptions
  parent: System.Management
  isExternal: false
  name: ObjectGetOptions
  nameWithType: ObjectGetOptions
  fullName: System.Management.ObjectGetOptions
- uid: System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(SerializationInfo,StreamingContext)
  nameWithType: ManagementClass.ManagementClass(SerializationInfo,StreamingContext)
  fullName: System.Management.ManagementClass.ManagementClass(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(String,ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(String,ObjectGetOptions)
  fullName: System.Management.ManagementClass.ManagementClass(String,ObjectGetOptions)
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(ManagementScope,ManagementPath,ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(ManagementScope,ManagementPath,ObjectGetOptions)
  fullName: System.Management.ManagementClass.ManagementClass(ManagementScope,ManagementPath,ObjectGetOptions)
- uid: System.Management.ManagementScope
  parent: System.Management
  isExternal: false
  name: ManagementScope
  nameWithType: ManagementScope
  fullName: System.Management.ManagementScope
- uid: System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(String,String,ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(String,String,ObjectGetOptions)
  fullName: System.Management.ManagementClass.ManagementClass(String,String,ObjectGetOptions)
- uid: System.Management.ManagementClass.Clone
  parent: System.Management.ManagementClass
  isExternal: false
  name: Clone()
  nameWithType: ManagementClass.Clone()
  fullName: System.Management.ManagementClass.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Management.ManagementClass.CreateInstance
  parent: System.Management.ManagementClass
  isExternal: false
  name: CreateInstance()
  nameWithType: ManagementClass.CreateInstance()
  fullName: System.Management.ManagementClass.CreateInstance()
- uid: System.Management.ManagementClass.Derivation
  parent: System.Management.ManagementClass
  isExternal: false
  name: Derivation
  nameWithType: ManagementClass.Derivation
  fullName: System.Management.ManagementClass.Derivation
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.Management.ManagementClass.Derive(System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: Derive(String)
  nameWithType: ManagementClass.Derive(String)
  fullName: System.Management.ManagementClass.Derive(String)
- uid: System.Management.ManagementClass
  parent: System.Management
  isExternal: false
  name: ManagementClass
  nameWithType: ManagementClass
  fullName: System.Management.ManagementClass
- uid: System.Management.ManagementClass.GetInstances
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances()
  nameWithType: ManagementClass.GetInstances()
  fullName: System.Management.ManagementClass.GetInstances()
- uid: System.Management.ManagementObjectCollection
  parent: System.Management
  isExternal: false
  name: ManagementObjectCollection
  nameWithType: ManagementObjectCollection
  fullName: System.Management.ManagementObjectCollection
- uid: System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances(EnumerationOptions)
  nameWithType: ManagementClass.GetInstances(EnumerationOptions)
  fullName: System.Management.ManagementClass.GetInstances(EnumerationOptions)
- uid: System.Management.EnumerationOptions
  parent: System.Management
  isExternal: false
  name: EnumerationOptions
  nameWithType: EnumerationOptions
  fullName: System.Management.EnumerationOptions
- uid: System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances(ManagementOperationObserver)
  nameWithType: ManagementClass.GetInstances(ManagementOperationObserver)
  fullName: System.Management.ManagementClass.GetInstances(ManagementOperationObserver)
- uid: System.Management.ManagementOperationObserver
  parent: System.Management
  isExternal: false
  name: ManagementOperationObserver
  nameWithType: ManagementOperationObserver
  fullName: System.Management.ManagementOperationObserver
- uid: System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances(ManagementOperationObserver,EnumerationOptions)
  nameWithType: ManagementClass.GetInstances(ManagementOperationObserver,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetInstances(ManagementOperationObserver,EnumerationOptions)
- uid: System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ManagementClass.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Management.ManagementClass.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Management.ManagementClass.GetRelatedClasses
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses()
  nameWithType: ManagementClass.GetRelatedClasses()
  fullName: System.Management.ManagementClass.GetRelatedClasses()
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver)
  fullName: System.Management.ManagementClass.GetRelatedClasses(ManagementOperationObserver)
- uid: System.Management.ManagementClass.GetRelatedClasses(System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(String)
  nameWithType: ManagementClass.GetRelatedClasses(String)
  fullName: System.Management.ManagementClass.GetRelatedClasses(String)
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(ManagementOperationObserver,String)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver,String)
  fullName: System.Management.ManagementClass.GetRelatedClasses(ManagementOperationObserver,String)
- uid: System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(String,String,String,String,String,String,EnumerationOptions)
  nameWithType: ManagementClass.GetRelatedClasses(String,String,String,String,String,String,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetRelatedClasses(String,String,String,String,String,String,EnumerationOptions)
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(ManagementOperationObserver,String,String,String,String,String,String,EnumerationOptions)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver,String,String,String,String,String,String,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetRelatedClasses(ManagementOperationObserver,String,String,String,String,String,String,EnumerationOptions)
- uid: System.Management.ManagementClass.GetRelationshipClasses
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses()
  nameWithType: ManagementClass.GetRelationshipClasses()
  fullName: System.Management.ManagementClass.GetRelationshipClasses()
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(ManagementOperationObserver)
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(String)
  nameWithType: ManagementClass.GetRelationshipClasses(String)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(String)
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(ManagementOperationObserver,String)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver,String)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(ManagementOperationObserver,String)
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(String,String,String,EnumerationOptions)
  nameWithType: ManagementClass.GetRelationshipClasses(String,String,String,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(String,String,String,EnumerationOptions)
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(ManagementOperationObserver,String,String,String,EnumerationOptions)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver,String,String,String,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetRelationshipClasses(ManagementOperationObserver,String,String,String,EnumerationOptions)
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetStronglyTypedClassCode(Boolean,Boolean)
  nameWithType: ManagementClass.GetStronglyTypedClassCode(Boolean,Boolean)
  fullName: System.Management.ManagementClass.GetStronglyTypedClassCode(Boolean,Boolean)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetStronglyTypedClassCode(CodeLanguage,String,String)
  nameWithType: ManagementClass.GetStronglyTypedClassCode(CodeLanguage,String,String)
  fullName: System.Management.ManagementClass.GetStronglyTypedClassCode(CodeLanguage,String,String)
- uid: System.Management.CodeLanguage
  parent: System.Management
  isExternal: false
  name: CodeLanguage
  nameWithType: CodeLanguage
  fullName: System.Management.CodeLanguage
- uid: System.Management.ManagementClass.GetSubclasses
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses()
  nameWithType: ManagementClass.GetSubclasses()
  fullName: System.Management.ManagementClass.GetSubclasses()
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses(EnumerationOptions)
  nameWithType: ManagementClass.GetSubclasses(EnumerationOptions)
  fullName: System.Management.ManagementClass.GetSubclasses(EnumerationOptions)
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetSubclasses(ManagementOperationObserver)
  fullName: System.Management.ManagementClass.GetSubclasses(ManagementOperationObserver)
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses(ManagementOperationObserver,EnumerationOptions)
  nameWithType: ManagementClass.GetSubclasses(ManagementOperationObserver,EnumerationOptions)
  fullName: System.Management.ManagementClass.GetSubclasses(ManagementOperationObserver,EnumerationOptions)
- uid: System.Management.ManagementClass.Methods
  parent: System.Management.ManagementClass
  isExternal: false
  name: Methods
  nameWithType: ManagementClass.Methods
  fullName: System.Management.ManagementClass.Methods
- uid: System.Management.MethodDataCollection
  parent: System.Management
  isExternal: false
  name: MethodDataCollection
  nameWithType: MethodDataCollection
  fullName: System.Management.MethodDataCollection
- uid: System.Management.ManagementClass.Path
  parent: System.Management.ManagementClass
  isExternal: false
  name: Path
  nameWithType: ManagementClass.Path
  fullName: System.Management.ManagementClass.Path
- uid: System.Management.ManagementClass.#ctor*
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass
  nameWithType: ManagementClass.ManagementClass
- uid: System.Management.ManagementClass.Clone*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Clone
  nameWithType: ManagementClass.Clone
- uid: System.Management.ManagementClass.CreateInstance*
  parent: System.Management.ManagementClass
  isExternal: false
  name: CreateInstance
  nameWithType: ManagementClass.CreateInstance
- uid: System.Management.ManagementClass.Derivation*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Derivation
  nameWithType: ManagementClass.Derivation
- uid: System.Management.ManagementClass.Derive*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Derive
  nameWithType: ManagementClass.Derive
- uid: System.Management.ManagementClass.GetInstances*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances
  nameWithType: ManagementClass.GetInstances
- uid: System.Management.ManagementClass.GetObjectData*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetObjectData
  nameWithType: ManagementClass.GetObjectData
- uid: System.Management.ManagementClass.GetRelatedClasses*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses
  nameWithType: ManagementClass.GetRelatedClasses
- uid: System.Management.ManagementClass.GetRelationshipClasses*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses
  nameWithType: ManagementClass.GetRelationshipClasses
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetStronglyTypedClassCode
  nameWithType: ManagementClass.GetStronglyTypedClassCode
- uid: System.Management.ManagementClass.GetSubclasses*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses
  nameWithType: ManagementClass.GetSubclasses
- uid: System.Management.ManagementClass.Methods*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Methods
  nameWithType: ManagementClass.Methods
- uid: System.Management.ManagementClass.Path*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Path
  nameWithType: ManagementClass.Path
