### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.SayAs
  id: SayAs
  children:
  - System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  - System.Speech.Synthesis.TtsEngine.SayAs.Detail
  - System.Speech.Synthesis.TtsEngine.SayAs.Format
  - System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  langs:
  - csharp
  name: SayAs
  nameWithType: SayAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs
  type: Class
  summary: "包含有关确定应如何发言文本的内容类型 （如货币、 日期或地址） 或语言构造的信息。"
  syntax:
    content: public class SayAs
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  id: '#ctor'
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: SayAs()
  nameWithType: SayAs.SayAs()
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.SayAs()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "创建的新实例`SayAs`类。"
  remarks: "属性<xref:System.Speech.Synthesis.TtsEngine.SayAs>类用于获取或设置的属性的值`say-as`SSML 标记中的元素。</xref:System.Speech.Synthesis.TtsEngine.SayAs> <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>属性使用<xref:System.Speech.Synthesis.TtsEngine.SayAs>实例以通知<xref:System.Speech.Synthesis.SpeechSynthesizer>如何说话<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>的一种<xref:System.Speech.Synthesis.TtsEngine.TextFragment>。</xref:System.Speech.Synthesis.TtsEngine.TextFragment>属性</xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>中包含的文本</xref:System.Speech.Synthesis.SpeechSynthesizer></xref:System.Speech.Synthesis.TtsEngine.SayAs></xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>"
  syntax:
    content: public SayAs ();
    parameters: []
  overload: System.Speech.Synthesis.TtsEngine.SayAs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  id: Detail
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: Detail
  nameWithType: SayAs.Detail
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "获取或设置的值`detail`属性，则为`say-as`提示符的 SSML 标记语言的元素。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>属性获取或设置的值中的 Detail 属性<xref:System.Speech.Synthesis.TtsEngine.SayAs>实例。</xref:System.Speech.Synthesis.TtsEngine.SayAs> </xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>"
  syntax:
    content: public string Detail { get; set; }
    return:
      type: System.String
      description: "要添加。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.Detail*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format
  id: Format
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: Format
  nameWithType: SayAs.Format
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Format
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "获取或设置的值`format`属性，则为`say-as`提示符的 SSML 标记语言的元素。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>属性获取或设置的值中的格式属性<xref:System.Speech.Synthesis.TtsEngine.SayAs>实例。</xref:System.Speech.Synthesis.TtsEngine.SayAs> </xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>       例如，一条提示可能包含短语&quot;的时间是`<say-as interpret-as=”time”> 05:00 </say-as>`&quot;。  在此示例中，`05:00`可能就读作&quot;点钟五个&quot;或&quot;五 AM&quot;或&quot;噢五百个&quot;。 Format 属性允许的值`interpret-as`属性来进行扩展以指定要朗读的时间格式。 如果值`interpret-as`属性为&quot;时间︰&24; 小时&quot;，<xref:System.Speech.Synthesis.SpeechSynthesizer>说出&quot;噢五百个&quot;。</xref:System.Speech.Synthesis.SpeechSynthesizer> 如果值`interpret-as`属性是&quot;时间︰&12; hour&quot;、<xref:System.Speech.Synthesis.SpeechSynthesizer>说出&quot;的 M 的五个&quot;。</xref:System.Speech.Synthesis.SpeechSynthesizer>"
  syntax:
    content: public string Format { get; set; }
    return:
      type: System.String
      description: "要添加。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.Format*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  id: InterpretAs
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "获取或设置的值`interpret-as`属性，则为`say-as`提示符的 SSML 标记语言的元素。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>属性获取或设置的值中的 InterpretAs 属性<xref:System.Speech.Synthesis.TtsEngine.SayAs>实例。</xref:System.Speech.Synthesis.TtsEngine.SayAs> </xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>       <xref:System.Speech.Synthesis.SpeechSynthesizer>使用由 InterpretAs 属性指示的内容类型来确定如何呈现指定的文本。</xref:System.Speech.Synthesis.SpeechSynthesizer>       例如，爱可能就读作名称的名称:&quot;我的名称是爱&quot;。 或它无法以字母，指定与拼`interpret-as`该句中的属性:&quot;我的姓名`<say-as interpret-as=”spell-out”> Edgar </say-as>`。&quot; 在这种情况下，<xref:System.Speech.Synthesis.SpeechSynthesizer>讲话时为&quot;E D G R&quot;爱。</xref:System.Speech.Synthesis.SpeechSynthesizer>"
  syntax:
    content: public string InterpretAs { get; set; }
    return:
      type: System.String
      description: "要添加。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: SayAs()
  nameWithType: SayAs.SayAs()
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.SayAs()
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Detail
  nameWithType: SayAs.Detail
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Detail
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Format
  nameWithType: SayAs.Format
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Format
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: SayAs
  nameWithType: SayAs.SayAs
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Detail
  nameWithType: SayAs.Detail
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Format
  nameWithType: SayAs.Format
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
