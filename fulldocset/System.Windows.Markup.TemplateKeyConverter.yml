### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.TemplateKeyConverter
  id: TemplateKeyConverter
  children:
  - System.Windows.Markup.TemplateKeyConverter.#ctor
  - System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: TemplateKeyConverter
  nameWithType: TemplateKeyConverter
  fullName: System.Windows.Markup.TemplateKeyConverter
  type: Class
  summary: "实现的类型转换器<xref href=&quot;System.Windows.TemplateKey&quot;></xref>有意具有没有类型转换路径的对象。 类型转换器强制执行，并报告该行为。"
  remarks: "<xref:System.Windows.TemplateKey>类型不应使用类型转换器途径来转换 （应改用标记扩展） 的值。</xref:System.Windows.TemplateKey> 为此，<xref:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>和<xref:System.Windows.Markup.TemplateKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>方法始终返回`false`。</xref:System.Windows.Markup.TemplateKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> </xref:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> <xref:System.Windows.Markup.TemplateKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>和<xref:System.Windows.Markup.TemplateKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29>方法始终引发异常。</xref:System.Windows.Markup.TemplateKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29> </xref:System.Windows.Markup.TemplateKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>      <a name=&quot;xamlTextUsage_TemplateKeyConverter&quot;></a># # XAML 文本用法"
  syntax:
    content: 'public sealed class TemplateKeyConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: TemplateKeyConverter()
  nameWithType: TemplateKeyConverter.TemplateKeyConverter()
  fullName: System.Windows.Markup.TemplateKeyConverter.TemplateKeyConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "初始化的新实例<xref href=&quot;System.Windows.Markup.TemplateKeyConverter&quot;></xref>类。"
  syntax:
    content: public TemplateKeyConverter ();
    parameters: []
  overload: System.Windows.Markup.TemplateKeyConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TemplateKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "确定指定类型的对象是否可以转换为的实例<xref href=&quot;System.Windows.TemplateKey&quot;> </xref>。"
  remarks: "请参阅备注中<xref:System.Windows.Markup.TemplateKeyConverter>。</xref:System.Windows.Markup.TemplateKeyConverter>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "提供有关从中调用此转换器的环境的信息的格式上下文。"
    - id: sourceType
      type: System.Type
      description: "计算用于转换类型。"
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TemplateKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "确定实例是否<xref href=&quot;System.Windows.TemplateKey&quot;></xref>可以转换为指定的类型。"
  remarks: "请参阅备注中<xref:System.Windows.Markup.TemplateKeyConverter>。</xref:System.Windows.Markup.TemplateKeyConverter>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "提供有关从中调用此转换器的环境的信息的格式上下文。"
    - id: destinationType
      type: System.Type
      description: "计算用于转换类型。"
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.TemplateKeyConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TemplateKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.TemplateKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "尝试将指定的对象 （字符串） 转换到<xref href=&quot;System.Windows.TemplateKey&quot;> </xref>。"
  remarks: "请参阅备注中<xref:System.Windows.Markup.TemplateKeyConverter>。</xref:System.Windows.Markup.TemplateKeyConverter>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "提供有关从中调用此转换器的环境的信息的格式上下文。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "区域性特定信息。"
    - id: source
      type: System.Object
      description: "要转换的对象。"
    return:
      type: System.Object
      description: "总是引发异常。"
  overload: System.Windows.Markup.TemplateKeyConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>source</code>无法转换。"
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TemplateKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "尝试将转换<xref href=&quot;System.Windows.TemplateKey&quot;></xref>到指定的类型，使用指定的上下文。"
  remarks: "请参阅备注中<xref:System.Windows.Markup.TemplateKeyConverter>。</xref:System.Windows.Markup.TemplateKeyConverter>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "提供有关从中调用此转换器的环境的信息的格式上下文。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "区域性特定信息。"
    - id: value
      type: System.Object
      description: "要转换的对象。"
    - id: destinationType
      type: System.Type
      description: "要转换到的对象的类型。"
    return:
      type: System.Object
      description: "总是引发异常。"
  overload: System.Windows.Markup.TemplateKeyConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>value</code>无法转换。"
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Markup.TemplateKeyConverter.#ctor
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: TemplateKeyConverter()
  nameWithType: TemplateKeyConverter.TemplateKeyConverter()
  fullName: System.Windows.Markup.TemplateKeyConverter.TemplateKeyConverter()
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TemplateKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TemplateKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TemplateKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.TemplateKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TemplateKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.TemplateKeyConverter.#ctor*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: TemplateKeyConverter
  nameWithType: TemplateKeyConverter.TemplateKeyConverter
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TemplateKeyConverter.CanConvertFrom
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertTo*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TemplateKeyConverter.CanConvertTo
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertFrom*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TemplateKeyConverter.ConvertFrom
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertTo*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TemplateKeyConverter.ConvertTo
