### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  id: ArgumentToExpressionModelItemConverter
  children:
  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor
  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: ArgumentToExpressionModelItemConverter
  nameWithType: ArgumentToExpressionModelItemConverter
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  type: Class
  summary: "定义自变量和表达式模型项之间的映射，并提供的功能，这些对象之间进行转换。"
  remarks: "此转换器可以用于将数据绑定到<xref:System.Activities.Presentation.View.ExpressionTextBox>或其他 WPF 控件。</xref:System.Activities.Presentation.View.ExpressionTextBox> 有关详细信息，请参阅[在自定义属性编辑器中使用 ExpressionTextBox](http://go.microsoft.com/fwlink/?LinkID=224791)。"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: 'public class ArgumentToExpressionModelItemConverter : System.Windows.Data.IMultiValueConverter'
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IMultiValueConverter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  langs:
  - csharp
  name: ArgumentToExpressionModelItemConverter()
  nameWithType: ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: "初始化的新实例<xref href=&quot;System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter&quot;></xref>类。"
  syntax:
    content: public ArgumentToExpressionModelItemConverter ();
    parameters: []
  overload: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  langs:
  - csharp
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: "将指定的自变量转换为表达式模型项。"
  syntax:
    content: public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: values
      type: System.Object[]
      description: "要添加。"
    - id: targetType
      type: System.Type
      description: "不在此实现中使用。"
    - id: parameter
      type: System.Object
      description: "不在此实现中使用。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "不在此实现中使用。"
    return:
      type: System.Object
      description: "返回<xref:System.Object>包含表达式模型项。</xref:System.Object>"
  overload: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: "将指定的表达式模型项转换为自变量。"
  syntax:
    content: public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: "要转换的模型项。"
    - id: targetTypes
      type: System.Type[]
      description: "不在此实现中使用。"
    - id: parameter
      type: System.Object
      description: "不在此实现中使用。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "不在此实现中使用。"
    return:
      type: System.Object[]
      description: "返回<xref:System.Object>包含参数。</xref:System.Object>"
  overload: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  isExternal: false
  name: ArgumentToExpressionModelItemConverter()
  nameWithType: ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  isExternal: false
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  isExternal: false
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor*
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  isExternal: false
  name: ArgumentToExpressionModelItemConverter
  nameWithType: ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert*
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  isExternal: false
  name: Convert
  nameWithType: ArgumentToExpressionModelItemConverter.Convert
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack*
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter
  isExternal: false
  name: ConvertBack
  nameWithType: ArgumentToExpressionModelItemConverter.ConvertBack
