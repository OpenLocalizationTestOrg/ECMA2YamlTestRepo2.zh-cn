### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  id: IMultiTargetingSupportService
  children:
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  langs:
  - csharp
  name: IMultiTargetingSupportService
  nameWithType: IMultiTargetingSupportService
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  type: Interface
  summary: "提供多目标的[!INCLUDE[wfd1](~/add/includes/wfd1-md.md)]主机。"
  remarks: "*多目标*是查找对应于目标加载的程序集的正确版本的能力[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]版本中的当前工作流项目[!INCLUDE[vs2010](~/add/includes/vs2010-md.md)]。       实现此接口，将其内部使用[!INCLUDE[wf1](~/add/includes/wf1-md.md)]设计器组件来解决[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]多目标感知方式中的程序集[!INCLUDE[vs2010](~/add/includes/vs2010-md.md)]托管应用程序。 [!INCLUDE[wf1](~/add/includes/wf1-md.md)]设计器组件仅在需要加载动态到编辑其他程序集时，才使用此接口的实现`AppDomain`。"
  syntax:
    content: public interface IMultiTargetingSupportService
  implements: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  id: GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "返回当前加载给定程序集名称的程序集。"
  syntax:
    content: public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);
    parameters:
    - id: targetAssemblyName
      type: System.Reflection.AssemblyName
      description: "程序集名称。"
    return:
      type: System.Reflection.Assembly
      description: "当前加载的程序集给定程序集名称。"
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "获取指定类型相对应的运行时类型。"
  syntax:
    content: public Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "要获取的运行时类型的类型。"
    return:
      type: System.Type
      description: "为指定类型相对应的运行时类型。"
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "返回一个值，该值指示是否支持指定的类型。"
  syntax:
    content: public bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要检查的类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支持指定的类型;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType
  nameWithType: IMultiTargetingSupportService.GetRuntimeType
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType
  nameWithType: IMultiTargetingSupportService.IsSupportedType
