### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.ThenBy
  id: ThenBy
  children:
  - System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  - System.Web.UI.WebControls.Expressions.ThenBy.DataField
  - System.Web.UI.WebControls.Expressions.ThenBy.Direction
  langs:
  - csharp
  name: ThenBy
  nameWithType: ThenBy
  fullName: System.Web.UI.WebControls.Expressions.ThenBy
  type: Class
  summary: "提供一种方法应用到的排序表达式<xref:System.Linq.IQueryable>后的数据源对象<xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;></xref>应用表达式。</xref:System.Linq.IQueryable>"
  remarks: "后一种操作执行使用<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>中的表达式<xref:System.Web.UI.WebControls.QueryExtender>控制，可以在不同的数据字段上使用 ThenBy 类执行操作的后续排序。</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then on the ProductID field in ascending order using the ThenBy type. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public class ThenBy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: ThenBy()
  nameWithType: ThenBy.ThenBy()
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.ThenBy()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;></xref>类。"
  syntax:
    content: public ThenBy ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.ThenBy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: DataField
  nameWithType: ThenBy.DataField
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "获取或设置的属性<xref:System.Linq.IQueryable>要应用对象<xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;></xref>表达式。</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>对指定的数据字段上的数据进行排序。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 可以通过使用不同的数据字段执行后续排序操作<xref:System.Web.UI.WebControls.Expressions.OrderByExpression><xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>集合。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 此属性指定要应用的数据字段`ThenBy`排序操作。"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then on the Product ID field in ascending order. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "属性<xref:System.Linq.IQueryable>要应用对象<xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;></xref>表达式。</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.ThenBy.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  id: Direction
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: Direction
  nameWithType: ThenBy.Direction
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "获取或设置的排序方向<xref:System.Linq.IQueryable>数据源对象。</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>中使用<xref:System.Web.UI.WebControls.QueryExtender>控件的数据按升序或降序排序。</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 使用指定的排序操作的方向<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>属性。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and on the ProductID field in ascending order by using the Direction property. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.SortDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "排序方向<xref:System.Linq.IQueryable>数据源对象。</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.ThenBy.Direction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: ThenBy()
  nameWithType: ThenBy.ThenBy()
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.ThenBy()
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: DataField
  nameWithType: ThenBy.DataField
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: Direction
  nameWithType: ThenBy.Direction
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.Direction
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: ThenBy
  nameWithType: ThenBy.ThenBy
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: DataField
  nameWithType: ThenBy.DataField
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: Direction
  nameWithType: ThenBy.Direction
