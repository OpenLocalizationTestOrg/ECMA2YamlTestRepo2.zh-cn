### YamlMime:ManagedReference
items:
- uid: System.Web.TraceContextRecord
  id: TraceContextRecord
  children:
  - System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)
  - System.Web.TraceContextRecord.Category
  - System.Web.TraceContextRecord.ErrorInfo
  - System.Web.TraceContextRecord.IsWarning
  - System.Web.TraceContextRecord.Message
  langs:
  - csharp
  name: TraceContextRecord
  nameWithType: TraceContextRecord
  fullName: System.Web.TraceContextRecord
  type: Class
  summary: "表示 ASP.NET 跟踪消息和任何关联的数据。"
  remarks: "TraceContextRecord 对象所封装跟踪消息、 类别、 任何关联<xref:System.Exception>，以及是否通过写入跟踪记录<xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName>方法。</xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName> </xref:System.Exception>       对每个调用<xref:System.Web.TraceContext.Write%2A?displayProperty=fullName>和<xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName>方法生成添加到的 TraceContextRecord 对象<xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=fullName>消息集合。</xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> 可以记录对集合的访问通过处理<xref:System.Web.TraceContext.TraceFinished>事件。</xref:System.Web.TraceContext.TraceFinished>"
  example:
  - "The following code example demonstrates how you can register a <xref:System.Web.TraceContextEventHandler> delegate to handle the <xref:System.Web.TraceContext.TraceFinished> event. In this example, the `OnTraceFinished` method accesses the collection of TraceContextRecord objects through the <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> property, iterates through them, and writes them to the response stream.  \n  \n [!code-cs[System.Web.Trace_3#1](~/add/codesnippet/csharp/t-system.web.tracecontex_2_1.aspx)]\n [!code-vb[System.Web.Trace_3#1](~/add/codesnippet/visualbasic/t-system.web.tracecontex_2_1.aspx)]"
  syntax:
    content: public sealed class TraceContextRecord
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)
  id: '#ctor(System.String,System.String,System.Boolean,System.Exception)'
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: TraceContextRecord(String,String,Boolean,Exception)
  nameWithType: TraceContextRecord.TraceContextRecord(String,String,Boolean,Exception)
  fullName: System.Web.TraceContextRecord.TraceContextRecord(String,String,Boolean,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新实例<xref href=&quot;System.Web.TraceContextRecord&quot;></xref>类。"
  remarks: "对每个调用<xref:System.Web.TraceContext.Write%2A?displayProperty=fullName>和<xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName>方法生成<xref:System.Web.TraceContextRecord>对象添加到<xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=fullName>消息集合。</xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=fullName> </xref:System.Web.TraceContextRecord> </xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> <xref:System.Web.TraceContext.Warn%2A>方法调用设置<xref:System.Web.TraceContextRecord.IsWarning%2A>属性`true`，虽然<xref:System.Web.TraceContext.Write%2A>方法调用将其设置为`false`。</xref:System.Web.TraceContext.Write%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A> </xref:System.Web.TraceContext.Warn%2A>"
  syntax:
    content: public TraceContextRecord (string category, string msg, bool isWarning, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "接收的消息跟踪类别。"
    - id: msg
      type: System.String
      description: "跟踪消息。"
    - id: isWarning
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该方法关联<xref href=&quot;System.Web.TraceContextRecord&quot;></xref>是<> *1> 方法;<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>如果跟踪方法<> *1> 方法。"
    - id: errorInfo
      type: System.Exception
      description: "A<xref:System.Exception>对象，其中包含其他错误信息。</xref:System.Exception>"
  overload: System.Web.TraceContextRecord.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.Category
  id: Category
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: Category
  nameWithType: TraceContextRecord.Category
  fullName: System.Web.TraceContextRecord.Category
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取跟踪记录的用户定义的类别。"
  remarks: "类别用于更好地组织成可识别的组的跟踪消息，但可以是任意字符串。 <xref:System.Web.TraceContext>类使用<xref:System.String.Empty?displayProperty=fullName>作为方法仅采用其默认类别`message`参数。</xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.TraceContext> 对于 ASP.NET，将多个跟踪记录写入启用跟踪时，默认类别是&quot;aspx.page&quot;。"
  example:
  - "The following code example demonstrates how to access the Category property of a <xref:System.Web.TraceContextRecord>, and print it and its associated trace message to the `Response` stream.  \n  \n [!code-cs[System.Web.Trace_5#1](~/add/codesnippet/csharp/p-system.web.tracecontex_1_1.aspx)]\n [!code-vb[System.Web.Trace_5#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_1_1.aspx)]"
  syntax:
    content: public string Category { get; }
    return:
      type: System.String
      description: "一个字符串，表示跟踪记录的类别。"
  overload: System.Web.TraceContextRecord.Category*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.ErrorInfo
  id: ErrorInfo
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: ErrorInfo
  nameWithType: TraceContextRecord.ErrorInfo
  fullName: System.Web.TraceContextRecord.ErrorInfo
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取<xref:System.Exception>与跟踪记录中，如果有的话。</xref:System.Exception>"
  remarks: "如果正使用跟踪来调试应用程序或排除错误和异常处理，可以在跟踪记录中包含异常。 ErrorInfo 属性是`null`跟踪记录时与一个相关联<xref:System.Web.TraceContext>方法没有显式`errorInfo`提供参数或任何异常。</xref:System.Web.TraceContext>"
  syntax:
    content: public Exception ErrorInfo { get; }
    return:
      type: System.Exception
      description: "A<xref:System.Exception>与跟踪记录中，如果存在，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Exception>"
  overload: System.Web.TraceContextRecord.ErrorInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.IsWarning
  id: IsWarning
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: IsWarning
  nameWithType: TraceContextRecord.IsWarning
  fullName: System.Web.TraceContextRecord.IsWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取一个值，该值是否与关联的跟踪记录&lt;xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName&gt;方法调用。"
  remarks: ''
  example:
  - "The following code example demonstrates how to check the IsWarning property of a <xref:System.Web.TraceContextRecord> to determine whether the message that the record contains was written by a <xref:System.Web.TraceContext.Warn%2A> or <xref:System.Web.TraceContext.Write%2A> method call. If the trace record is a warning message, a different action is taken than if it is an error message.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/p-system.web.tracecontex_0_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_0_1.aspx)]"
  syntax:
    content: public bool IsWarning { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.TraceContextRecord&quot;></xref>与关联<xref:System.Web.TraceContext.Warn*>方法调用; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.TraceContext.Warn*>"
  overload: System.Web.TraceContextRecord.IsWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.Message
  id: Message
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: Message
  nameWithType: TraceContextRecord.Message
  fullName: System.Web.TraceContextRecord.Message
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "获取用户定义的跟踪消息。"
  remarks: "消息可以是任意字符串，并用于写入详细的跟踪信息。 它对应于消息参数传递给<xref:System.Web.TraceContext.Write%2A?displayProperty=fullName>和<xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName>方法。</xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> 信息可以是运行时的值，消息，从而确定你的方向并引导您完成程序的执行或其他诊断数据。"
  example:
  - "The following code example demonstrates how to access the Message property of a <xref:System.Web.TraceContextRecord>, and print it to the `Response` stream.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/p-system.web.tracecontex_2_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_2_1.aspx)]"
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: "一个表示跟踪记录一条消息的字符串。"
  overload: System.Web.TraceContextRecord.Message*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: TraceContextRecord(String,String,Boolean,Exception)
  nameWithType: TraceContextRecord.TraceContextRecord(String,String,Boolean,Exception)
  fullName: System.Web.TraceContextRecord.TraceContextRecord(String,String,Boolean,Exception)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.TraceContextRecord.Category
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: Category
  nameWithType: TraceContextRecord.Category
  fullName: System.Web.TraceContextRecord.Category
- uid: System.Web.TraceContextRecord.ErrorInfo
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: ErrorInfo
  nameWithType: TraceContextRecord.ErrorInfo
  fullName: System.Web.TraceContextRecord.ErrorInfo
- uid: System.Web.TraceContextRecord.IsWarning
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: IsWarning
  nameWithType: TraceContextRecord.IsWarning
  fullName: System.Web.TraceContextRecord.IsWarning
- uid: System.Web.TraceContextRecord.Message
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: Message
  nameWithType: TraceContextRecord.Message
  fullName: System.Web.TraceContextRecord.Message
- uid: System.Web.TraceContextRecord.#ctor*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: TraceContextRecord
  nameWithType: TraceContextRecord.TraceContextRecord
- uid: System.Web.TraceContextRecord.Category*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: Category
  nameWithType: TraceContextRecord.Category
- uid: System.Web.TraceContextRecord.ErrorInfo*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: ErrorInfo
  nameWithType: TraceContextRecord.ErrorInfo
- uid: System.Web.TraceContextRecord.IsWarning*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: IsWarning
  nameWithType: TraceContextRecord.IsWarning
- uid: System.Web.TraceContextRecord.Message*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: Message
  nameWithType: TraceContextRecord.Message
