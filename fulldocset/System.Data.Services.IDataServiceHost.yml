### YamlMime:ManagedReference
items:
- uid: System.Data.Services.IDataServiceHost
  id: IDataServiceHost
  children:
  - System.Data.Services.IDataServiceHost.AbsoluteRequestUri
  - System.Data.Services.IDataServiceHost.AbsoluteServiceUri
  - System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)
  - System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)
  - System.Data.Services.IDataServiceHost.RequestAccept
  - System.Data.Services.IDataServiceHost.RequestAcceptCharSet
  - System.Data.Services.IDataServiceHost.RequestContentType
  - System.Data.Services.IDataServiceHost.RequestHttpMethod
  - System.Data.Services.IDataServiceHost.RequestIfMatch
  - System.Data.Services.IDataServiceHost.RequestIfNoneMatch
  - System.Data.Services.IDataServiceHost.RequestMaxVersion
  - System.Data.Services.IDataServiceHost.RequestStream
  - System.Data.Services.IDataServiceHost.RequestVersion
  - System.Data.Services.IDataServiceHost.ResponseCacheControl
  - System.Data.Services.IDataServiceHost.ResponseContentType
  - System.Data.Services.IDataServiceHost.ResponseETag
  - System.Data.Services.IDataServiceHost.ResponseLocation
  - System.Data.Services.IDataServiceHost.ResponseStatusCode
  - System.Data.Services.IDataServiceHost.ResponseStream
  - System.Data.Services.IDataServiceHost.ResponseVersion
  langs:
  - csharp
  name: IDataServiceHost
  nameWithType: IDataServiceHost
  fullName: System.Data.Services.IDataServiceHost
  type: Interface
  summary: "接口，用于指定之间的交互[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]和其宿主环境。"
  remarks: "承载每个组件[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]，例如 Windows Communication Foundation (WCF) 必须实现此接口。 IDataServiceHost 是之间的协定[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]和其宿主环境。 这种抽象形式[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]运行时是不可知的任何特定的宿主环境。 该接口提供[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]具有入站 HTTP 请求的访问权限。 实现此接口的新对象为每个 HTTP 请求而实例化，然后用于检查的 HTTP 请求的属性和配置的 HTTP 响应。"
  syntax:
    content: public interface IDataServiceHost
  implements: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.AbsoluteRequestUri
  id: AbsoluteRequestUri
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: AbsoluteRequestUri
  nameWithType: IDataServiceHost.AbsoluteRequestUri
  fullName: System.Data.Services.IDataServiceHost.AbsoluteRequestUri
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取一个绝对 URI，这是因为客户端发送的 URI。"
  remarks: "AbsoluteRequestUri 属性始终返回的绝对 URI 从客户端 HTTP 请求。 这使对请求 URI，即使在该主机在修改 URI 的情况下的一致访问。"
  syntax:
    content: public Uri AbsoluteRequestUri { get; }
    return:
      type: System.Uri
      description: "一个字符串，为请求的绝对 URI。"
  overload: System.Data.Services.IDataServiceHost.AbsoluteRequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.AbsoluteServiceUri
  id: AbsoluteServiceUri
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: AbsoluteServiceUri
  nameWithType: IDataServiceHost.AbsoluteServiceUri
  fullName: System.Data.Services.IDataServiceHost.AbsoluteServiceUri
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取一个绝对 URI，这是根数据服务 URI。"
  remarks: "AbsoluteServiceUri 属性始终返回绝对根的服务请求的 URI。 这使到根数据服务 URI，即使在该主机在修改 URI 的情况下的一致访问。"
  syntax:
    content: public Uri AbsoluteServiceUri { get; }
    return:
      type: System.Uri
      description: "一个字符串，是绝对的根数据服务 URI。"
  overload: System.Data.Services.IDataServiceHost.AbsoluteServiceUri*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)
  id: GetQueryStringItem(System.String)
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: GetQueryStringItem(String)
  nameWithType: IDataServiceHost.GetQueryStringItem(String)
  fullName: System.Data.Services.IDataServiceHost.GetQueryStringItem(String)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取由包含的方法的参数的标识键标识的数据项。"
  remarks: "查询字符串部分[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]URI 组成的键/值对，具有键和值由 = 字符分隔。 `GetQueryStringItem`返回由方法的参数指定的标识密钥的数据项。"
  syntax:
    content: public string GetQueryStringItem (string item);
    parameters:
    - id: item
      type: System.String
      description: "请求包含标识键的项的字符串值。"
    return:
      type: System.String
      description: "序列化为字符串查询请求的数据项目。"
  overload: System.Data.Services.IDataServiceHost.GetQueryStringItem*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)
  id: ProcessException(System.Data.Services.HandleExceptionArgs)
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ProcessException(HandleExceptionArgs)
  nameWithType: IDataServiceHost.ProcessException(HandleExceptionArgs)
  fullName: System.Data.Services.IDataServiceHost.ProcessException(HandleExceptionArgs)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "处理数据服务例外，使用中的信息<code> args </code>参数。"
  syntax:
    content: public void ProcessException (System.Data.Services.HandleExceptionArgs args);
    parameters:
    - id: args
      type: System.Data.Services.HandleExceptionArgs
      description: "<xref href=&quot;System.Data.Services.HandleExceptionArgs&quot;></xref>包含异常对象上的信息。"
  overload: System.Data.Services.IDataServiceHost.ProcessException*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestAccept
  id: RequestAccept
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestAccept
  nameWithType: IDataServiceHost.RequestAccept
  fullName: System.Data.Services.IDataServiceHost.RequestAccept
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "该请求指定的传输协议 accept 标头。"
  remarks: "当前所支持的协议[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]包括 JSON 和 AtomPub。"
  syntax:
    content: public string RequestAccept { get; }
    return:
      type: System.String
      description: "指示请求所需的传输协议的字符串。"
  overload: System.Data.Services.IDataServiceHost.RequestAccept*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestAcceptCharSet
  id: RequestAcceptCharSet
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestAcceptCharSet
  nameWithType: IDataServiceHost.RequestAcceptCharSet
  fullName: System.Data.Services.IDataServiceHost.RequestAcceptCharSet
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取表示的值的字符串`Accept-Charset`HTTP 标头。"
  remarks: "如果没有则返回 null`Accept-Charset`标头是请求中存在。"
  syntax:
    content: public string RequestAcceptCharSet { get; }
    return:
      type: System.String
      description: "表示值的字符串`Accept-Charset`HTTP 标头。"
  overload: System.Data.Services.IDataServiceHost.RequestAcceptCharSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestContentType
  id: RequestContentType
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestContentType
  nameWithType: IDataServiceHost.RequestContentType
  fullName: System.Data.Services.IDataServiceHost.RequestContentType
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取指定的内容类型标头的传输协议。"
  remarks: "当前所支持的协议[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]包括 JSON 和 AtomPub。"
  syntax:
    content: public string RequestContentType { get; }
    return:
      type: System.String
      description: "字符串值，该值指示内容类型。"
  overload: System.Data.Services.IDataServiceHost.RequestContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestHttpMethod
  id: RequestHttpMethod
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestHttpMethod
  nameWithType: IDataServiceHost.RequestHttpMethod
  fullName: System.Data.Services.IDataServiceHost.RequestHttpMethod
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取 GET、 PUT、 POST 或 DELETE 请求的方法。"
  remarks: "有关支持的属性的详细信息<xref:System.Data.Services.IDataServiceHost>及其用法，请参阅[WCF 数据服务客户端库](~/add/includes/ajax-current-ext-md.md)。</xref:System.Data.Services.IDataServiceHost>"
  syntax:
    content: public string RequestHttpMethod { get; }
    return:
      type: System.String
      description: "字符串值，该值指示请求方法。"
  overload: System.Data.Services.IDataServiceHost.RequestHttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestIfMatch
  id: RequestIfMatch
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestIfMatch
  nameWithType: IDataServiceHost.RequestIfMatch
  fullName: System.Data.Services.IDataServiceHost.RequestIfMatch
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取当前请求的 If-match 标头的值。"
  syntax:
    content: public string RequestIfMatch { get; }
    return:
      type: System.String
      description: "字符串在当前请求的 If-match 标头的值。"
  overload: System.Data.Services.IDataServiceHost.RequestIfMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestIfNoneMatch
  id: RequestIfNoneMatch
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestIfNoneMatch
  nameWithType: IDataServiceHost.RequestIfNoneMatch
  fullName: System.Data.Services.IDataServiceHost.RequestIfNoneMatch
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取当前请求的无-If-match 标头的值。"
  syntax:
    content: public string RequestIfNoneMatch { get; }
    return:
      type: System.String
      description: "字符串在当前请求的无-If-match 标头的值。"
  overload: System.Data.Services.IDataServiceHost.RequestIfNoneMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestMaxVersion
  id: RequestMaxVersion
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestMaxVersion
  nameWithType: IDataServiceHost.RequestMaxVersion
  fullName: System.Data.Services.IDataServiceHost.RequestMaxVersion
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取标识请求客户端能够处理的最高版本的值。"
  syntax:
    content: public string RequestMaxVersion { get; }
    return:
      type: System.String
      description: "包含请求客户端能够处理时，可能为 null 的最高版本的字符串。"
  overload: System.Data.Services.IDataServiceHost.RequestMaxVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestStream
  id: RequestStream
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestStream
  nameWithType: IDataServiceHost.RequestStream
  fullName: System.Data.Services.IDataServiceHost.RequestStream
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取包含 HTTP 请求正文的流。"
  syntax:
    content: public System.IO.Stream RequestStream { get; }
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>包含请求正文的对象。</xref:System.IO.Stream>"
  overload: System.Data.Services.IDataServiceHost.RequestStream*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestVersion
  id: RequestVersion
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestVersion
  nameWithType: IDataServiceHost.RequestVersion
  fullName: System.Data.Services.IDataServiceHost.RequestVersion
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取标识的版本的请求的客户端提交，可能为 null 的值。"
  remarks: "如果此值为 null，则假定为版本为 1.0。"
  syntax:
    content: public string RequestVersion { get; }
    return:
      type: System.String
      description: "一个字符串，标识可能为 null 提交，客户端请求的版本。"
  overload: System.Data.Services.IDataServiceHost.RequestVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseCacheControl
  id: ResponseCacheControl
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseCacheControl
  nameWithType: IDataServiceHost.ResponseCacheControl
  fullName: System.Data.Services.IDataServiceHost.ResponseCacheControl
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取一个字符串值，表示缓存控制信息。"
  syntax:
    content: public string ResponseCacheControl { get; set; }
    return:
      type: System.String
      description: "一个字符串值，表示缓存控制信息。"
  overload: System.Data.Services.IDataServiceHost.ResponseCacheControl*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseContentType
  id: ResponseContentType
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseContentType
  nameWithType: IDataServiceHost.ResponseContentType
  fullName: System.Data.Services.IDataServiceHost.ResponseContentType
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取响应的传输协议。"
  remarks: ''
  example:
  - For more information about the properties supported by <xref:System.Data.Services.IDataServiceHost> and their use, see [WCF Data Services Client Library](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public string ResponseContentType { get; set; }
    return:
      type: System.String
      description: "包含的内容类型的字符串值。"
  overload: System.Data.Services.IDataServiceHost.ResponseContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseETag
  id: ResponseETag
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseETag
  nameWithType: IDataServiceHost.ResponseETag
  fullName: System.Data.Services.IDataServiceHost.ResponseETag
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取一个 eTag 值，表示在响应中的数据的状态。"
  syntax:
    content: public string ResponseETag { get; set; }
    return:
      type: System.String
      description: "一个字符串值，表示 eTag 状态的值。"
  overload: System.Data.Services.IDataServiceHost.ResponseETag*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseLocation
  id: ResponseLocation
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseLocation
  nameWithType: IDataServiceHost.ResponseLocation
  fullName: System.Data.Services.IDataServiceHost.ResponseLocation
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取或设置服务位置。"
  remarks: "此属性永远不会返回 null 或`string.Empty`。"
  example:
  - "The following URI contains the location of the service in the substring `http://myhost/myservice.svc`.  \n  \n```  \nhttp://myhost/myservice.svc/Customers, the response location would be http://myhost/myservice.svc  \n  \n```"
  syntax:
    content: public string ResponseLocation { get; set; }
    return:
      type: System.String
      description: "包含服务位置的字符串。"
  overload: System.Data.Services.IDataServiceHost.ResponseLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseStatusCode
  id: ResponseStatusCode
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseStatusCode
  nameWithType: IDataServiceHost.ResponseStatusCode
  fullName: System.Data.Services.IDataServiceHost.ResponseStatusCode
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取或设置用于指示查询的结果的响应代码。"
  syntax:
    content: public int ResponseStatusCode { get; set; }
    return:
      type: System.Int32
      description: "包含响应代码的整数值。"
  overload: System.Data.Services.IDataServiceHost.ResponseStatusCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseStream
  id: ResponseStream
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseStream
  nameWithType: IDataServiceHost.ResponseStream
  fullName: System.Data.Services.IDataServiceHost.ResponseStream
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取响应流将向其中写入 HTTP 响应正文。"
  remarks: "如果返回了 null 流或发生异常时写入流，[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]中止请求。"
  syntax:
    content: public System.IO.Stream ResponseStream { get; }
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>响应正文将写入对象。</xref:System.IO.Stream>"
  overload: System.Data.Services.IDataServiceHost.ResponseStream*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseVersion
  id: ResponseVersion
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseVersion
  nameWithType: IDataServiceHost.ResponseVersion
  fullName: System.Data.Services.IDataServiceHost.ResponseVersion
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "获取在响应中主机所使用的版本。"
  syntax:
    content: public string ResponseVersion { get; set; }
    return:
      type: System.String
      description: "包含主机版本的字符串值。"
  overload: System.Data.Services.IDataServiceHost.ResponseVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Services.IDataServiceHost.AbsoluteRequestUri
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: AbsoluteRequestUri
  nameWithType: IDataServiceHost.AbsoluteRequestUri
  fullName: System.Data.Services.IDataServiceHost.AbsoluteRequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Data.Services.IDataServiceHost.AbsoluteServiceUri
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: AbsoluteServiceUri
  nameWithType: IDataServiceHost.AbsoluteServiceUri
  fullName: System.Data.Services.IDataServiceHost.AbsoluteServiceUri
- uid: System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: GetQueryStringItem(String)
  nameWithType: IDataServiceHost.GetQueryStringItem(String)
  fullName: System.Data.Services.IDataServiceHost.GetQueryStringItem(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ProcessException(HandleExceptionArgs)
  nameWithType: IDataServiceHost.ProcessException(HandleExceptionArgs)
  fullName: System.Data.Services.IDataServiceHost.ProcessException(HandleExceptionArgs)
- uid: System.Data.Services.HandleExceptionArgs
  parent: System.Data.Services
  isExternal: false
  name: HandleExceptionArgs
  nameWithType: HandleExceptionArgs
  fullName: System.Data.Services.HandleExceptionArgs
- uid: System.Data.Services.IDataServiceHost.RequestAccept
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestAccept
  nameWithType: IDataServiceHost.RequestAccept
  fullName: System.Data.Services.IDataServiceHost.RequestAccept
- uid: System.Data.Services.IDataServiceHost.RequestAcceptCharSet
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestAcceptCharSet
  nameWithType: IDataServiceHost.RequestAcceptCharSet
  fullName: System.Data.Services.IDataServiceHost.RequestAcceptCharSet
- uid: System.Data.Services.IDataServiceHost.RequestContentType
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestContentType
  nameWithType: IDataServiceHost.RequestContentType
  fullName: System.Data.Services.IDataServiceHost.RequestContentType
- uid: System.Data.Services.IDataServiceHost.RequestHttpMethod
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestHttpMethod
  nameWithType: IDataServiceHost.RequestHttpMethod
  fullName: System.Data.Services.IDataServiceHost.RequestHttpMethod
- uid: System.Data.Services.IDataServiceHost.RequestIfMatch
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestIfMatch
  nameWithType: IDataServiceHost.RequestIfMatch
  fullName: System.Data.Services.IDataServiceHost.RequestIfMatch
- uid: System.Data.Services.IDataServiceHost.RequestIfNoneMatch
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestIfNoneMatch
  nameWithType: IDataServiceHost.RequestIfNoneMatch
  fullName: System.Data.Services.IDataServiceHost.RequestIfNoneMatch
- uid: System.Data.Services.IDataServiceHost.RequestMaxVersion
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestMaxVersion
  nameWithType: IDataServiceHost.RequestMaxVersion
  fullName: System.Data.Services.IDataServiceHost.RequestMaxVersion
- uid: System.Data.Services.IDataServiceHost.RequestStream
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestStream
  nameWithType: IDataServiceHost.RequestStream
  fullName: System.Data.Services.IDataServiceHost.RequestStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Services.IDataServiceHost.RequestVersion
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestVersion
  nameWithType: IDataServiceHost.RequestVersion
  fullName: System.Data.Services.IDataServiceHost.RequestVersion
- uid: System.Data.Services.IDataServiceHost.ResponseCacheControl
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseCacheControl
  nameWithType: IDataServiceHost.ResponseCacheControl
  fullName: System.Data.Services.IDataServiceHost.ResponseCacheControl
- uid: System.Data.Services.IDataServiceHost.ResponseContentType
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseContentType
  nameWithType: IDataServiceHost.ResponseContentType
  fullName: System.Data.Services.IDataServiceHost.ResponseContentType
- uid: System.Data.Services.IDataServiceHost.ResponseETag
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseETag
  nameWithType: IDataServiceHost.ResponseETag
  fullName: System.Data.Services.IDataServiceHost.ResponseETag
- uid: System.Data.Services.IDataServiceHost.ResponseLocation
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseLocation
  nameWithType: IDataServiceHost.ResponseLocation
  fullName: System.Data.Services.IDataServiceHost.ResponseLocation
- uid: System.Data.Services.IDataServiceHost.ResponseStatusCode
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseStatusCode
  nameWithType: IDataServiceHost.ResponseStatusCode
  fullName: System.Data.Services.IDataServiceHost.ResponseStatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.IDataServiceHost.ResponseStream
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseStream
  nameWithType: IDataServiceHost.ResponseStream
  fullName: System.Data.Services.IDataServiceHost.ResponseStream
- uid: System.Data.Services.IDataServiceHost.ResponseVersion
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseVersion
  nameWithType: IDataServiceHost.ResponseVersion
  fullName: System.Data.Services.IDataServiceHost.ResponseVersion
- uid: System.Data.Services.IDataServiceHost.AbsoluteRequestUri*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: AbsoluteRequestUri
  nameWithType: IDataServiceHost.AbsoluteRequestUri
- uid: System.Data.Services.IDataServiceHost.AbsoluteServiceUri*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: AbsoluteServiceUri
  nameWithType: IDataServiceHost.AbsoluteServiceUri
- uid: System.Data.Services.IDataServiceHost.GetQueryStringItem*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: GetQueryStringItem
  nameWithType: IDataServiceHost.GetQueryStringItem
- uid: System.Data.Services.IDataServiceHost.ProcessException*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ProcessException
  nameWithType: IDataServiceHost.ProcessException
- uid: System.Data.Services.IDataServiceHost.RequestAccept*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestAccept
  nameWithType: IDataServiceHost.RequestAccept
- uid: System.Data.Services.IDataServiceHost.RequestAcceptCharSet*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestAcceptCharSet
  nameWithType: IDataServiceHost.RequestAcceptCharSet
- uid: System.Data.Services.IDataServiceHost.RequestContentType*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestContentType
  nameWithType: IDataServiceHost.RequestContentType
- uid: System.Data.Services.IDataServiceHost.RequestHttpMethod*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestHttpMethod
  nameWithType: IDataServiceHost.RequestHttpMethod
- uid: System.Data.Services.IDataServiceHost.RequestIfMatch*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestIfMatch
  nameWithType: IDataServiceHost.RequestIfMatch
- uid: System.Data.Services.IDataServiceHost.RequestIfNoneMatch*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestIfNoneMatch
  nameWithType: IDataServiceHost.RequestIfNoneMatch
- uid: System.Data.Services.IDataServiceHost.RequestMaxVersion*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestMaxVersion
  nameWithType: IDataServiceHost.RequestMaxVersion
- uid: System.Data.Services.IDataServiceHost.RequestStream*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestStream
  nameWithType: IDataServiceHost.RequestStream
- uid: System.Data.Services.IDataServiceHost.RequestVersion*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestVersion
  nameWithType: IDataServiceHost.RequestVersion
- uid: System.Data.Services.IDataServiceHost.ResponseCacheControl*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseCacheControl
  nameWithType: IDataServiceHost.ResponseCacheControl
- uid: System.Data.Services.IDataServiceHost.ResponseContentType*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseContentType
  nameWithType: IDataServiceHost.ResponseContentType
- uid: System.Data.Services.IDataServiceHost.ResponseETag*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseETag
  nameWithType: IDataServiceHost.ResponseETag
- uid: System.Data.Services.IDataServiceHost.ResponseLocation*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseLocation
  nameWithType: IDataServiceHost.ResponseLocation
- uid: System.Data.Services.IDataServiceHost.ResponseStatusCode*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseStatusCode
  nameWithType: IDataServiceHost.ResponseStatusCode
- uid: System.Data.Services.IDataServiceHost.ResponseStream*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseStream
  nameWithType: IDataServiceHost.ResponseStream
- uid: System.Data.Services.IDataServiceHost.ResponseVersion*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseVersion
  nameWithType: IDataServiceHost.ResponseVersion
