### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  id: BasicDesignerLoader
  children:
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload
  langs:
  - csharp
  name: BasicDesignerLoader
  nameWithType: BasicDesignerLoader
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  type: Class
  summary: "提供的实现<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot;></xref>接口。"
  remarks: "BasicDesignerLoader 是设计器加载程序无任何关联的持久性格式的完整实现。 BasicDesignerLoader 并未规定文本或二进制持久性，但它支持以下功能:-多个加载依赖关系。      设计器中的跟踪更改。      -延迟空闲时间重新加载。       BasicDesignerLoader 将两个类型的服务添加到设计器宿主的服务容器︰ 可替换的服务和不可替代的服务。 你可以通过更改受保护的值来替换可替换的服务<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A>属性。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> 不能替换不可替代的服务，因为其实现互相依赖。       下表描述默认提供的服务。      |默认服务 |说明 |  |---------------------|-----------------|  |<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>|允许对象请求设计器重新本身在空闲时加载。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 这是可替换的服务。 |  |<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>|用于序列化和反序列化对象。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> 序列化管理器添加为服务中，因此需要执行序列化的对象可以利用已添加到序列化管理器的任何序列化提供程序。 这是不可替代的服务。 |"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService
  inheritance:
  - System.Object
  - System.ComponentModel.Design.Serialization.DesignerLoader
  implements:
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: BasicDesignerLoader()
  nameWithType: BasicDesignerLoader.BasicDesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BasicDesignerLoader()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot;></xref>类。"
  syntax:
    content: protected BasicDesignerLoader ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  id: BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: BasicDesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(IDesignerLoaderHost)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "启动加载过程。"
  remarks: "这是抽象的实现<xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=fullName>方法。</xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=fullName> 不需要重写此方法在您自己的类。 BeginLoad 方法执行下列操作:-它将验证设计图面具有尚未加载。      -在首次调用中，它将添加相关服务和调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>      -它将调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>， <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>，和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>       如果未将设计器加载程序服务删除从服务容器中，将调用 BeginLoad<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法而不是<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> 在此情况下，负责调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A></xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>的设计器加载程序服务"
  syntax:
    content: public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);
    parameters:
    - id: host
      type: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
      description: "要加载的设计器加载程序宿主。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "设计器已加载，或 BeginLoad 调用时使用了不同的设计器加载程序主机。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<code>host</code>已释放。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Dispose()
  nameWithType: BasicDesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "释放使用的资源<xref href=&quot;System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot;> </xref>。"
  remarks: "调用的 Dispose 方法不会刷新到设计器加载程序的更改。 如果你想要保存的更改，则调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>之前调用 Dispose。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>       在完成使用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>时调用的 Dispose Dispose 方法离开<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>中不可用状态。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 调用 Dispose 后，必须释放对所有引用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>以便垃圾回收器才能回收的内存，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>占用。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 有关详细信息，请参阅[清洗向上非托管资源](~/add/includes/ajax-current-ext-md.md)和[实现 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      1> [!NOTE]&1;> 始终调用释放在发布到<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>最后一个引用之前 否则，它所使用的资源之前，不会释放垃圾回收器调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>对象的`Finalize`方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>"
  syntax:
    content: public override void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)
  id: EnableComponentNotification(System.Boolean)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: EnableComponentNotification(Boolean)
  nameWithType: BasicDesignerLoader.EnableComponentNotification(Boolean)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "启用或禁用组件通知<xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>。"
  syntax:
    content: protected virtual bool EnableComponentNotification (bool enable);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要启用由组件通知<xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要禁用由组件通知<xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在此调用; 之前启用了组件通知否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush
  id: Flush
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Flush()
  nameWithType: BasicDesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "挂起的更改到设计器加载程序刷新。"
  remarks: "如果设计器加载程序尚未加载，或者不具有已标记为已修改，Flush 方法将立即返回。 否则为刷新要求序列化管理器，以创建序列化会话，，然后调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: BasicDesignerLoader.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "获取请求的服务。"
  remarks: "GetService 是一个帮助器方法，以便派生自的类<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>的设计器加载程序宿主所提供的访问服务。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>"
  syntax:
    content: protected object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "<xref:System.Type>的服务。</xref:System.Type>"
    return:
      type: System.Object
      description: "请求的服务，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到请求的服务。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize
  id: Initialize
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Initialize()
  nameWithType: BasicDesignerLoader.Initialize()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "初始化服务。"
  remarks: "Initialize 方法称为第一次<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>调用。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 你可以在此时间添加任何所需的设计器加载程序宿主的服务。 基实现，将添加服务<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>提供，因此在调用基实现后可以替换现有的服务。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 你必须删除您在通过重写<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>此处添加任何自定义服务"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>尚未初始化。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>已释放。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded
  id: IsReloadNeeded
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: IsReloadNeeded()
  nameWithType: BasicDesignerLoader.IsReloadNeeded()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指示是否应重新加载设计器。"
  remarks: "IsReloadNeeded 方法某些设计器加载用于优化重新加载。 如果你的设计器加载程序支持智能重新加载，则可以重写此方法。 某些设计器加载程序可以检测到它们的基础文档所做的更改，并确定是否实际需要的设计器重新加载。 如果不是，它们应返回`false`从此方法。 默认实现始终返回`true`，，该值指示任何调用到<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>将会成功。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>"
  syntax:
    content: protected virtual bool IsReloadNeeded ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应重新加载设计器;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认实现始终返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
  id: LoaderHost
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: LoaderHost
  nameWithType: BasicDesignerLoader.LoaderHost
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "获取加载程序宿主。"
  remarks: "此方法返回提供给此设计器加载程序加载程序宿主。 这可以是`null`如果<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>尚未尚未，调用或如果已释放此设计器加载程序。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }
    return:
      type: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> ，传递到<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>尚未初始化。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>已释放。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
  id: Loading
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Loading
  nameWithType: BasicDesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "获取一个值，该值指示设计器加载程序是否正在加载设计图面。"
  remarks: "<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>类提供<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>，后者支持加载依赖关系。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 此属性采用负载依赖项，并将返回`true`是否存在任何未完成加载依赖项。"
  syntax:
    content: public override bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果设计器加载程序当前正在加载设计图面，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
  id: Modified
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Modified
  nameWithType: BasicDesignerLoader.Modified
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "获取或设置一个值，该值指示是否已修改设计器。"
  remarks: "确定是否设计器加载程序检测到设计器尚未修改。 如果此属性为`true`时设计器加载程序<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>方法被调用时，设计器加载程序将调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>"
  syntax:
    content: protected virtual bool Modified { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已修改设计器，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad
  id: OnBeginLoad
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: OnBeginLoad()
  nameWithType: BasicDesignerLoader.OnBeginLoad()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "通知设计器加载程序加载即将开始。"
  remarks: "OnBeginLoad 方法调用来启动加载过程。 适用于在此时加载的应执行任何必要的初始化。 此方法不应该用于执行实际负载。 默认实现禁用更改通知，并设置<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>加载。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>       如果你实现<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>若要提供依赖加载支持，你应调用 OnBeginLoad 依赖在首次加载时。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法之后上次调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 默认情况下，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>实现<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>和为您这么做。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>不可用时<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>调用时，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>直接调用 OnBeginLoad。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>       如果你提供自己的加载程序服务，或者如果你选择不提供加载程序服务，你负责调用此方法。 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法将自动调用此操作，请通过调用间接<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>不可用，或直接如果它不是。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>"
  syntax:
    content: protected virtual void OnBeginLoad ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload
  id: OnBeginUnload
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: OnBeginUnload()
  nameWithType: BasicDesignerLoader.OnBeginUnload()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "通知设计器加载程序，卸载过程即将开始。"
  remarks: "设计器加载程序即将卸载文档时，将调用 OnBeginUnload 方法。       文档可能卸载准备重新加载，或如果该文档无法加载。 如果你添加特定于文档中的服务<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>或<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>，此处将其移除。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>"
  syntax:
    content: protected virtual void OnBeginUnload ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)
  id: OnEndLoad(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: OnEndLoad(Boolean,ICollection)
  nameWithType: BasicDesignerLoader.OnEndLoad(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "通知设计器加载程序加载已完成。"
  remarks: "在完成加载时，将调用 OnEndLoad 方法。 它始终调用，即使在加载过程中引发异常。 值`successful`将设置为`true`如果加载成功，或`false`如果发生错误。 `errors`集合将包含作为错误进行报告的对象。 通常情况下，这些对象是异常。       如果你实现<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>若要提供依赖加载支持，你应在最后一次调用后调用 OnEndLoad 方法<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 默认情况下，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>实现<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>和为您这么做。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>不可用时<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>调用，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>将直接调用后调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> OnEndLoad</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>       所有依赖加载已完成时，应由设计器加载程序服务调用此方法。  这将停止由启动加载过程<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 如果你提供自己的加载程序服务，或者如果你选择不提供加载程序服务，你负责调用此方法。 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法将自动调用此操作，请通过调用间接<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>不可用，或直接如果它不是。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>"
  syntax:
    content: protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);
    parameters:
    - id: successful
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，则完成的负载否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: errors
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含作为错误进行报告的对象 （通常是异常）。</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>尚未初始化。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>已释放。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying
  id: OnModifying
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: OnModifying()
  nameWithType: BasicDesignerLoader.OnModifying()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "通知的文档的状态是要修改的设计器加载程序。"
  remarks: "OnModifying 方法调用对组件的不断变化，响应中添加，或者删除设计器的事件，该值指示将要修改。 你可以通过重写此方法实现源代码管理。 OnModifying 调用并不意味着<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A>更高版本将属性设置为`true`; 它只是表示想要执行此操作。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A>"
  syntax:
    content: protected virtual void OnModifying ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  id: PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: PerformFlush(IDesignerSerializationManager)
  nameWithType: BasicDesignerLoader.PerformFlush(IDesignerSerializationManager)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(IDesignerSerializationManager)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "将所有更改都刷新到设计器。"
  remarks: "设计器加载程序需要刷新以保持对设计器所做的任何更改时，将调用 PerformFlush 方法。 调用以响应对的调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>"
  syntax:
    content: protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);
    parameters:
    - id: serializationManager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>用于保持加载的设计器的状态。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  id: PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: PerformLoad(IDesignerSerializationManager)
  nameWithType: BasicDesignerLoader.PerformLoad(IDesignerSerializationManager)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(IDesignerSerializationManager)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "从持久性存储中加载设计器。"
  remarks: "设计器加载程序需要进行加载其状态时，将调用 PerformLoad 方法。 之前调用 performLoad<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>方法。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 必须实现此方法以加载设计器的内容。"
  syntax:
    content: protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);
    parameters:
    - id: serializationManager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>用于加载设计器的状态。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
  id: PropertyProvider
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: PropertyProvider
  nameWithType: BasicDesignerLoader.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "获取或设置正由加载程序的序列化管理器属性提供程序。"
  remarks: "序列化管理器提供`Properties`可以读取由自定义它们的特定需求的序列化的序列化其主接口上的属性。 检查由序列化的属性而异的一种使用序列化程序。"
  syntax:
    content: protected object PropertyProvider { get; set; }
    return:
      type: System.Object
      description: "其属性将向序列化管理器提供一个对象。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>尚未初始化。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)
  id: Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Reload(BasicDesignerLoader+ReloadOptions)
  nameWithType: BasicDesignerLoader.Reload(BasicDesignerLoader+ReloadOptions)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(BasicDesignerLoader+ReloadOptions)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  syntax:
    content: protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);
    parameters:
    - id: flags
      type: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions
      description: "要添加。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
  id: ReloadPending
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: ReloadPending
  nameWithType: BasicDesignerLoader.ReloadPending
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "获取一个值，该值指示是否重新加载已在排队等候。"
  syntax:
    content: protected bool ReloadPending { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*>已排队重新加载请求; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)
  id: ReportFlushErrors(System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: ReportFlushErrors(ICollection)
  nameWithType: BasicDesignerLoader.ReportFlushErrors(ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "报告在将更改刷新时出现的错误。"
  remarks: "ReportFlushErrors 方法调用期间<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>如果刷新更改时，一个或多个错误发生。</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 中的值`errors`集合可以是异常或与对象<xref:System.Object.ToString%2A>描述错误的值。</xref:System.Object.ToString%2A> ReportFlushErrors 的默认实现将引发集合中的最后一个异常。"
  syntax:
    content: protected virtual void ReportFlushErrors (System.Collections.ICollection errors);
    parameters:
    - id: errors
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含错误对象，通常是异常。</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "刷新更改时发生一个或多个错误。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)
  id: SetBaseComponentClassName(System.String)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: SetBaseComponentClassName(String)
  nameWithType: BasicDesignerLoader.SetBaseComponentClassName(String)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "设置的基组件的完整类名称。"
  remarks: "SetBaseComponentClassName 方法应该调用期间加载建立一个设计器正在设计的组件的完整名称。"
  syntax:
    content: protected void SetBaseComponentClassName (string name);
    parameters:
    - id: name
      type: System.String
      description: "表示要设计的组件的完整名称的字符串。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency
  id: System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency
  isEii: true
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "将外部组件注册由加载过程的一部分<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot;> </xref>。"
  remarks: "调用<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>一次针对每个参与加载过程的外部对象的方法。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>负载过程的工作都完成时调用方法。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>"
  syntax:
    content: void IDesignerLoaderService.AddLoadDependency ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>尚未初始化。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  id: System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "依赖加载已完成的信号。"
  remarks: "IDesignerLoaderService.DependentLoadComplete 方法被调用，以便通知依赖加载操作已完成。 调用<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>一次为每个进程都已由调用注册方法<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>方法，已完成。</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>       如果依赖加载成功，调用方集`successful`参数`true`并传递空集合或`null`到`errorCollection`参数。 如果依赖加载遇到错误，调用方将设置`successful`参数`false`并将传递的指示或多个与失败的原因的异常集合`errorCollection`参数。"
  syntax:
    content: void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);
    parameters:
    - id: successful
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要成功; 加载否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: errorCollection
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含加载期间发生的错误。</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已通过添加任何加载依赖项&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A&gt;，或<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;></xref>尚未初始化。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref>已释放。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload
  id: System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload
  isEii: true
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "将重新加载设计文档。"
  remarks: "任何对象都可以调用 IDesignerLoaderService.Reload 方法来请求，加载程序重新加载设计文档。 如果加载程序支持重新加载并执行重新加载，则设计器加载程序可以返回`true`。 否则，它将返回`false`，指示将不会发生重新加载。 调用方不能依赖立即; 发生重新加载设计器加载程序可以计划这段时间，或它可以尝试重新加载设计器在一次。       如果无法重新加载设计器，调用方可以向用户显示一条消息。"
  syntax:
    content: bool IDesignerLoaderService.Reload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果接受重新加载请求;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果加载程序不允许重新加载。"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.DesignerLoader
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: BasicDesignerLoader()
  nameWithType: BasicDesignerLoader.BasicDesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BasicDesignerLoader()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: BasicDesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(IDesignerLoaderHost)
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerLoaderHost
  nameWithType: IDesignerLoaderHost
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Dispose()
  nameWithType: BasicDesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: EnableComponentNotification(Boolean)
  nameWithType: BasicDesignerLoader.EnableComponentNotification(Boolean)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Flush()
  nameWithType: BasicDesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: GetService(Type)
  nameWithType: BasicDesignerLoader.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Initialize()
  nameWithType: BasicDesignerLoader.Initialize()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: IsReloadNeeded()
  nameWithType: BasicDesignerLoader.IsReloadNeeded()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: LoaderHost
  nameWithType: BasicDesignerLoader.LoaderHost
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Loading
  nameWithType: BasicDesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Modified
  nameWithType: BasicDesignerLoader.Modified
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnBeginLoad()
  nameWithType: BasicDesignerLoader.OnBeginLoad()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnBeginUnload()
  nameWithType: BasicDesignerLoader.OnBeginUnload()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnEndLoad(Boolean,ICollection)
  nameWithType: BasicDesignerLoader.OnEndLoad(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(Boolean,ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnModifying()
  nameWithType: BasicDesignerLoader.OnModifying()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PerformFlush(IDesignerSerializationManager)
  nameWithType: BasicDesignerLoader.PerformFlush(IDesignerSerializationManager)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(IDesignerSerializationManager)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PerformLoad(IDesignerSerializationManager)
  nameWithType: BasicDesignerLoader.PerformLoad(IDesignerSerializationManager)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(IDesignerSerializationManager)
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PropertyProvider
  nameWithType: BasicDesignerLoader.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Reload(BasicDesignerLoader+ReloadOptions)
  nameWithType: BasicDesignerLoader.Reload(BasicDesignerLoader+ReloadOptions)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(BasicDesignerLoader+ReloadOptions)
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: BasicDesignerLoader+ReloadOptions
  nameWithType: BasicDesignerLoader+ReloadOptions
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: ReloadPending
  nameWithType: BasicDesignerLoader.ReloadPending
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: ReportFlushErrors(ICollection)
  nameWithType: BasicDesignerLoader.ReportFlushErrors(ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(ICollection)
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: SetBaseComponentClassName(String)
  nameWithType: BasicDesignerLoader.SetBaseComponentClassName(String)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: BasicDesignerLoader
  nameWithType: BasicDesignerLoader.BasicDesignerLoader
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: BeginLoad
  nameWithType: BasicDesignerLoader.BeginLoad
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Dispose
  nameWithType: BasicDesignerLoader.Dispose
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: EnableComponentNotification
  nameWithType: BasicDesignerLoader.EnableComponentNotification
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Flush
  nameWithType: BasicDesignerLoader.Flush
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: GetService
  nameWithType: BasicDesignerLoader.GetService
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Initialize
  nameWithType: BasicDesignerLoader.Initialize
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: IsReloadNeeded
  nameWithType: BasicDesignerLoader.IsReloadNeeded
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: LoaderHost
  nameWithType: BasicDesignerLoader.LoaderHost
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Loading
  nameWithType: BasicDesignerLoader.Loading
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Modified
  nameWithType: BasicDesignerLoader.Modified
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnBeginLoad
  nameWithType: BasicDesignerLoader.OnBeginLoad
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnBeginUnload
  nameWithType: BasicDesignerLoader.OnBeginUnload
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnEndLoad
  nameWithType: BasicDesignerLoader.OnEndLoad
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnModifying
  nameWithType: BasicDesignerLoader.OnModifying
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PerformFlush
  nameWithType: BasicDesignerLoader.PerformFlush
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PerformLoad
  nameWithType: BasicDesignerLoader.PerformLoad
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PropertyProvider
  nameWithType: BasicDesignerLoader.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Reload
  nameWithType: BasicDesignerLoader.Reload
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: ReloadPending
  nameWithType: BasicDesignerLoader.ReloadPending
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: ReportFlushErrors
  nameWithType: BasicDesignerLoader.ReportFlushErrors
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: SetBaseComponentClassName
  nameWithType: BasicDesignerLoader.SetBaseComponentClassName
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
