### YamlMime:ManagedReference
items:
- uid: System.Configuration.Install.InstallContext
  id: InstallContext
  children:
  - System.Configuration.Install.InstallContext.#ctor
  - System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  - System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  - System.Configuration.Install.InstallContext.LogMessage(System.String)
  - System.Configuration.Install.InstallContext.Parameters
  - System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  langs:
  - csharp
  name: InstallContext
  nameWithType: InstallContext
  fullName: System.Configuration.Install.InstallContext
  type: Class
  summary: "包含关于当前安装的信息。"
  remarks: "通常情况下，InstallContext 是由的安装创建可执行文件，如 InstallUtil.exe，安装程序集。 安装程序将调用 InstallContext 构造函数中，将其传递默认日志文件路径和命令行参数。       之前调用其<xref:System.Configuration.Install.Installer.Install%2A>， <xref:System.Configuration.Install.Installer.Commit%2A>， <xref:System.Configuration.Install.Installer.Rollback%2A>，或<xref:System.Configuration.Install.Installer.Uninstall%2A>方法，该安装程序会设置<xref:System.Configuration.Install.Installer.Context%2A>属性<xref:System.Configuration.Install.Installer>到 InstallContext 的实例。</xref:System.Configuration.Install.Installer> </xref:System.Configuration.Install.Installer.Context%2A> </xref:System.Configuration.Install.Installer.Uninstall%2A> </xref:System.Configuration.Install.Installer.Rollback%2A> </xref:System.Configuration.Install.Installer.Commit%2A> </xref:System.Configuration.Install.Installer.Install%2A> 在调用这些方法之前<xref:System.Configuration.Install.Installer>包含中的安装程序集合<xref:System.Configuration.Install.Installer.Installers%2A>属性集<xref:System.Configuration.Install.Installer.Context%2A>的每个包含的安装程序的属性。</xref:System.Configuration.Install.Installer.Context%2A> </xref:System.Configuration.Install.Installer.Installers%2A> </xref:System.Configuration.Install.Installer>       <xref:System.Configuration.Install.InstallContext.Parameters%2A>属性包含已分析的版本的命令行输入运行可执行安装。</xref:System.Configuration.Install.InstallContext.Parameters%2A> 属性包含信息，例如日志文件、 是否将日志信息显示在控制台上，以及是否在安装过程中显示用户界面的路径。 调用<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法，以找出是否命令行参数为`true`。</xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>       使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法将状态消息写入到安装日志文件和控制台。</xref:System.Configuration.Install.InstallContext.LogMessage%2A>"
  example:
  - "The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the InstallContext class.  \n  \n When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line. Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.  \n  \n When the program is invoked without any arguments, an empty InstallContext is created. When \"/LogFile\" and \"/LogtoConsole\" are specified, the InstallContext is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \n  \n [!code-cs[InstallContext_InstallContext#1](~/add/codesnippet/csharp/t-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#1](~/add/codesnippet/cpp/t-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#1](~/add/codesnippet/visualbasic/t-system.configuration.i_10_1.vb)]"
  syntax:
    content: public class InstallContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.#ctor
  id: '#ctor'
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: InstallContext()
  nameWithType: InstallContext.InstallContext()
  fullName: System.Configuration.Install.InstallContext.InstallContext()
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "初始化的新实例<xref href=&quot;System.Configuration.Install.InstallContext&quot;></xref>类。"
  remarks: "此重载不创建安装日志文件。"
  example:
  - "> [!NOTE]\n>  This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor. For other examples that might be available, see the individual overload topics.  \n  \n When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.  \n  \n [!code-cs[InstallContext_InstallContext#2](~/add/codesnippet/csharp/m-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#2](~/add/codesnippet/cpp/m-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#2](~/add/codesnippet/visualbasic/m-system.configuration.i_10_1.vb)]"
  syntax:
    content: public InstallContext ();
    parameters: []
  overload: System.Configuration.Install.InstallContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: InstallContext(String,String[])
  nameWithType: InstallContext.InstallContext(String,String[])
  fullName: System.Configuration.Install.InstallContext.InstallContext(String,String[])
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "初始化的新实例<xref href=&quot;System.Configuration.Install.InstallContext&quot;></xref>类，并创建安装日志文件。"
  remarks: "如果安装使用[Installutil.exe （安装程序工具）](~/add/includes/ajax-current-ext-md.md)，此构造函数在指定的路径创建一个日志文件，并分析到命令行参数的数组<xref:System.Configuration.Install.InstallContext.Parameters%2A>属性。</xref:System.Configuration.Install.InstallContext.Parameters%2A> 如果在命令行参数中指定的日志文件路径，则它用于创建文件。 如果在命令行中的值未指定日志文件参数`logFilePath`使用参数。 若要禁止显示日志文件的创建，请将传递&quot;/ 日志文件 =&quot;命令行参数。"
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n When \"/LogFile\" and \"/LogtoConsole\" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \n  \n [!code-cs[InstallContext_InstallContext#3](~/add/codesnippet/csharp/542763dc-b606-44ec-b9bd-_1.cs)]\n [!code-cpp[InstallContext_InstallContext#3](~/add/codesnippet/cpp/542763dc-b606-44ec-b9bd-_1.cpp)]\n [!code-vb[InstallContext_InstallContext#3](~/add/codesnippet/visualbasic/542763dc-b606-44ec-b9bd-_1.vb)]"
  syntax:
    content: public InstallContext (string logFilePath, string[] commandLine);
    parameters:
    - id: logFilePath
      type: System.String
      description: "此安装时，日志文件的路径或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果应不创建任何日志文件。"
    - id: commandLine
      type: System.String[]
      description: "在运行安装程序时输入的命令行参数或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未输入任何内容。"
  overload: System.Configuration.Install.InstallContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  id: IsParameterTrue(System.String)
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: IsParameterTrue(String)
  nameWithType: InstallContext.IsParameterTrue(String)
  fullName: System.Configuration.Install.InstallContext.IsParameterTrue(String)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "确定是否存在指定的命令行参数<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  remarks: "此方法访问<xref:System.Configuration.Install.InstallContext.Parameters%2A>属性，其中包含要确定是否存在指定的参数的命令行参数的已分析的版本`true`。</xref:System.Configuration.Install.InstallContext.Parameters%2A>"
  example:
  - "This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.  \n  \n It uses the IsParameterTrue method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#4](~/add/codesnippet/csharp/m-system.configuration.i_5_1.cs)]\n [!code-cpp[InstallContext_InstallContext#4](~/add/codesnippet/cpp/m-system.configuration.i_5_1.cpp)]\n [!code-vb[InstallContext_InstallContext#4](~/add/codesnippet/visualbasic/m-system.configuration.i_5_1.vb)]"
  syntax:
    content: public bool IsParameterTrue (string paramName);
    parameters:
    - id: paramName
      type: System.String
      description: "要检查的命令行参数的名称。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的参数设置为&quot;yes&quot;，&quot;true&quot;、&quot;1&quot;或空字符串 (&quot;&quot;);否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.Install.InstallContext.IsParameterTrue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)
  id: LogMessage(System.String)
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: LogMessage(String)
  nameWithType: InstallContext.LogMessage(String)
  fullName: System.Configuration.Install.InstallContext.LogMessage(String)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "将消息写入到控制台和安装日志文件。"
  remarks: "安装程序可以调用此方法以写入日志文件的进度或其他状态信息。 如果命令行参数指定应显示用户界面，安装程序应显示消息框或进行除了调用 LogMessage 方法的查询。 写入日志文件的文本将不会被发现用户除非 InstallUtil.exe 用于运行安装和&quot;/ LogToConsole = true&quot;命令行中指定。"
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the LogMessage method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#4](~/add/codesnippet/csharp/m-system.configuration.i_7_1.cs)]\n [!code-cpp[InstallContext_InstallContext#4](~/add/codesnippet/cpp/m-system.configuration.i_7_1.cpp)]\n [!code-vb[InstallContext_InstallContext#4](~/add/codesnippet/visualbasic/m-system.configuration.i_7_1.vb)]"
  syntax:
    content: public void LogMessage (string message);
    parameters:
    - id: message
      type: System.String
      description: "要写入的消息。"
  overload: System.Configuration.Install.InstallContext.LogMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.Parameters
  id: Parameters
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: Parameters
  nameWithType: InstallContext.Parameters
  fullName: System.Configuration.Install.InstallContext.Parameters
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "获取运行 InstallUtil.exe 时输入的命令行参数。"
  remarks: "当新<xref:System.Configuration.Install.InstallContext>创建后，命令行参数解析为参数属性。</xref:System.Configuration.Install.InstallContext> 密钥和参数的值是字符串。"
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n The sample retrieves the Parameters property to see if any command line argument has been entered by the user. It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#6](~/add/codesnippet/csharp/p-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#6](~/add/codesnippet/cpp/p-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#6](~/add/codesnippet/visualbasic/p-system.configuration.i_10_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Parameters { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>表示运行可执行安装文件时输入的命令行参数。"
  overload: System.Configuration.Install.InstallContext.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  id: ParseCommandLine(System.String[])
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: ParseCommandLine(String[])
  nameWithType: InstallContext.ParseCommandLine(String[])
  fullName: System.Configuration.Install.InstallContext.ParseCommandLine(String[])
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "将命令行参数解析到的字符串字典。"
  syntax:
    content: protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);
    parameters:
    - id: args
      type: System.String[]
      description: "包含命令行参数的数组。"
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>包含已分析的命令行参数。"
  overload: System.Configuration.Install.InstallContext.ParseCommandLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Install.InstallContext.#ctor
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext()
  nameWithType: InstallContext.InstallContext()
  fullName: System.Configuration.Install.InstallContext.InstallContext()
- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext(String,String[])
  nameWithType: InstallContext.InstallContext(String,String[])
  fullName: System.Configuration.Install.InstallContext.InstallContext(String,String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: IsParameterTrue(String)
  nameWithType: InstallContext.IsParameterTrue(String)
  fullName: System.Configuration.Install.InstallContext.IsParameterTrue(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: LogMessage(String)
  nameWithType: InstallContext.LogMessage(String)
  fullName: System.Configuration.Install.InstallContext.LogMessage(String)
- uid: System.Configuration.Install.InstallContext.Parameters
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: Parameters
  nameWithType: InstallContext.Parameters
  fullName: System.Configuration.Install.InstallContext.Parameters
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: ParseCommandLine(String[])
  nameWithType: InstallContext.ParseCommandLine(String[])
  fullName: System.Configuration.Install.InstallContext.ParseCommandLine(String[])
- uid: System.Configuration.Install.InstallContext.#ctor*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext
  nameWithType: InstallContext.InstallContext
- uid: System.Configuration.Install.InstallContext.IsParameterTrue*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: IsParameterTrue
  nameWithType: InstallContext.IsParameterTrue
- uid: System.Configuration.Install.InstallContext.LogMessage*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: LogMessage
  nameWithType: InstallContext.LogMessage
- uid: System.Configuration.Install.InstallContext.Parameters*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: Parameters
  nameWithType: InstallContext.Parameters
- uid: System.Configuration.Install.InstallContext.ParseCommandLine*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: ParseCommandLine
  nameWithType: InstallContext.ParseCommandLine
