### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Xml
  id: Xml
  children:
  - System.Web.UI.WebControls.Xml.#ctor
  - System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.Xml.ClientID
  - System.Web.UI.WebControls.Xml.Controls
  - System.Web.UI.WebControls.Xml.CreateControlCollection
  - System.Web.UI.WebControls.Xml.Document
  - System.Web.UI.WebControls.Xml.DocumentContent
  - System.Web.UI.WebControls.Xml.DocumentSource
  - System.Web.UI.WebControls.Xml.EnableTheming
  - System.Web.UI.WebControls.Xml.FindControl(System.String)
  - System.Web.UI.WebControls.Xml.Focus
  - System.Web.UI.WebControls.Xml.GetDesignModeState
  - System.Web.UI.WebControls.Xml.HasControls
  - System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Xml.SkinID
  - System.Web.UI.WebControls.Xml.Transform
  - System.Web.UI.WebControls.Xml.TransformArgumentList
  - System.Web.UI.WebControls.Xml.TransformSource
  - System.Web.UI.WebControls.Xml.XPathNavigator
  langs:
  - csharp
  name: Xml
  nameWithType: Xml
  fullName: System.Web.UI.WebControls.Xml
  type: Class
  summary: "显示 XML 文档，不进行格式化或使用可扩展样式表语言转换 (XSLT)。"
  remarks: "本主题中:-[简介](#introduction)      -   [指定 XML 数据](#specifying_xml_data)      -   [指定 XSL 转换](#specifying_an_xsl_transformation)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介 Xml 控件用于显示 XML 文档的内容不进行格式化或使用 XSL 转换。            <a name=&quot;specifying_xml_data&quot;></a># # 指定要显示的 XML 数据的 XML 文档由三个属性中的一个设置指定。 这三个属性表示可以显示的 XML 文档的不同类型。 可以显示<xref:System.Xml.XmlDocument?displayProperty=fullName>，XML 字符串或通过设置适当的属性的 XML 文件。</xref:System.Xml.XmlDocument?displayProperty=fullName> 下表列出用于指定 XML 文档的属性。      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.Xml.Document%2A>|设置 XML 文档使用<xref:System.Xml.XmlDocument?displayProperty=fullName>对象。</xref:System.Xml.XmlDocument?displayProperty=fullName> </xref:System.Web.UI.WebControls.Xml.Document%2A> **警告︰**此属性已过时。 若要设置的 XML 内容为 Xml 控件本部分中列出的其他属性之一的使用。 |  |<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|设置使用字符串的 XML 文档。</xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> **注意︰**通常通过将放置到开始和结束之间的文本以声明方式设置此属性`<asp:Xml>`Xml 控件的标记。 |  |<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|设置使用文件的 XML 文档。 |    &1;> [!NOTE]&1;> 至少一个 XML 文档属性必须设置为显示 XML 文档。</xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> 如果设置了多个 XML 文档属性，将显示最后设置的属性中引用的 XML 文档。 其他属性中的文档将被忽略。      <a name=&quot;specifying_an_xsl_transformation&quot;></a># # 指定 XSL 转换你可以选择指定 XML 文档之前它由两个属性之一设置写入到输出流格式化 XSL 转换 (XSLT) 样式表。 这两个属性表示不同类型的可用于格式化 XML 文档的 XSL 转换样式表。 你可以设置的格式与 XML 文档<xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName>对象或使用 XSL 转换设置样式表文件设置适当的属性。</xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName> 如果指定 XSL 转换的样式表，则使用默认格式显示 XML 文档。 下表列出用于指定一个 XSL 转换样式表的属性。      |属性 |说明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.Xml.Transform%2A>|使用指定 XML 文档进行格式化<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>对象。</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> </xref:System.Web.UI.WebControls.Xml.Transform%2A> **注意︰** <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>对象需要的使用`Full Trust`权限。 |  |<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|使用指定的 XSL 转换样式表文件在 XML 文档进行格式化。 |    &1;> [!NOTE]&1;> XSL 转换样式表是可选的。</xref:System.Web.UI.WebControls.Xml.TransformSource%2A> </xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> 不需要设置<xref:System.Web.UI.WebControls.Xml.Transform%2A>或<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>属性。</xref:System.Web.UI.WebControls.Xml.TransformSource%2A> </xref:System.Web.UI.WebControls.Xml.Transform%2A> 如果这两个 XSL 转换样式表属性的设置，最后设置的属性将确定哪些 XSL 转换样式表用于格式化 XML 文档。 将忽略其他属性。       Xml 类还提供了<xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A>属性，使你可以使用可选的自变量提供的 XSL 转换样式表。</xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> 参数可以是 XSL 转换 (XSLT) 参数或扩展对象。      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:Xml       DocumentSource=&quot;uri&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       TransformSource=&quot;string&quot;       Visible=&quot;True|False&quot;   />   ```"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_196_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_196_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("DocumentSource")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.XmlBuilder))]

      [System.Web.UI.PersistChildren(false, true)]

      public class Xml : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Xml()
  nameWithType: Xml.Xml()
  fullName: System.Web.UI.WebControls.Xml.Xml()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>类。"
  syntax:
    content: public Xml ();
    parameters: []
  overload: System.Web.UI.WebControls.Xml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: Xml.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "元素，XML 或 HTML，已经过分析，并将元素添加到服务器控件的通知服务器控件<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>对象。"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddParsedSubObject method in a custom <xref:System.Web.UI.WebControls.Xml> server control.  \n  \n [!code-cs[CustomXmlAddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_1.aspx)]\n [!code-vb[CustomXmlAddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_1.aspx)]  \n  \n [!code-vb[CustomXmlAddParsedSubObject#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_2.vb)]\n [!code-cs[CustomXmlAddParsedSubObject#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_2.cs)]"
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>，它表示已分析的元素。</xref:System.Object>"
  overload: System.Web.UI.WebControls.Xml.AddParsedSubObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>obj</code>类型不是<xref href=&quot;System.Web.UI.LiteralControl&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.ClientID
  id: ClientID
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: ClientID
  nameWithType: Xml.ClientID
  fullName: System.Web.UI.WebControls.Xml.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重写&lt;xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName&gt;属性并返回基服务器控件标识符。"
  syntax:
    content: public override string ClientID { get; }
    return:
      type: System.String
      description: "基本服务器控件标识符。"
  overload: System.Web.UI.WebControls.Xml.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Controls
  id: Controls
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Controls
  nameWithType: Xml.Controls
  fullName: System.Web.UI.WebControls.Xml.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重写&lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt;属性并返回基<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>集合。"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "基<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>集合。"
  overload: System.Web.UI.WebControls.Xml.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: Xml.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "创建一个新<xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref>对象。"
  remarks: "主要由控件开发人员扩展的功能使用 CreateControlCollection 方法<xref:System.Web.UI.WebControls.Xml>控件。</xref:System.Web.UI.WebControls.Xml>"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "始终返回<xref href=&quot;System.Web.UI.EmptyControlCollection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.Xml.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Document
  id: Document
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Document
  nameWithType: Xml.Document
  fullName: System.Web.UI.WebControls.Xml.Document
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置<xref href=&quot;System.Xml.XmlDocument&quot;></xref>要在中显示<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>控件。"
  remarks: "文档属性已过时。 若要指定的 XML，将显示在<xref:System.Web.UI.WebControls.Xml>控制，请使用<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>属性或<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>属性。</xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> </xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> </xref:System.Web.UI.WebControls.Xml> 有关这些替代项的详细信息，请参阅类概述<xref:System.Web.UI.WebControls.Xml>控件。</xref:System.Web.UI.WebControls.Xml>       要在中显示的 XML 文档<xref:System.Web.UI.WebControls.Xml>控件三种方式之一中指定。</xref:System.Web.UI.WebControls.Xml> 你可以指定<xref:System.Xml.XmlDocument?displayProperty=fullName>对象、 一个 XML 字符串或通过设置适当的属性的 XML 文件。</xref:System.Xml.XmlDocument?displayProperty=fullName> 文档属性用于指定<xref:System.Xml.XmlDocument?displayProperty=fullName>（表示 XML 文档） 控件中显示。</xref:System.Xml.XmlDocument?displayProperty=fullName>"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_173_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_173_1.aspx)]"
  syntax:
    content: public System.Xml.XmlDocument Document { get; set; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref>要在中显示<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.Xml.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.DocumentContent
  id: DocumentContent
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: DocumentContent
  nameWithType: Xml.DocumentContent
  fullName: System.Web.UI.WebControls.Xml.DocumentContent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "设置一个字符串，包含要在中显示的 XML 文档<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>控件。"
  remarks: "要在中显示的 XML 文档<xref:System.Web.UI.WebControls.Xml>控件三种方式之一中指定。</xref:System.Web.UI.WebControls.Xml> 你可以指定<xref:System.Xml.XmlDocument?displayProperty=fullName>对象、 一个 XML 字符串或通过设置适当的属性的 XML 文件。</xref:System.Xml.XmlDocument?displayProperty=fullName> DocumentContent 属性用于指定 （表示 XML 文档） 的 XML 字符串在控件中显示。 DocumentContent 未通常以编程方式设置属性，也可以设置为该控件的属性。 相反，XML 字符串是通常以声明方式设置放置到开始和结束之间的文本`<asp:Xml>`的控件的标记。      1> [!NOTE]&1;> 尽管 DocumentContent 属性同时包含`get`和`set`访问器，仅`set`访问器非常有用。 如果你使用`get`访问器，<xref:System.String.Empty?displayProperty=fullName>返回。</xref:System.String.Empty?displayProperty=fullName>"
  syntax:
    content: public string DocumentContent { get; set; }
    return:
      type: System.String
      description: "一个字符串，包含的 XML 文档中显示<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.Xml.DocumentContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.DocumentSource
  id: DocumentSource
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: DocumentSource
  nameWithType: Xml.DocumentSource
  fullName: System.Web.UI.WebControls.Xml.DocumentSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置要显示在 XML 文档的路径<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>控件。"
  remarks: "要在中显示的 XML 文档<xref:System.Web.UI.WebControls.Xml>控件三种方式之一中指定。</xref:System.Web.UI.WebControls.Xml> 你可以指定<xref:System.Xml.XmlDocument?displayProperty=fullName>对象、 一个 XML 字符串或通过设置适当的属性的 XML 文件。</xref:System.Xml.XmlDocument?displayProperty=fullName> DocumentSource 属性用于指定 XML 文件 （表示 XML 文档） 的路径在控件中显示。 你可以使用相对或绝对路径。 相对路径而无需指定完整路径在服务器上相关的 Web 窗体页或用户控件的位置的文件的位置。 该路径是相对 Web 页的位置。 这使得更轻松地移动整个站点到另一个目录服务器上而无需更新到代码中的文件的路径。 绝对路径提供的完整路径，因此将站点移动到另一个目录时需要更新代码。"
  example:
  - "The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \n  \n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_902_1.aspx)]\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_902_1.aspx)]"
  syntax:
    content: public string DocumentSource { get; set; }
    return:
      type: System.String
      description: "若要显示在 XML 文档的路径<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>控件。"
  overload: System.Web.UI.WebControls.Xml.DocumentSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: EnableTheming
  nameWithType: Xml.EnableTheming
  fullName: System.Web.UI.WebControls.Xml.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重写&lt;xref:System.Web.UI.Control.EnableTheming%2A?displayProperty=fullName&gt;属性。 不支持此属性<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>类。"
  remarks: "EnableTheming 属性继承自<xref:System.Web.UI.Control>类，但不适用于<xref:System.Web.UI.WebControls.Xml>类。</xref:System.Web.UI.WebControls.Xml> </xref:System.Web.UI.Control> 如果设置此属性的值的任何尝试会引发<xref:System.NotSupportedException>异常。</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 不支持此属性。"
  overload: System.Web.UI.WebControls.Xml.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "尝试设置此属性的值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Xml.FindControl(String)
  fullName: System.Web.UI.WebControls.Xml.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "页指定的服务器控件的命名容器中搜索。"
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "要找的控件标识符。"
    return:
      type: System.Web.UI.Control
      description: "指定的控件;否则为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果指定的控件不存在。"
  overload: System.Web.UI.WebControls.Xml.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Focus
  id: Focus
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Focus()
  nameWithType: Xml.Focus()
  fullName: System.Web.UI.WebControls.Xml.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重写&lt;xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName&gt;方法。 此方法不受<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>类。"
  remarks: "焦点方法继承自的<xref:System.Web.UI.Control>类，但它是不适用于<xref:System.Web.UI.WebControls.Xml>类。</xref:System.Web.UI.WebControls.Xml> </xref:System.Web.UI.Control> 任何尝试调用该方法会引发<xref:System.NotSupportedException>异常。</xref:System.NotSupportedException>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.Xml.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "尝试调用此方法。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState
  id: GetDesignModeState
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: GetDesignModeState()
  nameWithType: Xml.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取控件设计时数据。"
  remarks: "GetDesignModeState 方法是使用以获取当前的设计时状态的一个帮助器方法<xref:System.Web.UI.WebControls.Xml>控件。</xref:System.Web.UI.WebControls.Xml>"
  syntax:
    content: protected override System.Collections.IDictionary GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>包含的设计时数据<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>控件。</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.WebControls.Xml.GetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.HasControls
  id: HasControls
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: HasControls()
  nameWithType: Xml.HasControls()
  fullName: System.Web.UI.WebControls.Xml.HasControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定服务器控件是否包含任何子控件。"
  syntax:
    content: public override bool HasControls ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控件包含其他控件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.Xml.HasControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Xml.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呈现的输出流的结果。"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the Render method in a custom server control so that the <xref:System.Web.UI.WebControls.Xml> control is always displayed with an image.  \n  \n [!code-vb[CustomXmlRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_1.aspx)]\n [!code-cs[CustomXmlRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_1.aspx)]  \n  \n [!code-cs[CustomXmlRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_2.cs)]\n [!code-vb[CustomXmlRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_2.vb)]"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter output);
    parameters:
    - id: output
      type: System.Web.UI.HtmlTextWriter
      description: "输出流的结果。"
  overload: System.Web.UI.WebControls.Xml.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: SkinID
  nameWithType: Xml.SkinID
  fullName: System.Web.UI.WebControls.Xml.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重写&lt;xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName&gt;属性。 不支持此属性<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>类。"
  remarks: "SkinID 属性继承自<xref:System.Web.UI.Control>类，但不适用于<xref:System.Web.UI.WebControls.Xml>类。</xref:System.Web.UI.WebControls.Xml> </xref:System.Web.UI.Control> 如果设置此属性的值的任何尝试会引发<xref:System.NotSupportedException>异常。</xref:System.NotSupportedException>"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "始终返回空字符串 (&quot;&quot;)。 不支持此属性。"
  overload: System.Web.UI.WebControls.Xml.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "尝试设置此属性的值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Transform
  id: Transform
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Transform
  nameWithType: Xml.Transform
  fullName: System.Web.UI.WebControls.Xml.Transform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置<xref href=&quot;System.Xml.Xsl.XslTransform&quot;></xref>之前对其写入到输出流进行格式化的 XML 文档的对象。"
  remarks: "使用时<xref:System.Web.UI.WebControls.Xml>控件显示的 XML 文档，你可以选择指定之前对写入到输出流中两种方式之一进行格式化 XML 文档中，可扩展样式表语言转换 (XSLT) 样式表。</xref:System.Web.UI.WebControls.Xml> 你可以设置使用的 XML 文档的格式<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>对象或 XSL 转换样式表文件。</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> 如果不指定任何 XSL 转换文档，则使用默认格式显示 XML 文档。 转换属性用于指定<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>用于格式化 XML 文档写入输出流写入之前 （表示 XSL 转换文档） 的对象。</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>      1> [!NOTE]&1;> 使用<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>对象需要`Full Trust`权限。</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_569_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_569_1.aspx)]"
  syntax:
    content: public System.Xml.Xsl.XslTransform Transform { get; set; }
    return:
      type: System.Xml.Xsl.XslTransform
      description: "<xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref>写入输出流写入之前进行格式设置的 XML 文档。"
  overload: System.Web.UI.WebControls.Xml.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList
  id: TransformArgumentList
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>包含可选自变量传递给样式表并使用在可扩展样式表语言转换 (XSLT) 的列表。"
  remarks: "TransformArgumentList 属性用于提供具有可选参数的 XSL 转换样式表。 参数可以是 XSLT 参数或扩展对象。       有关使用<xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName>类，请参阅[样式表参数和扩展对象的 XsltArgumentList](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName>"
  syntax:
    content: public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }
    return:
      type: System.Xml.Xsl.XsltArgumentList
      description: "A <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>包含可选自变量传递给样式表并使用 XSL 转换过程的列表。"
  overload: System.Web.UI.WebControls.Xml.TransformArgumentList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.TransformSource
  id: TransformSource
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: TransformSource
  nameWithType: Xml.TransformSource
  fullName: System.Web.UI.WebControls.Xml.TransformSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置 XML 文档之前对其写入到输出流格式化可扩展样式表语言转换 (XSLT) 样式表的路径。"
  remarks: "使用时<xref:System.Web.UI.WebControls.Xml>控件显示的 XML 文档，你可以选择指定格式的 XML 文档写入输出流中两种方式之一前一个 XSL 转换样式表。</xref:System.Web.UI.WebControls.Xml> 可以设置格式与 XML 文档<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>对象或使用 XSL 转换样式表文件。</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> 如果指定 XSL 转换的样式表，则使用默认格式显示 XML 文档。 TransformSource 属性用于指定用于格式化 XML 文档写入输出流写入之前 （表示一个 XSL 转换样式表） 的 XSL 转换样式表文件的路径。 你可以使用相对或绝对路径。 相对路径而无需指定完整路径在服务器上相关的 Web 窗体页或用户控件的位置的文件的位置。 该路径是相对 Web 页的位置。 这使得更轻松地移动整个站点到另一个目录服务器上而无需更新到代码中的文件的路径。 绝对路径提供的完整路径，因此将站点移动到另一个目录时需要更新代码。"
  example:
  - "The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \n  \n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_330_1.aspx)]\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_330_1.aspx)]"
  syntax:
    content: public string TransformSource { get; set; }
    return:
      type: System.String
      description: "XSL 转换样式表之前对其写入到输出流进行格式化的 XML 文档的路径。"
  overload: System.Web.UI.WebControls.Xml.TransformSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.XPathNavigator
  id: XPathNavigator
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
  fullName: System.Web.UI.WebControls.Xml.XPathNavigator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置用于定位和编辑与关联的 XML 数据的游标模型<xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref>控件。"
  remarks: "此属性可以用于将关联<xref:System.Xml.XPath.XPathNavigator>对象<xref:System.Web.UI.WebControls.Xml>控件。</xref:System.Web.UI.WebControls.Xml> </xref:System.Xml.XPath.XPathNavigator>       <xref:System.Xml.XPath.XPathNavigator>对象创建的类中实现<xref:System.Xml.XPath.IXPathNavigable>接口，如<xref:System.Xml.XPath.XPathDocument>和<xref:System.Xml.XmlDocument>类。</xref:System.Xml.XmlDocument> </xref:System.Xml.XPath.XPathDocument> </xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.XPath.XPathNavigator>创建的对象<xref:System.Xml.XPath.XPathDocument>对象是只读的和<xref:System.Xml.XPath.XPathNavigator>创建的对象<xref:System.Xml.XmlDocument>对象可以进行编辑。</xref:System.Xml.XmlDocument> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.XPath.XPathNavigator>使用<xref:System.Xml.XPath.XPathNavigator.CanEdit%2A><xref:System.Xml.XPath.XPathNavigator>类</xref:System.Xml.XPath.XPathNavigator>属性</xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>确定对象的只读或可编辑状态</xref:System.Xml.XPath.XPathNavigator>"
  syntax:
    content: public System.Xml.XPath.XPathNavigator XPathNavigator { get; set; }
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>对象。"
  overload: System.Web.UI.WebControls.Xml.XPathNavigator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.Xml.#ctor
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Xml()
  nameWithType: Xml.Xml()
  fullName: System.Web.UI.WebControls.Xml.Xml()
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Xml.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.Xml.ClientID
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: ClientID
  nameWithType: Xml.ClientID
  fullName: System.Web.UI.WebControls.Xml.ClientID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Xml.Controls
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Controls
  nameWithType: Xml.Controls
  fullName: System.Web.UI.WebControls.Xml.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Xml.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()
- uid: System.Web.UI.WebControls.Xml.Document
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Document
  nameWithType: Xml.Document
  fullName: System.Web.UI.WebControls.Xml.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Web.UI.WebControls.Xml.DocumentContent
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentContent
  nameWithType: Xml.DocumentContent
  fullName: System.Web.UI.WebControls.Xml.DocumentContent
- uid: System.Web.UI.WebControls.Xml.DocumentSource
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentSource
  nameWithType: Xml.DocumentSource
  fullName: System.Web.UI.WebControls.Xml.DocumentSource
- uid: System.Web.UI.WebControls.Xml.EnableTheming
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: EnableTheming
  nameWithType: Xml.EnableTheming
  fullName: System.Web.UI.WebControls.Xml.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: FindControl(String)
  nameWithType: Xml.FindControl(String)
  fullName: System.Web.UI.WebControls.Xml.FindControl(String)
- uid: System.Web.UI.WebControls.Xml.Focus
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Focus()
  nameWithType: Xml.Focus()
  fullName: System.Web.UI.WebControls.Xml.Focus()
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: GetDesignModeState()
  nameWithType: Xml.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.Xml.HasControls
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: HasControls()
  nameWithType: Xml.HasControls()
  fullName: System.Web.UI.WebControls.Xml.HasControls()
- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Xml.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Xml.SkinID
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: SkinID
  nameWithType: Xml.SkinID
  fullName: System.Web.UI.WebControls.Xml.SkinID
- uid: System.Web.UI.WebControls.Xml.Transform
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Transform
  nameWithType: Xml.Transform
  fullName: System.Web.UI.WebControls.Xml.Transform
- uid: System.Xml.Xsl.XslTransform
  parent: System.Xml.Xsl
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Web.UI.WebControls.Xml.TransformSource
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformSource
  nameWithType: Xml.TransformSource
  fullName: System.Web.UI.WebControls.Xml.TransformSource
- uid: System.Web.UI.WebControls.Xml.XPathNavigator
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
  fullName: System.Web.UI.WebControls.Xml.XPathNavigator
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Web.UI.WebControls.Xml.#ctor*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Xml
  nameWithType: Xml.Xml
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: AddParsedSubObject
  nameWithType: Xml.AddParsedSubObject
- uid: System.Web.UI.WebControls.Xml.ClientID*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: ClientID
  nameWithType: Xml.ClientID
- uid: System.Web.UI.WebControls.Xml.Controls*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Controls
  nameWithType: Xml.Controls
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: CreateControlCollection
  nameWithType: Xml.CreateControlCollection
- uid: System.Web.UI.WebControls.Xml.Document*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Document
  nameWithType: Xml.Document
- uid: System.Web.UI.WebControls.Xml.DocumentContent*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentContent
  nameWithType: Xml.DocumentContent
- uid: System.Web.UI.WebControls.Xml.DocumentSource*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentSource
  nameWithType: Xml.DocumentSource
- uid: System.Web.UI.WebControls.Xml.EnableTheming*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: EnableTheming
  nameWithType: Xml.EnableTheming
- uid: System.Web.UI.WebControls.Xml.FindControl*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: FindControl
  nameWithType: Xml.FindControl
- uid: System.Web.UI.WebControls.Xml.Focus*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Focus
  nameWithType: Xml.Focus
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: GetDesignModeState
  nameWithType: Xml.GetDesignModeState
- uid: System.Web.UI.WebControls.Xml.HasControls*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: HasControls
  nameWithType: Xml.HasControls
- uid: System.Web.UI.WebControls.Xml.Render*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Render
  nameWithType: Xml.Render
- uid: System.Web.UI.WebControls.Xml.SkinID*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: SkinID
  nameWithType: Xml.SkinID
- uid: System.Web.UI.WebControls.Xml.Transform*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Transform
  nameWithType: Xml.Transform
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
- uid: System.Web.UI.WebControls.Xml.TransformSource*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformSource
  nameWithType: Xml.TransformSource
- uid: System.Web.UI.WebControls.Xml.XPathNavigator*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
