### YamlMime:ManagedReference
items:
- uid: System.IO.Log.LogExtentCollection
  id: LogExtentCollection
  children:
  - System.IO.Log.LogExtentCollection.Add(System.String)
  - System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  - System.IO.Log.LogExtentCollection.Count
  - System.IO.Log.LogExtentCollection.FreeCount
  - System.IO.Log.LogExtentCollection.GetEnumerator
  - System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  - System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  - System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: LogExtentCollection
  nameWithType: LogExtentCollection
  fullName: System.IO.Log.LogExtentCollection
  type: Class
  summary: "表示的集合<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>与关联的对象<xref href=&quot;System.IO.Log.LogStore&quot;> </xref>。"
  remarks: "此类包含<xref:System.IO.Log.LogExtent>一种<xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>与关联的对象</xref:System.IO.Log.LogExtent>的集合 A<xref:System.IO.Log.LogStore>实例将其数据存储在磁盘范围，由表示集合<xref:System.IO.Log.LogExtent>实例。</xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogStore> 特定<xref:System.IO.Log.LogExtent>与一个关联<xref:System.IO.Log.LogStore>，和<xref:System.IO.Log.LogExtent>中相同的对象<xref:System.IO.Log.LogStore>相同的大小。</xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogExtent> 添加到和移除空间<xref:System.IO.Log.LogStore>范围增量的形式中的实例。</xref:System.IO.Log.LogStore>       尽管<xref:System.IO.Log.LogExtent>对象在磁盘上表示为文件，它们不应移动或删除像普通文件那样。</xref:System.IO.Log.LogExtent> 相反，应使用此类提供用于添加和删除方法<xref:System.IO.Log.LogExtent>直接实例。</xref:System.IO.Log.LogExtent> 当它们不再包含任何活动数据时，通常会删除扩展盘区。 但是，如果`force`中的参数<xref:System.IO.Log.LogExtentCollection.Remove%2A>方法是`true`，如果无法立即移除引发异常。</xref:System.IO.Log.LogExtentCollection.Remove%2A>       你无法删除 LogExtentCollection，这意味着最后一个范围<xref:System.IO.Log.LogExtentCollection.Count%2A>添加范围后，属性不能为零。</xref:System.IO.Log.LogExtentCollection.Count%2A>"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and LogExtentCollection classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/t-system.io.log.logexten_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/t-system.io.log.logexten_1.vb)]"
  syntax:
    content: 'public sealed class LogExtentCollection : System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Add(System.String)
  id: Add(System.String)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: LogExtentCollection.Add(String)
  fullName: System.IO.Log.LogExtentCollection.Add(String)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "将添加<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>到集合的实例。"
  remarks: "新添加的大小<xref:System.IO.Log.LogExtent>实例是否与现有的大小相同<xref:System.IO.Log.LogExtent>集合中的实例。</xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogExtent>      1> [!NOTE]&1;> 不要使用此方法将第一个<xref:System.IO.Log.LogExtent>到集合。</xref:System.IO.Log.LogExtent>"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/m-system.io.log.logexten_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/m-system.io.log.logexten_1.vb)]"
  syntax:
    content: public void Add (string path);
    parameters:
    - id: path
      type: System.String
      description: "要添加的日志范围路径。"
  overload: System.IO.Log.LogExtentCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "通过指定的日志存储区文件名<code> path </code>无效。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "必须为第一个范围指定大小。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "由于出现意外的 I/O 异常，无法执行请求。       -指定的文件<code> path </code>无法创建，因为该文件或目录已存在。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "该方法是序列已释放之后调用的。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来继续执行程序。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "记录序列已满。       -或者-存储磁盘或介质已满。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的日志存储区的访问被拒绝由操作系统。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  id: Add(System.String,System.Int64)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Add(String,Int64)
  nameWithType: LogExtentCollection.Add(String,Int64)
  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "创建一个新<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>具有指定大小并将其添加到集合。"
  remarks: "如果集合不为空，指定的大小必须至少与集合中其他范围的大小一样大。 在这种情况下，`size`将忽略参数，并使用集合中的其他范围相同的大小创建范围。"
  syntax:
    content: public void Add (string path, long size);
    parameters:
    - id: path
      type: System.String
      description: "日志范围的路径。"
    - id: size
      type: System.Int64
      description: "日志范围的大小。"
  overload: System.IO.Log.LogExtentCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path </code>or <code>size</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>archiveTail</code>不在有效范围内。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "通过指定的日志存储区文件名<code> path </code>无效。       <code>size</code>小于存储区中的其他范围的大小。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "必须为第一个范围指定大小。       -或者-不能使用重复的范围名称。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "由于出现意外的 I/O 异常，无法执行请求。       -指定的文件<code> path </code>无法创建，因为该文件或目录已存在。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "该方法是序列已释放之后调用的。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来继续执行程序。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "记录序列已满。       -或者-存储磁盘或介质已满。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的日志存储区的访问被拒绝由操作系统。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Count
  id: Count
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Count
  nameWithType: LogExtentCollection.Count
  fullName: System.IO.Log.LogExtentCollection.Count
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "获取集合中的日志范围数。"
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_3_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_3_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "集合中的日志范围数。"
  overload: System.IO.Log.LogExtentCollection.Count*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放的日志存储区。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.FreeCount
  id: FreeCount
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
  fullName: System.IO.Log.LogExtentCollection.FreeCount
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "获取可用数目<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>实例在集合中，即数<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>不包含任何数据的实例。"
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_2_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_2_1.vb)]"
  syntax:
    content: public int FreeCount { get; }
    return:
      type: System.Int32
      description: "可用数<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>集合中的实例。"
  overload: System.IO.Log.LogExtentCollection.FreeCount*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已释放的日志存储区。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.GetEnumerator
  id: GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: LogExtentCollection.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "获取的枚举数<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>此集合中的实例。 此方法不能被继承。"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}
      description: "枚举数<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>此集合中的实例。"
  overload: System.IO.Log.LogExtentCollection.GetEnumerator*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "由于出现意外的 I/O 异常，无法执行请求。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "操作由于以下原因之一而无效:-枚举已经终止。      的已修改集合。      的尚未启动枚举。 调用<xref:System.Collections.IEnumerator.MoveNext*>必须进行。</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "该方法是序列已释放之后调用的。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来继续执行程序。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "记录序列已满。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的日志存储区的访问被拒绝由操作系统。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  id: Remove(System.IO.Log.LogExtent,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Remove(LogExtent,Boolean)
  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "中移除指定<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>从集合的实例。"
  remarks: "<xref:System.IO.Log.LogExtent>可以从集合仅当它是不活动区域的<xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>的一部分中移除实例</xref:System.IO.Log.LogExtent> 如果`force`参数是`true`和无法立即移除范围，则会引发异常。 如果`force`参数是`false`并且无法立即移除范围，删除将推迟，直到它不再是活动区域的一部分。       无法删除中的最后一个范围<xref:System.IO.Log.LogExtentCollection>，这意味着，<xref:System.IO.Log.LogExtentCollection.Count%2A>添加范围后，属性不能为零。</xref:System.IO.Log.LogExtentCollection.Count%2A> </xref:System.IO.Log.LogExtentCollection>"
  syntax:
    content: public void Remove (System.IO.Log.LogExtent extent, bool force);
    parameters:
    - id: extent
      type: System.IO.Log.LogExtent
      description: "<xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>要删除实例。"
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应立即; 移除范围否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.Log.LogExtentCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>extent</code>or <code>force</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>extent</code>找不到集合中。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>extent</code>无法删除。 它仍一部分的活动的区域中，或者访问被拒绝。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "由于出现意外的 I/O 异常，无法执行请求。       - <code> extent </code>无法删除。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "该方法是序列已释放之后调用的。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来继续执行程序。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "记录序列已满。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的日志存储区的访问被拒绝由操作系统。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  id: Remove(System.String,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Remove(String,Boolean)
  nameWithType: LogExtentCollection.Remove(String,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "删除<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>实例与集合中指定的路径。"
  remarks: "<xref:System.IO.Log.LogExtent>可以从集合仅当它是不活动区域的<xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>的一部分中移除实例</xref:System.IO.Log.LogExtent> 如果`force`参数是`true`和无法立即移除范围，则会引发异常。 如果`force`参数是`false`并且无法立即移除范围，删除将推迟，直到它不再是活动区域的一部分。       无法删除中的最后一个范围<xref:System.IO.Log.LogExtentCollection>，这意味着，<xref:System.IO.Log.LogExtentCollection.Count%2A>添加范围后，属性不能为零。</xref:System.IO.Log.LogExtentCollection.Count%2A> </xref:System.IO.Log.LogExtentCollection>"
  syntax:
    content: public void Remove (string path, bool force);
    parameters:
    - id: path
      type: System.String
      description: "路径<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>要删除实例。"
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应立即; 移除范围否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.Log.LogExtentCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>force</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的范围<code> path </code>不能在集合中找到。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定的范围<code> path </code>无法删除。 它仍一部分的活动的区域中，或者访问被拒绝。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "由于出现意外的 I/O 异常，无法执行请求。       -指定的范围<code> path </code>无法删除。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "该方法是序列已释放之后调用的。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "没有足够的内存来继续执行程序。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "记录序列已满。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定的日志存储区的访问被拒绝由操作系统。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "获取的枚举数<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>此集合中的实例。 此方法不能被继承。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "枚举数<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>此集合中的实例。"
  overload: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.Log.SequenceFullException
  parent: System.IO.Log
  isExternal: false
  name: SequenceFullException
  nameWithType: SequenceFullException
  fullName: System.IO.Log.SequenceFullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.Log.LogExtentCollection.Add(System.String)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add(String)
  nameWithType: LogExtentCollection.Add(String)
  fullName: System.IO.Log.LogExtentCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add(String,Int64)
  nameWithType: LogExtentCollection.Add(String,Int64)
  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.LogExtentCollection.Count
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Count
  nameWithType: LogExtentCollection.Count
  fullName: System.IO.Log.LogExtentCollection.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.LogExtentCollection.FreeCount
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
  fullName: System.IO.Log.LogExtentCollection.FreeCount
- uid: System.IO.Log.LogExtentCollection.GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: LogExtentCollection.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<LogExtent>
  nameWithType: IEnumerator<LogExtent>
  fullName: System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IO.Log.LogExtent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Log.LogExtent
    name: LogExtent
    nameWithType: LogExtent
    fullName: LogExtent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove(LogExtent,Boolean)
  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)
- uid: System.IO.Log.LogExtent
  parent: System.IO.Log
  isExternal: false
  name: LogExtent
  nameWithType: LogExtent
  fullName: System.IO.Log.LogExtent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove(String,Boolean)
  nameWithType: LogExtentCollection.Remove(String,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IO.Log.LogExtentCollection.Add*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add
  nameWithType: LogExtentCollection.Add
- uid: System.IO.Log.LogExtentCollection.Count*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Count
  nameWithType: LogExtentCollection.Count
- uid: System.IO.Log.LogExtentCollection.FreeCount*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
- uid: System.IO.Log.LogExtentCollection.GetEnumerator*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: LogExtentCollection.GetEnumerator
- uid: System.IO.Log.LogExtentCollection.Remove*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove
  nameWithType: LogExtentCollection.Remove
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator
