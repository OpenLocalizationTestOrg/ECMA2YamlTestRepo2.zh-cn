### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlDecimal
  id: SqlDecimal
  children:
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  - System.Data.SqlTypes.SqlDecimal.BinData
  - System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Data
  - System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  - System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.GetHashCode
  - System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.IsNull
  - System.Data.SqlTypes.SqlDecimal.IsPositive
  - System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.MaxPrecision
  - System.Data.SqlTypes.SqlDecimal.MaxScale
  - System.Data.SqlTypes.SqlDecimal.MaxValue
  - System.Data.SqlTypes.SqlDecimal.MinValue
  - System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Null
  - System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)
  - System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  - System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  - System.Data.SqlTypes.SqlDecimal.Precision
  - System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Scale
  - System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlDecimal.ToDouble
  - System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  - System.Data.SqlTypes.SqlDecimal.ToSqlByte
  - System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  - System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  - System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  - System.Data.SqlTypes.SqlDecimal.ToSqlString
  - System.Data.SqlTypes.SqlDecimal.ToString
  - System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Value
  langs:
  - csharp
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
  type: Struct
  summary: "表示数值之间-10 ^38 + 1 和 10 ^38-1，具有固定的精度和小数位数。"
  remarks: "SqlDecimal 已从其相应的.NET Framework 的不同基础数据结构<xref:System.Decimal>数据类型。</xref:System.Decimal> <xref:System.Decimal>有没有精度的概念。</xref:System.Decimal> 它使用 3 个字节来存储实际数据，并因此具有最大小数位数为 28。 数据范围是-79228162514264337593543950335 到 79228162514264337593543950335。 SqlDecimal 具有精度和小数位数。 它使用 4 4 字节无符号的整数来存储实际数据，并因此具有最大精度和小数位数为 38。 数据范围为-10 ^38 + 1 到 10 ^38-1。"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlDecimal : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Decimal)
  nameWithType: SqlDecimal.SqlDecimal(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Decimal)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "初始化的新实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构使用提供<xref:System.Decimal>值。</xref:System.Decimal>"
  syntax:
    content: public SqlDecimal (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "<xref:System.Decimal>值存储为<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。</xref:System.Decimal>"
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Double)
  nameWithType: SqlDecimal.SqlDecimal(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Double)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "初始化的新实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构使用提供的双精度型参数。"
  syntax:
    content: public SqlDecimal (double dVal);
    parameters:
    - id: dVal
      type: System.Double
      description: "双精度，表示的值的新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Int32)
  nameWithType: SqlDecimal.SqlDecimal(Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "初始化的新实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构使用提供的整数值。"
  syntax:
    content: public SqlDecimal (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "提供的整数值，它将用作新值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Int64)
  nameWithType: SqlDecimal.SqlDecimal(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Int64)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "初始化的新实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构使用提供的长整型值。"
  syntax:
    content: public SqlDecimal (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "提供的长整型值，它将用作新值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  id: '#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Byte,Byte,Boolean,Int32[])
  nameWithType: SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32[])
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "初始化的新实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构使用提供的参数。"
  syntax:
    content: public SqlDecimal (byte bPrecision, byte bScale, bool fPositive, int[] bits);
    parameters:
    - id: bPrecision
      type: System.Byte
      description: "用于表示的数字的最大数<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性的新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
    - id: bScale
      type: System.Byte
      description: "小数位数数<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性将解析为新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
    - id: fPositive
      type: System.Boolean
      description: "一个布尔值，该值指示是否新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构表示正数或负数。"
    - id: bits
      type: System.Int32[]
      description: "提供的新值的 128 位无符号的整数<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  nameWithType: SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "初始化的新实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构使用提供的参数。"
  syntax:
    content: public SqlDecimal (byte bPrecision, byte bScale, bool fPositive, int data1, int data2, int data3, int data4);
    parameters:
    - id: bPrecision
      type: System.Byte
      description: "用于表示的数字的最大数<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性的新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
    - id: bScale
      type: System.Byte
      description: "小数位数数<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性将解析为新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
    - id: fPositive
      type: System.Boolean
      description: "一个布尔值，该值指示是否新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构表示正数或负数。"
    - id: data1
      type: System.Int32
      description: "一个 32 位无符号的整数，它将结合 data2、 data3 和 data4 以组成一个表示新的 128 位无符号整数<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构值。"
    - id: data2
      type: System.Int32
      description: "一个 32 位无符号的整数，它将结合 data1、 data3 和 data4 以组成一个表示新的 128 位无符号整数<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构值。"
    - id: data3
      type: System.Int32
      description: "一个 32 位无符号的整数，它将结合 data1、 data2 和 data4 以组成一个表示新的 128 位无符号整数<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构值。"
    - id: data4
      type: System.Int32
      description: "一个 32 位无符号的整数，它将结合 data1、 data2 和 data3 以组成一个表示新的 128 位无符号整数<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构值。"
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  id: Abs(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Abs(SqlDecimal)
  nameWithType: SqlDecimal.Abs(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Abs(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Abs 方法获取数值的绝对值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Abs (System.Data.SqlTypes.SqlDecimal n);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构，它的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性包含该无符号的数值表示数值的绝对值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.Abs*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Add(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Add(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Add(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算两个总和<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>运算符。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Add (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，它的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性包含总和。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  id: AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: AdjustScale(SqlDecimal,Int32,Boolean)
  nameWithType: SqlDecimal.AdjustScale(SqlDecimal,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlDecimal.AdjustScale(SqlDecimal,Int32,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "小数位数为<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>操作数将调整由数字参数指示的数字个数。 根据 fRound 参数的值，值将被舍入到适当数量的数字或截断。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal AdjustScale (System.Data.SqlTypes.SqlDecimal n, int digits, bool fRound);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构来进行调整。"
    - id: digits
      type: System.Int32
      description: "调整后的结构中的数字个数。"
    - id: fRound
      type: System.Boolean
      description: "如果此参数为<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，新值将舍入，如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，则该值将被截断。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，它的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性包含调整后的数字。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.AdjustScale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.BinData
  id: BinData
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: BinData
  nameWithType: SqlDecimal.BinData
  fullName: System.Data.SqlTypes.SqlDecimal.BinData
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "获取的二进制表示形式的值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>的字节数组形式的结构。"
  syntax:
    content: public byte[] BinData { get; }
    return:
      type: System.Byte[]
      description: "包含的二进制表示形式的字节数组<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构的值。"
  overload: System.Data.SqlTypes.SqlDecimal.BinData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  id: Ceiling(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Ceiling(SqlDecimal)
  nameWithType: SqlDecimal.Ceiling(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Ceiling(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "返回大于或等于指定的最小整数<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Ceiling (System.Data.SqlTypes.SqlDecimal n);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>上限值要为其计算的结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>表示最小整数大于或等于指定<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  id: CompareTo(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: CompareTo(SqlDecimal)
  nameWithType: SqlDecimal.CompareTo(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较此<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>实例与所提供<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>对象并返回对其相对值的指示。"
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlDecimal value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>进行比较。"
    return:
      type: System.Int32
      description: "一个带符号的数字，指示该实例和对象的相对值。       <table><thead><tr><th> 返回值       </th><th> 条件       </th></tr></thead><tbody><tr><td> 小于零       </td><td> 此实例是小于的对象。       </td></tr><tr><td> 零       </td><td> 此实例与对象相同。       </td></tr><tr><td> 大于零       </td><td> 此实例大于对象-该对象为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlDecimal.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlDecimal.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较此<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>实例与所提供<xref:System.Object>并返回对其相对值的指示。</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>进行比较。</xref:System.Object>"
    return:
      type: System.Int32
      description: "一个带符号的数字，指示该实例和对象的相对值。       <table><thead><tr><th> 返回值       </th><th> 条件       </th></tr></thead><tbody><tr><td> 小于零       </td><td> 此实例是小于的对象。       </td></tr><tr><td> 零       </td><td> 此实例与对象相同。       </td></tr><tr><td> 大于零       </td><td> 此实例大于对象-该对象为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlDecimal.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  id: ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ConvertToPrecScale(SqlDecimal,Int32,Int32)
  nameWithType: SqlDecimal.ConvertToPrecScale(SqlDecimal,Int32,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(SqlDecimal,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "调整的值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>操作数指定的精度和小数位数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal ConvertToPrecScale (System.Data.SqlTypes.SqlDecimal n, int precision, int scale);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>其值是进行调整的结构。"
    - id: precision
      type: System.Int32
      description: "新的精度<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
    - id: scale
      type: System.Int32
      description: "新的小数位数<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数中指定其值已调整到的精度和小数位数的结构。"
  overload: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Data
  id: Data
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Data
  nameWithType: SqlDecimal.Data
  fullName: System.Data.SqlTypes.SqlDecimal.Data
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "获取的二进制表示形式这<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>作为整数的数组的结构。"
  syntax:
    content: public int[] Data { get; }
    return:
      type: System.Int32[]
      description: "包含的二进制表示形式这整数的数组<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Divide(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Divide(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Divide(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "除法运算符计算除以第一个结果<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>操作数除以第二个操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Divide (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，它的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性包含除法运算的结果。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlDecimal.Equals(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比较提供<xref:System.Object>参数<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>实例。</xref:System.Data.SqlTypes.SqlDecimal.Value*> </xref:System.Object>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>进行比较。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对象的实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>和两个是否相等。 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Equals(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Equals(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>操作数以确定它们是否相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果两个值相等。 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果任一实例为 null 的值<xref uid=&quot;langword_csharp_SqlDecimal&quot; name=&quot;SqlDecimal&quot; href=&quot;&quot;></xref>将为 null。"
  overload: System.Data.SqlTypes.SqlDecimal.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  id: Floor(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Floor(SqlDecimal)
  nameWithType: SqlDecimal.Floor(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Floor(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定将舍入<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>数字到下一个较小的整数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Floor (System.Data.SqlTypes.SqlDecimal n);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>为计算最小值的结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构，其中包含此的整数部分<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.Floor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlDecimal.GetHashCode()
  fullName: System.Data.SqlTypes.SqlDecimal.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "返回此实例的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位有符号的整数哈希代码。"
  overload: System.Data.SqlTypes.SqlDecimal.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlDecimal.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlDecimal.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "返回指定的 XML 架构定义语言 (XSD) <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>。"
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>值，该值指示指定的 XSD <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: GreaterThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.GreaterThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThan(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，以确定第一个是否大于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数，以确定第一个是否大于或等于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>的第一个实例是否大于或等于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlDecimal.IsNull
  fullName: System.Data.SqlTypes.SqlDecimal.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指示是否这<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构为 null。"
  remarks: "有关详细信息，请参阅[处理 Null 值](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构为 null。 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.IsPositive
  id: IsPositive
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: IsPositive
  nameWithType: SqlDecimal.IsPositive
  fullName: System.Data.SqlTypes.SqlDecimal.IsPositive
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指示是否<xref:System.Data.SqlTypes.SqlDecimal.Value*>此<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构是大于零。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public bool IsPositive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Data.SqlTypes.SqlDecimal.Value*>赋 null 值。</xref:System.Data.SqlTypes.SqlDecimal.Value*> 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.IsPositive*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: LessThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.LessThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThan(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，以确定第一个是否小于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: LessThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.LessThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数，以确定第一个是否小于或等于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于或等于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.MaxPrecision
  id: MaxPrecision
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: MaxPrecision
  nameWithType: SqlDecimal.MaxPrecision
  fullName: System.Data.SqlTypes.SqlDecimal.MaxPrecision
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一个常数，表示的最大可能值<xref:System.Data.SqlTypes.SqlDecimal.Precision*>属性。</xref:System.Data.SqlTypes.SqlDecimal.Precision*>"
  remarks: "此常量的值为 38。"
  syntax:
    content: public static readonly byte MaxPrecision;
    return:
      type: System.Byte
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.MaxScale
  id: MaxScale
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: MaxScale
  nameWithType: SqlDecimal.MaxScale
  fullName: System.Data.SqlTypes.SqlDecimal.MaxScale
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一个常数，表示的最大值<xref:System.Data.SqlTypes.SqlDecimal.Scale*>属性。</xref:System.Data.SqlTypes.SqlDecimal.Scale*>"
  syntax:
    content: public static readonly byte MaxScale;
    return:
      type: System.Byte
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: MaxValue
  nameWithType: SqlDecimal.MaxValue
  fullName: System.Data.SqlTypes.SqlDecimal.MaxValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一个常数，表示的最大值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  remarks: "此常量的值是 99999999999999999999999999999999999999。"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlDecimal MaxValue;
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: MinValue
  nameWithType: SqlDecimal.MinValue
  fullName: System.Data.SqlTypes.SqlDecimal.MinValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一个常数，表示的最小值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  remarks: "此常量的值是-99,999,999,999,999,999,999,999,999,999,999,999,999。"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlDecimal MinValue;
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Multiply(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Multiply(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Multiply(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "乘法运算符计算两个产品<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Multiply (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，它的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性包含乘法的乘积。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: NotEquals(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.NotEquals(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.NotEquals(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数，以确定它们是否不相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否不相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否相等。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlDecimal.Null
  fullName: System.Data.SqlTypes.SqlDecimal.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "表示<xref href=&quot;System.DBNull&quot;> </xref> ，可以将其分配到此实例的<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>类。"
  remarks: "有关详细信息，请参阅[处理 Null 值](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlDecimal Null;
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Addition(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Addition(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Addition(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算两个总和<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>运算符。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Addition (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，它的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性包含总和。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Division(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Division(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Division(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "除法运算符计算除以第一个结果<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>操作数除以第二个操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Division (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，它的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性包含除法运算的结果。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Equality(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Equality(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Equality(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>操作数以确定它们是否相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否不相等。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlDecimal.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlDecimal.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static decimal op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
    return:
      type: System.Decimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlDecimal.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlDecimal.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlDecimal.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(Double)
  nameWithType: SqlDecimal.op_Explicit(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(Double)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (double x);
    parameters:
    - id: x
      type: System.Double
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_GreaterThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_GreaterThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，以确定第一个是否大于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数，以确定第一个是否大于或等于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>的第一个实例是否大于或等于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)
  id: op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlByte)
  nameWithType: SqlDecimal.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)
  id: op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlInt16)
  nameWithType: SqlDecimal.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)
  id: op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlInt32)
  nameWithType: SqlDecimal.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)
  id: op_Implicit(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlInt64)
  nameWithType: SqlDecimal.op_Implicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)
  id: op_Implicit(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlMoney)
  nameWithType: SqlDecimal.op_Implicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)
  id: op_Implicit(System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(Decimal)
  nameWithType: SqlDecimal.op_Implicit(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(Decimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (decimal x);
    parameters:
    - id: x
      type: System.Decimal
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)
  id: op_Implicit(System.Int64)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(Int64)
  nameWithType: SqlDecimal.op_Implicit(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(Int64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (long x);
    parameters:
    - id: x
      type: System.Int64
      description: "要添加。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "要添加。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Inequality(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Inequality(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Inequality(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数，以确定它们是否不相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否不相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果两个实例是否相等。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_LessThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_LessThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_LessThan(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，以确定第一个是否小于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "执行逻辑比较两个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数，以确定第一个是否小于或等于第二个。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>即<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一个实例小于或等于第二个实例。 否则为<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一实例<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>为 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>将<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Multiply(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Multiply(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Multiply(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "乘法运算符计算两个产品<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Multiply (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，它的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性包含乘法的乘积。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Subtraction(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Subtraction(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Subtraction(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算的结果中减去第二个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>从第一个操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Subtraction (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，其值属性包含该减法运算的结果。"
  overload: System.Data.SqlTypes.SqlDecimal.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_UnaryNegation(SqlDecimal)
  nameWithType: SqlDecimal.op_UnaryNegation(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一元减运算符对求反<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>参数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_UnaryNegation (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构取反。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，其值包含求反结果。"
  overload: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlDecimal.Parse(String)
  fullName: System.Data.SqlTypes.SqlDecimal.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将转换<xref:System.String>到数字表示形式其<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>等效。</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> ，无法被分析。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>等效于指定<xref:System.String>.</xref:System.String>中包含的值"
  overload: System.Data.SqlTypes.SqlDecimal.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  id: Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Power(SqlDecimal,Double)
  nameWithType: SqlDecimal.Power(SqlDecimal,Double)
  fullName: System.Data.SqlTypes.SqlDecimal.Power(SqlDecimal,Double)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "引发的指定值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构指定的幂。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Power (System.Data.SqlTypes.SqlDecimal n, double exp);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构乘幂。"
    - id: exp
      type: System.Double
      description: "双精度值，该值指示应与其引发数的能力。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>包含结果的结构。"
  overload: System.Data.SqlTypes.SqlDecimal.Power*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Precision
  id: Precision
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Precision
  nameWithType: SqlDecimal.Precision
  fullName: System.Data.SqlTypes.SqlDecimal.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "获取用于表示的数字的最大数目<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public byte Precision { get; }
    return:
      type: System.Byte
      description: "用于表示的数字的最大数<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>此<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  id: Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Round(SqlDecimal,Int32)
  nameWithType: SqlDecimal.Round(SqlDecimal,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Round(SqlDecimal,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "获取最接近指定的数字<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构的值与指定的精度。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Round (System.Data.SqlTypes.SqlDecimal n, int position);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构要舍入。"
    - id: position
      type: System.Int32
      description: "返回值中的有效小数位数 （精度） 数。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构，其中包含舍入运算的结果。"
  overload: System.Data.SqlTypes.SqlDecimal.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Scale
  id: Scale
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Scale
  nameWithType: SqlDecimal.Scale
  fullName: System.Data.SqlTypes.SqlDecimal.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "获取到的小数位数<xref:System.Data.SqlTypes.SqlDecimal.Value*>得到解决。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public byte Scale { get; }
    return:
      type: System.Byte
      description: "小数位数数<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>属性处于已解决状态。"
  overload: System.Data.SqlTypes.SqlDecimal.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  id: Sign(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Sign(SqlDecimal)
  nameWithType: SqlDecimal.Sign(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Sign(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "获取一个值，该值指示的符号<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt32 Sign (System.Data.SqlTypes.SqlDecimal n);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>其符号是要进行求值的结构。"
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "一个数字，指示的符号<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Subtract(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Subtract(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Subtract(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "计算的结果中减去第二个<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>从第一个操作数。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Subtract (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "一个新<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构，其值属性包含该减法运算的结果。"
  overload: System.Data.SqlTypes.SqlDecimal.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成员支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成员支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader " name="XmlReader " href=""></xref>
  overload: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成员支持.NET Framework 基础结构，不宜在代码中直接使用。"
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter " name="XmlWriter " href=""></xref>
  overload: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToDouble
  id: ToDouble
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToDouble()
  nameWithType: SqlDecimal.ToDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "返回双精度的内容等于<xref:System.Data.SqlTypes.SqlDecimal.Value*>的此实例的属性。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public double ToDouble ();
    parameters: []
    return:
      type: System.Double
      description: "十进制表示形式<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.ToDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlDecimal.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Data.SqlTypes.SqlDecimal.Value*>为非零;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果零; 否则为 Null。</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlDecimal.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>结构，它的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>等于<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>此<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。 如果<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构的值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、 <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>结构的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>将是 1。 否则为<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>结构的<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>将为 0。"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlDecimal.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>结构具有相同的值与此实例的<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlDecimal.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>结构具有相同的值与此实例的<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlDecimal.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>结构具有相同的值与此实例的<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlDecimal.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>结构具有相同的值与此实例的<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlDecimal.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>结构具有相同的值与此实例的<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlDecimal.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>结构具有相同的值与此实例的<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlDecimal.ToSqlString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构<xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>结构，其值一个字符串，表示此中包含的值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlDecimal.ToString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将此转换<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> <xref:System.String>.</xref:System.String>结构"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "一个新<xref:System.String>对象，其中包含的字符串表示形式<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构的<xref:System.Data.SqlTypes.SqlDecimal.Value*>属性。</xref:System.Data.SqlTypes.SqlDecimal.Value*> </xref:System.String>"
  overload: System.Data.SqlTypes.SqlDecimal.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  id: Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Truncate(SqlDecimal,Int32)
  nameWithType: SqlDecimal.Truncate(SqlDecimal,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Truncate(SqlDecimal,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "将截断指定<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构的值与你希望的位置。"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Truncate (System.Data.SqlTypes.SqlDecimal n, int position);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>结构被截断。"
    - id: position
      type: System.Int32
      description: "数字将被截断到小数位。"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "提供一个负值<code> position </code>为了截断到小数点左边的相应位置的值的参数。"
  overload: System.Data.SqlTypes.SqlDecimal.Truncate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Value
  id: Value
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Value
  nameWithType: SqlDecimal.Value
  fullName: System.Data.SqlTypes.SqlDecimal.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "获取的值<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>结构。 此属性是只读的。"
  syntax:
    content: public decimal Value { get; }
    return:
      type: System.Decimal
      description: "范围介于-79228162514264337593543950335 到 79,228,162,514,162,514,264,337,593,543,950,335 内的数字。"
  overload: System.Data.SqlTypes.SqlDecimal.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Decimal)
  nameWithType: SqlDecimal.SqlDecimal(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Double)
  nameWithType: SqlDecimal.SqlDecimal(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Int32)
  nameWithType: SqlDecimal.SqlDecimal(Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Int64)
  nameWithType: SqlDecimal.SqlDecimal(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Byte,Byte,Boolean,Int32[])
  nameWithType: SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32[])
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32[])
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  nameWithType: SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
- uid: System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Abs(SqlDecimal)
  nameWithType: SqlDecimal.Abs(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Abs(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Add(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Add(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Add(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: AdjustScale(SqlDecimal,Int32,Boolean)
  nameWithType: SqlDecimal.AdjustScale(SqlDecimal,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlDecimal.AdjustScale(SqlDecimal,Int32,Boolean)
- uid: System.Data.SqlTypes.SqlDecimal.BinData
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: BinData
  nameWithType: SqlDecimal.BinData
  fullName: System.Data.SqlTypes.SqlDecimal.BinData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Ceiling(SqlDecimal)
  nameWithType: SqlDecimal.Ceiling(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Ceiling(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: CompareTo(SqlDecimal)
  nameWithType: SqlDecimal.CompareTo(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlDecimal.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ConvertToPrecScale(SqlDecimal,Int32,Int32)
  nameWithType: SqlDecimal.ConvertToPrecScale(SqlDecimal,Int32,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(SqlDecimal,Int32,Int32)
- uid: System.Data.SqlTypes.SqlDecimal.Data
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Data
  nameWithType: SqlDecimal.Data
  fullName: System.Data.SqlTypes.SqlDecimal.Data
- uid: System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Divide(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Divide(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Divide(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlDecimal.Equals(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(Object)
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Equals(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Equals(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Floor(SqlDecimal)
  nameWithType: SqlDecimal.Floor(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Floor(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.GetHashCode
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlDecimal.GetHashCode()
  fullName: System.Data.SqlTypes.SqlDecimal.GetHashCode()
- uid: System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlDecimal.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlDecimal.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GreaterThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.GreaterThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThan(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.IsNull
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: IsNull
  nameWithType: SqlDecimal.IsNull
  fullName: System.Data.SqlTypes.SqlDecimal.IsNull
- uid: System.Data.SqlTypes.SqlDecimal.IsPositive
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: IsPositive
  nameWithType: SqlDecimal.IsPositive
  fullName: System.Data.SqlTypes.SqlDecimal.IsPositive
- uid: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: LessThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.LessThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThan(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: LessThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.LessThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.MaxPrecision
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: MaxPrecision
  nameWithType: SqlDecimal.MaxPrecision
  fullName: System.Data.SqlTypes.SqlDecimal.MaxPrecision
- uid: System.Data.SqlTypes.SqlDecimal.MaxScale
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: MaxScale
  nameWithType: SqlDecimal.MaxScale
  fullName: System.Data.SqlTypes.SqlDecimal.MaxScale
- uid: System.Data.SqlTypes.SqlDecimal.MaxValue
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: MaxValue
  nameWithType: SqlDecimal.MaxValue
  fullName: System.Data.SqlTypes.SqlDecimal.MaxValue
- uid: System.Data.SqlTypes.SqlDecimal.MinValue
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: MinValue
  nameWithType: SqlDecimal.MinValue
  fullName: System.Data.SqlTypes.SqlDecimal.MinValue
- uid: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Multiply(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Multiply(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Multiply(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: NotEquals(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.NotEquals(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.NotEquals(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.Null
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: "Null"
  nameWithType: SqlDecimal.Null
  fullName: System.Data.SqlTypes.SqlDecimal.Null
- uid: System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Addition(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Addition(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Addition(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Division(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Division(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Division(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Equality(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Equality(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Equality(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlDecimal.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlDecimal.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlDecimal.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlDecimal.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlDecimal.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(Double)
  nameWithType: SqlDecimal.op_Explicit(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(Double)
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_GreaterThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_GreaterThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlByte)
  nameWithType: SqlDecimal.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlInt16)
  nameWithType: SqlDecimal.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlInt32)
  nameWithType: SqlDecimal.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlInt64)
  nameWithType: SqlDecimal.op_Implicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlMoney)
  nameWithType: SqlDecimal.op_Implicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(Decimal)
  nameWithType: SqlDecimal.op_Implicit(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(Decimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(Int64)
  nameWithType: SqlDecimal.op_Implicit(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(Int64)
- uid: System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Inequality(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Inequality(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Inequality(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_LessThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_LessThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_LessThan(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Multiply(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Multiply(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Multiply(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Subtraction(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Subtraction(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Subtraction(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_UnaryNegation(SqlDecimal)
  nameWithType: SqlDecimal.op_UnaryNegation(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Parse(String)
  nameWithType: SqlDecimal.Parse(String)
  fullName: System.Data.SqlTypes.SqlDecimal.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Power(SqlDecimal,Double)
  nameWithType: SqlDecimal.Power(SqlDecimal,Double)
  fullName: System.Data.SqlTypes.SqlDecimal.Power(SqlDecimal,Double)
- uid: System.Data.SqlTypes.SqlDecimal.Precision
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Precision
  nameWithType: SqlDecimal.Precision
  fullName: System.Data.SqlTypes.SqlDecimal.Precision
- uid: System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Round(SqlDecimal,Int32)
  nameWithType: SqlDecimal.Round(SqlDecimal,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Round(SqlDecimal,Int32)
- uid: System.Data.SqlTypes.SqlDecimal.Scale
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Scale
  nameWithType: SqlDecimal.Scale
  fullName: System.Data.SqlTypes.SqlDecimal.Scale
- uid: System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Sign(SqlDecimal)
  nameWithType: SqlDecimal.Sign(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Sign(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Subtract(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Subtract(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Subtract(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlDecimal.ToDouble
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToDouble()
  nameWithType: SqlDecimal.ToDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToDouble()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlDecimal.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlByte
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlDecimal.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlByte()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlDecimal.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlDecimal.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlDecimal.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlDecimal.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlDecimal.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlDecimal.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlString
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlDecimal.ToSqlString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlString()
- uid: System.Data.SqlTypes.SqlDecimal.ToString
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToString()
  nameWithType: SqlDecimal.ToString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToString()
- uid: System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Truncate(SqlDecimal,Int32)
  nameWithType: SqlDecimal.Truncate(SqlDecimal,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Truncate(SqlDecimal,Int32)
- uid: System.Data.SqlTypes.SqlDecimal.Value
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Value
  nameWithType: SqlDecimal.Value
  fullName: System.Data.SqlTypes.SqlDecimal.Value
- uid: System.Data.SqlTypes.SqlDecimal.#ctor*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal.SqlDecimal
- uid: System.Data.SqlTypes.SqlDecimal.Abs*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Abs
  nameWithType: SqlDecimal.Abs
- uid: System.Data.SqlTypes.SqlDecimal.Add*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Add
  nameWithType: SqlDecimal.Add
- uid: System.Data.SqlTypes.SqlDecimal.AdjustScale*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: AdjustScale
  nameWithType: SqlDecimal.AdjustScale
- uid: System.Data.SqlTypes.SqlDecimal.BinData*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: BinData
  nameWithType: SqlDecimal.BinData
- uid: System.Data.SqlTypes.SqlDecimal.Ceiling*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Ceiling
  nameWithType: SqlDecimal.Ceiling
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: CompareTo
  nameWithType: SqlDecimal.CompareTo
- uid: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ConvertToPrecScale
  nameWithType: SqlDecimal.ConvertToPrecScale
- uid: System.Data.SqlTypes.SqlDecimal.Data*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Data
  nameWithType: SqlDecimal.Data
- uid: System.Data.SqlTypes.SqlDecimal.Divide*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Divide
  nameWithType: SqlDecimal.Divide
- uid: System.Data.SqlTypes.SqlDecimal.Equals*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Equals
  nameWithType: SqlDecimal.Equals
- uid: System.Data.SqlTypes.SqlDecimal.Floor*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Floor
  nameWithType: SqlDecimal.Floor
- uid: System.Data.SqlTypes.SqlDecimal.GetHashCode*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GetHashCode
  nameWithType: SqlDecimal.GetHashCode
- uid: System.Data.SqlTypes.SqlDecimal.GetXsdType*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GetXsdType
  nameWithType: SqlDecimal.GetXsdType
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThan*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GreaterThan
  nameWithType: SqlDecimal.GreaterThan
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlDecimal.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlDecimal.IsNull*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: IsNull
  nameWithType: SqlDecimal.IsNull
- uid: System.Data.SqlTypes.SqlDecimal.IsPositive*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: IsPositive
  nameWithType: SqlDecimal.IsPositive
- uid: System.Data.SqlTypes.SqlDecimal.LessThan*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: LessThan
  nameWithType: SqlDecimal.LessThan
- uid: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlDecimal.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlDecimal.Multiply*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Multiply
  nameWithType: SqlDecimal.Multiply
- uid: System.Data.SqlTypes.SqlDecimal.NotEquals*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: NotEquals
  nameWithType: SqlDecimal.NotEquals
- uid: System.Data.SqlTypes.SqlDecimal.op_Addition*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Addition
  nameWithType: SqlDecimal.op_Addition
- uid: System.Data.SqlTypes.SqlDecimal.op_Division*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Division
  nameWithType: SqlDecimal.op_Division
- uid: System.Data.SqlTypes.SqlDecimal.op_Equality*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Equality
  nameWithType: SqlDecimal.op_Equality
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit
  nameWithType: SqlDecimal.op_Explicit
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlDecimal.op_GreaterThan
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlDecimal.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit
  nameWithType: SqlDecimal.op_Implicit
- uid: System.Data.SqlTypes.SqlDecimal.op_Inequality*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Inequality
  nameWithType: SqlDecimal.op_Inequality
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThan*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_LessThan
  nameWithType: SqlDecimal.op_LessThan
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlDecimal.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlDecimal.op_Multiply*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Multiply
  nameWithType: SqlDecimal.op_Multiply
- uid: System.Data.SqlTypes.SqlDecimal.op_Subtraction*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Subtraction
  nameWithType: SqlDecimal.op_Subtraction
- uid: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_UnaryNegation
  nameWithType: SqlDecimal.op_UnaryNegation
- uid: System.Data.SqlTypes.SqlDecimal.Parse*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Parse
  nameWithType: SqlDecimal.Parse
- uid: System.Data.SqlTypes.SqlDecimal.Power*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Power
  nameWithType: SqlDecimal.Power
- uid: System.Data.SqlTypes.SqlDecimal.Precision*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Precision
  nameWithType: SqlDecimal.Precision
- uid: System.Data.SqlTypes.SqlDecimal.Round*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Round
  nameWithType: SqlDecimal.Round
- uid: System.Data.SqlTypes.SqlDecimal.Scale*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Scale
  nameWithType: SqlDecimal.Scale
- uid: System.Data.SqlTypes.SqlDecimal.Sign*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Sign
  nameWithType: SqlDecimal.Sign
- uid: System.Data.SqlTypes.SqlDecimal.Subtract*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Subtract
  nameWithType: SqlDecimal.Subtract
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlDecimal.ToDouble*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToDouble
  nameWithType: SqlDecimal.ToDouble
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlDecimal.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlByte*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlDecimal.ToSqlByte
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlDecimal.ToSqlDouble
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlDecimal.ToSqlInt16
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlDecimal.ToSqlInt32
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlDecimal.ToSqlInt64
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlDecimal.ToSqlMoney
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlDecimal.ToSqlSingle
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlString*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlString
  nameWithType: SqlDecimal.ToSqlString
- uid: System.Data.SqlTypes.SqlDecimal.ToString*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToString
  nameWithType: SqlDecimal.ToString
- uid: System.Data.SqlTypes.SqlDecimal.Truncate*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Truncate
  nameWithType: SqlDecimal.Truncate
- uid: System.Data.SqlTypes.SqlDecimal.Value*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Value
  nameWithType: SqlDecimal.Value
