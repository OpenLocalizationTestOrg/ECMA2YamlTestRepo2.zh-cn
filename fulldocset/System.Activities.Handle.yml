### YamlMime:ManagedReference
items:
- uid: System.Activities.Handle
  id: Handle
  children:
  - System.Activities.Handle.#ctor
  - System.Activities.Handle.ExecutionPropertyName
  - System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.Owner
  - System.Activities.Handle.ThrowIfUninitialized
  langs:
  - csharp
  name: Handle
  nameWithType: Handle
  fullName: System.Activities.Handle
  type: Class
  summary: "表示具有由工作流运行时控制其生存期内的类型。"
  remarks: "从句柄派生的类型都具有由工作流运行时控制其生存期。 对于的句柄类型的工作流变量，运行时使用所需的默认构造函数创建类型的实例，将它分配给<xref:System.Activities.Variable>，并调用<xref:System.Activities.Handle.OnInitialize%2A>时初始化环境。</xref:System.Activities.Handle.OnInitialize%2A> </xref:System.Activities.Variable> 当变量超出范围，<xref:System.Activities.Handle.OnUninitialize%2A>称为。</xref:System.Activities.Handle.OnUninitialize%2A>"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public abstract class Handle
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Handle.#ctor
  id: '#ctor'
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "初始化的新实例<xref href=&quot;System.Activities.Handle&quot;></xref>类。"
  remarks: "派生自的类<xref:System.Activities.Handle>必须提供一个默认构造函数。</xref:System.Activities.Handle>"
  syntax:
    content: protected Handle ();
    parameters: []
  overload: System.Activities.Handle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ExecutionPropertyName
  id: ExecutionPropertyName
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取要使用此名称<xref href=&quot;System.Activities.Handle&quot;></xref>时添加到活动的执行属性。"
  syntax:
    content: public string ExecutionPropertyName { get; }
    return:
      type: System.String
      description: "作为<xref:System.Type.FullName*>.</xref:System.Type.FullName*>时提供的派生类型的名称"
  overload: System.Activities.Handle.ExecutionPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  id: OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "当环境包含由工作流运行时调用<xref href=&quot;System.Activities.Handle&quot;></xref>初始化。"
  syntax:
    content: protected virtual void OnInitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "在其中创建句柄的环境。"
  overload: System.Activities.Handle.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  id: OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "由工作流运行时调用时<xref href=&quot;System.Activities.Variable&quot;></xref>为<xref href=&quot;System.Activities.Handle&quot;></xref>号超出范围。"
  syntax:
    content: protected virtual void OnUninitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "在其中创建句柄的环境。"
  overload: System.Activities.Handle.OnUninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.Owner
  id: Owner
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "获取<xref href=&quot;System.Activities.ActivityInstance&quot;></xref>包含<xref href=&quot;System.Activities.Variable&quot;></xref>包含<xref href=&quot;System.Activities.Handle&quot;> </xref>。"
  syntax:
    content: public System.Activities.ActivityInstance Owner { get; }
    return:
      type: System.Activities.ActivityInstance
      description: "包含的活动实例<xref href=&quot;System.Activities.Variable&quot;></xref>包含<xref href=&quot;System.Activities.Handle&quot;> </xref>。"
  overload: System.Activities.Handle.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ThrowIfUninitialized
  id: ThrowIfUninitialized
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "引发<xref:System.InvalidOperationException>如果<xref href=&quot;System.Activities.Handle&quot;></xref>尚未初始化。</xref:System.InvalidOperationException>"
  remarks: "ThrowIfUninitialized 为自定义句柄派生类作者提供了要调用从任何方法或属性的派生类不是有效的方便方法如果<xref:System.Activities.Handle>未初始化。</xref:System.Activities.Handle>"
  syntax:
    content: protected void ThrowIfUninitialized ();
    parameters: []
  overload: System.Activities.Handle.ThrowIfUninitialized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Handle.#ctor
  parent: System.Activities.Handle
  isExternal: false
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
- uid: System.Activities.Handle.ExecutionPropertyName
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
- uid: System.Activities.HandleInitializationContext
  parent: System.Activities
  isExternal: false
  name: HandleInitializationContext
  nameWithType: HandleInitializationContext
  fullName: System.Activities.HandleInitializationContext
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
- uid: System.Activities.Handle.Owner
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
- uid: System.Activities.ActivityInstance
  parent: System.Activities
  isExternal: false
  name: ActivityInstance
  nameWithType: ActivityInstance
  fullName: System.Activities.ActivityInstance
- uid: System.Activities.Handle.ThrowIfUninitialized
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
- uid: System.Activities.Handle.#ctor*
  parent: System.Activities.Handle
  isExternal: false
  name: Handle
  nameWithType: Handle.Handle
- uid: System.Activities.Handle.ExecutionPropertyName*
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
- uid: System.Activities.Handle.OnInitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize
  nameWithType: Handle.OnInitialize
- uid: System.Activities.Handle.OnUninitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize
  nameWithType: Handle.OnUninitialize
- uid: System.Activities.Handle.Owner*
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
- uid: System.Activities.Handle.ThrowIfUninitialized*
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized
  nameWithType: Handle.ThrowIfUninitialized
