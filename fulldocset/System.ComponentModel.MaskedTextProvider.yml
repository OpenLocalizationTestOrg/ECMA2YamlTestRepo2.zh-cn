### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MaskedTextProvider
  id: MaskedTextProvider
  children:
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char)
  - System.ComponentModel.MaskedTextProvider.Add(System.String)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  - System.ComponentModel.MaskedTextProvider.AsciiOnly
  - System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  - System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  - System.ComponentModel.MaskedTextProvider.Clear
  - System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Clone
  - System.ComponentModel.MaskedTextProvider.Culture
  - System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  - System.ComponentModel.MaskedTextProvider.EditPositionCount
  - System.ComponentModel.MaskedTextProvider.EditPositions
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  - System.ComponentModel.MaskedTextProvider.IncludeLiterals
  - System.ComponentModel.MaskedTextProvider.IncludePrompt
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InvalidIndex
  - System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsPassword
  - System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  - System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  - System.ComponentModel.MaskedTextProvider.Length
  - System.ComponentModel.MaskedTextProvider.Mask
  - System.ComponentModel.MaskedTextProvider.MaskCompleted
  - System.ComponentModel.MaskedTextProvider.MaskFull
  - System.ComponentModel.MaskedTextProvider.PasswordChar
  - System.ComponentModel.MaskedTextProvider.PromptChar
  - System.ComponentModel.MaskedTextProvider.Remove
  - System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  - System.ComponentModel.MaskedTextProvider.ResetOnSpace
  - System.ComponentModel.MaskedTextProvider.Set(System.String)
  - System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.SkipLiterals
  - System.ComponentModel.MaskedTextProvider.ToDisplayString
  - System.ComponentModel.MaskedTextProvider.ToString
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  langs:
  - csharp
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider
  fullName: System.ComponentModel.MaskedTextProvider
  type: Class
  summary: "表示可由任意数量的屏蔽，如支持的控件的掩码分析服务<xref href=&quot;System.Windows.Forms.MaskedTextBox&quot;></xref>控件。"
  remarks: "<xref:System.Windows.Forms.MaskedTextBox>控件包含掩码，组成原义字符和格式设置，它测试针对的所有用户输入元素。</xref:System.Windows.Forms.MaskedTextBox> 而不是永久关联与特定掩码分析引擎<xref:System.Windows.Forms.MaskedTextBox>，Windows 窗体提供它作为单独的服务，由 MaskedTextProvider 类，该类定义的文档中讨论的屏蔽语言的语法<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>属性。</xref:System.Windows.Forms.MaskedTextBox.Mask%2A> </xref:System.Windows.Forms.MaskedTextBox>       成员的许多<xref:System.Windows.Forms.MaskedTextBox>类，请参阅它们的关联 MaskedTextProvider 同样命名成员的实现。</xref:System.Windows.Forms.MaskedTextBox> 例如，该<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>属性的<xref:System.Windows.Forms.MaskedTextBox>类引用对<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>的 MaskedTextProvider 类</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>的所有访问</xref:System.Windows.Forms.MaskedTextBox></xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>       后 Masked Edit 控件包含在 Microsoft Visual Basic 版本 6 建模 MaskedTextProvider 由使用的掩码分析引擎。 中的文档介绍了其屏蔽语言<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>       与 MaskedTextProvider 类涉及以下三个不同的字符串。      |字符串名称 |说明 |  |-----------------|-----------------|  |输入的字符或字符串 |表示用作该蒙板应用针对的输入的字符。 在现实中，输入的字符串可能组合的多个输入的操作，包括<xref:System.ComponentModel.MaskedTextProvider.Add%2A>， <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>， <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>，和<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>。</xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> 因此，不能直接访问输入的字符串。 输入的字符串处理方面但是，但是也可用<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>和<xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>， <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>，和<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>属性。 |  |掩码 |表示的输入格式掩码，用于将输入的字符串转换为带格式的字符串。</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> </xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> </xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 在中设置此字符串<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>和但主要访问<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 掩码的特征，还提供其他成员，例如<xref:System.ComponentModel.MaskedTextProvider.Length%2A>，通过<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>，和<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>属性。 |  |格式字符串 |表示生成完整的掩码应用于输入字符串时的字符串。</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式的字符串可以查询具有很多成员的类，包括<xref:System.ComponentModel.MaskedTextProvider.Item%2A>， <xref:System.ComponentModel.MaskedTextProvider.Length%2A>， <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>， <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>， <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>， <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>，依次类推。</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> </xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A> </xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A> </xref:System.ComponentModel.MaskedTextProvider.Item%2A> 格式化字符串的全部价值是可从<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>和<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法。 |    &1;> [!NOTE]&1;> 输入的字符串可能表示直接用户输入，如下所示的大小写<xref:System.Windows.Forms.MaskedTextBox>，也可能由其他进程不直接与用户输入/输出操作来生成。</xref:System.Windows.Forms.MaskedTextBox> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>"
  syntax:
    content: 'public class MaskedTextProvider : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>类使用指定的掩码。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask);
    parameters:
    - id: mask
      type: System.String
      description: "A <xref:System.String>，表示输入的掩码。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>类使用的指定的掩码和 ASCII 限制值。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', restrictToASCII)`"
  syntax:
    content: public MaskedTextProvider (string mask, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A <xref:System.String>，表示输入的掩码。</xref:System.String>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将输入限制为 ASCII 兼容字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以允许整个 Unicode 字符集。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  id: '#ctor(System.String,System.Globalization.CultureInfo)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>类使用的指定的掩码和区域性。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);
    parameters:
    - id: mask
      type: System.String
      description: "A <xref:System.String>，表示输入的掩码。</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>用于设置区域区分分隔符字符。</xref:System.Globalization.CultureInfo>"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>类使用的密码字符指定的掩码，用法提示值。"
  remarks: "使用此构造函数在完全等同于对的以下调用<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>构造函数︰ `MaskedTextProvider(mask , null, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "A <xref:System.String>，表示输入的掩码。</xref:System.String>"
    - id: passwordChar
      type: System.Char
      description: "A <xref:System.Char>，将显示输入的密码字符串的字符。</xref:System.Char>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要作为输入; 允许提示字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>类使用指定的掩码、 区域性和 ASCII 限制值。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', restrictToAscii)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A <xref:System.String>，表示输入的掩码。</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>用于设置区域区分分隔符字符。</xref:System.Globalization.CultureInfo>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将输入限制为 ASCII 兼容字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以允许整个 Unicode 字符集。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>类使用指定的掩码、 区域性、 密码字符和用法提示值。"
  remarks: "使用此构造函数在完全等同于对的以下调用<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>构造函数︰ `MaskedTextProvider(mask , culture, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "A <xref:System.String>，表示输入的掩码。</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>用于设置区域区分分隔符字符。</xref:System.Globalization.CultureInfo>"
    - id: passwordChar
      type: System.Char
      description: "A <xref:System.Char>，将显示输入的密码字符串的字符。</xref:System.Char>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要作为输入; 允许提示字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>类使用指定的掩码、 区域性、 用法提示值、 提示字符、 密码字符和 ASCII 限制值。"
  remarks: "此构造函数表示最常见的重载的形式。 `mask`参数必须符合的屏蔽语言定义的<xref:System.ComponentModel.MaskedTextProvider>类，其中详细介绍了<xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName>属性的<xref:System.Windows.Forms.MaskedTextBox>类。</xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName> </xref:System.ComponentModel.MaskedTextProvider>       因为非特定区域性无法查询有关特定于区域性的信息，<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>构造函数将使用<xref:System.Globalization.CultureInfo.GetCultures%2A>方法搜索要使用来确定适当的分隔符字符的第一个非特定于区域性。</xref:System.Globalization.CultureInfo.GetCultures%2A> </xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A <xref:System.String>，表示输入的掩码。</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>用于设置区域区分分隔符字符。</xref:System.Globalization.CultureInfo>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "A<xref:System.Boolean>值，该值指定提示字符是否应允许作为有效的输入字符。</xref:System.Boolean>"
    - id: promptChar
      type: System.Char
      description: "A <xref:System.Char>，将显示为用户输入的占位符。</xref:System.Char>"
    - id: passwordChar
      type: System.Char
      description: "A <xref:System.Char>，将显示输入的密码字符串的字符。</xref:System.Char>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要将输入限制为 ASCII 兼容字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以允许整个 Unicode 字符集。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "掩码参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或<xref:System.String.Empty>。</xref:System.String.Empty>       -或者-掩码包含一个或多个非打印字符。"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  id: Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "格式化字符串的末尾添加指定的输入的字符。"
  remarks: "Add 方法将添加`input`字符在格式化字符串的第一个可用位置的值最后一个被赋值，表示在位置后<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 此方法将任何由于以下原因失败:-输入的值， `input`，不是可打印，或与掩码的对应元素不匹配。      -有零个可用的编辑位置在格式化字符串，或者没有任何可用的编辑位置后最后分配位置。"
  syntax:
    content: public bool Add (char input);
    parameters:
    - id: input
      type: System.Char
      description: "A<xref:System.Char>要追加到格式化的字符串值。</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，则添加到输入的字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  id: Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定的输入字符串中字符都添加到末尾的格式化字符串中。"
  remarks: "Add 方法将添加从字符`input`到格式化的字符串，并从<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>的第一个可用位置开始的字符串 此方法将任何由于以下原因失败:-任何在输入的值中，字符`input`，是不可打印或输入的值与掩码的对应元素不匹配。      -没有足够可用的编辑位置带格式的字符串中最后一个分配位置后。       如果此方法失败，会进行任何添加并且该方法返回`false`。"
  syntax:
    content: public bool Add (string input);
    parameters:
    - id: input
      type: System.String
      description: "A<xref:System.String>包含要追加到格式化的字符串的字符值。</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，则已添加的输入字符串中的所有字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以指示是否已添加任何字符。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "带格式的字符串的末尾添加指定的输入的字符，然后输出位置和描述性信息。"
  remarks: "Add 方法尝试将添加`input`字符在格式化字符串的第一个可用位置的值最后一个被赋值，表示在位置后<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 如果所有可用位置的最后一个分配位置之前，此方法将失败。 此方法将任何由于以下原因失败:-输入的值， `input`，不是可打印，或与掩码的对应元素不匹配。      -有零个可用的编辑位置在格式化字符串，或者没有任何可用的编辑位置后最后分配位置。       此方法函数重写采用一个版本相同<xref:System.Char>参数， <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>，只不过它将输出的其他信息。</xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> </xref:System.Char>"
  syntax:
    content: public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "A<xref:System.Char>要追加到格式化的字符串值。</xref:System.Char>"
    - id: testPosition
      type: System.Int32
      description: "格式化字符串中其中尝试添加字符的位置从零开始。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，则添加到输入的字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将字符中指定的输入字符串添加到格式的字符串的末尾，然后输出位置和描述性信息。"
  remarks: "Add 方法将添加从字符`input`到格式化的字符串，并从<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>的第一个可用位置开始的字符串 此方法将任何由于以下原因失败:-任何在输入的值中，字符`input`，是不可打印或输入的值与掩码的对应元素不匹配。      -没有足够可用的编辑位置带格式的字符串中最后一个分配位置后。       如果此方法失败，会进行任何添加并且该方法返回`false`。       此方法函数重写采用一个版本相同<xref:System.String>参数， <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>，只不过它将输出的其他信息。</xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> </xref:System.String>"
  syntax:
    content: public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "A<xref:System.String>包含要追加到格式化的字符串的字符值。</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "格式化字符串中其中尝试添加字符的位置从零开始。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，则已添加的输入字符串中的所有字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以指示是否已添加任何字符。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  id: AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值表示是否提示字符或不应视为有效的输入字符。"
  remarks: "设置 AllowPromptAsInput 属性的值<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>构造函数。</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>       甚至 AllowPromptAsInput 时`true`，才能被接受的提示字符必须是有效的掩码中的当前位置。"
  syntax:
    content: public bool AllowPromptAsInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用户可以输入<xref:System.ComponentModel.MaskedTextProvider.PromptChar*>到控件; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ComponentModel.MaskedTextProvider.PromptChar*> 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  id: AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示掩码是否接受外部 ASCII 字符集的字符。"
  remarks: "设置 AsciiOnly 属性的值<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>构造函数。</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>       如果`true`，AsciiOnly 限制于 ASCII 字符集的用户输入。"
  syntax:
    content: public bool AsciiOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果仅接受 ASCII;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>可以接受任何任意的 Unicode 字符。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  id: AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取已成功分配的输入的值的可编辑的字符位置数。"
  remarks: "可编辑的字符位置，由表示总数<xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>属性，应等于 AssignedEditPositionCount 总数和<xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>"
  syntax:
    content: public int AssignedEditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含的输入掩码中已分配的格式化字符串中的字符值的可编辑的字符位置数。</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  id: AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取输入掩码中尚未分配的输入的值的可编辑的字符位置的数。"
  remarks: "可编辑的字符位置，由表示总数<xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>属性，应等于的总和<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>和 AvailableEditPositionCount 属性。</xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>"
  syntax:
    content: public int AvailableEditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含可编辑的字符数置于，尚未被分配了字符值。</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear
  id: Clear
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "清除所有可编辑格式字符串，将替换为提示字符输入的字符。"
  remarks: "Clear 方法重新初始化格式的字符串，将插入所有可编辑的位置的提示字符。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  id: Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "清除从格式字符串，将替换为提示字符的所有可编辑输入的字符，然后将输出描述性信息。"
  remarks: "Clear 方法重新初始化格式的字符串，将插入所有可编辑的位置的提示字符。 它实现此目的函数没有采用任何参数的重写版本<xref:System.ComponentModel.MaskedTextProvider.Clear>，只是它输出其他信息。</xref:System.ComponentModel.MaskedTextProvider.Clear>"
  syntax:
    content: public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述操作的结果。 一个输出参数。"
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clone
  id: Clone
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "创建一份当前<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>。"
  remarks: "Clone 方法返回当前<xref:System.ComponentModel.MaskedTextProvider>.</xref:System.ComponentModel.MaskedTextProvider>的新副本"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>此方法创建的对象强制转换为对象。"
  overload: System.ComponentModel.MaskedTextProvider.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Culture
  id: Culture
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取确定可本地化的分隔符和输入掩码中的占位符的值的区域性。"
  remarks: "在中设置的区域性属性<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>构造函数。</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>包含与输入掩码关联的区域性信息。</xref:System.Globalization.CultureInfo>"
  overload: System.ComponentModel.MaskedTextProvider.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  id: DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取默认密码使用字符晦涩用户输入。"
  remarks: "中定义 DefaultPasswordChar 属性<xref:System.ComponentModel.MaskedTextProvider>星号 （*） 的类。</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public static char DefaultPasswordChar { get; }
    return:
      type: System.Char
      description: "A<xref:System.Char>表示默认的密码字符。</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  id: EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取格式化字符串中的可编辑位置的数。"
  remarks: "可编辑的字符位置，由 EditPositionCount 属性表示的总数必须等于的总和<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>和<xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> 此值包括必需和可选的可编辑字符。"
  syntax:
    content: public int EditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含的格式化字符串中的可编辑位置数。</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  id: EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字符串中可编辑的位置获取新创建的枚举器。"
  remarks: "每次访问 EditPositions 属性，临时的可编辑的位置创建集合，用于检索<xref:System.Collections.IEnumerator>进行操作。</xref:System.Collections.IEnumerator>       此集合是只读的。"
  syntax:
    content: public System.Collections.IEnumerator EditPositions { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>，支持通过在格式化字符串中可编辑的位置的枚举。</xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.MaskedTextProvider.EditPositions*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回使用指定的搜索方向的指定位置之后分配可编辑的位置的第一个位置。"
  remarks: "带格式的字符串组成的可编辑字符和文本复制从掩码。 复制从掩码如果它们未分配，或有效的输入字符，如果他们已被分配一个输入的提示字符或者将占用可编辑的字符位置。       FindAssignedEditPositionFrom 方法用于分配的第一个字符在搜索后指定的位置和搜索方向。 结果随后可作为参数传递<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引器以获取在此位置上所赋的值。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>和<xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A>方法都是此方法的补充。</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindAssignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "要开始搜索的格式化字符串中的从零开始位置。"
    - id: direction
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示搜索方向; 两个<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜索或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>向后搜索。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示的从零开始的第一个位置分配可编辑位置遇到; 否则为<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回第一个分配可编辑位置之间使用指定的搜索方向的指定位置的位置。"
  remarks: "带格式的字符串组成的可编辑字符和文本复制从掩码。 复制从掩码如果它们未分配，或有效的输入字符，如果他们已被分配一个输入的提示字符或者将占用可编辑的字符位置。       FindAssignedEditPositionInRange 方法用于搜索之间 （含），通过使用指定的搜索方向的两个指定位置的第一个分配字符。 结果随后可作为参数传递<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引器以获取在此位置上所赋的值。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>和<xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A>方法都是此方法的补充。</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中开始搜索的位置从零开始。"
    - id: endPosition
      type: System.Int32
      description: "格式化字符串中搜索的结尾处的位置从零开始。"
    - id: direction
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示搜索方向; 两个<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜索或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>向后搜索。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示的从零开始的第一个位置分配可编辑位置遇到; 否则为<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  id: FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回使用指定的搜索方向的指定位置之后的第一个可编辑位置的位置。"
  remarks: "FindEditPositionFrom 方法用于搜索在格式化字符串的下一步分配或未分配可编辑位置后的指定位置。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>方法是此方法的求补。</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "要开始搜索的格式化字符串中的从零开始位置。"
    - id: direction
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示搜索方向; 两个<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜索或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>向后搜索。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示遇到; 的第一个可编辑位置的从零开始位置否则为<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定的位置通过使用指定的搜索方向之间返回的第一个可编辑位置的位置。"
  remarks: "FindEditPositionInRange 方法用于搜索之间 （含），通过使用指定的搜索方向的两个指定位置的第一个可编辑字符。 结果随后可作为参数传递<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引器以获取在此位置上所赋的值。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>方法是此方法的求补。</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中开始搜索的位置从零开始。"
    - id: endPosition
      type: System.Int32
      description: "格式化字符串中搜索的结尾处的位置从零开始。"
    - id: direction
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示搜索方向; 两个<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜索或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>向后搜索。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示遇到; 的第一个可编辑位置的从零开始位置否则为<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  id: FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回使用指定的搜索方向的指定位置之后的第一个非可编辑位置的位置。"
  remarks: "FindNonEditPositionFrom 方法用于搜索指定的位置后格式化字符串中的下一步原义字符。 结果随后可作为参数传递<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引器以获取在此位置上的文本值。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>方法是此方法的求补。</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>"
  syntax:
    content: public int FindNonEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "要开始搜索的格式化字符串中的从零开始位置。"
    - id: direction
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示搜索方向; 两个<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜索或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>向后搜索。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示遇到; 的第一个文本位置的从零开始位置否则为<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定的位置通过使用指定的搜索方向之间返回的第一个非可编辑位置的位置。"
  remarks: "FindNonEditPositionInRange 方法用于搜索之间 （含），通过使用指定的搜索方向的两个指定位置的第一个文本字符。 结果随后可作为参数传递<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引器以获取在此位置上的文本值。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>方法是此方法的求补。</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>"
  syntax:
    content: public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中开始搜索的位置从零开始。"
    - id: endPosition
      type: System.Int32
      description: "格式化字符串中搜索的结尾处的位置从零开始。"
    - id: direction
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示搜索方向; 两个<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜索或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>向后搜索。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示遇到; 的第一个文本位置的从零开始位置否则为<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回使用指定的搜索方向的指定位置之后的第一个未分配的可编辑位置的位置。"
  remarks: "带格式的字符串组成的可编辑字符和文本复制从掩码。 复制从掩码如果它们未分配，或有效的输入字符，如果他们已被分配一个输入的提示字符或者将占用可编辑的字符位置。       FindUnassignedEditPositionFrom 方法用于搜索第一个未分配字符之后指定的位置和搜索方向。 提示字符应占用此位置。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>和<xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A>方法都是此方法的补充。</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindUnassignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "要开始搜索的格式化字符串中的从零开始位置。"
    - id: direction
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示搜索方向; 两个<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜索或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>向后搜索。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示遇到; 的第一个未分配的可编辑位置的从零开始位置否则为<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回指定的位置通过使用指定的搜索方向之间未分配的第一个可编辑位置的位置。"
  remarks: "带格式的字符串组成的可编辑字符和文本复制从掩码。 复制从掩码如果它们未分配，或有效的输入字符，如果他们已被分配一个输入的提示字符或者将占用可编辑的字符位置。       FindUnassignedEditPositionInRange 方法用于搜索之间 （含），通过使用指定的搜索方向的两个指定位置的第一个未分配字符。 提示字符应占用此位置。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>和<xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A>方法都是此方法的补充。</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中开始搜索的位置从零开始。"
    - id: endPosition
      type: System.Int32
      description: "格式化字符串中搜索的结尾处的位置从零开始。"
    - id: direction
      type: System.Boolean
      description: "A <xref:System.Boolean>，该值指示搜索方向; 两个<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜索或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>向后搜索。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示遇到; 的第一个未分配的可编辑位置的从零开始位置否则为<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  id: GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定是否指定<xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;></xref>表示成功或失败。"
  remarks: '以下的方法<xref:System.ComponentModel.MaskedTextProvider>类包含类型的参数<xref:System.ComponentModel.MaskedTextResultHint>用于输出有关操作的方法的信息︰ <xref:System.ComponentModel.MaskedTextProvider.Add%2A>， <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>， <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>， <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>， <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>， <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>， <xref:System.ComponentModel.MaskedTextProvider.Set%2A>， <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>，和<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>。</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Clear%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> </xref:System.ComponentModel.MaskedTextResultHint> </xref:System.ComponentModel.MaskedTextProvider> GetOperationResultFromHint 方法会将解释此值并返回一个布尔值，该值指示是否<xref:System.ComponentModel.MaskedTextResultHint>已发出信号进行的操作是成功还是失败。</xref:System.ComponentModel.MaskedTextResultHint>'
  syntax:
    content: public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>通常作为输出参数从上一个操作获取值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;></xref>值表示成功; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果它表示失败。"
  overload: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  id: IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置一个值，该值指示是否应在格式化字符串中包含输入掩码中的原义字符。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>IncludeLiterals 属性将确定调用时是否出现提示和原义字符和<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 通过设置这两种属性到`false`，分析的字符串将表示用户输入的字符。"
  syntax:
    content: public bool IncludeLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果文本包括;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  id: IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置一个值，该值指示是否<xref:System.Windows.Forms.MaskedTextBox.PromptChar*>用于表示用户输入显示带格式的字符串时不存在。</xref:System.Windows.Forms.MaskedTextBox.PromptChar*>"
  remarks: "IncludePrompt 和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性将确定提示和原义字符出现在调用时<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 通过设置这两种属性到`false`，分析的字符串将表示用户输入的字符。"
  syntax:
    content: public bool IncludePrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提示字符用于表示其中不需要用户输入; 如果提供了的位置否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  id: InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字符串中指定的位置插入指定的字符。"
  remarks: "InsertAt 方法将一个字符插入到达到或超过指定的第一个编辑位置`pos`参数。 此方法将移动现有的所有字符，将插入点移动一个位置，以便腾出空间供插入之后`input`字符。 如果发生以下错误之一，则不执行插入操作，并且该方法返回`false`。      -`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      的达到或超过指定的位置的格式化字符串中找不到可编辑的字符`pos`。      -插入字符， `input`，不是有效的输入的字符，因为它不是可打印或与掩码的对应元素不匹配。      -是插入点，右侧没有可用的位置，因此不能移动现有的字符。      -移动现有的字符会产生与掩码的冲突。       一个空`input`字符串将导致没有更改中的格式化字符串，但会返回`true`。"
  syntax:
    content: public bool InsertAt (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>要插入。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "中要插入字符的格式化字符串的从零开始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  id: InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字符串内的指定位置插入指定的字符串。"
  remarks: "InsertAt 方法将从每个字符插入`input`字符串插入编辑位置位于位置`pos`甚至更高。 插入点移动一个位置，每个插入字符后，此方法将移动现有的所有字符。 如果发生以下错误之一，不会执行插入，并且该方法返回`false`。      -`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      的格式化字符串达到或超过指定的位置中存在没有足够的可编辑字符`pos`，无法插入所有的字符`input`字符串。      一个或多个插入字符不是有效的输入的字符因为它们是不可打印的或与其相应的掩码元素不匹配。      -没有足够的可用位置右侧的插入点，以便能移动现有的字符。      -移动现有的字符会产生与掩码的冲突。 请注意，都会发生此移动的每个单个字符插入期间。       一个空`input`字符串将导致没有更改中的格式化字符串，但会返回`true`。"
  syntax:
    content: public bool InsertAt (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>要插入。</xref:System.String>"
    - id: position
      type: System.Int32
      description: "中要插入的输入的字符串的格式化字符串的从零开始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字符串中，返回的最后一个的插入位置和该操作的状态的指定位置插入指定的字符。"
  remarks: "InsertAt 方法将一个字符插入到达到或超过指定的第一个编辑位置`pos`参数。 此方法将移动现有的所有字符，将插入点移动一个位置，以便腾出空间供插入之后`input`字符。 如果发生以下错误之一，则不执行插入操作，并且该方法返回`false`。      -`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      的达到或超过指定的位置的格式化字符串中找不到可编辑的字符`pos`。      -插入字符， `input`，不是有效的输入的字符，因为它不是可打印或与掩码的对应元素不匹配。      -是插入点，右侧没有可用的位置，因此不能移动现有的字符。      -移动现有的字符会产生与掩码的冲突。       一个空`input`字符串将导致没有更改中的格式化字符串，但会返回`true`。"
  syntax:
    content: public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>要插入。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "中要插入字符的格式化字符串的从零开始的位置。"
    - id: testPosition
      type: System.Int32
      description: "如果方法成功，最后一个位置其中插入一个字符;否则，第一个位置插入的失败位置。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述插入操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字符串中，返回的最后一个的插入位置和该操作的状态的指定位置插入指定的字符串。"
  remarks: "InsertAt 方法将从每个字符插入`input`字符串插入编辑位置位于位置`pos`甚至更高。 插入点移动一个位置，每个插入字符后，此方法将移动现有的所有字符。 如果发生以下错误之一，不会执行插入，并且该方法返回`false`。      -`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      的格式化字符串达到或超过指定的位置中存在没有足够的可编辑字符`pos`，无法插入所有的字符`input`字符串。      一个或多个插入字符不是有效的输入的字符因为它们是不可打印的或与其相应的掩码元素不匹配。      -没有足够的可用位置右侧的插入点，以便能移动现有的字符。      -移动现有的字符会产生与掩码的冲突。 请注意，都会发生此移动的每个单个字符插入期间。       一个空`input`字符串将导致没有更改中的格式化字符串，但会返回`true`。"
  syntax:
    content: public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>要插入。</xref:System.String>"
    - id: position
      type: System.Int32
      description: "中要插入的输入的字符串的格式化字符串的从零开始的位置。"
    - id: testPosition
      type: System.Int32
      description: "如果方法成功，最后一个位置其中插入一个字符;否则，第一个位置插入的失败位置。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述插入操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  id: InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取的无效索引范围的上限。"
  remarks: "InvalidIndex 属性用于表示无效的索引操作，如结果<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>方法。</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>       当你使用的提供程序，或实现你自己时，应使用此属性以确定索引是否无效，而不是硬编码得知无效值。"
  syntax:
    content: public static int InvalidIndex { get; }
    return:
      type: System.Int32
      description: "表示由提供程序实现的最大无效的索引的值。 例如，如果最小的有效索引为 0，则此属性将返回-1。"
  overload: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  id: IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定指定的位置是否可用于分配。"
  remarks: "IsAvailablePosition 方法返回`true`仅当所有以下条件都为真:-`pos`参数格式的字符串的边界内; 即，其值是否大于或等于零且小于比<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -指定的位置是可编辑的字符。      -A 字符尚未分配到此位置。"
  syntax:
    content: public bool IsAvailablePosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "若要测试的掩码中的从零开始位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果格式字符串中的指定的位置对其进行编辑，并且尚未分配到尚未;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  id: IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定指定的位置是否可编辑。"
  remarks: "IsEditPosition 方法返回`true`仅当两个以下条件均成立:-`pos`参数格式的字符串的边界内; 即，其值是否大于或等于零且小于比<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -指定的位置是可编辑的字符。"
  syntax:
    content: public bool IsEditPosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "若要测试的掩码中的从零开始位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果格式字符串中的指定的位置是可编辑;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  id: IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置一个值，确定是否应将密码保护应用于格式化的字符串。"
  remarks: "可以使用以下方法之一通过两种方式启动密码保护:-设置<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性为非`null`值。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      -将 IsPassword 属性设置为`true`。，这还会设置<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性<xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A>值。</xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>       <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>和<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法来确定是否显示实际的输入的字符，或会将其与<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>覆盖</xref:System.ComponentModel.MaskedTextProvider.ToString%2A></xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>使用 IsPassword"
  syntax:
    content: public bool IsPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果输入的字符串被视为密码字符串;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsPassword*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  id: IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定指定的字符是否为有效的输入的字符。"
  remarks: "有效的输入的字符包括所有可打印字符，其中包括字母、 数字、 标点、 符号和空格字符。"
  syntax:
    content: public static bool IsValidInputChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>测试值。</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字符包含有效的输入的值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  id: IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定指定的字符是否为有效的掩码字符。"
  remarks: "有效的掩码字符包括所有可打印字符，其中包括字母、 数字、 标点、 符号和空格字符。"
  syntax:
    content: public static bool IsValidMaskChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>测试值。</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字符包含有效的掩码的值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  id: IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "确定指定的字符是否为有效的密码字符。"
  remarks: "有效的密码字符包括所有可打印字符和 null 字符，用于禁用密码功能。 可打印字符包括字母、 数字、 标点、 符号和空格字符。"
  syntax:
    content: public static bool IsValidPasswordChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>测试值。</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字符包含一个有效的密码值; 如果否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字符串中的指定位置获取的元素。"
  remarks: "Item 属性是<xref:System.ComponentModel.MaskedTextProvider>类</xref:System.ComponentModel.MaskedTextProvider>的标准索引器"
  syntax:
    content: public char this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "要检索的元素的从零开始索引。"
    return:
      type: System.Char
      description: "<xref:System.Char>带格式的字符串中指定的位置。</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>小于零或大于或等于<xref:System.ComponentModel.MaskedTextProvider.Length*>的掩码。"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  id: LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "最右边的输入字符的已分配给掩码掩码中获取的索引。"
  remarks: "LastAssignedPosition 属性表示最远的编辑将居的掩码，相对于源，已分配的输入的字符。 对于语言英语，如读取从左到右 (LTR)，这是最右边分配位置;对于读取右到左 (RTL) 的语言，这将是最左边的位置。"
  syntax:
    content: public int LastAssignedPosition { get; }
    return:
      type: System.Int32
      description: "如果至少一个输入字符已被分配到<xref:System.Int32>包含该索引的最右边的分配位置; 否则，如果任何位置均不具有已分配， <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*></xref:System.Int32>的掩码"
  overload: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Length
  id: Length
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取的掩码，不包括任何掩码长度修饰符字符。"
  remarks: "Length 属性表示掩码，包括文本，并可编辑字符中的字符的总数。 可以通过减去的值确定的文本的字符数<xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>的长度。</xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>       长度还介绍了格式的字符串，包括将输入的字符、 文本和提示字符的长度。"
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含的掩码，不包括修改掩码输入的字符中的位置数。</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.Length*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Mask
  id: Mask
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取输入的掩码。"
  remarks: "在中设置掩码属性<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>构造函数。</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 按照屏蔽语言定义，此掩码必须包含无效字符。"
  syntax:
    content: public string Mask { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含完整的掩码。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.Mask*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  id: MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示是否所有必需的输入都已输入到格式化的字符串。"
  remarks: "MaskCompleted 属性检查仅必需的输入的元素。 若要确定是否已输入所有必需和可选的输入的元素，使用<xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>属性<xref:System.Windows.Forms.MaskedTextBox>类。</xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>       当前值<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>属性确定哪些格式设置的元素将被视为所需和可选。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>"
  syntax:
    content: public bool MaskCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所有所需的输入已输入到掩码;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  id: MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取一个值，该值指示是否所有的必需和可选输入都已输入到格式化的字符串。"
  remarks: "若要验证是否仅输入的元素具有输入必需的使用<xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>属性改为。</xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> 当前值<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>属性确定哪些格式设置的元素将被视为所需和可选。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>"
  syntax:
    content: public bool MaskFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所有必选和可选输入都已输入;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.MaskFull*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  id: PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置要替换为实际的输入字符的字符。"
  remarks: "对于敏感的用户输入，它是常见的做法隐藏在输出操作期间由用户输入的实际信息。 如果 PasswordChar 属性设置为非`null`字符，如输出方法<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>和<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>将会掩盖与指定的密码字符的输入的字符。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 此属性设置为`null`将禁用密码保护功能。"
  syntax:
    content: public char PasswordChar { get; set; }
    return:
      type: System.Char
      description: "<xref:System.Char>用作密码字符的值。</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.PasswordChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "设置此属性时指定的密码字符等同于当前的提示字符<xref:System.ComponentModel.MaskedTextProvider.PromptChar*>.</xref:System.ComponentModel.MaskedTextProvider.PromptChar*> 两个必需不同。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "当设置此属性不是有效的密码字符，根据所指定的字符<xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>方法。</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  id: PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置用于表示缺少的所有可用的编辑位置的用户输入的字符。"
  remarks: "PromptChar 属性表示由提示字符<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>和<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法来表示格式化的输入字符串的当前状态。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 提示字符被置于可编辑尚未分配的输入的值的位置。 某些版本的<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法还依赖于的值<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A>"
  syntax:
    content: public char PromptChar { get; set; }
    return:
      type: System.Char
      description: "用于提示用户输入的字符。 默认值为下划线 (_)。"
  overload: System.ComponentModel.MaskedTextProvider.PromptChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "设置此属性时与当前的密码字符， <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>相同提示字符指定 两个必需不同。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "当设置此属性不是有效的密码字符，根据所指定的字符<xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>方法。</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove
  id: Remove
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "从带格式的字符串中删除最后一个分配的字符。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>方法不起如果没有尚未分配要屏蔽的字符。</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>       当从格式化字符串中删除最后一个分配的字符，则可编辑掩码字符为重置该位置，从而允许后续输入。"
  syntax:
    content: public bool Remove ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字符已成功删除;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "从带格式的字符串中删除最后一个分配的字符，然后输出移除位置和描述性信息。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>方法不起如果没有尚未分配要屏蔽的字符。</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>       当从格式化字符串中删除最后一个分配的字符，则可编辑掩码字符为重置该位置，从而允许后续输入。"
  syntax:
    content: public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: testPosition
      type: System.Int32
      description: "格式化字符串中实际删除字符的情况的位置从零开始。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字符已成功删除;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "从带格式的字符串中删除位于指定位置分配的字符。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>方法不起如果指定的删除位置没有分配的字符。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 原义字符不受此方法。       在删除一个字符后，将向左填充在删除过程产生的间隙移动掩码中的剩余高位字符。 输入将重置空出的位置。 如果移动字符阻止的掩码定义，不会发生移除，和<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>返回`false`。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       此方法调用是完全等效于对重载的以下调用<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>版本︰ `RemoveAt(pos, pos);` </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>"
  syntax:
    content: public bool RemoveAt (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "要删除的分配字符的从零开始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字符已成功删除;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  id: RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除指定位置从带格式的字符串之间赋值的字符。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>方法不起如果在指定的移除位置没有分配的字符。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       在删除一个字符后，将向左填充在删除过程产生的间隙移动掩码中的剩余高位字符。 输入将重置空出的位置。 如果移动字符阻止的掩码定义，不会发生移除，和<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>返回`false`。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "要移除的第一个分配字符的从零开始的索引。"
    - id: endPosition
      type: System.Int32
      description: "要移除的最后一个分配字符的从零开始的索引。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字符已成功删除;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除两个格式字符串中，从指定的位置之间赋值的字符，然后输出移除位置和描述性信息。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>方法不起如果在指定的移除位置没有分配的字符。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       在删除一个字符后，将向左填充在删除过程产生的间隙移动掩码中的剩余高位字符。 输入将重置空出的位置。 如果移动字符阻止的掩码定义，不会发生移除，和<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>返回`false`。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       此版本的<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>提供两个其他输出参数，以传递有关方法的操作的详细信息。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "要移除的第一个分配字符的从零开始的索引。"
    - id: endPosition
      type: System.Int32
      description: "要移除的最后一个分配字符的从零开始的索引。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中实际移除字符; 的带格式的字符串中从零开始的位置否则，第一个位置其中操作已失败。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字符已成功删除;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  id: Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "单个字符达到或超过指定的位置替换为指定的字符值。"
  remarks: "Replace 方法将格式化字符串达到或超过指定的位置中的第一个可编辑位置搜索`pos`。 如果找到一个对象，则可编辑的位置的值更改为指定的字符， `input`。 以下任何条件将导致错误，导致执行不替换和的值`false`要返回:-`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      的达到或超过指定的位置的格式化字符串中找不到可编辑的字符`pos`。      -替换字符， `input`，不是有效的输入的字符，因为它不是可打印或与掩码的对应元素不匹配。"
  syntax:
    content: public bool Replace (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>替换现有的值的值。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "要搜索要替换的第一个可编辑字符的从零开始位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功替换字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  id: Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "替换一定范围的可编辑以指定字符串的指定位置开始的字符。"
  remarks: "Replace 方法将达到或超过指定的位置的第一个可编辑位置搜索`pos`。 在假定在此点后有足够的可编辑位置下运行，现有的字符值都将使用替换字符串参数的内容一对一被替换的`input`。       以下情况被视为错误。 发生错误时，没有可以代替发生，并替换返回`false`。      -`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -没有足够存放的替换字符串内容的格式化字符串中可编辑的位置。      -之一替换字符值无效因为它不是可打印或与掩码的对应元素不匹配。"
  syntax:
    content: public bool Replace (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>用于替换现有的可编辑字符的值。</xref:System.String>"
    - id: position
      type: System.Int32
      description: "要搜索要替换的第一个可编辑字符的从零开始位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，所有字符已替换都为;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "用指定的字符值中，替换单个字符达到或超过指定的位置，然后输出移除位置和描述性信息。"
  remarks: "Replace 方法将格式化字符串达到或超过指定的位置中的第一个可编辑位置搜索`pos`。 如果找到一个对象，则可编辑的位置的值更改为指定的字符， `input`。 以下任何条件将导致错误条件导致要执行不替换和的值`false`要返回:-`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      的达到或超过指定的位置的格式化字符串中找不到可编辑的字符`pos`。      -替换字符， `input`，不是有效的输入的字符，因为它不是可打印或与掩码的对应元素不匹配。       除了返回的值，此方法具有两个输出参数，可提供有关在替换操作的其他信息。"
  syntax:
    content: public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>替换现有的值的值。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "要搜索要替换的第一个可编辑字符的从零开始位置。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中实际已替换的最后一个字符; 格式化字符串中的从零开始位置否则，第一个位置其中操作已失败。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述替换操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功替换字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "替换一定范围的可编辑的字符替换为指定的字符串，指定位置开始，然后输出移除位置和描述性信息。"
  remarks: "Replace 方法将达到或超过指定的位置的第一个可编辑位置搜索`pos`。 假定在此点后有足够的可编辑位置操作，现有的字符值都将使用替换字符串参数的内容一对一被替换的`input`。       以下情况被视为错误。 发生错误时，没有可以代替发生，并替换返回`false`。      -`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字符串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -没有足够存放的替换字符串内容的格式化字符串中可编辑的位置。      -之一替换字符值无效因为它不是可打印或与掩码的对应元素不匹配。       除了返回的值，此方法具有两个输出参数，可提供有关在替换操作的其他信息。"
  syntax:
    content: public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>用于替换现有的可编辑字符的值。</xref:System.String>"
    - id: position
      type: System.Int32
      description: "要搜索要替换的第一个可编辑字符的从零开始位置。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中实际已替换的最后一个字符; 格式化字符串中的从零开始位置否则，第一个位置其中操作已失败。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述替换操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，所有字符已替换都为;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "替换指定的开始和结束使用指定的字符值的位置之间的单个字符，然后输出移除位置和描述性信息。"
  remarks: "Replace 方法搜索指定的起始和结束位置之间的格式化字符串中的第一个可编辑位置。 如果找到一个对象，则可编辑的位置的值更改为指定的字符， `input`。 以下任何条件将导致错误条件导致要执行不替换和的值`false`要返回:-`startPos`或`endPos`参数点早于开始日期的格式字符串或其末尾之后。      的在指定时间段内找不到可编辑的字符。      -替换字符， `input`，不是有效的输入的字符，因为它不是可打印或与掩码的对应元素不匹配。       除了返回的值，此方法具有两个输出参数，可提供有关在替换操作的其他信息。"
  syntax:
    content: public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>替换现有的值的值。</xref:System.Char>"
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中的替换起始位置的位置从零开始。"
    - id: endPosition
      type: System.Int32
      description: "格式化字符串中的替换结束位置的位置从零开始。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中实际已替换的最后一个字符; 格式化字符串中的从零开始位置否则，第一个位置其中操作已失败。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述替换操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功替换字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "替换指定的开始和结束使用指定的字符串的位置之间的可编辑字符范围，然后输出移除位置和描述性信息。"
  remarks: "Replace 方法搜索指定的起始和结束位置之间的格式化字符串中的第一个可编辑位置。 假定在此点后有足够的可编辑位置操作，现有的字符值都将使用替换字符串参数的内容一对一被替换的`input`。       以下情况被视为错误。 发生错误时，没有可以代替发生，并替换返回`false`。      -`startPos`或`endPos`参数点早于开始日期的格式字符串或其末尾之后。      -没有足够存放的替换字符串内容的格式化字符串中可编辑的位置。      -之一替换字符值无效因为它不是可打印或与掩码的对应元素不匹配。       除了返回的值，此方法具有两个输出参数，可提供有关在替换操作的其他信息。"
  syntax:
    content: public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>用于替换现有的可编辑字符的值。</xref:System.String>"
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中的替换起始位置的位置从零开始。"
    - id: endPosition
      type: System.Int32
      description: "格式化字符串中的替换结束位置的位置从零开始。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中实际已替换的最后一个字符; 格式化字符串中的从零开始位置否则，第一个位置其中操作已失败。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述替换操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功，所有字符已替换都为;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  id: ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置一个值，确定应如何处理与提示字符匹配的输入的字符。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>以特殊方式，可以将两种类别的字符，空白字符和提示字符。</xref:System.ComponentModel.MaskedTextProvider> 通常情况下，将对照掩码并测试每个输入的字符接受或拒绝。 假定在<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>属性设置为值`null`，然后将 ResetOnPrompt 属性设置为`true`将导致对提示字符特殊处理。</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 添加提示字符，它会导致要清除的当前掩码字符位置和当前位置，以推进到下一个可编辑的字符。       ResetOnPrompt 优先于<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>下表中所述的属性。</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>      |ResetOnPrompt |<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|产生的行为 |  |---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  |`true`|`true`|可以添加提示字符，并且它将导致当前的掩码位置，要重置。</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 默认值。 |  |`true`|`false`|可以添加提示字符，并且它将导致当前的掩码位置，要重置。 |  |`false`|`true`|提示字符被处理为普通的输入字符。 |  |`false`|`false`|提示字符无效，尝试将字符添加的方法将会失败。 |"
  syntax:
    content: public bool ResetOnPrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提示输入作为输入的字符会导致要重置; 的掩码中的当前可编辑位置否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以指示提示字符作为正常的输入字符进行处理。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  id: ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置一个值，确定应如何处理空白输入的字符。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>以特殊方式，可以将两种类别的字符、 空格和提示字符。</xref:System.ComponentModel.MaskedTextProvider> 通常情况下，将对照掩码并测试每个输入的字符接受或拒绝。 将 ResetOnSpace 属性设置为`true`将导致要清除的当前掩码字符位置和当前推进到下一个可编辑的字符的位置。       ResetOnSpace 时非常有用将文本分配已保存排除出现提示时，其中提示符将被替换为空格。 还原此类字符串，将 ResetOnSpace 设置为之前`true`将重置占用输入字符串中的空格的位置的提示字符。"
  syntax:
    content: public bool ResetOnSpace { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果空白输入的字符导致要重置; 的掩码中的当前可编辑位置否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>以指示它是要作为正常的输入字符进行处理。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  id: Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将带格式的字符串设置为指定的输入字符串。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Set%2A>方法清除现有的格式化字符串的内容，然后将应用针对的掩码`input`要更新的内容格式的字符串的字符串。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>       以下情况被视为错误。 格式化的字符串时出错，则保持不变并<xref:System.ComponentModel.MaskedTextProvider.Set%2A>返回`false`。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>      -没有足够存放的替换字符串内容的格式化字符串中可编辑的位置。      -之一替换字符值无效因为它不是可打印或与掩码的对应元素不匹配。"
  syntax:
    content: public bool Set (string input);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>值，该值用于设置格式化的字符串。</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功设置的所有字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "将格式化的字符串设置为指定的输入字符串，，然后输出移除位置和描述性信息。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Set%2A>方法清除现有的格式化字符串的内容，然后将应用针对的掩码`input`要更新的内容格式的字符串的字符串。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>       以下情况被视为错误。 格式化的字符串时出错，则保持不变并<xref:System.ComponentModel.MaskedTextProvider.Set%2A>返回`false`。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>      -没有足够存放的替换字符串内容的格式化字符串中可编辑的位置。      -之一替换字符值无效因为它不是可打印或与掩码的对应元素不匹配。       此版本的<xref:System.ComponentModel.MaskedTextProvider.Set%2A>提供两个其他输出参数，以传递有关方法的操作的详细信息。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>"
  syntax:
    content: public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>值，该值用于设置格式化的字符串。</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中实际设置的最后一个字符; 格式化字符串中的从零开始位置否则，第一个位置其中操作已失败。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述的设置操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功设置的所有字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  id: SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取或设置一个值，该值指示是否可以通过其相同的值覆盖掩码中的原义字符位置。"
  remarks: "输入的掩码可以包含文本，并可编辑的字符。 如果尝试添加为文本、 的值所占据的掩码中的位置的输入的字符<xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>属性确定结果。</xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>      -如果此属性是`true`，可使用相同的值覆盖原义，添加将输入的字符时。 例如，正斜杠字符值`&quot;/&quot;`，无法添加到掩码的第三个位置`&quot;00/00/000&quot;`。      -如果此属性是`false`，所以不能将任何值分配给由原义字符占据的掩码位置。"
  syntax:
    content: public bool SkipLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要允许文本，添加回去;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>为不允许用户覆盖原义字符。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  id: ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回可显示的窗体中的带格式的字符串。"
  remarks: "ToDisplayString 方法将始终包含返回值，而不考虑的值中的提示和原义字符<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>或<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 此方法将始终显示密码字符如果<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性设置为字符值`null`。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>       ToDisplayString 通常用于获取要在关联的用户界面元素，如<xref:System.Windows.Forms.MaskedTextBox>.</xref:System.Windows.Forms.MaskedTextBox>中显示的字符串"
  syntax:
    content: public string ToDisplayString ();
    parameters: []
    return:
      type: System.String
      description: "格式化<xref:System.String>，包括提示和掩码原义字符。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString
  id: ToString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回格式化的字符串中包含所有分配的字符值。"
  remarks: "此版本的重载<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法包含提示字符和文本的当前值根据<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性，分别。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 它将始终返回原始的输入的字符，并忽略的值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      1> [!IMPORTANT]&1;> 由于此方法会显示在用户界面中通常由密码字符保护的信息，它应与要格外小心，以免意外泄漏敏感的用户数据。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "格式化<xref:System.String>包括所有分配的字符值。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回格式的字符串，并有选择性地包括密码字符。"
  remarks: "此版本的重载<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法包含提示字符和文本的当前值根据<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性，分别。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 如果`ignorePasswordChar`参数是`true`，它将返回原始的输入的字符，并忽略的值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 如果此参数为`false`，它将使用的密码字符遮盖可编辑的用户输入，如果<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性设置为值`null`。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      1> [!IMPORTANT]&1;> 由于此方法可能会显示在用户界面中通常由密码字符保护的信息，它应与要格外小心，以免意外泄漏敏感的用户数据。"
  syntax:
    content: public string ToString (bool ignorePasswordChar);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回的实际的可编辑字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ，则指示<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>属性将会得到。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    return:
      type: System.String
      description: "格式化<xref:System.String>，包括文本、 提示，以及 （可选） 密码字符。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  id: ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回格式的字符串，并有选择性地包括提示和原义字符。"
  remarks: "此版本的重载<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法包含提示字符和文本的值根据`IncludePrompt`和`IncludeLiterals`参数，分别。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 请注意这些参数重写的值<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 此方法将始终返回原始的输入的字符，并忽略的值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      1> [!IMPORTANT]&1;> 由于此方法会显示在用户界面中通常由密码字符保护的信息，它应与要格外小心，以免意外泄漏敏感的用户数据。"
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要包含在返回的字符串; 中的提示字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回的字符串; 中包括原义字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "格式化<xref:System.String>，包含所有分配的字符值，还可以选择包含文本，并提示。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  id: ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回子字符串的格式化字符串。"
  remarks: "此版本的重载<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法返回子字符串的格式字符串，从位置开始`startPos`和包括的后续由指定的字符数`length`参数。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 返回的字符串包含提示字符和文本的当前值根据<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性，分别。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 返回的字符串将包含原始的输入的字符;<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>始终忽略属性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      1> [!IMPORTANT]&1;> 由于此方法会显示在用户界面中通常由密码字符保护的信息，它应与要格外小心，以免意外泄漏敏感的用户数据。       ToString 的输入参数中存在差异时，执行下列操作:-如果`startPos`小于零，起始位置设置为零。      -如果`startPos`大于或等于实际<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式字符串，<xref:System.String.Empty>返回字符串。</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -如果`length`大于返回的剩余字符过去的起始位置，仅剩余字符数。      -如果`length`小于或等于零，<xref:System.String.Empty>返回字符串。</xref:System.String.Empty>"
  syntax:
    content: public string ToString (int startPosition, int length);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中输出的开始处的位置从零开始。"
    - id: length
      type: System.Int32
      description: "要返回的字符数。"
    return:
      type: System.String
      description: "如果成功，带格式的子字符串<xref:System.String>，其中包括所有分配的字符值; 否则为<xref:System.String>字符串。</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回子字符串的格式字符串，有选择性地包括密码字符。"
  remarks: "此版本的重载<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法返回子字符串的格式字符串，从位置开始`startPos`和包括的后续由指定的字符数`length`参数。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 返回的字符串包含提示字符和文本的当前值根据<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性，分别。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 如果`ignorePasswordChar`参数是`true`，它将返回原始的输入的字符，并忽略的值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 如果此参数为`false`，它将使用的密码字符遮盖可编辑的用户输入，如果<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性设置为值`null`。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      1> [!IMPORTANT]&1;> 由于此方法可能会显示在用户界面中通常由密码字符保护的信息，它应与要格外小心，以免意外泄漏敏感的用户数据。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>在输入参数有差异时，请执行下列操作:-如果`startPos`小于零，起始位置设置为零。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -如果`startPos`大于或等于实际<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式字符串，<xref:System.String.Empty>返回字符串。</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -如果`length`大于返回的剩余字符过去的起始位置，仅剩余字符数。      -如果`length`小于或等于零，<xref:System.String.Empty>返回字符串。</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool ignorePasswordChar, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回的实际的可编辑字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ，则指示<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>属性将会得到。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中输出的开始处的位置从零开始。"
    - id: length
      type: System.Int32
      description: "要返回的字符数。"
    return:
      type: System.String
      description: "如果成功，带格式的子字符串<xref:System.String>，其中包括文本、 提示，以及 （可选） 密码字符; 否则为<xref:System.String>字符串。</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回子字符串的格式字符串，有选择性地包括提示和原义字符。"
  remarks: "此版本的重载<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法返回子字符串的格式字符串，从位置开始`startPos`和包括的后续由指定的字符数`length`参数。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 返回的字符串包含提示字符和文本的值根据`IncludePrompt`和`IncludeLiterals`参数，分别。 请注意这些参数重写的值<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 此方法将始终返回原始的输入的字符，并忽略的值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      1> [!IMPORTANT]&1;> 由于此方法会显示在用户界面中通常由密码字符保护的信息，它应与要格外小心，以免意外泄漏敏感的用户数据。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>在输入参数有差异时，请执行下列操作:-如果`startPos`小于零，起始位置设置为零。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -如果`startPos`大于或等于实际<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式字符串，<xref:System.String.Empty>返回字符串。</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -如果`length`大于返回的剩余字符过去的起始位置，仅剩余字符数。      -如果`length`小于或等于零，<xref:System.String.Empty>返回字符串。</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要包含在返回的字符串; 中的提示字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回的字符串; 中包括原义字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中输出的开始处的位置从零开始。"
    - id: length
      type: System.Int32
      description: "要返回的字符数。"
    return:
      type: System.String
      description: "如果成功，带格式的子字符串<xref:System.String>，其中包括所有分配的字符值并根据需要包括原义字符和提示; 否则为<xref:System.String>字符串。</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返回子字符串的格式字符串，有选择性地包括提示符处，文本，并密码字符。"
  remarks: "此版本的重载<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法返回子字符串的格式字符串，从位置开始`startPos`和包括的后续由指定的字符数`length`参数。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 返回的字符串包含提示字符和文本的值根据`IncludePrompt`和`IncludeLiterals`参数，分别。 请注意这些参数重写的值<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 如果`ignorePasswordChar`参数是`true`，它将返回原始的输入的字符，并忽略的值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 如果此参数为`false`，它将使用的密码字符遮盖可编辑的用户输入，如果<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>属性设置为值`null`。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      1> [!IMPORTANT]&1;> 由于此方法可能会显示在用户界面中通常由密码字符保护的信息，它应与要格外小心，以免意外泄漏敏感的用户数据。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>在输入参数有差异时，请执行下列操作:-如果`startPos`小于零，起始位置设置为零。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -如果`startPos`大于或等于实际<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式字符串，<xref:System.String.Empty>返回字符串。</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -如果`length`大于返回的剩余字符过去的起始位置，仅剩余字符数。      -如果`length`小于或等于零，<xref:System.String.Empty>返回字符串。</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要返回的实际的可编辑字符;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ，则指示<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>属性将会得到。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要包含在返回的字符串; 中的提示字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要返回的字符串; 中返回原义字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: startPosition
      type: System.Int32
      description: "格式化字符串中输出的开始处的位置从零开始。"
    - id: length
      type: System.Int32
      description: "要返回的字符数。"
    return:
      type: System.String
      description: "如果成功，带格式的子字符串<xref:System.String>，其中包括所有分配的字符值并根据需要包括文本、 提示，以及密码字符; 否则为<xref:System.String>字符串。</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "测试是否无法在指定位置成功设置指定的字符。"
  remarks: "VerifyChar 方法测试是否单个字符值表示带格式的字符串中指定的位置的有效输入。 此方法将返回`false`出于以下原因:-`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -字符`input`不是有效的输入的字符，所确定的那样<xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>方法。</xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>      -`input`与指定的位置处的掩码元素不兼容`pos`。       最后一个条件可能依赖于的当前值<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>， <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>， <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>，<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>和<xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>属性。</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> </xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>       若要测试整个输入的字符串根据掩码，请使用之一<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>方法相反。</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>"
  syntax:
    content: public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>测试值。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "若要测试对输入的字符的掩码中的位置。"
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字符是有效的指定位置;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  id: VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "测试是否将在指定位置转义指定的字符。"
  remarks: "则称该字符为*转义*如果它是有效的值，但未分配给格式化字符串中的位置。 转义的字符划分为以下三个类别:-如果提示字符进行转义<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>属性是`true`。</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>      -输入字符进行转义，如果它们具有相同的值与该文本在掩码中，并且<xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>属性是`true`。</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>      如果转义空格字符<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>属性是`true`。</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>       此外将返回 VerifyEscapeChar 方法`false`如果`pos`参数小于零或大于<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>"
  syntax:
    content: public bool VerifyEscapeChar (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>测试值。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "若要测试对输入的字符的掩码中的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在指定位置; 将转义指定的字符否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  id: VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "测试是否可以成功设置指定的字符串。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>适用`input`根据掩码，而无需实际更改要测试的格式化的字符串的字符串是否`input`可能在相应中有效<xref:System.ComponentModel.MaskedTextProvider.Set%2A>操作。</xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 此方法也返回`true`如果输入的内容`null`或长度为零。"
  syntax:
    content: public bool VerifyString (string input);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>测试值。</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字符串表示有效的输入;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "测试是否指定的字符串可以成功，设置，然后输出位置和描述性信息。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>适用`input`根据掩码，而无需实际更改要测试的格式化的字符串的字符串是否`input`可能在相应中有效<xref:System.ComponentModel.MaskedTextProvider.Set%2A>操作。</xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 此方法也返回`true`如果输入的内容`null`或长度为零。       此版本的<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>提供两个其他输出参数，以传递有关方法的操作的详细信息。</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>"
  syntax:
    content: public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>测试值。</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "如果成功，实际测试的最后一个字符的从零开始的位置;否则，第一个位置测试失败位置。 一个输出参数。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>用于简单地描述测试操作的结果。 一个输出参数。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字符串表示有效的输入;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MaskedTextResultHint
  parent: System.ComponentModel
  isExternal: false
  name: MaskedTextResultHint
  nameWithType: MaskedTextResultHint
  fullName: System.ComponentModel.MaskedTextResultHint
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Clone
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
- uid: System.ComponentModel.MaskedTextProvider.Culture
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
- uid: System.ComponentModel.MaskedTextProvider.ToString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.#ctor*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider.MaskedTextProvider
- uid: System.ComponentModel.MaskedTextProvider.Add*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add
  nameWithType: MaskedTextProvider.Add
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear
  nameWithType: MaskedTextProvider.Clear
- uid: System.ComponentModel.MaskedTextProvider.Clone*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone
  nameWithType: MaskedTextProvider.Clone
- uid: System.ComponentModel.MaskedTextProvider.Culture*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom
  nameWithType: MaskedTextProvider.FindEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange
  nameWithType: MaskedTextProvider.FindEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint
  nameWithType: MaskedTextProvider.GetOperationResultFromHint
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt
  nameWithType: MaskedTextProvider.InsertAt
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition
  nameWithType: MaskedTextProvider.IsAvailablePosition
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition
  nameWithType: MaskedTextProvider.IsEditPosition
- uid: System.ComponentModel.MaskedTextProvider.IsPassword*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar
  nameWithType: MaskedTextProvider.IsValidInputChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar
  nameWithType: MaskedTextProvider.IsValidMaskChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar
  nameWithType: MaskedTextProvider.IsValidPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.Item*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item
  nameWithType: MaskedTextProvider.Item
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove
  nameWithType: MaskedTextProvider.Remove
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt
  nameWithType: MaskedTextProvider.RemoveAt
- uid: System.ComponentModel.MaskedTextProvider.Replace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace
  nameWithType: MaskedTextProvider.Replace
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set
  nameWithType: MaskedTextProvider.Set
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString
  nameWithType: MaskedTextProvider.ToDisplayString
- uid: System.ComponentModel.MaskedTextProvider.ToString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString
  nameWithType: MaskedTextProvider.ToString
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar
  nameWithType: MaskedTextProvider.VerifyChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar
  nameWithType: MaskedTextProvider.VerifyEscapeChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString
  nameWithType: MaskedTextProvider.VerifyString
