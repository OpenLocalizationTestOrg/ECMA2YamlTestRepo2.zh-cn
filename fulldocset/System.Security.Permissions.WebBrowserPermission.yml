### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.WebBrowserPermission
  id: WebBrowserPermission
  children:
  - System.Security.Permissions.WebBrowserPermission.#ctor
  - System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)
  - System.Security.Permissions.WebBrowserPermission.Copy
  - System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.WebBrowserPermission.IsUnrestricted
  - System.Security.Permissions.WebBrowserPermission.Level
  - System.Security.Permissions.WebBrowserPermission.ToXml
  - System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebBrowserPermission
  nameWithType: WebBrowserPermission
  fullName: System.Security.Permissions.WebBrowserPermission
  type: Class
  summary: "WebBrowserPermission 对象控制创建 WebBrowser 控件的功能。"
  remarks: "在 Windows Presentation Foundation (WPF) 中，Web 浏览器控件使浏览 HTML 框架。 此权限使用 WebBrowserPermission 枚举的值。      ## XAML 属性用法此类不常在 XAML 中使用。"
  syntax:
    content: 'public sealed class WebBrowserPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.#ctor
  id: '#ctor'
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: WebBrowserPermission()
  nameWithType: WebBrowserPermission.WebBrowserPermission()
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;></xref>类。"
  remarks: "默认情况下，<xref:System.Security.Permissions.WebBrowserPermission.Level%2A>属性设置为<xref:System.Security.Permissions.WebBrowserPermissionLevel>。</xref:System.Security.Permissions.WebBrowserPermissionLevel></xref:System.Security.Permissions.WebBrowserPermission.Level%2A>的值"
  syntax:
    content: public WebBrowserPermission ();
    parameters: []
  overload: System.Security.Permissions.WebBrowserPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: WebBrowserPermission(PermissionState)
  nameWithType: WebBrowserPermission.WebBrowserPermission(PermissionState)
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(PermissionState)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;></xref>类通过指定权限状态。"
  remarks: "如果`state`设置<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.WebBrowserPermission.Level%2A>属性设置为<xref:System.Security.Permissions.WebBrowserPermissionLevel>。</xref:System.Security.Permissions.WebBrowserPermissionLevel></xref:System.Security.Permissions.WebBrowserPermission.Level%2A>的值</xref:System.Security.Permissions.PermissionState>为 如果`state`设置<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.WebBrowserPermission.Level%2A>属性设置为<xref:System.Security.Permissions.WebBrowserPermissionLevel>。</xref:System.Security.Permissions.WebBrowserPermissionLevel></xref:System.Security.Permissions.WebBrowserPermission.Level%2A>的值</xref:System.Security.Permissions.PermissionState>为"
  example:
  - "The following code example shows how to create a <xref:System.Security.Permissions.WebBrowserPermission> with a <xref:System.Security.Permissions.PermissionState> value.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission1](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission1)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission1](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission1)]"
  syntax:
    content: public WebBrowserPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "枚举的值<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  overload: System.Security.Permissions.WebBrowserPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)
  id: '#ctor(System.Security.Permissions.WebBrowserPermissionLevel)'
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: WebBrowserPermission(WebBrowserPermissionLevel)
  nameWithType: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "初始化的新实例<xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;></xref>通过指定 Web 浏览器权限级别的类。"
  remarks: ''
  example:
  - "The following code example shows how to create a <xref:System.Security.Permissions.WebBrowserPermission> with a <xref:System.Security.Permissions.WebBrowserPermissionLevel> value.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission2](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission2)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission2](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission2)]"
  syntax:
    content: public WebBrowserPermission (System.Security.Permissions.WebBrowserPermissionLevel webBrowserPermissionLevel);
    parameters:
    - id: webBrowserPermissionLevel
      type: System.Security.Permissions.WebBrowserPermissionLevel
      description: "枚举的值<xref href=&quot;System.Security.Permissions.WebBrowserPermissionLevel&quot;> </xref>。"
  overload: System.Security.Permissions.WebBrowserPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.Copy
  id: Copy
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebBrowserPermission.Copy()
  fullName: System.Security.Permissions.WebBrowserPermission.Copy()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "创建并返回当前权限的相同副本。"
  remarks: "与原始权限情况下，一份权限表示对资源的相同的访问权限。      ## 此类的 XAML 属性用法成员在 XAML 中，或者通常不使用或不在 XAML 中使用。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "当前权限的副本。"
  overload: System.Security.Permissions.WebBrowserPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebBrowserPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.WebBrowserPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "重新构造具有指定状态的 XML 编码的权限。"
  remarks: "## 此类的 XAML 属性用法成员在 XAML 中，或者通常不使用或不在 XAML 中使用。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "编码用于重新构造权限的 XML。"
  overload: System.Security.Permissions.WebBrowserPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebBrowserPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "创建并返回是当前权限和指定的权限的交集的权限。"
  remarks: "## 此类的 XAML 属性用法成员在 XAML 中，或者通常不使用或不在 XAML 中使用。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要与当前权限相交的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "以下两个权限的交集是描述它们都共同点描述的状态的权限。 仅通过两个原始权限的请求进行有效的相交的权限。"
  overload: System.Security.Permissions.WebBrowserPermission.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebBrowserPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "确定当前权限是否为指定权限的子集。"
  remarks: "The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\.  \n  \n If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  \n  \n## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "将要测试子集关系的权限。 此权限必须是与当前权限属于同一类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果当前权限是指定权限; 的子集否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.WebBrowserPermission.IsSubsetOf*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebBrowserPermission.IsUnrestricted()
  fullName: System.Security.Permissions.WebBrowserPermission.IsUnrestricted()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "返回一个值，该值指示当前权限是否不受限制。"
  remarks: "无限制的权限表示对权限所保护的所有资源的访问权限。      ## 此类的 XAML 属性用法成员在 XAML 中，或者通常不使用或不在 XAML 中使用。"
  example:
  - "The following code example shows how to use the IsUnrestricted method.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission5](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission5)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission5](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission5)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Security.Permissions.WebBrowserPermission.Level*>属性设置为<xref href=&quot;System.Security.Permissions.WebBrowserPermissionLevel&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Security.Permissions.WebBrowserPermission.Level*>"
  overload: System.Security.Permissions.WebBrowserPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.Level
  id: Level
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: Level
  nameWithType: WebBrowserPermission.Level
  fullName: System.Security.Permissions.WebBrowserPermission.Level
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "获取或设置 Web 浏览器权限级别的当前值。"
  remarks: "##此类的 XAML 属性用法成员或者通常不使用在[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，或不能在[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  example:
  - "The following code example shows how to retrieve the <xref:System.Security.Permissions.WebBrowserPermissionLevel> value for the <xref:System.Security.Permissions.WebBrowserPermission>.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission6](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission6)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission6](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission6)]"
  syntax:
    content: public System.Security.Permissions.WebBrowserPermissionLevel Level { get; set; }
    return:
      type: System.Security.Permissions.WebBrowserPermissionLevel
      description: "Web 浏览器权限级别的当前值。"
  overload: System.Security.Permissions.WebBrowserPermission.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebBrowserPermission.ToXml()
  fullName: System.Security.Permissions.WebBrowserPermission.ToXml()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "创建权限及其当前状态的 XML 编码。"
  remarks: "## 此类的 XAML 属性用法成员在 XAML 中，或者通常不使用或不在 XAML 中使用。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "权限，包括任何状态信息的 XML 编码。"
  overload: System.Security.Permissions.WebBrowserPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebBrowserPermission.Union(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.Union(IPermission)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "创建兼具当前权限和指定的权限的权限。"
  remarks: "## 此类的 XAML 属性用法成员在 XAML 中，或者通常不使用或不在 XAML 中使用。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "若要与当前权限合并的权限。 它必须与当前权限属于同一类型。"
    return:
      type: System.Security.IPermission
      description: "表示同时兼具当前权限和指定的权限的新权限。"
  overload: System.Security.Permissions.WebBrowserPermission.Union*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.Security.Permissions.WebBrowserPermission.#ctor
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: WebBrowserPermission()
  nameWithType: WebBrowserPermission.WebBrowserPermission()
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission()
- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: WebBrowserPermission(PermissionState)
  nameWithType: WebBrowserPermission.WebBrowserPermission(PermissionState)
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: WebBrowserPermission(WebBrowserPermissionLevel)
  nameWithType: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)
- uid: System.Security.Permissions.WebBrowserPermissionLevel
  parent: System.Security.Permissions
  isExternal: false
  name: WebBrowserPermissionLevel
  nameWithType: WebBrowserPermissionLevel
  fullName: System.Security.Permissions.WebBrowserPermissionLevel
- uid: System.Security.Permissions.WebBrowserPermission.Copy
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Copy()
  nameWithType: WebBrowserPermission.Copy()
  fullName: System.Security.Permissions.WebBrowserPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebBrowserPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.WebBrowserPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebBrowserPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.Intersect(IPermission)
- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebBrowserPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebBrowserPermission.IsUnrestricted()
  fullName: System.Security.Permissions.WebBrowserPermission.IsUnrestricted()
- uid: System.Security.Permissions.WebBrowserPermission.Level
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Level
  nameWithType: WebBrowserPermission.Level
  fullName: System.Security.Permissions.WebBrowserPermission.Level
- uid: System.Security.Permissions.WebBrowserPermission.ToXml
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebBrowserPermission.ToXml()
  fullName: System.Security.Permissions.WebBrowserPermission.ToXml()
- uid: System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebBrowserPermission.Union(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.Union(IPermission)
- uid: System.Security.Permissions.WebBrowserPermission.#ctor*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: WebBrowserPermission
  nameWithType: WebBrowserPermission.WebBrowserPermission
- uid: System.Security.Permissions.WebBrowserPermission.Copy*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Copy
  nameWithType: WebBrowserPermission.Copy
- uid: System.Security.Permissions.WebBrowserPermission.FromXml*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: FromXml
  nameWithType: WebBrowserPermission.FromXml
- uid: System.Security.Permissions.WebBrowserPermission.Intersect*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Intersect
  nameWithType: WebBrowserPermission.Intersect
- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebBrowserPermission.IsSubsetOf
- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebBrowserPermission.IsUnrestricted
- uid: System.Security.Permissions.WebBrowserPermission.Level*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Level
  nameWithType: WebBrowserPermission.Level
- uid: System.Security.Permissions.WebBrowserPermission.ToXml*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: ToXml
  nameWithType: WebBrowserPermission.ToXml
- uid: System.Security.Permissions.WebBrowserPermission.Union*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Union
  nameWithType: WebBrowserPermission.Union
