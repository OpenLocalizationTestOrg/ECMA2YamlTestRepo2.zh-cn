### YamlMime:ManagedReference
items:
- uid: System.Configuration.LongValidator
  id: LongValidator
  children:
  - System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)
  - System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)
  - System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)
  - System.Configuration.LongValidator.CanValidate(System.Type)
  - System.Configuration.LongValidator.Validate(System.Object)
  langs:
  - csharp
  name: LongValidator
  nameWithType: LongValidator
  fullName: System.Configuration.LongValidator
  type: Class
  summary: "提供的验证<xref:System.Int64>值。</xref:System.Int64>"
  remarks: "LongValidator 用于确保`long`（64 位有符号的整数） 满足特定条件。 当创建 LongValidator 类的实例，将建立验证条件。 <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%29>构造函数可确保`long`正在验证的值遵循最小值和最大长度。</xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%29> <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29>构造函数检查最小值和最大<xref:System.Int64>值，以及验证范围是否唯一。</xref:System.Int64> </xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%2CSystem.Int64%29>构造函数可以检查前面三个参数外，还检查是否<xref:System.Int64>值相当于特定的解决值。</xref:System.Int64> </xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%2CSystem.Int64%29>       <xref:System.Configuration.LongValidator.CanValidate%2A>方法确定正在验证的对象类型是否与预期的类型匹配。</xref:System.Configuration.LongValidator.CanValidate%2A> 正在验证该对象被传递的参数<xref:System.Configuration.LongValidator.Validate%2A>方法。</xref:System.Configuration.LongValidator.Validate%2A>"
  example:
  - "The following code example demonstrates how to use the LongValidator type.  \n  \n [!code-vb[System.Configuration.LongValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.l_1_1.vb)]\n [!code-cs[System.Configuration.LongValidator#1](~/add/codesnippet/csharp/t-system.configuration.l_1_1.cs)]"
  syntax:
    content: 'public class LongValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64)'
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: LongValidator(Int64,Int64)
  nameWithType: LongValidator.LongValidator(Int64,Int64)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.LongValidator&quot;></xref>类。"
  remarks: "LongValidator 构造函数可确保正在验证的长整型值符合最小值和最大长度。"
  syntax:
    content: public LongValidator (long minValue, long maxValue);
    parameters:
    - id: minValue
      type: System.Int64
      description: "<xref:System.Int64>值，该值指定的最小长度<xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref>值。</xref:System.Int64>"
    - id: maxValue
      type: System.Int64
      description: "<xref:System.Int64>值，该值指定的最大长度<xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref>值。</xref:System.Int64>"
  overload: System.Configuration.LongValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)
  id: '#ctor(System.Int64,System.Int64,System.Boolean)'
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: LongValidator(Int64,Int64,Boolean)
  nameWithType: LongValidator.LongValidator(Int64,Int64,Boolean)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64,Boolean)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.LongValidator&quot;></xref>类。"
  remarks: "当使用 LongValidator 构造函数时，它会检查最小值和最大<xref:System.Int64>值，以及验证范围是否唯一。</xref:System.Int64> 当`rangeIsExclusive`参数设置为`true`、<xref:System.Int64>值不能在之间`minValue`和`maxValue`。</xref:System.Int64>"
  example:
  - "The following code example demonstrates how to use the LongValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.LongValidator> class.  \n  \n [!code-vb[System.Configuration.LongValidator#2](~/add/codesnippet/visualbasic/2847484f-ec91-486e-9c9a-_1.vb)]\n [!code-cs[System.Configuration.LongValidator#2](~/add/codesnippet/csharp/2847484f-ec91-486e-9c9a-_1.cs)]"
  syntax:
    content: public LongValidator (long minValue, long maxValue, bool rangeIsExclusive);
    parameters:
    - id: minValue
      type: System.Int64
      description: "<xref:System.Int64>值，该值指定的最小长度<xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref>值。</xref:System.Int64>"
    - id: maxValue
      type: System.Int64
      description: "<xref:System.Int64>值，该值指定的最大长度<xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref>值。</xref:System.Int64>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "A<xref:System.Boolean>值，该值指定是否验证范围是独占。</xref:System.Boolean>"
  overload: System.Configuration.LongValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)'
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: LongValidator(Int64,Int64,Boolean,Int64)
  nameWithType: LongValidator.LongValidator(Int64,Int64,Boolean,Int64)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64,Boolean,Int64)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新实例<xref href=&quot;System.Configuration.LongValidator&quot;></xref>类。"
  remarks: "当指定`resolution`、<xref:System.Int64>正被验证的值必须通过验证才能与此值相等。</xref:System.Int64>"
  syntax:
    content: public LongValidator (long minValue, long maxValue, bool rangeIsExclusive, long resolution);
    parameters:
    - id: minValue
      type: System.Int64
      description: "<xref:System.Int64>值，该值指定的最小长度<xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref>值。</xref:System.Int64>"
    - id: maxValue
      type: System.Int64
      description: "<xref:System.Int64>值，该值指定的最大长度<xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref>值。</xref:System.Int64>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "A<xref:System.Boolean>值，该值指定是否验证范围是独占。</xref:System.Boolean>"
    - id: resolution
      type: System.Int64
      description: "<xref:System.Int64>值，该值指定一个特定值，必须匹配。</xref:System.Int64>"
  overload: System.Configuration.LongValidator.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>resolution</code> is equal to or less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>maxValue</code> is less than <code>minValue</code>."
  platform:
  - net462
- uid: System.Configuration.LongValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: LongValidator.CanValidate(Type)
  fullName: System.Configuration.LongValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "确定是否可以验证的对象类型。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.LongValidator> class.  \n  \n [!code-vb[System.Configuration.LongValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.l_0_1.vb)]\n [!code-cs[System.Configuration.LongValidator#3](~/add/codesnippet/csharp/m-system.configuration.l_0_1.cs)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "对象的类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> type </code>参数与匹配<xref:System.Int64>值; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Int64>"
  overload: System.Configuration.LongValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LongValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: LongValidator.Validate(Object)
  fullName: System.Configuration.LongValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "确定对象的值是否有效。"
  remarks: "<xref:System.Configuration.LongValidator>类包含验证所需的规则<xref:System.Int64>对象。</xref:System.Int64> </xref:System.Configuration.LongValidator> 实例时，规则建立<xref:System.Configuration.LongValidator>创建类。</xref:System.Configuration.LongValidator> 要验证的对象作为验证方法的一个参数传递。"
  example:
  - "The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.LongValidator> class.  \n  \n [!code-vb[System.Configuration.LongValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.l_1_1.vb)]\n [!code-cs[System.Configuration.LongValidator#4](~/add/codesnippet/csharp/m-system.configuration.l_1_1.cs)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "对象的值。"
  overload: System.Configuration.LongValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: LongValidator(Int64,Int64)
  nameWithType: LongValidator.LongValidator(Int64,Int64)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: LongValidator(Int64,Int64,Boolean)
  nameWithType: LongValidator.LongValidator(Int64,Int64,Boolean)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: LongValidator(Int64,Int64,Boolean,Int64)
  nameWithType: LongValidator.LongValidator(Int64,Int64,Boolean,Int64)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64,Boolean,Int64)
- uid: System.Configuration.LongValidator.CanValidate(System.Type)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: LongValidator.CanValidate(Type)
  fullName: System.Configuration.LongValidator.CanValidate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.LongValidator.Validate(System.Object)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: LongValidator.Validate(Object)
  fullName: System.Configuration.LongValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.LongValidator.#ctor*
  parent: System.Configuration.LongValidator
  isExternal: false
  name: LongValidator
  nameWithType: LongValidator.LongValidator
- uid: System.Configuration.LongValidator.CanValidate*
  parent: System.Configuration.LongValidator
  isExternal: false
  name: CanValidate
  nameWithType: LongValidator.CanValidate
- uid: System.Configuration.LongValidator.Validate*
  parent: System.Configuration.LongValidator
  isExternal: false
  name: Validate
  nameWithType: LongValidator.Validate
