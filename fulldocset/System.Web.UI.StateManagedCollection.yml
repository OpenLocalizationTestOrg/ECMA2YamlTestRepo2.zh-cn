### YamlMime:ManagedReference
items:
- uid: System.Web.UI.StateManagedCollection
  id: StateManagedCollection
  children:
  - System.Web.UI.StateManagedCollection.#ctor
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.GetKnownTypes
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: StateManagedCollection
  nameWithType: StateManagedCollection
  fullName: System.Web.UI.StateManagedCollection
  type: Class
  summary: "管理的所有强类型集合提供基类<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>对象。"
  remarks: "StateManagedCollection 类是存储的所有强类型集合的基类<xref:System.Web.UI.IStateManager>元素，其中包括<xref:System.Web.UI.WebControls.DataControlFieldCollection>， <xref:System.Web.UI.WebControls.ParameterCollection>， <xref:System.Web.UI.WebControls.StyleCollection>， <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>，和其他人。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.StyleCollection> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.DataControlFieldCollection> </xref:System.Web.UI.IStateManager> StateManagedCollection 集合管理其自己的状态，以及它包含的元素的状态。 因此，调用<xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>将保存该集合的状态和集合当前包含的所有元素的状态。</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>       最重要的方法从 StateManagedCollection 类派生时要考虑为<xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>， <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>， <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>， <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>，和<xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>。</xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> </xref:System.Web.UI.StateManagedCollection.SetDirty%2A> </xref:System.Web.UI.StateManagedCollection.OnValidate%2A> </xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>和<xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>方法用于存储视图状态的类型包含的元素的索引。</xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> 存储索引，而不是完全限定的类型名称可以提高性能。 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>每当操作集合中的元素，就会调用方法并验证根据业务规则的元素。</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> 目前，实现<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>方法禁止`null`对象从存储在集合; 但是，您可以重写此方法在派生类型中定义你自己的验证行为。</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>方法强制将整个集合序列化为视图状态，而不是只序列化的最后时间以来对状态所做的更改加载它。</xref:System.Web.UI.StateManagedCollection.SetDirty%2A> <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>方法是一个抽象方法，可实现来执行此相同的行为在元素级别。</xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>      1> [!IMPORTANT]&1;> StateManagedCollection 存储的视图状态中的收集项的程序集限定类型名称。 站点访问者无法解码的视图状态，检索的类型名称。 如果这种情况下在您的网站中创建安全隐患，你可以手动将其放在视图状态之前加密的类型名称。"
  example:
  - "The following code example demonstrates how to derive a strongly typed collection class from StateManagedCollection to contain <xref:System.Web.UI.IStateManager> objects. In this example, the `CycleCollection` is derived to contain instances of the abstract `Cycle` class, which can be either `Bicycle` or `Tricycle` objects. The `Cycle` class implements the <xref:System.Web.UI.IStateManager> interface because it stores the value of the `CycleColor` property in view state.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#1](~/add/codesnippet/csharp/t-system.web.ui.stateman_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.stateman_1.vb)]"
  syntax:
    content: 'public abstract class StateManagedCollection : System.Collections.IList, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: StateManagedCollection()
  nameWithType: StateManagedCollection.StateManagedCollection()
  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>类。"
  remarks: "派生的类可以重写构造函数以提供自定义的实现。"
  syntax:
    content: protected StateManagedCollection ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.Clear
  id: Clear
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: StateManagedCollection.Clear()
  fullName: System.Web.UI.StateManagedCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "中移除所有项从<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnClear%2A>之前调用清除方法时，调用方法和<xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A>方法之后清除已完成从集合中删除元素被调用。</xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnClear%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: StateManagedCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "元素复制<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>到一个数组中从特定的数组索引处开始的集合。"
  remarks: "指定的数组必须具有兼容类型。       元素被复制到<xref:System.Array>枚举数循环访问的相同顺序<xref:System.Web.UI.StateManagedCollection>集合。</xref:System.Web.UI.StateManagedCollection> </xref:System.Array>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "一维<xref:System.Array>，它是从复制的元素的目标<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。</xref:System.Array> <xref:System.Array>必须具有从零开始的索引。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "中的从零开始索引`array`复制开始处。"
  overload: System.Web.UI.StateManagedCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小于零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is multidimensional.  \n  \n \\- or -  \n  \n <code>index</code> is greater than or equal to the length of <code>array</code>.  \n  \n \\- or -  \n  \n The number of elements in the source <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is greater than the available space from the <code>index</code> to the end of the destination <code>array</code>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.Count
  id: Count
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: Count
  nameWithType: StateManagedCollection.Count
  fullName: System.Web.UI.StateManagedCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取包含中的元素数<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "中包含的元素数<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: StateManagedCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写，创建一个实现类的实例<xref href=&quot;System.Web.UI.IStateManager&quot;> </xref>。 创建的对象的类型取决于返回的集合的指定成员<xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>方法。</xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>"
  remarks: "内部调用 CreateKnownType 方法<xref:System.Web.UI.StateManagedCollection>在其实现的集合<xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName>方法。</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> </xref:System.Web.UI.StateManagedCollection> 派生的集合重写 CreateKnownType 方法返回的默认实例<xref:System.Web.UI.IStateManager>标识由提供的类型`index`，映射为返回类型之一<xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>方法。</xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.IStateManager>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the CreateKnownType method. The `CycleCollection` implementation of CreateKnownType returns the default instance of either a `Bicycle` or `Tricycle` object, depending on the index passed. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_1_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_1_1.vb)]"
  syntax:
    content: protected virtual object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "从返回的类型的已排序列表的索引<xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>，类型的<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>创建。</xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>"
    return:
      type: System.Object
      description: "从派生类的实例<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>根据<code> index </code>提供。"
  overload: System.Web.UI.StateManagedCollection.CreateKnownType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在所有情况下不在派生类中重写。"
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StateManagedCollection.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回循环访问的迭代器<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>可用于循环访问<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.StateManagedCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: StateManagedCollection.GetKnownTypes()
  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写，获取一个数组<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>类型<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合可以包含。"
  remarks: "内部调用 GetKnownTypes 方法<xref:System.Web.UI.StateManagedCollection>在其实现的集合<xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>方法。</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> </xref:System.Web.UI.StateManagedCollection> 派生的集合重写 GetKnownTypes 方法返回的数组<xref:System.Type>集合可以包含表示类型的对象。</xref:System.Type>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the GetKnownTypes method. The `CycleCollection` implementation of GetKnownTypes returns a <xref:System.Type> array of known types, including `Bicycle` and `Tricycle` types. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_0_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_0_1.vb)]"
  syntax:
    content: protected virtual Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "有序的数组<xref:System.Type>识别的类型的对象<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>对象的集合可以包含。</xref:System.Type> 默认实现返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnClear
  id: OnClear
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: StateManagedCollection.OnClear()
  fullName: System.Web.UI.StateManagedCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写之前, 执行附加工作<xref:System.Web.UI.StateManagedCollection.Clear*>方法从集合中移除所有项。</xref:System.Web.UI.StateManagedCollection.Clear*>"
  remarks: "从派生的集合<xref:System.Web.UI.StateManagedCollection>可以重写 OnClear 方法以从集合使用中移除所有项之前执行任何额外工作<xref:System.Web.UI.StateManagedCollection.Clear%2A>方法。</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnClearComplete
  id: OnClearComplete
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: StateManagedCollection.OnClearComplete()
  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写之后执行附加工作<xref:System.Web.UI.StateManagedCollection.Clear*>方法完成从集合中移除所有项。</xref:System.Web.UI.StateManagedCollection.Clear*>"
  remarks: "从派生的集合<xref:System.Web.UI.StateManagedCollection>可以重写 OnClearComplete 方法以从集合使用中移除所有项之后执行任何额外工作<xref:System.Web.UI.StateManagedCollection.Clear%2A>方法。</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  id: OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnInsert(Int32,Object)
  nameWithType: StateManagedCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写之前, 执行附加工作&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt;或&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt;方法向集合添加一项。"
  remarks: "从派生的集合<xref:System.Web.UI.StateManagedCollection>可以重写 OnInsert 方法以执行任何额外的工作项添加到集合使用之前<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>或<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>方法。</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnInsert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引位置`value`应由插入&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt;方法。"
    - id: value
      type: System.Object
      description: "要插入的对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写之后执行附加工作&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt;或&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt;方法向集合添加一项。"
  remarks: "从派生的集合<xref:System.Web.UI.StateManagedCollection>可以重写 OnInsertComplete 方法以执行任何额外的工作项添加到集合使用后<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>或<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>方法。</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引位置`value`由插入&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt;方法。"
    - id: value
      type: System.Object
      description: "对象插入到<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  id: OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnRemove(Int32,Object)
  nameWithType: StateManagedCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写之前, 执行附加工作&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt;或&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt;方法从集合中移除指定的项。"
  remarks: "从派生的集合<xref:System.Web.UI.StateManagedCollection>可以重写 OnRemove 方法以执行任何额外工作之前从集合中移除项,<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A>或<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A>方法。</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnRemove (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "若要删除，这是项的从零开始索引时使用&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt;调用。"
    - id: value
      type: System.Object
      description: "要移除的对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>、 哪些情况下使用&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt;调用。"
  overload: System.Web.UI.StateManagedCollection.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写之后执行附加工作&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt;或&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt;方法从集合中移除指定的项。"
  remarks: "从派生的集合<xref:System.Web.UI.StateManagedCollection>可以重写 OnRemoveComplete 方法后从集合中移除项执行任何其他工作<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A>或<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A>方法。</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "若要删除，这是项的从零开始索引时使用&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt;调用。"
    - id: value
      type: System.Object
      description: "从删除的对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>、 哪些情况下使用&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt;调用。"
  overload: System.Web.UI.StateManagedCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: StateManagedCollection.OnValidate(Object)
  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写时验证的元素<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  remarks: "调用 OnValidate 方法来验证通过操作的对象<xref:System.Web.UI.StateManagedCollection>实现<xref:System.Collections.IList>接口方法。</xref:System.Collections.IList> </xref:System.Web.UI.StateManagedCollection> 默认实现是验证由集合操作的对象不是`null`; 但是，从派生的集合<xref:System.Web.UI.StateManagedCollection>重写 OnValidate 方法以执行任何其他验证，如类型检查。</xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.IStateManager&quot;> </xref>验证。"
  overload: System.Web.UI.StateManagedCollection.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.SetDirty
  id: SetDirty
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: SetDirty()
  nameWithType: StateManagedCollection.SetDirty()
  fullName: System.Web.UI.StateManagedCollection.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "强制将整个<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合序列化为视图状态。"
  remarks: "SetDirty 方法强制<xref:System.Web.UI.StateManagedCollection>集合以进行完全序列化 (而<xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>方法将节约仅更改信息)。</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> </xref:System.Web.UI.StateManagedCollection> 在集合中的重要方式已更改，更改信息不足以重新创建该对象在内存中视图状态时，这非常有用。"
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: StateManagedCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "当在派生类中重写，指示<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;></xref>包含在集合以其全部状态记录到视图状态，而不是仅记录更改信息。"
  remarks: "内部调用 SetDirtyObject 方法<xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>， <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>，和<xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>方法。</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the abstract SetDirtyObject method. The `CycleCollection` uses a <xref:System.Web.UI.StateBag> object to store its view-state information, and simply delegates the call to the <xref:System.Web.UI.StateBag.SetDirty%2A> method of the <xref:System.Web.UI.StateBag> object. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_2_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_2_1.vb)]"
  syntax:
    content: protected abstract void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> ，自身进行完全序列。"
  overload: System.Web.UI.StateManagedCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取包含中的元素数<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "中的元素数<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合已同步 （线程安全）。 此方法返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取可以用于对访问进行同步的对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。 此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>在所有情况下。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返回循环访问的迭代器<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>可用于循环访问<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将项添加到<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>和<xref:System.Web.UI.StateManagedCollection.OnInsert%2A>之前该元素已添加到集合中，调用方法时与<xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A>方法之后添加元素被调用。</xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnInsert%2A> </xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The<xref uid=&quot;langword_csharp_ object &quot; name=&quot; object &quot; href=&quot;&quot;></xref>to add to the <xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "在该位置插入新元素的位置。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: StateManagedCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "中移除所有项从<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnClear%2A>方法之前调用<xref:System.Web.UI.StateManagedCollection.Clear%2A>调用方法时，与<xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A>方法后，会调用<xref:System.Web.UI.StateManagedCollection.Clear%2A>已完成从集合中删除元素。</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> </xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection.OnClear%2A>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定是否<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合包含特定值。"
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法来验证`value`检查集合之前。</xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>要在中查找<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在找到该对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>为值参数，传递<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>返回。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "确定中某个指定项的索引<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法来验证`value`返回索引之前。</xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在中找到的对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。"
    return:
      type: System.Int32
      description: "索引<code> value </code>，如果它是在列表中找到; 否则为-1。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将一项插入<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合中指定索引处。"
  remarks: "如果`index`为-1，`value`追加到的开头<xref:System.Web.UI.StateManagedCollection>集合。</xref:System.Web.UI.StateManagedCollection> 如果`index`等于集合中的项的数目`value`追加到集合的末尾。"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引位置`value`应插入。"
    - id: value
      type: System.Object
      description: "要插入的对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定<code> index </code>超出了集合的范围。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>是只读的。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合具有固定的大小。 此方法返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合是只读的。"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>只读的; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>的指定索引处的元素。"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "要获取的元素的从零开始的索引。"
    return:
      type: System.Object
      description: "指定索引处的元素。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定<code> index </code>超出了集合的范围。"
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "移除从指定的对象的第一个匹配项<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合。"
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法来验证`value`从集合中移除值之前。</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.OnRemove%2A>之前删除此对象，调用方法和<xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A>移除对象后调用方法。</xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnRemove%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要移除的对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>是只读的。"
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "删除<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>的指定索引处的元素。"
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法来验证`value`从集合中移除值之前。</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.OnRemove%2A>之前删除此对象，调用方法和<xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A>移除对象后调用方法。</xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnRemove%2A>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要移除的项的从零开始的索引。"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>是只读的。"
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合是否保存对其视图状态的更改。"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合被标记为保存其自己的状态和所有状态<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>项包含; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "还原的以前保存的视图状态<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合和<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>其包含的项。"
  remarks: "此方法还原保存的视图状态信息<xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>方法。</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>       视图状态是服务器控件的属性的值的累计。 这些值会自动放在服务器控件的<xref:System.Web.UI.Control.ViewState%2A>属性，它是<xref:System.Web.UI.StateBag>类</xref:System.Web.UI.StateBag>的实例</xref:System.Web.UI.Control.ViewState%2A> 保存状态的服务器控件生命周期阶段后，此属性的值随后会保存到一个字符串对象。 有关详细信息，请参阅[NIB: ASP.NET Web 服务器控件](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)。       此方法主要由控件开发人员使用。 你可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "一个表示的集合和集合元素的状态还原的对象。"
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "将保存的更改<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合和每个<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>对象，它包含在时间后页回发到服务器。"
  remarks: "此方法主要由控件开发人员使用。       视图状态是服务器控件的属性的值的累计。 这些值会自动放在服务器控件的<xref:System.Web.UI.Control.ViewState%2A>属性，它是<xref:System.Web.UI.StateBag>类</xref:System.Web.UI.StateBag>的实例</xref:System.Web.UI.Control.ViewState%2A> 保存状态的服务器控件生命周期阶段后，此属性的值随后会保存到一个字符串对象。 有关详细信息，请参阅[NIB: ASP.NET Web 服务器控件](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)。       视图状态保存时，此字符串对象返回到客户端为存储在一个 HTML 隐藏元素一个变量 (`<input type=&quot;hidden&quot;>`)。 在创作自定义服务器控件时，你可以通过重写此方法并修改你的服务器控件的提高效率<xref:System.Web.UI.Control.ViewState%2A>属性。</xref:System.Web.UI.Control.ViewState%2A> 有关详细信息，请参阅[NIB: ASP.NET Web 服务器控件](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)和[ASP.NET 状态管理概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "包含视图状态的更改的对象<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>和其包含的项。 当与集合及其元素关联的视图状态时，此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "导致<xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>集合和每个<xref href=&quot;System.Web.UI.IStateManager&quot;></xref>对象包含跟踪对它们的视图状态的更改，以便它们可以在相同页的请求之间得以保持。"
  remarks: 'View state is the accumulation of the values of a server control''s properties. These values are automatically placed in the server control''s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property''s value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).'
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.StateManagedCollection.#ctor
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: StateManagedCollection()
  nameWithType: StateManagedCollection.StateManagedCollection()
  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()
- uid: System.Web.UI.StateManagedCollection.Clear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Clear()
  nameWithType: StateManagedCollection.Clear()
  fullName: System.Web.UI.StateManagedCollection.Clear()
- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: StateManagedCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.StateManagedCollection.Count
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Count
  nameWithType: StateManagedCollection.Count
  fullName: System.Web.UI.StateManagedCollection.Count
- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: StateManagedCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)
- uid: System.Web.UI.StateManagedCollection.GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: StateManagedCollection.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: StateManagedCollection.GetKnownTypes()
  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.StateManagedCollection.OnClear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClear()
  nameWithType: StateManagedCollection.OnClear()
  fullName: System.Web.UI.StateManagedCollection.OnClear()
- uid: System.Web.UI.StateManagedCollection.OnClearComplete
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: StateManagedCollection.OnClearComplete()
  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()
- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsert(Int32,Object)
  nameWithType: StateManagedCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemove(Int32,Object)
  nameWithType: StateManagedCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: StateManagedCollection.OnValidate(Object)
  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)
- uid: System.Web.UI.StateManagedCollection.SetDirty
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirty()
  nameWithType: StateManagedCollection.SetDirty()
  fullName: System.Web.UI.StateManagedCollection.SetDirty()
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: StateManagedCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: StateManagedCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.StateManagedCollection.#ctor*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: StateManagedCollection
  nameWithType: StateManagedCollection.StateManagedCollection
- uid: System.Web.UI.StateManagedCollection.Clear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Clear
  nameWithType: StateManagedCollection.Clear
- uid: System.Web.UI.StateManagedCollection.CopyTo*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CopyTo
  nameWithType: StateManagedCollection.CopyTo
- uid: System.Web.UI.StateManagedCollection.Count*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Count
  nameWithType: StateManagedCollection.Count
- uid: System.Web.UI.StateManagedCollection.CreateKnownType*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: StateManagedCollection.CreateKnownType
- uid: System.Web.UI.StateManagedCollection.GetEnumerator*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: StateManagedCollection.GetEnumerator
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: StateManagedCollection.GetKnownTypes
- uid: System.Web.UI.StateManagedCollection.OnClear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClear
  nameWithType: StateManagedCollection.OnClear
- uid: System.Web.UI.StateManagedCollection.OnClearComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: StateManagedCollection.OnClearComplete
- uid: System.Web.UI.StateManagedCollection.OnInsert*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsert
  nameWithType: StateManagedCollection.OnInsert
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: StateManagedCollection.OnInsertComplete
- uid: System.Web.UI.StateManagedCollection.OnRemove*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemove
  nameWithType: StateManagedCollection.OnRemove
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: StateManagedCollection.OnRemoveComplete
- uid: System.Web.UI.StateManagedCollection.OnValidate*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnValidate
  nameWithType: StateManagedCollection.OnValidate
- uid: System.Web.UI.StateManagedCollection.SetDirty*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirty
  nameWithType: StateManagedCollection.SetDirty
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: StateManagedCollection.SetDirtyObject
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: StateManagedCollection.System.Collections.IList.Add
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: StateManagedCollection.System.Collections.IList.Clear
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: StateManagedCollection.System.Collections.IList.Contains
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: StateManagedCollection.System.Collections.IList.Insert
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: StateManagedCollection.System.Collections.IList.Item
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: StateManagedCollection.System.Collections.IList.Remove
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState
