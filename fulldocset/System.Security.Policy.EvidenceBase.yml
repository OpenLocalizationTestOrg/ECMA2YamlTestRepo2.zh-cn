### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.EvidenceBase
  id: EvidenceBase
  children:
  - System.Security.Policy.EvidenceBase.#ctor
  - System.Security.Policy.EvidenceBase.Clone
  langs:
  - csharp
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
  type: Class
  summary: "提供要用作证据必须派生的所有对象的基类。"
  remarks: "之前[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]，几乎任何对象无法用作 evidence 对象，如果要将它应用于证据的宿主代码。 例如，某些.NET Framework 代码识别<xref:System.Uri?displayProperty=fullName>对象作为证据。</xref:System.Uri?displayProperty=fullName> 公共语言运行时 (CLR) 将证据对象视为<xref:System.Object?displayProperty=fullName>引用，而且未对它们应用任何类型的安全。</xref:System.Object?displayProperty=fullName>       由于没有隐式限制无法在其使用类型为证据对象，这就造成问题。 具体而言，用作证据任何对象必须是可序列化，并且不能`null`。 如果未满足这些要求，而 CLR 引发了异常，只要执行了所需的这些假设一个操作。       中引入了 EvidenceBase 类，该类所有的证据对象必须派生自，[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]启用约束的可用作证据的对象类型，以便为所有证据对象中添加新功能和需求的能力。 EvidenceBase 类在实例化，时确保证据对象是可序列化。 此外，它使新的证据要求通过将新的默认实现添加到基类创建。       由 CLR 使用因为证据对象已在进行了更新的所有类型[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]从 EvidenceBase 派生。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EvidenceBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.#ctor
  id: '#ctor'
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "初始化的新实例<xref href=&quot;System.Security.Policy.EvidenceBase&quot;></xref>类。"
  remarks: "要用作证据必须可序列化的所有对象。 由于可序列化属性不会传播到派生类，你必须将标记为可序列化，任何派生的类型。"
  syntax:
    content: protected EvidenceBase ();
    parameters: []
  overload: System.Security.Policy.EvidenceBase.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要用作证据不可序列化的对象。"
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.Clone
  id: Clone
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "创建新对象的当前实例的完整副本。"
  remarks: "重复的副本是在集合中包括所有证据对象的完整副本。"
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "该证据对象的重复副本。"
  overload: System.Security.Policy.EvidenceBase.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Policy.EvidenceBase.#ctor
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
- uid: System.Security.Policy.EvidenceBase.Clone
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.#ctor*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.Clone*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone
  nameWithType: EvidenceBase.Clone
