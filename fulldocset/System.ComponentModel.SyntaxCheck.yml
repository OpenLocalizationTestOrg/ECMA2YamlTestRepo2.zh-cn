### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.SyntaxCheck
  id: SyntaxCheck
  children:
  - System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  - System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  - System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  langs:
  - csharp
  name: SyntaxCheck
  nameWithType: SyntaxCheck
  fullName: System.ComponentModel.SyntaxCheck
  type: Class
  summary: "提供方法以验证的计算机名称和路径符合特定的语法。 此类不能被继承。"
  syntax:
    content: public static class SyntaxCheck
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  id: CheckMachineName(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckMachineName(String)
  nameWithType: SyntaxCheck.CheckMachineName(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckMachineName(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "检查以确认它不包含的计算机名称的语法&quot;\\&quot;。"
  syntax:
    content: public static bool CheckMachineName (string value);
    parameters:
    - id: value
      type: System.String
      description: "包含要检查的计算机名称的字符串。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> value </code>与正确的计算机名称格式匹配; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.SyntaxCheck.CheckMachineName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  id: CheckPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckPath(String)
  nameWithType: SyntaxCheck.CheckPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckPath(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "检查以查看它是否以开头的路径的语法&quot;\\\\\\&quot;。"
  syntax:
    content: public static bool CheckPath (string value);
    parameters:
    - id: value
      type: System.String
      description: "包含要检查的路径的字符串。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> value </code>与正确的路径格式匹配; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.SyntaxCheck.CheckPath*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  id: CheckRootedPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckRootedPath(String)
  nameWithType: SyntaxCheck.CheckRootedPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckRootedPath(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "检查以查看以开头的路径的语法&quot;\\&quot;或驱动器号&quot;c:&quot;。"
  syntax:
    content: public static bool CheckRootedPath (string value);
    parameters:
    - id: value
      type: System.String
      description: "包含要检查的路径的字符串。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> value </code>与正确的路径格式匹配; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.SyntaxCheck.CheckRootedPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckMachineName(String)
  nameWithType: SyntaxCheck.CheckMachineName(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckMachineName(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckPath(String)
  nameWithType: SyntaxCheck.CheckPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckPath(String)
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckRootedPath(String)
  nameWithType: SyntaxCheck.CheckRootedPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckRootedPath(String)
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckMachineName
  nameWithType: SyntaxCheck.CheckMachineName
- uid: System.ComponentModel.SyntaxCheck.CheckPath*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckPath
  nameWithType: SyntaxCheck.CheckPath
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckRootedPath
  nameWithType: SyntaxCheck.CheckRootedPath
