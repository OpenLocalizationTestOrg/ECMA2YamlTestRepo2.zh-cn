### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaDatatype
  id: XmlSchemaDatatype
  children:
  - System.Xml.Schema.XmlSchemaDatatype.#ctor
  - System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  - System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  - System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  - System.Xml.Schema.XmlSchemaDatatype.TypeCode
  - System.Xml.Schema.XmlSchemaDatatype.ValueType
  - System.Xml.Schema.XmlSchemaDatatype.Variety
  langs:
  - csharp
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
  type: Class
  summary: "XmlSchemaDatatype 类是一个抽象类，用于将 XML 架构定义语言 (XSD) 类型映射到公共语言运行时 (CLR) 类型。"
  remarks: ''
  example:
  - "The following example shows use of the XmlSchemaDatatype class.  \n  \n [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_39_1.cpp)]\n [!code-cs[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_39_1.cs)]\n [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_39_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_39_2.xsd)]"
  syntax:
    content: public abstract class XmlSchemaDatatype
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: XmlSchemaDatatype()
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype()
  fullName: System.Xml.Schema.XmlSchemaDatatype.XmlSchemaDatatype()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的新实例<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>类。"
  remarks: "派生的类构造函数来初始化此类型中的状态将调用此构造函数。"
  syntax:
    content: protected XmlSchemaDatatype ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaDatatype.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  id: ChangeType(System.Object,System.Type)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ChangeType(Object,Type)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "将指定的值，其类型一种有效的公共语言运行时 (CLR) 表示形式的 XML 架构类型由<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref>，为指定的 CLR 类型。"
  remarks: "有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>类和转换的 XML 数据类型，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)主题。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public virtual object ChangeType (object value, Type targetType);
    parameters:
    - id: value
      type: System.Object
      description: "要转换为指定类型的输入的值。"
    - id: targetType
      type: System.Type
      description: "要转换的输入的值的目标类型。"
    return:
      type: System.Object
      description: "转换后的输入的值。"
  overload: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Object>或<xref:System.Type>参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type> </xref:System.Object>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "表示的类型<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>不支持从指定为指定的类型的值类型的转换。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  id: ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ChangeType(Object,Type,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "将指定的值，其类型一种有效的公共语言运行时 (CLR) 表示形式的 XML 架构类型由<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref>，使用指定的 CLR 类型到<xref:System.Xml.IXmlNamespaceResolver>如果<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>表示 xs: qname 类型派生自它。</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>类和转换的 XML 数据类型，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)主题。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: value
      type: System.Object
      description: "要转换为指定类型的输入的值。"
    - id: targetType
      type: System.Type
      description: "要转换的输入的值的目标类型。"
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>用于解析命名空间前缀。</xref:System.Xml.IXmlNamespaceResolver> 这是仅使用如果<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> xs: qname 类型派生自它的表示。"
    return:
      type: System.Object
      description: "转换后的输入的值。"
  overload: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Object>或<xref:System.Type>参数是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type> </xref:System.Object>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "表示的类型<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>不支持从指定为指定的类型的值类型的转换。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  id: IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: IsDerivedFrom(XmlSchemaDatatype)
  nameWithType: XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  fullName: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "IsDerivedFrom 方法始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);
    parameters:
    - id: datatype
      type: System.Xml.Schema.XmlSchemaDatatype
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>."
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  id: ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "当在派生类中重写时验证<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定根据内置或用户定义的简单类型。"
  remarks: "ParseValue 方法验证`string`指定根据内置或用户定义的简单类型。 例如，如果此<xref:System.Xml.Schema.XmlSchemaDatatype>表示类型 xs: date，则实例<xref:System.DateTime>返回。</xref:System.DateTime> </xref:System.Xml.Schema.XmlSchemaDatatype>       以下是 ParseValue 方法的验证过程中执行的步骤。      1.  将指定为值转换`string`到其相应的公共语言运行时 (CLR) 类型。      2.  验证值不违反任何方面的简单类型定义。       然后返回转换后的值为<xref:System.Object>可以安全地强制转换为返回的类型和<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>属性。</xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> </xref:System.Object>       当<xref:System.Xml.Schema.XmlSchemaDatatype>对象表示列表类型，输入`string`值转换为的一个或多个对象的列表。</xref:System.Xml.Schema.XmlSchemaDatatype> 当<xref:System.Xml.Schema.XmlSchemaDatatype>对象表示列表类型，则尝试将输入的值作为联合的成员类型解析。</xref:System.Xml.Schema.XmlSchemaDatatype> 如果尝试分析失败，然后尝试联合的下一个成员进行转换，直到分析成功或没有其他要分析的成员类型。 如果分析失败，则引发异常。"
  example:
  - "The following example retrieves the `LotteryNumber` simple type from the example.xsd file as an <xref:System.Xml.Schema.XmlSchemaSimpleType> and then validates the `string` value of `5` using the ParseValue method.  \n  \n [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/cpp/b4af643f-b5cd-41ee-8b57-_1.cpp)]\n [!code-cs[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/csharp/b4af643f-b5cd-41ee-8b57-_1.cs)]\n [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/visualbasic/b4af643f-b5cd-41ee-8b57-_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/add/codesnippet/xml/b4af643f-b5cd-41ee-8b57-_2.xsd)]"
  syntax:
    content: public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);
    parameters:
    - id: s
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>以对简单类型进行验证。"
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>用于进行分析时的原子化<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>对象表示 xs:NCName 类型。</xref:System.Xml.XmlNameTable>"
    - id: nsmgr
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>要在分析时使用对象<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>如果此<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>对象表示 xs: qname 类型。</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Object
      description: "<xref:System.Object>，可以将安全地强制转换为返回的类型<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType*>属性。</xref:System.Xml.Schema.XmlSchemaDatatype.ValueType*> </xref:System.Object>"
  overload: System.Xml.Schema.XmlSchemaDatatype.ParseValue*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "输入的值不是此 W3C XML 架构类型的有效实例。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "要分析的值不能为<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  id: TokenizedType
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
  fullName: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "当在派生类中重写时获取的类型<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> World Wide Web Consortium (W3C) XML 中指定 1.0 规范。"
  remarks: "允许`string`CDATA 部分类型作为特定 XML 类型，例如，读取。       下表显示的令牌类型。      |XmlTokenizedType |说明 |  |----------------------|-----------------|  |`CDATA`|CDATA 类型 |  |`ID`| ID 类型 |  |`IDREF`|IDREF 类型 |  |`IDREFS`|IDREFS 类型 |  |`ENTITY`|实体类型 |  |`ENTITIES`|实体类型 |  |`NMTOKEN`|NMTOKEN 类型 |  |`NMTOKENS`|NMTOKENS 类型 |  |`NOTATION`|NOTATION 类型 |  |`ENUMERATION`|枚举类型 |  |`QName`|QName 类型 |  |`NCName`|NCName 类型 |  |`None`|没有类型 |"
  syntax:
    content: public abstract System.Xml.XmlTokenizedType TokenizedType { get; }
    return:
      type: System.Xml.XmlTokenizedType
      description: "An <xref href=&quot;System.Xml.XmlTokenizedType&quot;></xref> value for the <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaDatatype.TokenizedType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  id: TypeCode
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
  fullName: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取<xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;></xref>简单类型值。"
  remarks: "W3C XML 架构的列表类型，如由不表示 xs:ENTITIES、 xs:NMTOKENS 和 xs: idrefs<xref:System.Xml.Schema.XmlTypeCode>枚举。</xref:System.Xml.Schema.XmlTypeCode> 而是按<xref:System.Xml.Schema.XmlTypeCode>值 xs:ENTITY、 xs:NMTOKEN 和 xs: idref<xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A>属性的<xref:System.Xml.Schema.XmlSchemaDatatype>对象设置为<xref:System.Xml.Schema.XmlSchemaDatatypeVariety>。</xref:System.Xml.Schema.XmlSchemaDatatypeVariety></xref:System.Xml.Schema.XmlSchemaDatatype></xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A>类型</xref:System.Xml.Schema.XmlTypeCode>表示      1> [!NOTE]&1;> xs:anySimpleType 与 xs: anytype 类型不表示<xref:System.Xml.Schema.XmlTypeCode>枚举。</xref:System.Xml.Schema.XmlTypeCode> 这些都包含在<xref:System.Xml.Schema.XmlSchemaDatatype>对象<xref:System.Xml.Schema.XmlTypeCode>其值是<xref:System.Xml.Schema.XmlTypeCode>为 xs:anySimpleType 或<xref:System.Xml.Schema.XmlTypeCode>为 xs: anytype。</xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlSchemaDatatype>"
  example:
  - For an example of the TypeCode property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.
  syntax:
    content: public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }
    return:
      type: System.Xml.Schema.XmlTypeCode
      description: "<xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;> </xref>简单类型值。"
  overload: System.Xml.Schema.XmlSchemaDatatype.TypeCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType
  id: ValueType
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
  fullName: System.Xml.Schema.XmlSchemaDatatype.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "当在派生类中重写时获取的项的公共语言运行时 (CLR) 类型。"
  remarks: "ValueType 属性获取项的 CLR 的类型。 例如，类型的元素`xs:int`将具有的 ValueType<xref:System.Int32>默认情况下。</xref:System.Int32> 但是，ValueType 可能是任何一种可以映射到有效类型`xs:int`，如<xref:System.Int16>或<xref:System.Double>.</xref:System.Double> </xref:System.Int16>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  example:
  - For an example of the ValueType property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.
  syntax:
    content: public abstract Type ValueType { get; }
    return:
      type: System.Type
      description: "项的公共语言运行时 (CLR) 类型。"
  overload: System.Xml.Schema.XmlSchemaDatatype.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety
  id: Variety
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
  fullName: System.Xml.Schema.XmlSchemaDatatype.Variety
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取<xref href=&quot;System.Xml.Schema.XmlSchemaDatatypeVariety&quot;></xref>简单类型值。"
  syntax:
    content: public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDatatypeVariety
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaDatatypeVariety&quot;> </xref>简单类型值。"
  overload: System.Xml.Schema.XmlSchemaDatatype.Variety*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: XmlSchemaDatatype()
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype()
  fullName: System.Xml.Schema.XmlSchemaDatatype.XmlSchemaDatatype()
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType(Object,Type)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType(Object,Type,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: IsDerivedFrom(XmlSchemaDatatype)
  nameWithType: XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  fullName: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaDatatype
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
  fullName: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
- uid: System.Xml.XmlTokenizedType
  parent: System.Xml
  isExternal: false
  name: XmlTokenizedType
  nameWithType: XmlTokenizedType
  fullName: System.Xml.XmlTokenizedType
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
  fullName: System.Xml.Schema.XmlSchemaDatatype.TypeCode
- uid: System.Xml.Schema.XmlTypeCode
  parent: System.Xml.Schema
  isExternal: false
  name: XmlTypeCode
  nameWithType: XmlTypeCode
  fullName: System.Xml.Schema.XmlTypeCode
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
  fullName: System.Xml.Schema.XmlSchemaDatatype.ValueType
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
  fullName: System.Xml.Schema.XmlSchemaDatatype.Variety
- uid: System.Xml.Schema.XmlSchemaDatatypeVariety
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatypeVariety
  nameWithType: XmlSchemaDatatypeVariety
  fullName: System.Xml.Schema.XmlSchemaDatatypeVariety
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType
  nameWithType: XmlSchemaDatatype.ChangeType
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: IsDerivedFrom
  nameWithType: XmlSchemaDatatype.IsDerivedFrom
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ParseValue
  nameWithType: XmlSchemaDatatype.ParseValue
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
