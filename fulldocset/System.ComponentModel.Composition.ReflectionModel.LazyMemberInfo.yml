### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  id: LazyMemberInfo
  children:
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)
  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)
  langs:
  - csharp
  name: LazyMemberInfo
  nameWithType: LazyMemberInfo
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  type: Struct
  summary: "表示<xref:System.Reflection.MemberInfo>之前请求对象不会加载程序集或创建的对象。</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public struct LazyMemberInfo
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)
  id: '#ctor(System.Reflection.MemberInfo)'
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: LazyMemberInfo(MemberInfo)
  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberInfo)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberInfo)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo&quot;></xref>类，表示指定的成员。"
  syntax:
    content: public LazyMemberInfo (System.Reflection.MemberInfo member);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "要表示的成员。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})
  id: '#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})'
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: LazyMemberInfo(MemberTypes,Func<MemberInfo>)
  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberTypes,Func<MemberInfo>)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberTypes,Func<MemberInfo>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo&quot;></xref>具有指定访问器的指定类型的成员的类。"
  syntax:
    content: public LazyMemberInfo (System.Reflection.MemberTypes memberType, Func<System.Reflection.MemberInfo[]> accessorsCreator);
    parameters:
    - id: memberType
      type: System.Reflection.MemberTypes
      description: "表示成员的类型。"
    - id: accessorsCreator
      type: System.Func{System.Reflection.MemberInfo[]}
      description: "一个函数，其返回值是表示成员的访问的集合。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])
  id: '#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])'
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: LazyMemberInfo(MemberTypes,MemberInfo[])
  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberTypes,MemberInfo[])
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberTypes,MemberInfo[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo&quot;></xref>具有指定访问器的指定类型的成员的类。"
  syntax:
    content: public LazyMemberInfo (System.Reflection.MemberTypes memberType, System.Reflection.MemberInfo[] accessors);
    parameters:
    - id: memberType
      type: System.Reflection.MemberTypes
      description: "表示成员的类型。"
    - id: accessors
      type: System.Reflection.MemberInfo[]
      description: "所表示的成员访问器数组。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "一个或多个中的对象<code> accessors </code>不是此成员的有效访问器。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: LazyMemberInfo.Equals(Object)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(Object)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "指示此实例与指定的对象是否相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比较的另一个对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> obj </code>和该实例具有相同的类型并表示相同的值; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors
  id: GetAccessors
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: GetAccessors()
  nameWithType: LazyMemberInfo.GetAccessors()
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "获取表示成员的访问器数组。"
  syntax:
    content: public System.Reflection.MemberInfo[] GetAccessors ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "所表示的成员访问器数组。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "无效的一个或多个访问器，此对象中。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: LazyMemberInfo.GetHashCode()
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "返回此实例的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "一个 32 位有符号的整数，是此实例的哈希代码。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType
  id: MemberType
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: LazyMemberInfo.MemberType
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "获取表示成员的类型。"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "表示成员的类型。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)
  id: op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: op_Equality(LazyMemberInfo,LazyMemberInfo)
  nameWithType: LazyMemberInfo.op_Equality(LazyMemberInfo,LazyMemberInfo)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(LazyMemberInfo,LazyMemberInfo)
  type: Operator
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "确定是否两个指定<xref href=&quot;System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo&quot;></xref>对象是否相等。"
  syntax:
    content: public static bool op_Equality (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);
    parameters:
    - id: left
      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
      description: "要测试的第一个对象。"
    - id: right
      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
      description: "要测试的第二个对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对象相等，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)
  id: op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  langs:
  - csharp
  name: op_Inequality(LazyMemberInfo,LazyMemberInfo)
  nameWithType: LazyMemberInfo.op_Inequality(LazyMemberInfo,LazyMemberInfo)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(LazyMemberInfo,LazyMemberInfo)
  type: Operator
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.ReflectionModel
  summary: "确定是否两个指定<xref href=&quot;System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo&quot;></xref>对象是否不相等。"
  syntax:
    content: public static bool op_Inequality (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);
    parameters:
    - id: left
      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
      description: "要测试的第一个对象。"
    - id: right
      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
      description: "要测试的第二个对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对象相等，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: LazyMemberInfo(MemberInfo)
  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberInfo)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberInfo)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: LazyMemberInfo(MemberTypes,Func<MemberInfo>)
  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberTypes,Func<MemberInfo>)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberTypes,Func<MemberInfo>)
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Func{System.Reflection.MemberInfo[]}
  parent: System
  isExternal: true
  name: Func<MemberInfo>
  nameWithType: Func<MemberInfo>
  fullName: System.Func<System.Reflection.MemberInfo[]>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Reflection.MemberInfo[]>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: LazyMemberInfo(MemberTypes,MemberInfo[])
  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberTypes,MemberInfo[])
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberTypes,MemberInfo[])
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: LazyMemberInfo.Equals(Object)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: GetAccessors()
  nameWithType: LazyMemberInfo.GetAccessors()
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors()
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: LazyMemberInfo.GetHashCode()
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: MemberType
  nameWithType: LazyMemberInfo.MemberType
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: op_Equality(LazyMemberInfo,LazyMemberInfo)
  nameWithType: LazyMemberInfo.op_Equality(LazyMemberInfo,LazyMemberInfo)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(LazyMemberInfo,LazyMemberInfo)
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  parent: System.ComponentModel.Composition.ReflectionModel
  isExternal: false
  name: LazyMemberInfo
  nameWithType: LazyMemberInfo
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: op_Inequality(LazyMemberInfo,LazyMemberInfo)
  nameWithType: LazyMemberInfo.op_Inequality(LazyMemberInfo,LazyMemberInfo)
  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(LazyMemberInfo,LazyMemberInfo)
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor*
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: LazyMemberInfo
  nameWithType: LazyMemberInfo.LazyMemberInfo
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals*
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: Equals
  nameWithType: LazyMemberInfo.Equals
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors*
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: GetAccessors
  nameWithType: LazyMemberInfo.GetAccessors
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode*
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: GetHashCode
  nameWithType: LazyMemberInfo.GetHashCode
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType*
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: MemberType
  nameWithType: LazyMemberInfo.MemberType
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality*
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: op_Equality
  nameWithType: LazyMemberInfo.op_Equality
- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality*
  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
  isExternal: false
  name: op_Inequality
  nameWithType: LazyMemberInfo.op_Inequality
