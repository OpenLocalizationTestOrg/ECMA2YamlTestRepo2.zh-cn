### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs
  id: ViewStateChangedEventArgs
  children:
  - System.Activities.Presentation.View.ViewStateChangedEventArgs.#ctor(System.Activities.Presentation.Model.ModelItem,System.String,System.Object,System.Object)
  - System.Activities.Presentation.View.ViewStateChangedEventArgs.Key
  - System.Activities.Presentation.View.ViewStateChangedEventArgs.NewValue
  - System.Activities.Presentation.View.ViewStateChangedEventArgs.OldValue
  - System.Activities.Presentation.View.ViewStateChangedEventArgs.ParentModelItem
  langs:
  - csharp
  name: ViewStateChangedEventArgs
  nameWithType: ViewStateChangedEventArgs
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs
  type: Class
  summary: "提供一个对象用作包含有关已更改的视图状态的信息的事件自变量格式化。"
  remarks: "视图状态更改是对工作流所做的更改指对影响布局，例如︰ 挪动流程图中的某个元素或展开和折叠序列中的容器。"
  syntax:
    content: 'public class ViewStateChangedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.#ctor(System.Activities.Presentation.Model.ModelItem,System.String,System.Object,System.Object)
  id: '#ctor(System.Activities.Presentation.Model.ModelItem,System.String,System.Object,System.Object)'
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  langs:
  - csharp
  name: ViewStateChangedEventArgs(ModelItem,String,Object,Object)
  nameWithType: ViewStateChangedEventArgs.ViewStateChangedEventArgs(ModelItem,String,Object,Object)
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.ViewStateChangedEventArgs(ModelItem,String,Object,Object)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "创建的新实例<xref href=&quot;System.Activities.Presentation.View.ViewStateChangedEventArgs&quot;></xref>使用指定的父模型项和其具有旧值和新值的键/值对的类。"
  syntax:
    content: public ViewStateChangedEventArgs (System.Activities.Presentation.Model.ModelItem modelItem, string key, object newValue, object oldValue);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "用作模型的 XML 视图中的父元素的活动设计器模型中的项。"
    - id: key
      type: System.String
      description: "中指定的父元素的属性的名称。"
    - id: newValue
      type: System.Object
      description: "指定的属性键的新值。"
    - id: oldValue
      type: System.Object
      description: "指定的属性键的旧值。"
  overload: System.Activities.Presentation.View.ViewStateChangedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.Key
  id: Key
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  langs:
  - csharp
  name: Key
  nameWithType: ViewStateChangedEventArgs.Key
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.Key
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "获取一个特性键名称中指定的视图元素。"
  syntax:
    content: public string Key { get; }
    return:
      type: System.String
      description: "表示视图元素中的键的名称的字符串。"
  overload: System.Activities.Presentation.View.ViewStateChangedEventArgs.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.NewValue
  id: NewValue
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: ViewStateChangedEventArgs.NewValue
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.NewValue
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "获取当前特性键/值对中键的新值。"
  syntax:
    content: public object NewValue { get; }
    return:
      type: System.Object
      description: "一个包含键值的对象。"
  overload: System.Activities.Presentation.View.ViewStateChangedEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.OldValue
  id: OldValue
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  langs:
  - csharp
  name: OldValue
  nameWithType: ViewStateChangedEventArgs.OldValue
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.OldValue
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "获取当前特性键/值对中键的旧值。"
  syntax:
    content: public object OldValue { get; }
    return:
      type: System.Object
      description: "一个包含键值的对象。"
  overload: System.Activities.Presentation.View.ViewStateChangedEventArgs.OldValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.ParentModelItem
  id: ParentModelItem
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  langs:
  - csharp
  name: ParentModelItem
  nameWithType: ViewStateChangedEventArgs.ParentModelItem
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.ParentModelItem
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "获取用作父项的模型的 XAML 视图中的活动设计器模型中的项。"
  syntax:
    content: public System.Activities.Presentation.Model.ModelItem ParentModelItem { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "活动设计器模型中的父元素。"
  overload: System.Activities.Presentation.View.ViewStateChangedEventArgs.ParentModelItem*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.#ctor(System.Activities.Presentation.Model.ModelItem,System.String,System.Object,System.Object)
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: ViewStateChangedEventArgs(ModelItem,String,Object,Object)
  nameWithType: ViewStateChangedEventArgs.ViewStateChangedEventArgs(ModelItem,String,Object,Object)
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.ViewStateChangedEventArgs(ModelItem,String,Object,Object)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.Key
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: Key
  nameWithType: ViewStateChangedEventArgs.Key
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.Key
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.NewValue
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: ViewStateChangedEventArgs.NewValue
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.NewValue
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.OldValue
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: ViewStateChangedEventArgs.OldValue
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.OldValue
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.ParentModelItem
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: ParentModelItem
  nameWithType: ViewStateChangedEventArgs.ParentModelItem
  fullName: System.Activities.Presentation.View.ViewStateChangedEventArgs.ParentModelItem
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.#ctor*
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: ViewStateChangedEventArgs
  nameWithType: ViewStateChangedEventArgs.ViewStateChangedEventArgs
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.Key*
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: Key
  nameWithType: ViewStateChangedEventArgs.Key
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.NewValue*
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: ViewStateChangedEventArgs.NewValue
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.OldValue*
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: ViewStateChangedEventArgs.OldValue
- uid: System.Activities.Presentation.View.ViewStateChangedEventArgs.ParentModelItem*
  parent: System.Activities.Presentation.View.ViewStateChangedEventArgs
  isExternal: false
  name: ParentModelItem
  nameWithType: ViewStateChangedEventArgs.ParentModelItem
