### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.QueryStringConverter
  id: QueryStringConverter
  children:
  - System.ServiceModel.Dispatcher.QueryStringConverter.#ctor
  - System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)
  - System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)
  - System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)
  langs:
  - csharp
  name: QueryStringConverter
  nameWithType: QueryStringConverter
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter
  type: Class
  summary: "此类将查询字符串中的参数转换为适当类型的对象。 它可以将从对象创建的参数转换为其查询字符串表示形式中。"
  remarks: "可以在 URL 查询字符串中指定参数。 此类采用字符串中指定这些参数，并将它们转换为对象。 例如，以下协定的定义。      ```   [ServiceContract]   interface Calculator   {      [WebGet(UriTemplate=&quot;Add?n1={n1}&n2={n2}&quot;)]      [OperationContract]      long Add(long n1, long n2);   }   ```A[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]服务实现此接口，并将其公开的终结点上<xref:System.ServiceModel.Description.WebHttpBehavior>在︰ //localhost:&8000;/MyCalcService。</xref:System.ServiceModel.Description.WebHttpBehavior> `Add`可以通过向︰ //localhost:&8000;/MyCalcService/添加发送 HTTP GET 调用服务操作？ n1 =&10; n2 =&5;。 QueryStringConverter 接收此 URL 并将转换为两个 URL 中指定的两个参数 （n1 和 n2）`long`使用适当的值的对象。       你可以从 QueryStringConverter 来控制如何将查询字符串参数映射到服务操作的参数中派生一个类。       QueryStringConverter 默认情况下支持以下类型:- <xref:System.Byte>- <xref:System.SByte>- <xref:System.Int16>- <xref:System.Int32>- <xref:System.Int64>- <xref:System.UInt16>- <xref:System.UInt32>- <xref:System.UInt64>- <xref:System.Single>- <xref:System.Double>- <xref:System.Char>- <xref:System.Decimal>- <xref:System.Boolean>- <xref:System.String>- <xref:System.DateTime>- <xref:System.TimeSpan>- <xref:System.Guid>-<xref:System.Byte>数组- <xref:System.Uri>- <xref:System.Object>- <xref:System.DateTimeOffset>-枚举的类型具有`TypeConverterAttribute`，可以将类型转换与字符串表示形式。</xref:System.DateTimeOffset> </xref:System.Object> </xref:System.Uri> </xref:System.Byte> </xref:System.Guid> </xref:System.TimeSpan> </xref:System.DateTime> </xref:System.String> </xref:System.Boolean> </xref:System.Decimal> </xref:System.Char> </xref:System.Double> </xref:System.Single> </xref:System.UInt64> </xref:System.UInt32> </xref:System.UInt16> </xref:System.Int64> </xref:System.Int32> </xref:System.Int16> </xref:System.SByte> </xref:System.Byte>"
  example:
  - "The following code shows how to use the QueryStringConverter class to convert between a string and a 32-bit integer.  \n  \n [!code-vb[QueryStringConverter#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_3_1.vb)]\n [!code-cs[QueryStringConverter#0](~/add/codesnippet/csharp/t-system.servicemodel.di_3_1.cs)]"
  syntax:
    content: public class QueryStringConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  langs:
  - csharp
  name: QueryStringConverter()
  nameWithType: QueryStringConverter.QueryStringConverter()
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.QueryStringConverter()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "初始化的新实例<xref href=&quot;System.ServiceModel.Dispatcher.QueryStringConverter&quot;></xref>类。"
  remarks: ''
  example:
  - "The following code shows how to create an instance of the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class.  \n  \n [!code-vb[QueryStringConverter#1](~/add/codesnippet/visualbasic/m-system.servicemodel.di_0_1.vb)]\n [!code-cs[QueryStringConverter#1](~/add/codesnippet/csharp/m-system.servicemodel.di_0_1.cs)]"
  syntax:
    content: public QueryStringConverter ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  langs:
  - csharp
  name: CanConvert(Type)
  nameWithType: QueryStringConverter.CanConvert(Type)
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "确定是否可以与字符串表示形式转换指定的类型。"
  remarks: ''
  example:
  - "The following code shows how to determine whether the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> can convert to and from the specified type.  \n  \n [!code-vb[QueryStringConverter#2](~/add/codesnippet/visualbasic/m-system.servicemodel.di_2_1.vb)]\n [!code-cs[QueryStringConverter#2](~/add/codesnippet/csharp/m-system.servicemodel.di_2_1.cs)]"
  syntax:
    content: public virtual bool CanConvert (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要转换。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "一个值，指定是否可以转换类型。"
  overload: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)
  id: ConvertStringToValue(System.String,System.Type)
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  langs:
  - csharp
  name: ConvertStringToValue(String,Type)
  nameWithType: QueryStringConverter.ConvertStringToValue(String,Type)
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(String,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "将查询字符串参数转换为指定的类型。"
  remarks: "如果`parameterType`是值类型，参数是`null`，然后的默认值`parameterType`返回。"
  example:
  - "The following code shows how to convert a string to the specified type.  \n  \n [!code-vb[QueryStringConverter#2](~/add/codesnippet/visualbasic/ee6d3c2e-1d57-42a1-a8dd-_1.vb)]\n [!code-cs[QueryStringConverter#2](~/add/codesnippet/csharp/ee6d3c2e-1d57-42a1-a8dd-_1.cs)]"
  syntax:
    content: public virtual object ConvertStringToValue (string parameter, Type parameterType);
    parameters:
    - id: parameter
      type: System.String
      description: "参数和值的字符串形式。"
    - id: parameterType
      type: System.Type
      description: "<xref:System.Type>要转换的参数。</xref:System.Type>"
    return:
      type: System.Object
      description: "已转换的参数。"
  overload: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "所提供的字符串不是正确的格式。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)
  id: ConvertValueToString(System.Object,System.Type)
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  langs:
  - csharp
  name: ConvertValueToString(Object,Type)
  nameWithType: QueryStringConverter.ConvertValueToString(Object,Type)
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(Object,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "将参数转换为查询字符串表示形式。"
  remarks: ''
  example:
  - "The following code shows how to convert a typed value into a string representation of the value.  \n  \n [!code-vb[QueryStringConverter#3](~/add/codesnippet/visualbasic/6edfb790-d20b-4419-8935-_1.vb)]\n [!code-cs[QueryStringConverter#3](~/add/codesnippet/csharp/6edfb790-d20b-4419-8935-_1.cs)]"
  syntax:
    content: public virtual string ConvertValueToString (object parameter, Type parameterType);
    parameters:
    - id: parameter
      type: System.Object
      description: "要转换的参数。"
    - id: parameterType
      type: System.Type
      description: "<xref:System.Type>要转换的参数。</xref:System.Type>"
    return:
      type: System.String
      description: "参数名称和值。"
  overload: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: QueryStringConverter()
  nameWithType: QueryStringConverter.QueryStringConverter()
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.QueryStringConverter()
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: CanConvert(Type)
  nameWithType: QueryStringConverter.CanConvert(Type)
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: ConvertStringToValue(String,Type)
  nameWithType: QueryStringConverter.ConvertStringToValue(String,Type)
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: ConvertValueToString(Object,Type)
  nameWithType: QueryStringConverter.ConvertValueToString(Object,Type)
  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(Object,Type)
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor*
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: QueryStringConverter
  nameWithType: QueryStringConverter.QueryStringConverter
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert*
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: CanConvert
  nameWithType: QueryStringConverter.CanConvert
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue*
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: ConvertStringToValue
  nameWithType: QueryStringConverter.ConvertStringToValue
- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString*
  parent: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: ConvertValueToString
  nameWithType: QueryStringConverter.ConvertValueToString
