### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "提供应用程序的会话状态服务。 此类不能被继承。"
  remarks: "SessionStateModule 是 ASP。NET 的默认会话状态处理程序。 它可将会话数据写入和从会话状态存储和引发检索**Session_OnStart**和**Session_OnEnd**事件。 有关如何使用 ASP.NET 会话状态存储和检索值的用户会话的详细信息，请参阅[ASP.NET 会话状态概述](~/add/includes/ajax-current-ext-md.md)。       你可以将 SessionStateModule 替换的自定义实现<xref:System.Web.IHttpModule>管理会话状态的接口。</xref:System.Web.IHttpModule> 有关自定义会话状态模块的示例，请参阅<xref:System.Web.SessionState.SessionStateUtility>类概述。</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "初始化的新实例<xref href=&quot;System.Web.SessionState.SessionStateModule&quot;></xref>类。"
  remarks: "此构造函数不应从应用程序代码中调用。       <xref:System.Web.HttpApplication>ASP.NET 应用程序启动时创建对象。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>对象调用<xref:System.Web.SessionState.SessionStateModule>构造函数来创建<xref:System.Web.SessionState.SessionStateModule>应用程序的对象。</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>应用程序配置中指定。</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "执行之前的最后一个清理代码<xref href=&quot;System.Web.SessionState.SessionStateModule&quot;></xref>从内存中释放对象。"
  remarks: "此方法不应从应用程序代码中调用。       <xref:System.Web.HttpApplication>ASP.NET 应用程序启动时创建对象。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>对象创建并初始化<xref:System.Web.SessionState.SessionStateModule>应用程序的对象并释放的对象时调用的 Dispose 方法。</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>应用程序配置中指定。</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "当会话结束时发生。"
  remarks: "结束事件引发在请求结束时<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>调用方法或会话已过期。</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 会话过期时的分钟数指定<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>属性传递没有请求正在进行的会话。</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       **Session_OnEnd**事件用于执行任何清理工作，如释放资源由会话的会话。       可通过添加一个名为的公共子例程指定结束事件的处理程序**Session_OnEnd**到 Global.asax 文件。      1> [!NOTE]&1;> **Session_OnEnd**事件才会支持时，会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>属性值是<xref:System.Web.SessionState.SessionStateMode>，这是默认设置。</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> 如果会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A>设置为<xref:System.Web.SessionState.SessionStateMode>或<xref:System.Web.SessionState.SessionStateMode>，则**Session_OnEnd** Global.asax 文件中的事件将被忽略。</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> 如果会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A>属性值是<xref:System.Web.SessionState.SessionStateMode>，然后支持**Session_OnEnd**事件由自定义会话状态存储提供程序。</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       虽然结束事件是公共的但你只能通过在 Global.asax 文件中添加事件处理程序处理它。 因为实现此限制<xref:System.Web.HttpApplication>实例中的性能将重用。</xref:System.Web.HttpApplication> 当会话过期时，仅**Session_OnEnd** Global.asax 文件中指定的事件执行时，以防止代码调用结束事件处理程序与关联<xref:System.Web.HttpApplication>当前正在使用的实例。</xref:System.Web.HttpApplication>       有关 Global.asax 文件的详细信息，请参阅[Global.asax 语法](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)。"
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "调用初始化的代码时<xref href=&quot;System.Web.SessionState.SessionStateModule&quot;></xref>创建对象。"
  remarks: "此方法不应从应用程序代码中调用。       <xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>对象调用 Init 方法，在创建时<xref:System.Web.SessionState.SessionStateModule>应用程序的对象。</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>类指定应用程序的配置中。</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "当前应用程序。"
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref>属性中[sessionState 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素设置为<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>或<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>，并且该 ASP.NET 应用程序小于<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>信任。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref>属性中[sessionState 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素设置为<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>和<xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;></xref>属性为空或不存在。       -或- <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref>属性中[sessionState 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素设置为<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>和提供程序中按名称辨别<xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;></xref>属性尚未添加到[提供元素程序 sessionState （ASP.NET 设置架构）](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa)子元素。"
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "释放指定的会话状态<xref href=&quot;System.Web.HttpContext&quot;> </xref>。"
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>为其以释放会话状态。"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "以异步方式释放指定的会话状态<xref href=&quot;System.Web.HttpContext&quot;> </xref>。"
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>为其以释放会话状态。"
    return:
      type: System.Threading.Tasks.Task
      description: "A<xref:System.Threading.Tasks.Task>异步操作。</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "创建会话时发生的事件。"
  remarks: "新会话启动时，将请求的开始处引发开始事件。 如果发出请求，其中不包含会话标识符、 会话标识符无效，或已过期的会话标识符与关联的会话，启动新会话。       **Session_OnStart**事件用于执行任何初始化工作，如设置会话变量的默认值的会话。       可通过添加一个名为的公共子例程指定开始事件的处理程序**Session_OnStart**到 Global.asax 文件。       有关 Global.asax 文件的详细信息，请参阅[Global.asax 语法](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)。"
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
