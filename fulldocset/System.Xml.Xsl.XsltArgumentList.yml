### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XsltArgumentList
  id: XsltArgumentList
  children:
  - System.Xml.Xsl.XsltArgumentList.#ctor
  - System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)
  - System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)
  - System.Xml.Xsl.XsltArgumentList.Clear
  - System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)
  - System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)
  - System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)
  - System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)
  - System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
  langs:
  - csharp
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
  type: Class
  summary: "包含 XSLT 参数或扩展对象的参数个数可变。"
  remarks: "此类由<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 它允许参数和扩展对象，若要从样式表中调用。       当参数和对象添加到 XsltArgumentList 时，它们分别与命名空间限定的名称和命名空间 URI 相关联。       以下是传递一个对象，而不是使用嵌入的脚本如优势`<msxsl:script>`:-提供更好的包装和重用的类。      -使样式表来小且更易于维护。      -支持传递节点片段 (通过<xref:System.Xml.XPath.XPathNavigator>) 样式表。</xref:System.Xml.XPath.XPathNavigator>       有关使用 XsltArgumentList 的详细信息，请参阅[XSLT 扩展对象](~/add/includes/ajax-current-ext-md.md)和[XSLT 参数](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public class XsltArgumentList
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: XsltArgumentList()
  nameWithType: XsltArgumentList.XsltArgumentList()
  fullName: System.Xml.Xsl.XsltArgumentList.XsltArgumentList()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "实现的新实例<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>。"
  syntax:
    content: public XsltArgumentList ();
    parameters: []
  overload: System.Xml.Xsl.XsltArgumentList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)
  id: AddExtensionObject(System.String,System.Object)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: AddExtensionObject(String,Object)
  nameWithType: XsltArgumentList.AddExtensionObject(String,Object)
  fullName: System.Xml.Xsl.XsltArgumentList.AddExtensionObject(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "添加将新对象<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>并将它与命名空间 URI 相关联。"
  remarks: "`params`关键字，它允许未指定要传递的参数数目，当前不受支持。 利用使用定义的方法的 XSLT 样式表`params`关键字无法正常工作。 有关详细信息，请参阅[params](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "In the following example, the style sheet uses an XSLT extension object to convert the book price.  \n  \n [!code-vb[XsltArgumentList.AddExtensionObject#1](~/add/codesnippet/visualbasic/207575d1-290f-43a6-bf00-_1.vb)]\n [!code-cs[XsltArgumentList.AddExtensionObject#1](~/add/codesnippet/csharp/207575d1-290f-43a6-bf00-_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XsltArgumentList.AddExtensionObject#2](~/add/codesnippet/xml/207575d1-290f-43a6-bf00-_2.xml)]  \n  \n `prices.xsl`  \n  \n [!code-xml[XsltArgumentList.AddExtensionObject#3](~/add/codesnippet/xml/207575d1-290f-43a6-bf00-_3.xsl)]"
  syntax:
    content: public void AddExtensionObject (string namespaceUri, object extension);
    parameters:
    - id: namespaceUri
      type: System.String
      description: "命名空间 URI 将与对象相关联。 若要使用的默认命名空间，请指定一个空字符串。"
    - id: extension
      type: System.Object
      description: "要添加到列表中的对象。"
  overload: System.Xml.Xsl.XsltArgumentList.AddExtensionObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> namespaceUri </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或 http://www.w3.org/1999/XSL/Transform <code> namespaceUri </code>已经具有与之关联的扩展对象。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "调用方没有足够的权限调用此方法。"
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)
  id: AddParam(System.String,System.String,System.Object)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: AddParam(String,String,Object)
  nameWithType: XsltArgumentList.AddParam(String,String,Object)
  fullName: System.Xml.Xsl.XsltArgumentList.AddParam(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "将添加到参数<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>并将其关联的命名空间限定名。"
  remarks: "`parameter`应对应于 W3C 类型。 下表显示了 W3C 类型、 XPath 或 XSLT，和 corresponding.NET 类。      |W3C 类型 |Equivalent.NET 类 （类型） |  |--------------|-----------------------------------|  |`String` (XPath) |<xref:System.String>|  |`Boolean` (XPath) |<xref:System.Boolean>|  |`Number` (XPath) |<xref:System.Double>|  |`Result Tree Fragment` (XSLT)|<xref:System.Xml.XPath.XPathNavigator>|  |`Node Set` (XPath)|<xref:System.Xml.XPath.XPathNodeIterator></xref:System.Xml.XPath.XPathNodeIterator></xref:System.Xml.XPath.XPathNavigator></xref:System.Double></xref:System.Boolean></xref:System.String><br /><br /> `XPathNavigator[]`|  |`Node`* (XPath)|<xref:System.Xml.XPath.XPathNavigator>|      *这相当于包含单个节点的节点集。</xref:System.Xml.XPath.XPathNavigator>       如果正在从样式表内调用的参数对象不是上述类型之一，它将转换根据下列规则:-CLR 数字类型转换为<xref:System.Double>.</xref:System.Double>      <xref:System.DateTime>类型转换为<xref:System.String>.</xref:System.String> </xref:System.DateTime> -      -<xref:System.Xml.XPath.IXPathNavigable>类型转换为<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XPath.IXPathNavigable> `XPathNavigator[]`转换为<xref:System.Xml.XPath.XPathNodeIterator>.</xref:System.Xml.XPath.XPathNodeIterator>       所有其他类型均将引发错误。"
  example:
  - "The following example uses the AddParam method to create a parameter representing the current date and time.  \n  \n [!code-vb[XsltArgumentList.AddParam#1](~/add/codesnippet/visualbasic/8ec8daf9-d9bd-4ab5-82ff-_1.vb)]\n [!code-cs[XsltArgumentList.AddParam#1](~/add/codesnippet/csharp/8ec8daf9-d9bd-4ab5-82ff-_1.cs)]  \n  \n The example uses the following two data files as input.  \n  \n `order.xml`  \n  \n [!code-xml[XsltArgumentList.AddParam#2](~/add/codesnippet/xml/8ec8daf9-d9bd-4ab5-82ff-_2.xml)]  \n  \n `order.xsl`  \n  \n [!code-xml[XsltArgumentList.AddParam#3](~/add/codesnippet/xml/8ec8daf9-d9bd-4ab5-82ff-_3.xsl)]"
  syntax:
    content: public void AddParam (string name, string namespaceUri, object parameter);
    parameters:
    - id: name
      type: System.String
      description: "要与参数关联的名称。"
    - id: namespaceUri
      type: System.String
      description: "命名空间 URI 与参数关联。 若要使用的默认命名空间，请指定一个空字符串。"
    - id: parameter
      type: System.Object
      description: "参数值或要添加到列表对象。"
  overload: System.Xml.Xsl.XsltArgumentList.AddParam*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> namespaceUri </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或 http://www.w3.org/1999/XSL/Transform。       <code> name </code>不是符合 W3C XML 规范的有效名称。       <code> namespaceUri </code>已有与它关联的参数。"
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.Clear
  id: Clear
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: Clear()
  nameWithType: XsltArgumentList.Clear()
  fullName: System.Xml.Xsl.XsltArgumentList.Clear()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "删除所有参数和扩展对象从<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Xml.Xsl.XsltArgumentList.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)
  id: GetExtensionObject(System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: GetExtensionObject(String)
  nameWithType: XsltArgumentList.GetExtensionObject(String)
  fullName: System.Xml.Xsl.XsltArgumentList.GetExtensionObject(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "获取与给定的命名空间关联的对象。"
  syntax:
    content: public object GetExtensionObject (string namespaceUri);
    parameters:
    - id: namespaceUri
      type: System.String
      description: "命名空间的对象的 URI。"
    return:
      type: System.Object
      description: "命名空间 URI 对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未找到其中一个。"
  overload: System.Xml.Xsl.XsltArgumentList.GetExtensionObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)
  id: GetParam(System.String,System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: GetParam(String,String)
  nameWithType: XsltArgumentList.GetParam(String,String)
  fullName: System.Xml.Xsl.XsltArgumentList.GetParam(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "获取与命名空间限定名称关联的参数。"
  syntax:
    content: public object GetParam (string name, string namespaceUri);
    parameters:
    - id: name
      type: System.String
      description: "参数的名称。 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>不会检查以确保传递的名称是有效的本地名称;但是，名称不能<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: namespaceUri
      type: System.String
      description: "命名空间 URI 与参数相关联。"
    return:
      type: System.Object
      description: "参数对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未找到其中一个。"
  overload: System.Xml.Xsl.XsltArgumentList.GetParam*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)
  id: RemoveExtensionObject(System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: RemoveExtensionObject(String)
  nameWithType: XsltArgumentList.RemoveExtensionObject(String)
  fullName: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "中删除具有命名空间 URI 对象从<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>。"
  syntax:
    content: public object RemoveExtensionObject (string namespaceUri);
    parameters:
    - id: namespaceUri
      type: System.String
      description: "使用要删除的对象关联的命名空间 URI。"
    return:
      type: System.Object
      description: "命名空间 URI 的对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未找到其中一个。"
  overload: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)
  id: RemoveParam(System.String,System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: RemoveParam(String,String)
  nameWithType: XsltArgumentList.RemoveParam(String,String)
  fullName: System.Xml.Xsl.XsltArgumentList.RemoveParam(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "删除从参数<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>。"
  syntax:
    content: public object RemoveParam (string name, string namespaceUri);
    parameters:
    - id: name
      type: System.String
      description: "要删除的参数名称。 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>不会检查以确保传递的名称是有效的本地名称;但是，名称不能<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: namespaceUri
      type: System.String
      description: "命名空间 URI 的参数删除。"
    return:
      type: System.Object
      description: "参数对象或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未找到其中一个。"
  overload: System.Xml.Xsl.XsltArgumentList.RemoveParam*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
  id: XsltMessageEncountered
  parent: System.Xml.Xsl.XsltArgumentList
  langs:
  - csharp
  name: XsltMessageEncountered
  nameWithType: XsltArgumentList.XsltMessageEncountered
  fullName: System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "通过样式表中指定一条消息时发生`xsl:message`元素。"
  remarks: "如果未注册事件，所有消息通过管道都传递到标准输出。"
  syntax:
    content: public event System.Xml.Xsl.XsltMessageEncounteredEventHandler XsltMessageEncountered;
    return:
      type: System.Xml.Xsl.XsltMessageEncounteredEventHandler
      description: "要添加。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Xml.Xsl.XsltArgumentList.#ctor
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: XsltArgumentList()
  nameWithType: XsltArgumentList.XsltArgumentList()
  fullName: System.Xml.Xsl.XsltArgumentList.XsltArgumentList()
- uid: System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: AddExtensionObject(String,Object)
  nameWithType: XsltArgumentList.AddExtensionObject(String,Object)
  fullName: System.Xml.Xsl.XsltArgumentList.AddExtensionObject(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: AddParam(String,String,Object)
  nameWithType: XsltArgumentList.AddParam(String,String,Object)
  fullName: System.Xml.Xsl.XsltArgumentList.AddParam(String,String,Object)
- uid: System.Xml.Xsl.XsltArgumentList.Clear
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: Clear()
  nameWithType: XsltArgumentList.Clear()
  fullName: System.Xml.Xsl.XsltArgumentList.Clear()
- uid: System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: GetExtensionObject(String)
  nameWithType: XsltArgumentList.GetExtensionObject(String)
  fullName: System.Xml.Xsl.XsltArgumentList.GetExtensionObject(String)
- uid: System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: GetParam(String,String)
  nameWithType: XsltArgumentList.GetParam(String,String)
  fullName: System.Xml.Xsl.XsltArgumentList.GetParam(String,String)
- uid: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: RemoveExtensionObject(String)
  nameWithType: XsltArgumentList.RemoveExtensionObject(String)
  fullName: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(String)
- uid: System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: RemoveParam(String,String)
  nameWithType: XsltArgumentList.RemoveParam(String,String)
  fullName: System.Xml.Xsl.XsltArgumentList.RemoveParam(String,String)
- uid: System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: XsltMessageEncountered
  nameWithType: XsltArgumentList.XsltMessageEncountered
  fullName: System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered
- uid: System.Xml.Xsl.XsltMessageEncounteredEventHandler
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltMessageEncounteredEventHandler
  nameWithType: XsltMessageEncounteredEventHandler
  fullName: System.Xml.Xsl.XsltMessageEncounteredEventHandler
- uid: System.Xml.Xsl.XsltArgumentList.#ctor*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList.XsltArgumentList
- uid: System.Xml.Xsl.XsltArgumentList.AddExtensionObject*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: AddExtensionObject
  nameWithType: XsltArgumentList.AddExtensionObject
- uid: System.Xml.Xsl.XsltArgumentList.AddParam*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: AddParam
  nameWithType: XsltArgumentList.AddParam
- uid: System.Xml.Xsl.XsltArgumentList.Clear*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: Clear
  nameWithType: XsltArgumentList.Clear
- uid: System.Xml.Xsl.XsltArgumentList.GetExtensionObject*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: GetExtensionObject
  nameWithType: XsltArgumentList.GetExtensionObject
- uid: System.Xml.Xsl.XsltArgumentList.GetParam*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: GetParam
  nameWithType: XsltArgumentList.GetParam
- uid: System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: RemoveExtensionObject
  nameWithType: XsltArgumentList.RemoveExtensionObject
- uid: System.Xml.Xsl.XsltArgumentList.RemoveParam*
  parent: System.Xml.Xsl.XsltArgumentList
  isExternal: false
  name: RemoveParam
  nameWithType: XsltArgumentList.RemoveParam
