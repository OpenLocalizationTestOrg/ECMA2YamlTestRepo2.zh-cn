### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  id: IRemoteArgumentEnumeratorContract
  children:
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  langs:
  - csharp
  name: IRemoteArgumentEnumeratorContract
  nameWithType: IRemoteArgumentEnumeratorContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  type: Interface
  summary: "枚举的集合的元素<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref>对象。"
  remarks: "枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。       最初，枚举数定位在集合中的第一个元素之前。 在此位置上，返回值的<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>是不确定的。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 因此，你必须调用<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>的第一个元素的集合，然后再调用<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>枚举器向前移动</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>返回同一对象，直到<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>称为。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>设置的返回值<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>到下一个元素。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       如果<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>返回`false`。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 当枚举器位于此位置上，后续调用<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>还返回`false`。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 如果最后一次调用到<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>返回`false`的返回值<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>是不确定的。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       只要集合保持不变，枚举数就保持有效。 如果对集合进行更改，如添加、 修改或删除元素，则枚举数将失效且不可恢复，而且其行为是不确定。"
  syntax:
    content: 'public interface IRemoteArgumentEnumeratorContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  id: GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "返回<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref>集合中位于枚举数当前位置。"
  remarks: "GetCurrent 的返回值未定义任何以下条件下︰ 的枚举数定位在集合中，第一个元素之前，枚举数创建后立即或<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>称为。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>必须调用来枚举器向前移动到集合，然后再调用 GetCurrent 的第一个元素。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      -上次调用<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>返回`false`，指示集合的末尾。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      的由于在集合中，如添加、 修改或删除元素所做的更改会失效枚举数。       GetCurrent 返回同一对象，直到<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>称为。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>将 GetCurrent 的返回值设置为下一个元素。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>"
  syntax:
    content: public System.AddIn.Contract.RemoteArgument GetCurrent ();
    parameters: []
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref>集合中位于枚举数当前位置。"
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  id: MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "将枚举数推进到集合的下一个元素。"
  remarks: "创建一个枚举器或<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>方法被调用时，枚举数定位在集合的第一个元素之前。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> 对 MoveNext 方法的第一个调用移动到集合的第一个元素的枚举数。       如果 MoveNext 将传递到集合的末尾，枚举数定位在集合中的最后一个元素之后和 MoveNext 返回`false`。 对 MoveNext 的后续调用时该枚举数将在此位置，还返回`false`直到<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>称为。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>       只要集合保持不变，枚举数就保持有效。 如果对集合进行更改，如添加、 修改或删除元素，枚举数将失效，并且下次调用 MoveNext 或<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果枚举数已成功地推进到下一个元素;，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果枚举数传递到集合的末尾。"
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "创建枚举器之后，集合已修改。"
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  id: Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "将枚举数设置为其初始位置，集合中第一个元素之前。"
  remarks: "调用重置的值后<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>是不确定的。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 调用<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>方法移动到集合的第一个元素的枚举数。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       只要集合保持不变，枚举数就保持有效。 如果对集合进行更改，如添加、 修改或删除元素，则枚举数将失效且不可恢复下, 一个调用<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>或重置引发<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>到"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "创建枚举器之后，集合已修改。"
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset
  nameWithType: IRemoteArgumentEnumeratorContract.Reset
