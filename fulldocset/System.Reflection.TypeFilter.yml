### YamlMime:ManagedReference
items:
- uid: System.Reflection.TypeFilter
  id: TypeFilter
  langs:
  - csharp
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
  type: Delegate
  summary: "筛选器的数组中表示的类<xref:System.Type>对象。</xref:System.Type>"
  remarks: "`TypeFilter`委托用于筛选的类的列表。 具体而言，你使用该值来筛选的数组中表示的类<xref:System.Type>对象。</xref:System.Type> <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>方法使用此委托来筛选列表，它将返回的接口。</xref:System.Type.FindInterfaces%2A?displayProperty=fullName> 每个派生的类<xref:System.Delegate>和<xref:System.MulticastDelegate>具有构造函数和`DynamicInvoke`方法。</xref:System.MulticastDelegate> </xref:System.Delegate> 请参见 Visual c + + 代码示例中的描述给定`Delegate`。"
  example:
  - "This example shows how to define a method matching the TypeFilter delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \n  \n [!code-vb[Typefilter#1](~/add/codesnippet/visualbasic/t-system.reflection.type_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate bool TypeFilter(Type m, object filterCriteria);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
