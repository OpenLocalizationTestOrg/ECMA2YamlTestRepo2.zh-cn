### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  id: DefaultWorkflowSchedulerService
  children:
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService
  nameWithType: DefaultWorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  type: Class
  summary: "创建和管理在工作流运行时引擎运行工作流实例的线程。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]默认情况下，DefaultWorkflowSchedulerService 使用由工作流运行时引擎。 它包括对多个工作流实例在运行时线程池中排队的默认支持。 如果你想要控制负责执行工作流的线程，使用<xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>。</xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class DefaultWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService()
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;></xref>类。"
  syntax:
    content: public DefaultWorkflowSchedulerService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService(NameValueCollection)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;></xref>类。"
  remarks: "This constructor is invoked when the workflow runtime engine loads services from an application configuration file. The only valid parameter is `maxSimultaneousWorkflows`, which can specify the number of workflows that can be run at the same time.  \n  \n Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve. This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.  \n  \n If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount \\* .8) for a multiple-processor machine. Note that (int)(5 \\* Environment.ProcessorCount \\* .8) is not always the same as (int)(4 \\* Environment.ProcessorCount), because of the rules of integer arithmetic."
  syntax:
    content: public DefaultWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>保存初始化信息。"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parameters</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中的键值之一值<code> parameters </code>集合包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。       -或--的键值之一中的值<code> parameters </code>集合不匹配的默认密钥<xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref>。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "其中一个参数不能转换为双精度浮点数匹配<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>为小于 1。</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService(Int32)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "初始化的新实例<xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;></xref>通过使用指定的最大数量的服务可以同时运行的工作流实例的类。"
  remarks: "Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve. This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.  \n  \n If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount \\* .8) for a multiple-processor machine. Note that (int)(5 \\* Environment.ProcessorCount \\* .8) is not always the same as (int)(4 \\* Environment.ProcessorCount), because of the rules of integer arithmetic."
  syntax:
    content: public DefaultWorkflowSchedulerService (int maxSimultaneousWorkflows);
    parameters:
    - id: maxSimultaneousWorkflows
      type: System.Int32
      description: "一个整数，确定可以在线程池队列中存储的工作流实例的最大数量。"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maxSimultaneousWorkflows</code>为小于 1。"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  id: Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Cancel(Guid)
  nameWithType: DefaultWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "取消指定的现有工作流实例工作项。"
  syntax:
    content: protected override void Cancel (Guid timerId);
    parameters:
    - id: timerId
      type: System.Guid
      description: "<xref:System.Guid>与要取消的现有计划的工作项关联。</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>timerId</code>是一个空的 GUID。"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  id: MaxSimultaneousWorkflows
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "获取最大可以在线程池队列中存储的工作流实例数。"
  remarks: "此方法的默认值为 5 对于单处理器计算机，和 (int) (5 * Environment.ProcessorCount \\* .8) 的多处理器计算机。 请注意，(int) (5 \\* Environment.ProcessorCount \\* .8) 并非总是相同 (int) (4 \\* Environment.ProcessorCount)，由于整数算法的规则。"
  syntax:
    content: public int MaxSimultaneousWorkflows { get; }
    return:
      type: System.Int32
      description: "一个整数，表示可以存储在线程池队列中的工作流实例的最大数量。"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: DefaultWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "通知<xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref> ，工作流实例已开始运行。"
  remarks: "OnStarted 等待工作流实例线程池包含的项的列表中创建第一个工作项的线程。"
  syntax:
    content: protected override void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "将工作流实例添加到使用指定的工作流实例使用指定的多路广播的委托的挂起的工作项队列中。"
  remarks: "使用<xref:System.Threading.WaitCallback>构造函数来创建在新线程中运行的委托方法。</xref:System.Threading.WaitCallback>"
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;> </xref>表示要运行的方法的多路广播的委托。"
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid>，表示工作流实例。</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "将指定的工作流实例添加到使用指定的多路广播的委托，挂起的工作项队列<xref:System.DateTime>和 Guid。</xref:System.DateTime>"
  remarks: "使用<xref:System.Threading.WaitCallback>构造函数来创建在新线程中运行的委托方法。</xref:System.Threading.WaitCallback>"
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;> </xref>表示要运行的方法的多路广播的委托。"
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid>，表示工作流实例。</xref:System.Guid>"
    - id: whenUtc
      type: System.DateTime
      description: "<xref:System.DateTime>，该值指示线程开始运行的时间。</xref:System.DateTime>"
    - id: timerId
      type: System.Guid
      description: "A<xref:System.Guid>表示计划的线程。</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>包含空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code>或<code>timerId</code>是一个空 GUID。"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Stop()
  nameWithType: DefaultWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "停止当前正在运行的线程上的工作流实例和任何正在运行的计时器。"
  syntax:
    content: protected override void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService()
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService(NameValueCollection)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService(Int32)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Cancel(Guid)
  nameWithType: DefaultWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: OnStarted()
  nameWithType: DefaultWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  name: WaitCallback
  nameWithType: WaitCallback
  fullName: System.Threading.WaitCallback
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Stop()
  nameWithType: DefaultWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Cancel
  nameWithType: DefaultWorkflowSchedulerService.Cancel
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: OnStarted
  nameWithType: DefaultWorkflowSchedulerService.OnStarted
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule
  nameWithType: DefaultWorkflowSchedulerService.Schedule
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Stop
  nameWithType: DefaultWorkflowSchedulerService.Stop
