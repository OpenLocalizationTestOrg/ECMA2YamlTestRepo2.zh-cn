### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  id: DeclarativeCatalogPart
  children:
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.#ctor
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width
  - System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap
  langs:
  - csharp
  name: DeclarativeCatalogPart
  nameWithType: DeclarativeCatalogPart
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  type: Class
  summary: "开发人员可以添加的目录<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或其他服务器控件添加到 Web 页中声明性、 页持久性格式。 此类不能被继承。"
  remarks: "就像 Web 部件控件集内有面向工具的区域 (有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.ToolZone>类概述)，有工具面向<xref:System.Web.UI.WebControls.WebParts.Part>控件和每个控件必须驻留在工具区域的特定类型。</xref:System.Web.UI.WebControls.WebParts.Part> </xref:System.Web.UI.WebControls.WebParts.ToolZone> Web 部件控件集内的面向工具的一部分控件具有两个显著特征:-它们是启用最终用户在 Web 部件页面上的控件进行个性化设置的帮助器控件。      -它们是仅在某些显示模式中可见。       DeclarativeCatalogPart 是必须驻留在一个部分的控件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>键入的区域，如<xref:System.Web.UI.WebControls.WebParts.CatalogZone>Web 部件控件集提供的区域。</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 仅在网页上正在目录的显示模式时，DeclarativeCatalogPart 控件变得可见。       DeclarativeCatalogPart 控件提供一方法，以便开发人员能够以声明方式将一组服务器控件添加到网页上的目录。 目录，在 Web 部件控件集，只是在列表的<xref:System.Web.UI.WebControls.WebParts.WebPart>或在目录页处于时显示其他服务器控件显示模式。</xref:System.Web.UI.WebControls.WebParts.WebPart> 用户可以从列表中选择控件，并将它们添加到网页，这有效地使用户能够更改的控件和在页面上的功能集。      1> [!NOTE]&1;> 用户可以将同一个控件中的多个实例在目录添加到 Web 页。       使用 DeclarativeCatalogPart 控件创建的服务器控件目录的一个优点是它不需要编写任何代码。 页开发人员可以使用完全在声明性的控件 （或页持久性） 格式，因此控件的名称。       DeclarativeCatalogPart 控件有一个有用的属性，允许开发人员设置可以在整个站点使用的控件目录。 而是不是声明 DeclarativeCatalogPart 控件内的单个服务器控件，开发人员可以设置<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性值设置为包含应在目录中的服务器控件的列表的用户控件的路径。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A> 在运行时，引用在用户控件中的服务器控件在目录中加载。 这种方式，多个页或站点无法引用相同的用户控件，来创建目录。 当更新的服务器控件的用户控件的列表时，它将更新基于用户控件的所有目录。       DeclarativeCatalogPart 类具有多个重写继承的属性的公共属性。 这些属性的大多数实际上不用于为呈现控件;重写，则仅以便特殊代码可以将属性设置对它们以类似的设计工具中隐藏这些[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]。 你不应使用这些隐藏的属性，因为它们不具有呈现任何影响。 它们隐藏的智能感知和 Visual Studio 中的属性窗格中的事实可帮助避免错误地使用它们的开发人员。 在其各自的帮助主题中，这种情况下注明了这些隐藏的所有属性。       DeclarativeCatalogPart 类还具有几种方法。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法检索<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>每个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件在目录中，这样一个 DeclarativeCatalogPart 控件来显示有关每个服务器控件，而无需创建它的实例的信息</xref:System.Web.UI.WebControls.WebParts.WebPart>的对象</xref:System.Web.UI.WebControls.WebParts.WebPartDescription></xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> 另一个方法是<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A>方法。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A> 此方法获取的特定实例<xref:System.Web.UI.WebControls.WebParts.WebPart>基于传递给方法的说明的控制。</xref:System.Web.UI.WebControls.WebParts.WebPart>      1> [!NOTE]&1;> 若要提高可访问性，DeclarativeCatalogPart 时呈现控件内`<fieldset>`元素。 `<fieldset>`元素分组的相关用于在 DeclarativeCatalogPart 控件中，编辑的控件集并它简化了这些控件之间的选项卡式的导航，可视用户代理 （如普通 Web 浏览器） 和面向语音的用户代理 （如屏幕阅读软件）。"
  example:
  - "The following code example demonstrates how to use the DeclarativeCatalogPart control declaratively on a Web page. The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control and a DeclarativeCatalogPart control.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   An explanation of how the example works when you load the page in a browser.  \n  \n The first part of this code example is the user control that enables you to change display modes on the page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_DeclarativeCatalogPart_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_119_1.ascx)]\n [!code-cs[WebParts_DeclarativeCatalogPart_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_119_1.ascx)]  \n  \n The second part of the code example is the Web page. At the top of the page are two `Register` directives, one for the user control and one for the compiled component that contains the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that the page has a declarative reference to the DeclarativeCatalogPart control, nested within the proper hierarchy of declarative elements as described in the Remarks section of this topic. The `<asp:declarativecatalogpart>` element contains a `<webpartstemplate>` element, which in turn contains references for a standard ASP.NET <xref:System.Web.UI.WebControls.Calendar> control and the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls; these are the controls that users can select from the catalog. The page also contains editing capability, with a <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> control declared on the page. This control enables users to edit certain properties on the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls after they have been added to the page, and after the user has switched the page to edit mode.  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_119_2.aspx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_119_2.aspx)]  \n  \n The third part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that some properties on these controls are marked with the `WebBrowsable` attribute. This enables the <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> control to dynamically generate the user interface (UI) for a user to edit those properties when the controls are in edit mode. The properties are also marked with a `WebDisplayName` attribute, to specify the text of the label that appears next to each control in the editing UI.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Overview#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_119_3.cs)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Overview#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_119_3.vb)]  \n  \n When you load the page in a browser, select **Catalog Mode** in the **Display Mode** drop-down list control to switch to catalog mode. In catalog mode, you can see the controls that are available to be added to the page. Add all three controls, and then use the **Display Mode** drop-down list to return the page to browse mode. The three controls appear on the page. If you use the **Display Mode** drop-down list and switch the page to edit mode, you can click the verbs menu (the downward arrow) in the title bar of the **User Information WebPart** control, and click **Edit** to edit the control. When the editing UI is visible, you can see the <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> control. Notice that a control is rendered for each of the properties of the `UserInfoWebPart` class that was marked with the `WebBrowsable` attribute. If you make some changes in the editing UI and click the **Apply** button, you can use the **Display Mode** drop-down list to return the page to browse mode and see the full effect of the editing changes."
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class DeclarativeCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Panel
  - System.Web.UI.WebControls.WebParts.Part
  - System.Web.UI.WebControls.WebParts.CatalogPart
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.Panel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.CreateControlStyle
  - System.Web.UI.WebControls.Panel.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle
  - System.Web.UI.WebControls.WebParts.CatalogPart.GetDesignModeState
  - System.Web.UI.WebControls.WebParts.CatalogPart.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.CatalogPart.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.WebControls.WebParts.CatalogPart.WebPartManager
  - System.Web.UI.WebControls.WebParts.CatalogPart.Zone
  - System.Web.UI.WebControls.WebParts.Part.ChromeState
  - System.Web.UI.WebControls.WebParts.Part.ChromeType
  - System.Web.UI.WebControls.WebParts.Part.Controls
  - System.Web.UI.WebControls.WebParts.Part.DataBind
  - System.Web.UI.WebControls.WebParts.Part.Description
  - System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: DeclarativeCatalogPart()
  nameWithType: DeclarativeCatalogPart.DeclarativeCatalogPart()
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DeclarativeCatalogPart()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化类的新实例。"
  remarks: "DeclarativeCatalogPart 构造函数是默认设置;没有构造函数声明中<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>类，因此没有特殊的任务不会执行创建类的新实例时。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> .NET Framework 内部使用构造函数来创建类的实例。       很有可能，但可能性不大，需要在你自己的代码中以编程方式使用 DeclarativeCatalogPart 构造函数。 控件的预期的用途是供网页开发人员将其添加到页面以声明方式在设计时。"
  syntax:
    content: public DeclarativeCatalogPart ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey
  id: AccessKey
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: AccessKey
  nameWithType: DeclarativeCatalogPart.AccessKey
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Web 部件控件集在呈现时不使用此继承的属性<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "AccessKey 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>在 Visual Studio 中，AccessKey 属性的控件不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override string AccessKey { get; set; }
    return:
      type: System.String
      description: "一个字符串，表示用于快速键盘导航到控件的键盘密钥。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor
  id: BackColor
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: BackColor
  nameWithType: DeclarativeCatalogPart.BackColor
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "BackColor 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，BackColor 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.BackColor%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>用于控件的背景色。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: DeclarativeCatalogPart.BackImageUrl
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Web 部件控件集在呈现时不使用此继承的属性<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "BackImageUrl 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，BackImageUrl 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.BackImageUrl%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.Panel.BackImageUrl%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "包含用作控件的背景图像的 URL 的字符串。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor
  id: BorderColor
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: BorderColor
  nameWithType: DeclarativeCatalogPart.BorderColor
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "BorderColor 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，BorderColor 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Drawing.Color BorderColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>用作控件周围边框的颜色。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle
  id: BorderStyle
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: BorderStyle
  nameWithType: DeclarativeCatalogPart.BorderStyle
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "边框样式属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，BorderStyle 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Web.UI.WebControls.BorderStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.BorderStyle&quot;> </xref> ，它确定控件的边框和标题显示的类型。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth
  id: BorderWidth
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: BorderWidth
  nameWithType: DeclarativeCatalogPart.BorderWidth
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "BorderWidth 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，BorderWidth 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> ，它确定控件周围边框的宽度。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass
  id: CssClass
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: CssClass
  nameWithType: DeclarativeCatalogPart.CssClass
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "CssClass 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，CssClass 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.CssClass%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override string CssClass { get; set; }
    return:
      type: System.String
      description: "包含用于将分配给控件的样式特征的级联样式表 (CSS) 类的名称的字符串。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton
  id: DefaultButton
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: DefaultButton
  nameWithType: DeclarativeCatalogPart.DefaultButton
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "DefaultButton 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，DefaultButton 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.DefaultButton%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.Panel.DefaultButton%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override string DefaultButton { get; set; }
    return:
      type: System.String
      description: "包含的 ID 的字符串<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>充当默认按钮控件上的控件。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction
  id: Direction
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Direction
  nameWithType: DeclarativeCatalogPart.Direction
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "方向属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，方向属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.Direction%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.Panel.Direction%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.ContentDirection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ContentDirection&quot;> </xref> ，该值指示内容在控件中的流动方向。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Enabled
  nameWithType: DeclarativeCatalogPart.Enabled
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "已启用属性中的作为的成员，<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>在 Visual Studio 中的 Enabled 属性的控件不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示控件当前启用还是禁用。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: EnableTheming
  nameWithType: DeclarativeCatalogPart.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "EnableTheming 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，EnableTheming 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否可以在控件上使用主题。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "尝试设置属性。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font
  id: Font
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Font
  nameWithType: DeclarativeCatalogPart.Font
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "字体属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，字体属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.Font%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.Font%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Web.UI.WebControls.FontInfo Font { get; }
    return:
      type: System.Web.UI.WebControls.FontInfo
      description: "A <xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;> </xref> ，该值指示用于控件的内容的字体。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor
  id: ForeColor
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: ForeColor
  nameWithType: DeclarativeCatalogPart.ForeColor
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "前景色属性中的作为的成员，<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中前, 景色属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> ，它确定控件的前景色。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions
  id: GetAvailableWebPartDescriptions
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: GetAvailableWebPartDescriptions()
  nameWithType: DeclarativeCatalogPart.GetAvailableWebPartDescriptions()
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "返回说明的可用集合<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>目录中的控件。"
  remarks: "该 GetAvailableWebPartDescriptions 方法提供了在<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类</xref:System.Web.UI.WebControls.WebParts.CatalogPart>中声明的抽象基方法的实现 GetAvailableWebPartDescriptions 方法返回目录中的每个控件的说明信息。 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象是包含有关<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，包括其 ID，对该控件，并继承的<xref:System.Web.UI.WebControls.WebParts.Part>类，如<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>和<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A></xref:System.Web.UI.WebControls.WebParts.Part.Title%2A></xref:System.Web.UI.WebControls.WebParts.Part>的几个重要属性的值的对象引用</xref:System.Web.UI.WebControls.WebParts.WebPart>的基本信息的对象</xref:System.Web.UI.WebControls.WebParts.WebPartDescription>       GetAvailableWebPartDescriptions 方法提高性能。 创建目录时，它需要包含，包括标题、 说明、 一个图标 （如果存在） 和一个 id。 每个控件有关的一些信息 而不是无需创建要获取此信息，每个控件实例<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域创建一个目录调用将在目录中，每个控件的 GetAvailableWebPartDescriptions 方法并且调用会返回仅控件的说明信息。</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>"
  example:
  - "The following code example shows how to use the GetAvailableWebPartDescriptions method. This example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page that contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control and a <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control that references several server controls. The page also contains the event-handling code that calls the GetAvailableWebPartDescriptions method.  \n  \n-   An explanation of how the example works when you load the page in a browser.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Get#7](~/add/codesnippet/csharp/6f9bb8e1-521c-40d9-856a-_1.ascx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Get#7](~/add/codesnippet/visualbasic/6f9bb8e1-521c-40d9-856a-_1.ascx)]  \n  \n The second part of the code example is the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Get#6](~/add/codesnippet/csharp/6f9bb8e1-521c-40d9-856a-_2.cs)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Get#6](~/add/codesnippet/visualbasic/6f9bb8e1-521c-40d9-856a-_2.vb)]  \n  \n The third part of the example is the Web page that contains the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control. Notice that the `Button1_Click` method calls the GetAvailableWebPartDescriptions method, obtains the descriptions of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in the catalog, and writes out the details to a label.  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Get#1](~/add/codesnippet/csharp/6f9bb8e1-521c-40d9-856a-_3.aspx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Get#1](~/add/codesnippet/visualbasic/6f9bb8e1-521c-40d9-856a-_3.aspx)]  \n  \n When you load the page in a browser, select **Catalog Mode** in the **Display Mode** drop-down list control to switch to catalog mode. In catalog mode, you can see the controls that are available to be added to the page. You can click the **Display WebPart descriptions** button to write the details about the controls in the catalog to the label."
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection&quot;> </xref>包含<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;></xref>目录中每个控件。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)
  id: GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: GetWebPart(WebPartDescription)
  nameWithType: DeclarativeCatalogPart.GetWebPart(WebPartDescription)
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart(WebPartDescription)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "返回的引用<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控件基于传入方法的说明的值。"
  remarks: "GetWebPart 方法返回的引用<xref:System.Web.UI.WebControls.WebParts.WebPart>其说明详细信息匹配的值的控件<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象传递给方法。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart> 通常情况下，此方法使用连同<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法，用于检索在目录中的所有控件的说明。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> 单个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件然后可以检索或操作根据需要通过传递单个<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>GetWebPart 方法的对象。</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example shows how to use the GetWebPart method. This example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page that contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control and a <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control that references several server controls. The page also contains the event-handling code that calls the GetWebPart method.  \n  \n-   An explanation of how the example works when you load the page in a browser.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Get#7](~/add/codesnippet/csharp/9597eaab-76c9-4390-9663-_1.ascx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Get#7](~/add/codesnippet/visualbasic/9597eaab-76c9-4390-9663-_1.ascx)]  \n  \n The second part of the code example is the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Get#6](~/add/codesnippet/csharp/9597eaab-76c9-4390-9663-_2.cs)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Get#6](~/add/codesnippet/visualbasic/9597eaab-76c9-4390-9663-_2.vb)]  \n  \n The third part of the example is the Web page that contains the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control. Notice that the `Button2_Click` method obtains the descriptions of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in the catalog, calls the GetWebPart method to retrieve a control that matches the description of the third control in the collection, and then adds that control to the page.  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Get#1](~/add/codesnippet/csharp/9597eaab-76c9-4390-9663-_3.aspx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Get#1](~/add/codesnippet/visualbasic/9597eaab-76c9-4390-9663-_3.aspx)]  \n  \n When you load the page in a browser, select **Catalog Mode** in the **Display Mode** drop-down list control to switch to catalog mode. In catalog mode, you can see the controls that are available to be added to the page. If you click the **Add TextDisplayWebPart** button, the control is added to the page without your having to add it through the normal catalog user interface (UI). Use the **Display Mode** drop-down list to return the page to normal browse mode; the control you added is visible on the page."
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);
    parameters:
    - id: description
      type: System.Web.UI.WebControls.WebParts.WebPartDescription
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;> </xref>包含有关控件的详细信息。"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>其描述匹配项中的值的控件<code> description </code>。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Description</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Description</code>不是可用<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;></xref>实例。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText
  id: GroupingText
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: GroupingText
  nameWithType: DeclarativeCatalogPart.GroupingText
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "GroupingText 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，GroupingText 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.GroupingText%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.Panel.GroupingText%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override string GroupingText { get; set; }
    return:
      type: System.String
      description: "一个字符串，包含在部分的头文本分组在控件内的子控件。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height
  id: Height
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Height
  nameWithType: DeclarativeCatalogPart.Height
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "Height 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，Height 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.Height%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.Height%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Web.UI.WebControls.Unit Height { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>值，该值指示控件的高度。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: DeclarativeCatalogPart.HorizontalAlign
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "HorizontalAlign 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，HorizontalAlign 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.HorizontalAlign%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.Panel.HorizontalAlign%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "A <xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;> </xref> ，该值指示使用呈现控件的水平对齐方式的类型。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: DeclarativeCatalogPart.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "要添加。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars
  id: ScrollBars
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: ScrollBars
  nameWithType: DeclarativeCatalogPart.ScrollBars
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "滚动条属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，滚动条属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.ScrollBars%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.Panel.ScrollBars%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Web.UI.WebControls.ScrollBars ScrollBars { get; set; }
    return:
      type: System.Web.UI.WebControls.ScrollBars
      description: "A <xref href=&quot;System.Web.UI.WebControls.ScrollBars&quot;> </xref>如果需要在控件内使用。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: SkinID
  nameWithType: DeclarativeCatalogPart.SkinID
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "SkinID 属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，SkinID 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.SkinID%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "一个字符串，包含控件的外观的 ID。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "尝试设置属性。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex
  id: TabIndex
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: TabIndex
  nameWithType: DeclarativeCatalogPart.TabIndex
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "形式的成员的 TabIndex 属性<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，TabIndex 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override short TabIndex { get; set; }
    return:
      type: System.Int16
      description: "用作此控件的 tab 键顺序索引短数。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Title
  nameWithType: DeclarativeCatalogPart.Title
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置控件的标题栏中显示的标题。"
  remarks: "标题栏中显示的标题属性值<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制在目录模式可见控件时。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 当控件被声明在页中时，你可以通过使用设置属性的值`Title`属性。 如果未提供标题的值，特定于区域性的默认值用于描述此控件允许用户编辑的属性的类型。"
  example:
  - "The following code example demonstrates the declarative use of the Title property. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> class overview.  \n  \n This example shows how to set the Title property on the control in declarative markup. If you do not set the property, or if you assign an empty string (\"\") , a default title is supplied.  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_142_1.aspx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_142_1.aspx)]"
  syntax:
    content: public override string Title { get; set; }
    return:
      type: System.String
      description: "一个字符串，使用为该控件的标题。 默认值是由 Web 部件控件集提供的计算的控件名称。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: ToolTip
  nameWithType: DeclarativeCatalogPart.ToolTip
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "工具提示属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，工具提示属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override string ToolTip { get; set; }
    return:
      type: System.String
      description: "一个包含内容的工具提示的字符串。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Visible
  nameWithType: DeclarativeCatalogPart.Visible
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "形式的成员的可见属性<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，将 Visible 属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.Control.Visible%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.Control.Visible%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示控件是否可见。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath
  id: WebPartsListUserControlPath
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: WebPartsListUserControlPath
  nameWithType: DeclarativeCatalogPart.WebPartsListUserControlPath
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置包含的列表的用户控件的路径<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或其他服务器控件目录。"
  remarks: "WebPartsListUserControlPath 属性使开发人员能够指定到用户控件中包含的一组路径<xref:System.Web.UI.WebControls.WebParts.WebPart>或可以添加到其他服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> 如果用户控件的有效路径分配给此属性，控件将自动添加到该目录在编译时。       WebPartsListUserControlPath 属性可能有用，因为它提供了一种方法来打包并在许多不同的页或站点间重复使用一组可用的控件。 而不是手动声明每个页面都想要提供目录的目录中每个控件，开发人员可以使用此属性指向引用到的一个整个组的用户控件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</xref:System.Web.UI.WebControls.WebParts.WebPart> 此外，WebPartsListUserControlPath 属性用于沿<xref:System.Web.UI.WebControls.WebParts.WebPart>显式声明内的控件`<asp:declarativecatalogpart>`在网页上的元素。</xref:System.Web.UI.WebControls.WebParts.WebPart>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example shows how to use the WebPartsListUserControlPath property declaratively and programmatically. This example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   Another user control that contains references to the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and is referenced by the WebPartsListUserControlPath property on the Web page.  \n  \n-   A Web page that contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control and a <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control that references the user control containing the custom controls.  \n  \n-   An explanation of how the example works when you load the page in a browser.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_WebPartsList#7](~/add/codesnippet/csharp/b9a9a978-c2ef-47e0-8817-_1.ascx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_WebPartsList#7](~/add/codesnippet/visualbasic/b9a9a978-c2ef-47e0-8817-_1.ascx)]  \n  \n The second part of the code example is the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_WebPartsList#6](~/add/codesnippet/csharp/b9a9a978-c2ef-47e0-8817-_2.cs)]\n [!code-vb[WebParts_DeclarativeCatalogPart_WebPartsList#6](~/add/codesnippet/visualbasic/b9a9a978-c2ef-47e0-8817-_2.vb)]  \n  \n The third part of the code example is the user control that contains the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and is referenced by the WebPartsListUserControlPath property.  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_WebPartsList#5](~/add/codesnippet/csharp/b9a9a978-c2ef-47e0-8817-_3.ascx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_WebPartsList#5](~/add/codesnippet/visualbasic/b9a9a978-c2ef-47e0-8817-_3.ascx)]  \n  \n The fourth part of the example is the Web page that contains the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control. Notice that the WebPartsListUserControlPath property is set declaratively in the markup of the page; the property value can also be set programmatically when the user clicks a button that is exposed when the page is in catalog display mode.  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_WebPartsList#1](~/add/codesnippet/csharp/b9a9a978-c2ef-47e0-8817-_4.aspx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_WebPartsList#1](~/add/codesnippet/visualbasic/b9a9a978-c2ef-47e0-8817-_4.aspx)]  \n  \n When you load the page in a browser, select **Catalog Mode** in the **Display Mode** drop-down list control to switch to catalog mode. In catalog mode, you can see the controls that are available to be added to the page. Click the **Update WebPartsListUserControlPath property** button, without entering a value in the text box. Notice that with an empty string (\"\") assigned to the property, the catalog is updated and only the control that is explicitly declared in the page remains in the catalog. If you type the name of the user control that contains the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in the text box, and click the **Update WebPartsListUserControlPath property** button again, the WebPartsListUserControlPath property now points to the user control again, and the additional <xref:System.Web.UI.WebControls.WebParts.WebPart> controls reappear in the catalog."
  syntax:
    content: public string WebPartsListUserControlPath { get; set; }
    return:
      type: System.String
      description: "替换为包含一组的用户控件的路径字符串<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或服务器控件。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate
  id: WebPartsTemplate
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: WebPartsTemplate
  nameWithType: DeclarativeCatalogPart.WebPartsTemplate
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "获取或设置包含的模板的引用<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>声明在目录中的控件。"
  remarks: "WebPartsTemplate 属性引用包含控件在网页上声明为目录的一部分的模板。 中的声明性元素的层次结构中<xref:System.Web.UI.WebControls.WebParts.CatalogZone>区域，由表示 WebPartsTemplate 属性`<webpartstemplate>`元素，它是子元素的`<asp:declarativecatalogpart>`元素，并包含在目录中的所有显式声明的服务器控件。</xref:System.Web.UI.WebControls.WebParts.CatalogZone>"
  example:
  - "The following code example demonstrates the declarative use of the WebPartsTemplate property. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> class overview.  \n  \n This code shows how to insert the `<webpartstemplate>` element within an `<asp:declarativecatalogpart>` element in declarative markup.  \n  \n [!code-cs[WebParts_DeclarativeCatalogPart_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1239_1.aspx)]\n [!code-vb[WebParts_DeclarativeCatalogPart_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1239_1.aspx)]"
  syntax:
    content: public System.Web.UI.ITemplate WebPartsTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含在目录中声明的控件。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width
  id: Width
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Width
  nameWithType: DeclarativeCatalogPart.Width
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "形式的成员的宽度属性<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，宽度属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.Width%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.WebControl.Width%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override System.Web.UI.WebControls.Unit Width { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> ，该值指示控件的宽度。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap
  id: Wrap
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  langs:
  - csharp
  name: Wrap
  nameWithType: DeclarativeCatalogPart.Wrap
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "此继承的属性不由<xref href=&quot;System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&quot;></xref>控件。 仅为了避免它出现在中重写该属性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]设计器工具。"
  remarks: "换行属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 因此，不应使用此属性;将其设置不起上呈现。       若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件在 Visual Studio 中，换行属性不是在属性窗格或 IntelliSense 中可见。</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>       如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.Wrap%2A>属性作为它，或重写此方法并更改其行为。</xref:System.Web.UI.WebControls.Panel.Wrap%2A>       此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override bool Wrap { get; set; }
    return:
      type: System.Boolean
      description: "一个布尔值，该值指示是否在控件中的长行可以换行。"
  overload: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.CatalogPart
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.CatalogPart
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.#ctor
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: DeclarativeCatalogPart()
  nameWithType: DeclarativeCatalogPart.DeclarativeCatalogPart()
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DeclarativeCatalogPart()
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: AccessKey
  nameWithType: DeclarativeCatalogPart.AccessKey
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BackColor
  nameWithType: DeclarativeCatalogPart.BackColor
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BackImageUrl
  nameWithType: DeclarativeCatalogPart.BackImageUrl
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BorderColor
  nameWithType: DeclarativeCatalogPart.BorderColor
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BorderStyle
  nameWithType: DeclarativeCatalogPart.BorderStyle
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle
- uid: System.Web.UI.WebControls.BorderStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Web.UI.WebControls.BorderStyle
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BorderWidth
  nameWithType: DeclarativeCatalogPart.BorderWidth
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth
- uid: System.Web.UI.WebControls.Unit
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Unit
  nameWithType: Unit
  fullName: System.Web.UI.WebControls.Unit
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: CssClass
  nameWithType: DeclarativeCatalogPart.CssClass
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: DefaultButton
  nameWithType: DeclarativeCatalogPart.DefaultButton
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Direction
  nameWithType: DeclarativeCatalogPart.Direction
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction
- uid: System.Web.UI.WebControls.ContentDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ContentDirection
  nameWithType: ContentDirection
  fullName: System.Web.UI.WebControls.ContentDirection
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Enabled
  nameWithType: DeclarativeCatalogPart.Enabled
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: EnableTheming
  nameWithType: DeclarativeCatalogPart.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Font
  nameWithType: DeclarativeCatalogPart.Font
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font
- uid: System.Web.UI.WebControls.FontInfo
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FontInfo
  nameWithType: FontInfo
  fullName: System.Web.UI.WebControls.FontInfo
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: ForeColor
  nameWithType: DeclarativeCatalogPart.ForeColor
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: GetAvailableWebPartDescriptions()
  nameWithType: DeclarativeCatalogPart.GetAvailableWebPartDescriptions()
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions()
- uid: System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDescriptionCollection
  nameWithType: WebPartDescriptionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: GetWebPart(WebPartDescription)
  nameWithType: DeclarativeCatalogPart.GetWebPart(WebPartDescription)
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart(WebPartDescription)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDescription
  nameWithType: WebPartDescription
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: GroupingText
  nameWithType: DeclarativeCatalogPart.GroupingText
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Height
  nameWithType: DeclarativeCatalogPart.Height
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: HorizontalAlign
  nameWithType: DeclarativeCatalogPart.HorizontalAlign
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: DeclarativeCatalogPart.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: ScrollBars
  nameWithType: DeclarativeCatalogPart.ScrollBars
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars
- uid: System.Web.UI.WebControls.ScrollBars
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ScrollBars
  nameWithType: ScrollBars
  fullName: System.Web.UI.WebControls.ScrollBars
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: SkinID
  nameWithType: DeclarativeCatalogPart.SkinID
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: TabIndex
  nameWithType: DeclarativeCatalogPart.TabIndex
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Title
  nameWithType: DeclarativeCatalogPart.Title
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: ToolTip
  nameWithType: DeclarativeCatalogPart.ToolTip
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Visible
  nameWithType: DeclarativeCatalogPart.Visible
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: WebPartsListUserControlPath
  nameWithType: DeclarativeCatalogPart.WebPartsListUserControlPath
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: WebPartsTemplate
  nameWithType: DeclarativeCatalogPart.WebPartsTemplate
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Width
  nameWithType: DeclarativeCatalogPart.Width
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Wrap
  nameWithType: DeclarativeCatalogPart.Wrap
  fullName: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.#ctor*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: DeclarativeCatalogPart
  nameWithType: DeclarativeCatalogPart.DeclarativeCatalogPart
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: AccessKey
  nameWithType: DeclarativeCatalogPart.AccessKey
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BackColor
  nameWithType: DeclarativeCatalogPart.BackColor
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BackImageUrl
  nameWithType: DeclarativeCatalogPart.BackImageUrl
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BorderColor
  nameWithType: DeclarativeCatalogPart.BorderColor
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BorderStyle
  nameWithType: DeclarativeCatalogPart.BorderStyle
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: BorderWidth
  nameWithType: DeclarativeCatalogPart.BorderWidth
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: CssClass
  nameWithType: DeclarativeCatalogPart.CssClass
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: DefaultButton
  nameWithType: DeclarativeCatalogPart.DefaultButton
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Direction
  nameWithType: DeclarativeCatalogPart.Direction
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Enabled
  nameWithType: DeclarativeCatalogPart.Enabled
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: EnableTheming
  nameWithType: DeclarativeCatalogPart.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Font
  nameWithType: DeclarativeCatalogPart.Font
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: ForeColor
  nameWithType: DeclarativeCatalogPart.ForeColor
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: GetAvailableWebPartDescriptions
  nameWithType: DeclarativeCatalogPart.GetAvailableWebPartDescriptions
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: GetWebPart
  nameWithType: DeclarativeCatalogPart.GetWebPart
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: GroupingText
  nameWithType: DeclarativeCatalogPart.GroupingText
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Height
  nameWithType: DeclarativeCatalogPart.Height
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: HorizontalAlign
  nameWithType: DeclarativeCatalogPart.HorizontalAlign
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Render
  nameWithType: DeclarativeCatalogPart.Render
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: ScrollBars
  nameWithType: DeclarativeCatalogPart.ScrollBars
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: SkinID
  nameWithType: DeclarativeCatalogPart.SkinID
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: TabIndex
  nameWithType: DeclarativeCatalogPart.TabIndex
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Title
  nameWithType: DeclarativeCatalogPart.Title
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: ToolTip
  nameWithType: DeclarativeCatalogPart.ToolTip
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Visible
  nameWithType: DeclarativeCatalogPart.Visible
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: WebPartsListUserControlPath
  nameWithType: DeclarativeCatalogPart.WebPartsListUserControlPath
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: WebPartsTemplate
  nameWithType: DeclarativeCatalogPart.WebPartsTemplate
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Width
  nameWithType: DeclarativeCatalogPart.Width
- uid: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap*
  parent: System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart
  isExternal: false
  name: Wrap
  nameWithType: DeclarativeCatalogPart.Wrap
