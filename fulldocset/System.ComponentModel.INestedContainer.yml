### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.INestedContainer
  id: INestedContainer
  children:
  - System.ComponentModel.INestedContainer.Owner
  langs:
  - csharp
  name: INestedContainer
  nameWithType: INestedContainer
  fullName: System.ComponentModel.INestedContainer
  type: Interface
  summary: "提供嵌套容器，也不能从逻辑上包含零个或多个其他组件所拥有的父组件的功能。"
  remarks: "INestedContainer 接口将添加到了所属组件的概念<xref:System.ComponentModel.IContainer>接口。</xref:System.ComponentModel.IContainer> 嵌套的容器是在逻辑上，但不是一定是以可视方式，包含零个或多个子组件，并拥有的某些父组件的对象。 对于可视包容所属的组件通常是另一个容器。       嵌套的容器允许控件进行设计，而无需对每个子控件提供的一个显式的序列化的成员变量或自定义序列化程序的各个部分。 相反，窗体设计器维护组件的一个主的容器。 每个组件的站点可能会提供一个地方安置额外的组件的嵌套的容器。 在组件被放置在嵌套的容器中后，它接收的名称是其给定名称和其所属的组件名称的组合。 此外，组件添加到嵌套容器具有完全访问权限的服务的父容器中，并且嵌套的容器提供相同的行为方面添加新组件的父级。 嵌套的容器将创建设计器中的为每个组件，它包含，从而支持设计时支持。 因为标准的代码序列化程序看不到嵌套的容器，这些组件才会序列化的路径可以获取通过遍历主容器中的组件。       可以通过查询类型 INestedContainer 的服务的组件的站点找到嵌套的容器。"
  syntax:
    content: 'public interface INestedContainer : IDisposable, System.ComponentModel.IContainer'
  implements:
  - System.ComponentModel.IContainer
  - System.IDisposable
  platform:
  - net462
- uid: System.ComponentModel.INestedContainer.Owner
  id: Owner
  parent: System.ComponentModel.INestedContainer
  langs:
  - csharp
  name: Owner
  nameWithType: INestedContainer.Owner
  fullName: System.ComponentModel.INestedContainer.Owner
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "获取嵌套容器所属的组件。"
  remarks: "所属的组件是区分嵌套的容器和普通的容器的特征。"
  syntax:
    content: public System.ComponentModel.IComponent Owner { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>拥有嵌套的容器。"
  overload: System.ComponentModel.INestedContainer.Owner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.INestedContainer.Owner
  parent: System.ComponentModel.INestedContainer
  isExternal: false
  name: Owner
  nameWithType: INestedContainer.Owner
  fullName: System.ComponentModel.INestedContainer.Owner
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.INestedContainer.Owner*
  parent: System.ComponentModel.INestedContainer
  isExternal: false
  name: Owner
  nameWithType: INestedContainer.Owner
