### YamlMime:ManagedReference
items:
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  id: EntityStoreSchemaFilterEntry
  children:
  - System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor(System.String,System.String,System.String)
  - System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor(System.String,System.String,System.String,System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes,System.Data.Entity.Design.EntityStoreSchemaFilterEffect)
  - System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Catalog
  - System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Effect
  - System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Name
  - System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Schema
  - System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Types
  langs:
  - csharp
  name: EntityStoreSchemaFilterEntry
  nameWithType: EntityStoreSchemaFilterEntry
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  type: Class
  summary: "表示单个筛选器条目。 筛选器用于允许或排除在生成期间的特定数据库对象。"
  syntax:
    content: public class EntityStoreSchemaFilterEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  langs:
  - csharp
  name: EntityStoreSchemaFilterEntry(String,String,String)
  nameWithType: EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry(String,String,String)
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry(String,String,String)
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "初始化的新实例<xref href=&quot;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&quot;></xref>与指定的目录、 架构和名称筛选器的类。"
  syntax:
    content: public EntityStoreSchemaFilterEntry (string catalog, string schema, string name);
    parameters:
    - id: catalog
      type: System.String
      description: "要用于选择相应目录的模式。"
    - id: schema
      type: System.String
      description: "要用于选择相应架构或 null 不按架构来限制的模式。"
    - id: name
      type: System.String
      description: "要使用选择适当的名称或 null 不按名称来限制的模式。"
  overload: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor(System.String,System.String,System.String,System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes,System.Data.Entity.Design.EntityStoreSchemaFilterEffect)
  id: '#ctor(System.String,System.String,System.String,System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes,System.Data.Entity.Design.EntityStoreSchemaFilterEffect)'
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  langs:
  - csharp
  name: EntityStoreSchemaFilterEntry(String,String,String,EntityStoreSchemaFilterObjectTypes,EntityStoreSchemaFilterEffect)
  nameWithType: EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry(String,String,String,EntityStoreSchemaFilterObjectTypes,EntityStoreSchemaFilterEffect)
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry(String,String,String,EntityStoreSchemaFilterObjectTypes,EntityStoreSchemaFilterEffect)
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "初始化的新实例<xref href=&quot;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&quot;></xref>类指定的目录、 架构、 名称和类型筛选器和筛选器效果设置。"
  syntax:
    content: public EntityStoreSchemaFilterEntry (string catalog, string schema, string name, System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes types, System.Data.Entity.Design.EntityStoreSchemaFilterEffect effect);
    parameters:
    - id: catalog
      type: System.String
      description: "要使用选择的相应目录或为 null 不按目录来限制的模式。"
    - id: schema
      type: System.String
      description: "要用于选择相应架构或 null 不按架构来限制的模式。"
    - id: name
      type: System.String
      description: "要使用选择适当的名称或 null 不按名称来限制的模式。"
    - id: types
      type: System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes
      description: "要应用到此筛选器的对象类型。"
    - id: effect
      type: System.Data.Entity.Design.EntityStoreSchemaFilterEffect
      description: "<xref href=&quot;System.Data.Entity.Design.EntityStoreSchemaFilterEffect&quot;> </xref>值，该值指示允许还是排除符合指定的筛选器项。"
  overload: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Catalog
  id: Catalog
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  langs:
  - csharp
  name: Catalog
  nameWithType: EntityStoreSchemaFilterEntry.Catalog
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Catalog
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "获取将用于选择相应目录的模式。"
  syntax:
    content: public string Catalog { get; }
    return:
      type: System.String
      description: "其中的数据库名称格式化为 Catalog.Schema.Name 数据库名称的目录部分。"
  overload: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Catalog*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Effect
  id: Effect
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  langs:
  - csharp
  name: Effect
  nameWithType: EntityStoreSchemaFilterEntry.Effect
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Effect
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "获取此筛选器对结果的作用。"
  syntax:
    content: public System.Data.Entity.Design.EntityStoreSchemaFilterEffect Effect { get; }
    return:
      type: System.Data.Entity.Design.EntityStoreSchemaFilterEffect
      description: "<xref href=&quot;System.Data.Entity.Design.EntityStoreSchemaFilterEffect&quot;> </xref>值，该值指示是允许还是排除符合指定的筛选器项。"
  overload: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Effect*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Name
  id: Name
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  langs:
  - csharp
  name: Name
  nameWithType: EntityStoreSchemaFilterEntry.Name
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Name
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "获取将用于选择相应名称的模式。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "其中的数据库名称格式化为 Catalog.Schema.Name 数据库名称的名称部分。"
  overload: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Schema
  id: Schema
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  langs:
  - csharp
  name: Schema
  nameWithType: EntityStoreSchemaFilterEntry.Schema
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Schema
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "获取将用于选择相应架构的模式。"
  syntax:
    content: public string Schema { get; }
    return:
      type: System.String
      description: "其中的数据库名称格式化为 Catalog.Schema.Name 数据库名称的架构部分。"
  overload: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Schema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Types
  id: Types
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  langs:
  - csharp
  name: Types
  nameWithType: EntityStoreSchemaFilterEntry.Types
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Types
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "获取此筛选器应用到的对象的类型。"
  syntax:
    content: public System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes Types { get; }
    return:
      type: System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes
      description: "<xref href=&quot;System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes&quot;> </xref>值，该值指示要应用于到该筛选器的对象的类型。"
  overload: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Types*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor(System.String,System.String,System.String)
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: EntityStoreSchemaFilterEntry(String,String,String)
  nameWithType: EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry(String,String,String)
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor(System.String,System.String,System.String,System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes,System.Data.Entity.Design.EntityStoreSchemaFilterEffect)
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: EntityStoreSchemaFilterEntry(String,String,String,EntityStoreSchemaFilterObjectTypes,EntityStoreSchemaFilterEffect)
  nameWithType: EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry(String,String,String,EntityStoreSchemaFilterObjectTypes,EntityStoreSchemaFilterEffect)
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry(String,String,String,EntityStoreSchemaFilterObjectTypes,EntityStoreSchemaFilterEffect)
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes
  parent: System.Data.Entity.Design
  isExternal: false
  name: EntityStoreSchemaFilterObjectTypes
  nameWithType: EntityStoreSchemaFilterObjectTypes
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEffect
  parent: System.Data.Entity.Design
  isExternal: false
  name: EntityStoreSchemaFilterEffect
  nameWithType: EntityStoreSchemaFilterEffect
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEffect
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Catalog
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Catalog
  nameWithType: EntityStoreSchemaFilterEntry.Catalog
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Catalog
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Effect
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Effect
  nameWithType: EntityStoreSchemaFilterEntry.Effect
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Effect
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Name
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Name
  nameWithType: EntityStoreSchemaFilterEntry.Name
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Name
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Schema
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Schema
  nameWithType: EntityStoreSchemaFilterEntry.Schema
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Schema
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Types
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Types
  nameWithType: EntityStoreSchemaFilterEntry.Types
  fullName: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Types
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor*
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: EntityStoreSchemaFilterEntry
  nameWithType: EntityStoreSchemaFilterEntry.EntityStoreSchemaFilterEntry
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Catalog*
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Catalog
  nameWithType: EntityStoreSchemaFilterEntry.Catalog
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Effect*
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Effect
  nameWithType: EntityStoreSchemaFilterEntry.Effect
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Name*
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Name
  nameWithType: EntityStoreSchemaFilterEntry.Name
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Schema*
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Schema
  nameWithType: EntityStoreSchemaFilterEntry.Schema
- uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Types*
  parent: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
  isExternal: false
  name: Types
  nameWithType: EntityStoreSchemaFilterEntry.Types
