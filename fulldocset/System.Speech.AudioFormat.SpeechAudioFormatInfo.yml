### YamlMime:ManagedReference
items:
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo
  id: SpeechAudioFormatInfo
  children:
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  langs:
  - csharp
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo
  type: Class
  summary: "表示有关音频格式的信息。"
  syntax:
    content: public class SpeechAudioFormatInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  id: '#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)'
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "初始化的新实例<xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;></xref>类，并指定每秒，每个样本，位的通道数个示例。"
  remarks: ''
  example:
  - "The following example shows a typical use of SpeechAudioFormatInfo to specify the format of audio to output to a WAV file. The SpeechAudioFormatInfo instance is an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\temp\\test.wav\",   \n          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  \n  \n        // Create a SoundPlayer instance to play output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =   \n          new System.Media.SoundPlayer(@\"C:\\temp\\test.wav\");  \n  \n        // Build a prompt.  \n        PromptBuilder builder = new PromptBuilder();  \n        builder.AppendText(\"This is sample output to a WAVE file.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public SpeechAudioFormatInfo (int samplesPerSecond, System.Speech.AudioFormat.AudioBitsPerSample bitsPerSample, System.Speech.AudioFormat.AudioChannel channel);
    parameters:
    - id: samplesPerSecond
      type: System.Int32
      description: "每秒示例的值。"
    - id: bitsPerSample
      type: System.Speech.AudioFormat.AudioBitsPerSample
      description: "每个样本的位值。"
    - id: channel
      type: System.Speech.AudioFormat.AudioChannel
      description: "成员<xref href=&quot;System.Speech.AudioFormat.AudioChannel&quot;></xref>枚举 (，该值指示`Mono`或`Stereo`)。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  id: '#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])'
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "初始化的新实例<xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;></xref>类并指定的编码格式，每秒的示例、 示例、 通道数、 每秒、 块对齐值和数组，其中包含特定格式的数据的平均字节数每位数。"
  syntax:
    content: public SpeechAudioFormatInfo (System.Speech.AudioFormat.EncodingFormat encodingFormat, int samplesPerSecond, int bitsPerSample, int channelCount, int averageBytesPerSecond, int blockAlign, byte[] formatSpecificData);
    parameters:
    - id: encodingFormat
      type: System.Speech.AudioFormat.EncodingFormat
      description: "编码格式。"
    - id: samplesPerSecond
      type: System.Int32
      description: "每秒示例的值。"
    - id: bitsPerSample
      type: System.Int32
      description: "每个样本的位值。"
    - id: channelCount
      type: System.Int32
      description: "通道计数值。"
    - id: averageBytesPerSecond
      type: System.Int32
      description: "每秒的平均字节数的值。"
    - id: blockAlign
      type: System.Int32
      description: "BlockAlign 值。"
    - id: formatSpecificData
      type: System.Byte[]
      description: "包含特定于格式的数据的字节数组。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  id: AverageBytesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "获取每秒的音频的平均字节数。"
  syntax:
    content: public int AverageBytesPerSecond { get; }
    return:
      type: System.Int32
      description: "每秒的平均字节数的值。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  id: BitsPerSample
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "获取每个样本的音频的位。"
  syntax:
    content: public int BitsPerSample { get; }
    return:
      type: System.Int32
      description: "每个样本的位值。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  id: BlockAlign
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "获取和设置以字节为单位的块对齐方式。"
  remarks: "用于播放和记录音频软件处理块中的音频数据。 这些块的大小是值的 BlockAlign 属性的倍数。 块对齐值是音频的某一特定格式的原子单元 （即块） 中的字节数。 对于脉冲编码调制 (PCM) 格式的公式用于计算块对齐是，如下所示:-块对齐方式 = 每个样本的字节数的通道。 例如，块对齐值 x，16 位 PCM 格式单声道音频是 2 （每个示例 x 1 通道 2 个字节）。 对于 16 位 PCM 格式立体声音频，块对齐值为 4。       从设备读取和写入的数据始终必须在块的开头处开始。 例如，它是非法开始播放的 PCM 中间示例 （即未块对齐的边界上） 的数据。"
  syntax:
    content: public int BlockAlign { get; }
    return:
      type: System.Int32
      description: "块对齐值。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  id: ChannelCount
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "获取音频通道数。"
  syntax:
    content: public int ChannelCount { get; }
    return:
      type: System.Int32
      description: "通道计数值。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  id: EncodingFormat
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "获取音频的编码格式。"
  syntax:
    content: public System.Speech.AudioFormat.EncodingFormat EncodingFormat { get; }
    return:
      type: System.Speech.AudioFormat.EncodingFormat
      description: "音频编码格式。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SpeechAudioFormatInfo.Equals(Object)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(Object)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "返回给定的对象是否为实例<xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;></xref>和等于当前实例的<xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;> </xref>。"
  remarks: "该方法返回`false`如果<xref:System.Object>由`obj`自变量不能强制转换为<xref:System.Speech.AudioFormat.SpeechAudioFormatInfo>.</xref:System.Speech.AudioFormat.SpeechAudioFormatInfo> </xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要进行比较的对象。"
    return:
      type: System.Boolean
      description: "返回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果的当前实例<xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;></xref>从获取<code> obj </code>参数相等时，否则返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  id: FormatSpecificData
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: FormatSpecificData()
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "返回音频格式的特定格式的数据。"
  syntax:
    content: public byte[] FormatSpecificData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "包含特定于格式的数据的字节数组。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  id: GetHashCode
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SpeechAudioFormatInfo.GetHashCode()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "返回音频格式的哈希代码。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "哈希代码值。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  id: SamplesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "获取每秒的音频格式的示例。"
  syntax:
    content: public int SamplesPerSecond { get; }
    return:
      type: System.Int32
      description: "每秒示例的值。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.AudioFormat.AudioBitsPerSample
  parent: System.Speech.AudioFormat
  isExternal: false
  name: AudioBitsPerSample
  nameWithType: AudioBitsPerSample
  fullName: System.Speech.AudioFormat.AudioBitsPerSample
- uid: System.Speech.AudioFormat.AudioChannel
  parent: System.Speech.AudioFormat
  isExternal: false
  name: AudioChannel
  nameWithType: AudioChannel
  fullName: System.Speech.AudioFormat.AudioChannel
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
- uid: System.Speech.AudioFormat.EncodingFormat
  parent: System.Speech.AudioFormat
  isExternal: false
  name: EncodingFormat
  nameWithType: EncodingFormat
  fullName: System.Speech.AudioFormat.EncodingFormat
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: SpeechAudioFormatInfo.Equals(Object)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: FormatSpecificData()
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData()
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: SpeechAudioFormatInfo.GetHashCode()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode()
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: Equals
  nameWithType: SpeechAudioFormatInfo.Equals
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: FormatSpecificData
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: GetHashCode
  nameWithType: SpeechAudioFormatInfo.GetHashCode
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
