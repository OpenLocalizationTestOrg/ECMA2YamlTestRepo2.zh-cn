### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.SqlClient.SqlFunctions
  id: SqlFunctions
  children:
  - System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp
  - System.Data.Objects.SqlClient.SqlFunctions.CurrentUser
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.GetDate
  - System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate
  - System.Data.Objects.SqlClient.SqlFunctions.HostName
  - System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Pi
  - System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.Rand
  - System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.UserName
  - System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})
  langs:
  - csharp
  name: SqlFunctions
  nameWithType: SqlFunctions
  fullName: System.Data.Objects.SqlClient.SqlFunctions
  type: Class
  summary: "提供公共语言运行时 (CLR) 方法的调用中的 LINQ to Entities 查询的数据库中的函数。"
  syntax:
    content: public static class SqlFunctions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})
  id: Acos(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Acos(Nullable<Decimal>)
  nameWithType: SqlFunctions.Acos(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Acos(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学函数，返回的角度以弧度表示，其余弦是指定的数字值。 此角度称为反余弦值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ACOS (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140034)。"
  syntax:
    content: public static Nullable<double> Acos (Nullable<decimal> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "角度的余弦值。"
    return:
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Acos*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})
  id: Acos(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Acos(Nullable<Double>)
  nameWithType: SqlFunctions.Acos(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Acos(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学函数，返回的角度以弧度表示，其余弦是指定的数字值。 此角度称为反余弦值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ACOS (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140034)。"
  syntax:
    content: public static Nullable<double> Acos (Nullable<double> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "角度的余弦值。"
    return:
      type: System.Nullable{System.Double}
      description: "以弧度表示，定义的输入的余弦值的角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Acos*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)
  id: Ascii(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Ascii(String)
  nameWithType: SqlFunctions.Ascii(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Ascii(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回字符表达式最左侧字符的 ASCII 代码值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ASCII (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140040)。"
  syntax:
    content: public static Nullable<int> Ascii (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "一个有效的字符串。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入字符串中的第一个字符的 ASCII 代码。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Ascii*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})
  id: Asin(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Asin(Nullable<Decimal>)
  nameWithType: SqlFunctions.Asin(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Asin(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学函数，返回的角度以弧度表示，其正弦为指定的数字值。 此角度称为反正弦值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ASIN (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140039)。"
  syntax:
    content: public static Nullable<double> Asin (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "角度的正弦值。"
    return:
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Asin*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})
  id: Asin(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Asin(Nullable<Double>)
  nameWithType: SqlFunctions.Asin(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Asin(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学函数，返回的角度以弧度表示，其正弦为指定的数字值。 此角度称为反正弦值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ASIN (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140039)。"
  syntax:
    content: public static Nullable<double> Asin (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "角度的正弦值。"
    return:
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Asin*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})
  id: Atan(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Atan(Nullable<Decimal>)
  nameWithType: SqlFunctions.Atan(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学函数，返回的角度以弧度表示，其正切为指定的数字值。 此角度称为反正切值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ATAN (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140038)。"
  syntax:
    content: public static Nullable<double> Atan (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "角度的正切值。"
    return:
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Atan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})
  id: Atan(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Atan(Nullable<Double>)
  nameWithType: SqlFunctions.Atan(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学函数，返回的角度以弧度表示，其正切为指定的数字值。 此角度称为反正切值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ATAN (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140038)。"
  syntax:
    content: public static Nullable<double> Atan (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "角度的正切值。"
    return:
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Atan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  id: Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Atan2(Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Atan2(Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan2(Nullable<Decimal>,Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "其中返回以弧度表示，正数 x 轴和从原点 （x，y） 的点到射线之间的正数的角度，x 和 y 是两个指定的数字值。 传递给函数的第一个参数是 y 的值，第二个参数是 x 值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ATN2 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140037)。"
  syntax:
    content: public static Nullable<double> Atan2 (Nullable<decimal> arg1, Nullable<decimal> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "点的 y 坐标。"
    - id: arg2
      type: System.Nullable{System.Decimal}
      description: "点的 x 坐标。"
    return:
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Atan2*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})
  id: Atan2(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Atan2(Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Atan2(Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan2(Nullable<Double>,Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "其中返回以弧度表示，正数 x 轴和从原点 （x，y） 的点到射线之间的正数的角度，x 和 y 是两个指定的数字值。 传递给函数的第一个参数是 y 的值，第二个参数是 x 值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ATN2 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140037)。"
  syntax:
    content: public static Nullable<double> Atan2 (Nullable<double> arg1, Nullable<double> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "点的 y 坐标。"
    - id: arg2
      type: System.Nullable{System.Double}
      description: "点的 x 坐标。"
    return:
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Atan2*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})
  id: Char(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Char(Nullable<Int32>)
  nameWithType: SqlFunctions.Char(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Char(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的整数 ASCII 值相对应的字符。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHAR (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140119)。"
  syntax:
    content: public static string Char (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "一个 ASCII 代码。"
    return:
      type: System.String
      description: "指定的 ASCII 值相对应的字符。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Char*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])
  id: CharIndex(System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(Byte[],Byte[])
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回在另一个表达式中找到的一个表达式的起始位置。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHARINDEX (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)。"
  syntax:
    content: public static Nullable<int> CharIndex (byte[] toSearch, byte[] target);
    parameters:
    - id: toSearch
      type: System.Byte[]
      description: "要搜索的字符串表达式。"
    - id: target
      type: System.Byte[]
      description: "要找的字符串表达式。"
    return:
      type: System.Nullable{System.Int32}
      description: "起始位置<code> target </code>如果则该文件位于<code> toSearch </code>。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)
  id: CharIndex(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(String,String)
  nameWithType: SqlFunctions.CharIndex(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回在另一个表达式中找到的一个表达式的起始位置。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHARINDEX (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)。"
  syntax:
    content: public static Nullable<int> CharIndex (string toSearch, string target);
    parameters:
    - id: toSearch
      type: System.String
      description: "要搜索的字符串表达式。"
    - id: target
      type: System.String
      description: "要找的字符串表达式。"
    return:
      type: System.Nullable{System.Int32}
      description: "起始位置<code> target </code>如果则该文件位于<code> toSearch </code>。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})
  id: CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(Byte[],Byte[],Nullable<Int32>)
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回在另一个表达式中找到的一个表达式的起始位置。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHARINDEX (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)。"
  syntax:
    content: public static Nullable<int> CharIndex (byte[] toSearch, byte[] target, Nullable<int> startLocation);
    parameters:
    - id: toSearch
      type: System.Byte[]
      description: "要搜索的字符串表达式。"
    - id: target
      type: System.Byte[]
      description: "要找的字符串表达式。"
    - id: startLocation
      type: System.Nullable{System.Int32}
      description: "中的字符位置`toSearch`搜索开始处。"
    return:
      type: System.Nullable{System.Int32}
      description: "起始位置<code> target </code>如果则该文件位于<code> toSearch </code>。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})
  id: CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(Byte[],Byte[],Nullable<Int64>)
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回在另一个表达式中找到的一个表达式的起始位置。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHARINDEX (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)。"
  syntax:
    content: public static Nullable<long> CharIndex (byte[] toSearch, byte[] target, Nullable<long> startLocation);
    parameters:
    - id: toSearch
      type: System.Byte[]
      description: "要搜索的字符串表达式。"
    - id: target
      type: System.Byte[]
      description: "要找的字符串表达式。"
    - id: startLocation
      type: System.Nullable{System.Int64}
      description: "中的字符位置`toSearch`搜索开始处。"
    return:
      type: System.Nullable{System.Int64}
      description: "起始位置<code> target </code>如果则该文件位于<code> toSearch </code>。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})
  id: CharIndex(System.String,System.String,System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(String,String,Nullable<Int32>)
  nameWithType: SqlFunctions.CharIndex(String,String,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回在另一个表达式中找到的一个表达式的起始位置。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHARINDEX (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)。"
  syntax:
    content: public static Nullable<int> CharIndex (string toSearch, string target, Nullable<int> startLocation);
    parameters:
    - id: toSearch
      type: System.String
      description: "要搜索的字符串表达式。"
    - id: target
      type: System.String
      description: "要找的字符串表达式。"
    - id: startLocation
      type: System.Nullable{System.Int32}
      description: "中的字符位置`toSearch`搜索开始处。"
    return:
      type: System.Nullable{System.Int32}
      description: "起始位置<code> target </code>如果则该文件位于<code> toSearch </code>。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})
  id: CharIndex(System.String,System.String,System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(String,String,Nullable<Int64>)
  nameWithType: SqlFunctions.CharIndex(String,String,Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String,Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回在另一个表达式中找到的一个表达式的起始位置。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHARINDEX (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)。"
  syntax:
    content: public static Nullable<long> CharIndex (string toSearch, string target, Nullable<long> startLocation);
    parameters:
    - id: toSearch
      type: System.String
      description: "要搜索的字符串表达式。"
    - id: target
      type: System.String
      description: "要找的字符串表达式。"
    - id: startLocation
      type: System.Nullable{System.Int64}
      description: "中的字符位置`toSearch`搜索开始处。"
    return:
      type: System.Nullable{System.Int64}
      description: "A &lt;xref:System.Nullable%601&gt;的<xref:System.Int64>该键的起始值位置的<code> target </code>如果则该文件位于<code> toSearch </code>。</xref:System.Int64>"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])
  id: Checksum(System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (byte[] arg1);
    parameters:
    - id: arg1
      type: System.Byte[]
      description: "为其计算校验和的字符数组。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})
  id: Checksum(System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<bool> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Boolean}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})
  id: Checksum(System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTime> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTime}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})
  id: Checksum(System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTimeOffset> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTimeOffset}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})
  id: Checksum(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<decimal> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})
  id: Checksum(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<double> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})
  id: Checksum(System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<Guid> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Guid}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})
  id: Checksum(System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<TimeSpan> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.TimeSpan}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)
  id: Checksum(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(String)
  nameWithType: SqlFunctions.Checksum(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (string arg1);
    parameters:
    - id: arg1
      type: System.String
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])
  id: Checksum(System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Byte[],Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (byte[] arg1, byte[] arg2);
    parameters:
    - id: arg1
      type: System.Byte[]
      description: "为其计算校验和的字符数组。"
    - id: arg2
      type: System.Byte[]
      description: "为其计算校验和的字符数组。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Boolean>,Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<bool> arg1, Nullable<bool> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Boolean}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.Boolean}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTime> arg1, Nullable<DateTime> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTime}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.DateTime}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  id: Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTimeOffset> arg1, Nullable<DateTimeOffset> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTimeOffset}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.DateTimeOffset}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  id: Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<decimal> arg1, Nullable<decimal> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.Decimal}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})
  id: Checksum(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<double> arg1, Nullable<double> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.Double}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})
  id: Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Guid>,Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<Guid> arg1, Nullable<Guid> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Guid}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.Guid}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  id: Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<TimeSpan> arg1, Nullable<TimeSpan> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.TimeSpan}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.TimeSpan}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)
  id: Checksum(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(String,String)
  nameWithType: SqlFunctions.Checksum(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (string arg1, string arg2);
    parameters:
    - id: arg1
      type: System.String
      description: "为其计算校验和值。"
    - id: arg2
      type: System.String
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])
  id: Checksum(System.Byte[],System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Byte[],Byte[],Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[],Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[],Byte[],Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (byte[] arg1, byte[] arg2, byte[] arg3);
    parameters:
    - id: arg1
      type: System.Byte[]
      description: "为其计算校验和的字符数组。"
    - id: arg2
      type: System.Byte[]
      description: "为其计算校验和的字符数组。"
    - id: arg3
      type: System.Byte[]
      description: "为其计算校验和的字符数组。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<bool> arg1, Nullable<bool> arg2, Nullable<bool> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.Boolean}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.Boolean}
      description: "为其计算校验和值。"
    - id: arg3
      type: System.Nullable{System.Boolean}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTime> arg1, Nullable<DateTime> arg2, Nullable<DateTime> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTime}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.DateTime}
      description: "为其计算校验和值。"
    - id: arg3
      type: System.Nullable{System.DateTime}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  id: Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTimeOffset> arg1, Nullable<DateTimeOffset> arg2, Nullable<DateTimeOffset> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTimeOffset}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.DateTimeOffset}
      description: "为其计算校验和值。"
    - id: arg3
      type: System.Nullable{System.DateTimeOffset}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  id: Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<decimal> arg1, Nullable<decimal> arg2, Nullable<decimal> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.Decimal}
      description: "为其计算校验和值。"
    - id: arg3
      type: System.Nullable{System.Decimal}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  id: Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<double> arg1, Nullable<double> arg2, Nullable<double> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.Double}
      description: "为其计算校验和值。"
    - id: arg3
      type: System.Nullable{System.Double}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})
  id: Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<Guid> arg1, Nullable<Guid> arg2, Nullable<Guid> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.Guid}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.Guid}
      description: "为其计算校验和值。"
    - id: arg3
      type: System.Nullable{System.Guid}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  id: Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<TimeSpan> arg1, Nullable<TimeSpan> arg2, Nullable<TimeSpan> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.TimeSpan}
      description: "为其计算校验和值。"
    - id: arg2
      type: System.Nullable{System.TimeSpan}
      description: "为其计算校验和值。"
    - id: arg3
      type: System.Nullable{System.TimeSpan}
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)
  id: Checksum(System.String,System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(String,String,String)
  nameWithType: SqlFunctions.Checksum(String,String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String,String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回通过输入自变量进行计算的校验和值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[校验和 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> Checksum (string arg1, string arg2, string arg3);
    parameters:
    - id: arg1
      type: System.String
      description: "为其计算校验和值。"
    - id: arg2
      type: System.String
      description: "为其计算校验和值。"
    - id: arg3
      type: System.String
      description: "为其计算校验和值。"
    return:
      type: System.Nullable{System.Int32}
      description: "通过输入值计算校验和。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})
  id: ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: ChecksumAggregate(IEnumerable<Int32>)
  nameWithType: SqlFunctions.ChecksumAggregate(IEnumerable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(IEnumerable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回集合中的值的校验和。 将忽略 null 值。"
  remarks: "此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHECKSUM_AGG (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> ChecksumAggregate (System.Collections.Generic.IEnumerable<int> arg);
    parameters:
    - id: arg
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: "对其计算校验和的值的集合。"
    return:
      type: System.Nullable{System.Int32}
      description: "校验和计算从输入集合。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  id: ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  nameWithType: SqlFunctions.ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回集合中的值的校验和。 将忽略 null 值。"
  remarks: "此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CHECKSUM_AGG (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)。"
  syntax:
    content: public static Nullable<int> ChecksumAggregate (System.Collections.Generic.IEnumerable<Nullable<int>> arg);
    parameters:
    - id: arg
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
      description: "对其计算校验和的值的集合。"
    return:
      type: System.Nullable{System.Int32}
      description: "校验和计算从输入集合。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})
  id: Cos(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Cos(Nullable<Decimal>)
  nameWithType: SqlFunctions.Cos(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cos(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回以弧度表示，指定表达式中的指定角度的三角余弦。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[COS (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140121)。"
  syntax:
    content: public static Nullable<double> Cos (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定角度的三角余弦值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Cos*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})
  id: Cos(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Cos(Nullable<Double>)
  nameWithType: SqlFunctions.Cos(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cos(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回以弧度表示，指定表达式中的指定角度的三角余弦。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[COS (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140121)。"
  syntax:
    content: public static Nullable<double> Cos (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定角度的三角余弦值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Cos*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})
  id: Cot(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Cot(Nullable<Decimal>)
  nameWithType: SqlFunctions.Cot(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cot(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学函数，返回以弧度表示的指定角度的三角余切值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[COT (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140122)。"
  syntax:
    content: public static Nullable<double> Cot (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定角度的三角余切。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Cot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})
  id: Cot(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Cot(Nullable<Double>)
  nameWithType: SqlFunctions.Cot(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cot(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学函数，返回以弧度表示的指定角度的三角余切值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[COT (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140122)。"
  syntax:
    content: public static Nullable<double> Cot (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定角度的三角余切。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Cot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp
  id: CurrentTimestamp
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CurrentTimestamp()
  nameWithType: SqlFunctions.CurrentTimestamp()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回当前日期和时间。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CURRENT_TIMESTAMP (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140125)。"
  syntax:
    content: public static Nullable<DateTime> CurrentTimestamp ();
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "当前日期和时间。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser
  id: CurrentUser
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CurrentUser()
  nameWithType: SqlFunctions.CurrentUser()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回当前用户的名称。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[CURRENT_USER (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140126)。"
  syntax:
    content: public static string CurrentUser ();
    parameters: []
    return:
      type: System.String
      description: "当前用户的名称。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])
  id: DataLength(System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Byte[])
  nameWithType: SqlFunctions.DataLength(Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (byte[] arg);
    parameters:
    - id: arg
      type: System.Byte[]
      description: "要检查其长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})
  id: DataLength(System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<Boolean>)
  nameWithType: SqlFunctions.DataLength(Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Boolean>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<bool> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Boolean}
      description: "要检查其数据长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})
  id: DataLength(System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<DateTime>)
  nameWithType: SqlFunctions.DataLength(Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<DateTime> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.DateTime}
      description: "要检查其数据长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})
  id: DataLength(System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DataLength(Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<DateTimeOffset> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.DateTimeOffset}
      description: "要检查其数据长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})
  id: DataLength(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<Decimal>)
  nameWithType: SqlFunctions.DataLength(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "要检查其数据长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})
  id: DataLength(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<Double>)
  nameWithType: SqlFunctions.DataLength(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "要检查其数据长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})
  id: DataLength(System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<Guid>)
  nameWithType: SqlFunctions.DataLength(Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Guid>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<Guid> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Guid}
      description: "要检查其数据长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})
  id: DataLength(System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DataLength(Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<TimeSpan> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.TimeSpan}
      description: "要检查其数据长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)
  id: DataLength(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(String)
  nameWithType: SqlFunctions.DataLength(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回用于表示任何表达式的字节数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[datalength 之外 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)。"
  syntax:
    content: public static Nullable<int> DataLength (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "要检查其数据长度的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的值中的字节数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})
  id: DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回一个新<xref uid=&quot;langword_csharp_datetime&quot; name=&quot;datetime&quot; href=&quot;&quot;></xref>值基于在指定日期增加的时间间隔。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEADD (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=140128)"
  syntax:
    content: public static Nullable<DateTime> DateAdd (string datePartArg, Nullable<double> number, Nullable<DateTime> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "要递增的日期部分。"
    - id: number
      type: System.Nullable{System.Double}
      description: "用于递增日期的指定数量的值。"
    - id: date
      type: System.Nullable{System.DateTime}
      description: "要递增的日期。"
    return:
      type: System.Nullable{System.DateTime}
      description: "新的日期。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})
  id: DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回基于指定日期增加的时间间隔的新的日期值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEADD (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=140128)"
  syntax:
    content: public static Nullable<DateTimeOffset> DateAdd (string datePartArg, Nullable<double> number, Nullable<DateTimeOffset> dateTimeOffsetArg);
    parameters:
    - id: datePartArg
      type: System.String
      description: "要递增的日期部分。"
    - id: number
      type: System.Nullable{System.Double}
      description: "用于递增日期的指定数量的值。"
    - id: dateTimeOffsetArg
      type: System.Nullable{System.DateTimeOffset}
      description: "要递增的日期。"
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "新时间点，表示为日期和当天，相对于协调世界时 (UTC) 的时间。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})
  id: DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回基于添加到指定的时间跨度的时间间隔的新时间范围值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEADD (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=140128)"
  syntax:
    content: public static Nullable<TimeSpan> DateAdd (string datePartArg, Nullable<double> number, Nullable<TimeSpan> time);
    parameters:
    - id: datePartArg
      type: System.String
      description: "要递增的日期部分。"
    - id: number
      type: System.Nullable{System.Double}
      description: "用于递增日期的指定数量的值。"
    - id: time
      type: System.Nullable{System.TimeSpan}
      description: "要递增的时间范围。"
    return:
      type: System.Nullable{System.TimeSpan}
      description: "新的时间跨度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)
  id: DateAdd(System.String,System.Nullable{System.Double},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateAdd(String,Nullable<Double>,String)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回一个新<xref uid=&quot;langword_csharp_datetime&quot; name=&quot;datetime&quot; href=&quot;&quot;></xref>值基于在指定日期增加的时间间隔。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEADD (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=140128)"
  syntax:
    content: public static Nullable<DateTime> DateAdd (string datePartArg, Nullable<double> number, string date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "要递增的日期部分。"
    - id: number
      type: System.Nullable{System.Double}
      description: "用于递增日期的指定数量的值。"
    - id: date
      type: System.String
      description: "要递增的日期。"
    return:
      type: System.Nullable{System.DateTime}
      description: "A &lt;xref:System.Nullable%601&gt;的<xref:System.DateTime>值，该值是新的日期。</xref:System.DateTime>"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTime> startDate, Nullable<DateTime> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})
  id: DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTime> startDate, Nullable<DateTimeOffset> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.DateTimeOffset}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})
  id: DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTime> startDate, Nullable<TimeSpan> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.TimeSpan}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)
  id: DateDiff(System.String,System.Nullable{System.DateTime},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTime>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTime> startDate, string endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: "第一个日期。"
    - id: endDate
      type: System.String
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})
  id: DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTimeOffset> startDate, Nullable<DateTime> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.DateTimeOffset}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  id: DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTimeOffset> startDate, Nullable<DateTimeOffset> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.DateTimeOffset}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.DateTimeOffset}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})
  id: DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTimeOffset> startDate, Nullable<TimeSpan> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.DateTimeOffset}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.TimeSpan}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)
  id: DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTimeOffset>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTimeOffset> startDate, string endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.DateTimeOffset}
      description: "第一个日期。"
    - id: endDate
      type: System.String
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})
  id: DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<TimeSpan> startDate, Nullable<DateTime> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.TimeSpan}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})
  id: DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<TimeSpan> startDate, Nullable<DateTimeOffset> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.TimeSpan}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.DateTimeOffset}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  id: DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<TimeSpan> startDate, Nullable<TimeSpan> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.TimeSpan}
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.TimeSpan}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)
  id: DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<TimeSpan>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<TimeSpan> startDate, string endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.Nullable{System.TimeSpan}
      description: "第一个日期。"
    - id: endDate
      type: System.String
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})
  id: DateDiff(System.String,System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, string startDate, Nullable<DateTime> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.String
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})
  id: DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, string startDate, Nullable<DateTimeOffset> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.String
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.DateTimeOffset}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})
  id: DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, string startDate, Nullable<TimeSpan> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.String
      description: "第一个日期。"
    - id: endDate
      type: System.Nullable{System.TimeSpan}
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定两个日期之间的时间间隔数的值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)
  id: DateDiff(System.String,System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,String,String)
  nameWithType: SqlFunctions.DateDiff(String,String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的开始日期和结束日期之间交叉的指定日期部分边界的计数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEDIFF (Transact SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, string startDate, string endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: startDate
      type: System.String
      description: "第一个日期。"
    - id: endDate
      type: System.String
      description: "第二个日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个日期之间的时间间隔数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})
  id: DateName(System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateName(String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateName(String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回表示指定日期的指定日期部分的字符串。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATENAME (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141345)。"
  syntax:
    content: public static string DateName (string datePartArg, Nullable<DateTime> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: date
      type: System.Nullable{System.DateTime}
      description: "日期。"
    return:
      type: System.String
      description: "在指定日期的指定的部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})
  id: DateName(System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateName(String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateName(String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回表示指定日期的指定日期部分的字符串。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATENAME (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141345)。"
  syntax:
    content: public static string DateName (string datePartArg, Nullable<DateTimeOffset> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: date
      type: System.Nullable{System.DateTimeOffset}
      description: "日期。"
    return:
      type: System.String
      description: "在指定日期的指定的部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})
  id: DateName(System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateName(String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateName(String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回表示指定日期的指定日期部分的字符串。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATENAME (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141345)。"
  syntax:
    content: public static string DateName (string datePartArg, Nullable<TimeSpan> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: date
      type: System.Nullable{System.TimeSpan}
      description: "日期。"
    return:
      type: System.String
      description: "在指定日期的指定的部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)
  id: DateName(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateName(String,String)
  nameWithType: SqlFunctions.DateName(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回表示指定日期的指定日期部分的字符串。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATENAME (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141345)。"
  syntax:
    content: public static string DateName (string datePartArg, string date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "用于计算不同时间间隔数的日期部分。"
    - id: date
      type: System.String
      description: "日期。"
    return:
      type: System.String
      description: "在指定日期的指定的部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})
  id: DatePart(System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DatePart(String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回一个整数，表示指定日期的指定日期部分。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEPART (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141346)。"
  syntax:
    content: public static Nullable<int> DatePart (string datePartArg, Nullable<DateTime> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "要返回的值的日期部分。"
    - id: date
      type: System.Nullable{System.DateTime}
      description: "日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定日期的指定日期部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})
  id: DatePart(System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DatePart(String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回一个整数，表示指定日期的指定日期部分。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEPART (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141346)。"
  syntax:
    content: public static Nullable<int> DatePart (string datePartArg, Nullable<DateTimeOffset> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "要返回的值的日期部分。"
    - id: date
      type: System.Nullable{System.DateTimeOffset}
      description: "日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定日期的指定日期部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})
  id: DatePart(System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DatePart(String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回一个整数，表示指定日期的指定日期部分。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEPART (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141346)。"
  syntax:
    content: public static Nullable<int> DatePart (string datePartArg, Nullable<TimeSpan> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "要返回的值的日期部分。"
    - id: date
      type: System.Nullable{System.TimeSpan}
      description: "日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定日期的指定日期部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)
  id: DatePart(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DatePart(String,String)
  nameWithType: SqlFunctions.DatePart(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回一个整数，表示指定日期的指定日期部分。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[DATEPART (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141346)。"
  syntax:
    content: public static Nullable<int> DatePart (string datePartArg, string date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "要返回的值的日期部分。"
    - id: date
      type: System.String
      description: "日期。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定日期的指定日期部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})
  id: Degrees(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Degrees(Nullable<Decimal>)
  nameWithType: SqlFunctions.Degrees(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回以度为单位指定以弧度表示的角的相应角度。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[度 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141348)。"
  syntax:
    content: public static Nullable<decimal> Degrees (Nullable<decimal> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Decimal}
      description: "指定的角度转换为度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})
  id: Degrees(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Degrees(Nullable<Double>)
  nameWithType: SqlFunctions.Degrees(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回以度为单位指定以弧度表示的角的相应角度。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[度 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141348)。"
  syntax:
    content: public static Nullable<double> Degrees (Nullable<double> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定的角度转换为度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})
  id: Degrees(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Degrees(Nullable<Int32>)
  nameWithType: SqlFunctions.Degrees(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回以度为单位指定以弧度表示的角的相应角度。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[度 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141348)。"
  syntax:
    content: public static Nullable<int> Degrees (Nullable<int> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Int32}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定的角度转换为度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})
  id: Degrees(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Degrees(Nullable<Int64>)
  nameWithType: SqlFunctions.Degrees(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回以度为单位指定以弧度表示的角的相应角度。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[度 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141348)。"
  syntax:
    content: public static Nullable<long> Degrees (Nullable<long> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Int64}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Int64}
      description: "指定的角度转换为度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)
  id: Difference(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Difference(String,String)
  nameWithType: SqlFunctions.Difference(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Difference(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回一个整数值，该值指示两个字符表达式的 SOUNDEX 值之间的差异。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[差异 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141349)。"
  syntax:
    content: public static Nullable<int> Difference (string string1, string string2);
    parameters:
    - id: string1
      type: System.String
      description: "第一个字符串。"
    - id: string2
      type: System.String
      description: "第二个字符串。"
    return:
      type: System.Nullable{System.Int32}
      description: "两个字符串之间的 SOUNDEX 差异。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Difference*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})
  id: Exp(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Exp(Nullable<Decimal>)
  nameWithType: SqlFunctions.Exp(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Exp(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的浮点表达式的指数值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[EXP (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141350)。"
  syntax:
    content: public static Nullable<double> Exp (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "输入的值。"
    return:
      type: System.Nullable{System.Double}
      description: "常量 e 的幂的输入值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Exp*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})
  id: Exp(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Exp(Nullable<Double>)
  nameWithType: SqlFunctions.Exp(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Exp(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的浮点表达式的指数值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[EXP (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141350)。"
  syntax:
    content: public static Nullable<double> Exp (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "输入的值。"
    return:
      type: System.Nullable{System.Double}
      description: "常量 e 的幂的输入值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Exp*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetDate
  id: GetDate
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: GetDate()
  nameWithType: SqlFunctions.GetDate()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.GetDate()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回当前数据库系统时间戳作为 datetime 值而无需数据库时区偏移量。 此值派生自在其运行的 SQL Server 实例的计算机的操作系统。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[GETDATE (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141352)。"
  syntax:
    content: public static Nullable<DateTime> GetDate ();
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "当前数据库时间戳。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.GetDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate
  id: GetUtcDate
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: GetUtcDate()
  nameWithType: SqlFunctions.GetUtcDate()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回当前数据库系统时间戳作为 datetime 值。 不包括数据库时区偏移量。 此值表示当前 UTC 时间 （协调世界时）。 此值派生自在其运行的 SQL Server 实例的计算机的操作系统。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[GETUTCDATE (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141353)。"
  syntax:
    content: public static Nullable<DateTime> GetUtcDate ();
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "当前数据库 UTC 时间戳。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.HostName
  id: HostName
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: HostName()
  nameWithType: SqlFunctions.HostName()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.HostName()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回工作站名称。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[主机名 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141354)。"
  syntax:
    content: public static string HostName ();
    parameters: []
    return:
      type: System.String
      description: "工作站的名称。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.HostName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)
  id: IsDate(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: IsDate(String)
  nameWithType: SqlFunctions.IsDate(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.IsDate(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指示输入的值是有效的日期或时间。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[主机名 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141354)。"
  syntax:
    content: public static Nullable<int> IsDate (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "所测试的值。"
    return:
      type: System.Nullable{System.Int32}
      description: "如果输入的表达式是有效的日期或时间的 datetime 或 smalldatetime 数据类型; 的值为 1否则为为 0。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.IsDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)
  id: IsNumeric(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: IsNumeric(String)
  nameWithType: SqlFunctions.IsNumeric(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指示输入的值是否为有效的数值类型。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[ISNUMERIC (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141355)。"
  syntax:
    content: public static Nullable<int> IsNumeric (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "一个字符串表达式。"
    return:
      type: System.Nullable{System.Int32}
      description: "如果输入的表达式是有效的数值数据类型; 则为 1否则为为 0。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})
  id: Log(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Log(Nullable<Decimal>)
  nameWithType: SqlFunctions.Log(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的输入值的自然对数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[日志 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141358)。"
  syntax:
    content: public static Nullable<double> Log (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入值自然对数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Log*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})
  id: Log(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Log(Nullable<Double>)
  nameWithType: SqlFunctions.Log(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的输入值的自然对数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[日志 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141358)。"
  syntax:
    content: public static Nullable<double> Log (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入值自然对数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Log*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})
  id: Log10(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Log10(Nullable<Decimal>)
  nameWithType: SqlFunctions.Log10(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log10(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的输入值的以&10; 为基数的对数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[LOG10 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141359)。"
  syntax:
    content: public static Nullable<double> Log10 (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入值以&10; 为基数的对数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Log10*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})
  id: Log10(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Log10(Nullable<Double>)
  nameWithType: SqlFunctions.Log10(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log10(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的输入值的以&10; 为基数的对数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[LOG10 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141359)。"
  syntax:
    content: public static Nullable<double> Log10 (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入值以&10; 为基数的对数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Log10*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})
  id: NChar(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: NChar(Nullable<Int32>)
  nameWithType: SqlFunctions.NChar(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.NChar(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "如 Unicode 标准所定义，则返回与指定的整数代码的 Unicode 字符。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[NCHAR (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141365)。"
  syntax:
    content: public static string NChar (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "字符的代码。"
    return:
      type: System.String
      description: "对应于所输入的字符代码的字符。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.NChar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)
  id: PatIndex(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: PatIndex(String,String)
  nameWithType: SqlFunctions.PatIndex(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.PatIndex(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回一种模式的第一个匹配项的起始位置中指定的表达式或为零，如果未找到该模式，则对所有有效的文本和字符数据类型。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[PATINDEX (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141310)。"
  syntax:
    content: public static Nullable<int> PatIndex (string stringPattern, string target);
    parameters:
    - id: stringPattern
      type: System.String
      description: "要搜索的字符串模式。"
    - id: target
      type: System.String
      description: "要搜索的字符串。"
    return:
      type: System.Nullable{System.Int32}
      description: "在其中找到字符串模式起始字符位置。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.PatIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Pi
  id: Pi
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Pi()
  nameWithType: SqlFunctions.Pi()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Pi()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回 pi 的常量值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[PI (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141311)。"
  syntax:
    content: public static Nullable<double> Pi ();
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "Pi 数字值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Pi*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)
  id: QuoteName(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: QuoteName(String)
  nameWithType: SqlFunctions.QuoteName(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回带有分隔符的 Unicode 字符串添加以使输入的字符串有效的 Microsoft SQL Server 分隔标识符。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[QUOTENAME (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141313)。"
  syntax:
    content: public static string QuoteName (string stringArg);
    parameters:
    - id: stringArg
      type: System.String
      description: "引号字符的表达式将添加到。"
    return:
      type: System.String
      description: "括号后添加原始字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.QuoteName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)
  id: QuoteName(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: QuoteName(String,String)
  nameWithType: SqlFunctions.QuoteName(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回带有分隔符的 Unicode 字符串添加以使输入的字符串有效的 Microsoft SQL Server 分隔标识符。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[QUOTENAME (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141313)。"
  syntax:
    content: public static string QuoteName (string stringArg, string quoteCharacter);
    parameters:
    - id: stringArg
      type: System.String
      description: "引号字符的表达式将添加到。"
    - id: quoteCharacter
      type: System.String
      description: "要用作分隔符的单字符字符串。 它可以是单引号 （&quot;）、 左或右方括号 ([]) 或双引号 （&quot;）。 如果未指定 quote_character，则使用方括号。"
    return:
      type: System.String
      description: "使用指定的原始字符串引号字符添加。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.QuoteName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})
  id: Radians(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Radians(Nullable<Decimal>)
  nameWithType: SqlFunctions.Radians(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回对应于以度为单位指定角度的弧度度量值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[弧度 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141314)。"
  syntax:
    content: public static Nullable<decimal> Radians (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "测量的角度，以度为单位。"
    return:
      type: System.Nullable{System.Decimal}
      description: "指定角度的弧度度量值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})
  id: Radians(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Radians(Nullable<Double>)
  nameWithType: SqlFunctions.Radians(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回对应于以度为单位指定角度的弧度度量值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[弧度 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141314)。"
  syntax:
    content: public static Nullable<double> Radians (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "测量的角度，以度为单位。"
    return:
      type: System.Nullable{System.Double}
      description: "指定角度的弧度度量值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})
  id: Radians(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Radians(Nullable<Int32>)
  nameWithType: SqlFunctions.Radians(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回对应于以度为单位指定角度的弧度度量值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[弧度 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141314)。"
  syntax:
    content: public static Nullable<int> Radians (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "以度为单位测量的角度"
    return:
      type: System.Nullable{System.Int32}
      description: "指定角度的弧度度量值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})
  id: Radians(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Radians(Nullable<Int64>)
  nameWithType: SqlFunctions.Radians(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回对应于以度为单位指定角度的弧度度量值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[弧度 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141314)。"
  syntax:
    content: public static Nullable<long> Radians (Nullable<long> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int64}
      description: "以度为单位测量的角度"
    return:
      type: System.Nullable{System.Int64}
      description: "指定角度的弧度度量值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand
  id: Rand
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Rand()
  nameWithType: SqlFunctions.Rand()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Rand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回介于 0 和 1，独占的伪随机浮点值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[RAND (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141315)。"
  syntax:
    content: public static Nullable<double> Rand ();
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "伪随机值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Rand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})
  id: Rand(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Rand(Nullable<Int32>)
  nameWithType: SqlFunctions.Rand(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Rand(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回介于 0 和 1，独占的伪随机浮点值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 了解相应的 SQL Server 函数，请参阅[RAND (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141315)。"
  syntax:
    content: public static Nullable<double> Rand (Nullable<int> seed);
    parameters:
    - id: seed
      type: System.Nullable{System.Int32}
      description: "种子值中。 如果`seed`未指定，则 SQL Server 数据库引擎将随机分配种子值。 对于指定的种子值，返回的结果始终是相同。"
    return:
      type: System.Nullable{System.Double}
      description: "伪随机值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Rand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})
  id: Replicate(System.String,System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Replicate(String,Nullable<Int32>)
  nameWithType: SqlFunctions.Replicate(String,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Replicate(String,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "将一个字符串值重复指定的次数。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[复制 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141318)。"
  syntax:
    content: public static string Replicate (string target, Nullable<int> count);
    parameters:
    - id: target
      type: System.String
      description: "一个有效的字符串。"
    - id: count
      type: System.Nullable{System.Int32}
      description: "用于指定多少时间，将重复的值`target`。"
    return:
      type: System.String
      description: "目标字符串中，重复指定次数<code> count </code>。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Replicate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})
  id: Sign(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sign(Nullable<Decimal>)
  nameWithType: SqlFunctions.Sign(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回的正 (+&1;)、 零 (0) 号或负号 (-1) 的指定的表达式。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[登录 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141323)。"
  syntax:
    content: public static Nullable<decimal> Sign (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Decimal}
      description: "输入的表达式的符号。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})
  id: Sign(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sign(Nullable<Double>)
  nameWithType: SqlFunctions.Sign(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回的正 (+&1;)、 零 (0) 号或负号 (-1) 的指定的表达式。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[登录 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141323)。"
  syntax:
    content: public static Nullable<double> Sign (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入的表达式的符号。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})
  id: Sign(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sign(Nullable<Int32>)
  nameWithType: SqlFunctions.Sign(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回的正 (+&1;)、 零 (0) 号或负号 (-1) 的指定的表达式。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[登录 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141323)。"
  syntax:
    content: public static Nullable<int> Sign (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入的表达式的符号。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})
  id: Sign(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sign(Nullable<Int64>)
  nameWithType: SqlFunctions.Sign(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回的正 (+&1;)、 零 (0) 号或负号 (-1) 的指定的表达式。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[登录 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141323)。"
  syntax:
    content: public static Nullable<long> Sign (Nullable<long> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int64}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Int64}
      description: "输入的表达式的符号。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})
  id: Sin(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sin(Nullable<Decimal>)
  nameWithType: SqlFunctions.Sin(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sin(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定角度的三角正弦值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[SIN (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141324)。"
  syntax:
    content: public static Nullable<double> Sin (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "输入的表达式的三角正弦值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sin*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})
  id: Sin(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sin(Nullable<Double>)
  nameWithType: SqlFunctions.Sin(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sin(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定角度的三角正弦值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[SIN (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141324)。"
  syntax:
    content: public static Nullable<double> Sin (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "输入的表达式的三角正弦值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sin*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)
  id: SoundCode(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: SoundCode(String)
  nameWithType: SqlFunctions.SoundCode(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SoundCode(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "将一个字母数字的字符串转换为一个四字符代码 (SOUNDEX) 以查找类似相近词或名称。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[SOUNDEX (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141325)。"
  syntax:
    content: public static string SoundCode (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "一个有效的字符串。"
    return:
      type: System.String
      description: "输入字符串的 SOUNDEX 代码。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.SoundCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})
  id: Space(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Space(Nullable<Int32>)
  nameWithType: SqlFunctions.Space(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Space(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回重复的空格的字符串。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[空间 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141326)。"
  syntax:
    content: public static string Space (Nullable<int> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Int32}
      description: "空格数。 如果为负数，则返回 null 的字符串。"
    return:
      type: System.String
      description: "包含的指定数量的空格的字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Space*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})
  id: Square(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Square(Nullable<Decimal>)
  nameWithType: SqlFunctions.Square(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Square(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的数的平方。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[正方形 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141327)。"
  syntax:
    content: public static Nullable<double> Square (Nullable<decimal> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入值的平方。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Square*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})
  id: Square(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Square(Nullable<Double>)
  nameWithType: SqlFunctions.Square(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Square(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的数的平方。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[正方形 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141327)。"
  syntax:
    content: public static Nullable<double> Square (Nullable<double> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入值的平方。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Square*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})
  id: SquareRoot(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: SquareRoot(Nullable<Decimal>)
  nameWithType: SqlFunctions.SquareRoot(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的数的平方根。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[SQRT (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141328)。"
  syntax:
    content: public static Nullable<double> SquareRoot (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入值的平方根。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})
  id: SquareRoot(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: SquareRoot(Nullable<Double>)
  nameWithType: SqlFunctions.SquareRoot(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回指定的数的平方根。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[SQRT (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141328)。"
  syntax:
    content: public static Nullable<double> SquareRoot (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "一个数值表达式。"
    return:
      type: System.Nullable{System.Double}
      description: "输入值的平方根。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})
  id: StringConvert(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Decimal>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回字符从数值数据转换的数据。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[STR (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)。"
  syntax:
    content: public static string StringConvert (Nullable<decimal> number);
    parameters:
    - id: number
      type: System.Nullable{System.Decimal}
      description: "一个数值表达式。"
    return:
      type: System.String
      description: "输入的表达式转换为字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})
  id: StringConvert(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Double>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回字符从数值数据转换的数据。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[STR (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)。"
  syntax:
    content: public static string StringConvert (Nullable<double> number);
    parameters:
    - id: number
      type: System.Nullable{System.Double}
      description: "一个数值表达式。"
    return:
      type: System.String
      description: "数值输入的表达式转换为字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})
  id: StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Decimal>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回字符从数值数据转换的数据。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[STR (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)。"
  syntax:
    content: public static string StringConvert (Nullable<decimal> number, Nullable<int> length);
    parameters:
    - id: number
      type: System.Nullable{System.Decimal}
      description: "一个数值表达式。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "字符串的总长度。 这包括小数点、 符号、 数字和空格。 默认值为 10。"
    return:
      type: System.String
      description: "输入的表达式转换为字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})
  id: StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Double>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回字符从数值数据转换的数据。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[STR (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)。"
  syntax:
    content: public static string StringConvert (Nullable<double> number, Nullable<int> length);
    parameters:
    - id: number
      type: System.Nullable{System.Double}
      description: "一个数值表达式。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "字符串的总长度。 这包括小数点、 符号、 数字和空格。 默认值为 10。"
    return:
      type: System.String
      description: "数值输入的表达式转换为字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回字符从数值数据转换的数据。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[STR (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)。"
  syntax:
    content: public static string StringConvert (Nullable<decimal> number, Nullable<int> length, Nullable<int> decimalArg);
    parameters:
    - id: number
      type: System.Nullable{System.Decimal}
      description: "一个数值表达式。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "字符串的总长度。 这包括小数点、 符号、 数字和空格。 默认值为 10。"
    - id: decimalArg
      type: System.Nullable{System.Int32}
      description: "小数点右侧的位置数。 `decimal`必须小于或等于 16。 如果`decimal`为多个 16，然后将结果截断至小数点右侧的十六个位置。"
    return:
      type: System.String
      description: "输入的表达式转换为字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回字符从数值数据转换的数据。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[STR (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)。"
  syntax:
    content: public static string StringConvert (Nullable<double> number, Nullable<int> length, Nullable<int> decimalArg);
    parameters:
    - id: number
      type: System.Nullable{System.Double}
      description: "一个数值表达式。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "字符串的总长度。 这包括小数点、 符号、 数字和空格。 默认值为 10。"
    - id: decimalArg
      type: System.Nullable{System.Int32}
      description: "小数点右侧的位置数。 `decimal`必须小于或等于 16。 如果`decimal`为多个 16，然后将结果截断至小数点右侧的十六个位置。"
    return:
      type: System.String
      description: "数值输入的表达式转换为字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)
  id: Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  nameWithType: SqlFunctions.Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "将字符串插入到另一个字符串。 删除指定的长度的目标字符串中的开始位置中的字符，并且然后将第二个字符串插入到目标字符串中开始位置。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[内容 (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141708)。"
  syntax:
    content: public static string Stuff (string stringInput, Nullable<int> start, Nullable<int> length, string stringReplacement);
    parameters:
    - id: stringInput
      type: System.String
      description: "目标字符串。"
    - id: start
      type: System.Nullable{System.Int32}
      description: "中的字符位置`stringinput`替换字符串是要插入的位置。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "要删除的字符数`stringInput`。 如果`length`长于`stringInput`，则最多删除到最后一个字符在`stringReplacement`。"
    - id: stringReplacement
      type: System.String
      description: "要插入到的子字符串`stringInput`。"
    return:
      type: System.String
      description: "一个包含两个字符串的字符串。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Stuff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})
  id: Tan(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Tan(Nullable<Decimal>)
  nameWithType: SqlFunctions.Tan(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Tan(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回输入表达式的三角正切值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[TAN (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141715)。"
  syntax:
    content: public static Nullable<double> Tan (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "输入的角度的正切值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Tan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})
  id: Tan(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Tan(Nullable<Double>)
  nameWithType: SqlFunctions.Tan(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Tan(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回输入表达式的三角正切值。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[TAN (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141715)。"
  syntax:
    content: public static Nullable<double> Tan (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "以弧度计量的角度。"
    return:
      type: System.Nullable{System.Double}
      description: "输入的角度的正切值。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Tan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)
  id: Unicode(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Unicode(String)
  nameWithType: SqlFunctions.Unicode(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Unicode(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回整数值，如 Unicode 标准中，输入表达式的第一个字符所定义。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[UNICODE (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141716)。"
  syntax:
    content: public static Nullable<int> Unicode (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "一个有效的字符串。"
    return:
      type: System.Nullable{System.Int32}
      description: "输入字符串中的第一个字符的代码。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Unicode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName
  id: UserName
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: UserName()
  nameWithType: SqlFunctions.UserName()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.UserName()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回数据库用户名对应于指定的标识号。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[USER_NAME (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141718)。"
  syntax:
    content: public static string UserName ();
    parameters: []
    return:
      type: System.String
      description: "用户名。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.UserName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})
  id: UserName(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: UserName(Nullable<Int32>)
  nameWithType: SqlFunctions.UserName(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.UserName(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "返回数据库用户名对应于指定的标识号。"
  remarks: "不能直接调用此函数。 此函数仅可以出现在 LINQ to Entities 查询中。       此函数将转换为在数据库中相应的函数。 有关相应的 SQL Server 函数的信息，请参阅[USER_NAME (Transact SQL)](http://go.microsoft.com/fwlink/?LinkId=141718)。"
  syntax:
    content: public static string UserName (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "用户 id。"
    return:
      type: System.String
      description: "用户名。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Acos(Nullable<Decimal>)
  nameWithType: SqlFunctions.Acos(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Acos(Nullable<Decimal>)
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Nullable{System.Decimal}
  parent: System
  isExternal: true
  name: Nullable<Decimal>
  nameWithType: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Decimal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: Decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Acos(Nullable<Double>)
  nameWithType: SqlFunctions.Acos(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Acos(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Ascii(String)
  nameWithType: SqlFunctions.Ascii(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Ascii(String)
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Asin(Nullable<Decimal>)
  nameWithType: SqlFunctions.Asin(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Asin(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Asin(Nullable<Double>)
  nameWithType: SqlFunctions.Asin(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Asin(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan(Nullable<Decimal>)
  nameWithType: SqlFunctions.Atan(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan(Nullable<Double>)
  nameWithType: SqlFunctions.Atan(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan2(Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Atan2(Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan2(Nullable<Decimal>,Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan2(Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Atan2(Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan2(Nullable<Double>,Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Char(Nullable<Int32>)
  nameWithType: SqlFunctions.Char(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Char(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(Byte[],Byte[])
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(String,String)
  nameWithType: SqlFunctions.CharIndex(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(Byte[],Byte[],Nullable<Int32>)
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(Byte[],Byte[],Nullable<Int64>)
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int64>)
- uid: System.Nullable{System.Int64}
  parent: System
  isExternal: true
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int64>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(String,String,Nullable<Int32>)
  nameWithType: SqlFunctions.CharIndex(String,String,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(String,String,Nullable<Int64>)
  nameWithType: SqlFunctions.CharIndex(String,String,Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String,Nullable<Int64>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[])
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>)
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>)
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>)
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  isExternal: true
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTimeOffset>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>)
- uid: System.Nullable{System.Guid}
  parent: System
  isExternal: true
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Guid>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>)
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(String)
  nameWithType: SqlFunctions.Checksum(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Byte[],Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[],Byte[])
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Boolean>,Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Guid>,Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(String,String)
  nameWithType: SqlFunctions.Checksum(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Byte[],Byte[],Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[],Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[],Byte[],Byte[])
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(String,String,String)
  nameWithType: SqlFunctions.Checksum(String,String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String,String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: ChecksumAggregate(IEnumerable<Int32>)
  nameWithType: SqlFunctions.ChecksumAggregate(IEnumerable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(IEnumerable<Int32>)
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  nameWithType: SqlFunctions.ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(IEnumerable<Nullable<Int32>>)
- uid: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Nullable<Int32>>
  nameWithType: IEnumerable<Nullable<Int32>>
  fullName: System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Nullable<System.Int32>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cos(Nullable<Decimal>)
  nameWithType: SqlFunctions.Cos(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cos(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cos(Nullable<Double>)
  nameWithType: SqlFunctions.Cos(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cos(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cot(Nullable<Decimal>)
  nameWithType: SqlFunctions.Cot(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cot(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cot(Nullable<Double>)
  nameWithType: SqlFunctions.Cot(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cot(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CurrentTimestamp()
  nameWithType: SqlFunctions.CurrentTimestamp()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp()
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CurrentUser()
  nameWithType: SqlFunctions.CurrentUser()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser()
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Byte[])
  nameWithType: SqlFunctions.DataLength(Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Byte[])
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<Boolean>)
  nameWithType: SqlFunctions.DataLength(Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Boolean>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<DateTime>)
  nameWithType: SqlFunctions.DataLength(Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DataLength(Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<Decimal>)
  nameWithType: SqlFunctions.DataLength(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<Double>)
  nameWithType: SqlFunctions.DataLength(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<Guid>)
  nameWithType: SqlFunctions.DataLength(Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Guid>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DataLength(Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(String)
  nameWithType: SqlFunctions.DataLength(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd(String,Nullable<Double>,String)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTime>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTimeOffset>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<TimeSpan>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,String,String)
  nameWithType: SqlFunctions.DateDiff(String,String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName(String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateName(String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName(String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateName(String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName(String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateName(String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName(String,String)
  nameWithType: SqlFunctions.DateName(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart(String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart(String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart(String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart(String,String)
  nameWithType: SqlFunctions.DatePart(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees(Nullable<Decimal>)
  nameWithType: SqlFunctions.Degrees(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees(Nullable<Double>)
  nameWithType: SqlFunctions.Degrees(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees(Nullable<Int32>)
  nameWithType: SqlFunctions.Degrees(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees(Nullable<Int64>)
  nameWithType: SqlFunctions.Degrees(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Int64>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Difference(String,String)
  nameWithType: SqlFunctions.Difference(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Difference(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Exp(Nullable<Decimal>)
  nameWithType: SqlFunctions.Exp(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Exp(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Exp(Nullable<Double>)
  nameWithType: SqlFunctions.Exp(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Exp(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetDate
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: GetDate()
  nameWithType: SqlFunctions.GetDate()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.GetDate()
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: GetUtcDate()
  nameWithType: SqlFunctions.GetUtcDate()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate()
- uid: System.Data.Objects.SqlClient.SqlFunctions.HostName
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: HostName()
  nameWithType: SqlFunctions.HostName()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.HostName()
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: IsDate(String)
  nameWithType: SqlFunctions.IsDate(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.IsDate(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: IsNumeric(String)
  nameWithType: SqlFunctions.IsNumeric(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log(Nullable<Decimal>)
  nameWithType: SqlFunctions.Log(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log(Nullable<Double>)
  nameWithType: SqlFunctions.Log(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log10(Nullable<Decimal>)
  nameWithType: SqlFunctions.Log10(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log10(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log10(Nullable<Double>)
  nameWithType: SqlFunctions.Log10(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log10(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: NChar(Nullable<Int32>)
  nameWithType: SqlFunctions.NChar(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.NChar(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: PatIndex(String,String)
  nameWithType: SqlFunctions.PatIndex(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.PatIndex(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Pi
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Pi()
  nameWithType: SqlFunctions.Pi()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Pi()
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: QuoteName(String)
  nameWithType: SqlFunctions.QuoteName(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: QuoteName(String,String)
  nameWithType: SqlFunctions.QuoteName(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians(Nullable<Decimal>)
  nameWithType: SqlFunctions.Radians(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians(Nullable<Double>)
  nameWithType: SqlFunctions.Radians(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians(Nullable<Int32>)
  nameWithType: SqlFunctions.Radians(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians(Nullable<Int64>)
  nameWithType: SqlFunctions.Radians(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Int64>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Rand()
  nameWithType: SqlFunctions.Rand()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Rand()
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Rand(Nullable<Int32>)
  nameWithType: SqlFunctions.Rand(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Rand(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Replicate(String,Nullable<Int32>)
  nameWithType: SqlFunctions.Replicate(String,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Replicate(String,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign(Nullable<Decimal>)
  nameWithType: SqlFunctions.Sign(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign(Nullable<Double>)
  nameWithType: SqlFunctions.Sign(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign(Nullable<Int32>)
  nameWithType: SqlFunctions.Sign(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign(Nullable<Int64>)
  nameWithType: SqlFunctions.Sign(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Int64>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sin(Nullable<Decimal>)
  nameWithType: SqlFunctions.Sin(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sin(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sin(Nullable<Double>)
  nameWithType: SqlFunctions.Sin(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sin(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SoundCode(String)
  nameWithType: SqlFunctions.SoundCode(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SoundCode(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Space(Nullable<Int32>)
  nameWithType: SqlFunctions.Space(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Space(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Square(Nullable<Decimal>)
  nameWithType: SqlFunctions.Square(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Square(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Square(Nullable<Double>)
  nameWithType: SqlFunctions.Square(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Square(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SquareRoot(Nullable<Decimal>)
  nameWithType: SqlFunctions.SquareRoot(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SquareRoot(Nullable<Double>)
  nameWithType: SqlFunctions.SquareRoot(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Decimal>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Double>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Decimal>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Double>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  nameWithType: SqlFunctions.Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Tan(Nullable<Decimal>)
  nameWithType: SqlFunctions.Tan(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Tan(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Tan(Nullable<Double>)
  nameWithType: SqlFunctions.Tan(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Tan(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Unicode(String)
  nameWithType: SqlFunctions.Unicode(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Unicode(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: UserName()
  nameWithType: SqlFunctions.UserName()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.UserName()
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: UserName(Nullable<Int32>)
  nameWithType: SqlFunctions.UserName(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.UserName(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Acos
  nameWithType: SqlFunctions.Acos
- uid: System.Data.Objects.SqlClient.SqlFunctions.Ascii*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Ascii
  nameWithType: SqlFunctions.Ascii
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Asin
  nameWithType: SqlFunctions.Asin
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan
  nameWithType: SqlFunctions.Atan
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan2
  nameWithType: SqlFunctions.Atan2
- uid: System.Data.Objects.SqlClient.SqlFunctions.Char*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Char
  nameWithType: SqlFunctions.Char
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex
  nameWithType: SqlFunctions.CharIndex
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum
  nameWithType: SqlFunctions.Checksum
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: ChecksumAggregate
  nameWithType: SqlFunctions.ChecksumAggregate
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cos
  nameWithType: SqlFunctions.Cos
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cot
  nameWithType: SqlFunctions.Cot
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CurrentTimestamp
  nameWithType: SqlFunctions.CurrentTimestamp
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CurrentUser
  nameWithType: SqlFunctions.CurrentUser
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength
  nameWithType: SqlFunctions.DataLength
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd
  nameWithType: SqlFunctions.DateAdd
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff
  nameWithType: SqlFunctions.DateDiff
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName
  nameWithType: SqlFunctions.DateName
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart
  nameWithType: SqlFunctions.DatePart
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees
  nameWithType: SqlFunctions.Degrees
- uid: System.Data.Objects.SqlClient.SqlFunctions.Difference*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Difference
  nameWithType: SqlFunctions.Difference
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Exp
  nameWithType: SqlFunctions.Exp
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetDate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: GetDate
  nameWithType: SqlFunctions.GetDate
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: GetUtcDate
  nameWithType: SqlFunctions.GetUtcDate
- uid: System.Data.Objects.SqlClient.SqlFunctions.HostName*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: HostName
  nameWithType: SqlFunctions.HostName
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsDate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: IsDate
  nameWithType: SqlFunctions.IsDate
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: IsNumeric
  nameWithType: SqlFunctions.IsNumeric
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log
  nameWithType: SqlFunctions.Log
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log10
  nameWithType: SqlFunctions.Log10
- uid: System.Data.Objects.SqlClient.SqlFunctions.NChar*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: NChar
  nameWithType: SqlFunctions.NChar
- uid: System.Data.Objects.SqlClient.SqlFunctions.PatIndex*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: PatIndex
  nameWithType: SqlFunctions.PatIndex
- uid: System.Data.Objects.SqlClient.SqlFunctions.Pi*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Pi
  nameWithType: SqlFunctions.Pi
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: QuoteName
  nameWithType: SqlFunctions.QuoteName
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians
  nameWithType: SqlFunctions.Radians
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Rand
  nameWithType: SqlFunctions.Rand
- uid: System.Data.Objects.SqlClient.SqlFunctions.Replicate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Replicate
  nameWithType: SqlFunctions.Replicate
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign
  nameWithType: SqlFunctions.Sign
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sin
  nameWithType: SqlFunctions.Sin
- uid: System.Data.Objects.SqlClient.SqlFunctions.SoundCode*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SoundCode
  nameWithType: SqlFunctions.SoundCode
- uid: System.Data.Objects.SqlClient.SqlFunctions.Space*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Space
  nameWithType: SqlFunctions.Space
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Square
  nameWithType: SqlFunctions.Square
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SquareRoot
  nameWithType: SqlFunctions.SquareRoot
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert
  nameWithType: SqlFunctions.StringConvert
- uid: System.Data.Objects.SqlClient.SqlFunctions.Stuff*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Stuff
  nameWithType: SqlFunctions.Stuff
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Tan
  nameWithType: SqlFunctions.Tan
- uid: System.Data.Objects.SqlClient.SqlFunctions.Unicode*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Unicode
  nameWithType: SqlFunctions.Unicode
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: UserName
  nameWithType: SqlFunctions.UserName
