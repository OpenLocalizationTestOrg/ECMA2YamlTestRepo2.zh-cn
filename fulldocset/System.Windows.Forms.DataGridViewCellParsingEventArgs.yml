### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs
  id: DataGridViewCellParsingEventArgs
  children:
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs
  type: Class
  summary: "提供有关数据<xref href=&quot;System.Windows.Forms.DataGridView.CellParsing&quot;></xref>事件<xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>控件。"
  remarks: "处理<xref:System.Windows.Forms.DataGridView.CellParsing>事件，以便提供从一个用户指定的值中指定单元格的类型的值的自定义值转换<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>属性。</xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> </xref:System.Windows.Forms.DataGridView.CellParsing>       当处理<xref:System.Windows.Forms.DataGridView.CellParsing>事件，可以自行转换该值，或者你可以自定义默认转换。</xref:System.Windows.Forms.DataGridView.CellParsing> 例如，你可以将值转换使用单元格自行<xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>方法与你选择的类型转换器。</xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> 或者，可以让默认类型转换器分析值，但需要修改<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>返回的对象的属性<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName>属性，使用该单元格初始化<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>属性。</xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> </xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName> </xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>       当你自行转换该值时，替换初始的格式化值<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName>属性中指定单元格的类型的转换值<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>属性。</xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> 若要指示，没有任何进一步分析是必要的设置<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName>属性`true`。</xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName>       事件处理程序完成后，如果<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>是`null`或者不是正确的类型，或<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A>属性是`false`、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>分析使用的单元格<xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>与默认类型转换器方法。</xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> </xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> 此方法的默认实现分析值使用<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>传递单元的单元格样式属性</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A></xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A></xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 如果值不等于<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>、 值分析使用<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>属性和传递单元类型转换器</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A></xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>       若要自定义显示的格式值的一个单元格值的转换，处理<xref:System.Windows.Forms.DataGridView.CellFormatting>事件。</xref:System.Windows.Forms.DataGridView.CellFormatting>       有关处理事件的详细信息，请参阅[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates using DataGridViewCellParsingEventArgs to check the validity of date entries.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/t-system.windows.forms.d_59_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/t-system.windows.forms.d_59_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/t-system.windows.forms.d_59_1.cs)]"
  syntax:
    content: 'public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Forms.ConvertEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Forms.ConvertEventArgs.DesiredType
  - System.Windows.Forms.ConvertEventArgs.Value
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  id: '#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)'
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新实例<xref href=&quot;System.Windows.Forms.DataGridViewCellParsingEventArgs&quot;></xref>类。"
  syntax:
    content: public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "已更改单元格的行索引。"
    - id: columnIndex
      type: System.Int32
      description: "已更改单元格的列索引。"
    - id: value
      type: System.Object
      description: "新值。"
    - id: desiredType
      type: System.Type
      description: "新值的类型。"
    - id: inheritedCellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "应用于已更改的单元格的样式。"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  id: ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取需要分析的单元格数据的列索引。"
  remarks: "ColumnIndex 属性用于获取到<xref:System.Windows.Forms.DataGridView.Columns%2A>属性的一种<xref:System.Windows.Forms.DataGridView>。</xref:System.Windows.Forms.DataGridView></xref:System.Windows.Forms.DataGridView.Columns%2A>索引"
  example:
  - "The following code example demonstrates using ColumnIndex to discover if the changed cell is in the date column.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_44_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/p-system.windows.forms.d_44_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/p-system.windows.forms.d_44_1.cs)]"
  syntax:
    content: public int ColumnIndex { get; }
    return:
      type: System.Int32
      description: "已更改单元格的列索引。"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  id: InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置应用于编辑单元格的样式。"
  remarks: "此属性可用于确定单元格所有有效的格式。 将此属性设置或更改此属性返回的对象的属性没有任何效果，除非<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A>是`false`事件处理程序退出时。</xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> 在这种情况下， <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>的单元格样式属性用于单元格值解析。</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#303](~/add/codesnippet/csharp/p-system.windows.forms.d_66_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/add/codesnippet/visualbasic/p-system.windows.forms.d_66_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;> </xref>该对象表示当前正在编辑的单元格样式。 默认值是该单元格的值<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle*>属性。</xref:System.Windows.Forms.DataGridViewCell.InheritedStyle*>"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  id: ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取或设置一个值，该值指示是否已成功分析单元格的值。"
  remarks: "A<xref:System.Windows.Forms.DataGridViewCellParsingEventHandler>设置 ParsingApplied 属性以指示是否已成功分析新单元格的值，则不必进行任何进一步的转换。</xref:System.Windows.Forms.DataGridViewCellParsingEventHandler>"
  example:
  - "The following code example sets ParsingApplied to `true` when the cell's value is successfully parsed.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_1_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/p-system.windows.forms.d_1_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/p-system.windows.forms.d_1_1.cs)]"
  syntax:
    content: public bool ParsingApplied { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功分析该单元格的值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  id: RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "获取需要分析的单元格的行索引。"
  remarks: "RowIndex 属性用于获取到<xref:System.Windows.Forms.DataGridView.Rows%2A>属性的一种<xref:System.Windows.Forms.DataGridView>。</xref:System.Windows.Forms.DataGridView></xref:System.Windows.Forms.DataGridView.Rows%2A>索引"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#303](~/add/codesnippet/csharp/p-system.windows.forms.d_48_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/add/codesnippet/visualbasic/p-system.windows.forms.d_48_1.vb)]"
  syntax:
    content: public int RowIndex { get; }
    return:
      type: System.Int32
      description: "已更改单元格的行索引。"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: System.Windows.Forms.ConvertEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
