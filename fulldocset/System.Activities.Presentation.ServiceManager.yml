### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.ServiceManager
  id: ServiceManager
  children:
  - System.Activities.Presentation.ServiceManager.#ctor
  - System.Activities.Presentation.ServiceManager.Contains(System.Type)
  - System.Activities.Presentation.ServiceManager.Contains``1
  - System.Activities.Presentation.ServiceManager.GetEnumerator
  - System.Activities.Presentation.ServiceManager.GetRequiredService``1
  - System.Activities.Presentation.ServiceManager.GetService(System.Type)
  - System.Activities.Presentation.ServiceManager.GetService``1
  - System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)
  - System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)
  - System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)
  - System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback`1)
  - System.Activities.Presentation.ServiceManager.Publish``1(``0)
  - System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)
  - System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)
  - System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)
  - System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator
  - System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)
  - System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)
  langs:
  - csharp
  name: ServiceManager
  nameWithType: ServiceManager
  fullName: System.Activities.Presentation.ServiceManager
  type: Class
  summary: "实现<xref:System.IserviceProvider>并提供到编辑上下文提供的服务的访问权限。</xref:System.IserviceProvider>"
  remarks: "<xref:System.Activities.Presentation.EditingContext.Services%2A>表示的功能要么由设计器，以使用的主机提供或设计器使用，用于使功能对编辑器内的所有设计器可用。</xref:System.Activities.Presentation.EditingContext.Services%2A> 从获取<xref:System.Activities.Presentation.EditingContext>通过<xref:System.Activities.Presentation.EditingContext.Services%2A>属性。</xref:System.Activities.Presentation.EditingContext.Services%2A> </xref:System.Activities.Presentation.EditingContext>"
  syntax:
    content: 'public abstract class ServiceManager : IServiceProvider, System.Collections.Generic.IEnumerable<Type>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Type>
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: ServiceManager()
  nameWithType: ServiceManager.ServiceManager()
  fullName: System.Activities.Presentation.ServiceManager.ServiceManager()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "初始化的新实例<xref href=&quot;System.Activities.Presentation.ServiceManager&quot;></xref>类。"
  syntax:
    content: protected ServiceManager ();
    parameters: []
  overload: System.Activities.Presentation.ServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Contains(System.Type)
  id: Contains(System.Type)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Contains(Type)
  nameWithType: ServiceManager.Contains(Type)
  fullName: System.Activities.Presentation.ServiceManager.Contains(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "返回一个布尔值，该值指示服务管理器是否包含给定类型的服务。"
  syntax:
    content: public abstract bool Contains (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要检查的服务类型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果类型的服务<code> serviceType </code>已发布; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.ServiceManager.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Contains``1
  id: Contains``1
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Contains()
  nameWithType: ServiceManager.Contains()
  fullName: System.Activities.Presentation.ServiceManager.Contains()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: public bool Contains<TServiceType> ();
    parameters: []
    return:
      type: System.Boolean
      description: "要添加。"
  overload: System.Activities.Presentation.ServiceManager.Contains<TServiceType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ServiceManager.GetEnumerator()
  fullName: System.Activities.Presentation.ServiceManager.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "检索的枚举数可用于枚举此服务管理器发布的服务的所有。"
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<Type> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Type}
      description: "返回&lt;xref:System.Collections.Generic.IEnumerator%601&gt;，其中包含已发布的服务的枚举。"
  overload: System.Activities.Presentation.ServiceManager.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.GetRequiredService``1
  id: GetRequiredService``1
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: GetRequiredService()
  nameWithType: ServiceManager.GetRequiredService()
  fullName: System.Activities.Presentation.ServiceManager.GetRequiredService()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: public TServiceType GetRequiredService<TServiceType> ();
    parameters: []
    return:
      type: TServiceType
      description: "要添加。"
  overload: System.Activities.Presentation.ServiceManager.GetRequiredService<TServiceType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: ServiceManager.GetService(Type)
  fullName: System.Activities.Presentation.ServiceManager.GetService(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "检索请求的服务。  此方法返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到该服务。"
  syntax:
    content: public abstract object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要检索的服务类型。"
    return:
      type: System.Object
      description: "返回<xref:System.Object>，这是服务的实例或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果尚未发布该服务。</xref:System.Object>"
  overload: System.Activities.Presentation.ServiceManager.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.GetService``1
  id: GetService``1
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: GetService()
  nameWithType: ServiceManager.GetService()
  fullName: System.Activities.Presentation.ServiceManager.GetService()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: public TServiceType GetService<TServiceType> ();
    parameters: []
    return:
      type: TServiceType
      description: "要添加。"
  overload: System.Activities.Presentation.ServiceManager.GetService<TServiceType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)
  id: GetTarget(System.Delegate)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: GetTarget(Delegate)
  nameWithType: ServiceManager.GetTarget(Delegate)
  fullName: System.Activities.Presentation.ServiceManager.GetTarget(Delegate)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "返回目标对象委托的一个帮助器方法。 如果创建该委托是到代理的泛型委托，这将正确返回原始对象，而不是代理。"
  syntax:
    content: protected static object GetTarget (Delegate callback);
    parameters:
    - id: callback
      type: System.Delegate
      description: "要获取的目标的委托。"
    return:
      type: System.Object
      description: "返回<xref:System.Object>，这是作为回调目标。</xref:System.Object> 此方法可返回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果回调表示某个静态对象。"
  overload: System.Activities.Presentation.ServiceManager.GetTarget*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)
  id: Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Publish(Type,PublishServiceCallback)
  nameWithType: ServiceManager.Publish(Type,PublishServiceCallback)
  fullName: System.Activities.Presentation.ServiceManager.Publish(Type,PublishServiceCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "发布指定的服务类型，但不声明实例。 请求服务时，将调用 Publish 服务回调来创建实例。 一次调用该回调。 之后，将缓存它返回的实例。"
  syntax:
    content: public abstract void Publish (Type serviceType, System.Activities.Presentation.PublishServiceCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要发布的服务类型。"
    - id: callback
      type: System.Activities.Presentation.PublishServiceCallback
      description: "需要服务的实例时将调用的回调。"
  overload: System.Activities.Presentation.ServiceManager.Publish*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>serviceType</code>已发布。"
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)
  id: Publish(System.Type,System.Object)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Publish(Type,Object)
  nameWithType: ServiceManager.Publish(Type,Object)
  fullName: System.Activities.Presentation.ServiceManager.Publish(Type,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "发布给定的服务。 发布之后，服务实例将保留在服务管理器中直至释放编辑上下文为止。"
  syntax:
    content: public abstract void Publish (Type serviceType, object serviceInstance);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要发布的服务类型。"
    - id: serviceInstance
      type: System.Object
      description: "服务的实例。"
  overload: System.Activities.Presentation.ServiceManager.Publish*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>serviceInstance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>serviceInstance</code>不派生自或实现<code>serviceType</code>，或<code>serviceType</code>已发布。"
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback`1)
  id: Publish``1(System.Activities.Presentation.PublishServiceCallback`1)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Publish(PublishServiceCallback<TServiceType>)
  nameWithType: ServiceManager.Publish(PublishServiceCallback<TServiceType>)
  fullName: System.Activities.Presentation.ServiceManager.Publish(PublishServiceCallback<TServiceType>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: public void Publish<TServiceType> (System.Activities.Presentation.PublishServiceCallback<TServiceType> callback);
    parameters:
    - id: callback
      type: System.Activities.Presentation.PublishServiceCallback`1
      description: "要添加。"
  overload: System.Activities.Presentation.ServiceManager.Publish<TServiceType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Publish``1(``0)
  id: Publish``1(``0)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Publish(TServiceType)
  nameWithType: ServiceManager.Publish(TServiceType)
  fullName: System.Activities.Presentation.ServiceManager.Publish(TServiceType)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: public void Publish<TServiceType> (TServiceType serviceInstance);
    parameters:
    - id: serviceInstance
      type: TServiceType
      description: "要添加。"
  overload: System.Activities.Presentation.ServiceManager.Publish<TServiceType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)
  id: RemoveCallback(System.Delegate,System.Delegate)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: RemoveCallback(Delegate,Delegate)
  nameWithType: ServiceManager.RemoveCallback(Delegate,Delegate)
  fullName: System.Activities.Presentation.ServiceManager.RemoveCallback(Delegate,Delegate)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "执行一个帮助器方法<xref uid=&quot;langword_csharp_Delegate.Remove&quot; name=&quot;Delegate.Remove&quot; href=&quot;&quot;></xref>操作，并解包是用于泛型回调代理的委托。 应使用此方法在你<xref:System.Activities.Presentation.ServiceManager.UnSubscribe*>实现。</xref:System.Activities.Presentation.ServiceManager.UnSubscribe*>"
  syntax:
    content: protected static Delegate RemoveCallback (Delegate existing, Delegate toRemove);
    parameters:
    - id: existing
      type: System.Delegate
      description: "要从中移除回调的现有委托。"
    - id: toRemove
      type: System.Delegate
      description: "要移除的回调。"
    return:
      type: System.Delegate
      description: "返回<xref:System.Delegate>，这是要将分配给现有委托的一个新值。</xref:System.Delegate>"
  overload: System.Activities.Presentation.ServiceManager.RemoveCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)
  id: Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Subscribe(Type,SubscribeServiceCallback)
  nameWithType: ServiceManager.Subscribe(Type,SubscribeServiceCallback)
  fullName: System.Activities.Presentation.ServiceManager.Subscribe(Type,SubscribeServiceCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "在某人发布请求的服务时，请调用所提供的回调。 如果服务已可用，此方法将立即调用回调。"
  syntax:
    content: public abstract void Subscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要订阅的服务类型。"
    - id: callback
      type: System.Activities.Presentation.SubscribeServiceCallback
      description: "当服务可用时将通知回调。"
  overload: System.Activities.Presentation.ServiceManager.Subscribe*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)
  id: Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Subscribe(SubscribeServiceCallback<TServiceType>)
  nameWithType: ServiceManager.Subscribe(SubscribeServiceCallback<TServiceType>)
  fullName: System.Activities.Presentation.ServiceManager.Subscribe(SubscribeServiceCallback<TServiceType>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: public void Subscribe<TServiceType> (System.Activities.Presentation.SubscribeServiceCallback<TServiceType> callback);
    parameters:
    - id: callback
      type: System.Activities.Presentation.SubscribeServiceCallback`1
      description: "要添加。"
  overload: System.Activities.Presentation.ServiceManager.Subscribe<TServiceType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ServiceManager.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.ServiceManager.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "检索的枚举数可用于枚举此服务管理器发布的服务的所有。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "返回<xref:System.Collections.IEnumerator>，其中包含已发布的服务的枚举。</xref:System.Collections.IEnumerator>"
  overload: System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)
  id: Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Unsubscribe(Type,SubscribeServiceCallback)
  nameWithType: ServiceManager.Unsubscribe(Type,SubscribeServiceCallback)
  fullName: System.Activities.Presentation.ServiceManager.Unsubscribe(Type,SubscribeServiceCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "移除服务类型的订阅。"
  syntax:
    content: public abstract void Unsubscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要从中移除订阅的服务类型。"
    - id: callback
      type: System.Activities.Presentation.SubscribeServiceCallback
      description: "要从订阅中删除的回调对象。"
  overload: System.Activities.Presentation.ServiceManager.Unsubscribe*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)
  id: Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)
  parent: System.Activities.Presentation.ServiceManager
  langs:
  - csharp
  name: Unsubscribe(SubscribeServiceCallback<TServiceType>)
  nameWithType: ServiceManager.Unsubscribe(SubscribeServiceCallback<TServiceType>)
  fullName: System.Activities.Presentation.ServiceManager.Unsubscribe(SubscribeServiceCallback<TServiceType>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: public void Unsubscribe<TServiceType> (System.Activities.Presentation.SubscribeServiceCallback<TServiceType> callback);
    parameters:
    - id: callback
      type: System.Activities.Presentation.SubscribeServiceCallback`1
      description: "要添加。"
  overload: System.Activities.Presentation.ServiceManager.Unsubscribe<TServiceType>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Activities.Presentation.ServiceManager.#ctor
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: ServiceManager()
  nameWithType: ServiceManager.ServiceManager()
  fullName: System.Activities.Presentation.ServiceManager.ServiceManager()
- uid: System.Activities.Presentation.ServiceManager.Contains(System.Type)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Contains(Type)
  nameWithType: ServiceManager.Contains(Type)
  fullName: System.Activities.Presentation.ServiceManager.Contains(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.ServiceManager.Contains``1
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Contains()
  nameWithType: ServiceManager.Contains()
  fullName: System.Activities.Presentation.ServiceManager.Contains()
- uid: System.Activities.Presentation.ServiceManager.GetEnumerator
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetEnumerator()
  nameWithType: ServiceManager.GetEnumerator()
  fullName: System.Activities.Presentation.ServiceManager.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Type}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Type>
  nameWithType: IEnumerator<Type>
  fullName: System.Collections.Generic.IEnumerator<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.ServiceManager.GetRequiredService``1
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetRequiredService()
  nameWithType: ServiceManager.GetRequiredService()
  fullName: System.Activities.Presentation.ServiceManager.GetRequiredService()
- uid: TServiceType
  isExternal: true
  name: TServiceType
  nameWithType: TServiceType
  fullName: TServiceType
- uid: System.Activities.Presentation.ServiceManager.GetService(System.Type)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetService(Type)
  nameWithType: ServiceManager.GetService(Type)
  fullName: System.Activities.Presentation.ServiceManager.GetService(Type)
- uid: System.Activities.Presentation.ServiceManager.GetService``1
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetService()
  nameWithType: ServiceManager.GetService()
  fullName: System.Activities.Presentation.ServiceManager.GetService()
- uid: System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetTarget(Delegate)
  nameWithType: ServiceManager.GetTarget(Delegate)
  fullName: System.Activities.Presentation.ServiceManager.GetTarget(Delegate)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Publish(Type,PublishServiceCallback)
  nameWithType: ServiceManager.Publish(Type,PublishServiceCallback)
  fullName: System.Activities.Presentation.ServiceManager.Publish(Type,PublishServiceCallback)
- uid: System.Activities.Presentation.PublishServiceCallback
  parent: System.Activities.Presentation
  isExternal: false
  name: PublishServiceCallback
  nameWithType: PublishServiceCallback
  fullName: System.Activities.Presentation.PublishServiceCallback
- uid: System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Publish(Type,Object)
  nameWithType: ServiceManager.Publish(Type,Object)
  fullName: System.Activities.Presentation.ServiceManager.Publish(Type,Object)
- uid: System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback`1)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Publish(PublishServiceCallback<TServiceType>)
  nameWithType: ServiceManager.Publish(PublishServiceCallback<TServiceType>)
  fullName: System.Activities.Presentation.ServiceManager.Publish(PublishServiceCallback<TServiceType>)
- uid: System.Activities.Presentation.PublishServiceCallback`1
  parent: System.Activities.Presentation
  isExternal: false
  name: PublishServiceCallback<TServiceType>
  nameWithType: PublishServiceCallback<TServiceType>
  fullName: System.Activities.Presentation.PublishServiceCallback<TServiceType>
- uid: System.Activities.Presentation.ServiceManager.Publish``1(``0)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Publish(TServiceType)
  nameWithType: ServiceManager.Publish(TServiceType)
  fullName: System.Activities.Presentation.ServiceManager.Publish(TServiceType)
- uid: System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: RemoveCallback(Delegate,Delegate)
  nameWithType: ServiceManager.RemoveCallback(Delegate,Delegate)
  fullName: System.Activities.Presentation.ServiceManager.RemoveCallback(Delegate,Delegate)
- uid: System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Subscribe(Type,SubscribeServiceCallback)
  nameWithType: ServiceManager.Subscribe(Type,SubscribeServiceCallback)
  fullName: System.Activities.Presentation.ServiceManager.Subscribe(Type,SubscribeServiceCallback)
- uid: System.Activities.Presentation.SubscribeServiceCallback
  parent: System.Activities.Presentation
  isExternal: false
  name: SubscribeServiceCallback
  nameWithType: SubscribeServiceCallback
  fullName: System.Activities.Presentation.SubscribeServiceCallback
- uid: System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Subscribe(SubscribeServiceCallback<TServiceType>)
  nameWithType: ServiceManager.Subscribe(SubscribeServiceCallback<TServiceType>)
  fullName: System.Activities.Presentation.ServiceManager.Subscribe(SubscribeServiceCallback<TServiceType>)
- uid: System.Activities.Presentation.SubscribeServiceCallback`1
  parent: System.Activities.Presentation
  isExternal: false
  name: SubscribeServiceCallback<TServiceType>
  nameWithType: SubscribeServiceCallback<TServiceType>
  fullName: System.Activities.Presentation.SubscribeServiceCallback<TServiceType>
- uid: System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ServiceManager.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.ServiceManager.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Unsubscribe(Type,SubscribeServiceCallback)
  nameWithType: ServiceManager.Unsubscribe(Type,SubscribeServiceCallback)
  fullName: System.Activities.Presentation.ServiceManager.Unsubscribe(Type,SubscribeServiceCallback)
- uid: System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Unsubscribe(SubscribeServiceCallback<TServiceType>)
  nameWithType: ServiceManager.Unsubscribe(SubscribeServiceCallback<TServiceType>)
  fullName: System.Activities.Presentation.ServiceManager.Unsubscribe(SubscribeServiceCallback<TServiceType>)
- uid: System.Activities.Presentation.ServiceManager.#ctor*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: ServiceManager
  nameWithType: ServiceManager.ServiceManager
- uid: System.Activities.Presentation.ServiceManager.Contains*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Contains
  nameWithType: ServiceManager.Contains
- uid: System.Activities.Presentation.ServiceManager.Contains<TServiceType>*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Contains<TServiceType>
  nameWithType: ServiceManager.Contains<TServiceType>
- uid: System.Activities.Presentation.ServiceManager.GetEnumerator*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetEnumerator
  nameWithType: ServiceManager.GetEnumerator
- uid: System.Activities.Presentation.ServiceManager.GetRequiredService<TServiceType>*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetRequiredService<TServiceType>
  nameWithType: ServiceManager.GetRequiredService<TServiceType>
- uid: System.Activities.Presentation.ServiceManager.GetService*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetService
  nameWithType: ServiceManager.GetService
- uid: System.Activities.Presentation.ServiceManager.GetService<TServiceType>*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetService<TServiceType>
  nameWithType: ServiceManager.GetService<TServiceType>
- uid: System.Activities.Presentation.ServiceManager.GetTarget*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: GetTarget
  nameWithType: ServiceManager.GetTarget
- uid: System.Activities.Presentation.ServiceManager.Publish*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Publish
  nameWithType: ServiceManager.Publish
- uid: System.Activities.Presentation.ServiceManager.Publish<TServiceType>*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Publish<TServiceType>
  nameWithType: ServiceManager.Publish<TServiceType>
- uid: System.Activities.Presentation.ServiceManager.RemoveCallback*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: RemoveCallback
  nameWithType: ServiceManager.RemoveCallback
- uid: System.Activities.Presentation.ServiceManager.Subscribe*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Subscribe
  nameWithType: ServiceManager.Subscribe
- uid: System.Activities.Presentation.ServiceManager.Subscribe<TServiceType>*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Subscribe<TServiceType>
  nameWithType: ServiceManager.Subscribe<TServiceType>
- uid: System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ServiceManager.System.Collections.IEnumerable.GetEnumerator
- uid: System.Activities.Presentation.ServiceManager.Unsubscribe*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Unsubscribe
  nameWithType: ServiceManager.Unsubscribe
- uid: System.Activities.Presentation.ServiceManager.Unsubscribe<TServiceType>*
  parent: System.Activities.Presentation.ServiceManager
  isExternal: false
  name: Unsubscribe<TServiceType>
  nameWithType: ServiceManager.Unsubscribe<TServiceType>
