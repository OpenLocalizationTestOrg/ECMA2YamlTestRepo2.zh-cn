### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.TransactionMessageProperty
  id: TransactionMessageProperty
  children:
  - System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  langs:
  - csharp
  name: TransactionMessageProperty
  nameWithType: TransactionMessageProperty
  fullName: System.ServiceModel.Channels.TransactionMessageProperty
  type: Class
  summary: "允许使用专有事务流机制，以将其事务注入的自定义通道[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]framework。 此类不能被继承。"
  remarks: "此类允许第三方通道开发人员使用专有事务流机制为其通道，其将事务引入 ServiceModel 框架。 在执行服务方法时，然后使用该事务。 不能与<xref:System.ServiceModel.TransactionFlowAttribute>.</xref:System.ServiceModel.TransactionFlowAttribute>结合使用此机制"
  syntax:
    content: public sealed class TransactionMessageProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  id: Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  langs:
  - csharp
  name: Set(Transaction,Message)
  nameWithType: TransactionMessageProperty.Set(Transaction,Message)
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Set(Transaction,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "设置在执行服务方法时将使用的事务。"
  remarks: "自定义传入通道 （这是服务的通道堆栈的一部分） 可以调用此方法可添加<xref:System.ServiceModel.Channels.TransactionMessageProperty>，其中包含`transaction`参数到`Properties`集合`message`参数。</xref:System.ServiceModel.Channels.TransactionMessageProperty> 这将提示基础结构能够创建<xref:System.Transactions.TransactionScope>实例使用传入，在调用传入消息中请求的服务方法之前的事务。</xref:System.Transactions.TransactionScope> 服务方法必须具有<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>属性设置为`true`。</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>"
  syntax:
    content: public static void Set (System.Transactions.Transaction transaction, System.ServiceModel.Channels.Message message);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "在执行服务方法时将使用的事务。"
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "传入的消息导致调用服务方法。"
  overload: System.ServiceModel.Channels.TransactionMessageProperty.Set*
  exceptions:
  - type: System.ServiceModel.FaultException
    commentId: T:System.ServiceModel.FaultException
    description: "已对设置属性<code> message </code>。"
  - type: System.Transactions.TransactionException
    commentId: T:System.Transactions.TransactionException
    description: "<code>transaction</code>需要拆收，并且该操作失败。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  id: Transaction
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  langs:
  - csharp
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "获取在执行服务方法时将使用的事务。"
  syntax:
    content: public System.Transactions.Transaction Transaction { get; }
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref>在执行服务方法时将使用的实例。"
  overload: System.ServiceModel.Channels.TransactionMessageProperty.Transaction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.FaultException
  isExternal: true
  name: System.ServiceModel.FaultException
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Set(Transaction,Message)
  nameWithType: TransactionMessageProperty.Set(Transaction,Message)
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Set(Transaction,Message)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set*
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Set
  nameWithType: TransactionMessageProperty.Set
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction*
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
