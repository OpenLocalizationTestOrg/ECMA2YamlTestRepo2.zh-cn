### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FontInfo
  id: FontInfo
  children:
  - System.Web.UI.WebControls.FontInfo.Bold
  - System.Web.UI.WebControls.FontInfo.ClearDefaults
  - System.Web.UI.WebControls.FontInfo.CopyFrom(System.Web.UI.WebControls.FontInfo)
  - System.Web.UI.WebControls.FontInfo.Italic
  - System.Web.UI.WebControls.FontInfo.MergeWith(System.Web.UI.WebControls.FontInfo)
  - System.Web.UI.WebControls.FontInfo.Name
  - System.Web.UI.WebControls.FontInfo.Names
  - System.Web.UI.WebControls.FontInfo.Overline
  - System.Web.UI.WebControls.FontInfo.ShouldSerializeNames
  - System.Web.UI.WebControls.FontInfo.Size
  - System.Web.UI.WebControls.FontInfo.Strikeout
  - System.Web.UI.WebControls.FontInfo.ToString
  - System.Web.UI.WebControls.FontInfo.Underline
  langs:
  - csharp
  name: FontInfo
  nameWithType: FontInfo
  fullName: System.Web.UI.WebControls.FontInfo
  type: Class
  summary: "封装文本的字体属性。 此类不能被继承。"
  remarks: "使用 FontInfo 类来封装文本的字体属性。 你可以指定的字体名称和字体大小。 你还可以指定是否为粗体的字体样式、 斜体、 上划线、 带删除线，或带下划线。       此类通常用于属性中的类需要字体的信息，例如<xref:System.Web.UI.WebControls.WebControl.Font%2A>属性的<xref:System.Web.UI.WebControls.WebControl>类。</xref:System.Web.UI.WebControls.WebControl> </xref:System.Web.UI.WebControls.WebControl.Font%2A>      1> [!NOTE]&1;> 此类没有公共构造函数。 不能直接创建类的新实例。"
  example:
  - "The following code example demonstrates how to modify the properties of a FontInfo object programmatically to specify the font properties for a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfo#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_257_1.aspx)]\n [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_257_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public sealed class FontInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.Bold
  id: Bold
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: Bold
  nameWithType: FontInfo.Bold
  fullName: System.Web.UI.WebControls.FontInfo.Bold
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示此字体是否是以粗体显示。"
  remarks: "使用粗体属性指定或确定此字体是否是以粗体显示。       此属性的值存储在视图状态。"
  example:
  - "The following example demonstrates how to use the Bold property to programmatically specify a bold font for the text in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfo#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_4_1.aspx)]\n [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_4_1.aspx)]"
  syntax:
    content: public bool Bold { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此字体是粗体;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FontInfo.Bold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.ClearDefaults
  id: ClearDefaults
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: ClearDefaults()
  nameWithType: FontInfo.ClearDefaults()
  fullName: System.Web.UI.WebControls.FontInfo.ClearDefaults()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将重置所有<xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;></xref>属性设置为未设置的状态并清除视图状态。"
  remarks: "<xref:System.Web.UI.WebControls.FontInfo>时，属性将取消设置<xref:System.Web.UI.WebControls.FontInfo>创建对象。</xref:System.Web.UI.WebControls.FontInfo></xref:System.Web.UI.WebControls.FontInfo> 当首先设置一个属性时，将值添加到视图状态。 ClearDefaults 方法用于设置所有<xref:System.Web.UI.WebControls.FontInfo>属性设置为未设置的状态和删除任何项在视图状态。</xref:System.Web.UI.WebControls.FontInfo> The following properties are reset:      -   <xref:System.Web.UI.WebControls.FontInfo.Names%2A>      -   <xref:System.Web.UI.WebControls.FontInfo.Name%2A>      -   <xref:System.Web.UI.WebControls.FontInfo.Size%2A>      -   <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>      -   <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>      -   <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>      -   <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>      -   <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A></xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A></xref:System.Web.UI.WebControls.FontInfo.Overline%2A></xref:System.Web.UI.WebControls.FontInfo.Underline%2A></xref:System.Web.UI.WebControls.FontInfo.Italic%2A></xref:System.Web.UI.WebControls.FontInfo.Bold%2A></xref:System.Web.UI.WebControls.FontInfo.Size%2A></xref:System.Web.UI.WebControls.FontInfo.Name%2A></xref:System.Web.UI.WebControls.FontInfo.Names%2A>"
  syntax:
    content: public void ClearDefaults ();
    parameters: []
  overload: System.Web.UI.WebControls.FontInfo.ClearDefaults*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.CopyFrom(System.Web.UI.WebControls.FontInfo)
  id: CopyFrom(System.Web.UI.WebControls.FontInfo)
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: CopyFrom(FontInfo)
  nameWithType: FontInfo.CopyFrom(FontInfo)
  fullName: System.Web.UI.WebControls.FontInfo.CopyFrom(FontInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定的字体属性复制<xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;></xref>到的实例<xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;></xref>从中调用此方法的类。"
  remarks: "CopyFrom 方法用于重复指定的字体属性<xref:System.Web.UI.WebControls.FontInfo>到的实例<xref:System.Web.UI.WebControls.FontInfo>从中调用此方法的类。</xref:System.Web.UI.WebControls.FontInfo> </xref:System.Web.UI.WebControls.FontInfo>      1> [!CAUTION]&1;> 的当前实例中的所有属性<xref:System.Web.UI.WebControls.FontInfo>中关联的属性将替换为类`f`参数。</xref:System.Web.UI.WebControls.FontInfo>       使用注册样式时<xref:System.Web.UI.IStyleSheet.RegisterStyle%2A>，然后将复制使用<xref:System.Web.UI.WebControls.Style.CopyFrom%28System.Web.UI.WebControls.Style%29?displayProperty=fullName>，则只<xref:System.Web.UI.WebControls.Style.CssClass%2A>属性复制到目标，并非所有的各个属性。</xref:System.Web.UI.WebControls.Style.CssClass%2A> </xref:System.Web.UI.WebControls.Style.CopyFrom%28System.Web.UI.WebControls.Style%29?displayProperty=fullName> </xref:System.Web.UI.IStyleSheet.RegisterStyle%2A> 因此，如果使用的 CopyFrom 从中复制字体信息<xref:System.Web.UI.WebControls.Style.Font%2A>属性<xref:System.Web.UI.WebControls.Style>注册，不会因样式得到的字体的单个设置。</xref:System.Web.UI.WebControls.Style> </xref:System.Web.UI.WebControls.Style.Font%2A>"
  example:
  - "The following example demonstrates how to use the CopyFrom method to duplicate the font properties of a <xref:System.Web.UI.WebControls.FontInfo> into the <xref:System.Web.UI.WebControls.WebControl.Font%2A> property of a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfoCopyFrom#1](~/add/codesnippet/csharp/da26586c-72cb-4423-9a32-_1.aspx)]\n [!code-vb[FontInfoCopyFrom#1](~/add/codesnippet/visualbasic/da26586c-72cb-4423-9a32-_1.aspx)]"
  syntax:
    content: public void CopyFrom (System.Web.UI.WebControls.FontInfo f);
    parameters:
    - id: f
      type: System.Web.UI.WebControls.FontInfo
      description: "A <xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;> </xref>包含要复制的字体属性。"
  overload: System.Web.UI.WebControls.FontInfo.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.Italic
  id: Italic
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: Italic
  nameWithType: FontInfo.Italic
  fullName: System.Web.UI.WebControls.FontInfo.Italic
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示此字体是否是斜体。"
  remarks: "斜体属性用于指定或确定此字体是否是斜体。       此属性的值存储在视图状态。"
  example:
  - "The following example demonstrates how to use the Italic property to programmatically specify an italic font for the text in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfo#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1027_1.aspx)]\n [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1027_1.aspx)]"
  syntax:
    content: public bool Italic { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此字体是斜体;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FontInfo.Italic*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.MergeWith(System.Web.UI.WebControls.FontInfo)
  id: MergeWith(System.Web.UI.WebControls.FontInfo)
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: MergeWith(FontInfo)
  nameWithType: FontInfo.MergeWith(FontInfo)
  fullName: System.Web.UI.WebControls.FontInfo.MergeWith(FontInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "将指定的字体属性合并<xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;></xref>与的实例<xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;></xref>从中调用此方法的类。"
  remarks: "使用 MergeWith 方法指定的字体属性组合在一起<xref:System.Web.UI.WebControls.FontInfo>与的实例<xref:System.Web.UI.WebControls.FontInfo>从中调用此方法的类。</xref:System.Web.UI.WebControls.FontInfo> </xref:System.Web.UI.WebControls.FontInfo>      1> [!NOTE]&1;> 此方法联接两个属性<xref:System.Web.UI.WebControls.FontInfo>通过设置未设置的当前实例中每个属性的对象<xref:System.Web.UI.WebControls.FontInfo>类中的相应属性的值`f`参数。</xref:System.Web.UI.WebControls.FontInfo> </xref:System.Web.UI.WebControls.FontInfo> 将替换未设置的属性。 如果中的属性`f`参数未设置，则它将不替换<xref:System.Web.UI.WebControls.FontInfo>类</xref:System.Web.UI.WebControls.FontInfo>的当前实例中的相应属性"
  example:
  - "The following example demonstrates how to use the MergeWith method to combine the font properties of a <xref:System.Web.UI.WebControls.FontInfo> into the <xref:System.Web.UI.WebControls.WebControl.Font%2A> property of a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfoCopyFrom#1](~/add/codesnippet/csharp/dab06a55-5b4a-4217-bd71-_1.aspx)]\n [!code-vb[FontInfoCopyFrom#1](~/add/codesnippet/visualbasic/dab06a55-5b4a-4217-bd71-_1.aspx)]"
  syntax:
    content: public void MergeWith (System.Web.UI.WebControls.FontInfo f);
    parameters:
    - id: f
      type: System.Web.UI.WebControls.FontInfo
      description: "A <xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;> </xref>包含要组合的字体属性。"
  overload: System.Web.UI.WebControls.FontInfo.MergeWith*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.Name
  id: Name
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: Name
  nameWithType: FontInfo.Name
  fullName: System.Web.UI.WebControls.FontInfo.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的主字体名称。"
  remarks: "Name 属性用于指定或确定主字体名称。 主字体名称确定用于<xref:System.Web.UI.WebControls.FontInfo>.</xref:System.Web.UI.WebControls.FontInfo>与关联的控件中显示文本的字体      1> [!NOTE]&1;> 当设置<xref:System.Web.UI.WebControls.FontInfo.Names%2A>使用中的第一个项自动更新属性，Name 属性<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性。</xref:System.Web.UI.WebControls.FontInfo.Names%2A> </xref:System.Web.UI.WebControls.FontInfo.Names%2A> 如果设置 Name 属性中，<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性将自动更新为包含名称属性的值的单个元素数组。</xref:System.Web.UI.WebControls.FontInfo.Names%2A>"
  example:
  - "The following example demonstrates how to use the Name property to programmatically specify the font name for a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfo#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1236_1.aspx)]\n [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1236_1.aspx)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "主要字体名称。 默认值是&lt;xref:System.String?displayProperty=fullName&gt;，指示未设置此属性。"
  overload: System.Web.UI.WebControls.FontInfo.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定的字体名称为 null。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.Names
  id: Names
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: Names
  nameWithType: FontInfo.Names
  fullName: System.Web.UI.WebControls.FontInfo.Names
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置的字体名称的已排序的数组。"
  remarks: "使用名称属性来指定或确定的字体名称的一种<xref:System.Web.UI.WebControls.FontInfo>。</xref:System.Web.UI.WebControls.FontInfo>有序的数组 名称属性通常用于存储可用的字体名称的列表。      1> [!NOTE]&1;> 时设置的名称属性中，<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性会自动更新名称属性中的第一项。</xref:System.Web.UI.WebControls.FontInfo.Name%2A> 如果你设置<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性，属性将自动更新为包含的值的单个元素数组的名称<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性。</xref:System.Web.UI.WebControls.FontInfo.Name%2A> </xref:System.Web.UI.WebControls.FontInfo.Name%2A>       若要指定的字体名称<xref:System.Web.UI.WebControls.FontInfo>使用名称数组中，设置到你想要使用的字体名称数组中的第一个元素。</xref:System.Web.UI.WebControls.FontInfo> 由于名称属性将会自动更新时<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性设置，您需要操作的名称数组，而不是设置数组中项的顺序重新排列<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性直接。</xref:System.Web.UI.WebControls.FontInfo.Name%2A> </xref:System.Web.UI.WebControls.FontInfo.Name%2A>       此属性的值存储在视图状态。"
  syntax:
    content: public string[] Names { get; set; }
    return:
      type: System.String[]
      description: "字体名称的有序的数组。"
  overload: System.Web.UI.WebControls.FontInfo.Names*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.Overline
  id: Overline
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: Overline
  nameWithType: FontInfo.Overline
  fullName: System.Web.UI.WebControls.FontInfo.Overline
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，指示字体是否带上划线。"
  remarks: "使用上划线属性指定或确定字体是否包含文本上面的行。       此属性的值存储在视图状态。      1> [!NOTE]&1;> 链接由生成的字体下划线行为<xref:System.Web.UI.WebControls.LinkButton>， <xref:System.Web.UI.WebControls.HyperLink>，和<xref:System.Web.UI.HtmlControls.HtmlAnchor>控件受设置的上划线属性<xref:System.Web.UI.WebControls.FontInfo>控件。</xref:System.Web.UI.WebControls.FontInfo> </xref:System.Web.UI.HtmlControls.HtmlAnchor> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.LinkButton> 如果上划线属性，无论值将其值设置，则必须设置<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>属性显式如果你想要显示为带有下划线的链接。</xref:System.Web.UI.WebControls.FontInfo.Underline%2A>"
  example:
  - "The following example demonstrates how to use the Overline property to programmatically specify an overlined font for the text in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfo#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1076_1.aspx)]\n [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1076_1.aspx)]"
  syntax:
    content: public bool Overline { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字体是否带上划线;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FontInfo.Overline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.ShouldSerializeNames
  id: ShouldSerializeNames
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: ShouldSerializeNames()
  nameWithType: FontInfo.ShouldSerializeNames()
  fullName: System.Web.UI.WebControls.FontInfo.ShouldSerializeNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "确定是否<xref:System.Web.UI.WebControls.FontInfo.Names*>属性应对其进行持久化。</xref:System.Web.UI.WebControls.FontInfo.Names*>"
  remarks: "使用 ShouldSerializeNames 方法来确定是否<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性已从其默认值。</xref:System.Web.UI.WebControls.FontInfo.Names%2A> 此方法常用如果也要创建的设计器<xref:System.Web.UI.WebControls.FontInfo>类或创建您自己的控件中合并<xref:System.Web.UI.WebControls.FontInfo>类。</xref:System.Web.UI.WebControls.FontInfo> </xref:System.Web.UI.WebControls.FontInfo>      1> [!NOTE]&1;><xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性必须具有至少一个条目要序列化。</xref:System.Web.UI.WebControls.FontInfo.Names%2A>"
  syntax:
    content: public bool ShouldSerializeNames ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Web.UI.WebControls.FontInfo.Names*>属性已从其默认值; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.FontInfo.Names*>"
  overload: System.Web.UI.WebControls.FontInfo.ShouldSerializeNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.Size
  id: Size
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: Size
  nameWithType: FontInfo.Size
  fullName: System.Web.UI.WebControls.FontInfo.Size
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置字体大小。"
  remarks: "大小属性用于指定的字体的大小。       此属性的值存储在视图状态。"
  example:
  - "The following example demonstrates how to use the Size property to programmatically change the size of the font for a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfo#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_918_1.aspx)]\n [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_918_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.FontUnit Size { get; set; }
    return:
      type: System.Web.UI.WebControls.FontUnit
      description: "A <xref href=&quot;System.Web.UI.WebControls.FontUnit&quot;> </xref>表示字体大小。"
  overload: System.Web.UI.WebControls.FontInfo.Size*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的字体大小为负数。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.Strikeout
  id: Strikeout
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: Strikeout
  nameWithType: FontInfo.Strikeout
  fullName: System.Web.UI.WebControls.FontInfo.Strikeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示此字体是否是带删除线。"
  remarks: "使用带删除线属性指定或确定字体是否包含整个文本行。       此属性的值存储在视图状态。      1> [!NOTE]&1;> 链接由生成的字体下划线行为<xref:System.Web.UI.WebControls.LinkButton>， <xref:System.Web.UI.WebControls.HyperLink>，和<xref:System.Web.UI.HtmlControls.HtmlAnchor>控件受设置的删除线属性<xref:System.Web.UI.WebControls.FontInfo>控件。</xref:System.Web.UI.WebControls.FontInfo> </xref:System.Web.UI.HtmlControls.HtmlAnchor> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.LinkButton> 如果删除线属性设置，而不考虑其值，则必须设置<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>属性显式如果你想要显示为带有下划线的链接。</xref:System.Web.UI.WebControls.FontInfo.Underline%2A>"
  example:
  - "The following example demonstrates how to use the Strikeout property to programmatically specify a strikethrough font for a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfo#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_6_1.aspx)]\n [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_6_1.aspx)]"
  syntax:
    content: public bool Strikeout { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字体中间删除;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FontInfo.Strikeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.ToString
  id: ToString
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: FontInfo.ToString()
  fullName: System.Web.UI.WebControls.FontInfo.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返回一个字符串，包含的字体名称和大小的实例<xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;></xref>类。"
  remarks: "使用 ToString 方法来创建包含字体名称和大小的<xref:System.Web.UI.WebControls.FontInfo>类</xref:System.Web.UI.WebControls.FontInfo>实例，使用逗号分隔的字符串      1> [!NOTE]&1;> 如果<xref:System.Web.UI.WebControls.FontInfo.Size%2A>未设置属性，则返回仅字体名称。</xref:System.Web.UI.WebControls.FontInfo.Size%2A>"
  example:
  - >-
    [!code-cs[FontInfo#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_137_1.aspx)]
     [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_137_1.aspx)]
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "包含的字体名称和大小的实例的字符串<xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;></xref>类。"
  overload: System.Web.UI.WebControls.FontInfo.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FontInfo.Underline
  id: Underline
  parent: System.Web.UI.WebControls.FontInfo
  langs:
  - csharp
  name: Underline
  nameWithType: FontInfo.Underline
  fullName: System.Web.UI.WebControls.FontInfo.Underline
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，指示字体是否带有下划线。"
  remarks: "使用下划线属性指定或确定该字体是否有下在文本下方的行。       此属性的值存储在视图状态。      1> [!NOTE]&1;> 链接由生成的字体下划线行为<xref:System.Web.UI.WebControls.LinkButton>， <xref:System.Web.UI.WebControls.HyperLink>，和<xref:System.Web.UI.HtmlControls.HtmlAnchor>控件的设置会影响<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>和<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>属性<xref:System.Web.UI.WebControls.FontInfo>控件。</xref:System.Web.UI.WebControls.FontInfo> </xref:System.Web.UI.WebControls.FontInfo.Overline%2A> </xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A> </xref:System.Web.UI.HtmlControls.HtmlAnchor> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.LinkButton> 如果<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>或<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>设置属性，而不考虑它们的值，如果你想要显示为带有下划线的链接，则必须显式设置下划线属性。</xref:System.Web.UI.WebControls.FontInfo.Overline%2A> </xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>"
  example:
  - "The following example demonstrates how to use the Underline property to programmatically specify an underlined font for a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[FontInfo#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_685_1.aspx)]\n [!code-vb[FontInfo#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_685_1.aspx)]"
  syntax:
    content: public bool Underline { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此字体是带下划线;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FontInfo.Underline*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.FontInfo.Bold
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Bold
  nameWithType: FontInfo.Bold
  fullName: System.Web.UI.WebControls.FontInfo.Bold
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FontInfo.ClearDefaults
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: ClearDefaults()
  nameWithType: FontInfo.ClearDefaults()
  fullName: System.Web.UI.WebControls.FontInfo.ClearDefaults()
- uid: System.Web.UI.WebControls.FontInfo.CopyFrom(System.Web.UI.WebControls.FontInfo)
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: CopyFrom(FontInfo)
  nameWithType: FontInfo.CopyFrom(FontInfo)
  fullName: System.Web.UI.WebControls.FontInfo.CopyFrom(FontInfo)
- uid: System.Web.UI.WebControls.FontInfo
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FontInfo
  nameWithType: FontInfo
  fullName: System.Web.UI.WebControls.FontInfo
- uid: System.Web.UI.WebControls.FontInfo.Italic
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Italic
  nameWithType: FontInfo.Italic
  fullName: System.Web.UI.WebControls.FontInfo.Italic
- uid: System.Web.UI.WebControls.FontInfo.MergeWith(System.Web.UI.WebControls.FontInfo)
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: MergeWith(FontInfo)
  nameWithType: FontInfo.MergeWith(FontInfo)
  fullName: System.Web.UI.WebControls.FontInfo.MergeWith(FontInfo)
- uid: System.Web.UI.WebControls.FontInfo.Name
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Name
  nameWithType: FontInfo.Name
  fullName: System.Web.UI.WebControls.FontInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FontInfo.Names
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Names
  nameWithType: FontInfo.Names
  fullName: System.Web.UI.WebControls.FontInfo.Names
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.FontInfo.Overline
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Overline
  nameWithType: FontInfo.Overline
  fullName: System.Web.UI.WebControls.FontInfo.Overline
- uid: System.Web.UI.WebControls.FontInfo.ShouldSerializeNames
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: ShouldSerializeNames()
  nameWithType: FontInfo.ShouldSerializeNames()
  fullName: System.Web.UI.WebControls.FontInfo.ShouldSerializeNames()
- uid: System.Web.UI.WebControls.FontInfo.Size
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Size
  nameWithType: FontInfo.Size
  fullName: System.Web.UI.WebControls.FontInfo.Size
- uid: System.Web.UI.WebControls.FontUnit
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FontUnit
  nameWithType: FontUnit
  fullName: System.Web.UI.WebControls.FontUnit
- uid: System.Web.UI.WebControls.FontInfo.Strikeout
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Strikeout
  nameWithType: FontInfo.Strikeout
  fullName: System.Web.UI.WebControls.FontInfo.Strikeout
- uid: System.Web.UI.WebControls.FontInfo.ToString
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: ToString()
  nameWithType: FontInfo.ToString()
  fullName: System.Web.UI.WebControls.FontInfo.ToString()
- uid: System.Web.UI.WebControls.FontInfo.Underline
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Underline
  nameWithType: FontInfo.Underline
  fullName: System.Web.UI.WebControls.FontInfo.Underline
- uid: System.Web.UI.WebControls.FontInfo.Bold*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Bold
  nameWithType: FontInfo.Bold
- uid: System.Web.UI.WebControls.FontInfo.ClearDefaults*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: ClearDefaults
  nameWithType: FontInfo.ClearDefaults
- uid: System.Web.UI.WebControls.FontInfo.CopyFrom*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: CopyFrom
  nameWithType: FontInfo.CopyFrom
- uid: System.Web.UI.WebControls.FontInfo.Italic*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Italic
  nameWithType: FontInfo.Italic
- uid: System.Web.UI.WebControls.FontInfo.MergeWith*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: MergeWith
  nameWithType: FontInfo.MergeWith
- uid: System.Web.UI.WebControls.FontInfo.Name*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Name
  nameWithType: FontInfo.Name
- uid: System.Web.UI.WebControls.FontInfo.Names*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Names
  nameWithType: FontInfo.Names
- uid: System.Web.UI.WebControls.FontInfo.Overline*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Overline
  nameWithType: FontInfo.Overline
- uid: System.Web.UI.WebControls.FontInfo.ShouldSerializeNames*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: ShouldSerializeNames
  nameWithType: FontInfo.ShouldSerializeNames
- uid: System.Web.UI.WebControls.FontInfo.Size*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Size
  nameWithType: FontInfo.Size
- uid: System.Web.UI.WebControls.FontInfo.Strikeout*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Strikeout
  nameWithType: FontInfo.Strikeout
- uid: System.Web.UI.WebControls.FontInfo.ToString*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: ToString
  nameWithType: FontInfo.ToString
- uid: System.Web.UI.WebControls.FontInfo.Underline*
  parent: System.Web.UI.WebControls.FontInfo
  isExternal: false
  name: Underline
  nameWithType: FontInfo.Underline
