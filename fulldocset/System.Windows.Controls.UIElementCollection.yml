### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.UIElementCollection
  id: UIElementCollection
  children:
  - System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)
  - System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.Capacity
  - System.Windows.Controls.UIElementCollection.Clear
  - System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)
  - System.Windows.Controls.UIElementCollection.Count
  - System.Windows.Controls.UIElementCollection.GetEnumerator
  - System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.IsSynchronized
  - System.Windows.Controls.UIElementCollection.Item(System.Int32)
  - System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)
  - System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.SyncRoot
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: UIElementCollection
  nameWithType: UIElementCollection
  fullName: System.Windows.Controls.UIElementCollection
  type: Class
  summary: "表示的有序的集合<xref href=&quot;System.Windows.UIElement&quot;></xref>子元素。"
  remarks: "<xref:System.Windows.Controls.Panel>基类使用 UIElementCollection 来表示它的子元素集合。</xref:System.Windows.Controls.Panel> 方法和属性定义的 UIElementCollection 影响派生自的所有对象<xref:System.Windows.Controls.Panel>并定义一个常见的操作的功能集<xref:System.Windows.Controls.Panel>子元素。</xref:System.Windows.Controls.Panel> </xref:System.Windows.Controls.Panel>       UIElementCollection 具有关联到其自己的上下文 （类）。 必须对集合的访问的所属<xref:System.Windows.Controls.Panel>。</xref:System.Windows.Controls.Panel>上下文中"
  example:
  - "The following example uses the <xref:System.Windows.Controls.UIElementCollection.Add%2A> method to add child content to a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type UIElementCollection.  \n  \n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]"
  syntax:
    content: 'public class UIElementCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)
  id: '#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)'
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: UIElementCollection(UIElement,FrameworkElement)
  nameWithType: UIElementCollection.UIElementCollection(UIElement,FrameworkElement)
  fullName: System.Windows.Controls.UIElementCollection.UIElementCollection(UIElement,FrameworkElement)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "初始化的新实例<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>类。"
  syntax:
    content: public UIElementCollection (System.Windows.UIElement visualParent, System.Windows.FrameworkElement logicalParent);
    parameters:
    - id: visualParent
      type: System.Windows.UIElement
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>集合的父级。"
    - id: logicalParent
      type: System.Windows.FrameworkElement
      description: "集合中元素的逻辑父级。"
  overload: System.Windows.Controls.UIElementCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)
  id: Add(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Add(UIElement)
  nameWithType: UIElementCollection.Add(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Add(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "指定将元素添加到<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example uses the Add method to add child content to a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]"
  syntax:
    content: public virtual int Add (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "The <xref href=&quot;System.Windows.UIElement&quot;></xref> to add."
    return:
      type: System.Int32
      description: "添加元素的索引位置。"
  overload: System.Windows.Controls.UIElementCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Capacity
  id: Capacity
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: UIElementCollection.Capacity
  fullName: System.Windows.Controls.UIElementCollection.Capacity
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "获取或设置元素的数目<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>可以包含。"
  syntax:
    content: public virtual int Capacity { get; set; }
    return:
      type: System.Int32
      description: "集合可以包含的元素总数。"
  overload: System.Windows.Controls.UIElementCollection.Capacity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Clear
  id: Clear
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: UIElementCollection.Clear()
  fullName: System.Windows.Controls.UIElementCollection.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "移除所有元素从<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example uses the Clear method to clear child content from a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Controls.UIElementCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)
  id: ClearLogicalParent(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: ClearLogicalParent(UIElement)
  nameWithType: UIElementCollection.ClearLogicalParent(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.ClearLogicalParent(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "当元素离开清除元素的逻辑父级<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: protected void ClearLogicalParent (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>正在清除其逻辑父级。"
  overload: System.Windows.Controls.UIElementCollection.ClearLogicalParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)
  id: Contains(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Contains(UIElement)
  nameWithType: UIElementCollection.Contains(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Contains(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "确定指定的元素是否在<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example uses the Contains method to determine if a specific <xref:System.Windows.UIElement> exists within a <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-cs[UIElementCollection#10](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#10)]\n [!code-vb[UIElementCollection#10](~/add/codesnippet/visualbasic/ElemCollMethodsVB/Pane1.xaml.vb#10)]"
  syntax:
    content: public virtual bool Contains (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要查找的元素。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Windows.UIElement&quot;></xref>在集合中找到; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: UIElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Controls.UIElementCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "副本<xref href=&quot;System.Windows.UIElement&quot;></xref>从<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>到一个数组中从指定的索引位置开始。"
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "集合复制到其中的数组。"
    - id: index
      type: System.Int32
      description: "复制开始处的元素的索引位置。"
  overload: System.Windows.Controls.UIElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)
  id: CopyTo(System.Windows.UIElement[],System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: CopyTo(UIElement[],Int32)
  nameWithType: UIElementCollection.CopyTo(UIElement[],Int32)
  fullName: System.Windows.Controls.UIElementCollection.CopyTo(UIElement[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "副本<xref href=&quot;System.Windows.UIElement&quot;></xref>从<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>到一个数组中从指定的索引位置开始。"
  syntax:
    content: public virtual void CopyTo (System.Windows.UIElement[] array, int index);
    parameters:
    - id: array
      type: System.Windows.UIElement[]
      description: "数组<xref href=&quot;System.Windows.UIElement&quot;></xref>对象。"
    - id: index
      type: System.Int32
      description: "复制开始处的元素的索引位置。"
  overload: System.Windows.Controls.UIElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Count
  id: Count
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: UIElementCollection.Count
  fullName: System.Windows.Controls.UIElementCollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "获取集合中的实际元素数。"
  remarks: ''
  example:
  - "The following example uses the Count property to count the number of child elements in a <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-cs[UIElementCollection#12](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#12)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "集合中的元素的实际数目。"
  overload: System.Windows.Controls.UIElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: UIElementCollection.GetEnumerator()
  fullName: System.Windows.Controls.UIElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "返回一个枚举器可循环<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>，可以列出此集合的成员。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Controls.UIElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)
  id: IndexOf(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: IndexOf(UIElement)
  nameWithType: UIElementCollection.IndexOf(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.IndexOf(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "返回在指定的元素的索引位置<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example finds the index position of a <xref:System.Windows.UIElement> within a <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-xml[UIElementCollectionIndexOf#1](~/add/codesnippet/xaml/UIElementCollection_IndexOf/Default.xaml#1)]  \n  \n ...  \n  \n [!code-vb[UIElementCollectionIndexOf#2](~/add/codesnippet/visualbasic/UIElementCollection_IndexOf_vb/default.xaml.vb#2)]\n [!code-cs[UIElementCollectionIndexOf#2](~/add/codesnippet/csharp/UIElementCollection_IndexOf/default.xaml.cs#2)]"
  syntax:
    content: public virtual int IndexOf (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "其索引的位置是必需的元素。"
    return:
      type: System.Int32
      description: "元素的索引位置。  如果该元素不在集合中，则为-1。"
  overload: System.Windows.Controls.UIElementCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)
  id: Insert(System.Int32,System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Insert(Int32,UIElement)
  nameWithType: UIElementCollection.Insert(Int32,UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Insert(Int32,UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "将元素插入<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>位于指定的索引位置。"
  remarks: ''
  example:
  - "The following example uses the Insert method to insert child content at a specified index position.  \n  \n [!code-cs[UIElementCollection#5](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#5)]"
  syntax:
    content: public virtual void Insert (int index, System.Windows.UIElement element);
    parameters:
    - id: index
      type: System.Int32
      description: "你想要将元素插入索引位置。"
    - id: element
      type: System.Windows.UIElement
      description: "要插入的元素<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: UIElementCollection.IsSynchronized
  fullName: System.Windows.Controls.UIElementCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "获取一个值，该值指示是否访问<xref:System.Collections.ICollection>接口同步的 （线程安全）。</xref:System.Collections.ICollection>"
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果对集合的访问同步;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: UIElementCollection.Item(Int32)
  fullName: System.Windows.Controls.UIElementCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "获取或设置<xref href=&quot;System.Windows.UIElement&quot;></xref>的从零开始的索引位置存储<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example uses the Item property to identify the child element at a specified index position.  \n  \n [!code-cs[UIElementCollection#11](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#11)]"
  syntax:
    content: public virtual System.Windows.UIElement this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "索引位置<xref href=&quot;System.Windows.UIElement&quot;> </xref>。"
    return:
      type: System.Windows.UIElement
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref>位于指定<code> index </code>位置。"
  overload: System.Windows.Controls.UIElementCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)
  id: Remove(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Remove(UIElement)
  nameWithType: UIElementCollection.Remove(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Remove(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "移除指定的元素从<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: public virtual void Remove (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要从集合中移除的元素。"
  overload: System.Windows.Controls.UIElementCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: UIElementCollection.RemoveAt(Int32)
  fullName: System.Windows.Controls.UIElementCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "删除<xref href=&quot;System.Windows.UIElement&quot;></xref>的指定索引处。"
  remarks: ''
  example:
  - "The following example uses the RemoveAt method to remove child content at a specified index position.  \n  \n [!code-cs[UIElementCollection#7](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#7)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref href=&quot;System.Windows.UIElement&quot;></xref>你想要删除。"
  overload: System.Windows.Controls.UIElementCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: UIElementCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Controls.UIElementCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "中移除的元素从一系列<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: public virtual void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "开始移除操作元素的索引位置。"
    - id: count
      type: System.Int32
      description: "要移除的元素数。"
  overload: System.Windows.Controls.UIElementCollection.RemoveRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)
  id: SetLogicalParent(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: SetLogicalParent(UIElement)
  nameWithType: UIElementCollection.SetLogicalParent(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.SetLogicalParent(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "设置中的某个元素的逻辑父级<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: protected void SetLogicalParent (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>设置的逻辑父代。"
  overload: System.Windows.Controls.UIElementCollection.SetLogicalParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: UIElementCollection.SyncRoot
  fullName: System.Windows.Controls.UIElementCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "获取可用于同步对的访问的对象<xref:System.Collections.ICollection>接口。</xref:System.Collections.ICollection>"
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>你可以使用对访问进行同步<xref:System.Collections.ICollection>接口。</xref:System.Collections.ICollection></xref:System.Object>"
  overload: System.Windows.Controls.UIElementCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "此类型或成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IList.Add*>。</xref:System.Collections.IList.Add*>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要添加的对象。"
    return:
      type: System.Int32
      description: "新元素的插入位置。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "此类型或成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IList.Contains*>。</xref:System.Collections.IList.Contains*>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在列表中定位的对象。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在列表中; 已找到该对象否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: UIElementCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "此类型或成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IList.IndexOf*>。</xref:System.Collections.IList.IndexOf*>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在列表中定位的对象。"
    return:
      type: System.Int32
      description: "索引<code> value </code>如果在列表中找到; 否则为-1。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: UIElementCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "此类型或成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IList.Insert*>。</xref:System.Collections.IList.Insert*>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "从零开始的索引位置`value`应插入。"
    - id: value
      type: System.Object
      description: "要插入到列表的对象。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "此类型或成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IList.IsFixedSize*>。</xref:System.Collections.IList.IsFixedSize*>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果列表不包含固定的大小，则否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "此类型或成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IList.IsReadOnly*>。</xref:System.Collections.IList.IsReadOnly*>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果列表为只读的;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: UIElementCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "此类型或成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IList.Item*>。</xref:System.Collections.IList.Item*>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "要获取或设置元素的从零开始索引。"
    return:
      type: System.Object
      description: "指定索引处的元素。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "此类型或成员支持[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基础结构，不应在代码中直接使用。 有关此成员的说明，请参阅<xref:System.Collections.IList.Remove*>。</xref:System.Collections.IList.Remove*>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要从列表中删除的对象。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: UIElementCollection(UIElement,FrameworkElement)
  nameWithType: UIElementCollection.UIElementCollection(UIElement,FrameworkElement)
  fullName: System.Windows.Controls.UIElementCollection.UIElementCollection(UIElement,FrameworkElement)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Add(UIElement)
  nameWithType: UIElementCollection.Add(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Add(UIElement)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.UIElementCollection.Capacity
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Capacity
  nameWithType: UIElementCollection.Capacity
  fullName: System.Windows.Controls.UIElementCollection.Capacity
- uid: System.Windows.Controls.UIElementCollection.Clear
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Clear()
  nameWithType: UIElementCollection.Clear()
  fullName: System.Windows.Controls.UIElementCollection.Clear()
- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: ClearLogicalParent(UIElement)
  nameWithType: UIElementCollection.ClearLogicalParent(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.ClearLogicalParent(UIElement)
- uid: System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Contains(UIElement)
  nameWithType: UIElementCollection.Contains(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Contains(UIElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: UIElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Controls.UIElementCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: CopyTo(UIElement[],Int32)
  nameWithType: UIElementCollection.CopyTo(UIElement[],Int32)
  fullName: System.Windows.Controls.UIElementCollection.CopyTo(UIElement[],Int32)
- uid: System.Windows.UIElement[]
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement[]
  spec.csharp:
  - uid: System.Windows.UIElement
    name: UIElement
    nameWithType: UIElement
    fullName: UIElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Controls.UIElementCollection.Count
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Count
  nameWithType: UIElementCollection.Count
  fullName: System.Windows.Controls.UIElementCollection.Count
- uid: System.Windows.Controls.UIElementCollection.GetEnumerator
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: UIElementCollection.GetEnumerator()
  fullName: System.Windows.Controls.UIElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: IndexOf(UIElement)
  nameWithType: UIElementCollection.IndexOf(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.IndexOf(UIElement)
- uid: System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Insert(Int32,UIElement)
  nameWithType: UIElementCollection.Insert(Int32,UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Insert(Int32,UIElement)
- uid: System.Windows.Controls.UIElementCollection.IsSynchronized
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: UIElementCollection.IsSynchronized
  fullName: System.Windows.Controls.UIElementCollection.IsSynchronized
- uid: System.Windows.Controls.UIElementCollection.Item(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: UIElementCollection.Item(Int32)
  fullName: System.Windows.Controls.UIElementCollection.Item(Int32)
- uid: System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Remove(UIElement)
  nameWithType: UIElementCollection.Remove(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Remove(UIElement)
- uid: System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: UIElementCollection.RemoveAt(Int32)
  fullName: System.Windows.Controls.UIElementCollection.RemoveAt(Int32)
- uid: System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: UIElementCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Controls.UIElementCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: SetLogicalParent(UIElement)
  nameWithType: UIElementCollection.SetLogicalParent(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.SetLogicalParent(UIElement)
- uid: System.Windows.Controls.UIElementCollection.SyncRoot
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: UIElementCollection.SyncRoot
  fullName: System.Windows.Controls.UIElementCollection.SyncRoot
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: UIElementCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: UIElementCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: UIElementCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Controls.UIElementCollection.#ctor*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: UIElementCollection
  nameWithType: UIElementCollection.UIElementCollection
- uid: System.Windows.Controls.UIElementCollection.Add*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Add
  nameWithType: UIElementCollection.Add
- uid: System.Windows.Controls.UIElementCollection.Capacity*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Capacity
  nameWithType: UIElementCollection.Capacity
- uid: System.Windows.Controls.UIElementCollection.Clear*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Clear
  nameWithType: UIElementCollection.Clear
- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: ClearLogicalParent
  nameWithType: UIElementCollection.ClearLogicalParent
- uid: System.Windows.Controls.UIElementCollection.Contains*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Contains
  nameWithType: UIElementCollection.Contains
- uid: System.Windows.Controls.UIElementCollection.CopyTo*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: UIElementCollection.CopyTo
- uid: System.Windows.Controls.UIElementCollection.Count*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Count
  nameWithType: UIElementCollection.Count
- uid: System.Windows.Controls.UIElementCollection.GetEnumerator*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: UIElementCollection.GetEnumerator
- uid: System.Windows.Controls.UIElementCollection.IndexOf*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: IndexOf
  nameWithType: UIElementCollection.IndexOf
- uid: System.Windows.Controls.UIElementCollection.Insert*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Insert
  nameWithType: UIElementCollection.Insert
- uid: System.Windows.Controls.UIElementCollection.IsSynchronized*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: UIElementCollection.IsSynchronized
- uid: System.Windows.Controls.UIElementCollection.Item*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Item
  nameWithType: UIElementCollection.Item
- uid: System.Windows.Controls.UIElementCollection.Remove*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Remove
  nameWithType: UIElementCollection.Remove
- uid: System.Windows.Controls.UIElementCollection.RemoveAt*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: RemoveAt
  nameWithType: UIElementCollection.RemoveAt
- uid: System.Windows.Controls.UIElementCollection.RemoveRange*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: RemoveRange
  nameWithType: UIElementCollection.RemoveRange
- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: SetLogicalParent
  nameWithType: UIElementCollection.SetLogicalParent
- uid: System.Windows.Controls.UIElementCollection.SyncRoot*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: UIElementCollection.SyncRoot
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: UIElementCollection.System.Collections.IList.Add
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: UIElementCollection.System.Collections.IList.Contains
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: UIElementCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: UIElementCollection.System.Collections.IList.Insert
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: UIElementCollection.System.Collections.IList.Item
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: UIElementCollection.System.Collections.IList.Remove
