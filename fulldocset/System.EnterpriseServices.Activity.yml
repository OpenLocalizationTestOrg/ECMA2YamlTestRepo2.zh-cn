### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Activity
  id: Activity
  children:
  - System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)
  - System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)
  - System.EnterpriseServices.Activity.BindToCurrentThread
  - System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)
  - System.EnterpriseServices.Activity.UnbindFromThread
  langs:
  - csharp
  name: Activity
  nameWithType: Activity
  fullName: System.EnterpriseServices.Activity
  type: Class
  summary: "创建用于同步或异步批处理作业都可以使用 COM + 服务而无需创建一个在 COM + 组件的活动。 此类不能被继承。"
  remarks: "与活动关联的上下文完全由<xref:System.EnterpriseServices.ServiceConfig>对象。</xref:System.EnterpriseServices.ServiceConfig>"
  example:
  - "The following code example demonstrates how to use the Activity class and use the synchronization service.  \n  \n [!code-cs[EnterpriseServices_Activity#0](~/add/codesnippet/csharp/t-system.enterpriseservi_28_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class Activity
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)
  id: '#ctor(System.EnterpriseServices.ServiceConfig)'
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: Activity(ServiceConfig)
  nameWithType: Activity.Activity(ServiceConfig)
  fullName: System.EnterpriseServices.Activity.Activity(ServiceConfig)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "初始化的新实例<xref href=&quot;System.EnterpriseServices.Activity&quot;></xref>类。"
  remarks: "创建<xref:System.EnterpriseServices.Activity>用于提交批处理工作到 COM + 服务。</xref:System.EnterpriseServices.Activity> 与活动关联的上下文完全由<xref:System.EnterpriseServices.ServiceConfig>传递的对象`cfg`参数。</xref:System.EnterpriseServices.ServiceConfig>"
  example:
  - "The following code example demonstrates how to initialize a new instance of the <xref:System.EnterpriseServices.Activity> class.  \n  \n [!code-cs[EnterpriseServices_Activity#1](~/add/codesnippet/csharp/74b091f6-67a9-4b43-89dc-_1.cs)]"
  syntax:
    content: public Activity (System.EnterpriseServices.ServiceConfig cfg);
    parameters:
    - id: cfg
      type: System.EnterpriseServices.ServiceConfig
      description: "A <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref>包含要使用的服务的配置信息。"
  overload: System.EnterpriseServices.Activity.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.Activity&quot;></xref>当前平台上不支持。"
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)
  id: AsynchronousCall(System.EnterpriseServices.IServiceCall)
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: AsynchronousCall(IServiceCall)
  nameWithType: Activity.AsynchronousCall(IServiceCall)
  fullName: System.EnterpriseServices.Activity.AsynchronousCall(IServiceCall)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "以异步方式运行的指定的用户定义的批处理工作。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use this method.  \n  \n [!code-cs[EnterpriseServices_Activity#2](~/add/codesnippet/csharp/f0e8808c-d08c-49e7-8cd4-_1.cs)]"
  syntax:
    content: public void AsynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);
    parameters:
    - id: serviceCall
      type: System.EnterpriseServices.IServiceCall
      description: "A <xref href=&quot;System.EnterpriseServices.IServiceCall&quot;> </xref>用于实现批处理工作的对象。"
  overload: System.EnterpriseServices.Activity.AsynchronousCall*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.BindToCurrentThread
  id: BindToCurrentThread
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: BindToCurrentThread()
  nameWithType: Activity.BindToCurrentThread()
  fullName: System.EnterpriseServices.Activity.BindToCurrentThread()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "绑定到当前线程的用户定义的工作。"
  remarks: "通过提交的批处理工作的 BindToCurrentThread 绑定<xref:System.EnterpriseServices.Activity.SynchronousCall%2A>或<xref:System.EnterpriseServices.Activity.AsynchronousCall%2A>到当前的单线程单元 (STA) 的方法。</xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> </xref:System.EnterpriseServices.Activity.SynchronousCall%2A> 如果当前线程在多线程单元 (MTA) 中正在运行，则 BindToCurrentThread 无效。 当前的线程模型由的配置<xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A>属性<xref:System.EnterpriseServices.ServiceConfig>对象。</xref:System.EnterpriseServices.ServiceConfig> </xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A>"
  syntax:
    content: public void BindToCurrentThread ();
    parameters: []
  overload: System.EnterpriseServices.Activity.BindToCurrentThread*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)
  id: SynchronousCall(System.EnterpriseServices.IServiceCall)
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: SynchronousCall(IServiceCall)
  nameWithType: Activity.SynchronousCall(IServiceCall)
  fullName: System.EnterpriseServices.Activity.SynchronousCall(IServiceCall)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "以同步方式运行的指定的用户定义的批处理工作。"
  syntax:
    content: public void SynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);
    parameters:
    - id: serviceCall
      type: System.EnterpriseServices.IServiceCall
      description: "A <xref href=&quot;System.EnterpriseServices.IServiceCall&quot;> </xref>用于实现批处理工作的对象。"
  overload: System.EnterpriseServices.Activity.SynchronousCall*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.UnbindFromThread
  id: UnbindFromThread
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: UnbindFromThread()
  nameWithType: Activity.UnbindFromThread()
  fullName: System.EnterpriseServices.Activity.UnbindFromThread()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "解除绑定通过提交批处理工作<> *1> 或<> *1> 从在其运行的批处理工作的线程的方法。"
  remarks: "如果批处理工作之前未被绑定到线程，UnbindFromThread 项不起作用。"
  syntax:
    content: public void UnbindFromThread ();
    parameters: []
  overload: System.EnterpriseServices.Activity.UnbindFromThread*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: Activity(ServiceConfig)
  nameWithType: Activity.Activity(ServiceConfig)
  fullName: System.EnterpriseServices.Activity.Activity(ServiceConfig)
- uid: System.EnterpriseServices.ServiceConfig
  parent: System.EnterpriseServices
  isExternal: false
  name: ServiceConfig
  nameWithType: ServiceConfig
  fullName: System.EnterpriseServices.ServiceConfig
- uid: System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: AsynchronousCall(IServiceCall)
  nameWithType: Activity.AsynchronousCall(IServiceCall)
  fullName: System.EnterpriseServices.Activity.AsynchronousCall(IServiceCall)
- uid: System.EnterpriseServices.IServiceCall
  parent: System.EnterpriseServices
  isExternal: false
  name: IServiceCall
  nameWithType: IServiceCall
  fullName: System.EnterpriseServices.IServiceCall
- uid: System.EnterpriseServices.Activity.BindToCurrentThread
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: BindToCurrentThread()
  nameWithType: Activity.BindToCurrentThread()
  fullName: System.EnterpriseServices.Activity.BindToCurrentThread()
- uid: System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: SynchronousCall(IServiceCall)
  nameWithType: Activity.SynchronousCall(IServiceCall)
  fullName: System.EnterpriseServices.Activity.SynchronousCall(IServiceCall)
- uid: System.EnterpriseServices.Activity.UnbindFromThread
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: UnbindFromThread()
  nameWithType: Activity.UnbindFromThread()
  fullName: System.EnterpriseServices.Activity.UnbindFromThread()
- uid: System.EnterpriseServices.Activity.#ctor*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: Activity
  nameWithType: Activity.Activity
- uid: System.EnterpriseServices.Activity.AsynchronousCall*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: AsynchronousCall
  nameWithType: Activity.AsynchronousCall
- uid: System.EnterpriseServices.Activity.BindToCurrentThread*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: BindToCurrentThread
  nameWithType: Activity.BindToCurrentThread
- uid: System.EnterpriseServices.Activity.SynchronousCall*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: SynchronousCall
  nameWithType: Activity.SynchronousCall
- uid: System.EnterpriseServices.Activity.UnbindFromThread*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: UnbindFromThread
  nameWithType: Activity.UnbindFromThread
