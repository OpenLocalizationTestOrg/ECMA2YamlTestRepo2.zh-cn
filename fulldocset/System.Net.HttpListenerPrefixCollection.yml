### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerPrefixCollection
  id: HttpListenerPrefixCollection
  children:
  - System.Net.HttpListenerPrefixCollection.Add(System.String)
  - System.Net.HttpListenerPrefixCollection.Clear
  - System.Net.HttpListenerPrefixCollection.Contains(System.String)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  - System.Net.HttpListenerPrefixCollection.Count
  - System.Net.HttpListenerPrefixCollection.GetEnumerator
  - System.Net.HttpListenerPrefixCollection.IsReadOnly
  - System.Net.HttpListenerPrefixCollection.IsSynchronized
  - System.Net.HttpListenerPrefixCollection.Remove(System.String)
  - System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: HttpListenerPrefixCollection
  nameWithType: HttpListenerPrefixCollection
  fullName: System.Net.HttpListenerPrefixCollection
  type: Class
  summary: "表示用于存储的统一资源标识符 (URI) 前缀的集合<xref href=&quot;System.Net.HttpListener&quot;></xref>对象。"
  remarks: "<xref:System.Net.HttpListener.Prefixes%2A>属性返回的此集合的实例。</xref:System.Net.HttpListener.Prefixes%2A>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its HttpListenerPrefixCollection.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_1_1.cs)]"
  syntax:
    content: 'public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection<string>, System.Collections.Generic.IEnumerable<string>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.String>
  - System.Collections.Generic.IEnumerable<System.String>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "向集合中添加的统一资源标识符 (URI) 前缀。"
  remarks: "此方法将 URI 前缀添加到由关联的前缀集<xref:System.Net.HttpListener>对象。</xref:System.Net.HttpListener> 检查时`uriPrefix`以确保它是有效，请忽略大小写。       URI 的前缀字符串组成的方案 （http 或 https）、 主机、 一个可选端口，以及一个可选路径，例如，&quot;`http://www.contoso.com:8080/customerData``/`&quot;。 前缀必须以正斜杠 （&quot;/&quot;） 结尾。 <xref:System.Net.HttpListener>最匹配所请求的 URI 的前缀与对请求作出响应。</xref:System.Net.HttpListener> 多个<xref:System.Net.HttpListener>对象不能添加相同的前缀。</xref:System.Net.HttpListener> <xref:System.Net.HttpListenerException>如果引发异常<xref:System.Net.HttpListener>会添加前缀中已被使用。</xref:System.Net.HttpListener> </xref:System.Net.HttpListenerException>       指定一个端口时，主机元素可以被替换为&quot;`*`&quot;，则指示<xref:System.Net.HttpListener>接受请求发送到端口，如果请求的 URI 与任何其他前缀不匹配。</xref:System.Net.HttpListener> 例如，若要接收所有请求发送到端口 8080 请求的 URI 都不处理时由任何其他<xref:System.Net.HttpListener>，该前缀是&quot;`http://*:8080``/`&quot;。</xref:System.Net.HttpListener> 同样，若要指定<xref:System.Net.HttpListener>接受所有请求都发送到的端口替换主机元素&quot;`+`&quot;字符，&quot;`https://+:8080`/&quot;。</xref:System.Net.HttpListener> &quot;`*`&quot;和&quot;`+`&quot;字符可出现在包含路径的前缀。       从.NET 4.5.3 和 Windows 10 开始，在 URI 的前缀中管理的支持通配符子域<xref:System.Net.HttpListener>对象。</xref:System.Net.HttpListener> 若要指定通配符子域，使用&quot;*&quot;字符的 URI 前缀中的主机名的一部分︰ 例如， `http://*.foo.com/`，并将此作为自变量传递给 HttpListenerPrefixCollection.Add 方法。 这将在处理.NET 4.5.3 和 Windows 10;在早期版本，此操作将产生<xref:System.Net.HttpListenerException></xref:System.Net.HttpListenerException>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/m-system.net.httplistene_16_1.cs)]"
  syntax:
    content: public void Add (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "A<xref:System.String>标识在传入的请求中比较的 URI 信息。</xref:System.String> 前缀必须以正斜杠 （&quot;/&quot;） 结尾。"
  overload: System.Net.HttpListenerPrefixCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uriPrefix</code>不使用 http:// 或 https:// 方案。 这些是仅有的方案支持<xref href=&quot;System.Net.HttpListener&quot;></xref>对象。       -或-<code>uriPrefix</code>不是格式正确的 URI 前缀。 请确保字符串被终止与&quot;/&quot;。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref>关联与此集合处于关闭状态。"
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Windows 函数调用失败。 检查异常的<xref:System.Net.HttpListenerException.ErrorCode*>属性来确定异常的原因。</xref:System.Net.HttpListenerException.ErrorCode*> 如果另一个，将引发此异常<xref href=&quot;System.Net.HttpListener&quot;></xref>已经添加前缀<code> uriPrefix </code>。"
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Clear
  id: Clear
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "从集合中移除所有的统一资源标识符 (URI) 前缀。"
  remarks: "调用此方法之后, 无法启动关联<xref:System.Net.HttpListener>而无需添加新的前缀; 如果你尝试执行此操作，将引发异常。</xref:System.Net.HttpListener>"
  example:
  - "The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#6](~/add/codesnippet/csharp/m-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Net.HttpListenerPrefixCollection.Clear*
  exceptions:
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Windows 函数调用失败。 检查异常的<xref:System.Net.HttpListenerException.ErrorCode*>属性来确定异常的原因。</xref:System.Net.HttpListenerException.ErrorCode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref>关联与此集合处于关闭状态。"
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "返回<xref:System.Boolean>值，该值指示是否在集合中包含指定的前缀。</xref:System.Boolean>"
  remarks: "指定的前缀必须与现有值完全匹配。"
  example:
  - "The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.  \n  \n [!code-cs[Net_Listener_Basic#4](~/add/codesnippet/csharp/m-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public bool Contains (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "<xref:System.String>包含测试的统一资源标识符 (URI) 前缀</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此集合包含指定的前缀<code> uriPrefix </code>; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.HttpListenerPrefixCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "内容复制<xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;></xref>到指定的数组。"
  remarks: "该数组必须能够包含字符串和不能为多维。"
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int offset);
    parameters:
    - id: array
      type: System.Array
      description: "一维<xref:System.Array>接收此集合中的统一资源标识符 (URI) 前缀字符串。</xref:System.Array>"
    - id: offset
      type: System.Int32
      description: "中的从零开始索引`array`复制开始处。"
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>具有多个维度。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "此集合包含多个元素不是可以存储在<code> array </code>开始<code> offset </code>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref>关联与此集合处于关闭状态。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>array</code>无法存储字符串值。"
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "内容复制<xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;></xref>到指定的字符串数组。"
  remarks: "该数组必须能够包含字符串和不能为多维。"
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public void CopyTo (string[] array, int offset);
    parameters:
    - id: array
      type: System.String[]
      description: "接收此集合中的统一资源标识符 (URI) 前缀字符串的一维字符串数组。"
    - id: offset
      type: System.Int32
      description: "中的从零开始索引`array`复制开始处。"
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>具有多个维度。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "此集合包含多个元素不是可以存储在<code> array </code>开始<code> offset </code>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref>关联与此集合处于关闭状态。"
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Count
  id: Count
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "获取集合中包含的前缀数。"
  remarks: ''
  example:
  - "The following code example displays the prefixes in a collection.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/p-system.net.httplistene_43_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含在此集合中的前缀的数目。</xref:System.Int32>"
  overload: System.Net.HttpListenerPrefixCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "返回一个可用于循环访问集合的对象。"
  remarks: "此方法返回的对象最初定位在此集合中的第一个元素之前。 必须调用<xref:System.Collections.IEnumerator.MoveNext%2A>方法可以访问的第一个元素之前。</xref:System.Collections.IEnumerator.MoveNext%2A> 若要访问当前的位置处的元素，调用<xref:System.Collections.IEnumerator.Current%2A>属性。</xref:System.Collections.IEnumerator.Current%2A>       不要修改集合，同时使用枚举器。 如果过程中，枚举数就中修改集合的使用，尝试通过调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>导致<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.Collections.IEnumerator.Reset%2A></xref:System.Collections.IEnumerator.MoveNext%2A>设置位置       枚举器的详细说明，请参阅的文档<xref:System.Collections.IEnumerator>类和<xref:System.Collections.IEnumerable.GetEnumerator%2A>方法。</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  example:
  - "The following code example demonstrates enumerating through a collection. Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/m-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public System.Collections.Generic.IEnumerator<string> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.String}
      description: "实现的对象<xref:System.Collections.IEnumerator>接口，并提供对此集合中的字符串的访问。</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "获取一个值，该值指示对集合的访问是否为只读的。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "获取一个值，该值指示是否同步对集合的访问 （线程安全）。"
  remarks: "枚举整个集合本质上不是一个线程安全的过程。 即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。 若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "此属性始终返回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "从由前缀的列表中移除指定的统一资源标识符 (URI) <xref href=&quot;System.Net.HttpListener&quot;> </xref>对象。"
  remarks: "如果`uriPrefix`是不在集合中，此方法不执行任何操作。"
  syntax:
    content: public bool Remove (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "A <xref:System.String>，其中包含要删除的 URI 前缀。</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> uriPrefix </code>中找到<xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;></xref>和删除; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.HttpListenerPrefixCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Windows 函数调用失败。 若要确定异常的原因，请检查该异常的错误代码。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref>关联与此集合处于关闭状态。"
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "返回一个可用于循环访问集合的对象。"
  remarks: "此方法返回的对象最初定位在此集合中的第一个元素之前。 必须调用<xref:System.Collections.IEnumerator.MoveNext%2A>方法可以访问的第一个元素之前。</xref:System.Collections.IEnumerator.MoveNext%2A> 若要访问当前的位置处的元素，调用<xref:System.Collections.IEnumerator.Current%2A>属性。</xref:System.Collections.IEnumerator.Current%2A>       不要修改集合，同时使用枚举器。 如果过程中，枚举数就中修改集合的使用，尝试通过调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>导致<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.Collections.IEnumerator.Reset%2A></xref:System.Collections.IEnumerator.MoveNext%2A>设置位置       枚举器的详细说明，请参阅的文档<xref:System.Collections.IEnumerator>类和<xref:System.Collections.IEnumerable.GetEnumerator%2A>方法。</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "实现的对象<xref:System.Collections.IEnumerator>接口，并提供对此集合中的字符串的访问。</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.HttpListenerException
  parent: System.Net
  isExternal: false
  name: HttpListenerException
  nameWithType: HttpListenerException
  fullName: System.Net.HttpListenerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerPrefixCollection.Clear
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerPrefixCollection.Count
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<String>
  nameWithType: IEnumerator<String>
  fullName: System.Collections.Generic.IEnumerator<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.HttpListenerPrefixCollection.Add*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add
  nameWithType: HttpListenerPrefixCollection.Add
- uid: System.Net.HttpListenerPrefixCollection.Clear*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear
  nameWithType: HttpListenerPrefixCollection.Clear
- uid: System.Net.HttpListenerPrefixCollection.Contains*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains
  nameWithType: HttpListenerPrefixCollection.Contains
- uid: System.Net.HttpListenerPrefixCollection.CopyTo*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo
  nameWithType: HttpListenerPrefixCollection.CopyTo
- uid: System.Net.HttpListenerPrefixCollection.Count*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpListenerPrefixCollection.GetEnumerator
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove
  nameWithType: HttpListenerPrefixCollection.Remove
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator
