### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ScriptManager
  id: ScriptManager
  children:
  - System.Web.UI.ScriptManager.#ctor
  - System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)
  - System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)
  - System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)
  - System.Web.UI.ScriptManager.AjaxFrameworkAssembly
  - System.Web.UI.ScriptManager.AjaxFrameworkMode
  - System.Web.UI.ScriptManager.AllowCustomErrorsRedirect
  - System.Web.UI.ScriptManager.AsyncPostBackError
  - System.Web.UI.ScriptManager.AsyncPostBackErrorMessage
  - System.Web.UI.ScriptManager.AsyncPostBackSourceElementID
  - System.Web.UI.ScriptManager.AsyncPostBackTimeout
  - System.Web.UI.ScriptManager.AuthenticationService
  - System.Web.UI.ScriptManager.ClientNavigateHandler
  - System.Web.UI.ScriptManager.CompositeScript
  - System.Web.UI.ScriptManager.EmptyPageUrl
  - System.Web.UI.ScriptManager.EnableCdn
  - System.Web.UI.ScriptManager.EnableCdnFallback
  - System.Web.UI.ScriptManager.EnableHistory
  - System.Web.UI.ScriptManager.EnablePageMethods
  - System.Web.UI.ScriptManager.EnablePartialRendering
  - System.Web.UI.ScriptManager.EnableScriptGlobalization
  - System.Web.UI.ScriptManager.EnableScriptLocalization
  - System.Web.UI.ScriptManager.EnableSecureHistoryState
  - System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)
  - System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations
  - System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks
  - System.Web.UI.ScriptManager.GetRegisteredDisposeScripts
  - System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes
  - System.Web.UI.ScriptManager.GetRegisteredHiddenFields
  - System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements
  - System.Web.UI.ScriptManager.GetRegisteredStartupScripts
  - System.Web.UI.ScriptManager.GetStateString
  - System.Web.UI.ScriptManager.IsDebuggingEnabled
  - System.Web.UI.ScriptManager.IsInAsyncPostBack
  - System.Web.UI.ScriptManager.IsNavigating
  - System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.ScriptManager.LoadScriptsBeforeUI
  - System.Web.UI.ScriptManager.Navigate
  - System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)
  - System.Web.UI.ScriptManager.OnInit(System.EventArgs)
  - System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)
  - System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)
  - System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)
  - System.Web.UI.ScriptManager.ProfileService
  - System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)
  - System.Web.UI.ScriptManager.RaisePostDataChangedEvent
  - System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)
  - System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)
  - System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)
  - System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)
  - System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)
  - System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)
  - System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)
  - System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)
  - System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)
  - System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)
  - System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)
  - System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)
  - System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)
  - System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)
  - System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)
  - System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)
  - System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)
  - System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)
  - System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)
  - System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)
  - System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.ScriptManager.ResolveCompositeScriptReference
  - System.Web.UI.ScriptManager.ResolveScriptReference
  - System.Web.UI.ScriptManager.RoleService
  - System.Web.UI.ScriptManager.ScriptMode
  - System.Web.UI.ScriptManager.ScriptPath
  - System.Web.UI.ScriptManager.ScriptResourceMapping
  - System.Web.UI.ScriptManager.Scripts
  - System.Web.UI.ScriptManager.Services
  - System.Web.UI.ScriptManager.SetFocus(System.String)
  - System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)
  - System.Web.UI.ScriptManager.SupportsPartialRendering
  - System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  - System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.ScriptManager.Visible
  langs:
  - csharp
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
  type: Class
  summary: "管理 ASP.NET Ajax 脚本库和脚本文件、 局部页面呈现以及客户端代理类生成的 Web 和应用程序管理服务。"
  remarks: "本主题中:-[简介](#introduction)      -   [局部页面呈现](#partial_page_rendering)      -   [母版页、 用户控件，与其他子组件使用 ScriptManager 控件](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)      -   [脚本管理和注册](#script_management_and_registration)      -   [Web 服务引用](#web_service_references)      -   [本地化](#localization)      -   [错误处理](#error_handling)      -   [声明性语法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 简介 ScriptManager 控件是在 ASP.NET 中的 Ajax 功能的核心。       控件管理页面上的所有 ASP.NET Ajax 资源。 这包括下载[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]脚本到浏览器和协调使用启用的部分页面更新<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> 此外，ScriptManager 控件，可执行以下操作:-注册部分页面更新与兼容的脚本。 若要管理你的脚本和核心库之间的依赖关系，你注册任何脚本加载后[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]脚本。      -指定是否发布或调试脚本发送到浏览器。      -提供对 Web 服务方法中访问脚本通过 ScriptManager 控件与注册 Web 服务。      -提供对 ASP.NET 身份验证、 角色和配置文件应用程序服务从客户端脚本的访问与 ScriptManager 控件注册这些服务。      -支持 ECMAScript (JavaScript)、 和浏览器中的函数的区域性特定的显示。      -通过使用访问嵌入的脚本文件或独立的脚本文件的本地化资源<xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A>属性<xref:System.Web.UI.ScriptReference>控件。</xref:System.Web.UI.ScriptReference> </xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A>      -注册实现的服务器控件<xref:System.Web.UI.IExtenderControl>或<xref:System.Web.UI.IScriptControl>接口与 ScriptManager 控件，以便在呈现脚本所需的客户端组件和行为。</xref:System.Web.UI.IScriptControl> </xref:System.Web.UI.IExtenderControl>      <a name=&quot;partial_page_rendering&quot;></a># # 由以下因素控制 ASP.NET 页能够支持局部页面呈现的局部页面呈现:-ScriptManager 控件<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性必须为`true`（默认值）。</xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>      -必须有至少一个<xref:System.Web.UI.UpdatePanel>页上的控件。</xref:System.Web.UI.UpdatePanel>      -<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>属性必须为`true`（默认值）。</xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> 如果<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>未显式设置属性，其值基于浏览器功能。</xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>       你可以重写的值<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性在运行时期间或之前已在页面的<xref:System.Web.UI.Control.Init>事件。</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> 如果你尝试在该页面的后更改此属性<xref:System.Web.UI.Control.Init>事件已发生的<xref:System.InvalidOperationException>引发异常。</xref:System.InvalidOperationException> </xref:System.Web.UI.Control.Init>       当支持局部页面呈现时，ScriptManager 控件呈现脚本，以启用异步回发和局部页面更新。 通过使用指定的页后，可以更新区域<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> ScriptManager 控件处理异步回发，并刷新仅的区域的页必须进行更新。 有关在局部页面呈现的详细信息，请参阅[局部页面呈现概述](~/add/includes/ajax-current-ext-md.md)。 有关导致更新的条件的详细信息，请参阅[UpdatePanel 控件概述](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components&quot;></a># # 母版页、 用户控件，与其他子组件 A 页使用 ScriptManager 控件可以包含其层次结构中的只有一个 ScriptManager 控件。 若要注册服务和嵌套的页、 用户控件或组件的脚本，如果父页已 ScriptManager 控件，使用<xref:System.Web.UI.ScriptManagerProxy>控件。</xref:System.Web.UI.ScriptManagerProxy> 有关详细信息，请参阅[UpdatePanel 控件使用母版页](~/add/includes/ajax-current-ext-md.md)<a name=&quot;script_management_and_registration&quot;> </a> # # 脚本管理和注册 ScriptManager 控件使你能够注册脚本，则呈现页面的一部分。       ScriptManager 控件注册方法可以分为以下三个类别:-保证的注册方法上脚本依赖关系[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]维护。      不依赖于的注册方法[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]，但该与兼容<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel>      注册方法，支持使用<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel>       有关如何创建和用于在 ASP.NET Ajax 脚本的详细信息，请参阅[是通过使用 Microsoft Ajax 库中创建自定义客户端脚本](~/add/includes/ajax-current-ext-md.md)。      ### 注册脚本，它是依赖于 Microsoft Ajax 库你可以使用以下方法来注册脚本文件上保证任何依赖关系的方式[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]维护。      |方法 |定义 |  |------------|----------------|  |<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>|注册一个实现的服务器控件<xref:System.Web.UI.IScriptControl>用于定义客户端对象的接口。</xref:System.Web.UI.IScriptControl> </xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> ScriptManager 控件呈现支持客户端对象的脚本。 |  |<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>|注册一个实现的服务器控件<xref:System.Web.UI.IExtenderControl>用于定义客户端对象的接口。</xref:System.Web.UI.IExtenderControl> </xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> ScriptManager 控件呈现支持客户端对象的脚本。 |     # # # 注册局部页面更新兼容脚本你可以使用以下方法来注册脚本文件，不依赖于[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]但与兼容<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> 这些方法对应于的类似方法<xref:System.Web.UI.ClientScriptManager>控件。</xref:System.Web.UI.ClientScriptManager> 如果你是在内部使用的呈现脚本<xref:System.Web.UI.UpdatePanel>控制，请确保你调用的方法的 ScriptManager 控件。</xref:System.Web.UI.UpdatePanel>      |方法 |定义 |  |------------|----------------|  |<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>|将值添加到 JavaScript 数组。</xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> 如果数组不存在，则创建它。 |  |<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>|呈现`script`页打开之后的元素`<form>`标记。</xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> 作为字符串参数指定了脚本。 |  |<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>|呈现`script`页打开之后的元素`<form>`标记。</xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> 通过将设置指定的脚本内容`src`属性设为指向脚本文件的 URL。 |  |<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>|呈现`script`页打开之后的元素`<form>`标记。</xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> 脚本内容指定的程序集中的资源名称。 `src`属性会自动填充的 URL 通过从程序集中检索命名的脚本的 HTTP 处理程序调用。 |  |<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>|呈现中指定的控件的标记的自定义的名称/值特性对 (expando)。 |  |<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>|呈现的隐藏的字段。 |  |<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>|注册一个脚本在响应中执行的脚本`form`元素的`submit`事件。</xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> </xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> </xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> `onSubmit`属性引用指定的脚本。 |  |<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>|呈现一个启动脚本块之前页面的右`</form>`标记。</xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> 要呈现的脚本被指定为字符串参数。 |      当你注册方法时，你指定用于该脚本的类型/密钥对。 如果已注册具有相同的类型/密钥对的脚本，则未注册的新脚本。 同样，如果已注册的脚本的类型/资源名称对存在，`script`引用该资源的元素不会再次添加。 当你注册 expando 属性的一个以前注册的属性时，会引发异常。 允许的数组值重复的注册。       当调用<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>或<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>方法，避免注册执行内联函数的脚本。</xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> </xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> 相反，应注册脚本，其中包含如事件处理程序的函数定义或自定义类定义你的应用程序。      ### 注册方法为 UpdatePanel 控件你可以使用以下方法以自定义部分页面更新，当你使用<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel>      |方法 |定义 |  |------------|----------------|  |<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>|将控件注册为异步回发的触发器。 |  |<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>|局部页面呈现期间将自定义数据发送到控件。 |  |<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>|注册控件中的 dispose 脚本<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.ScriptManager.RegisterDispose%2A> </xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> </xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 执行该脚本时<xref:System.Web.UI.UpdatePanel>更新或删除控件。</xref:System.Web.UI.UpdatePanel> Dispose 方法用于客户端组件属于[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]且必须在不再使用组件时释放资源。 |  |<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>|将控件注册为完整的回发的触发器。</xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> 此方法用于将执行异步回发的<xref:System.Web.UI.UpdatePanel>控件内的控件。 |     <a name=&quot;web_service_references&quot;> </a> # # Web 服务引用你可以注册 Web 服务以从客户端脚本中调用通过创建<xref:System.Web.UI.ServiceReference>对象并将其添加到<xref:System.Web.UI.ScriptManager.Services%2A>ScriptManager 控件的集合。</xref:System.Web.UI.ScriptManager.Services%2A> </xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.UpdatePanel> ASP.NET 生成每个客户端代理对象<xref:System.Web.UI.ServiceReference>对象在<xref:System.Web.UI.ScriptManager.Services%2A>集合。</xref:System.Web.UI.ScriptManager.Services%2A> </xref:System.Web.UI.ServiceReference> 你可以以编程方式添加<xref:System.Web.UI.ServiceReference>对象添加到<xref:System.Web.UI.ScriptManager.Services%2A>集合用于在运行时注册 Web 服务。</xref:System.Web.UI.ScriptManager.Services%2A> </xref:System.Web.UI.ServiceReference>       有关如何访问脚本中的 Web 服务的详细信息，请参阅[公开 Web 服务迁移到 ASP.NET AJAX 中的客户端脚本](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)和[从 ASP.NET AJAX 中的客户端脚本调用 Web 服务](http://msdn.microsoft.com/en-us/fc06c224-f01a-45be-94af-bd71afbc07b0)。      <a name=&quot;localization&quot;></a># # 本地化 ScriptManager 控件在所呈现的页面上，指向相应的本地化的脚本文件是脚本文件嵌入到程序集或独立的脚本文件中，但也中生成引用。       当<xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A>属性设置为`true`，ScriptManager 控件检索本地化的资源 （例如本地化的字符串） 的当前区域性，如果它们存在。</xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> ScriptManager 控件提供使用本地化的资源的以下功能:-**脚本嵌入到程序集中的文件**。 ScriptManager 控件确定要发送到浏览器的区域性特定或回退区域性脚本文件。 通过使用特定于区域性的执行这<xref:System.Resources.NeutralResourcesLanguageAttribute>程序集属性、 与程序集和浏览器的 UI 区域性打包在一起 （如果有） 的资源。</xref:System.Resources.NeutralResourcesLanguageAttribute>      -**独立脚本文件**。 ScriptManager 控件定义的通过使用支持的 UI 区域性列表<xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A>属性<xref:System.Web.UI.ScriptReference>对象。</xref:System.Web.UI.ScriptReference> </xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A>      -**在调试模式下**。 ScriptManager 控件尝试呈现包含调试信息的区域性特定的脚本文件。 例如，如果页处于调试模式下，当前区域性设置为 en MX 控件呈现脚本文件，如具有名称`scriptname`.en MX.debug.js，如果该文件存在。 如果文件不存在，调试文件的适当的回退区域性呈现有关如何本地化资源，请参阅[本地化资源组件库概述](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;error_handling&quot;></a># # 错误处理时异步回发期间出现页面错误<xref:System.Web.UI.ScriptManager.AsyncPostBackError>引发事件。</xref:System.Web.UI.ScriptManager.AsyncPostBackError> 在该服务器上的错误会发送到客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> </xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> 有关详细信息，请参阅[UpdatePanel 控件的自定义错误处理](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;declarative_syntax&quot;></a># # 声明性语法```   <asp:ScriptManager       AllowCustomErrorsRedirect=&quot;True|False&quot;       AsyncPostBackErrorMessage=&quot;string&quot;       AsyncPostBackTimeout=&quot;integer&quot;       AuthenticationService-Path=&quot;uri&quot;       EnablePageMethods=&quot;True|False&quot;       EnablePartialRendering=&quot;True|False&quot;       EnableScriptGlobalization=&quot;True|False&quot;       EnableScriptLocalization=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       LoadScriptsBeforeUI=&quot;True|False&quot;       OnAsyncPostBackError=&quot;AsyncPostBackError event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnResolveScriptReference=&quot;ResolveScriptReference event handler&quot;       OnUnload=&quot;Unload event handler&quot;       ProfileService-LoadProperties=&quot;string&quot;       ProfileService-Path=&quot;uri&quot;       RoleService-LoadRoles=&quot;True|False&quot;       RoleService-Path=&quot;uri&quot;       runat=&quot;server&quot;       ScriptMode=&quot;Auto|Inherit|Debug|Release&quot;       ScriptPath=&quot;string&quot;       SkinID=&quot;string&quot;       SupportsPartialRendering=&quot;True|False&quot;       Visible=&quot;True|False&quot;   >           <AuthenticationService               Path=&quot;uri&quot;           />           <ProfileService               LoadProperties=&quot;string&quot;               Path=&quot;uri&quot;           />           <RoleService               LoadRoles=&quot;True|False&quot;               Path=&quot;uri&quot;           />           <Scripts>               <asp:ScriptReference                   Assembly=&quot;string&quot;                   IgnoreScriptPath=&quot;True|False&quot;                   Name=&quot;string&quot;                   NotifyScriptLoaded=&quot;True|False&quot;                   Path=&quot;string&quot;                   ResourceUICultures=&quot;string&quot;                   ScriptMode=&quot;Auto|Debug|Inherit|Release&quot;               />           </Scripts>           <Services>               <asp:ServiceReference                   InlineScript=&quot;True|False&quot;                   Path=&quot;string&quot;               />           </Services>   </asp:ScriptManager>   ```"
  example:
  - "The following examples show different scenarios for using the ScriptManager control.  \n  \n **Enabling Partial-Page Updates**  \n  \n The following example shows how to use the ScriptManager control to enable partial-page updates. In this example, a <xref:System.Web.UI.WebControls.Calendar> and a <xref:System.Web.UI.WebControls.DropDownList> control are inside an <xref:System.Web.UI.UpdatePanel> control. By default, the value of the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is <xref:System.Web.UI.UpdatePanelUpdateMode>, and the value of the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true`. Therefore, child controls of the panel cause an asynchronous postback.  \n  \n [!code-vb[System.Web.UI.UpdatePanel#1](~/add/codesnippet/visualbasic/t-system.web.ui.scriptma_1.aspx)]\n [!code-cs[System.Web.UI.UpdatePanel#1](~/add/codesnippet/csharp/t-system.web.ui.scriptma_1.aspx)]  \n  \n **Handling Partial-Page Update Errors and Registering Script**  \n  \n The following example shows how to provide custom error handling during partial-page updates. By default, when an error occurs during partial-page updates, a JavaScript message box is displayed. This example demonstrates how to use custom error handling by providing a handler for the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event, and by setting the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property in the event handler. You can also set the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property to specify how the custom errors section of the Web.config file is used when an error occurs during partial-page updates. In this example, the default value of the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property is used. This means that if the Web.config file contains a  element, that element determines how errors are displayed. For more information, see [customErrors Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/288c32e2-df1f-4548-abda-de6b4cb989a6).  \n  \n [!code-vb[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/add/codesnippet/visualbasic/t-system.web.ui.scriptma_2.aspx)]\n [!code-cs[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/add/codesnippet/csharp/t-system.web.ui.scriptma_2.aspx)]  \n  \n **Globalizing the Date and Time That Are Displayed in the Browser**  \n  \n The following example shows how to set the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property so that client script can display a culture-specific date and time in the browser. In the example, the `Culture` attribute of the  directive is set to `auto`. As a result, the first language that is specified in the current browser settings determines the culture and UI culture for the page. For more information, see [How to: Set the Culture and UI Culture for ASP.NET Web Page Globalization](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/add/codesnippet/visualbasic/t-system.web.ui.scriptma_3.aspx)]\n [!code-cs[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/add/codesnippet/csharp/t-system.web.ui.scriptma_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Scripts")]

      [System.ComponentModel.Designer("System.Web.UI.Design.ScriptManagerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.ScriptManager.bmp")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class ScriptManager : System.Web.UI.Control, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.IPostBackDataHandler
  - System.Web.UI.IPostBackEventHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: ScriptManager()
  nameWithType: ScriptManager.ScriptManager()
  fullName: System.Web.UI.ScriptManager.ScriptManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>类。"
  remarks: "此构造函数初始化由使用的内部字段<xref:System.Web.UI.ScriptManager>控件跟踪页、 控制和部署信息。</xref:System.Web.UI.ScriptManager>"
  syntax:
    content: public ScriptManager ();
    parameters: []
  overload: System.Web.UI.ScriptManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)
  id: AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AddHistoryPoint(NameValueCollection,String)
  nameWithType: ScriptManager.AddHistoryPoint(NameValueCollection,String)
  fullName: System.Web.UI.ScriptManager.AddHistoryPoint(NameValueCollection,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "创建历史时间点并将其添加到浏览器的历史记录堆栈中使用指定的状态数据集合和状态标题。"
  remarks: "此方法用于创建历史时间点，如果你想要保存的状态数据的多个键/值对。 在创建历史时间点时，序列化和加密的数据会追加到网页的 URL 和浏览器的历史记录堆栈中包括一个条目。 如果`title`参数是`null`，为历史记录堆栈中的状态条目的标题使用的网页标题。       状态数据可用于引发任何后续服务器导航事件时重新创建该页面。 有关详细信息，请参阅[管理浏览器历史记录中使用服务器控件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void AddHistoryPoint (System.Collections.Specialized.NameValueCollection state, string title);
    parameters:
    - id: state
      type: System.Collections.Specialized.NameValueCollection
      description: "包含状态数据的键/值对的集合。"
    - id: title
      type: System.String
      description: "将为此状态的标题添加到浏览器的历史记录堆栈的文本。"
  overload: System.Web.UI.ScriptManager.AddHistoryPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)
  id: AddHistoryPoint(System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AddHistoryPoint(String,String)
  nameWithType: ScriptManager.AddHistoryPoint(String,String)
  fullName: System.Web.UI.ScriptManager.AddHistoryPoint(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "创建历史时间点并将其添加到浏览器的历史记录堆栈中使用指定的状态键和状态值。"
  remarks: "使用此方法时你只想要保存一个值来标识状态创建历史时间点。 在创建历史时间点时，序列化和加密的数据会追加到网页的 URL 和浏览器的历史记录堆栈中包括一个条目。 网页的标题用作历史记录堆栈中的状态条目的标题。       状态数据可用于引发任何后续服务器导航事件时重新创建该页面。 有关详细信息，请参阅[管理浏览器历史记录中使用服务器控件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void AddHistoryPoint (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "标识网页状态的键/值对的键部分。"
    - id: value
      type: System.String
      description: "标识网页状态的键/值对的值部分。"
  overload: System.Web.UI.ScriptManager.AddHistoryPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)
  id: AddHistoryPoint(System.String,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AddHistoryPoint(String,String,String)
  nameWithType: ScriptManager.AddHistoryPoint(String,String,String)
  fullName: System.Web.UI.ScriptManager.AddHistoryPoint(String,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "创建历史时间点并将其添加到浏览器的历史记录堆栈中使用指定的状态键、 状态值和状态标题。"
  remarks: "使用此方法时要用于保存一个值来标识的状态和状态标题创建历史时间点。 在创建历史时间点时，序列化和加密的数据会追加到网页的 URL 和浏览器的历史记录堆栈中包括一个条目。 如果`title`参数是`null`，为历史记录堆栈中的状态条目的标题使用的网页标题。       状态数据可用于引发任何后续服务器导航事件时重新创建该页面。 有关详细信息，请参阅[管理浏览器历史记录中使用服务器控件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void AddHistoryPoint (string key, string value, string title);
    parameters:
    - id: key
      type: System.String
      description: "标识网页状态的键/值对的键部分。"
    - id: value
      type: System.String
      description: "标识网页状态的键/值对的值部分。"
    - id: title
      type: System.String
      description: "将为此状态的标题添加到浏览器的历史记录堆栈的文本。"
  overload: System.Web.UI.ScriptManager.AddHistoryPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AjaxFrameworkAssembly
  id: AjaxFrameworkAssembly
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AjaxFrameworkAssembly
  nameWithType: ScriptManager.AjaxFrameworkAssembly
  fullName: System.Web.UI.ScriptManager.AjaxFrameworkAssembly
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取页使用的 Ajax framework 程序集组件。"
  syntax:
    content: public virtual System.Reflection.Assembly AjaxFrameworkAssembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "Ajax framework 程序集。"
  overload: System.Web.UI.ScriptManager.AjaxFrameworkAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AjaxFrameworkMode
  id: AjaxFrameworkMode
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AjaxFrameworkMode
  nameWithType: ScriptManager.AjaxFrameworkMode
  fullName: System.Web.UI.ScriptManager.AjaxFrameworkMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，指定如何的客户端脚本[!INCLUDE[ajax_current_ext](~/add/includes/ajax-current-ext-md.md)]客户端库将包括客户端上。"
  remarks: "使用 AjaxFrameworkMode 属性启用所有[!INCLUDE[ajax_current_ext](~/add/includes/ajax-current-ext-md.md)]脚本文件，以禁用所有[!INCLUDE[ajax_current_ext](~/add/includes/ajax-current-ext-md.md)]脚本文件，或若要显式包含各个脚本文件。"
  example:
  - "The following example shows how to set the AjaxFrameworkMode property to `Explicit` in order to indicate that scripts can be explicitly specified.  \n  \n```  \n<asp:ScriptManager ID=\"sm1\" AjaxFrameworkMode=\"Explicit\" runat=\"server\">   \n<Scripts>   \n    <asp:ScriptReference Name=\"MicrosoftAjaxCore.js\" />   \n    <asp:ScriptReference Name=\"MicrosoftAjaxComponentModel.js\" />    \n    <asp:ScriptReference Name=\"MicrosoftAjaxSerialization.js\" />   \n    <asp:ScriptReference Name=\"MicrosoftAjaxNetwork.js\" />       \n</Scripts>   \n</asp:ScriptManager>  \n```"
  syntax:
    content: public System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode { get; set; }
    return:
      type: System.Web.UI.AjaxFrameworkMode
      description: "<xref href=&quot;System.Web.UI.AjaxFrameworkMode&quot;> </xref>枚举值。"
  overload: System.Web.UI.ScriptManager.AjaxFrameworkMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect
  id: AllowCustomErrorsRedirect
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AllowCustomErrorsRedirect
  nameWithType: ScriptManager.AllowCustomErrorsRedirect
  fullName: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，确定异步回发出现错误时是否使用 Web.config 文件的自定义错误部分。"
  remarks: "<xref:System.Web.UI.ScriptManager.AsyncPostBackError>异步回发期间页错误时引发事件。</xref:System.Web.UI.ScriptManager.AsyncPostBackError> 服务器上的错误发送给客户端的方式取决于 AllowCustomErrorsRedirect 属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>"
  syntax:
    content: public bool AllowCustomErrorsRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在 Web.config 文件中设置的自定义错误用于确定异步回发; 期间的错误行为，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AsyncPostBackError
  id: AsyncPostBackError
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AsyncPostBackError
  nameWithType: ScriptManager.AsyncPostBackError
  fullName: System.Web.UI.ScriptManager.AsyncPostBackError
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "当异步回发期间页面错误时发生。"
  remarks: "异步回发期间页错误时引发 AsyncPostBackError 事件。 服务器上的错误发送给客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> </xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>"
  example:
  - "The following example shows how to handle the AsyncPostBackError event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.  \n  \n [!code-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/add/codesnippet/visualbasic/e-system.web.ui.scriptma_1.aspx)]\n [!code-cs[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/add/codesnippet/csharp/e-system.web.ui.scriptma_1.aspx)]"
  syntax:
    content: public event EventHandler<System.Web.UI.AsyncPostBackErrorEventArgs> AsyncPostBackError;
    return:
      type: System.EventHandler{System.Web.UI.AsyncPostBackErrorEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage
  id: AsyncPostBackErrorMessage
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AsyncPostBackErrorMessage
  nameWithType: ScriptManager.AsyncPostBackErrorMessage
  fullName: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置异步回发期间发生未处理的服务器异常时发送到客户端的错误消息。"
  remarks: "<xref:System.Web.UI.ScriptManager.AsyncPostBackError>异步回发期间页错误时引发事件。</xref:System.Web.UI.ScriptManager.AsyncPostBackError> 服务器上的错误发送给客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性、 AsyncPostBackErrorMessage 属性中和 Web.config 文件的自定义错误部分。</xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>"
  example:
  - "The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the AsyncPostBackErrorMessage property (which is sent to the client) to the server exception error message.  \n  \n [!code-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/add/codesnippet/visualbasic/p-system.web.ui.scriptma_1.aspx)]\n [!code-cs[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/add/codesnippet/csharp/p-system.web.ui.scriptma_1.aspx)]"
  syntax:
    content: public string AsyncPostBackErrorMessage { get; set; }
    return:
      type: System.String
      description: "错误消息中。 默认值为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID
  id: AsyncPostBackSourceElementID
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AsyncPostBackSourceElementID
  nameWithType: ScriptManager.AsyncPostBackSourceElementID
  fullName: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取引发异步回发的控件的唯一 ID。"
  remarks: "AsyncPostBackSourceElementID 属性包含的值的控件 ID 的引发异步回发，可以是以下之一:-从内的控件回发<xref:System.Web.UI.UpdatePanel>控制其<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性设置为`true`（默认值）。</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> </xref:System.Web.UI.UpdatePanel>      的为触发器的控件回发<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel>      的从通过调用注册的控件回发<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法<xref:System.Web.UI.ScriptManager>控件。</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>"
  syntax:
    content: public string AsyncPostBackSourceElementID { get; }
    return:
      type: System.String
      description: "控件，如果控件具有 ID; 的唯一 ID否则为空字符串 (&quot;&quot;)。"
  overload: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AsyncPostBackTimeout
  id: AsyncPostBackTimeout
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AsyncPostBackTimeout
  nameWithType: ScriptManager.AsyncPostBackTimeout
  fullName: System.Web.UI.ScriptManager.AsyncPostBackTimeout
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，指示的时间，以秒为单位，异步回发超时前，如果没有收到响应。"
  syntax:
    content: public int AsyncPostBackTimeout { get; set; }
    return:
      type: System.Int32
      description: "一个整数，表示超时，以秒为单位。 默认值为 90 秒。"
  overload: System.Web.UI.ScriptManager.AsyncPostBackTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.AuthenticationService
  id: AuthenticationService
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: AuthenticationService
  nameWithType: ScriptManager.AuthenticationService
  fullName: System.Web.UI.ScriptManager.AuthenticationService
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.AuthenticationServiceManager&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例。"
  remarks: "<xref:System.Web.UI.AuthenticationServiceManager>此属性返回的对象表示向该页面注册的身份验证服务。</xref:System.Web.UI.AuthenticationServiceManager> 可以在中定义的身份验证服务<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>       你可以使用 ASP.NET 身份验证服务，或使用自定义身份验证服务。 你可以在标记中添加自定义的服务，通过包括`AuthenticationService`内的元素`asp:ScriptManager`元素在页面上，如下面的示例中所示。      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <AuthenticationService Path=&quot;MyAuthenticationService.asmx&quot; />   </asp:ScriptManager>   ```你可以以编程方式配置<xref:System.Web.UI.AuthenticationServiceManager>对象。</xref:System.Web.UI.AuthenticationServiceManager> 注册服务<xref:System.Web.UI.ScriptManager>控件在页面的<xref:System.Web.UI.Control.PreRender>生命周期阶段。</xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: public System.Web.UI.AuthenticationServiceManager AuthenticationService { get; }
    return:
      type: System.Web.UI.AuthenticationServiceManager
      description: "<xref href=&quot;System.Web.UI.AuthenticationServiceManager&quot;> </xref>当前对象<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例。"
  overload: System.Web.UI.ScriptManager.AuthenticationService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.ClientNavigateHandler
  id: ClientNavigateHandler
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: ClientNavigateHandler
  nameWithType: ScriptManager.ClientNavigateHandler
  fullName: System.Web.UI.ScriptManager.ClientNavigateHandler
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置处理的方法的名称[Sys.Application.navigate](~/add/includes/ajax-current-ext-md.md)客户端上的事件。"
  syntax:
    content: public string ClientNavigateHandler { get; set; }
    return:
      type: System.String
      description: "处理的方法的名称[Sys.Application.navigate](../Topic/Sys.Application.navigate%20Event.md)客户端上的事件。"
  overload: System.Web.UI.ScriptManager.ClientNavigateHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.CompositeScript
  id: CompositeScript
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: CompositeScript
  nameWithType: ScriptManager.CompositeScript
  fullName: System.Web.UI.ScriptManager.CompositeScript
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取对支持网页的复合脚本的引用。"
  remarks: "有关详细信息，请参阅[组合到一个复合脚本中的客户端脚本](http://msdn.microsoft.com/en-us/d0f608d0-b4c8-4795-990b-ede68c1239b3)。"
  syntax:
    content: public System.Web.UI.CompositeScriptReference CompositeScript { get; }
    return:
      type: System.Web.UI.CompositeScriptReference
      description: "对复合脚本的引用。"
  overload: System.Web.UI.ScriptManager.CompositeScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EmptyPageUrl
  id: EmptyPageUrl
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EmptyPageUrl
  nameWithType: ScriptManager.EmptyPageUrl
  fullName: System.Web.UI.ScriptManager.EmptyPageUrl
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置空白网页的 URL。"
  remarks: "EmptyPageUrl 属性支持 Ajax 浏览器历史记录。"
  syntax:
    content: public virtual string EmptyPageUrl { get; set; }
    return:
      type: System.String
      description: "要在目标网页为空时使用的 URL。"
  overload: System.Web.UI.ScriptManager.EmptyPageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EnableCdn
  id: EnableCdn
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EnableCdn
  nameWithType: ScriptManager.EnableCdn
  fullName: System.Web.UI.ScriptManager.EnableCdn
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "确定当前页是否从 CDN （内容传送网络） 路径加载客户端脚本引用。"
  remarks: "未设置此属性为`true`如果你设置<xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>到`true`已。</xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>"
  syntax:
    content: public bool EnableCdn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果从 CDN 路径，否则为加载客户端脚本引用<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.EnableCdn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EnableCdnFallback
  id: EnableCdnFallback
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EnableCdnFallback
  nameWithType: ScriptManager.EnableCdnFallback
  fullName: System.Web.UI.ScriptManager.EnableCdnFallback
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "启用要加载的事件中 CDN （内容传送网络） 不可用的脚本的本地副本。"
  syntax:
    content: public bool EnableCdnFallback { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了回退 CDN 值;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.EnableCdnFallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EnableHistory
  id: EnableHistory
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EnableHistory
  nameWithType: ScriptManager.EnableHistory
  fullName: System.Web.UI.ScriptManager.EnableHistory
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示网页是否支持历史时间点管理。"
  remarks: "使用 EnableHistory 属性启用 Web 页中的历史记录管理。"
  syntax:
    content: public bool EnableHistory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果网页支持将历史记录点添加到浏览器的历史记录堆栈;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.EnableHistory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EnablePageMethods
  id: EnablePageMethods
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EnablePageMethods
  nameWithType: ScriptManager.EnablePageMethods
  fullName: System.Web.UI.ScriptManager.EnablePageMethods
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否可以从客户端脚本调用 ASP.NET 页中的公共静态页方法。"
  remarks: "你可以将静态页方法添加到 ASP.NET 页，并将其标记作为 Web 方法。 然后就像它们是 Web 服务，但不会创建单独的.asmx 文件的一部分，可以从脚本中调用这些方法。 若要在页面上创建 Web 方法，请导入<xref:System.Web.Services>命名空间并添加<xref:System.Web.Services.WebMethodAttribute>属性设为你想要公开的每个静态方法。</xref:System.Web.Services.WebMethodAttribute> </xref:System.Web.Services> 方法必须标记为公共类。       有关详细信息，请参阅[公开 Web 服务迁移到 ASP.NET AJAX 中的客户端脚本](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)。"
  syntax:
    content: public bool EnablePageMethods { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果作为 Web 方法; 这些方法，可以从客户端脚本调用 ASP.NET 页上的静态页方法否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.EnablePageMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EnablePartialRendering
  id: EnablePartialRendering
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EnablePartialRendering
  nameWithType: ScriptManager.EnablePartialRendering
  fullName: System.Web.UI.ScriptManager.EnablePartialRendering
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，可部分呈现页上，又使你可以通过使用单独更新页面区域内的<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>控件。"
  remarks: "即使 EnablePartialRendering 属性是`true`，可能不会在局部页面呈现。 浏览器可能不支持局部页面呈现，或<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>属性设置为`false`。</xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>       你可以在运行时期间或之前已在页面的替代 EnablePartialRendering 属性的值<xref:System.Web.UI.Control.Init>事件。</xref:System.Web.UI.Control.Init> 如果你尝试在该页面的后更改此属性<xref:System.Web.UI.Control.Init>事件已发生的<xref:System.InvalidOperationException>引发异常。</xref:System.InvalidOperationException> </xref:System.Web.UI.Control.Init>"
  syntax:
    content: public bool EnablePartialRendering { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了部分呈现且禁止了整页更新;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.EnablePartialRendering*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EnablePartialRendering 属性设置后页面的<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件发生。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EnableScriptGlobalization
  id: EnableScriptGlobalization
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EnableScriptGlobalization
  nameWithType: ScriptManager.EnableScriptGlobalization
  fullName: System.Web.UI.ScriptManager.EnableScriptGlobalization
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件呈现支持分析和格式化的区域性特定信息的脚本。"
  remarks: "当 EnableScriptGlobalization 属性设置为`true`，例如该方法的全球化的 ECMAScript (JavaScript) 函数可显示区域性特定信息。 在浏览器中、 在服务器代码中，或在网站的配置文件中，可以设置该区域性。"
  syntax:
    content: public bool EnableScriptGlobalization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以显示区域性特定信息;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.EnableScriptGlobalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EnableScriptLocalization
  id: EnableScriptLocalization
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EnableScriptLocalization
  nameWithType: ScriptManager.EnableScriptLocalization
  fullName: System.Web.UI.ScriptManager.EnableScriptLocalization
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件呈现脚本文件的本地化的版本。"
  remarks: "当 EnableScriptLocalization 属性设置为`true`、<xref:System.Web.UI.ScriptManager>对象将检索当前区域性的脚本文件，如果它们存在。</xref:System.Web.UI.ScriptManager> 例如，页面可能指定名为 CustomScript.js 的脚本文件。 如果为 fr 的 CA，设置该区域性<xref:System.Web.UI.ScriptManager>对象将尝试检索名为 CustomScript.fr CA.js 的脚本文件。</xref:System.Web.UI.ScriptManager>      1> [!NOTE]&1;> 以防止脚本文件呈现两次，EnableScriptLocalization 属性不能修改异步回发期间。"
  syntax:
    content: public bool EnableScriptLocalization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果将呈现本地化的脚本文件;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.EnableScriptLocalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.EnableSecureHistoryState
  id: EnableSecureHistoryState
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: EnableSecureHistoryState
  nameWithType: ScriptManager.EnableSecureHistoryState
  fullName: System.Web.UI.ScriptManager.EnableSecureHistoryState
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否加密历史记录状态字符串。"
  remarks: >-
    > [!WARNING]

    >  This property should ***never*** be set to `false` on a production web site.
  syntax:
    content: public bool EnableSecureHistoryState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果应加密历史记录状态字符串;，否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.EnableSecureHistoryState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)
  id: GetCurrent(System.Web.UI.Page)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetCurrent(Page)
  nameWithType: ScriptManager.GetCurrent(Page)
  fullName: System.Web.UI.ScriptManager.GetCurrent(Page)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例给定<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "使用此静态方法以确定是否可以<xref:System.Web.UI.ScriptManager>控制是在页中，或访问的属性和方法的<xref:System.Web.UI.ScriptManager>控制当你不知道其 id。</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: public static System.Web.UI.ScriptManager GetCurrent (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "要检索的页实例<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>从。"
    return:
      type: System.Web.UI.ScriptManager
      description: "当前<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>为所选实例<xref href=&quot;System.Web.UI.Page&quot;></xref>对象，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未定义实例。"
  overload: System.Web.UI.ScriptManager.GetCurrent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations
  id: GetRegisteredArrayDeclarations
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetRegisteredArrayDeclarations()
  nameWithType: ScriptManager.GetRegisteredArrayDeclarations()
  fullName: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索与前面已注册的 ECMAScript (JavaScript) 数组声明的只读集合<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredArrayDeclaration> GetRegisteredArrayDeclarations ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredArrayDeclaration}
      description: "一个包含数组声明的泛型集合。"
  overload: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks
  id: GetRegisteredClientScriptBlocks
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetRegisteredClientScriptBlocks()
  nameWithType: ScriptManager.GetRegisteredClientScriptBlocks()
  fullName: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索与前面已注册的客户端脚本块的只读集合<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件。"
  remarks: "客户端脚本块中注册的<xref:System.Web.UI.ScriptManager>内的某个控件一起使用的控件<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredScript> GetRegisteredClientScriptBlocks ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredScript}
      description: "一个包含客户端脚本块的泛型集合。"
  overload: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts
  id: GetRegisteredDisposeScripts
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetRegisteredDisposeScripts()
  nameWithType: ScriptManager.GetRegisteredDisposeScripts()
  fullName: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索的只读集合<xref uid=&quot;langword_csharp_dispose&quot; name=&quot;dispose&quot; href=&quot;&quot;></xref>与前面已注册的脚本<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "A`dispose`脚本时执行<xref:System.Web.UI.UpdatePanel>更新或删除控件。</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredDisposeScript> GetRegisteredDisposeScripts ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredDisposeScript}
      description: "包含的泛型集合<xref uid=&quot;langword_csharp_dispose&quot; name=&quot;dispose&quot; href=&quot;&quot;></xref>脚本。"
  overload: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes
  id: GetRegisteredExpandoAttributes
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetRegisteredExpandoAttributes()
  nameWithType: ScriptManager.GetRegisteredExpandoAttributes()
  fullName: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索与前面已注册的自定义 (expando) 特性的只读集合<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "自定义特性是可以读取和设置由客户端脚本的名称/值对。"
  example:
  - "<xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>  \n  \n <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>  \n  \n <xref:System.Web.UI.RegisteredExpandoAttribute>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredExpandoAttribute> GetRegisteredExpandoAttributes ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredExpandoAttribute}
      description: "包含自定义特性的泛型集合。"
  overload: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetRegisteredHiddenFields
  id: GetRegisteredHiddenFields
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetRegisteredHiddenFields()
  nameWithType: ScriptManager.GetRegisteredHiddenFields()
  fullName: System.Web.UI.ScriptManager.GetRegisteredHiddenFields()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索与前面已注册的隐藏字段的只读集合<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredHiddenField> GetRegisteredHiddenFields ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredHiddenField}
      description: "一个包含隐藏的字段的泛型集合。"
  overload: System.Web.UI.ScriptManager.GetRegisteredHiddenFields*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements
  id: GetRegisteredOnSubmitStatements
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetRegisteredOnSubmitStatements()
  nameWithType: ScriptManager.GetRegisteredOnSubmitStatements()
  fullName: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索的只读集合<xref uid=&quot;langword_csharp_onsubmit&quot; name=&quot;onsubmit&quot; href=&quot;&quot;></xref>与前面已注册的语句<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "`onsubmit`语句是在提交表单时执行的 ECMAScript (JavaScript)。"
  example:
  - "<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>  \n  \n <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredScript> GetRegisteredOnSubmitStatements ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredScript}
      description: "包含的泛型集合<xref uid=&quot;langword_csharp_onsubmit&quot; name=&quot;onsubmit&quot; href=&quot;&quot;></xref>语句。"
  overload: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetRegisteredStartupScripts
  id: GetRegisteredStartupScripts
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetRegisteredStartupScripts()
  nameWithType: ScriptManager.GetRegisteredStartupScripts()
  fullName: System.Web.UI.ScriptManager.GetRegisteredStartupScripts()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索与前面已注册的启动脚本的只读集合<xref href=&quot;System.Web.UI.Page&quot;></xref>对象。"
  remarks: "启动脚本是与执行启动控件时控件关联的客户端脚本。"
  example:
  - "<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>  \n  \n <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>  \n  \n GetRegisteredStartupScripts"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredScript> GetRegisteredStartupScripts ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredScript}
      description: "一个包含启动脚本的泛型集合。"
  overload: System.Web.UI.ScriptManager.GetRegisteredStartupScripts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.GetStateString
  id: GetStateString
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: GetStateString()
  nameWithType: ScriptManager.GetStateString()
  fullName: System.Web.UI.ScriptManager.GetStateString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "检索包含表示网页状态的键/值对的字符串。"
  syntax:
    content: public string GetStateString ();
    parameters: []
    return:
      type: System.String
      description: "包含表示网页状态的键/值对的字符串。"
  overload: System.Web.UI.ScriptManager.GetStateString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.IsDebuggingEnabled
  id: IsDebuggingEnabled
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: IsDebuggingEnabled
  nameWithType: ScriptManager.IsDebuggingEnabled
  fullName: System.Web.UI.ScriptManager.IsDebuggingEnabled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否将呈现客户端脚本库的调试版本。"
  remarks: "IsDebuggingEnabled 属性返回`false`满足以下条件之一时:-在配置文件中，元素`retail`属性设置为`true`。 此设置将替代所有其他设置。      -<xref:System.Web.UI.ScriptManager.ScriptMode%2A>属性设置为`Auto`或`Inherit`，和中未启用调试`compilation`的应用程序根 Web.config 文件的部分。</xref:System.Web.UI.ScriptManager.ScriptMode%2A>      -<xref:System.Web.UI.ScriptManager.ScriptMode%2A>属性设置为`Release`。</xref:System.Web.UI.ScriptManager.ScriptMode%2A>          1> [!NOTE]&1;>`debug`指令的特性不会影响支持 Ajax 的 ASP.NET 应用程序。 <xref:System.Web.UI.ScriptManager>控件使用的设置仅在 Web.config 文件中并在其 IsDebuggingEnabled 和<xref:System.Web.UI.ScriptManager.ScriptMode%2A>属性来确定是否呈现调试脚本。</xref:System.Web.UI.ScriptManager.ScriptMode%2A> </xref:System.Web.UI.ScriptManager>       有关详细信息，请参阅[调试和跟踪 Ajax 应用程序概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsDebuggingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在调试模式，则执行当前请求否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.IsDebuggingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.IsInAsyncPostBack
  id: IsInAsyncPostBack
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: IsInAsyncPostBack
  nameWithType: ScriptManager.IsInAsyncPostBack
  fullName: System.Web.UI.ScriptManager.IsInAsyncPostBack
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否要在部分呈现模式下执行当前回发。"
  remarks: "结合使用 IsInAsyncPostBack 属性<xref:System.Web.UI.Page.IsPostBack%2A>属性来区分初始页面加载、 局部页面的更新和中的整页更新<xref:System.Web.UI.Control.Load>， <xref:System.Web.UI.Page.InitComplete>，或<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page.InitComplete> </xref:System.Web.UI.Control.Load> </xref:System.Web.UI.Page.IsPostBack%2A>"
  syntax:
    content: public bool IsInAsyncPostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在部分呈现模式，则执行当前回发否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.IsInAsyncPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.IsNavigating
  id: IsNavigating
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: IsNavigating
  nameWithType: ScriptManager.IsNavigating
  fullName: System.Web.UI.ScriptManager.IsNavigating
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.ScriptManager.Navigate&quot;></xref>当前正在处理事件。"
  remarks: "使用 IsNavigating 属性来确定是否<xref:System.Web.UI.ScriptManager.Navigate>引发事件。</xref:System.Web.UI.ScriptManager.Navigate>"
  syntax:
    content: public bool IsNavigating { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.ScriptManager.Navigate&quot;></xref>正在处理; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.IsNavigating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: LoadPostData(String,NameValueCollection)
  nameWithType: ScriptManager.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.ScriptManager.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "读取从浏览器发送到服务器，并确定异步回发的源的窗体数据。"
  remarks: "LoadPostData 方法主要由控件开发人员用来扩展的功能<xref:System.Web.UI.ScriptManager>控件。</xref:System.Web.UI.ScriptManager>"
  syntax:
    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "控件的密钥标识符。"
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "所有传入的后期数据的集合。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件的状态已因回发; 而更改否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.LoadScriptsBeforeUI
  id: LoadScriptsBeforeUI
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: LoadScriptsBeforeUI
  nameWithType: ScriptManager.LoadScriptsBeforeUI
  fullName: System.Web.UI.ScriptManager.LoadScriptsBeforeUI
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，该值指示是否在之前或之后在加载的页 UI 的标记加载脚本。"
  remarks: "LoadScriptsBeforeUI 属性确定如何在脚本<xref:System.Web.UI.ScriptManager.Scripts%2A>集合加载相对于页 UI 的标记。</xref:System.Web.UI.ScriptManager.Scripts%2A>       当 LoadScriptsBeforeUI 属性是`true`、`script`元素呈现在加载页面的 UI 标记之前。 在此方案中，如果 UI 元素定义在脚本中，UI 将完全正常运行时加载。 但是，如果该脚本访问中为其实例尚未已创建的标记的 UI 元素，可能发生错误。 若要确保访问它们之前，加载了 UI 元素，处理的事件的类。       当 LoadScriptsBeforeUI 属性是`false`、`script`元素后呈现页面的 UI 标记呈现。 在此方案中，UI 加载速度更快，但它可能不是完全正常运行如果定义其他 UI 元素的脚本具有未完成加载。       未设置此属性为`true`如果你设置<xref:System.Web.UI.ScriptManager.EnableCdn%2A>到`true`已。</xref:System.Web.UI.ScriptManager.EnableCdn%2A>"
  syntax:
    content: public bool LoadScriptsBeforeUI { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在加载 UI 标记; 之前加载脚本<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果在加载 UI 标记后加载脚本。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.LoadScriptsBeforeUI*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.Navigate
  id: Navigate
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: Navigate
  nameWithType: ScriptManager.Navigate
  fullName: System.Web.UI.ScriptManager.Navigate
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "当用户单击浏览器的时发生**回**或**转发**按钮。"
  remarks: "当用户单击浏览器的**回**按钮，浏览器将转到以前查看过的 Url，其中包括包含历史时间点状态数据的 Url。 如果网页中的客户端代码检测到该 URL 包含历史记录状态数据，它将发出一个请求到服务器页。 回发事件，将充当和<xref:System.Web.UI.ScriptManagerProxy>服务器控件引发`Navigate`事件。</xref:System.Web.UI.ScriptManagerProxy> 你可以处理此事件，并重新创建与事件使用传递的状态数据的根据需要在 Web 应用程序中的页。"
  syntax:
    content: public event EventHandler<System.Web.UI.HistoryEventArgs> Navigate;
    return:
      type: System.EventHandler{System.Web.UI.HistoryEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)
  id: OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: OnAsyncPostBackError(AsyncPostBackErrorEventArgs)
  nameWithType: ScriptManager.OnAsyncPostBackError(AsyncPostBackErrorEventArgs)
  fullName: System.Web.UI.ScriptManager.OnAsyncPostBackError(AsyncPostBackErrorEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.ScriptManager.AsyncPostBackError&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.ScriptManager.AsyncPostBackError>异步回发期间页错误时引发事件。</xref:System.Web.UI.ScriptManager.AsyncPostBackError> 服务器上的错误发送给客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> </xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>"
  example:
  - "The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.  \n  \n [!code-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/add/codesnippet/visualbasic/b3084245-e566-4363-b817-_1.aspx)]\n [!code-cs[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/add/codesnippet/csharp/b3084245-e566-4363-b817-_1.aspx)]"
  syntax:
    content: protected virtual void OnAsyncPostBackError (System.Web.UI.AsyncPostBackErrorEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.AsyncPostBackErrorEventArgs
      description: "错误事件数据。"
  overload: System.Web.UI.ScriptManager.OnAsyncPostBackError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ScriptManager.OnInit(EventArgs)
  fullName: System.Web.UI.ScriptManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件，并确保确定只有一个<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>页上存在的控件。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "事件数据。"
  overload: System.Web.UI.ScriptManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "多个实例<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>页上存在。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: ScriptManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.ScriptManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref>事件，并注册的脚本文件和服务的部分页面更新。"
  remarks: "有关 DOM 的信息，请参阅[文档对象模型 (DOM) 级别 1 规范](http://go.microsoft.com/fwlink/?LinkId=73305)World Wide Web Consortium (W3C) 网站上。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "事件数据。"
  overload: System.Web.UI.ScriptManager.OnPreRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "请求局部页面的浏览器不支持至少 DOM 级别 1.0。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)
  id: OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)
  nameWithType: ScriptManager.OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)
  fullName: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.ScriptManager.ResolveCompositeScriptReference&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnResolveCompositeScriptReference (System.Web.UI.CompositeScriptReferenceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.CompositeScriptReferenceEventArgs
      description: "一个表示复合脚本引用的对象。"
  overload: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)
  id: OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: OnResolveScriptReference(ScriptReferenceEventArgs)
  nameWithType: ScriptManager.OnResolveScriptReference(ScriptReferenceEventArgs)
  fullName: System.Web.UI.ScriptManager.OnResolveScriptReference(ScriptReferenceEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发<xref href=&quot;System.Web.UI.ScriptManager.ResolveScriptReference&quot;></xref>事件管理的每个脚本引用<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件。"
  remarks: "调用此方法<xref:System.Web.UI.ScriptManager.OnPreRender%2A>事件处理程序，每次为一个<xref:System.Web.UI.ScriptReference>中<xref:System.Web.UI.ScriptManager.Scripts%2A>集合。</xref:System.Web.UI.ScriptManager.Scripts%2A> </xref:System.Web.UI.ScriptReference> </xref:System.Web.UI.ScriptManager.OnPreRender%2A>       <xref:System.Web.UI.ScriptManager.ResolveScriptReference>重复脚本条目已得到解决后，将引发事件。</xref:System.Web.UI.ScriptManager.ResolveScriptReference>       重写此方法以影响单个脚本块在回发时或在局部页面更新的行为。"
  syntax:
    content: protected virtual void OnResolveScriptReference (System.Web.UI.ScriptReferenceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.ScriptReferenceEventArgs
      description: "一个表示当前脚本的对象。"
  overload: System.Web.UI.ScriptManager.OnResolveScriptReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.ProfileService
  id: ProfileService
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: ProfileService
  nameWithType: ScriptManager.ProfileService
  fullName: System.Web.UI.ScriptManager.ProfileService
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.ProfileServiceManager&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例。"
  remarks: "<xref:System.Web.UI.ProfileServiceManager>此属性返回的对象表示向该页面注册配置文件服务。</xref:System.Web.UI.ProfileServiceManager> 可以在中定义配置文件服务<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>       你可以使用 ASP.NET 配置文件服务，或使用自定义配置文件服务。 你可以在标记中添加自定义的服务，通过包括`ProfileService`内的元素`asp:ScriptManager`元素在页面上，如下面的示例中所示。      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <ProfileService LoadProperties=&quot;propertyA,propertyB&quot;       Path=&quot;MyProfileService.asmx&quot; />   </asp:ScriptManager>   ```你可以以编程方式配置<xref:System.Web.UI.ProfileServiceManager>对象。</xref:System.Web.UI.ProfileServiceManager> 注册服务<xref:System.Web.UI.ScriptManager>控件在页面的<xref:System.Web.UI.Control.PreRender>生命周期阶段。</xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: public System.Web.UI.ProfileServiceManager ProfileService { get; }
    return:
      type: System.Web.UI.ProfileServiceManager
      description: "<xref href=&quot;System.Web.UI.ProfileServiceManager&quot;> </xref>当前对象<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例。"
  overload: System.Web.UI.ScriptManager.ProfileService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: ScriptManager.RaisePostBackEvent(String)
  fullName: System.Web.UI.ScriptManager.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "处理引发的回发事件<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控制并加载网页的历史记录状态。"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "表示网页的历史记录状态的键/值对的字符串。"
  overload: System.Web.UI.ScriptManager.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RaisePostDataChangedEvent
  id: RaisePostDataChangedEvent
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RaisePostDataChangedEvent()
  nameWithType: ScriptManager.RaisePostDataChangedEvent()
  fullName: System.Web.UI.ScriptManager.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "引发事件<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控制当回发到服务器。"
  remarks: "RaisePostDataChangedEvent 方法主要由控件开发人员用来扩展的功能<xref:System.Web.UI.ScriptManager>控件。</xref:System.Web.UI.ScriptManager> 默认实现为<xref:System.Web.UI.ScriptManager>控件，会引发任何事件。</xref:System.Web.UI.ScriptManager>"
  syntax:
    content: protected virtual void RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.ScriptManager.RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)
  id: RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterArrayDeclaration(Control,String,String)
  nameWithType: ScriptManager.RegisterArrayDeclaration(Control,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterArrayDeclaration(Control,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册一个 ECMAScript (JavaScript) 数组声明以与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>内的某个控件一起使用的控件<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>控件，然后将此数组添加到页面。"
  remarks: "You use the RegisterArrayDeclaration method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the array when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register an array every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \n  \n The RegisterArrayDeclaration method determines whether an array with the name that is specified in the `arrayName` parameter is already registered. If so, the method adds the values specified in `arrayValue`. Because the array to be registered is based on the <xref:System.Collections.ArrayList> class, duplicates are allowed. If a registered array with the name in `arrayName` does not exist, the array is created and the values in `arrayValue` are added to it.  \n  \n To include string literals in the array, use single quotation marks (') or escaped double quotation marks (\\\\\") in `arrayValue`.  \n  \n Note that JavaScript treats a comma (,) as a delimiter in an array. You can specify multiple array values by passing a comma-delimited string in `arrayValue`. Separating two items with a comma in `arrayValue` is equivalent to calling the RegisterArrayDeclaration method two times, one time for each item."
  syntax:
    content: public static void RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册该数组中的控件。"
    - id: arrayName
      type: System.String
      description: "要注册的数组的名称。"
    - id: arrayValue
      type: System.String
      description: "数组或多个值进行注册。"
  overload: System.Web.UI.ScriptManager.RegisterArrayDeclaration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>arrayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)
  id: RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterArrayDeclaration(Page,String,String)
  nameWithType: ScriptManager.RegisterArrayDeclaration(Page,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterArrayDeclaration(Page,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册一个 ECMAScript (JavaScript) 数组声明以与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>内的某个控件一起使用的控件<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>控件，然后将此数组添加到页面。"
  remarks: "你使用 RegisterArrayDeclaration 方法注册的客户端脚本数组与局部页面呈现兼容并没有[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]依赖关系。 此方法在每次发生异步回发注册数组。 若要注册的控件，位于数组<xref:System.Web.UI.UpdatePanel>控制，以便仅在更新面板时，才注册该数组，请使用<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> </xref:System.Web.UI.UpdatePanel>       如果你想要注册与局部页面更新无关的数组，并想要注册一次只能在初始页面呈现期间的数组，请使用<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public static void RegisterArrayDeclaration (System.Web.UI.Page page, string arrayName, string arrayValue);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "正在注册该数组的页对象。"
    - id: arrayName
      type: System.String
      description: "要注册的数组的名称。"
    - id: arrayValue
      type: System.String
      description: "数组或多个值进行注册。"
  overload: System.Web.UI.ScriptManager.RegisterArrayDeclaration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>arrayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)
  id: RegisterAsyncPostBackControl(System.Web.UI.Control)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterAsyncPostBackControl(Control)
  nameWithType: ScriptManager.RegisterAsyncPostBackControl(Control)
  fullName: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "将控件注册为异步回发的触发器。"
  remarks: "RegisterAsyncPostBackControl 方法，可将 Web 服务器控件注册为触发器，以便他们执行异步回发而不是同步回发。 当<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性<xref:System.Web.UI.UpdatePanel>控件设置为`true`（这是默认值），回发控件内的<xref:System.Web.UI.UpdatePanel>控件将自动注册为异步回发的控件。</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>       使用 RegisterAsyncPostBackControl 方法以注册外部的控件<xref:System.Web.UI.UpdatePanel>为触发器为异步回发，并可能会更新面板的内容的控件。</xref:System.Web.UI.UpdatePanel> 若要更新<xref:System.Web.UI.UpdatePanel>以编程方式控制，请调用<xref:System.Web.UI.UpdatePanel.Update%2A>方法。</xref:System.Web.UI.UpdatePanel.Update%2A> </xref:System.Web.UI.UpdatePanel>       你可以通过将添加触发器以声明方式`Triggers`元素<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> 在[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]，使用设计器的**UpdatePanelTrigger 集合编辑器**对话框。"
  example:
  - "The following example shows how to call the RegisterAsyncPostBackControl method to register a <xref:System.Web.UI.WebControls.Button> control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content. The <xref:System.Web.UI.WebControls.Button> control is not inside the <xref:System.Web.UI.UpdatePanel> control. Two buttons are shown: `Button1` and `Button2`. `Button1` refreshes the content of the panel, and `Button2` refreshes the whole page.  \n  \n [!code-cs[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/add/codesnippet/csharp/52cf52da-aed7-4683-b734-_1.aspx)]\n [!code-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/add/codesnippet/visualbasic/52cf52da-aed7-4683-b734-_1.aspx)]  \n  \n The following example shows how to call the RegisterAsyncPostBackControl method to register a user control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content. The first example shows a page using the user control. The second example shows the user control.  \n  \n [!code-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/add/codesnippet/visualbasic/52cf52da-aed7-4683-b734-_2.aspx)]\n [!code-cs[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/add/codesnippet/csharp/52cf52da-aed7-4683-b734-_2.aspx)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void RegisterAsyncPostBackControl (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要注册为异步回发的控件。"
  overload: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "已注册的控件不实现<xref href=&quot;System.Web.UI.INamingContainer&quot;> </xref>， <xref href=&quot;System.Web.UI.IPostBackDataHandler&quot;> </xref>，或<xref href=&quot;System.Web.UI.IPostBackEventHandler&quot;></xref>接口。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)
  id: RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Control,Type,String,String,Boolean)
  nameWithType: ScriptManager.RegisterClientScriptBlock(Control,Type,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptBlock(Control,Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册客户端脚本块以与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>内的某个控件一起使用的控件<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>控制，然后将脚本块添加到页。"
  remarks: "你使用 RegisterClientScriptBlock 方法注册客户端脚本块与局部页面呈现兼容并没有[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]依赖关系。 使用此方法注册的客户端脚本块被发送到页仅当`control`表示控件内<xref:System.Web.UI.UpdatePanel>正在更新的控件。</xref:System.Web.UI.UpdatePanel> 若要注册的脚本块每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>       如果你想要注册与局部页面更新无关的脚本块，并想要注册的脚本块在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>       如果`addScriptTags`是`true`，RegisterClientScriptBlock 方法将添加`<script>`脚本块的标记。 传递`false`如果你想要创建`<script>`标记你自己，如你想要设置特定的特性`<script>`标记。 如果`addScriptTags`是`false`和`script`参数包含多个脚本块，则会引发异常。       RegisterClientScriptBlock 方法在打开后将脚本块添加到页面`<form>`标记。 不保证的脚本块都是与它们注册的顺序相同的输出。 如果脚本块的顺序很重要，则应将脚本块连接到单个字符串 (例如，通过使用<xref:System.Text.StringBuilder>对象)，然后将它们注册为单个客户端脚本块。</xref:System.Text.StringBuilder>"
  example:
  - "[!code-cs[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/e9c100e2-0b39-467f-a078-_1.aspx)]\n [!code-vb[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/e9c100e2-0b39-467f-a078-_1.aspx)]  \n  \n [!code-xml[System.Web.UI.ScriptManager.RegisterClientScriptBlock#2](~/add/codesnippet/xml/e9c100e2-0b39-467f-a078-_2.xml)]"
  syntax:
    content: public static void RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册客户端脚本块中的控件。"
    - id: type
      type: System.Type
      description: "客户端脚本块的类型。 指定此参数是通常使用<xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref>运算符 (C#) 或<xref uid=&quot;langword_csharp_GetType&quot; name=&quot;GetType&quot; href=&quot;&quot;></xref>运算符 (Visual Basic) 来检索正在注册脚本的控件类型。"
    - id: key
      type: System.String
      description: "脚本块唯一标识符。"
    - id: script
      type: System.String
      description: "该脚本。"
    - id: addScriptTags
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>括起脚本块<xref uid=&quot;langword_csharp_&lt;script&gt;&quot; name=&quot;&lt;script&gt;&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_&lt;/script&gt;&quot; name=&quot;&lt;/script&gt;&quot; href=&quot;&quot;></xref>标记; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.RegisterClientScriptBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client script block <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The control that is registering the script block is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "正在注册脚本块的控件不在该页面的控制树中。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)
  id: RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Page,Type,String,String,Boolean)
  nameWithType: ScriptManager.RegisterClientScriptBlock(Page,Type,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptBlock(Page,Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册客户端脚本块以与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>内的某个控件一起使用的控件<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>控制，然后将脚本块添加到页。"
  remarks: "当你使用此方法注册一个脚本块时，每次异步回发发生时，被呈现该脚本。 若要注册脚本块内的控件<xref:System.Web.UI.UpdatePanel>控制，以便脚本已注册时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>       如果你想要注册与局部页面更新无关的脚本块，并想要注册的脚本块在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public static void RegisterClientScriptBlock (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "正在注册客户端脚本块的页对象。"
    - id: type
      type: System.Type
      description: "客户端脚本块的类型。 指定此参数是通常使用<xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref>运算符 (C#) 或<xref uid=&quot;langword_csharp_GetType&quot; name=&quot;GetType&quot; href=&quot;&quot;></xref>运算符 (Visual Basic) 来检索正在注册脚本的控件类型。"
    - id: key
      type: System.String
      description: "脚本块唯一标识符。"
    - id: script
      type: System.String
      description: "要注册的脚本。"
    - id: addScriptTags
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>括起脚本块<xref uid=&quot;langword_csharp_&lt;script&gt;&quot; name=&quot;&lt;script&gt;&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_&lt;/script&gt;&quot; name=&quot;&lt;/script&gt;&quot; href=&quot;&quot;></xref>标记; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.RegisterClientScriptBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The script block <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The page that is registering the script block is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)
  id: RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(Control,Type,String,String)
  nameWithType: ScriptManager.RegisterClientScriptInclude(Control,Type,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptInclude(Control,Type,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册一个客户端脚本文件与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>内的某个控件一起使用的控件<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>控件，，然后添加到页面的脚本文件引用。"
  remarks: "RegisterClientScriptInclude 方法用于在部分页面更新注册页或属于正在参与的页面的客户端脚本文件。 使用此方法注册的客户端脚本文件发送到页面时，才`control`表示控件内<xref:System.Web.UI.UpdatePanel>正在更新的控件。</xref:System.Web.UI.UpdatePanel> 若要注册的脚本文件每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29>       如果你想要注册与局部页面更新无关的脚本块，并想要注册的脚本块在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>       RegisterClientScriptInclude 方法注册页上的客户端脚本文件呈现`script`其开始标记中包含的元素`src`属性。 `url`参数用于设置`src`属性。 若要解决 Url，请使用<xref:System.Web.UI.Control.ResolveClientUrl%2A>方法。</xref:System.Web.UI.Control.ResolveClientUrl%2A> 此方法使用被调用的以解析路径的 URL 的上下文。       这两个 RegisterClientScriptInclude 和<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>方法呈现到浏览器的脚本文件。</xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> 如果已呈现具有相同类型和密钥 （对于脚本文件） 或相同类型和资源名称 （对于嵌入的资源） 的脚本，则不会再次呈现脚本。"
  example:
  - "[!code-cs[System.Web.UI.ScriptManager.RegisterClientScriptInclude#1](~/add/codesnippet/csharp/515cb652-1f4e-4c80-af8e-_1.aspx)]  \n  \n [!code-javascript[System.Web.UI.ScriptManager.RegisterClientScriptInclude#2](~/add/codesnippet/javascript/515cb652-1f4e-4c80-af8e-_2.js)]"
  syntax:
    content: public static void RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册客户端脚本文件的控件。"
    - id: type
      type: System.Type
      description: "客户端脚本文件的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来检索控件类型，正在注册脚本指定此参数。"
    - id: key
      type: System.String
      description: "脚本文件的唯一标识符。"
    - id: url
      type: System.String
      description: "脚本文件的 URL。"
  overload: System.Web.UI.ScriptManager.RegisterClientScriptInclude*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client script file <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The control that is registering the script file is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The control that is registering the script file is not in the page's control tree.  \n  \n \\- or -  \n  \n <code>url</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>url</code> is empty."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)
  id: RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(Page,Type,String,String)
  nameWithType: ScriptManager.RegisterClientScriptInclude(Page,Type,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptInclude(Page,Type,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册客户端脚本与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控制每次异步回发发生时，，，然后将添加到页面的脚本文件引用。"
  remarks: "使用此方法注册的脚本文件时，被呈现该脚本每次发生异步回发。 要注册脚本文件的控件，位于<xref:System.Web.UI.UpdatePanel>控制，以便脚本已注册时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>       如果你想要注册与局部页面更新无关的脚本块，并想要注册的脚本块在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public static void RegisterClientScriptInclude (System.Web.UI.Page page, Type type, string key, string url);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "正在注册客户端脚本文件的页对象。"
    - id: type
      type: System.Type
      description: "客户端脚本文件的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来检索控件类型，正在注册脚本指定此参数。"
    - id: key
      type: System.String
      description: "脚本文件的唯一标识符。"
    - id: url
      type: System.String
      description: "脚本文件的 URL。"
  overload: System.Web.UI.ScriptManager.RegisterClientScriptInclude*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client script file <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The page that is registering the script file is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>url</code> is empty."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)
  id: RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterClientScriptResource(Control,Type,String)
  nameWithType: ScriptManager.RegisterClientScriptResource(Control,Type,String)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptResource(Control,Type,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册嵌入程序集中的客户端脚本<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>和正在参与局部页面呈现的控件一起使用的控件。"
  remarks: "使用 RegisterClientScriptResource 方法以注册的脚本与局部页面呈现兼容并没有[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]依赖关系。 注册使用此方法注册的脚本资源时，才`control`表示控件内<xref:System.Web.UI.UpdatePanel>更新的控件。</xref:System.Web.UI.UpdatePanel> 若要注册的脚本每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>       如果你想要注册与局部页面更新无关的脚本块，并想要注册的脚本块在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>       当从程序集的资源访问的 HTTP 处理程序通过使用 RegisterClientScriptResource 方法。 此方法包含的内容中的资源 URL`script`元素。       同时<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>和 RegisterClientScriptResource 方法加载到浏览器的脚本文件。</xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> 如果已加载具有相同类型和密钥 （对于脚本文件） 或相同类型和资源名称 （对于嵌入的资源） 的脚本，脚本不会重新加载。"
  syntax:
    content: public static void RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册脚本控件。"
    - id: type
      type: System.Type
      description: "客户端脚本的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来检索控件类型，正在注册脚本指定此参数。"
    - id: resourceName
      type: System.String
      description: "资源标识符。"
  overload: System.Web.UI.ScriptManager.RegisterClientScriptResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client resource <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The control that is registering the script is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "正在注册脚本的控件不在该页面的控制树中。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)
  id: RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterClientScriptResource(Page,Type,String)
  nameWithType: ScriptManager.RegisterClientScriptResource(Page,Type,String)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptResource(Page,Type,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册一个程序集中嵌入的客户端脚本文件<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控制每次发生回发。"
  remarks: "使用此方法注册的脚本文件时，被呈现该脚本每次发生异步回发。 以注册的脚本的控件，位于<xref:System.Web.UI.UpdatePanel>控制，以便注册了脚本时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>       如果你想要注册与局部页面更新无关的脚本块，并想要注册的脚本块在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public static void RegisterClientScriptResource (System.Web.UI.Page page, Type type, string resourceName);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "正在注册脚本的页对象。"
    - id: type
      type: System.Type
      description: "客户端脚本的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来检索控件类型，正在注册脚本指定此参数。"
    - id: resourceName
      type: System.String
      description: "资源标识符。"
  overload: System.Web.UI.ScriptManager.RegisterClientScriptResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client resource <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The page that is registering the script is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)
  id: RegisterDataItem(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterDataItem(Control,String)
  nameWithType: ScriptManager.RegisterDataItem(Control,String)
  fullName: System.Web.UI.ScriptManager.RegisterDataItem(Control,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "局部页面呈现期间将自定义数据发送到控件。"
  remarks: "RegisterDataItem 方法用于数据从服务器中发送到客户端异步回发，而不考虑是否接收数据的控件位于期间<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel>       可以仅在异步回发期间调用 RegisterDataItem 方法。 若要确定是否异步回发，请使用<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>属性。</xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> 此方法调用采用名为的参数的重载`isJsonSerialized`设置为`false`。 当`isJsonSerialized`参数设置为`false`，该字符串未序列化 JavaScript 对象表示法 (JSON)。 有关 JSON 格式的详细信息，请参阅[JSON 简介](http://go.microsoft.com/fwlink/?LinkId=77297)Web 站点。       可以在过程的客户端脚本中访问使用 RegisterDataItem 方法注册的数据项、 和的对象的事件。 在处理这些事件时，事件参数对象将传入的自定义数据。 例如，如果为事件提供一个处理程序，在类中，公开一个属性传递的自定义数据。"
  example:
  - "The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback. The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control.  \n  \n> [!NOTE]\n>  The data that is sent in this example is for illustration only. In a real-world application, you would use the RegisterDataItem method to send custom data from the server.  \n  \n [!code-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/add/codesnippet/visualbasic/f9a1f6cf-1974-484c-9f62-_1.aspx)]\n [!code-cs[System.Web.UI.ScriptManager.RegisterDataItem#1](~/add/codesnippet/csharp/f9a1f6cf-1974-484c-9f62-_1.aspx)]"
  syntax:
    content: public void RegisterDataItem (System.Web.UI.Control control, string dataItem);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在接收数据的控件。"
    - id: dataItem
      type: System.String
      description: "向控件发送的数据。"
  overload: System.Web.UI.ScriptManager.RegisterDataItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.ScriptManager.RegisterDataItem*>回发期间调用方法。</xref:System.Web.UI.ScriptManager.RegisterDataItem*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dataItem</code>已为注册<code>control</code>。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)
  id: RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterDataItem(Control,String,Boolean)
  nameWithType: ScriptManager.RegisterDataItem(Control,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterDataItem(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "在局部页面呈现期间将自定义数据发送到控件，并指示数据是否为 JavaScript 对象表示法 (JSON) 格式。"
  remarks: "你使用<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>方法将数据发送从服务器到客户端异步回发，而不考虑是否接收数据的控件位于期间<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>       如果`dataItem`你注册的参数`control`未序列化为 JSON，设置`isJsonSerialized`参数`false`。 这样就避免了需要为每个字符串发送到客户端使用该函数。 有关 JSON 格式的详细信息，请参阅[JSON 简介](http://go.microsoft.com/fwlink/?LinkId=77297)Web 站点。       可以仅在异步回发期间调用 RegisterDataItem 方法。 若要确定是否异步回发，请使用<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>属性。</xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>       通过使用已注册的数据项<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>方法可以访问客户端脚本，在过程中、 和的对象的事件。</xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> 在处理这些事件时，事件参数对象将传入的自定义数据。 例如，如果为事件提供一个处理程序，在类中，公开一个属性传递的自定义数据。"
  example:
  - "The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback. The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control. This example shows the overload that does not take the `isJsonSerialized` parameter. Otherwise, the procedure for retrieving the  property of the  object is the same as if you did not use that overload.  \n  \n> [!NOTE]\n>  The data that is sent in this example is for illustration only. In a real-world application, you would use the RegisterDataItem method to send custom data from the server. For example, you could use the data item to send information about whether to hide or show client elements that are not inside an <xref:System.Web.UI.UpdatePanel> control.  \n  \n [!code-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/add/codesnippet/visualbasic/f58deeed-5242-449c-b3ca-_1.aspx)]\n [!code-cs[System.Web.UI.ScriptManager.RegisterDataItem#1](~/add/codesnippet/csharp/f58deeed-5242-449c-b3ca-_1.aspx)]"
  syntax:
    content: public void RegisterDataItem (System.Web.UI.Control control, string dataItem, bool isJsonSerialized);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在接收数据页控件。"
    - id: dataItem
      type: System.String
      description: "向控件发送的数据。"
    - id: isJsonSerialized
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指示`dataItem`序列化为 JSON; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.RegisterDataItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "回发期间调用 RegisterDataItem 方法。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dataItem</code>已为注册<code>control</code>。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)
  id: RegisterDispose(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterDispose(Control,String)
  nameWithType: ScriptManager.RegisterDispose(Control,String)
  fullName: System.Web.UI.ScriptManager.RegisterDispose(Control,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册<xref uid=&quot;langword_csharp_dispose&quot; name=&quot;dispose&quot; href=&quot;&quot;></xref>脚本的控件，位于<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>控件。 执行该脚本时<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>更新或删除控件。"
  remarks: "使用 RegisterDispose 方法以注册`dispose`控件内的脚本<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> 在异步回发，<xref:System.Web.UI.UpdatePanel>控件可以更新、 删除，或者创建。</xref:System.Web.UI.UpdatePanel> 当更新或删除任何面板`dispose`内的控件注册的脚本<xref:System.Web.UI.UpdatePanel>称为。</xref:System.Web.UI.UpdatePanel> 在典型的页面开发方案中，无需调用 RegisterDispose 方法。       RegisterDispose 方法旨在用于由控件开发人员，以注册脚本，或者创建继承的控件<xref:System.Web.UI.IScriptControl>接口。</xref:System.Web.UI.IScriptControl> 例如，你可能使用`dispose`脚本。 如果你通过使用合成开发的客户端控件。 在您的控件，你实现<xref:System.Web.UI.IScriptControl>和呈现单独的控件。</xref:System.Web.UI.IScriptControl> 你注册`dispose`任何的方法项都不对应于定义的客户端组件如`Sys.TextBox`。 如果你自定义控件撰写对应于客户端组件中的元素[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]，则不需要注册`dispose`脚本，因为`dispose`自动调用。 因此，使用客户端组件属于 RegisterDispose 方法[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]且必须在不再使用组件时释放资源。       RegisterDispose 方法可以多次调用控件。 聚合多个脚本。 释放脚本的顺序匹配脚本已注册的顺序。       如果你注册`dispose`脚本的控件，将不在<xref:System.Web.UI.UpdatePanel>控件，将引发异常。</xref:System.Web.UI.UpdatePanel> `dispose`脚本调用之间的类和事件。"
  syntax:
    content: public void RegisterDispose (System.Web.UI.Control control, string disposeScript);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "控件的<xref uid=&quot;langword_csharp_dispose&quot; name=&quot;dispose&quot; href=&quot;&quot;></xref>脚本适用于。"
    - id: disposeScript
      type: System.String
      description: "<xref uid=&quot;langword_csharp_dispose&quot; name=&quot;dispose&quot; href=&quot;&quot;> </xref>脚本。"
  overload: System.Web.UI.ScriptManager.RegisterDispose*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>disposeScript</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>control</code> is not found on the page.  \n  \n \\- or -  \n  \n <code>control</code> is not inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  id: RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(Control,String,String,String,Boolean)
  nameWithType: ScriptManager.RegisterExpandoAttribute(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterExpandoAttribute(Control,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "将名称/值对注册<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>指定的控件的自定义 (expando) 特性的控件。"
  remarks: "你使用 RegisterExpandoAttribute 方法注册与局部页面呈现兼容并包含任何控件的自定义 (expando) 属性[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]依赖关系。       RegisterExpandoAttribute 方法注册为指定的控件的自定义特性的名称/值对。 属性是动态设置从 ECMAScript (JavaScript) 保持与呈现的控件的标记 XHTML 兼容性。 设置`encode`到`true`如果你有动态属性的值中的任何字符进行转义。       如果未找到动态属性将添加到控件，出现脚本错误。"
  syntax:
    content: public static void RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册 expando 特性的控件。"
    - id: controlId
      type: System.String
      description: "包含自定义属性页上的控件。"
    - id: attributeName
      type: System.String
      description: "要注册的自定义属性的名称。"
    - id: attributeValue
      type: System.String
      description: "自定义特性的值。"
    - id: encode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要编码正在注册的自定义属性否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.RegisterExpandoAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>control</code> is not in the page's control tree.  \n  \n \\- or -  \n  \n <code>controlId</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>controlId</code> is empty.  \n  \n \\- or -  \n  \n <code>attributeName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>attributeName</code> is empty.  \n  \n \\- or -  \n  \n <code>attributeName</code> is already registered."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)
  id: RegisterExtenderControl``1(``0,System.Web.UI.Control)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterExtenderControl(TExtenderControl,Control)
  nameWithType: ScriptManager.RegisterExtenderControl(TExtenderControl,Control)
  fullName: System.Web.UI.ScriptManager.RegisterExtenderControl(TExtenderControl,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  syntax:
    content: 'public void RegisterExtenderControl<TExtenderControl> (TExtenderControl extenderControl, System.Web.UI.Control targetControl) where TExtenderControl : System.Web.UI.Control, System.Web.UI.IExtenderControl;'
    parameters:
    - id: extenderControl
      type: TExtenderControl
      description: "要添加。"
    - id: targetControl
      type: System.Web.UI.Control
      description: "要添加。"
  overload: System.Web.UI.ScriptManager.RegisterExtenderControl<TExtenderControl>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)
  id: RegisterHiddenField(System.Web.UI.Control,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterHiddenField(Control,String,String)
  nameWithType: ScriptManager.RegisterHiddenField(Control,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterHiddenField(Control,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册隐藏的字段与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件的控件，位于<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>控件。"
  remarks: "你使用 RegisterHiddenField 方法注册隐藏的字段与局部页面呈现兼容并没有[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]依赖关系。 此方法注册隐藏的字段，当正在注册字段控件<xref:System.Web.UI.UpdatePanel>正在更新的控件。</xref:System.Web.UI.UpdatePanel> 若要注册隐藏的字段每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29>       如果你想要注册与局部页面更新无关的隐藏的字段，并想要注册的隐藏的字段在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>       RegisterHiddenField 方法创建一个隐藏`input`上呈现的 HTML 页面的元素。"
  syntax:
    content: public static void RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册隐藏的字段的控件。"
    - id: hiddenFieldName
      type: System.String
      description: "要注册的隐藏字段的名称。"
    - id: hiddenFieldInitialValue
      type: System.String
      description: "隐藏字段的初始值。"
  overload: System.Web.UI.ScriptManager.RegisterHiddenField*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>hiddenFieldName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>control</code>不在该页面的控制树中。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)
  id: RegisterHiddenField(System.Web.UI.Page,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterHiddenField(Page,String,String)
  nameWithType: ScriptManager.RegisterHiddenField(Page,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterHiddenField(Page,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册隐藏的字段与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>在每次异步回发期间的控件。"
  remarks: "你使用 RegisterHiddenField 方法注册隐藏的字段与局部页面呈现兼容并没有[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]依赖关系。 此方法在每次发生异步回发注册隐藏的字段。 若要注册隐藏的字段的控件，位于<xref:System.Web.UI.UpdatePanel>控制，以便仅在更新面板时，才注册该字段，请使用<xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> </xref:System.Web.UI.UpdatePanel>       如果你想要注册与局部页面更新无关的隐藏的字段，并想要注册的隐藏的字段在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public static void RegisterHiddenField (System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "正在注册隐藏的字段的页对象。"
    - id: hiddenFieldName
      type: System.String
      description: "要注册的隐藏字段的名称。"
    - id: hiddenFieldInitialValue
      type: System.String
      description: "隐藏字段的初始值。"
  overload: System.Web.UI.ScriptManager.RegisterHiddenField*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>hiddenFieldName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)
  id: RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterNamedClientScriptResource(Control,String)
  nameWithType: ScriptManager.RegisterNamedClientScriptResource(Control,String)
  fullName: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(Control,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "通过在程序集中嵌入的资源名称注册客户端脚本<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>和正在参与局部页面呈现的控件一起使用的控件。"
  syntax:
    content: public static void RegisterNamedClientScriptResource (System.Web.UI.Control control, string resourceName);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册脚本控件。"
    - id: resourceName
      type: System.String
      description: "资源标识符。"
  overload: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)
  id: RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterNamedClientScriptResource(Page,String)
  nameWithType: ScriptManager.RegisterNamedClientScriptResource(Page,String)
  fullName: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(Page,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "通过在程序集中嵌入的资源名称注册客户端脚本<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>和正在参与局部页面呈现的控件一起使用的控件。"
  syntax:
    content: public static void RegisterNamedClientScriptResource (System.Web.UI.Page page, string resourceName);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "正在注册脚本的页对象。"
    - id: resourceName
      type: System.String
      description: "资源标识符。"
  overload: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)
  id: RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterOnSubmitStatement(Control,Type,String,String)
  nameWithType: ScriptManager.RegisterOnSubmitStatement(Control,Type,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(Control,Type,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册在使用 ECMAScript (JavaScript) 代码<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件的控件，与使用<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>提交表单时执行的控件。"
  remarks: "RegisterOnSubmitStatement 将添加在提交表单时之前, 执行的脚本它可让你修改提交或取消它。       你可以使用 RegisterOnSubmitStatement 方法来呈现`onsubmit`语句与局部页面呈现兼容并没有[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]依赖关系。 使用此方法注册的 JavaScript 代码发送到页面中，仅当正在注册该语句的控件内时，才<xref:System.Web.UI.UpdatePanel>正在更新的控件。</xref:System.Web.UI.UpdatePanel> 若要向每个异步回发注册代码，请使用<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29>       如果你想要注册与局部页面更新无关的 JavaScript 代码，并想要注册在初始页面呈现期间仅一次的代码，请使用<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>       *脚本*RegisterOnSubmitStatement 方法的参数可以包含使用分号 （;） 分隔的多个脚本命令。       有关 HTML 窗体的详细信息和`onsubmit`事件，请参阅[World Wide Web Consortium (W3C) 网站](http://go.microsoft.com/fwlink/?linkid=37125)。"
  syntax:
    content: public static void RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册的控件<xref uid=&quot;langword_csharp_onsubmit&quot; name=&quot;onsubmit&quot; href=&quot;&quot;></xref>语句。"
    - id: type
      type: System.Type
      description: "客户端脚本语句的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来检索控件类型，正在注册脚本指定此参数。"
    - id: key
      type: System.String
      description: "脚本语句唯一标识符。"
    - id: script
      type: System.String
      description: "要注册的脚本。"
  overload: System.Web.UI.ScriptManager.RegisterOnSubmitStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>control</code>不在该页面的控制树中。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)
  id: RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterOnSubmitStatement(Page,Type,String,String)
  nameWithType: ScriptManager.RegisterOnSubmitStatement(Page,Type,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(Page,Type,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册在使用 ECMAScript (JavaScript) 代码<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件的控件，与使用<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>提交表单时执行的控件。"
  remarks: "使用此方法注册 JavaScript 代码将导致脚本要包含每次发生异步回发。      1> [!NOTE]&1;> 不删除从任何早期异步回发的代码。 新的异步回发将代码附加到任何现有代码，以`onsubmit`语句。       可以注册在控件内的代码<xref:System.Web.UI.UpdatePanel>控制，以便注册该代码时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>       如果你想要注册与局部页面更新无关的 JavaScript 代码，并想要注册在初始页面呈现期间仅一次的代码，请使用<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public static void RegisterOnSubmitStatement (System.Web.UI.Page page, Type type, string key, string script);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "正在注册的 page 对象<xref uid=&quot;langword_csharp_onsubmit&quot; name=&quot;onsubmit&quot; href=&quot;&quot;></xref>语句。"
    - id: type
      type: System.Type
      description: "客户端脚本语句的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来检索控件类型，正在注册脚本指定此参数。"
    - id: key
      type: System.String
      description: "脚本语句唯一标识符。"
    - id: script
      type: System.String
      description: "要注册的脚本。"
  overload: System.Web.UI.ScriptManager.RegisterOnSubmitStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)
  id: RegisterPostBackControl(System.Web.UI.Control)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterPostBackControl(Control)
  nameWithType: ScriptManager.RegisterPostBackControl(Control)
  fullName: System.Web.UI.ScriptManager.RegisterPostBackControl(Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "将控件注册为回发的触发器。 此方法用于配置内的回发控件<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>将执行异步回发的控件。"
  remarks: "使用 RegisterPostBackControl 方法以注册内的回发控件<xref:System.Web.UI.UpdatePanel>控件作为触发器。</xref:System.Web.UI.UpdatePanel> 使用此方法注册的控件更新整个页面，而不是仅更新<xref:System.Web.UI.UpdatePanel>控件的内容。</xref:System.Web.UI.UpdatePanel> 使用外部此方法注册的回发控件<xref:System.Web.UI.UpdatePanel>控件具有没有影响，因为默认情况下这些控件不执行异步回发。</xref:System.Web.UI.UpdatePanel>       你可以通过将添加触发器以声明方式`Triggers`元素<xref:System.Web.UI.UpdatePanel>控件。</xref:System.Web.UI.UpdatePanel> 在[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]，使用设计器的**UpdatePanelTrigger 集合编辑器**对话框。"
  syntax:
    content: public void RegisterPostBackControl (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要为回发注册的控件。"
  overload: System.Web.UI.ScriptManager.RegisterPostBackControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)
  id: RegisterScriptControl``1(``0)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterScriptControl(TScriptControl)
  nameWithType: ScriptManager.RegisterScriptControl(TScriptControl)
  fullName: System.Web.UI.ScriptManager.RegisterScriptControl(TScriptControl)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  syntax:
    content: 'public void RegisterScriptControl<TScriptControl> (TScriptControl scriptControl) where TScriptControl : System.Web.UI.Control, System.Web.UI.IScriptControl;'
    parameters:
    - id: scriptControl
      type: TScriptControl
      description: "要添加。"
  overload: System.Web.UI.ScriptManager.RegisterScriptControl<TScriptControl>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)
  id: RegisterScriptDescriptors(System.Web.UI.IExtenderControl)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterScriptDescriptors(IExtenderControl)
  nameWithType: ScriptManager.RegisterScriptDescriptors(IExtenderControl)
  fullName: System.Web.UI.ScriptManager.RegisterScriptDescriptors(IExtenderControl)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "回调到<xref href=&quot;System.Web.UI.ExtenderControl&quot;></xref>必须呈现类返回实例脚本为支持表示客户端控件、 组件或行为的客户端对象。"
  remarks: "<xref:System.Web.UI.ExtenderControl>类中调用 RegisterScriptDescriptors 方法其<xref:System.Web.UI.Control.Render%2A>方法。</xref:System.Web.UI.Control.Render%2A> </xref:System.Web.UI.ExtenderControl>"
  syntax:
    content: public void RegisterScriptDescriptors (System.Web.UI.IExtenderControl extenderControl);
    parameters:
    - id: extenderControl
      type: System.Web.UI.IExtenderControl
      description: "为的脚本描述符将注册扩展程序控件。"
  overload: System.Web.UI.ScriptManager.RegisterScriptDescriptors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)
  id: RegisterScriptDescriptors(System.Web.UI.IScriptControl)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterScriptDescriptors(IScriptControl)
  nameWithType: ScriptManager.RegisterScriptDescriptors(IScriptControl)
  fullName: System.Web.UI.ScriptManager.RegisterScriptDescriptors(IScriptControl)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "调用<xref href=&quot;System.Web.UI.ScriptControl&quot;></xref>必须呈现类返回实例脚本为支持表示客户端控件、 组件或行为的客户端对象。"
  remarks: "<xref:System.Web.UI.ScriptControl>类调用期间 RegisterScriptDescriptors 方法其<xref:System.Web.UI.Control.Render%2A>事件。</xref:System.Web.UI.Control.Render%2A> </xref:System.Web.UI.ScriptControl>"
  syntax:
    content: public void RegisterScriptDescriptors (System.Web.UI.IScriptControl scriptControl);
    parameters:
    - id: scriptControl
      type: System.Web.UI.IScriptControl
      description: "为的脚本描述符将注册脚本控件。"
  overload: System.Web.UI.ScriptManager.RegisterScriptDescriptors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)
  id: RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Control,Type,String,String,Boolean)
  nameWithType: ScriptManager.RegisterStartupScript(Control,Type,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterStartupScript(Control,Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册一个启动脚本块内的控件<xref href=&quot;System.Web.UI.UpdatePanel&quot;></xref>使用<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控制，并将该脚本块添加到页。"
  remarks: "你使用 RegisterStartupScript 方法注册的页与局部页面呈现兼容并没有一个启动脚本块[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]依赖关系。 使用此方法注册的启动脚本块发送到页面中，仅当正在注册块控件内<xref:System.Web.UI.UpdatePanel>正在更新的控件。</xref:System.Web.UI.UpdatePanel> 若要注册一个启动脚本块每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>       如果你想要注册的启动脚本的不属于部分页面更新，并想要注册脚本在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>       通过方法在页面完成加载时执行 RegisterStartupScript 但在该页面的客户端之前呈现的脚本块`onload`引发事件。 启动脚本块位于呈现的 ASP.NET 页的底部紧前面`</form>`标记。       不保证使用 RegisterStartupScript 注册的启动脚本块都是与它们注册的顺序相同的输出。 如果启动脚本块的顺序很重要，则使用<xref:System.Text.StringBuilder>对象，以便收集的脚本块中单个字符串中，然后将它们注册所有作为单个启动脚本。</xref:System.Text.StringBuilder>"
  syntax:
    content: public static void RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "正在注册客户端脚本块中的控件。"
    - id: type
      type: System.Type
      description: "客户端脚本块的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来检索控件类型，正在注册脚本指定此参数。"
    - id: key
      type: System.String
      description: "脚本块唯一标识符。"
    - id: script
      type: System.String
      description: "要注册的脚本。"
    - id: addScriptTags
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>括起脚本块以与<xref uid=&quot;langword_csharp_&lt;script&gt;&quot; name=&quot;&lt;script&gt;&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_&lt;/script&gt;&quot; name=&quot;&lt;/script&gt;&quot; href=&quot;&quot;></xref>标记; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.RegisterStartupScript*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>control</code>不在该页面的控制树中。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)
  id: RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Page,Type,String,String,Boolean)
  nameWithType: ScriptManager.RegisterStartupScript(Page,Type,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterStartupScript(Page,Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册每个异步回发向一个启动脚本块<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件并将该脚本块添加到页面。"
  remarks: "使用此方法以注册一个启动脚本块，它包括在每次发生异步回发。 若要注册脚本块内的控件<xref:System.Web.UI.UpdatePanel>控制，以便注册该脚本块时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>       如果你想要注册的启动脚本的不属于部分页面更新，并想要注册脚本在初始页面呈现期间仅一次，请使用<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法的<xref:System.Web.UI.ClientScriptManager>类。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</xref:System.Web.UI.Page.ClientScript%2A> </xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public static void RegisterStartupScript (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "正在注册客户端脚本块的页对象。"
    - id: type
      type: System.Type
      description: "客户端脚本块的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来检索控件类型，正在注册脚本指定此参数。"
    - id: key
      type: System.String
      description: "脚本块唯一标识符。"
    - id: script
      type: System.String
      description: "要注册的脚本。"
    - id: addScriptTags
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>括起脚本块以与<xref uid=&quot;langword_csharp_&lt;script&gt;&quot; name=&quot;&lt;script&gt;&quot; href=&quot;&quot;></xref>和<xref uid=&quot;langword_csharp_&lt;/script&gt;&quot; name=&quot;&lt;/script&gt;&quot; href=&quot;&quot;></xref>标记; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: ScriptManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.ScriptManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "呈现<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件的内容到浏览器使用指定<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>对象。"
  remarks: "此方法由控件开发人员用来扩展<xref:System.Web.UI.ScriptManager>控件。</xref:System.Web.UI.ScriptManager>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "一个接收要写入的页的控件的内容的对象。"
  overload: System.Web.UI.ScriptManager.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.ResolveCompositeScriptReference
  id: ResolveCompositeScriptReference
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: ResolveCompositeScriptReference
  nameWithType: ScriptManager.ResolveCompositeScriptReference
  fullName: System.Web.UI.ScriptManager.ResolveCompositeScriptReference
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "注册复合脚本时发生<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件。"
  syntax:
    content: public event EventHandler<System.Web.UI.CompositeScriptReferenceEventArgs> ResolveCompositeScriptReference;
    return:
      type: System.EventHandler{System.Web.UI.CompositeScriptReferenceEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.ResolveScriptReference
  id: ResolveScriptReference
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: ResolveScriptReference
  nameWithType: ScriptManager.ResolveScriptReference
  fullName: System.Web.UI.ScriptManager.ResolveScriptReference
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "成员时发生<xref:System.Web.UI.ScriptManager.Scripts*>集合注册与<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件。</xref:System.Web.UI.ScriptManager.Scripts*>"
  remarks: "引发此事件是一次的每个成员<xref:System.Web.UI.ScriptManager.Scripts%2A>在页面的集合<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.ScriptManager.Scripts%2A> 使用此事件脚本呈现到页之前执行的任何更新。"
  syntax:
    content: public event EventHandler<System.Web.UI.ScriptReferenceEventArgs> ResolveScriptReference;
    return:
      type: System.EventHandler{System.Web.UI.ScriptReferenceEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.RoleService
  id: RoleService
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: RoleService
  nameWithType: ScriptManager.RoleService
  fullName: System.Web.UI.ScriptManager.RoleService
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.RoleServiceManager&quot;></xref>对象与当前的<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例。"
  remarks: "<xref:System.Web.UI.RoleServiceManager>此属性返回的对象表示向该页面注册角色服务。</xref:System.Web.UI.RoleServiceManager> 可以在中定义的角色服务<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> 你可以使用 ASP.NET 角色服务或使用自定义的角色服务。 你可以在标记中添加自定义的服务，通过包括`RoleService`内的元素`asp:ScriptManager`元素在页面上，如下面的示例中所示︰```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;True&quot; />   </asp:ScriptManager>   ```可以以编程方式配置<xref:System.Web.UI.RoleServiceManager>对象。</xref:System.Web.UI.RoleServiceManager> 注册服务<xref:System.Web.UI.ScriptManager>控件在页面的<xref:System.Web.UI.Control.PreRender>生命周期阶段。</xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: public System.Web.UI.RoleServiceManager RoleService { get; }
    return:
      type: System.Web.UI.RoleServiceManager
      description: "<xref href=&quot;System.Web.UI.RoleServiceManager&quot;> </xref>当前对象<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例。"
  overload: System.Web.UI.ScriptManager.RoleService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.ScriptMode
  id: ScriptMode
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: ScriptMode
  nameWithType: ScriptManager.ScriptMode
  fullName: System.Web.UI.ScriptManager.ScriptMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置一个值，指定呈现客户端脚本库的发行版本还是调试。"
  remarks: "ScriptMode 属性指定是否<xref:System.Web.UI.ScriptManager>控件应呈现调试或发布的客户端脚本库的版本。</xref:System.Web.UI.ScriptManager> 此值可以通过在配置文件中并在页面指令中设置的值被取代。       下表列出了此属性的有效值。      |值 |定义 |  |-----------|----------------|  |<xref:System.Web.UI.ScriptMode>|客户端脚本库用于在网页上的调试版本时`retail`配置元素的属性设置为`false`。</xref:System.Web.UI.ScriptMode> 否则，使用客户端脚本库的发行版本。 |  |<xref:System.Web.UI.ScriptMode>|当应用于<xref:System.Web.UI.ScriptManager>对象的 ScriptMode 属性，此值等同于<xref:System.Web.UI.ScriptMode>。 |  |<xref:System.Web.UI.ScriptMode>|调试版本的客户端脚本库使用网页中，除非`retail`配置元素的属性设置为`true`。 |  |<xref:System.Web.UI.ScriptMode>|客户端脚本库的发行版本使用网页中，除非`retail`配置元素的属性设置为`false`。 |    &1;> [!NOTE]&1;>`debug`指令的特性不会影响支持 Ajax 的 ASP.NET 应用程序。</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptMode> <xref:System.Web.UI.ScriptManager>控件使用的设置仅在 Web.config 文件中并在其<xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A>和 ScriptMode 属性，以确定是否呈现调试脚本。</xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> </xref:System.Web.UI.ScriptManager>       有关详细信息，请参阅[调试和跟踪 Ajax 应用程序概述](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Web.UI.ScriptMode ScriptMode { get; set; }
    return:
      type: System.Web.UI.ScriptMode
      description: "枚举值，该值指示当前模式。 默认值是<xref href=&quot;System.Web.UI.ScriptMode&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.ScriptMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ScriptMode 属性不是一个<xref href=&quot;System.Web.UI.ScriptMode&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.ScriptPath
  id: ScriptPath
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: ScriptPath
  nameWithType: ScriptManager.ScriptPath
  fullName: System.Web.UI.ScriptManager.ScriptPath
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取或设置用于生成指向 ASP.NET Ajax 和自定义脚本文件的路径的位置的根路径。"
  remarks: "ScriptPath 属性，可在页上指定所有的脚本块的绝对的、 相对的或相对于应用程序 URL。 这包括与当前注册的自定义和第三方脚本块<xref:System.Web.UI.ScriptManager>实例。</xref:System.Web.UI.ScriptManager> ScriptPath 属性通常以声明方式的属性设置`ScriptManager`元素上的页中，但它可以还在代码中设置。       如果`path`属性或<xref:System.Web.UI.ScriptReferenceBase.Path%2A>属性设置为<xref:System.Web.UI.ScriptReference>对象在<xref:System.Web.UI.ScriptManager.Scripts%2A>集合，路径值将重写 ScriptPath 值，可为此<xref:System.Web.UI.ScriptReference>实例。</xref:System.Web.UI.ScriptReference> </xref:System.Web.UI.ScriptManager.Scripts%2A> </xref:System.Web.UI.ScriptReference> </xref:System.Web.UI.ScriptReferenceBase.Path%2A>       如果没有<xref:System.Web.UI.ScriptReferenceBase.Path%2A>指定值，<xref:System.Web.UI.ScriptManager>控制搜索的目录，由 ScriptPath 属性定义，解析由脚本引用其<xref:System.Web.UI.ScriptReference.Name%2A>或<xref:System.Web.UI.ScriptReference.Assembly%2A>属性。</xref:System.Web.UI.ScriptReference.Assembly%2A> </xref:System.Web.UI.ScriptReference.Name%2A> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptReferenceBase.Path%2A>"
  syntax:
    content: public string ScriptPath { get; set; }
    return:
      type: System.String
      description: "其中存储脚本文件的位置。 默认值为空字符串 (&quot;&quot;)，它被解释为相对路径。"
  overload: System.Web.UI.ScriptManager.ScriptPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.ScriptResourceMapping
  id: ScriptResourceMapping
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: ScriptResourceMapping
  nameWithType: ScriptManager.ScriptResourceMapping
  fullName: System.Web.UI.ScriptManager.ScriptResourceMapping
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.ScriptResourceMapping&quot;></xref>对象。"
  remarks: "静态 ScriptResourceMapping 属性返回<xref:System.Web.UI.ScriptResourceMapping>可以包含表示脚本资源 （脚本重定向） 的位置的映射的集合对象。</xref:System.Web.UI.ScriptResourceMapping> 可以根据名称或名称/程序集对映射的映射此集合，它可以指向<xref:System.Web.UI.ScriptResourceDefinition>对象。</xref:System.Web.UI.ScriptResourceDefinition>"
  example:
  - "The following examples shows how to add a <xref:System.Web.UI.ScriptResourceDefinition> object that can be referenced by a <xref:System.Web.UI.ScriptManager> object. Add the following code to the Global.asax file in the `Application_Start` event.  \n  \n```c#  \nScriptResourceDefinition myScriptResDef = new ScriptResourceDefinition();  \nmyScriptResDef.Path = \"~/Scripts/jquery-1.4.2.min.js\";  \nmyScriptResDef.DebugPath = \"~/Scripts/jquery-1.4.2.js\";  \nmyScriptResDef.CdnPath = \"http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js\";  \nmyScriptResDef.CdnDebugPath = \"http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js\";  \nScriptManager.ScriptResourceMapping.AddDefinition(\"jquery\", null, myScriptResDef);  \n```  \n  \n```vb#  \nDim myScriptResDef As New ScriptResourceDefinition()  \nmyScriptResDef.Path = \"~/Scripts/jquery-1.4.2.min.js\"  \nmyScriptResDef.DebugPath = \"~/Scripts/jquery-1.4.2.js\"  \nmyScriptResDef.CdnPath = \"http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js\"  \nmyScriptResDef.CdnDebugPath = \"http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js\"  \nScriptManager.ScriptResourceMapping.AddDefinition(\"jquery\", Nothing, myScriptResDef)  \n```  \n  \n In the markup for an ASP.NET Web Forms page (.aspx file), add the following markup inside the `form` element and before any elements or code that uses jQuery script.  \n  \n```  \n<asp:ScriptManager ID=\"sm1\" runat=\"server\">  \n  <Scripts>  \n    <asp:ScriptReference Name=\"jquery\"/>  \n  </Scripts>  \n</asp:ScriptManager>  \n```"
  syntax:
    content: public static System.Web.UI.ScriptResourceMapping ScriptResourceMapping { get; }
    return:
      type: System.Web.UI.ScriptResourceMapping
      description: "A <xref href=&quot;System.Web.UI.ScriptResourceMapping&quot;></xref> object."
  overload: System.Web.UI.ScriptManager.ScriptResourceMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.Scripts
  id: Scripts
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: Scripts
  nameWithType: ScriptManager.Scripts
  fullName: System.Web.UI.ScriptManager.Scripts
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.ScriptReferenceCollection&quot;></xref>对象，其中包含<xref href=&quot;System.Web.UI.ScriptReference&quot;></xref>对象，其中每个表示一个呈现给客户端的脚本文件。"
  remarks: "<xref:System.Web.UI.ScriptReferenceCollection>此属性返回的对象是一个集合的<xref:System.Web.UI.ScriptReference>对象，其中每个表示一个脚本文件。</xref:System.Web.UI.ScriptReference> </xref:System.Web.UI.ScriptReferenceCollection> 集合包含针对 Ajax 功能，则 ASP.NET 需要的所有脚本文件和自定义脚本文件的引用。 可以在定义自定义脚本文件来呈现<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>       您可以通过添加脚本文件添加到标记中的集合`asp:ScriptReference`元素与`Scripts`节点`asp:ScriptManager`元素在页面上，如下面的示例中所示。      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <Scripts>       <asp:ScriptReference Name=&quot;Script.js&quot; />     </Scripts>   </asp:ScriptManager>   ```你还可以添加<xref:System.Web.UI.ScriptReference>到以编程方式通过使用<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法的<xref:System.Web.UI.ScriptReferenceCollection>类</xref:System.Web.UI.ScriptReferenceCollection></xref:System.Collections.ObjectModel.Collection%601.Add%2A>的脚本集合的对象</xref:System.Web.UI.ScriptReference>       <xref:System.Web.UI.ScriptManager>控件在控件的过程注册脚本文件<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.ScriptManager>       脚本集合不包含核心[!INCLUDE[atlaslib_current_ext](~/add/includes/atlaslib-current-ext-md.md)]脚本。 核心库中的脚本可以呈现自动保存功能。它们无需向注册<xref:System.Web.UI.ScriptManager>控件。</xref:System.Web.UI.ScriptManager> 但是，如果你想要重写核心脚本或任何控制脚本并替换该脚本的不同版本，你可以将你的版本添加到脚本集合。"
  syntax:
    content: public System.Web.UI.ScriptReferenceCollection Scripts { get; }
    return:
      type: System.Web.UI.ScriptReferenceCollection
      description: "<xref href=&quot;System.Web.UI.ScriptReferenceCollection&quot;> </xref>对象<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例。"
  overload: System.Web.UI.ScriptManager.Scripts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.Services
  id: Services
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: Services
  nameWithType: ScriptManager.Services
  fullName: System.Web.UI.ScriptManager.Services
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取<xref href=&quot;System.Web.UI.ServiceReferenceCollection&quot;></xref>对象，其中包含<xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> ASP.NET Ajax 功能的客户端公开每个 Web 服务的对象。"
  remarks: "<xref:System.Web.UI.ServiceReferenceCollection>此属性返回的对象是一个集合的<xref:System.Web.UI.ServiceReference>对象，其中每个表示 Web 服务向注册<xref:System.Web.UI.ScriptManager>控件。</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ServiceReferenceCollection> 你可以定义中的服务<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>       可以通过添加到标记中的集合中添加服务`asp:ServiceReference`元素`Services`内的元素`asp:ScriptManager`实例在页上，如以下示例所示。      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <Services>       <asp:ServiceReference Path=&quot;Service.asmx&quot; />     </Services>   </asp:ScriptManager>   ```可以以编程方式添加<xref:System.Web.UI.ServiceReference>到服务集合使用<xref:System.Collections.ObjectModel.Collection%601.Add%2A>的<xref:System.Web.UI.ServiceReferenceCollection>类</xref:System.Web.UI.ServiceReferenceCollection>的方法</xref:System.Collections.ObjectModel.Collection%601.Add%2A>的对象</xref:System.Web.UI.ServiceReference>       注册服务<xref:System.Web.UI.ScriptManager>在页面的<xref:System.Web.UI.Control.PreRender>生命周期阶段。</xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: public System.Web.UI.ServiceReferenceCollection Services { get; }
    return:
      type: System.Web.UI.ServiceReferenceCollection
      description: "<xref href=&quot;System.Web.UI.ServiceReferenceCollection&quot;> </xref>当前对象<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>实例。"
  overload: System.Web.UI.ScriptManager.Services*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.SetFocus(System.String)
  id: SetFocus(System.String)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: SetFocus(String)
  nameWithType: ScriptManager.SetFocus(String)
  fullName: System.Web.UI.ScriptManager.SetFocus(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "将浏览器焦点设置到 id。 指定的控件"
  remarks: "SetFocus 方法工作方式类似于<xref:System.Web.UI.Page.SetFocus%2A><xref:System.Web.UI.Page>类</xref:System.Web.UI.Page>的方法</xref:System.Web.UI.Page.SetFocus%2A> 这两种方法使具有指定 ID 控件在网页上的活动控件。 SetFocus 付款方式<xref:System.Web.UI.ScriptManager>类用于将焦点设置异步回发期间。</xref:System.Web.UI.ScriptManager> 在回发和首次呈现页时，SetFocus 方法调用的<xref:System.Web.UI.Page.SetFocus%2A>方法的<xref:System.Web.UI.Page>类。</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.SetFocus%2A>       如果有多个调用 SetFocus 方法，在最后一次调用在控件接收焦点。"
  syntax:
    content: public void SetFocus (string clientID);
    parameters:
    - id: clientID
      type: System.String
      description: "要接收焦点的控件 ID。"
  overload: System.Web.UI.ScriptManager.SetFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)
  id: SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: SetFocus(Control)
  nameWithType: ScriptManager.SetFocus(Control)
  fullName: System.Web.UI.ScriptManager.SetFocus(Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "将浏览器焦点设置为指定的控件。"
  remarks: "SetFocus 方法工作方式类似于<xref:System.Web.UI.Page.SetFocus%2A><xref:System.Web.UI.Page>类</xref:System.Web.UI.Page>的方法</xref:System.Web.UI.Page.SetFocus%2A> 这两种方法使指定的控件在网页上的活动控件。 SetFocus 付款方式<xref:System.Web.UI.ScriptManager>类用于将焦点设置异步回发期间。</xref:System.Web.UI.ScriptManager> 在回发和首次呈现页时，SetFocus 方法调用的<xref:System.Web.UI.Page.SetFocus%2A>方法的<xref:System.Web.UI.Page>类。</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.SetFocus%2A>       如果有多个调用 SetFocus 方法，在最后一次调用中指定在控件接收焦点。"
  syntax:
    content: public void SetFocus (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要接收焦点的控件。"
  overload: System.Web.UI.ScriptManager.SetFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.SupportsPartialRendering
  id: SupportsPartialRendering
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: SupportsPartialRendering
  nameWithType: ScriptManager.SupportsPartialRendering
  fullName: System.Web.UI.ScriptManager.SupportsPartialRendering
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "获取一个值，该值指示客户端是否支持局部页面呈现。"
  remarks: "如果<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性设置为`false`，SupportsPartialRendering 属性返回`false`。</xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>       若要确定是否支持局部页面呈现的默认检查返回`true`当以下条件都为真:-<xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A>属性值必须大于或等于 1.0。</xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A>      -<xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A>属性值必须大于或等于 1.0。</xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A>      -<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>属性值必须设置为`true`。</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       显式设置 SupportsPartialRendering 属性时，不会使用这些检查。       控件开发人员应使用 SupportsPartialRendering 属性以确定它们是否应支持局部页面呈现。"
  syntax:
    content: public bool SupportsPartialRendering { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果客户端支持局部页面呈现;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 默认值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.SupportsPartialRendering*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.ScriptManager.EnablePartialRendering*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the SupportsPartialRendering property was set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The SupportsPartialRendering property was set after the <xref href=\"System.Web.UI.Control.Init\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  isEii: true
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: ScriptManager.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.ScriptManager.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.ScriptManager>实例被强制转换为<xref:System.Web.UI.IPostBackDataHandler>接口。</xref:System.Web.UI.IPostBackDataHandler> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "密钥标识符的控件。"
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "所有传入的后期数据的集合。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件的状态已因回发; 而更改否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  isEii: true
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: ScriptManager.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.ScriptManager.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "有关此成员的说明，请参阅&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.ScriptManager>实例被强制转换为<xref:System.Web.UI.IPostBackDataHandler>接口。</xref:System.Web.UI.IPostBackDataHandler> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: ScriptManager.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.ScriptManager.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "使<xref href=&quot;System.Web.UI.ScriptManager&quot;></xref>控件以处理回发事件，并加载网页的历史记录状态。"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "表示网页的历史记录状态的键/值对的字符串。"
  overload: System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptManager.Visible
  id: Visible
  parent: System.Web.UI.ScriptManager
  langs:
  - csharp
  name: Visible
  nameWithType: ScriptManager.Visible
  fullName: System.Web.UI.ScriptManager.Visible
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "重写<xref:System.Web.UI.Control.Visible*>继承自基类的属性<xref href=&quot;System.Web.UI.Control&quot;></xref>类以防止设置此值。</xref:System.Web.UI.Control.Visible*>"
  remarks: "<xref:System.Web.UI.Control.Visible%2A>属性被重写，<xref:System.Web.UI.ScriptManager>类以防止设置此值。</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.Control.Visible%2A> A<xref:System.NotImplementedException>如果一个值分配给此属性，则会发生错误。</xref:System.NotImplementedException>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.ScriptManager.Visible*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Visible 属性则赋值。"
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Web.UI.ScriptManager.#ctor
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ScriptManager()
  nameWithType: ScriptManager.ScriptManager()
  fullName: System.Web.UI.ScriptManager.ScriptManager()
- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AddHistoryPoint(NameValueCollection,String)
  nameWithType: ScriptManager.AddHistoryPoint(NameValueCollection,String)
  fullName: System.Web.UI.ScriptManager.AddHistoryPoint(NameValueCollection,String)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AddHistoryPoint(String,String)
  nameWithType: ScriptManager.AddHistoryPoint(String,String)
  fullName: System.Web.UI.ScriptManager.AddHistoryPoint(String,String)
- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AddHistoryPoint(String,String,String)
  nameWithType: ScriptManager.AddHistoryPoint(String,String,String)
  fullName: System.Web.UI.ScriptManager.AddHistoryPoint(String,String,String)
- uid: System.Web.UI.ScriptManager.AjaxFrameworkAssembly
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AjaxFrameworkAssembly
  nameWithType: ScriptManager.AjaxFrameworkAssembly
  fullName: System.Web.UI.ScriptManager.AjaxFrameworkAssembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.UI.ScriptManager.AjaxFrameworkMode
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AjaxFrameworkMode
  nameWithType: ScriptManager.AjaxFrameworkMode
  fullName: System.Web.UI.ScriptManager.AjaxFrameworkMode
- uid: System.Web.UI.AjaxFrameworkMode
  parent: System.Web.UI
  isExternal: false
  name: AjaxFrameworkMode
  nameWithType: AjaxFrameworkMode
  fullName: System.Web.UI.AjaxFrameworkMode
- uid: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AllowCustomErrorsRedirect
  nameWithType: ScriptManager.AllowCustomErrorsRedirect
  fullName: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ScriptManager.AsyncPostBackError
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AsyncPostBackError
  nameWithType: ScriptManager.AsyncPostBackError
  fullName: System.Web.UI.ScriptManager.AsyncPostBackError
- uid: System.EventHandler{System.Web.UI.AsyncPostBackErrorEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AsyncPostBackErrorEventArgs>
  nameWithType: EventHandler<AsyncPostBackErrorEventArgs>
  fullName: System.EventHandler<System.Web.UI.AsyncPostBackErrorEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.AsyncPostBackErrorEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.AsyncPostBackErrorEventArgs
    name: AsyncPostBackErrorEventArgs
    nameWithType: AsyncPostBackErrorEventArgs
    fullName: AsyncPostBackErrorEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AsyncPostBackErrorMessage
  nameWithType: ScriptManager.AsyncPostBackErrorMessage
  fullName: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage
- uid: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AsyncPostBackSourceElementID
  nameWithType: ScriptManager.AsyncPostBackSourceElementID
  fullName: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID
- uid: System.Web.UI.ScriptManager.AsyncPostBackTimeout
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AsyncPostBackTimeout
  nameWithType: ScriptManager.AsyncPostBackTimeout
  fullName: System.Web.UI.ScriptManager.AsyncPostBackTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ScriptManager.AuthenticationService
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AuthenticationService
  nameWithType: ScriptManager.AuthenticationService
  fullName: System.Web.UI.ScriptManager.AuthenticationService
- uid: System.Web.UI.AuthenticationServiceManager
  parent: System.Web.UI
  isExternal: false
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager
  fullName: System.Web.UI.AuthenticationServiceManager
- uid: System.Web.UI.ScriptManager.ClientNavigateHandler
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ClientNavigateHandler
  nameWithType: ScriptManager.ClientNavigateHandler
  fullName: System.Web.UI.ScriptManager.ClientNavigateHandler
- uid: System.Web.UI.ScriptManager.CompositeScript
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: CompositeScript
  nameWithType: ScriptManager.CompositeScript
  fullName: System.Web.UI.ScriptManager.CompositeScript
- uid: System.Web.UI.CompositeScriptReference
  parent: System.Web.UI
  isExternal: false
  name: CompositeScriptReference
  nameWithType: CompositeScriptReference
  fullName: System.Web.UI.CompositeScriptReference
- uid: System.Web.UI.ScriptManager.EmptyPageUrl
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EmptyPageUrl
  nameWithType: ScriptManager.EmptyPageUrl
  fullName: System.Web.UI.ScriptManager.EmptyPageUrl
- uid: System.Web.UI.ScriptManager.EnableCdn
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableCdn
  nameWithType: ScriptManager.EnableCdn
  fullName: System.Web.UI.ScriptManager.EnableCdn
- uid: System.Web.UI.ScriptManager.EnableCdnFallback
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableCdnFallback
  nameWithType: ScriptManager.EnableCdnFallback
  fullName: System.Web.UI.ScriptManager.EnableCdnFallback
- uid: System.Web.UI.ScriptManager.EnableHistory
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableHistory
  nameWithType: ScriptManager.EnableHistory
  fullName: System.Web.UI.ScriptManager.EnableHistory
- uid: System.Web.UI.ScriptManager.EnablePageMethods
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnablePageMethods
  nameWithType: ScriptManager.EnablePageMethods
  fullName: System.Web.UI.ScriptManager.EnablePageMethods
- uid: System.Web.UI.ScriptManager.EnablePartialRendering
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnablePartialRendering
  nameWithType: ScriptManager.EnablePartialRendering
  fullName: System.Web.UI.ScriptManager.EnablePartialRendering
- uid: System.Web.UI.ScriptManager.EnableScriptGlobalization
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableScriptGlobalization
  nameWithType: ScriptManager.EnableScriptGlobalization
  fullName: System.Web.UI.ScriptManager.EnableScriptGlobalization
- uid: System.Web.UI.ScriptManager.EnableScriptLocalization
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableScriptLocalization
  nameWithType: ScriptManager.EnableScriptLocalization
  fullName: System.Web.UI.ScriptManager.EnableScriptLocalization
- uid: System.Web.UI.ScriptManager.EnableSecureHistoryState
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableSecureHistoryState
  nameWithType: ScriptManager.EnableSecureHistoryState
  fullName: System.Web.UI.ScriptManager.EnableSecureHistoryState
- uid: System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetCurrent(Page)
  nameWithType: ScriptManager.GetCurrent(Page)
  fullName: System.Web.UI.ScriptManager.GetCurrent(Page)
- uid: System.Web.UI.ScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredArrayDeclarations()
  nameWithType: ScriptManager.GetRegisteredArrayDeclarations()
  fullName: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredArrayDeclaration}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RegisteredArrayDeclaration>
  nameWithType: ReadOnlyCollection<RegisteredArrayDeclaration>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredArrayDeclaration>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.UI.RegisteredArrayDeclaration>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.RegisteredArrayDeclaration
    name: RegisteredArrayDeclaration
    nameWithType: RegisteredArrayDeclaration
    fullName: RegisteredArrayDeclaration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredClientScriptBlocks()
  nameWithType: ScriptManager.GetRegisteredClientScriptBlocks()
  fullName: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredScript}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RegisteredScript>
  nameWithType: ReadOnlyCollection<RegisteredScript>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredScript>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.UI.RegisteredScript>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.RegisteredScript
    name: RegisteredScript
    nameWithType: RegisteredScript
    fullName: RegisteredScript
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredDisposeScripts()
  nameWithType: ScriptManager.GetRegisteredDisposeScripts()
  fullName: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredDisposeScript}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RegisteredDisposeScript>
  nameWithType: ReadOnlyCollection<RegisteredDisposeScript>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredDisposeScript>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.UI.RegisteredDisposeScript>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.RegisteredDisposeScript
    name: RegisteredDisposeScript
    nameWithType: RegisteredDisposeScript
    fullName: RegisteredDisposeScript
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredExpandoAttributes()
  nameWithType: ScriptManager.GetRegisteredExpandoAttributes()
  fullName: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredExpandoAttribute}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RegisteredExpandoAttribute>
  nameWithType: ReadOnlyCollection<RegisteredExpandoAttribute>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredExpandoAttribute>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.UI.RegisteredExpandoAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.RegisteredExpandoAttribute
    name: RegisteredExpandoAttribute
    nameWithType: RegisteredExpandoAttribute
    fullName: RegisteredExpandoAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.GetRegisteredHiddenFields
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredHiddenFields()
  nameWithType: ScriptManager.GetRegisteredHiddenFields()
  fullName: System.Web.UI.ScriptManager.GetRegisteredHiddenFields()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredHiddenField}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RegisteredHiddenField>
  nameWithType: ReadOnlyCollection<RegisteredHiddenField>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredHiddenField>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.UI.RegisteredHiddenField>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.RegisteredHiddenField
    name: RegisteredHiddenField
    nameWithType: RegisteredHiddenField
    fullName: RegisteredHiddenField
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredOnSubmitStatements()
  nameWithType: ScriptManager.GetRegisteredOnSubmitStatements()
  fullName: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements()
- uid: System.Web.UI.ScriptManager.GetRegisteredStartupScripts
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredStartupScripts()
  nameWithType: ScriptManager.GetRegisteredStartupScripts()
  fullName: System.Web.UI.ScriptManager.GetRegisteredStartupScripts()
- uid: System.Web.UI.ScriptManager.GetStateString
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetStateString()
  nameWithType: ScriptManager.GetStateString()
  fullName: System.Web.UI.ScriptManager.GetStateString()
- uid: System.Web.UI.ScriptManager.IsDebuggingEnabled
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: ScriptManager.IsDebuggingEnabled
  fullName: System.Web.UI.ScriptManager.IsDebuggingEnabled
- uid: System.Web.UI.ScriptManager.IsInAsyncPostBack
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: IsInAsyncPostBack
  nameWithType: ScriptManager.IsInAsyncPostBack
  fullName: System.Web.UI.ScriptManager.IsInAsyncPostBack
- uid: System.Web.UI.ScriptManager.IsNavigating
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: IsNavigating
  nameWithType: ScriptManager.IsNavigating
  fullName: System.Web.UI.ScriptManager.IsNavigating
- uid: System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: LoadPostData(String,NameValueCollection)
  nameWithType: ScriptManager.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.ScriptManager.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.ScriptManager.LoadScriptsBeforeUI
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: LoadScriptsBeforeUI
  nameWithType: ScriptManager.LoadScriptsBeforeUI
  fullName: System.Web.UI.ScriptManager.LoadScriptsBeforeUI
- uid: System.Web.UI.ScriptManager.Navigate
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Navigate
  nameWithType: ScriptManager.Navigate
  fullName: System.Web.UI.ScriptManager.Navigate
- uid: System.EventHandler{System.Web.UI.HistoryEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<HistoryEventArgs>
  nameWithType: EventHandler<HistoryEventArgs>
  fullName: System.EventHandler<System.Web.UI.HistoryEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.HistoryEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.HistoryEventArgs
    name: HistoryEventArgs
    nameWithType: HistoryEventArgs
    fullName: HistoryEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnAsyncPostBackError(AsyncPostBackErrorEventArgs)
  nameWithType: ScriptManager.OnAsyncPostBackError(AsyncPostBackErrorEventArgs)
  fullName: System.Web.UI.ScriptManager.OnAsyncPostBackError(AsyncPostBackErrorEventArgs)
- uid: System.Web.UI.AsyncPostBackErrorEventArgs
  parent: System.Web.UI
  isExternal: false
  name: AsyncPostBackErrorEventArgs
  nameWithType: AsyncPostBackErrorEventArgs
  fullName: System.Web.UI.AsyncPostBackErrorEventArgs
- uid: System.Web.UI.ScriptManager.OnInit(System.EventArgs)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ScriptManager.OnInit(EventArgs)
  fullName: System.Web.UI.ScriptManager.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: ScriptManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.ScriptManager.OnPreRender(EventArgs)
- uid: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)
  nameWithType: ScriptManager.OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)
  fullName: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)
- uid: System.Web.UI.CompositeScriptReferenceEventArgs
  parent: System.Web.UI
  isExternal: false
  name: CompositeScriptReferenceEventArgs
  nameWithType: CompositeScriptReferenceEventArgs
  fullName: System.Web.UI.CompositeScriptReferenceEventArgs
- uid: System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnResolveScriptReference(ScriptReferenceEventArgs)
  nameWithType: ScriptManager.OnResolveScriptReference(ScriptReferenceEventArgs)
  fullName: System.Web.UI.ScriptManager.OnResolveScriptReference(ScriptReferenceEventArgs)
- uid: System.Web.UI.ScriptReferenceEventArgs
  parent: System.Web.UI
  isExternal: false
  name: ScriptReferenceEventArgs
  nameWithType: ScriptReferenceEventArgs
  fullName: System.Web.UI.ScriptReferenceEventArgs
- uid: System.Web.UI.ScriptManager.ProfileService
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ProfileService
  nameWithType: ScriptManager.ProfileService
  fullName: System.Web.UI.ScriptManager.ProfileService
- uid: System.Web.UI.ProfileServiceManager
  parent: System.Web.UI
  isExternal: false
  name: ProfileServiceManager
  nameWithType: ProfileServiceManager
  fullName: System.Web.UI.ProfileServiceManager
- uid: System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: ScriptManager.RaisePostBackEvent(String)
  fullName: System.Web.UI.ScriptManager.RaisePostBackEvent(String)
- uid: System.Web.UI.ScriptManager.RaisePostDataChangedEvent
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RaisePostDataChangedEvent()
  nameWithType: ScriptManager.RaisePostDataChangedEvent()
  fullName: System.Web.UI.ScriptManager.RaisePostDataChangedEvent()
- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterArrayDeclaration(Control,String,String)
  nameWithType: ScriptManager.RegisterArrayDeclaration(Control,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterArrayDeclaration(Control,String,String)
- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterArrayDeclaration(Page,String,String)
  nameWithType: ScriptManager.RegisterArrayDeclaration(Page,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterArrayDeclaration(Page,String,String)
- uid: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterAsyncPostBackControl(Control)
  nameWithType: ScriptManager.RegisterAsyncPostBackControl(Control)
  fullName: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(Control)
- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Control,Type,String,String,Boolean)
  nameWithType: ScriptManager.RegisterClientScriptBlock(Control,Type,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptBlock(Control,Type,String,String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Page,Type,String,String,Boolean)
  nameWithType: ScriptManager.RegisterClientScriptBlock(Page,Type,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptBlock(Page,Type,String,String,Boolean)
- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(Control,Type,String,String)
  nameWithType: ScriptManager.RegisterClientScriptInclude(Control,Type,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptInclude(Control,Type,String,String)
- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(Page,Type,String,String)
  nameWithType: ScriptManager.RegisterClientScriptInclude(Page,Type,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptInclude(Page,Type,String,String)
- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptResource(Control,Type,String)
  nameWithType: ScriptManager.RegisterClientScriptResource(Control,Type,String)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptResource(Control,Type,String)
- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptResource(Page,Type,String)
  nameWithType: ScriptManager.RegisterClientScriptResource(Page,Type,String)
  fullName: System.Web.UI.ScriptManager.RegisterClientScriptResource(Page,Type,String)
- uid: System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterDataItem(Control,String)
  nameWithType: ScriptManager.RegisterDataItem(Control,String)
  fullName: System.Web.UI.ScriptManager.RegisterDataItem(Control,String)
- uid: System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterDataItem(Control,String,Boolean)
  nameWithType: ScriptManager.RegisterDataItem(Control,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterDataItem(Control,String,Boolean)
- uid: System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterDispose(Control,String)
  nameWithType: ScriptManager.RegisterDispose(Control,String)
  fullName: System.Web.UI.ScriptManager.RegisterDispose(Control,String)
- uid: System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(Control,String,String,String,Boolean)
  nameWithType: ScriptManager.RegisterExpandoAttribute(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterExpandoAttribute(Control,String,String,String,Boolean)
- uid: System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterExtenderControl(TExtenderControl,Control)
  nameWithType: ScriptManager.RegisterExtenderControl(TExtenderControl,Control)
  fullName: System.Web.UI.ScriptManager.RegisterExtenderControl(TExtenderControl,Control)
- uid: TExtenderControl
  isExternal: true
  name: TExtenderControl
  nameWithType: TExtenderControl
  fullName: TExtenderControl
- uid: System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterHiddenField(Control,String,String)
  nameWithType: ScriptManager.RegisterHiddenField(Control,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterHiddenField(Control,String,String)
- uid: System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterHiddenField(Page,String,String)
  nameWithType: ScriptManager.RegisterHiddenField(Page,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterHiddenField(Page,String,String)
- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterNamedClientScriptResource(Control,String)
  nameWithType: ScriptManager.RegisterNamedClientScriptResource(Control,String)
  fullName: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(Control,String)
- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterNamedClientScriptResource(Page,String)
  nameWithType: ScriptManager.RegisterNamedClientScriptResource(Page,String)
  fullName: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(Page,String)
- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement(Control,Type,String,String)
  nameWithType: ScriptManager.RegisterOnSubmitStatement(Control,Type,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(Control,Type,String,String)
- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement(Page,Type,String,String)
  nameWithType: ScriptManager.RegisterOnSubmitStatement(Page,Type,String,String)
  fullName: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(Page,Type,String,String)
- uid: System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterPostBackControl(Control)
  nameWithType: ScriptManager.RegisterPostBackControl(Control)
  fullName: System.Web.UI.ScriptManager.RegisterPostBackControl(Control)
- uid: System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterScriptControl(TScriptControl)
  nameWithType: ScriptManager.RegisterScriptControl(TScriptControl)
  fullName: System.Web.UI.ScriptManager.RegisterScriptControl(TScriptControl)
- uid: TScriptControl
  isExternal: true
  name: TScriptControl
  nameWithType: TScriptControl
  fullName: TScriptControl
- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterScriptDescriptors(IExtenderControl)
  nameWithType: ScriptManager.RegisterScriptDescriptors(IExtenderControl)
  fullName: System.Web.UI.ScriptManager.RegisterScriptDescriptors(IExtenderControl)
- uid: System.Web.UI.IExtenderControl
  parent: System.Web.UI
  isExternal: false
  name: IExtenderControl
  nameWithType: IExtenderControl
  fullName: System.Web.UI.IExtenderControl
- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterScriptDescriptors(IScriptControl)
  nameWithType: ScriptManager.RegisterScriptDescriptors(IScriptControl)
  fullName: System.Web.UI.ScriptManager.RegisterScriptDescriptors(IScriptControl)
- uid: System.Web.UI.IScriptControl
  parent: System.Web.UI
  isExternal: false
  name: IScriptControl
  nameWithType: IScriptControl
  fullName: System.Web.UI.IScriptControl
- uid: System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterStartupScript(Control,Type,String,String,Boolean)
  nameWithType: ScriptManager.RegisterStartupScript(Control,Type,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterStartupScript(Control,Type,String,String,Boolean)
- uid: System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterStartupScript(Page,Type,String,String,Boolean)
  nameWithType: ScriptManager.RegisterStartupScript(Page,Type,String,String,Boolean)
  fullName: System.Web.UI.ScriptManager.RegisterStartupScript(Page,Type,String,String,Boolean)
- uid: System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: ScriptManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.ScriptManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.ScriptManager.ResolveCompositeScriptReference
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ResolveCompositeScriptReference
  nameWithType: ScriptManager.ResolveCompositeScriptReference
  fullName: System.Web.UI.ScriptManager.ResolveCompositeScriptReference
- uid: System.EventHandler{System.Web.UI.CompositeScriptReferenceEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CompositeScriptReferenceEventArgs>
  nameWithType: EventHandler<CompositeScriptReferenceEventArgs>
  fullName: System.EventHandler<System.Web.UI.CompositeScriptReferenceEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.CompositeScriptReferenceEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.CompositeScriptReferenceEventArgs
    name: CompositeScriptReferenceEventArgs
    nameWithType: CompositeScriptReferenceEventArgs
    fullName: CompositeScriptReferenceEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.ResolveScriptReference
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ResolveScriptReference
  nameWithType: ScriptManager.ResolveScriptReference
  fullName: System.Web.UI.ScriptManager.ResolveScriptReference
- uid: System.EventHandler{System.Web.UI.ScriptReferenceEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ScriptReferenceEventArgs>
  nameWithType: EventHandler<ScriptReferenceEventArgs>
  fullName: System.EventHandler<System.Web.UI.ScriptReferenceEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.ScriptReferenceEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.ScriptReferenceEventArgs
    name: ScriptReferenceEventArgs
    nameWithType: ScriptReferenceEventArgs
    fullName: ScriptReferenceEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.ScriptManager.RoleService
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RoleService
  nameWithType: ScriptManager.RoleService
  fullName: System.Web.UI.ScriptManager.RoleService
- uid: System.Web.UI.RoleServiceManager
  parent: System.Web.UI
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
- uid: System.Web.UI.ScriptManager.ScriptMode
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ScriptMode
  nameWithType: ScriptManager.ScriptMode
  fullName: System.Web.UI.ScriptManager.ScriptMode
- uid: System.Web.UI.ScriptMode
  parent: System.Web.UI
  isExternal: false
  name: ScriptMode
  nameWithType: ScriptMode
  fullName: System.Web.UI.ScriptMode
- uid: System.Web.UI.ScriptManager.ScriptPath
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ScriptPath
  nameWithType: ScriptManager.ScriptPath
  fullName: System.Web.UI.ScriptManager.ScriptPath
- uid: System.Web.UI.ScriptManager.ScriptResourceMapping
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ScriptResourceMapping
  nameWithType: ScriptManager.ScriptResourceMapping
  fullName: System.Web.UI.ScriptManager.ScriptResourceMapping
- uid: System.Web.UI.ScriptResourceMapping
  parent: System.Web.UI
  isExternal: false
  name: ScriptResourceMapping
  nameWithType: ScriptResourceMapping
  fullName: System.Web.UI.ScriptResourceMapping
- uid: System.Web.UI.ScriptManager.Scripts
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Scripts
  nameWithType: ScriptManager.Scripts
  fullName: System.Web.UI.ScriptManager.Scripts
- uid: System.Web.UI.ScriptReferenceCollection
  parent: System.Web.UI
  isExternal: false
  name: ScriptReferenceCollection
  nameWithType: ScriptReferenceCollection
  fullName: System.Web.UI.ScriptReferenceCollection
- uid: System.Web.UI.ScriptManager.Services
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Services
  nameWithType: ScriptManager.Services
  fullName: System.Web.UI.ScriptManager.Services
- uid: System.Web.UI.ServiceReferenceCollection
  parent: System.Web.UI
  isExternal: false
  name: ServiceReferenceCollection
  nameWithType: ServiceReferenceCollection
  fullName: System.Web.UI.ServiceReferenceCollection
- uid: System.Web.UI.ScriptManager.SetFocus(System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: SetFocus(String)
  nameWithType: ScriptManager.SetFocus(String)
  fullName: System.Web.UI.ScriptManager.SetFocus(String)
- uid: System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: SetFocus(Control)
  nameWithType: ScriptManager.SetFocus(Control)
  fullName: System.Web.UI.ScriptManager.SetFocus(Control)
- uid: System.Web.UI.ScriptManager.SupportsPartialRendering
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: SupportsPartialRendering
  nameWithType: ScriptManager.SupportsPartialRendering
  fullName: System.Web.UI.ScriptManager.SupportsPartialRendering
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: ScriptManager.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.ScriptManager.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: ScriptManager.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.ScriptManager.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: ScriptManager.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.ScriptManager.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.ScriptManager.Visible
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Visible
  nameWithType: ScriptManager.Visible
  fullName: System.Web.UI.ScriptManager.Visible
- uid: System.Web.UI.ScriptManager.#ctor*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager.ScriptManager
- uid: System.Web.UI.ScriptManager.AddHistoryPoint*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AddHistoryPoint
  nameWithType: ScriptManager.AddHistoryPoint
- uid: System.Web.UI.ScriptManager.AjaxFrameworkAssembly*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AjaxFrameworkAssembly
  nameWithType: ScriptManager.AjaxFrameworkAssembly
- uid: System.Web.UI.ScriptManager.AjaxFrameworkMode*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AjaxFrameworkMode
  nameWithType: ScriptManager.AjaxFrameworkMode
- uid: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AllowCustomErrorsRedirect
  nameWithType: ScriptManager.AllowCustomErrorsRedirect
- uid: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AsyncPostBackErrorMessage
  nameWithType: ScriptManager.AsyncPostBackErrorMessage
- uid: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AsyncPostBackSourceElementID
  nameWithType: ScriptManager.AsyncPostBackSourceElementID
- uid: System.Web.UI.ScriptManager.AsyncPostBackTimeout*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AsyncPostBackTimeout
  nameWithType: ScriptManager.AsyncPostBackTimeout
- uid: System.Web.UI.ScriptManager.AuthenticationService*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: AuthenticationService
  nameWithType: ScriptManager.AuthenticationService
- uid: System.Web.UI.ScriptManager.ClientNavigateHandler*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ClientNavigateHandler
  nameWithType: ScriptManager.ClientNavigateHandler
- uid: System.Web.UI.ScriptManager.CompositeScript*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: CompositeScript
  nameWithType: ScriptManager.CompositeScript
- uid: System.Web.UI.ScriptManager.EmptyPageUrl*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EmptyPageUrl
  nameWithType: ScriptManager.EmptyPageUrl
- uid: System.Web.UI.ScriptManager.EnableCdn*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableCdn
  nameWithType: ScriptManager.EnableCdn
- uid: System.Web.UI.ScriptManager.EnableCdnFallback*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableCdnFallback
  nameWithType: ScriptManager.EnableCdnFallback
- uid: System.Web.UI.ScriptManager.EnableHistory*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableHistory
  nameWithType: ScriptManager.EnableHistory
- uid: System.Web.UI.ScriptManager.EnablePageMethods*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnablePageMethods
  nameWithType: ScriptManager.EnablePageMethods
- uid: System.Web.UI.ScriptManager.EnablePartialRendering*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnablePartialRendering
  nameWithType: ScriptManager.EnablePartialRendering
- uid: System.Web.UI.ScriptManager.EnableScriptGlobalization*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableScriptGlobalization
  nameWithType: ScriptManager.EnableScriptGlobalization
- uid: System.Web.UI.ScriptManager.EnableScriptLocalization*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableScriptLocalization
  nameWithType: ScriptManager.EnableScriptLocalization
- uid: System.Web.UI.ScriptManager.EnableSecureHistoryState*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: EnableSecureHistoryState
  nameWithType: ScriptManager.EnableSecureHistoryState
- uid: System.Web.UI.ScriptManager.GetCurrent*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetCurrent
  nameWithType: ScriptManager.GetCurrent
- uid: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredArrayDeclarations
  nameWithType: ScriptManager.GetRegisteredArrayDeclarations
- uid: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredClientScriptBlocks
  nameWithType: ScriptManager.GetRegisteredClientScriptBlocks
- uid: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredDisposeScripts
  nameWithType: ScriptManager.GetRegisteredDisposeScripts
- uid: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredExpandoAttributes
  nameWithType: ScriptManager.GetRegisteredExpandoAttributes
- uid: System.Web.UI.ScriptManager.GetRegisteredHiddenFields*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredHiddenFields
  nameWithType: ScriptManager.GetRegisteredHiddenFields
- uid: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredOnSubmitStatements
  nameWithType: ScriptManager.GetRegisteredOnSubmitStatements
- uid: System.Web.UI.ScriptManager.GetRegisteredStartupScripts*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetRegisteredStartupScripts
  nameWithType: ScriptManager.GetRegisteredStartupScripts
- uid: System.Web.UI.ScriptManager.GetStateString*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: GetStateString
  nameWithType: ScriptManager.GetStateString
- uid: System.Web.UI.ScriptManager.IsDebuggingEnabled*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: ScriptManager.IsDebuggingEnabled
- uid: System.Web.UI.ScriptManager.IsInAsyncPostBack*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: IsInAsyncPostBack
  nameWithType: ScriptManager.IsInAsyncPostBack
- uid: System.Web.UI.ScriptManager.IsNavigating*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: IsNavigating
  nameWithType: ScriptManager.IsNavigating
- uid: System.Web.UI.ScriptManager.LoadPostData*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: LoadPostData
  nameWithType: ScriptManager.LoadPostData
- uid: System.Web.UI.ScriptManager.LoadScriptsBeforeUI*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: LoadScriptsBeforeUI
  nameWithType: ScriptManager.LoadScriptsBeforeUI
- uid: System.Web.UI.ScriptManager.OnAsyncPostBackError*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnAsyncPostBackError
  nameWithType: ScriptManager.OnAsyncPostBackError
- uid: System.Web.UI.ScriptManager.OnInit*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnInit
  nameWithType: ScriptManager.OnInit
- uid: System.Web.UI.ScriptManager.OnPreRender*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnPreRender
  nameWithType: ScriptManager.OnPreRender
- uid: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnResolveCompositeScriptReference
  nameWithType: ScriptManager.OnResolveCompositeScriptReference
- uid: System.Web.UI.ScriptManager.OnResolveScriptReference*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: OnResolveScriptReference
  nameWithType: ScriptManager.OnResolveScriptReference
- uid: System.Web.UI.ScriptManager.ProfileService*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ProfileService
  nameWithType: ScriptManager.ProfileService
- uid: System.Web.UI.ScriptManager.RaisePostBackEvent*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: ScriptManager.RaisePostBackEvent
- uid: System.Web.UI.ScriptManager.RaisePostDataChangedEvent*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RaisePostDataChangedEvent
  nameWithType: ScriptManager.RaisePostDataChangedEvent
- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: ScriptManager.RegisterArrayDeclaration
- uid: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterAsyncPostBackControl
  nameWithType: ScriptManager.RegisterAsyncPostBackControl
- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: ScriptManager.RegisterClientScriptBlock
- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptInclude
  nameWithType: ScriptManager.RegisterClientScriptInclude
- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterClientScriptResource
  nameWithType: ScriptManager.RegisterClientScriptResource
- uid: System.Web.UI.ScriptManager.RegisterDataItem*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterDataItem
  nameWithType: ScriptManager.RegisterDataItem
- uid: System.Web.UI.ScriptManager.RegisterDispose*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterDispose
  nameWithType: ScriptManager.RegisterDispose
- uid: System.Web.UI.ScriptManager.RegisterExpandoAttribute*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterExpandoAttribute
  nameWithType: ScriptManager.RegisterExpandoAttribute
- uid: System.Web.UI.ScriptManager.RegisterExtenderControl<TExtenderControl>*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterExtenderControl<TExtenderControl>
  nameWithType: ScriptManager.RegisterExtenderControl<TExtenderControl>
- uid: System.Web.UI.ScriptManager.RegisterHiddenField*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterHiddenField
  nameWithType: ScriptManager.RegisterHiddenField
- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterNamedClientScriptResource
  nameWithType: ScriptManager.RegisterNamedClientScriptResource
- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: ScriptManager.RegisterOnSubmitStatement
- uid: System.Web.UI.ScriptManager.RegisterPostBackControl*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterPostBackControl
  nameWithType: ScriptManager.RegisterPostBackControl
- uid: System.Web.UI.ScriptManager.RegisterScriptControl<TScriptControl>*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterScriptControl<TScriptControl>
  nameWithType: ScriptManager.RegisterScriptControl<TScriptControl>
- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterScriptDescriptors
  nameWithType: ScriptManager.RegisterScriptDescriptors
- uid: System.Web.UI.ScriptManager.RegisterStartupScript*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RegisterStartupScript
  nameWithType: ScriptManager.RegisterStartupScript
- uid: System.Web.UI.ScriptManager.Render*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Render
  nameWithType: ScriptManager.Render
- uid: System.Web.UI.ScriptManager.RoleService*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: RoleService
  nameWithType: ScriptManager.RoleService
- uid: System.Web.UI.ScriptManager.ScriptMode*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ScriptMode
  nameWithType: ScriptManager.ScriptMode
- uid: System.Web.UI.ScriptManager.ScriptPath*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ScriptPath
  nameWithType: ScriptManager.ScriptPath
- uid: System.Web.UI.ScriptManager.ScriptResourceMapping*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: ScriptResourceMapping
  nameWithType: ScriptManager.ScriptResourceMapping
- uid: System.Web.UI.ScriptManager.Scripts*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Scripts
  nameWithType: ScriptManager.Scripts
- uid: System.Web.UI.ScriptManager.Services*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Services
  nameWithType: ScriptManager.Services
- uid: System.Web.UI.ScriptManager.SetFocus*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: SetFocus
  nameWithType: ScriptManager.SetFocus
- uid: System.Web.UI.ScriptManager.SupportsPartialRendering*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: SupportsPartialRendering
  nameWithType: ScriptManager.SupportsPartialRendering
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData
  nameWithType: ScriptManager.System.Web.UI.IPostBackDataHandler.LoadPostData
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
  nameWithType: ScriptManager.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: ScriptManager.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.ScriptManager.Visible*
  parent: System.Web.UI.ScriptManager
  isExternal: false
  name: Visible
  nameWithType: ScriptManager.Visible
