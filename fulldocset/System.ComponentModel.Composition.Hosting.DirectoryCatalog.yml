### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  id: DirectoryCatalog
  children:
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  langs:
  - csharp
  name: DirectoryCatalog
  nameWithType: DirectoryCatalog
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  type: Class
  summary: "发现在指定目录中的程序集的特性化的部分。"
  remarks: "DirectoryCatalog 对象可用于分析指定的目录的内容。 动态链接库 (DLL) 文件中包含的任何特性化的部分提取，并可通过目录中。若要将分析限制到特定的 Dll，可以指定搜索模式通过使用与相同的语法<xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName>方法。</xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName>      1> [!WARNING]&1;> 的指定的目录不应允许对非管理员的访问。 例如，使用包含 Internet 临时文件的文件夹可以创建漏洞在你的应用程序。       此类型实现<xref:System.IDisposable>接口。</xref:System.IDisposable> 完成后使用类型的操作后，你应释放类型直接或间接。 若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</xref:System.IDisposable.Dispose%2A> 若要间接释放类型，使用一种语言构造如`using`（在 C# 中) 或`Using`（在 Visual Basic 中)。 有关详细信息，请参阅中的&quot;使用实现 IDisposable 的对象&quot;部分<xref:System.IDisposable>接口主题。</xref:System.IDisposable>"
  example:
  - "The following example creates a DirectoryCatalog object that searches the directory the application runs from for parts. It uses a simple import to test the catalog. To fulfill this import, a DLL in the directory must have a matching export, as illustrated in the second code block.  \n  \n [!code-cs[Composition.DirectoryCatalog#1](~/add/codesnippet/csharp/consoleapplication7/program.cs#1)]\n [!code-vb[Composition.DirectoryCatalog#1](~/add/codesnippet/visualbasic/consoleapplication8/module1.vb#1)]  \n  \n To create the matching export, the following code must be in a DLL file. To create a DLL file in Visual Studio, add a new project of the type \"Class Library\" to your solution, and place this code in it.  \n  \n [!code-cs[Composition.DirectoryCatalog#2](~/add/codesnippet/csharp/classlibrary1/class1.cs#2)]\n [!code-vb[Composition.DirectoryCatalog#2](~/add/codesnippet/visualbasic/classlibrary1/class1.vb#2)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.DirectoryCatalog/DirectoryCatalogDebuggerProxy))]

      public class DirectoryCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, System.ComponentModel.Composition.Primitives.ICompositionElement
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  implements:
  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  - System.ComponentModel.Composition.Primitives.ICompositionElement
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>类通过<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>对象根据指定的目录路径中的所有 DLL 文件。"
  syntax:
    content: public DirectoryCatalog (string path);
    parameters:
    - id: path
      type: System.String
      description: "要扫描的程序集将添加到该目录的目录路径。       路径必须是绝对或相对<xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定<code> path </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个特定于实现的无效字符。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定<code> path </code>，和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的计算机，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>类通过<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>对象基于 DLL 的所有文件中指定的源的指定的目录路径部分。"
  syntax:
    content: public DirectoryCatalog (string path, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "要扫描的程序集将添加到该目录的目录路径。       路径必须是绝对或相对<xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "诊断用于标识部分的源的元素。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定<code> path </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个特定于实现的无效字符。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定<code> path </code>，和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的计算机，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  id: '#ctor(System.String,System.Reflection.ReflectionContext)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>类通过<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>对象基于在指定的目录路径中，指定的反射上下文中的所有 DLL 文件。"
  syntax:
    content: public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext);
    parameters:
    - id: path
      type: System.String
      description: "要扫描的程序集将添加到该目录的目录路径。       路径必须是绝对或相对<xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "用于创建部件的上下文。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定<code> path </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个特定于实现的无效字符。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定<code> path </code>，和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的计算机，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>类通过<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>与指定的目录路径中指定的搜索模式匹配的对象。"
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern);
    parameters:
    - id: path
      type: System.String
      description: "要扫描的程序集将添加到该目录的目录路径。       路径必须是绝对或相对<xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: searchPattern
      type: System.String
      description: "搜索字符串中。 字符串的格式应为与指定的相同<xref:System.IO.Directory.GetFiles*>方法。</xref:System.IO.Directory.GetFiles*>"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定<code> path </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个特定于实现的无效字符。       -或-<code>searchPattern</code>不包含有效模式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定<code> path </code>，和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的计算机，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>类通过<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>对象基于在指定的目录路径中，指定的反射上下文中的所有 DLL 文件。"
  syntax:
    content: public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "要扫描的程序集将添加到该目录的目录路径。       路径必须是绝对或相对<xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "用于创建部件的上下文。"
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "诊断用于标识部分的源的元素。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定<code> path </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个特定于实现的无效字符。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定<code> path </code>，和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的计算机，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>类通过<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>对象根据指定的源的部件的指定的目录路径中的指定的搜索模式。"
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "要扫描的程序集将添加到该目录的目录路径。       路径必须是绝对或相对<xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: searchPattern
      type: System.String
      description: "搜索字符串中。 字符串的格式应为与指定的相同<xref:System.IO.Directory.GetFiles*>方法。</xref:System.IO.Directory.GetFiles*>"
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "诊断用于标识部分的源的元素。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定<code> path </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个特定于实现的无效字符。       -或-<code>searchPattern</code>不包含有效模式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定<code> path </code>，和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的计算机，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  id: '#ctor(System.String,System.String,System.Reflection.ReflectionContext)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>类通过<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>对象根据指定的目录路径，使用指定的反射上下文中指定的搜索模式。"
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext);
    parameters:
    - id: path
      type: System.String
      description: "要扫描的程序集将添加到该目录的目录路径。       路径必须是绝对或相对<xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: searchPattern
      type: System.String
      description: "搜索字符串中。 字符串的格式应为与指定的相同<xref:System.IO.Directory.GetFiles*>方法。</xref:System.IO.Directory.GetFiles*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "用于创建部件的上下文。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定<code> path </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个特定于实现的无效字符。       -或-<code>searchPattern</code>不包含有效模式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定<code> path </code>，和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的计算机，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "初始化的新实例<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>类通过<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>对象根据指定的目录路径，使用指定的反射上下文中指定的搜索模式。"
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "要扫描的程序集将添加到该目录的目录路径。       路径必须是绝对或相对<xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: searchPattern
      type: System.String
      description: "搜索字符串中。 字符串的格式应为与指定的相同<xref:System.IO.Directory.GetFiles*>方法。</xref:System.IO.Directory.GetFiles*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "用于创建部件的上下文。"
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "诊断用于标识部分的源的元素。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定<code> path </code>无效 （例如，它位于未映射的驱动器上）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "调用方没有所要求的权限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是零长度字符串，仅包含空格，或包含一个或多个特定于实现的无效字符。       -或-<code>searchPattern</code>不包含有效模式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定<code> path </code>，和 / 或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的计算机，路径必须少于 248 个字符，文件名必须少于 260 个字符。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  id: Changed
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Changed
  nameWithType: DirectoryCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "发生目录的内容已更改时。"
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changed;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  id: Changing
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Changing
  nameWithType: DirectoryCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "更改目录时发生。"
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changing;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "要添加。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectoryCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "释放由非托管的资源<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> ，还可以释放托管的资源。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要释放托管和非托管资源;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>若要仅释放非托管的资源。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  id: FullPath
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取通过观察到的已翻译的绝对路径<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>对象。"
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "未遵循目录的已翻译的绝对路径。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DirectoryCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "返回循环访问目录的枚举。"
  syntax:
    content: public override System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
      description: "一个枚举器可用于循环访问目录。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: GetExports(ImportDefinition)
  nameWithType: DirectoryCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(ImportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取表示指定的导入定义的约束相匹配的导出定义。"
  syntax:
    content: public override System.Collections.Generic.IEnumerable<Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "条件<xref href=&quot;System.ComponentModel.Composition.Primitives.ExportDefinition&quot;></xref>要返回的对象。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
      description: "包含的对象的集合<xref href=&quot;System.ComponentModel.Composition.Primitives.ExportDefinition&quot;></xref>对象和与其相关联<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>对象指定的约束相匹配<code> definition </code>。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref>已释放对象。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>definition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  id: LoadedFiles
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取当前目录中加载的文件的集合。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> LoadedFiles { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "在目录中当前加载的文件集合。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "引发<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "包含事件数据的对象。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "引发<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "包含事件数据的对象。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  id: Path
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Path
  nameWithType: DirectoryCatalog.Path
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取通过观察到的路径<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>对象。"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "遵循该目录的路径。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  id: Refresh
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Refresh()
  nameWithType: DirectoryCatalog.Refresh()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "刷新<xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;></xref>具有最新文件的目录中与搜索模式匹配的对象。"
  remarks: "如果文件已添加到目录，它们也添加到目录。 如果文件已从目录中删除，它们还会删除从目录中。 为已删除的文件，该程序集不能从过程中，因此卸载<xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition>对象将仅从目录删除这些文件。</xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition>"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  id: SearchPattern
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取传入的构造函数的搜索模式<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;></xref>对象。"
  syntax:
    content: public string SearchPattern { get; }
    return:
      type: System.String
      description: "该目录的搜索模式使用查找文件。 默认值为 *.dll，返回所有 DLL 文件。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  id: System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  isEii: true
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取目录的显示名称。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>实例被强制转换为<xref:System.ComponentModel.Composition.Primitives.ICompositionElement>接口。</xref:System.ComponentModel.Composition.Primitives.ICompositionElement> </xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>"
  syntax:
    content: string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }
    return:
      type: System.String
      description: "包含目录的用户可读的显示名称的字符串。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  id: System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  isEii: true
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取目录所源自的组合元素。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>实例被强制转换为<xref:System.ComponentModel.Composition.Primitives.ICompositionElement>接口。</xref:System.ComponentModel.Composition.Primitives.ICompositionElement> </xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>"
  syntax:
    content: System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }
    return:
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  id: ToString
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: ToString()
  nameWithType: DirectoryCatalog.ToString()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "获取目录的字符串表示。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "目录的字符串表示形式。"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
- uid: System.ComponentModel.Composition.Primitives.ICompositionElement
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ICompositionElement
  nameWithType: ICompositionElement
  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
- uid: System.Reflection.ReflectionContext
  parent: System.Reflection
  isExternal: true
  name: ReflectionContext
  nameWithType: ReflectionContext
  fullName: System.Reflection.ReflectionContext
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Changed
  nameWithType: DirectoryCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ComposablePartCatalogChangeEventArgs>
  nameWithType: EventHandler<ComposablePartCatalogChangeEventArgs>
  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    name: ComposablePartCatalogChangeEventArgs
    nameWithType: ComposablePartCatalogChangeEventArgs
    fullName: ComposablePartCatalogChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Changing
  nameWithType: DirectoryCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectoryCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetEnumerator()
  nameWithType: DirectoryCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ComposablePartDefinition>
  nameWithType: IEnumerator<ComposablePartDefinition>
  fullName: System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetExports(ImportDefinition)
  nameWithType: DirectoryCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(ImportDefinition)
- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  nameWithType: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ComposablePartCatalogChangeEventArgs
  nameWithType: ComposablePartCatalogChangeEventArgs
  fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Path
  nameWithType: DirectoryCatalog.Path
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Refresh()
  nameWithType: DirectoryCatalog.Refresh()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh()
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: ToString()
  nameWithType: DirectoryCatalog.ToString()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString()
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog
  nameWithType: DirectoryCatalog.DirectoryCatalog
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Dispose
  nameWithType: DirectoryCatalog.Dispose
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetEnumerator
  nameWithType: DirectoryCatalog.GetEnumerator
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetExports
  nameWithType: DirectoryCatalog.GetExports
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanged
  nameWithType: DirectoryCatalog.OnChanged
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanging
  nameWithType: DirectoryCatalog.OnChanging
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Path
  nameWithType: DirectoryCatalog.Path
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Refresh
  nameWithType: DirectoryCatalog.Refresh
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: ToString
  nameWithType: DirectoryCatalog.ToString
