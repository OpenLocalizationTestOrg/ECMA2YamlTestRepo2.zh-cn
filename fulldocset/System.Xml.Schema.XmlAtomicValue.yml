### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlAtomicValue
  id: XmlAtomicValue
  children:
  - System.Xml.Schema.XmlAtomicValue.Clone
  - System.Xml.Schema.XmlAtomicValue.IsNode
  - System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  - System.Xml.Schema.XmlAtomicValue.ToString
  - System.Xml.Schema.XmlAtomicValue.TypedValue
  - System.Xml.Schema.XmlAtomicValue.Value
  - System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  - System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  - System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  - System.Xml.Schema.XmlAtomicValue.ValueAsInt
  - System.Xml.Schema.XmlAtomicValue.ValueAsLong
  - System.Xml.Schema.XmlAtomicValue.ValueType
  - System.Xml.Schema.XmlAtomicValue.XmlType
  langs:
  - csharp
  name: XmlAtomicValue
  nameWithType: XmlAtomicValue
  fullName: System.Xml.Schema.XmlAtomicValue
  type: Class
  summary: "表示已验证的 XML 元素或属性的类型化的值。 XmlAtomicValue 类不能被继承。"
  syntax:
    content: 'public sealed class XmlAtomicValue : System.Xml.XPath.XPathItem, ICloneable'
  inheritance:
  - System.Object
  - System.Xml.XPath.XPathItem
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Xml.XPath.XPathItem.ValueAs(System.Type)
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.Clone
  id: Clone
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: Clone()
  nameWithType: XmlAtomicValue.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "返回一份<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;></xref>对象。"
  syntax:
    content: public System.Xml.Schema.XmlAtomicValue Clone ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlAtomicValue
      description: "<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;> </xref>对象的副本<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;></xref>对象。"
  overload: System.Xml.Schema.XmlAtomicValue.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.IsNode
  id: IsNode
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
  fullName: System.Xml.Schema.XmlAtomicValue.IsNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取一个值，该值指示验证的 XML 元素或属性一个 XPath 节点还是一个原子值。"
  remarks: "IsNode 属性始终返回`false`。"
  syntax:
    content: public override bool IsNode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已验证的 XML 元素或属性是一个 XPath 节点;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果经验证的 XML 元素或属性是一个原子值。"
  overload: System.Xml.Schema.XmlAtomicValue.IsNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: XmlAtomicValue.System.ICloneable.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "有关此成员的说明，请参阅&lt;xref:System.Xml.Schema.XmlAtomicValue.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Xml.Schema.XmlAtomicValue>实例被强制转换为<xref:System.ICloneable>接口。</xref:System.ICloneable> </xref:System.Xml.Schema.XmlAtomicValue>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "返回一份<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;></xref>对象。"
  overload: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ToString
  id: ToString
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ToString()
  nameWithType: XmlAtomicValue.ToString()
  fullName: System.Xml.Schema.XmlAtomicValue.ToString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>已验证的 XML 元素或属性的值。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>已验证的 XML 元素或属性的值。"
  overload: System.Xml.Schema.XmlAtomicValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue
  id: TypedValue
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
  fullName: System.Xml.Schema.XmlAtomicValue.TypedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取作为最合适的 Microsoft.NET Framework 类型，根据其架构类型的装箱对象的当前已验证的 XML 元素或属性。"
  remarks: "如果项的值相对于其指定的架构类型无效，TypedValue 属性的值的值等效<xref:System.Xml.Schema.XmlAtomicValue.Value%2A>属性。</xref:System.Xml.Schema.XmlAtomicValue.Value%2A>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override object TypedValue { get; }
    return:
      type: System.Object
      description: "当前作为最合适的.NET Framework 类型的装箱对象验证 XML 元素或属性。"
  overload: System.Xml.Schema.XmlAtomicValue.TypedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.Value
  id: Value
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: Value
  nameWithType: XmlAtomicValue.Value
  fullName: System.Xml.Schema.XmlAtomicValue.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>已验证的 XML 元素或属性的值。"
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>已验证的 XML 元素或属性的值。"
  overload: System.Xml.Schema.XmlAtomicValue.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "使用指定的类型作为返回已验证的 XML 元素或属性的值<xref:System.Xml.IXmlNamespaceResolver>对象指定用来解析命名空间前缀。</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "ValueAs 方法尝试将已验证的 XML 元素或属性的值转换为指定的 Microsoft.NET Framework 类型。       <xref:System.Xml.IXmlNamespaceResolver>对象用于解析与类型转换有关的命名空间前缀。</xref:System.Xml.IXmlNamespaceResolver> 例如，转换时`xs:QName`到`xs:string`。       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override object ValueAs (Type type, System.Xml.IXmlNamespaceResolver nsResolver);
    parameters:
    - id: type
      type: System.Type
      description: "要返回已验证的 XML 元素或属性的值的类型。"
    - id: nsResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>对象用于解析命名空间前缀。</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Object
      description: "已验证的 XML 元素或作为请求的类型的属性的值。"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAs*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "经验证的 XML 元素或属性的值不是目标类型的正确格式。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换无效。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  id: ValueAsBoolean
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "作为一种<xref:System.Boolean>。</xref:System.Boolean>获取经验证的 XML 元素或属性的值"
  remarks: "ValueAsBoolean 属性尝试将已验证的 XML 元素或属性的值转换为 Microsoft.NET Framework<xref:System.Boolean>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.Boolean>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override bool ValueAsBoolean { get; }
    return:
      type: System.Boolean
      description: "经验证的 XML 元素或属性的值作为一种<xref:System.Boolean>。</xref:System.Boolean>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "经验证的 XML 元素或属性的值不是正确的格式<xref:System.Boolean>类型。</xref:System.Boolean>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.Boolean>无效。</xref:System.Boolean>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  id: ValueAsDateTime
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "作为一种<xref:System.DateTime>。</xref:System.DateTime>获取经验证的 XML 元素或属性的值"
  remarks: "ValueAsDateTime 属性尝试将已验证的 XML 元素或属性的值转换为 Microsoft.NET Framework<xref:System.DateTime>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.DateTime>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override DateTime ValueAsDateTime { get; }
    return:
      type: System.DateTime
      description: "经验证的 XML 元素或属性的值作为一种<xref:System.DateTime>。</xref:System.DateTime>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "经验证的 XML 元素或属性的值不是正确的格式<xref:System.DateTime>类型。</xref:System.DateTime>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.DateTime>无效。</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  id: ValueAsDouble
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "作为一种<xref:System.Double>。</xref:System.Double>获取经验证的 XML 元素或属性的值"
  remarks: "ValueAsDouble 属性尝试将已验证的 XML 元素或属性的值转换为 Microsoft.NET Framework<xref:System.Double>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.Double>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override double ValueAsDouble { get; }
    return:
      type: System.Double
      description: "经验证的 XML 元素或属性的值作为一种<xref:System.Double>。</xref:System.Double>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsDouble*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "经验证的 XML 元素或属性的值不是正确的格式<xref:System.Double>类型。</xref:System.Double>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.Double>无效。</xref:System.Double>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  id: ValueAsInt
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取已验证的 XML 元素或属性的值作为<xref:System.Int32>.</xref:System.Int32>"
  remarks: "ValueAsInt 属性尝试将已验证的 XML 元素或属性的值转换为 Microsoft.NET Framework<xref:System.Int32>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.Int32>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override int ValueAsInt { get; }
    return:
      type: System.Int32
      description: "经验证的 XML 元素或属性的值为<xref:System.Int32>。</xref:System.Int32>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsInt*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "经验证的 XML 元素或属性的值不是正确的格式<xref:System.Int32>类型。</xref:System.Int32>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.Int32>无效。</xref:System.Int32>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  id: ValueAsLong
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取已验证的 XML 元素或属性的值作为<xref:System.Int64>.</xref:System.Int64>"
  remarks: "ValueAsLong 属性尝试将已验证的 XML 元素或属性的值转换为 Microsoft.NET Framework<xref:System.Int64>根据 XPath 2.0 规则项的类型强制转换的类型。</xref:System.Int64>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override long ValueAsLong { get; }
    return:
      type: System.Int64
      description: "经验证的 XML 元素或属性的值为<xref:System.Int64>。</xref:System.Int64>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsLong*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "经验证的 XML 元素或属性的值不是正确的格式<xref:System.Int64>类型。</xref:System.Int64>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "尝试强制转换为<xref:System.Int64>无效。</xref:System.Int64>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "尝试强制转换会导致溢出。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueType
  id: ValueType
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
  fullName: System.Xml.Schema.XmlAtomicValue.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取已验证的 XML 元素或属性的 Microsoft.NET Framework 类型。"
  remarks: "ValueType 属性获取的验证的 XML 元素或属性的类型化值的.NET Framework 类型。       例如，类型的元素`xs:int`将具有的 ValueType<xref:System.Int32>默认情况下。</xref:System.Int32> 但是，ValueType 可能是任何一种可以映射到有效类型`xs:int`，如<xref:System.Int16>或<xref:System.Double>.</xref:System.Double> </xref:System.Int16>       有关类型的详细信息，支持在<xref:System.Xml?displayProperty=fullName>命名空间，请参阅[System.Xml 类中的类型支持](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override Type ValueType { get; }
    return:
      type: System.Type
      description: "已验证的 XML 元素或属性的.NET Framework 类型。 默认值为<xref:System.String>。</xref:System.String>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.XmlType
  id: XmlType
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
  fullName: System.Xml.Schema.XmlAtomicValue.XmlType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "获取<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref>经验证的 XML 元素或属性。"
  remarks: "Xml 类型属性获取<xref:System.Xml.Schema.XmlSchemaType>经验证的 XML 元素或属性。</xref:System.Xml.Schema.XmlSchemaType> 例如，<xref:System.Xml.Schema.XmlSchemaSimpleType>或<xref:System.Xml.Schema.XmlSchemaComplexType>。</xref:System.Xml.Schema.XmlSchemaComplexType> </xref:System.Xml.Schema.XmlSchemaSimpleType>"
  syntax:
    content: public override System.Xml.Schema.XmlSchemaType XmlType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref>经验证的 XML 元素或属性。"
  overload: System.Xml.Schema.XmlAtomicValue.XmlType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XPath.XPathItem
  isExternal: false
  name: System.Xml.XPath.XPathItem
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Xml.Schema.XmlAtomicValue.Clone
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Clone()
  nameWithType: XmlAtomicValue.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.Clone()
- uid: System.Xml.Schema.XmlAtomicValue
  parent: System.Xml.Schema
  isExternal: false
  name: XmlAtomicValue
  nameWithType: XmlAtomicValue
  fullName: System.Xml.Schema.XmlAtomicValue
- uid: System.Xml.Schema.XmlAtomicValue.IsNode
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
  fullName: System.Xml.Schema.XmlAtomicValue.IsNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: XmlAtomicValue.System.ICloneable.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlAtomicValue.ToString
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ToString()
  nameWithType: XmlAtomicValue.ToString()
  fullName: System.Xml.Schema.XmlAtomicValue.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
  fullName: System.Xml.Schema.XmlAtomicValue.TypedValue
- uid: System.Xml.Schema.XmlAtomicValue.Value
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Value
  nameWithType: XmlAtomicValue.Value
  fullName: System.Xml.Schema.XmlAtomicValue.Value
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsInt
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsLong
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Xml.Schema.XmlAtomicValue.ValueType
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
  fullName: System.Xml.Schema.XmlAtomicValue.ValueType
- uid: System.Xml.Schema.XmlAtomicValue.XmlType
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
  fullName: System.Xml.Schema.XmlAtomicValue.XmlType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlAtomicValue.Clone*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Clone
  nameWithType: XmlAtomicValue.Clone
- uid: System.Xml.Schema.XmlAtomicValue.IsNode*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: XmlAtomicValue.System.ICloneable.Clone
- uid: System.Xml.Schema.XmlAtomicValue.ToString*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ToString
  nameWithType: XmlAtomicValue.ToString
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
- uid: System.Xml.Schema.XmlAtomicValue.Value*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Value
  nameWithType: XmlAtomicValue.Value
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAs
  nameWithType: XmlAtomicValue.ValueAs
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
- uid: System.Xml.Schema.XmlAtomicValue.ValueType*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
- uid: System.Xml.Schema.XmlAtomicValue.XmlType*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
