### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcConnectionStringBuilder
  id: OdbcConnectionStringBuilder
  children:
  - System.Data.Odbc.OdbcConnectionStringBuilder.#ctor
  - System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)
  - System.Data.Odbc.OdbcConnectionStringBuilder.Clear
  - System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.Odbc.OdbcConnectionStringBuilder.Driver
  - System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
  - System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)
  - System.Data.Odbc.OdbcConnectionStringBuilder.Keys
  - System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)
  - System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  langs:
  - csharp
  name: OdbcConnectionStringBuilder
  nameWithType: OdbcConnectionStringBuilder
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder
  type: Class
  summary: "提供一种简单的方法来创建和管理使用的连接字符串的内容<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>类。"
  remarks: "连接字符串生成器，开发人员可以以编程方式创建语法正确的连接字符串以及分析和重新生成现有的连接字符串使用的类属性和方法。 连接字符串生成器提供了与已知的键/值对相对应的属性允许的 ODBC 连接和开发人员可以添加的任何其他连接字符串值的任意键/值对强类型化。       无需应用程序的一部分创建的连接字符串的开发人员可以使用 OdbcConnectionStringBuilder 类生成和修改连接字符串。 使用该类还可以轻松管理存储在应用程序配置文件中的连接字符串。 OdbcConnectionStringBuilder 仅对有限的一组已知的键/值对执行检查。 因此，此类可以用于创建无效的连接字符串。 下表列出在 OdbcConnectionStringBuilder 类和其默认值及其对应的属性以及特定的已知的键。 除了这些特定的值，开发人员可以添加到 OdbcConnectionStringBuilder 实例中包含的集合的任何键/值对。      |密钥 |属性 |注释 |默认值 |  |---------|--------------|-------------|-------------------|  |驱动程序 |<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>|开发人员不应包含大括号周围的驱动程序名称时它们设置<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>属性。</xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> </xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> OdbcConnectionStringBuilder 实例根据需要添加大括号。 |空字符串 |  |DSN |<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A>||空字符串 |      如果任何值 (以外<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>值) 的连接字符串包含分号 （;），则 OdbcConnectionStringBuilder 环绕使用引号将连接字符串中的值。</xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> </xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A> 为了避免此问题<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>此值用括号括起经常包含分号，始终 OdbcConnectionStringBuilder 类的值。</xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> ODBC 规范表示必须用大括号，括起来驱动程序的值包含分号，此类为你处理此。       <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A>属性处理将恶意代码的尝试。</xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A> 例如，下面的代码使用默认<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A>属性 （C# 中的索引器） 正确转义嵌套的键/值对。</xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A>       [Visual Basic]     ```   Dim builder As _    New System.Data.Odbc.OdbcConnectionStringBuilder   &quot; Take advantage of the Driver property.    builder.Driver = &quot;SQL Server&quot;   builder(&quot;Server&quot;) = &quot;MyServer;NewValue=Bad&quot;   Console.WriteLine(builder.ConnectionString)   ``` [C#]```   System.Data.Odbc.OdbcConnectionStringBuilder builder =      new System.Data.Odbc.OdbcConnectionStringBuilder();   // Take advantage of the Driver property.    builder.Driver = &quot;SQL Server&quot;;   builder[&quot;Server&quot;] = &quot;MyServer;NewValue=Bad&quot;;   Console.WriteLine(builder.ConnectionString);   ```结果是以安全方式处理无效值以下连接字符串︰```   Driver={SQL Server};Server=&quot;MyServer;NewValue=Bad&quot;   ```"
  example:
  - "The following console application builds connection strings for several ODBC databases. First, the example creates a connection string for a Microsoft Access database. It then creates a connection string for an IBM DB2 database. The example also parses an existing connection string, and demonstrates various ways of manipulating the contents of the connection string.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how OdbcConnectionStringBuilder works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks OdbcConnectionStringBuilder#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_2_1.cs)]\n [!code-vb[DataWorks OdbcConnectionStringBuilder#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_2_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Driver")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcConnectionStringBuilder/OdbcConnectionStringBuilderConverter))]

      public sealed class OdbcConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.Common.DbConnectionStringBuilder.IsFixedSize
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  - System.Data.Common.DbConnectionStringBuilder.Values
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: OdbcConnectionStringBuilder()
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder()
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.OdbcConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>类。"
  syntax:
    content: public OdbcConnectionStringBuilder ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: OdbcConnectionStringBuilder(String)
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.OdbcConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "初始化的新实例<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>类。 提供的连接字符串为实例的内部连接信息提供数据。"
  remarks: "您可以传入的连接字符串的构造函数中，也可以设置<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>属性显式。</xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> 行为是相同的两种方式。"
  example:
  - "The following example creates multiple <xref:System.Data.Odbc.OdbcConnectionStringBuilder> instances, passing a different connection string to the constructor in each case. Note that the ordering of elements within the connection string may be modified when you retrieve the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property. Also note that keys other than the predefined \"Dsn\" and \"Driver\" keys are converted to lowercase by the <xref:System.Data.Odbc.OdbcConnectionStringBuilder> class.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.Odbc.OdbcConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks OdbcConnectionStringBuilder.Multiple#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_5_1.cs)]\n [!code-vb[DataWorks OdbcConnectionStringBuilder.Multiple#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_5_1.vb)]"
  syntax:
    content: public OdbcConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "对象的内部连接信息的基础。 分析为键/值对。"
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "连接字符串格式不正确 （可能缺少必需的&quot;=&quot;中的键/值对）。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: OdbcConnectionStringBuilder.Clear()
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "清除的内容<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>实例。"
  remarks: "Clear 方法中移除所有键/值对，从<xref:System.Data.Odbc.OdbcConnectionStringBuilder>并重置<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>和<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A>为其默认值的属性。</xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A> </xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> </xref:System.Data.Odbc.OdbcConnectionStringBuilder> Clear 方法还将设置<xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>属性设为 0 和<xref:System.Data.Odbc.OdbcConnectionStringBuilder.ConnectionString>属性为空字符串。</xref:System.Data.Odbc.OdbcConnectionStringBuilder.ConnectionString> </xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>"
  example:
  - >-
    [!code-vb[DataWorks OdbcConnectionStringBuilder.Clear#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_8_1.vb)]
     [!code-cs[DataWorks OdbcConnectionStringBuilder.Clear#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_8_1.cs)]
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: OdbcConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "确定是否<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>包含特定键。"
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the ContainsKey method.  \n  \n [!code-vb[DataWorks OdbcConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_2_1.vb)]\n [!code-cs[DataWorks OdbcConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_2_1.cs)]"
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "要查找中的键<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>包含的元素，具有指定键; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>为 null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Driver
  id: Driver
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Driver
  nameWithType: OdbcConnectionStringBuilder.Driver
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Driver
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置与连接关联的 ODBC 驱动程序的名称。"
  remarks: "如果你尝试设置属性时中, 传递的值为 null，将重置的驱动程序属性。 如果未设置值，并且在开发人员尝试检索该属性，则返回值是`String.Empty`。 此属性与连接字符串内的&quot;驱动程序&quot;键相对应。"
  syntax:
    content: public string Driver { get; set; }
    return:
      type: System.String
      description: "驱动程序属性的值或<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>如果未提供。"
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Driver*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
  id: Dsn
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Dsn
  nameWithType: OdbcConnectionStringBuilder.Dsn
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置与连接关联的数据源名称 (DSN) 的名称。"
  remarks: "如果你尝试设置属性时中, 传递的值为 null，将重置 Dsn 属性。 如果未设置值，并且在开发人员尝试检索该属性，则返回值是`String.Empty`。 此属性与连接字符串内的&quot;Dsn&quot;键相对应。"
  syntax:
    content: public string Dsn { get; set; }
    return:
      type: System.String
      description: "Dsn 属性的值或<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>如果未提供。"
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: OdbcConnectionStringBuilder.Item(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取或设置与指定键关联的值。 在 C# 中，此属性是索引器。"
  remarks: "当设置此属性，如果在字典中已存在指定的键时，值将替换为;否则，创建一个新的元素。"
  example:
  - "The following code, in a console application, creates a new <xref:System.Data.Odbc.OdbcConnectionStringBuilder> and adds key/value pairs to its connection string, using the Item property.  \n  \n [!code-vb[DataWorks OdbcConnectionStringBuilder.Item#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_2_1.vb)]\n [!code-cs[DataWorks OdbcConnectionStringBuilder.Item#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_2_1.cs)]"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "要获取或设置项的键。"
    return:
      type: System.Object
      description: "与指定键关联的值。"
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "连接字符串格式不正确 （可能缺少必需的&quot;=&quot;中的键/值对）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>为空引用 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: OdbcConnectionStringBuilder.Keys
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "获取<xref:System.Collections.ICollection>包含中的键<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;> </xref>。</xref:System.Collections.ICollection>"
  remarks: "中的值的顺序<xref:System.Collections.ICollection>是中的关联值顺序相同<xref:System.Collections.ICollection>返回<xref:System.Data.Common.DbConnectionStringBuilder.Values%2A>属性。</xref:System.Data.Common.DbConnectionStringBuilder.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  example:
  - "The following console application example creates a new <xref:System.Data.Odbc.OdbcConnectionStringBuilder>. The code loops through the <xref:System.Collections.ICollection> returned by the Keys property displaying the key/value pairs.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.Odbc.OdbcConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-vb[DataWorks OdbcConnectionStringBuilder.Keys#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_0_1.vb)]\n [!code-cs[DataWorks OdbcConnectionStringBuilder.Keys#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_0_1.cs)]"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含中的键<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;> </xref>。</xref:System.Collections.ICollection>"
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: OdbcConnectionStringBuilder.Remove(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "具有指定键中移除的项<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>实例。"
  remarks: "删除方法返回一个值，指示其是否成功，因为它不需要查找的键是否存在之前尝试删除的键/值对从<xref:System.Data.Odbc.OdbcConnectionStringBuilder>实例。</xref:System.Data.Odbc.OdbcConnectionStringBuilder>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnectionStringBuilder> instance and demonstrates the behavior of the Remove method.  \n  \n [!code-cs[DataWorks OdbcConnectionStringBuilder.Remove#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_7_1.cs)]\n [!code-vb[DataWorks OdbcConnectionStringBuilder.Remove#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_7_1.vb)]"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "在此连接字符串移除的键/值对的键<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果该密钥的连接字符串中存在并被移除，则<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果该键不存在。"
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>为 null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: OdbcConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "检索与提供的键从此相对应的值<xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;> </xref>。"
  remarks: "TryGetValue 方法允许开发人员安全地检索的值从<xref:System.Data.Odbc.OdbcConnectionStringBuilder>而无需验证提供的键名是否为有效的键名。</xref:System.Data.Odbc.OdbcConnectionStringBuilder> 因为 TryGetValue 不会引发异常，在不存在的键中传递时，你无需在检索其值之前查找键。 调用具有不存在的键 TryGetValue 放置值为 null (`Nothing`在 Visual Basic 中) 中`value`参数。"
  example:
  - "The following example demonstrates the behavior of the TryGetValue method.  \n  \n [!code-vb[DataWorks OdbcConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/visualbasic/43cb7fd0-7a9f-4e91-821e-_1.vb)]\n [!code-cs[DataWorks OdbcConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/csharp/43cb7fd0-7a9f-4e91-821e-_1.cs)]"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "要检索的项的键。"
    - id: value
      type: System.Object
      description: "与对应的值`keyword.`"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> keyword </code>在连接字符串中找到; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: OdbcConnectionStringBuilder()
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder()
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.OdbcConnectionStringBuilder()
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: OdbcConnectionStringBuilder(String)
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.OdbcConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Clear
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: OdbcConnectionStringBuilder.Clear()
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Clear()
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: OdbcConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Driver
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Driver
  nameWithType: OdbcConnectionStringBuilder.Driver
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Driver
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Dsn
  nameWithType: OdbcConnectionStringBuilder.Dsn
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: OdbcConnectionStringBuilder.Item(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Keys
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: OdbcConnectionStringBuilder.Keys
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: OdbcConnectionStringBuilder.Remove(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Remove(String)
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: OdbcConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: OdbcConnectionStringBuilder
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Clear*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: OdbcConnectionStringBuilder.Clear
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: OdbcConnectionStringBuilder.ContainsKey
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Driver*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Driver
  nameWithType: OdbcConnectionStringBuilder.Driver
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Dsn
  nameWithType: OdbcConnectionStringBuilder.Dsn
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Item*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: OdbcConnectionStringBuilder.Item
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Keys*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: OdbcConnectionStringBuilder.Keys
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Remove*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: OdbcConnectionStringBuilder.Remove
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: OdbcConnectionStringBuilder.TryGetValue
