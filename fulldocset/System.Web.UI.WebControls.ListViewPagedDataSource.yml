### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ListViewPagedDataSource
  id: ListViewPagedDataSource
  children:
  - System.Web.UI.WebControls.ListViewPagedDataSource.#ctor
  - System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
  - System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.ListViewPagedDataSource.Count
  - System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
  - System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
  - System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator
  - System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
  - System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
  - System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
  - System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
  - System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
  - System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
  - System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
  langs:
  - csharp
  name: ListViewPagedDataSource
  nameWithType: ListViewPagedDataSource
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource
  type: Class
  summary: "封装的分页相关的属性的<xref href=&quot;System.Web.UI.WebControls.ListView&quot;></xref>控件。"
  remarks: "ListViewPagedDataSource 类封装启用的属性<xref:System.Web.UI.WebControls.ListView>控件来执行分页。</xref:System.Web.UI.WebControls.ListView>       此类使用的最佳方法枚举关联的数据。 如果基础数据源支持索引的访问 (如<xref:System.Array?displayProperty=fullName>和<xref:System.Collections.IList?displayProperty=fullName>对象)，类使用该访问权限。</xref:System.Collections.IList?displayProperty=fullName> </xref:System.Array?displayProperty=fullName> 否则，将类使用的枚举器创建的<xref:System.Collections.IEnumerable.GetEnumerator%2A>方法。</xref:System.Collections.IEnumerable.GetEnumerator%2A>       ListViewPagedDataSource 类的实例的初始属性值的列表，请参阅<xref:System.Web.UI.WebControls.ListViewPagedDataSource.%23ctor%2A>构造函数。</xref:System.Web.UI.WebControls.ListViewPagedDataSource.%23ctor%2A>"
  syntax:
    content: 'public class ListViewPagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.ComponentModel.ITypedList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: ListViewPagedDataSource()
  nameWithType: ListViewPagedDataSource.ListViewPagedDataSource()
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.ListViewPagedDataSource()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新实例<xref href=&quot;System.Web.UI.WebControls.ListViewPagedDataSource&quot;></xref>类。"
  remarks: "使用此构造函数来创建和初始化<xref:System.Web.UI.WebControls.ListViewPagedDataSource>类</xref:System.Web.UI.WebControls.ListViewPagedDataSource>的新实例       下表显示<xref:System.Web.UI.WebControls.ListViewPagedDataSource>类</xref:System.Web.UI.WebControls.ListViewPagedDataSource>的实例的初始属性的值      |属性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging%2A>|`false`|  |<xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A>|0|</xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A></xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging%2A>"
  syntax:
    content: public ListViewPagedDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
  id: AllowServerPaging
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: AllowServerPaging
  nameWithType: ListViewPagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置一个值，该值指示是否启用基于服务器的分页。"
  remarks: "AllowServerPaging 属性用于指定是否启用了基于服务器的分页。 如果此属性设置为`true`，数据源对象执行基于服务器的分页。 否则为<xref:System.Windows.Forms.ListView>控件的作用基于 UI 的分页。</xref:System.Windows.Forms.ListView> 在基于 UI 的分页，<xref:System.Windows.Forms.ListView>控件请求从数据源的所有记录，并使用仅用于当前页的选项。</xref:System.Windows.Forms.ListView>"
  syntax:
    content: public bool AllowServerPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果启用了基于服务器的分页;否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ListViewPagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "从数据源的所有项都复制到指定&lt;xref:System.Array?displayProperty=fullName&gt;对象中的指定索引处开始&lt;xref:System.Array?displayProperty=fullName&gt;。"
  remarks: "使用此方法将数据源的内容复制到指定<xref:System.Array?displayProperty=fullName>对象，指定索引处开始。</xref:System.Array?displayProperty=fullName> <xref:System.Array?displayProperty=fullName>对象通常用于循环访问数据源中的项。</xref:System.Array?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "从零开始&lt;xref:System.Array?displayProperty=fullName&gt;从数据源接收复制的项的对象。"
    - id: index
      type: System.Int32
      description: "在指定的第一个位置&lt;xref:System.Array?displayProperty=fullName&gt;对象以便接收复制的内容。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.Count
  id: Count
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: Count
  nameWithType: ListViewPagedDataSource.Count
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.Count
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取将用于从数据源当前页的项的数目。"
  remarks: "使用的 Count 属性来确定将用于从数据源的项的数目。 返回的值由以下条件:-如果当前页不是最后一页和<xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>属性设置为一个值大于或等于 0 的值，该值<xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>返回属性。</xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>      -如果当前页不是最后一页和<xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>属性设置为一个值小于 0 的值，该值<xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A>属性的值中减去<xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A>返回前的属性。</xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>      -如果当前页是最后一页的值<xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A>属性的值中减去<xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A>返回前的属性。</xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A>      -如果<xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>属性是`null`，则返回 0。</xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "从数据源将使用当前页的项的数目。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: DataSource
  nameWithType: ListViewPagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数据源。"
  remarks: "使用数据源属性来获取或设置正在通过寻呼发送的数据源。"
  syntax:
    content: public System.Collections.IEnumerable DataSource { get; set; }
    return:
      type: System.Collections.IEnumerable
      description: "实现的对象&lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt;表示数据源。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
  id: DataSourceCount
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: DataSourceCount
  nameWithType: ListViewPagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "在数据源中获取项的数目。"
  remarks: "使用了属性来确定数据源中的项的数目。 如果使用基于服务器的分页，则值<xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A>返回属性; 否则，返回的数据源中的项的总数。</xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A>      1> [!NOTE] 1> 如果<xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>属性是`null`，则返回 0。</xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>"
  syntax:
    content: public int DataSourceCount { get; }
    return:
      type: System.Int32
      description: "数据源中的项的数目。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "数据源对象未实现&lt;xref:System.Collections.ICollection?displayProperty=fullName&gt;接口。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ListViewPagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "返回实现的对象&lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;和其中包含数据源中的所有项。"
  remarks: "使用此方法获取<xref:System.Collections.IEnumerator?displayProperty=fullName>对象可用于访问数据源中的各个项。</xref:System.Collections.IEnumerator?displayProperty=fullName> 若要访问的枚举器中当前位置处的项，使用<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>属性。</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> 使用<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>方法将移动到集合中的下一项。</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 若要将枚举器移到其原始位置，使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>方法。</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      1> [!NOTE]&1;> 你首先获取枚举数或当调用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>方法将枚举器移到的第一项在集合中，必须调用<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>方法。</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> 否则为由表示的项<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>属性是不确定。</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "&lt;Xref:System.Collections.IEnumerator?displayProperty=fullName&gt;对象，其中包含数据源中的所有项。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ListViewPagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "返回<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref>表示用于将数据绑定的属性的对象。"
  remarks: "GetItemProperties 方法用于获取<xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>表示用于将数据绑定的属性的对象。</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> GetItemProperties 方法调用[ITypedList.GetItemProperties (PropertyDescriptor\\[\\])](assetId:///M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])?qualifyHint=True&autoUpgrade=True)基础数据源对象的方法。 如果<xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>属性是`null`或不实现<xref:System.ComponentModel.ITypedList?displayProperty=fullName>接口，`null`返回。</xref:System.ComponentModel.ITypedList?displayProperty=fullName> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>要作为可绑定的集合中找到的对象。 这可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>表示用于将数据绑定的属性的对象。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: ListViewPagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "返回的列表的名称。 此方法不适用于此类。"
  remarks: "此方法继承自的<xref:System.ComponentModel.ITypedList?displayProperty=fullName>接口，并不适用于此类。</xref:System.ComponentModel.ITypedList?displayProperty=fullName> 实现，以便它返回<xref:System.String.Empty?displayProperty=fullName>所有用例。</xref:System.String.Empty?displayProperty=fullName> 有关 GetListName 方法的详细信息，请参阅<xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=fullName>。</xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=fullName>"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "数组<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>为返回此列表名称的对象。"
    return:
      type: System.String
      description: "在所有情况下为空字符串。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ListViewPagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否<xref href=&quot;System.Web.UI.WebControls.ListViewPagedDataSource&quot;></xref>对象是只读的。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
  id: IsServerPagingEnabled
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: IsServerPagingEnabled
  nameWithType: ListViewPagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否启用基于服务器的分页。"
  syntax:
    content: public bool IsServerPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果通过使用指示基于服务器的分页，则<xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging*>属性; 否则为<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging*>"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ListViewPagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取一个值，该值指示是否对数据源的访问是否同步 （线程安全）。"
  remarks: "此属性派生自<xref:System.Collections.ICollection?displayProperty=fullName>接口，并在重写以始终返回`false`，指示此类不是线程安全。</xref:System.Collections.ICollection?displayProperty=fullName>       有关 IsSynchronized 属性的详细信息，请参阅<xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>属性<xref:System.Collections.ICollection?displayProperty=fullName>接口。</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情况下。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
  id: MaximumRows
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: MaximumRows
  nameWithType: ListViewPagedDataSource.MaximumRows
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置在单个页面上显示的最大项数。"
  syntax:
    content: public int MaximumRows { get; set; }
    return:
      type: System.Int32
      description: "要在一页显示的项目中最大的数。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
  id: StartRowIndex
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: StartRowIndex
  nameWithType: ListViewPagedDataSource.StartRowIndex
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置页面上显示的第一个记录的索引。"
  syntax:
    content: public int StartRowIndex { get; set; }
    return:
      type: System.Int32
      description: "页面上显示的第一个记录的索引。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ListViewPagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取可用于同步对集合的访问的对象。"
  remarks: "在此实现中返回的对象是<xref:System.Web.UI.WebControls.ListViewPagedDataSource>对象本身。</xref:System.Web.UI.WebControls.ListViewPagedDataSource>       有关 SyncRoot 属性的详细信息，请参阅<xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>属性<xref:System.Collections.ICollection?displayProperty=fullName>接口。</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "一个可用于同步对集合的访问的对象。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
  id: TotalRowCount
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: TotalRowCount
  nameWithType: ListViewPagedDataSource.TotalRowCount
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "获取或设置数据源中的项总数，在使用基于服务器的分页时。"
  syntax:
    content: public int TotalRowCount { get; set; }
    return:
      type: System.Int32
      description: "当正在使用基于服务器的分页的数据源中的项的总数。"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.#ctor
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: ListViewPagedDataSource()
  nameWithType: ListViewPagedDataSource.ListViewPagedDataSource()
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.ListViewPagedDataSource()
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: ListViewPagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ListViewPagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.Count
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: Count
  nameWithType: ListViewPagedDataSource.Count
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.Count
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: ListViewPagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: ListViewPagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetEnumerator()
  nameWithType: ListViewPagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ListViewPagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: ListViewPagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: ListViewPagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: ListViewPagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: ListViewPagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: MaximumRows
  nameWithType: ListViewPagedDataSource.MaximumRows
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: StartRowIndex
  nameWithType: ListViewPagedDataSource.StartRowIndex
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: ListViewPagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: TotalRowCount
  nameWithType: ListViewPagedDataSource.TotalRowCount
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.#ctor*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: ListViewPagedDataSource
  nameWithType: ListViewPagedDataSource.ListViewPagedDataSource
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: ListViewPagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: CopyTo
  nameWithType: ListViewPagedDataSource.CopyTo
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.Count*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: Count
  nameWithType: ListViewPagedDataSource.Count
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: ListViewPagedDataSource.DataSource
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: ListViewPagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetEnumerator
  nameWithType: ListViewPagedDataSource.GetEnumerator
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetItemProperties
  nameWithType: ListViewPagedDataSource.GetItemProperties
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetListName
  nameWithType: ListViewPagedDataSource.GetListName
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: ListViewPagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: ListViewPagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: ListViewPagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: MaximumRows
  nameWithType: ListViewPagedDataSource.MaximumRows
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: StartRowIndex
  nameWithType: ListViewPagedDataSource.StartRowIndex
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: ListViewPagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: TotalRowCount
  nameWithType: ListViewPagedDataSource.TotalRowCount
