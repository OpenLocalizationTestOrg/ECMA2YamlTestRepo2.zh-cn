### YamlMime:ManagedReference
items:
- uid: System.Reflection.ICustomAttributeProvider
  id: ICustomAttributeProvider
  children:
  - System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)
  - System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)
  langs:
  - csharp
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
  type: Interface
  summary: "对于支持它们的反射对象提供自定义属性。"
  remarks: "几乎所有反射类可以都有与之关联的特性。 属性可以是标准 （公共、 私有、 HelpString） 或自定义。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ICustomAttributeProvider
  implements: []
  platform:
  - net462
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "如果没有自定义特性，则返回所有在不包括命名的属性，此成员上定义的自定义特性的数组或为空数组。"
  remarks: "调用<xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=fullName>上<xref:System.Reflection.PropertyInfo>或<xref:System.Reflection.EventInfo>时`inherit`参数`GetCustomAttributes`是`true`不会遍历的类型层次结构。</xref:System.Reflection.EventInfo> </xref:System.Reflection.PropertyInfo> </xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=fullName> 使用<xref:System.Attribute?displayProperty=fullName>继承自定义属性。</xref:System.Attribute?displayProperty=fullName>       此方法返回直接在非继承成员仅上定义的自定义属性。"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "当<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，查找继承的自定义特性的层次结构链。"
    return:
      type: System.Object[]
      description: "表示自定义属性的对象的数组或为空数组。"
  overload: System.Reflection.ICustomAttributeProvider.GetCustomAttributes*
  exceptions:
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: "无法加载自定义属性类型。"
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "没有类型的多个属性<code> attributeType </code>定义在此成员上。"
  platform:
  - net462
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "返回包含由类型，此成员上定义的自定义特性的数组或为空数组，如果没有该类型的自定义属性。"
  remarks: "如果`attributeType`是一个基类或接口，则此方法返回该类型的任何实现。       此方法返回直接在非继承成员仅上定义的自定义属性。       在调用 GetCustomAttributes<xref:System.Reflection.PropertyInfo>或<xref:System.Reflection.EventInfo>时`inherit`参数`GetCustomAttributes`是`true`不会遍历的类型层次结构。</xref:System.Reflection.EventInfo> </xref:System.Reflection.PropertyInfo> 使用<xref:System.Attribute?displayProperty=fullName>继承自定义属性。</xref:System.Attribute?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "自定义属性的类型。"
    - id: inherit
      type: System.Boolean
      description: "当<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，查找继承的自定义特性的层次结构链。"
    return:
      type: System.Object[]
      description: "表示自定义属性的对象的数组或为空数组。"
  overload: System.Reflection.ICustomAttributeProvider.GetCustomAttributes*
  exceptions:
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: "无法加载自定义属性类型。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attributeType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: ICustomAttributeProvider.IsDefined(Type,Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "指示一个或多个实例<code> attributeType </code>定义在此成员上。"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "自定义属性的类型。"
    - id: inherit
      type: System.Boolean
      description: "当<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，查找继承的自定义特性的层次结构链。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> attributeType </code>该成员上定义<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> otherwise."
  overload: System.Reflection.ICustomAttributeProvider.IsDefined*
  exceptions: []
  platform:
  - net462
references:
- uid: System.TypeLoadException
  isExternal: true
  name: System.TypeLoadException
- uid: System.Reflection.AmbiguousMatchException
  isExternal: true
  name: System.Reflection.AmbiguousMatchException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: ICustomAttributeProvider.IsDefined(Type,Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.IsDefined(Type,Boolean)
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes*
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: GetCustomAttributes
  nameWithType: ICustomAttributeProvider.GetCustomAttributes
- uid: System.Reflection.ICustomAttributeProvider.IsDefined*
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: IsDefined
  nameWithType: ICustomAttributeProvider.IsDefined
