### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.ProjectItemInstance
  id: ProjectItemInstance
  children:
  - Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount
  - Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude
  - Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.ItemType
  - Microsoft.Build.Execution.ProjectItemInstance.Metadata
  - Microsoft.Build.Execution.ProjectItemInstance.MetadataCount
  - Microsoft.Build.Execution.ProjectItemInstance.MetadataNames
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata(System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#ItemSpec
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata(System.String,System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.Project
  - Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.String,System.String)
  - Microsoft.Build.Execution.ProjectItemInstance.ToString
  langs:
  - csharp
  name: ProjectItemInstance
  nameWithType: ProjectItemInstance
  fullName: Microsoft.Build.Execution.ProjectItemInstance
  type: Class
  summary: "包装计算的项以进行生成。"
  remarks: "不存储项元素信息，因为已经执行所有计算和验证。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} #DirectMetadata={DirectMetadataCount})")]

      public class ProjectItemInstance : Microsoft.Build.Framework.ITaskItem2
  inheritance:
  - System.Object
  implements:
  - Microsoft.Build.Framework.ITaskItem2
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount
  id: DirectMetadataCount
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: DirectMetadataCount
  nameWithType: ProjectItemInstance.DirectMetadataCount
  fullName: Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取在该项上的元数据的片段数。"
  syntax:
    content: public int DirectMetadataCount { get; }
    return:
      type: System.Int32
      description: "在该项上返回元数据的片段的数。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude
  id: EvaluatedInclude
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: EvaluatedInclude
  nameWithType: ProjectItemInstance.EvaluatedInclude
  fullName: Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取计算所得的包含属性值。"
  syntax:
    content: public string EvaluatedInclude { get; set; }
    return:
      type: System.String
      description: "返回计算的包含属性值，该值可以是空字符串。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(System.String)
  id: GetMetadata(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: GetMetadata(String)
  nameWithType: ProjectItemInstance.GetMetadata(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取具有给定名称的元数据，包括元数据从项定义继承。"
  remarks: "不包括任何内置的元数据。"
  syntax:
    content: public Microsoft.Build.Execution.ProjectMetadataInstance GetMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "元数据的名称。"
    return:
      type: Microsoft.Build.Execution.ProjectMetadataInstance
      description: "返回具有给定名称的元数据。 返回元数据不存在具有该名称的情况下为 null。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(System.String)
  id: GetMetadataValue(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: GetMetadataValue(String)
  nameWithType: ProjectItemInstance.GetMetadataValue(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取具有给定名称，包括从项定义继承的元数据的元数据的值。"
  remarks: "包括内置的元数据。       若要确定是否实际存在一种元数据，但具有空值，请使用<xref:Microsoft.Build.Execution.ProjectItemInstance.HasMetadata%2A>。</xref:Microsoft.Build.Execution.ProjectItemInstance.HasMetadata%2A>"
  syntax:
    content: public string GetMetadataValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "元数据的名称。"
    return:
      type: System.String
      description: "获取具有给定名称，包括从项定义继承的元数据的元数据的值。 如果没有元数据存在具有该名称，则返回空字符串。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(System.String)
  id: HasMetadata(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: HasMetadata(String)
  nameWithType: ProjectItemInstance.HasMetadata(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "确定是否具有给定名称的元数据定义上此项目 （即使其值为空字符串）。"
  remarks: "这会搜索内置的元数据和元数据从项定义，因为此方法使用对于批处理，其中并不重要的元数据的出处。"
  syntax:
    content: public bool HasMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "元数据的名称。"
    return:
      type: System.Boolean
      description: "如果具有给定名称的元数据定义上 （即使其值为空字符串） 此项，则返回 truefalse 否则为。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.HasMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.ItemType
  id: ItemType
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: ItemType
  nameWithType: ProjectItemInstance.ItemType
  fullName: Microsoft.Build.Execution.ProjectItemInstance.ItemType
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取项类型，例如&quot;编译&quot;。"
  remarks: "无法对此进行设置，因为它用作到项目的项表中的键。"
  syntax:
    content: public string ItemType { get; }
    return:
      type: System.String
      description: "返回的项类型，例如&quot;编译&quot;。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Metadata
  id: Metadata
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Metadata
  nameWithType: ProjectItemInstance.Metadata
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Metadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取项的计算元数据的枚举器。 这是只读集合。"
  remarks: "不包括内置的元数据或从项定义的元数据。       若要修改的元数据，使用<xref:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata%2A>。</xref:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata%2A>"
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectMetadataInstance> Metadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectMetadataInstance}
      description: "通过项的计算元数据中返回的枚举。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Metadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.MetadataCount
  id: MetadataCount
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: MetadataCount
  nameWithType: ProjectItemInstance.MetadataCount
  fullName: Microsoft.Build.Execution.ProjectItemInstance.MetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取元数据条目，包括从项定义继承的元数据数。"
  remarks: "包括自定义和内置的元数据。"
  syntax:
    content: public int MetadataCount { get; }
    return:
      type: System.Int32
      description: "返回的项数元数据，包括从项定义继承的元数据"
  overload: Microsoft.Build.Execution.ProjectItemInstance.MetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.MetadataNames
  id: MetadataNames
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: MetadataNames
  nameWithType: ProjectItemInstance.MetadataNames
  fullName: Microsoft.Build.Execution.ProjectItemInstance.MetadataNames
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取此项，包括从项定义继承的元数据的所有元数据名称。"
  remarks: "包括内置的元数据的名称。"
  syntax:
    content: public System.Collections.Generic.ICollection<string> MetadataNames { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "返回此项，包括从项定义继承的元数据的所有元数据的名称。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.MetadataNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata
  id: Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata()
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata()
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem 实现。 获取自定义元数据的集合。"
  remarks: "-不包括内置的元数据。      -此方法应返回元数据的克隆。      -此字典写入应不会反映在基础我tem."
  syntax:
    content: System.Collections.IDictionary ITaskItem.CloneCustomMetadata ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "自定义元数据的集合。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)
  id: Microsoft#Build#Framework#ITaskItem#CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(ITaskItem)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(ITaskItem)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(ITaskItem)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem 实现。 将自定义元数据条目复制到另一个项。"
  remarks: "当应遵循以下原则实现此方法。      -不会覆盖<xref:Microsoft.Build.Framework.ITaskItem.ItemSpec%2A>属性。</xref:Microsoft.Build.Framework.ITaskItem.ItemSpec%2A>      -不会覆盖现有的元数据条目。      -不要复制元数据条目的没有意义上的目标项。"
  syntax:
    content: void ITaskItem.CopyMetadataTo (Microsoft.Build.Framework.ITaskItem destinationItem);
    parameters:
    - id: destinationItem
      type: Microsoft.Build.Framework.ITaskItem
      description: "要复制到的元数据条目的项。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata(System.String)
  id: Microsoft#Build#Framework#ITaskItem#GetMetadata(System.String)
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem.GetMetadata(String)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.GetMetadata(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.GetMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem 实现。 获取指定的元数据条目的值。"
  remarks: "不应返回元数据不存在的情况下为 null。"
  syntax:
    content: string ITaskItem.GetMetadata (string metadataName);
    parameters:
    - id: metadataName
      type: System.String
      description: "元数据条目的名称。"
    return:
      type: System.String
      description: "值<code> attributeName </code>元数据。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#ItemSpec
  id: Microsoft#Build#Framework#ITaskItem#ItemSpec
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem.ItemSpec
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.ItemSpec
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.ItemSpec
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem 实现。 获取或设置项规范。"
  remarks: "项规范是一个任意字符串。 如果该项表示磁盘上的文件，项规范将该文件的路径。       <xref:Microsoft.Build.Framework.ITaskItem.ItemSpec%2A>文件是一个项目中的以下项声明`File.cs`。</xref:Microsoft.Build.Framework.ITaskItem.ItemSpec%2A>      ```   <ItemGroup>       <Compile Include=&quot;File.cs&quot;/>   </ItemGroup>   ```"
  example:
  - "The following example shows the code for a task that creates one or more directories.  \n  \n [!code-cs[msbuild_MakeDirTask#1](~/add/codesnippet/csharp/msbuild_MakeDirTask/msbuild_MakeDirTask.cs#1)]"
  syntax:
    content: string Microsoft.Build.Framework.ITaskItem.ItemSpec { get; set; }
    return:
      type: System.String
      description: "项规范。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#ItemSpec*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames
  id: Microsoft#Build#Framework#ITaskItem#MetadataNames
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem.MetadataNames
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.MetadataNames
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.MetadataNames
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem 实现。 获取与项目关联的元数据条目的名称。"
  syntax:
    content: System.Collections.ICollection Microsoft.Build.Framework.ITaskItem.MetadataNames { get; }
    return:
      type: System.Collections.ICollection
      description: "与项目关联的元数据条目的名称。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata(System.String,System.String)
  id: Microsoft#Build#Framework#ITaskItem#SetMetadata(System.String,System.String)
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem.SetMetadata(String,String)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.SetMetadata(String,String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.SetMetadata(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem 实现。 添加或更改自定义元数据条目到项。"
  syntax:
    content: void ITaskItem.SetMetadata (string metadataName, string metadataValue);
    parameters:
    - id: metadataName
      type: System.String
      description: "要添加或更改的元数据名称。"
    - id: metadataValue
      type: System.String
      description: "要添加或更改的元数据值。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped
  id: Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped()
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped()
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem2 实现。 在此对象返回元数据的克隆。  返回值是以其原始的转义形式。"
  syntax:
    content: System.Collections.IDictionary ITaskItem2.CloneCustomMetadataEscaped ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "返回克隆的元数据，保留值的转义。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped
  id: Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem2 实现。 计算包含值，根据需要进行转义。 可能为空字符串。 获取或设置项包含值，例如对于基于磁盘的项，这将是文件路径。"
  remarks: "利用此机会将修复属性名称中，尽管这不会明显是项规范的改进。"
  syntax:
    content: string Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped { get; set; }
    return:
      type: System.String
      description: "返回的项包括值。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)
  id: Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(String)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem2 实现。 允许查询项的元数据的值。"
  remarks: "利用此机会将修复属性名称中，尽管这不会明显很 GetMetadata 的改进。"
  syntax:
    content: string ITaskItem2.GetMetadataValueEscaped (string name);
    parameters:
    - id: name
      type: System.String
      description: "要查询的元数据。"
    return:
      type: System.String
      description: "返回转义元数据值。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)
  id: Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)
  isEii: true
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(String,String)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(String,String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "ITaskItem2 实现。 允许一种在项上设置自定义元数据。 假定传入的值为非转义，并将值根据需要进行转义以维护其值。"
  remarks: "利用此机会将修复属性名称中，尽管这不会明显很 SetMetadata 的改进。"
  syntax:
    content: void ITaskItem2.SetMetadataValueLiteral (string metadataName, string metadataValue);
    parameters:
    - id: metadataName
      type: System.String
      description: "元数据名称中。"
    - id: metadataValue
      type: System.String
      description: "元数据的值。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.Project
  id: Project
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: Project
  nameWithType: ProjectItemInstance.Project
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取所属的项目。"
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance Project { get; }
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "返回所属的项目。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(System.String)
  id: RemoveMetadata(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: RemoveMetadata(String)
  nameWithType: ProjectItemInstance.RemoveMetadata(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "删除具有给定名称的元数据。"
  remarks: "TaskItem 使用此方法。"
  syntax:
    content: public void RemoveMetadata (string metadataName);
    parameters:
    - id: metadataName
      type: System.String
      description: "元数据名称中。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: SetMetadata(IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectItemInstance.SetMetadata(IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "添加具有给定名称和值的元数据。 将覆盖具有相同名称已在集合中的任何元数据。"
  syntax:
    content: public void SetMetadata (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadataDictionary);
    parameters:
    - id: metadataDictionary
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "要添加的元数据。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.String,System.String)
  id: SetMetadata(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: SetMetadata(String,String)
  nameWithType: ProjectItemInstance.SetMetadata(String,String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "添加具有给定名称和值的元数据。 将覆盖具有相同名称已在集合中的任何元数据。"
  syntax:
    content: public Microsoft.Build.Execution.ProjectMetadataInstance SetMetadata (string name, string evaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "要添加的元数据名称。"
    - id: evaluatedValue
      type: System.String
      description: "要添加的元数据计算所得的值。"
    return:
      type: Microsoft.Build.Execution.ProjectMetadataInstance
      description: "返回新的元数据。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectItemInstance.ToString
  id: ToString
  parent: Microsoft.Build.Execution.ProjectItemInstance
  langs:
  - csharp
  name: ToString()
  nameWithType: ProjectItemInstance.ToString()
  fullName: Microsoft.Build.Execution.ProjectItemInstance.ToString()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "获取表示当前项的字符串。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "返回表示当前项的字符串。"
  overload: Microsoft.Build.Execution.ProjectItemInstance.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItemInstance.DirectMetadataCount
  fullName: Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItemInstance.EvaluatedInclude
  fullName: Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: GetMetadata(String)
  nameWithType: ProjectItemInstance.GetMetadata(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(String)
- uid: Microsoft.Build.Execution.ProjectMetadataInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectMetadataInstance
  nameWithType: ProjectMetadataInstance
  fullName: Microsoft.Build.Execution.ProjectMetadataInstance
- uid: Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: GetMetadataValue(String)
  nameWithType: ProjectItemInstance.GetMetadataValue(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(String)
- uid: Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: HasMetadata(String)
  nameWithType: ProjectItemInstance.HasMetadata(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Execution.ProjectItemInstance.ItemType
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: ItemType
  nameWithType: ProjectItemInstance.ItemType
  fullName: Microsoft.Build.Execution.ProjectItemInstance.ItemType
- uid: Microsoft.Build.Execution.ProjectItemInstance.Metadata
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Metadata
  nameWithType: ProjectItemInstance.Metadata
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Metadata
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectMetadataInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectMetadataInstance>
  nameWithType: IEnumerable<ProjectMetadataInstance>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectMetadataInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Execution.ProjectMetadataInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectMetadataInstance
    name: ProjectMetadataInstance
    nameWithType: ProjectMetadataInstance
    fullName: ProjectMetadataInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectItemInstance.MetadataCount
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItemInstance.MetadataCount
  fullName: Microsoft.Build.Execution.ProjectItemInstance.MetadataCount
- uid: Microsoft.Build.Execution.ProjectItemInstance.MetadataNames
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: MetadataNames
  nameWithType: ProjectItemInstance.MetadataNames
  fullName: Microsoft.Build.Execution.ProjectItemInstance.MetadataNames
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata()
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata()
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(ITaskItem)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(ITaskItem)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(ITaskItem)
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.GetMetadata(String)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.GetMetadata(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.GetMetadata(String)
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#ItemSpec
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.ItemSpec
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.ItemSpec
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.ItemSpec
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.MetadataNames
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.MetadataNames
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.MetadataNames
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.SetMetadata(String,String)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.SetMetadata(String,String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.SetMetadata(String,String)
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped()
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped()
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped()
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(String)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(String)
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(String,String)
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(String,String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(String,String)
- uid: Microsoft.Build.Execution.ProjectItemInstance.Project
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Project
  nameWithType: ProjectItemInstance.Project
  fullName: Microsoft.Build.Execution.ProjectItemInstance.Project
- uid: Microsoft.Build.Execution.ProjectInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
- uid: Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: RemoveMetadata(String)
  nameWithType: ProjectItemInstance.RemoveMetadata(String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(String)
- uid: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: SetMetadata(IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectItemInstance.SetMetadata(IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(IEnumerable<KeyValuePair<String,String>>)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,String>>
  nameWithType: IEnumerable<KeyValuePair<String,String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: SetMetadata(String,String)
  nameWithType: ProjectItemInstance.SetMetadata(String,String)
  fullName: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(String,String)
- uid: Microsoft.Build.Execution.ProjectItemInstance.ToString
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: ToString()
  nameWithType: ProjectItemInstance.ToString()
  fullName: Microsoft.Build.Execution.ProjectItemInstance.ToString()
- uid: Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItemInstance.DirectMetadataCount
- uid: Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItemInstance.EvaluatedInclude
- uid: Microsoft.Build.Execution.ProjectItemInstance.GetMetadata*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: GetMetadata
  nameWithType: ProjectItemInstance.GetMetadata
- uid: Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: GetMetadataValue
  nameWithType: ProjectItemInstance.GetMetadataValue
- uid: Microsoft.Build.Execution.ProjectItemInstance.HasMetadata*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: HasMetadata
  nameWithType: ProjectItemInstance.HasMetadata
- uid: Microsoft.Build.Execution.ProjectItemInstance.ItemType*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: ItemType
  nameWithType: ProjectItemInstance.ItemType
- uid: Microsoft.Build.Execution.ProjectItemInstance.Metadata*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Metadata
  nameWithType: ProjectItemInstance.Metadata
- uid: Microsoft.Build.Execution.ProjectItemInstance.MetadataCount*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItemInstance.MetadataCount
- uid: Microsoft.Build.Execution.ProjectItemInstance.MetadataNames*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: MetadataNames
  nameWithType: ProjectItemInstance.MetadataNames
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.CopyMetadataTo
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.CopyMetadataTo
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.GetMetadata
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.GetMetadata
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#ItemSpec*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.ItemSpec
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.ItemSpec
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.MetadataNames
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.MetadataNames
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem.SetMetadata
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem.SetMetadata
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped
- uid: Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral
  nameWithType: ProjectItemInstance.Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral
- uid: Microsoft.Build.Execution.ProjectItemInstance.Project*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: Project
  nameWithType: ProjectItemInstance.Project
- uid: Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: RemoveMetadata
  nameWithType: ProjectItemInstance.RemoveMetadata
- uid: Microsoft.Build.Execution.ProjectItemInstance.SetMetadata*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: SetMetadata
  nameWithType: ProjectItemInstance.SetMetadata
- uid: Microsoft.Build.Execution.ProjectItemInstance.ToString*
  parent: Microsoft.Build.Execution.ProjectItemInstance
  isExternal: false
  name: ToString
  nameWithType: ProjectItemInstance.ToString
