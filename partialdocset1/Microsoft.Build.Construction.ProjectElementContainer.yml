### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Construction.ProjectElementContainer
  id: ProjectElementContainer
  children:
  - Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  - Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.Children
  - Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  - Microsoft.Build.Construction.ProjectElementContainer.Count
  - Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  - Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.LastChild
  - Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren
  - Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)
  langs:
  - csharp
  name: ProjectElementContainer
  nameWithType: ProjectElementContainer
  fullName: Microsoft.Build.Construction.ProjectElementContainer
  type: Class
  summary: "为项目元素提供的抽象容器类。"
  syntax:
    content: 'public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement'
  inheritance:
  - System.Object
  - Microsoft.Build.Construction.ProjectElement
  implements: []
  inheritedMembers:
  - Microsoft.Build.Construction.ProjectElement.AllParents
  - Microsoft.Build.Construction.ProjectElement.Condition
  - Microsoft.Build.Construction.ProjectElement.ConditionLocation
  - Microsoft.Build.Construction.ProjectElement.ContainingProject
  - Microsoft.Build.Construction.ProjectElement.Label
  - Microsoft.Build.Construction.ProjectElement.LabelLocation
  - Microsoft.Build.Construction.ProjectElement.Location
  - Microsoft.Build.Construction.ProjectElement.NextSibling
  - Microsoft.Build.Construction.ProjectElement.Parent
  - Microsoft.Build.Construction.ProjectElement.PreviousSibling
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  id: AllChildren
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: AllChildren
  nameWithType: ProjectElementContainer.AllChildren
  fullName: Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "在所有子元素中获取的递归深度优先枚举器。"
  remarks: "递归是可能的因为项目元素容器可能包含本身就是子级项目元素容器。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement> AllChildren { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}
      description: "返回所有子元素的递归深度优先枚举器。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.AllChildren*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)
  id: AppendChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: AppendChild(ProjectElement)
  nameWithType: ProjectElementContainer.AppendChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "追加<code> child </code>作为此项目容器的最后一个子级的元素。"
  remarks: "如果此项目容器没有父级，或如果引发异常`child`元素已经有父级，或如果`child`元素由不同<xref:Microsoft.Build.Construction.ProjectRootElement>.</xref:Microsoft.Build.Construction.ProjectRootElement>"
  syntax:
    content: public void AppendChild (Microsoft.Build.Construction.ProjectElement child);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "要追加的项目元素。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.AppendChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.Children
  id: Children
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: Children
  nameWithType: ProjectElementContainer.Children
  fullName: Microsoft.Build.Construction.ProjectElementContainer.Children
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "获取所有子元素。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement> Children { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}
      description: "返回所有子元素。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.Children*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  id: ChildrenReversed
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: ChildrenReversed
  nameWithType: ProjectElementContainer.ChildrenReversed
  fullName: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "获取所有子元素，从最后一个子级开始。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement> ChildrenReversed { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}
      description: "返回所有子元素，从最后一个子级开始。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.Count
  id: Count
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: Count
  nameWithType: ProjectElementContainer.Count
  fullName: Microsoft.Build.Construction.ProjectElementContainer.Count
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "获取子元素的数目。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "返回子元素的数目。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.Count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  id: FirstChild
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: FirstChild
  nameWithType: ProjectElementContainer.FirstChild
  fullName: Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "获取第一个子元素。"
  remarks: "使用<xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>来初始化此属性。</xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>"
  syntax:
    content: public Microsoft.Build.Construction.ProjectElement FirstChild { get; }
    return:
      type: Microsoft.Build.Construction.ProjectElement
      description: "返回第一个子元素。 如果存在任何子元素，不则，返回 null。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.FirstChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  id: InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: InsertAfterChild(ProjectElement,ProjectElement)
  nameWithType: ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "将插入<code> child </code>元素的后面<code> reference </code>元素。"
  remarks: "如果`reference`元素为 null，此方法等效于<xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>       如果此项目容器没有父级，或如果引发异常`child`元素已经有父级，或如果`child`元素由不同<xref:Microsoft.Build.Construction.ProjectRootElement>，或者如果`reference`元素不是此项目容器的子级。</xref:Microsoft.Build.Construction.ProjectRootElement>"
  syntax:
    content: public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "要插入的项目元素。"
    - id: reference
      type: Microsoft.Build.Construction.ProjectElement
      description: "要插入后的项目元素。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  id: InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: InsertBeforeChild(ProjectElement,ProjectElement)
  nameWithType: ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "将插入<code> child </code>元素之前<code> reference </code>元素。"
  remarks: "如果`reference`元素为 null，此方法等效于<xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>       如果此项目容器没有父级，或如果引发异常`child`元素已经有父级，或如果`child`元素由不同<xref:Microsoft.Build.Construction.ProjectRootElement>，或者如果`reference`元素不是此项目容器的子级。</xref:Microsoft.Build.Construction.ProjectRootElement>"
  syntax:
    content: public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "要插入的项目元素。"
    - id: reference
      type: Microsoft.Build.Construction.ProjectElement
      description: "要插入之前的项目元素。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild
  id: LastChild
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: LastChild
  nameWithType: ProjectElementContainer.LastChild
  fullName: Microsoft.Build.Construction.ProjectElementContainer.LastChild
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "获取最后一个子元素。"
  remarks: "使用<xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>来初始化此属性。</xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>"
  syntax:
    content: public Microsoft.Build.Construction.ProjectElement LastChild { get; }
    return:
      type: Microsoft.Build.Construction.ProjectElement
      description: "返回最后一个子元素。 如果存在任何子元素，不则，返回 null。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.LastChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)
  id: PrependChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: PrependChild(ProjectElement)
  nameWithType: ProjectElementContainer.PrependChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "将添加前<code> child </code>作为此项目容器的第一个子级的元素。"
  remarks: "如果此项目容器没有父级，或如果引发异常`child`元素已经有父级，或如果`child`元素由不同<xref:Microsoft.Build.Construction.ProjectRootElement>.</xref:Microsoft.Build.Construction.ProjectRootElement>"
  syntax:
    content: public void PrependChild (Microsoft.Build.Construction.ProjectElement child);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "要在前面追加的项目元素。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.PrependChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren
  id: RemoveAllChildren
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: RemoveAllChildren()
  nameWithType: ProjectElementContainer.RemoveAllChildren()
  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "如果有的话，从该项目容器中移除所有的子级。"
  remarks: "则可以安全地在枚举过程中修改以这种方式的子级。"
  syntax:
    content: public void RemoveAllChildren ();
    parameters: []
  overload: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)
  id: RemoveChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: RemoveChild(ProjectElement)
  nameWithType: ProjectElementContainer.RemoveChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "删除<code> child </code>从该项目容器的元素。"
  remarks: "如果此项目容器没有当前父级的子元素，则引发异常。 则可以安全地枚举过程中删除子这种方式。"
  syntax:
    content: public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "要删除的项目元素。"
  overload: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Microsoft.Build.Construction.ProjectElement
- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: AllChildren
  nameWithType: ProjectElementContainer.AllChildren
  fullName: Microsoft.Build.Construction.ProjectElementContainer.AllChildren
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectElement>
  nameWithType: IEnumerable<ProjectElement>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Construction.ProjectElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Construction.ProjectElement
    name: ProjectElement
    nameWithType: ProjectElement
    fullName: ProjectElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: AppendChild(ProjectElement)
  nameWithType: ProjectElementContainer.AppendChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.Children
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Children
  nameWithType: ProjectElementContainer.Children
  fullName: Microsoft.Build.Construction.ProjectElementContainer.Children
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectElement>
  nameWithType: ICollection<ProjectElement>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Construction.ProjectElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Construction.ProjectElement
    name: ProjectElement
    nameWithType: ProjectElement
    fullName: ProjectElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: ChildrenReversed
  nameWithType: ProjectElementContainer.ChildrenReversed
  fullName: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
- uid: Microsoft.Build.Construction.ProjectElementContainer.Count
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Count
  nameWithType: ProjectElementContainer.Count
  fullName: Microsoft.Build.Construction.ProjectElementContainer.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: FirstChild
  nameWithType: ProjectElementContainer.FirstChild
  fullName: Microsoft.Build.Construction.ProjectElementContainer.FirstChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: InsertAfterChild(ProjectElement,ProjectElement)
  nameWithType: ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: InsertBeforeChild(ProjectElement,ProjectElement)
  nameWithType: ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: LastChild
  nameWithType: ProjectElementContainer.LastChild
  fullName: Microsoft.Build.Construction.ProjectElementContainer.LastChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: PrependChild(ProjectElement)
  nameWithType: ProjectElementContainer.PrependChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: RemoveAllChildren()
  nameWithType: ProjectElementContainer.RemoveAllChildren()
  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren()
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: RemoveChild(ProjectElement)
  nameWithType: ProjectElementContainer.RemoveChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: AllChildren
  nameWithType: ProjectElementContainer.AllChildren
- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: AppendChild
  nameWithType: ProjectElementContainer.AppendChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.Children*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Children
  nameWithType: ProjectElementContainer.Children
- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: ChildrenReversed
  nameWithType: ProjectElementContainer.ChildrenReversed
- uid: Microsoft.Build.Construction.ProjectElementContainer.Count*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Count
  nameWithType: ProjectElementContainer.Count
- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: FirstChild
  nameWithType: ProjectElementContainer.FirstChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: InsertAfterChild
  nameWithType: ProjectElementContainer.InsertAfterChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: InsertBeforeChild
  nameWithType: ProjectElementContainer.InsertBeforeChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: LastChild
  nameWithType: ProjectElementContainer.LastChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: PrependChild
  nameWithType: ProjectElementContainer.PrependChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: RemoveAllChildren
  nameWithType: ProjectElementContainer.RemoveAllChildren
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: RemoveChild
  nameWithType: ProjectElementContainer.RemoveChild
