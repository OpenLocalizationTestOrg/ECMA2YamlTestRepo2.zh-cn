### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.ProjectItem
  id: ProjectItem
  children:
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.IsImported
  - Microsoft.Build.Evaluation.ProjectItem.ItemType
  - Microsoft.Build.Evaluation.ProjectItem.Metadata
  - Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.Project
  - Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  - Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.Xml
  langs:
  - csharp
  name: ProjectItem
  nameWithType: ProjectItem
  fullName: Microsoft.Build.Evaluation.ProjectItem
  type: Class
  summary: "表示计算所得的设计时项目项。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")]

      public class ProjectItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  id: DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取项的所有元数据的枚举器。"
  remarks: "不包括从项定义的元数据。 不包括内置的元数据，例如&quot;FullPath&quot;。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata> DirectMetadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "返回一个枚举所有项元数据，则可以永远不会为 null。"
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  id: DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取此项的元数据的计数。"
  remarks: "不包括从项定义的元数据。 不包括内置的元数据，例如&quot;FullPath&quot;。"
  syntax:
    content: public int DirectMetadataCount { get; }
    return:
      type: System.Int32
      description: "返回此项的元数据的计数。"
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  id: EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取包含属性的计算的值。"
  remarks: "转义的字符不存在。"
  syntax:
    content: public string EvaluatedInclude { get; }
    return:
      type: System.String
      description: "返回的 Include 特性的计算的值。"
  overload: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  id: GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取给定元数据的计算的值为此项目。"
  remarks: "可能包括从项定义的元数据。 不包括内置的元数据，例如&quot;FullPath&quot;。"
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "检索其值的元数据的名称。"
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "获取给定元数据的计算的值为此项目。 返回元数据不存在具有给定名称的情况下为 null。"
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  id: GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "为此项目，包括源自项定义的元数据中获取给定元数据的计算的值。"
  remarks: "若要确定是否存在元数据，是否具有一个值或不，请使用<xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>。</xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>       此方法可能用于访问的内置元数据，例如&quot;FullPath&quot;值。"
  syntax:
    content: public string GetMetadataValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "检索其值的元数据的名称。"
    return:
      type: System.String
      description: "返回此项，包括源自项定义的元数据的给定元数据的计算的值。 如果不存在具有给定名称的任何元数据，则返回空字符串。"
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  id: HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "确定是否在该项上定义具有给定名称的元数据。"
  remarks: "包括内置的元数据和元数据源自于项定义。"
  syntax:
    content: public bool HasMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "要搜索的元数据的名称。"
    return:
      type: System.Boolean
      description: "如果此项; 定义了具有给定名称的元数据，则返回 truefalse 否则为。"
  overload: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  id: IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "确定此项是否源自从导入的文件。"
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "返回此项目源自于一个导入的文件; 如果为 truefalse 否则为。"
  overload: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  id: ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取或设置此项的类型。"
  syntax:
    content: public string ItemType { get; set; }
    return:
      type: System.String
      description: "返回的项类型。"
  overload: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  id: Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取此项，包括源自于项定义的元数据的所有元数据。"
  remarks: "不包括内置的元数据，例如&quot;FullPath&quot;。       若要添加、 删除或更改内置的元数据的值，使用<xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>和<xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A> </xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> Metadata { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "返回此项，包括源自于项定义的元数据的所有元数据。"
  overload: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  id: MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取此项，包括源自于项定义的任何元数据的元数据和任何内置的元数据的计数。"
  syntax:
    content: public int MetadataCount { get; }
    return:
      type: System.Int32
      description: "返回此项，包括源自于项定义的任何元数据的元数据和任何内置的元数据的计数。"
  overload: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  id: Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取包含此项目项的项目。"
  remarks: "项目项通常包含由项目中。"
  syntax:
    content: public Microsoft.Build.Evaluation.Project Project { get; }
    return:
      type: Microsoft.Build.Evaluation.Project
      description: "返回包含此项目项的项目。"
  overload: Microsoft.Build.Evaluation.ProjectItem.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  id: RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "删除具有给定名称的任何元数据。"
  remarks: "如果元数据名称是指内置元数据，如&quot;FullPath&quot;，则引发 InvalidArgumentException。       如果元数据名称是指源自项定义的元数据，则引发 InvalidOperationException。"
  syntax:
    content: public bool RemoveMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "要删除的元数据名称。"
    return:
      type: System.Boolean
      description: "如果之前删除; 已存在具有给定名称的元数据，则返回 truefalse 否则为。"
  overload: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  id: Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "将该项重命名为给定的名称。"
  remarks: "等效于设置<xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A>值。</xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> 通常情况下，不会进行评估，因为这可能导致多个项，这在重命名单个项的上下文中没有任何意义。 但是如果项不需要进行拆分和新值的计算结果为只有一个项目，其计算的 Include 特性是使用计算结果的值更新。"
  syntax:
    content: public void Rename (string name);
    parameters:
    - id: name
      type: System.String
      description: "项的新名称。"
  overload: Microsoft.Build.Evaluation.ProjectItem.Rename*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  id: SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "将具有给定名称和而言未计算的值的元数据添加到项。"
  remarks: "如果元数据已存在具有给定名称的项，只要它不是从项定义内容，请更新现有的元数据的值。 更新计算的项目中，但不重新计算之后才影响项目中的其他任何内容。       例如，如果对类型&quot;i&quot;的项目添加一种名为&quot;m&quot;的元数据，则它不会影响从求值的&quot;j&quot;&quot;@(j-> %(m))&quot;直到重新评估。 也如果&quot;m&quot;的未计算的值设置为可通过计算，如&quot;$（p）&quot;，修改计算所得的值将设置为按原义&quot;$（p）&quot;重新评估之前。       应将而言未计算的值中的特殊字符转换为转义字符。"
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "要添加的元数据名称。"
    - id: unevaluatedValue
      type: System.String
      description: "要添加的元数据而言未计算的值。"
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "返回新的元数据。 如果已存在具有给定名称的元数据，则返回此元数据。"
  overload: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  id: UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取或设置的 Include 特性的未计算的值。"
  syntax:
    content: public string UnevaluatedInclude { get; set; }
    return:
      type: System.String
      description: "返回的 Include 特性的而言未计算的值。"
  overload: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "获取与此项关联的项元素。"
  syntax:
    content: public Microsoft.Build.Construction.ProjectItemElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectItemElement
      description: "返回与此决不会为 null 的项关联的项元素。"
  overload: Microsoft.Build.Evaluation.ProjectItem.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectMetadata>
  nameWithType: IEnumerable<ProjectMetadata>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectMetadata>
  nameWithType: ICollection<ProjectMetadata>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
- uid: Microsoft.Build.Construction.ProjectItemElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectItemElement
  nameWithType: ProjectItemElement
  fullName: Microsoft.Build.Construction.ProjectItemElement
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata
  nameWithType: ProjectItem.GetMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue
  nameWithType: ProjectItem.GetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata
  nameWithType: ProjectItem.HasMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata
  nameWithType: ProjectItem.RemoveMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename
  nameWithType: ProjectItem.Rename
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue
  nameWithType: ProjectItem.SetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
